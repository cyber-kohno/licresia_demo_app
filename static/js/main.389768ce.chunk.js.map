{"version":3,"sources":["system/utils/dataUtil.tsx","system/redux/reducer.tsx","system/utils/theoryUtil.tsx","system/utils/backingUtil.tsx","system/utils/cacheUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/utils/instrumentsUtil.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/redux/store/state/dataHistory.tsx","system/contents/dialog/globalDialog.tsx","system/base/design/styles.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/dummyUtil.tsx","system/contents/score/manage/chordProg/progSearcher.tsx","system/contents/score/manage/chordProg/progStyle.tsx","system/contents/score/manage/chordProg/progUtil.tsx","system/contents/score/manage/chordProg/progCustomFrame.tsx","system/contents/score/manage/chordProg/progOutputFrame.tsx","system/contents/score/manage/chordProg/progTemplateFrame.tsx","system/contents/score/manage/chordProg/chordProgDialog.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/tool/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailAlter.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcAlter.tsx","system/contents/score/edit/harmonize/tool/chordEditor.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/side/sideFromStyles.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFormAlter.tsx","system/contents/score/edit/harmonize/side/minuteForm.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/harmSideForm.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/backing/pattern/builder/patternDetail.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternPedal.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternVelocity.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternOptions.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/initial/harmClipboard.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/melody/util/melodyTimelineMouseOperation.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/utils/validateUtil.tsx","system/contents/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_DOMAIN","queryType","sql","fetch","mode","method","headers","Accept","body","JSON","stringify","createQueryRequestInit","val","content","encodeURIComponent","zlib","gzipSync","toString","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","plainData","state","fileHandle","a","createWritable","writable","text","DataUtil","gZip","write","close","getFile","alert","window","showSaveFilePicker","types","accept","then","handle","catch","console","log","ActionType","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","getBeatProps","keyIndex","scale","beatSignature","beatMemoriCount","barBeatCnt","SYMBOL_LIST","beatLen","minute","bpm","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","root","index","isFlat","symbolKey","props","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","baseKeyIndex","TheoryUtil","KEY12_FLAT_LIST","KEY12_SHARP_LIST","ret","find","symbol","undefined","list","forEach","push","rootIndex","map","relation","divCount","Array","fill","table","channels","i","length","j","octave","structIndex","voicingList","struct","editorPattern","channelSize","layers","layer","divs","noteDivList","signals","record","cell","x","y","status","notesList","vels","velocityList","slice","pedals","pedalActs","pedal","divIndex","voicingStructs","size","channel","reverse","scoreLayers","scoreLayer","notes","item","interval","baseInfo","backing","pitchIndexList","chordTime","pattern","soundName","Math","floor","playHarmony","adjustRate","pedalList","total","timeList","div","start","normal","rate","isDot","div3","sustain","divTime","pedalInfo","end","timeInfo","timingAdj","timing","startTime","sustainTime","signal","k","notesTail","gain","velAdj","setTimeout","dispatcher","harmony","stop","isPreview","id","clearInterval","setState","getLimitLen","chordInfo","memoriCount","init","head","tail","getUsingLenFromDivs","reduce","prev","cur","len","checkOverlapBackLayer","hasError","limitLen","totalLen","layerIndex","channelIndex","baseLayer","backLayer","getDivRange","left","right","isOverlap","backLeft","backRight","note","includes","BackingUtil","CacheUtil","chordList","detail","elementCacheList","sectionCacheList","beatCacheList","scaleCacheList","tempoCacheList","measureCacheList","totalMinute","sectionNo","sectionBeatSum","pastSecond","curSecond","chordIndex","curMemoriCount","totalBarCount","totalMemoriCount","beatRangeMemoriCount","totalBeat","totalMemoriBarCount","scaleMemoriCount","tempoMemoriCount","addTempoRange","beatRate","beatProps","memoriCnt","element","prevBeat","prevMemoriCount","prevBarCount","prevMinute","fixed","labelName","beatSum","rangeIndexStart","rangeIndexEnd","prevBar","calcSustainMsec","barMemoriCount","dispBarCount","barCount","alterType","modRel","dommVal","keyAdj","tempoRel","tempoDiff","tempoRate","tempoAbs","bar","surplusBeat","curTotalMemori","reffers","score","setScoreState","notesCacheList","duration","pos","curMemori","range","info","posTime","pastLen","last","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","getSortetdNotesLen","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","instrument","soundfontPlayer","play","soundFullName","stopPreview","melody","adjustScrollX","previewHarmony","data","focusIndex","lastFocus","update","firstTime","getTimeInfoFromNotesPos","lenTime","pitch","pitchIndex","destIndex","isSolo","system","setReserveTasks","cacheList","cache","getSymbolFromKey","pitchList","getPitchListFromVoicing","playBacking","tableMouse","curChord","MelodyUtil","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","PATTERN_HEADER_HEIGHT","PATTERN_BODY_HEIGHT","NOTES_1BAR_WIDTH","Dispatcher","dispatch","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setInvalidate","saveFile","setPiano","setScoreTabIndex","scoreTabIndex","setKeySwitch","keySwitch","setScoreData","moveElement","isNext","sub","distIndex","moveDist","releaseRange","isTail","distHead","distTail","moveSection","curSectionIndex","curSectionInfo","curElementType","flashElement","incrementDegreeRoot","isUp","incrementBeatLen","updateHarmonizeCache","incrementMinuteVal","value","target","incrementMinuteValRelation","nearIndex","addChordElement","curBeatLen","on","splice","addSectionElement","addAlterElement","removeCurElement","copyElementList","parse","copiedElementList","cloneBacking","pasteElementList","incrementSymbol","setDiatonicChord","chord","DIATONIC_MAJOR_SCALE_LIST","DIATONIC_MINOR_SCALE_LIST","setDefaultBacking","getDefaultBacking","pastBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setInstrument","incrementCurPitch","isUpper","filter","dataHistory","add","scaleIndexList","MAJOR_SCALE_INTERVALS","normalLeft","scaleInfo","getKeyScaleFromNotesPos","scaleIndexies","prevPitchIndex","tempPitchIndex","adjustScrollY","moveFocus","updateCurChord","moveDestFocus","beatWidth","searchedChord","width","addNotes","focus","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","sort","b","posA","posB","undo","history","unshift","redo","next","openBackingEditor","chordBacking","hideMenu","voicingTable","getInitVoicingTable","patternProps","buildChannels","getChannels","convertEditorLayerFromScore","lenIndex","closeBackingEditor","getInitialLayer","col","isExist","voicing","mappingEditorToScore","editor","getVoicingListFromTable","buildPatternProps","addPatternColumn","lenList","curLen","newLen","column","updateErrorState","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","isPermitDot","getNotes","setNotes","incrementVel","after","deleteColumn","switchLayer","switchMode","testBacking","checkError","this","initialStore","userEnv","keyConfig","up","down","addChord","addSection","addChange","deleteCur","distMode","edit1","edit2","incRoot","decRoot","incBeat","decBeat","colorProps","entryBackground","dialog","isTune","initialBeat","sustainMode","chordMode","symbolMode","control","minHeadMode","minTailMode","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","timelineMouse","soundfontInfo","scaleMode","resize","move","shift","harmonize","measure","harmoniizeInvalidate","GloballDialog","useContext","GlobalContext","_Blind","onClick","styled","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isEnable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","_Label","ChannelContents","_Contents","CSS_BUTTON_DISABLE","TabbedPane","isDisable","disable","TabLabel","_TabLabel","TabContents","DummyUtil","condition","UNIT_LIST","beat","step","firstChord","secondChord","parseChord","source","args","split","baseBeat","Number","diatonicNo","charAt","option","beatChange","ProgSearcher","ProgStyle","CSS_LABEL_MIDIUM","select","STEP_LIST","getDefaultChord","label","blockList","elementList","block","ProgUtil","ProgCustomFrame","setStep","degreeFilters","setDegreeFilters","secCategory","setSecCategory","secNo","setSecNo","setFocusIndex","stepList","useMemo","getFilteredStepList","stepOptionJsxList","disp","degreeOptionJsxListArray","DEGREE_FILTER_LIST","unitList","search","jsx","dispUnitJsx","beatCycle","chordName","getDegreeRoot","divStr","_Span","isMatch","_ChordName","_ProgItem","progUnitList","progJsxList","SECTION_CATEGORY","SECTION_NO","secCatOptionJsxList","secNoOptionJsxList","degreeChangeAction","e","isEnableSectionForm","_Frame","_TitleLabel","_Combobox","onChange","stepChangeAction","_ListDiv","_ButtonDiv","_ExecutableButton","secNoStr","secName","insertProgUnit","_Record","RECORD_HEIGHT","span","ProgOutputFrame","blockJsxList","isFixed","inner","_FixedItem","_SectionItem","_ChordListDiv","_ChordItem","_ChordNameLabel","_ChordBeatDiv","jsxList","_BeatTip","getBeatTipsJsx","_Block","CSS_LABEL_SMALL","ProgTemplateFrame","templateJsxList","ChordProgDialog","buildMode","setBuildType","getBlankBlockList","outputUnits","setOutputUnits","beatFilter","setBeatFilter","closeAction","beatOptionJsxList","BEAT_DEF_LIST","chordDetail","createSwitchableButton","clickEvent","_SwitchableButton","beatComboboxEnable","distBeatFilter","_Header","getInitialBlockList","_MainDiv","_LeftDiv","_BeatFormDiv","beatChangeAction","_SwitchDiv","getSwitchContJsx","_RightDiv","_Footer","buildScoreData","HEADER_HEIGHT","BEAT_HEIGHT","ManageTab","file","setFile","tabIndex","modified","tempo","section","time","getStringFromDate","Date","lastModified","sectionNum","chordNum","fileInfo","scoreInfo","createLabelRecord","labelValue","_Recored","_ItemnLabel","_ItemnValue","searchLocalFileAction","showOpenFilePicker","fileContents","unZip","_Wrap","_ButtonsDiv","_Button","_Left","_ListInfoDiv","_Right","_DataInfoDiv","_ScoreInfoDiv","DATA_INFO_HEIGHT","SymbolEditor","curSymbol","baseSymbol","derives","getSymbolDerives","parentJsx","curJsx","childrenJsx","_Row","CalcChord","symbolName","chordRoot","getChordRoot","prevCache","isError","minuteStr","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","barRem","_Len","_Border","ElementDetailAlter","_Type","sign","getDetailInfo","ElementDetailChord","degreeRoot","degreeOn","isDiatonic","getDiatonicDegreeList","_Degree","isSwitch","isSustainMode","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Tip","lenType","valueType","abs","_TipItem","_Error","_Voicing","_Pattern","isCurrent","_Backing","ElementFixedBorder","isStart","ElementDetailInit","_Title","_Value","ElementDetailSection","CalcAlter","getType","prevKey","curKey","curCache","prevTempo","curTempo","curBeat","getDetail","ChordEditor","getChord","createRow","listJsx","rootName","ScoreElement","wrapRef","useRef","bodyRef","isFocus","isRange","isSameSection","wrap","current","elementJson","isInactive","ref","isSelectable","isAdditional","_Head","_CurKey","getDisplayKeyScaleName","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","HarmSections","sections","curSectionNo","_Total","HarmonizeUtil","previewMelody","clearTimeout","NoteKeyDown","config","isElement","previewCurHarmony","NoteBasicInput","test","baseVel","vel","backingEditorInput","NoteKeySwitch","isPress","min","max","_NumberForm","SideFormStyles","SideFormAlter","createAlertTypeItem","createModulateRelationItem","rel","createTempoRelationItem","createBeatItem","donmmItemJsxList","_ParamDiv","_ParamItem","keyAdjItemJsxList","_Group","_CategoryLabel","createNumberForm","currentTarget","valueAsNumber","___CSS_TITLE","___CSS_FORM","JUDGE_INFO_LIST","MinuteForm","rateMinus","ratePlus","isRed","JudgeJsxList","judge","_JudgeItem","setValue","createJudgeItem","isHead","_View","_ViewFrame","isLeft","_Judge","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","ROOT_ALL","isRootActive","isOnActive","MINOR_SCALE_INTERVALS","_RootItem","onContextMenu","symbolItemsJsx","_SymbolItem","createMinuteForm","_Timing","_BeatDiv","_Minute","_RootDiv","_SymbolDiv","SideFormInit","scaleItemJsxList","SCALE_DEF_LIST","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","splitList","_NumberItem","_DirectText","_SelectDiv","_TemplateFrame","_NumberFrame","input","_ItemBase","HarmSideForm","ChordInfo","scaleList","structJsxList","tipJsxList","getIntervalValues","_InfoItem","curIndex","isScale","isUse","isBlack","_Struct","WIDTH","PatternDetail","_DelayDiv","_TimingValue","_VelocityDiv","_VelFrame","_VelItem","VEL_DIV_WIDTH","PatternLength","itemJsxList","isEdit","PatternPedal","_Column","PatternTable","channelCount","curLayer","layerJsxList","jsxLsit","notesJsxLsit","setNotesStatus","_Notes","isBack","_State","isEven","isFront","_Layer","zIndex","PatternVelocity","PatternBuilder","useTotalLen","isLenOverError","memoriWidth","memoriJsxList","bean","thickness","height","color","_Memori","_LengthDiv","_MeasureDiv","_MemoriList","_ChordLenLine","_OverCover","_Body","ChannelItem","_Option","CHANNEL_MAX","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","soundIndex","_LayerItem","_ModeItem","proops","PatternOptions","createItem","callback","createRateItem","String","setRate","sizeJsxList","_ListItem","isPermit3ren","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","tableRow","selectedCell","editModeJsx","_WrapEdit","PatternFrame","isUsePattern","_UseSwitch","isUsePedal","_Main","_StatusDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","channelLimitNum","OCTAVE_NUM","STRUCT_NUM","rowJsxList","cellJsxList","isSelected","_Cell","isOver","soundfont","_TableRow","key12List","_StructItem","_EditorDiv","_StructDiv","_TableDiv","_InfoDiv","TIP_WIDTH","BackingEditorFrame","_PrevireBrind","_FooterDiv","HarmHideFrame","isOpen","isBackingEnable","HarmClipboard","_TypeDiv","MEMORI_WIDTH","HarmMeasure","dataList","_Margin","_Bar","beatJsxList","minuteJsxList","isChordFocus","curChordIndex","beatMemori","posMemori","_SustainItem","scrollPos","_ScrollFrame","_Blocks","_Measure","HarmonizeTab","harmMeasure","onKeyDown","onKeyUp","_SECTIONS","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_RIGHT_WIDTH","HARMONIZE_HEAD_WIDTH","MelodyTimelineMouseOperation","mouseDownEvent","timelineLength","button","rect","getBoundingClientRect","clientX","mouseMoveEvent","mouse","mouseUpEvent","scrollLeft","MelodyTimeline","measureRef","chordRef","barLength","measureJsxList","chordJsxList","minuteLen","scroll","clientWidth","symbolNmae","degreeName","_DegreeName","_ChordWrap","_MeasureWrap","_MeasureInner","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_MousePos","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","Soundfont","AudioContext","release","soundFontPlayer","QuantizeSwitch","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","getNextLeft","clientY","scrollTop","curPos","posX","lenWidth","newPos","prevFocus","MelodyInput","keyDownEvent","isSingle","keySwitchEvent","MelodyFrame","tableRef","pitchRef","setInvalidate2","scaleDivJsxList","divList","scaleJsxList","_ScaleLine","isBase","_ScaleList","notesJsxList","normalWidth","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_MouseLinePos","_MouseRange","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","_Test","editAnimation","keyframes","_MouseLine","TUNE_TIMELINE_WIDTH","_Scale","EditTab","preview","toggleEnsamble","_Mode","_Buttons","_Switch","_SwitchInner","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","items","degree","degreeRootName","chordRootName","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","remove","_NowLoading","_Copylight","fadeIn","ValidateUtil","str","conditions","LoginFrame","isCreate","setCreate","userId","setUserId","password","setPassword","passConfirm","setPassConfirm","isButtonEnable","checkAll","checkStringLength","createFormJsx","title","setter","_TextField","_TypeSwitch","sendQueryRequestToAPI","response","json","results","cnt","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","useCallback","Provider","App","document","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.389768ce.chunk.js","sourcesContent":["import zlib from \"zlib\";\r\nimport { ScoreState } from \"../redux/store/score/scoreState\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const API_DOMAIN = 'http://10.114.240.172:5000';\r\n    export const API_DOMAIN = 'http://localhost:5000';\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         // sampleテーブルから全カラムのデータをid順に取得\r\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\r\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\r\n\r\n    //         if (error) {\r\n    //             throw error;\r\n    //         }\r\n    //         if (data) {\r\n    //             console.log(data);\r\n    //         }\r\n    //     } catch (error: any) {\r\n    //         alert(error.message);\r\n    //     } finally {\r\n\r\n    //     }\r\n    // };\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(API_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    export const saveFile = (plainData: string, state: ScoreState) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.lcrs'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        const fileHandle = state.fileHandle;\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                state.fileHandle = fileHandle;\r\n                // this.score.setScoreState({ ...state });\r\n                const file = await fileHandle.getFile();\r\n                alert('saved successfully!');\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = handle;\r\n                    // this.score.setScoreState({ ...state });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataUtil;","import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n    SET_INVALIDATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n        case ActionType.SET_INVALIDATE:\r\n            store.invalidate = payload.invalidate;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature, Scale } from \"../redux/store/score/scoreData\";\r\n\r\nnamespace TheoryUtil {\r\n\r\n    export const MAJOR_SCALE_INTERVALS = [0, 2, 4, 5, 7, 9, 11];\r\n    export const MINOR_SCALE_INTERVALS = [0, 2, 3, 5, 7, 8, 10];\r\n\r\n    export const KEY12_FLAT_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n    export const KEY12_SHARP_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n    ];\r\n\r\n    export const DEGREE12_FLAT_LIST = [\r\n        'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n    ];\r\n    // export const DEGREE12_FLAT_LIST = [\r\n    //     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n    // ];\r\n    export const DEGREE12_SHARP_LIST = [\r\n        'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n    ];\r\n\r\n    export const KEY12_MAJOR_SCALE_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const KEY12_MINOR_SCALE_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const getDisplayKeyScaleName = (keyIndex: number, scale: Scale) => {\r\n        return scale === 'major' ? KEY12_MAJOR_SCALE_LIST[keyIndex] :\r\n            KEY12_MINOR_SCALE_LIST[keyIndex] + 'm';\r\n    }\r\n\r\n    export const SCALE_DEF_LIST = ['major', 'minor'] as const;\r\n    export const BEAT_DEF_LIST = ['2/4', '4/4', '3/4', '6/8', '9/8', '12/8'] as const;\r\n\r\n    export type IntervalRelation =\r\n        'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n        'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n        'd7' | 'm7' | 'M7'\r\n        ;\r\n\r\n    export type SymbolAttribute =\r\n        'triad' |\r\n        'seventh' |\r\n        'add9th'\r\n        ;\r\n\r\n    export type SymbolParams = {\r\n        key: SymbolKey;\r\n        name: string;\r\n        base: null | SymbolKey;\r\n        attr?: SymbolAttribute;\r\n        structs: IntervalRelation[];\r\n    }\r\n\r\n    export type BeatProps = {\r\n        // mol: number;\r\n        // den: number;\r\n        // 1拍のメモリ（16分音符）の数\r\n        beatMemoriCount: number;\r\n        // 1小節の拍数\r\n        barBeatCnt: number;\r\n    }\r\n\r\n    /**\r\n     * 拍子より拍情報を取得する\r\n     * @param beatSignature 拍子\r\n     * @returns 拍情報\r\n     */\r\n    export const getBeatProps = (beatSignature: BeatSignature): BeatProps => {\r\n        switch (beatSignature) {\r\n            case '4/4': return { beatMemoriCount: 4, barBeatCnt: 4 };\r\n            case '2/4': return { beatMemoriCount: 4, barBeatCnt: 2 };\r\n            case '3/4': return { beatMemoriCount: 4, barBeatCnt: 3 };\r\n            case '6/8': return { beatMemoriCount: 6, barBeatCnt: 2 };\r\n            case '9/8': return { beatMemoriCount: 6, barBeatCnt: 3 };\r\n            case '12/8': return { beatMemoriCount: 6, barBeatCnt: 4 };\r\n        };\r\n        // return {} as BeatProps;\r\n    }\r\n\r\n    /**\r\n     * 拍の長さからコードの持続時間をミリ秒で算出する\r\n     * @param beatLen \r\n     * @param minute \r\n     * @param bpm \r\n     * @param beatSignature \r\n     * @returns \r\n     */\r\n    export const calcSustainMsec = (beatLen: number, minute: number, bpm: number, beatSignature: BeatSignature): number => {\r\n        const beatMemoriCount = getBeatProps(beatSignature).beatMemoriCount;\r\n        const minuteLen = minute * (1 / beatMemoriCount);\r\n        return 60000 / bpm * (beatLen + minuteLen);\r\n    }\r\n\r\n\r\n    export type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\n    export type SymbolKey =\r\n        'major' |\r\n        'minor' |\r\n        'suspend4th' |\r\n        'diminish' |\r\n        'augument' |\r\n        'major-maj7th' |\r\n        'major-min7th' |\r\n        'minor-7th' |\r\n        'minor-maj7th' |\r\n        'sus4-7th' |\r\n        'diminish-7th' |\r\n        'augument-7th' |\r\n        'major-add9th' |\r\n        'minor-add9th' |\r\n        'sixth-9th' |\r\n        'minor-minus5' |\r\n        'minor7-minus5' |\r\n        'major-maj9th' |\r\n        'major-9th'\r\n        ;\r\n\r\n    export type DegreeProps = {\r\n        index: number;\r\n        isFlat: boolean;\r\n    };\r\n\r\n    export type ChordProps = {\r\n        root: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    };\r\n\r\n    export const SYMBOL_LIST: readonly SymbolParams[] = [\r\n        {\r\n            key: 'major', name: '',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor', name: 'm',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'suspend4th', name: 'sus4',\r\n            base: null,\r\n            structs: ['p1', 'p4', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish', name: 'dim',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish-7th', name: 'dim7',\r\n            base: 'diminish',\r\n            structs: ['p1', 'm3', 'd5', 'd7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'augument', name: 'aug',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'a5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'augument-7th', name: 'aug7',\r\n            base: 'augument',\r\n            structs: ['p1', 'M3', 'a5', 'm7']\r\n        },\r\n        {\r\n            key: 'minor-minus5', name: 'm(-5)',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor7-minus5', name: 'm7(-5)',\r\n            base: 'minor-minus5',\r\n            structs: ['p1', 'm3', 'd5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-maj7th', name: 'maj7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-min7th', name: '7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'minor-7th', name: 'm7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'sus4-7th', name: '7sus4',\r\n            base: 'suspend4th',\r\n            structs: ['p1', 'p4', 'p5']\r\n        },\r\n        {\r\n            key: 'minor-maj7th', name: 'mmaj7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-add9th', name: 'add9',\r\n            base: 'major',\r\n            structs: ['p1', 'M2', 'M3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'minor-add9th', name: 'madd9',\r\n            base: 'minor',\r\n            structs: ['p1', 'M2', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-maj9th', name: 'maj9',\r\n            base: 'major-maj7th',\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-9th', name: '9',\r\n            base: 'major-min7th',\r\n            structs: ['p1', 'm3', 'p5']\r\n        },\r\n    ];\r\n\r\n    /** インターバルの関係性 */\r\n    export const IntervalRelationProps = {\r\n        'p1': 0,\r\n        'm2': 1,\r\n        'M2': 2,\r\n        'm3': 3,\r\n        'M3': 4,\r\n        'p4': 5,\r\n        'd5': 6,\r\n        'p5': 7,\r\n        'a5': 8,\r\n        'm6': 8,\r\n        'M6': 9,\r\n        'd7': 9,\r\n        'm7': 10,\r\n        'M7': 11\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n    ];\r\n\r\n    export const DIATONIC_MINOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor-minus5' },\r\n        { root: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n    ];\r\n\r\n\r\n\r\n    export const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n        null,\r\n        { index: 0, isFlat: false },\r\n        { index: 1, isFlat: false },\r\n        { index: 1, isFlat: true },\r\n        { index: 2, isFlat: false },\r\n        { index: 3, isFlat: false },\r\n        { index: 3, isFlat: true },\r\n        { index: 4, isFlat: false },\r\n        { index: 5, isFlat: false },\r\n        { index: 6, isFlat: false },\r\n        { index: 6, isFlat: true },\r\n        { index: 7, isFlat: false },\r\n        { index: 8, isFlat: false },\r\n        { index: 8, isFlat: true },\r\n        { index: 9, isFlat: false },\r\n        { index: 10, isFlat: false },\r\n        { index: 10, isFlat: true },\r\n        { index: 11, isFlat: false }\r\n    ];\r\n\r\n    export const getDegreeRoot = (props: DegreeProps) => {\r\n        const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n        return list[props.index];\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰ', 'Ⅰmaj7',\r\n        'Ⅱm', 'Ⅱm7',\r\n        'Ⅲm', 'Ⅲm7',\r\n        'Ⅳ', 'Ⅳmaj7',\r\n        'Ⅴ', 'Ⅴ7',\r\n        'Ⅵm', 'Ⅵm7',\r\n        'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n    ];\r\n\r\n    export const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰm', 'Ⅰm7',\r\n        'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n        'bⅢ', 'bⅢM7',\r\n        'Ⅳm', 'Ⅳm7',\r\n        'Ⅴm', 'Ⅴm7',\r\n        'bⅥ', 'bⅥM7',\r\n        'bⅦ', 'bⅦ7'\r\n    ];\r\n\r\n    export const getDiatonicDegreeList = (scale: Scale) => {\r\n        return scale === 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES :\r\n            DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\r\n    }\r\n\r\n    export const getChordRoot = (props: DegreeProps, baseKeyIndex: number) => {\r\n        const list = props.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST;\r\n        return list[(baseKeyIndex + props.index) % 12];\r\n    }\r\n\r\n\r\n\r\n    export const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n        const ret = SYMBOL_LIST.find((symbol) => {\r\n            if (key === symbol.key) {\r\n                return symbol;\r\n            }\r\n        });\r\n        return ret != undefined ? ret : SYMBOL_LIST[0];\r\n    }\r\n\r\n    export const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n        let list: SymbolKey[] = [];\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (key === symbol.base) {\r\n                list.push(symbol.key);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n\r\n    export const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n        return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n    }\r\n}\r\n\r\nexport default TheoryUtil;\r\n\r\n","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport { BackingLayerData, BackingPatternProps, BackingSignalProps, ChordBacking, DetailInit, PedalInfo, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { playHarmony } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nexport namespace BackingUtil {\r\n\r\n    // オクターブの数\r\n    export const OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    export const STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    export const CHANNEL_MAX = 12;\r\n\r\n    export const getInitialRecord = (divCount: number) => {\r\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    export const buildChannels = (table: boolean[][]): BackingState.ChannelParam[] => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    export const getVoicingListFromTable = (table: boolean[][]) => {\r\n\r\n        const voicingList: VoicingProps[] = [];\r\n        // ボイシングを設定\r\n        if (table != null) {\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        voicingList.push({ octave: i, struct: j });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return voicingList;\r\n    }\r\n\r\n    export const buildPatternProps = (editorPattern: BackingState.Pattern): BackingPatternProps => {\r\n        const channelSize = editorPattern.channels.length;\r\n        const layers: BackingLayerData[] = [];\r\n        editorPattern.layers.forEach(layer => {\r\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\r\n            const signals: BackingSignalProps[] = [];\r\n            layer.table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        signals.push({ x: j, y: i, status: cell });\r\n                    }\r\n                });\r\n            });\r\n            layers.push({ divs, notesList: signals, vels: layer.velocityList.slice() });\r\n        });\r\n        const pedals: PedalInfo[] = [];\r\n        editorPattern.pedalActs.forEach((pedal, i) => {\r\n            if (pedal != null) pedals.push({\r\n                divIndex: i, action: pedal\r\n            });\r\n        });\r\n        return { channelSize, pedals, layers };\r\n    }\r\n\r\n    export const getChannels = (voicingStructs: BackingState.ChannelParam[], size: number) => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: BackingState.ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n\r\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\r\n\r\n        const layers: BackingState.Layer[] = [];\r\n        console.log(JSON.stringify(scoreLayers));\r\n        scoreLayers.forEach(scoreLayer => {\r\n            const table: (BackingState.NoteStatus | null)[][] = [];\r\n            for (let i = 0; i < channelSize; i++) {\r\n                const record: (BackingState.NoteStatus | null)[] = [];\r\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\r\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\r\n                    record.push(notes == null ? null : notes.status);\r\n                }\r\n                table.push(record);\r\n            }\r\n            layers.push({\r\n                noteDivList: scoreLayer.divs,\r\n                table,\r\n                velocityList: scoreLayer.vels\r\n            });\r\n        });\r\n        console.log(JSON.stringify(layers));\r\n        return layers;\r\n    }\r\n\r\n    export const getPitchListFromVoicing = (voicingList: VoicingProps[], rootIndex: number, symbol: TheoryUtil.SymbolParams) => {\r\n        return voicingList.map((item) => {\r\n            const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n            return 12 * item.octave + rootIndex + interval;\r\n        });\r\n    }\r\n\r\n    export const playBacking = (\r\n        store: Store,\r\n        reserveTasks: NodeJS.Timeout[],\r\n        baseInfo: DetailInit,\r\n        backing: ChordBacking,\r\n        pitchIndexList: number[],\r\n        chordTime: number\r\n    ) => {\r\n        if (backing.pattern == null) {\r\n            pitchIndexList.forEach((index) => {\r\n                const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                const octave = Math.floor(index / 12);\r\n                const soundFullName = soundName + octave;\r\n                playHarmony(soundFullName, store, chordTime / 1000, 5);\r\n            });\r\n        } else {\r\n\r\n            const bpm = baseInfo.bpm;\r\n            const beatProps = TheoryUtil.getBeatProps(baseInfo.beatSignature);\r\n            const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (2 / 3);\r\n\r\n            const pattern = backing.pattern;\r\n            // const pedalIndexes = pattern.pedals === undefined ? null : pattern.pedals.map(pedal => pedal.divIndex);\r\n\r\n            const pedalList: { start: number, end: number, action: BackingState.PedalAction }[] = [];\r\n            pattern.layers.forEach((layer, i) => {\r\n                // バッキング内で経過した時間（ノーツごとの開始時間）\r\n                let total = 0;\r\n                const timeList: {\r\n                    start: number, sustain: number\r\n                }[] = layer.divs.map(div => {\r\n                    /** 開始時間 */\r\n                    const start = 60000 / bpm * total;\r\n                    let normal = 4 / div.rate * adjustRate;\r\n                    if (div.isDot) normal *= 1.5;\r\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                    total += normal;\r\n                    return { start, sustain: 60000 / bpm * normal };\r\n                });\r\n\r\n                // ペダル状態のキャッシュを作成\r\n                if (i === 0 && pattern.pedals != undefined) {\r\n                    timeList.forEach((divTime, j) => {\r\n                        const pedalInfo = pattern.pedals?.find((pedal) => {\r\n                            if (j === pedal.divIndex) return pedal;\r\n                        });\r\n                        if (pedalInfo != undefined) {\r\n\r\n                            if (pedalList.length > 0) {\r\n                                pedalList[pedalList.length - 1].end = divTime.start;\r\n                            }\r\n                            pedalList.push({\r\n                                start: divTime.start,\r\n                                end: chordTime,\r\n                                action: pedalInfo.action\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                layer.notesList.forEach((notes) => {\r\n\r\n                    const timeInfo = timeList[notes.x];\r\n                    const timingAdj = notes.status.timing * (60000 / bpm * 1 / 32);\r\n                    const startTime = timeInfo.start + timingAdj;\r\n\r\n                    /** 持続時間 */\r\n                    let sustainTime = timeInfo.sustain;\r\n                    if(notes.status.signal === 's') {\r\n                        sustainTime *= 0.5;\r\n                    }\r\n\r\n                    //ペダルを検出\r\n                    for (let k = 0; k < pedalList.length; k++) {\r\n                        const pedal = pedalList[k];\r\n                        const notesTail = startTime + timeInfo.sustain;\r\n                        if (pedal.action !== 'off' && notesTail >= pedal.start &&\r\n                            notesTail <= pedal.end\r\n                        ) {\r\n                            // ペダルの持続時間で更新\r\n                            sustainTime = pedal.end - startTime;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    /** 音量 */\r\n                    let gain = layer.vels[notes.x] + notes.status.velAdj;\r\n                    if (gain < 1) gain = 1;\r\n                    if (gain > 10) gain = 10;\r\n                    gain *= 0.6;\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            const index = pitchIndexList[notes.y];\r\n                            const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                            const octave = Math.floor(index / 12);\r\n                            const soundFullName = soundName + octave;\r\n                            playHarmony(soundFullName, store, sustainTime / 1000, gain);\r\n                        }, startTime)\r\n                    );\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    export const stopPreview = (store: Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        store.instruments.harmony?.stop();\r\n        state.isPreview = false;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    export const getLimitLen = (chordInfo: BackingState.ChordInfo) => {\r\n        const minute = chordInfo.minute;\r\n        // 16分音符の長さで割る\r\n        const memoriCount = TheoryUtil.getBeatProps(chordInfo.init.beatSignature).beatMemoriCount;\r\n        const beatLen = chordInfo.beatLen;// * (memoriCount / 4)\r\n        const minuteLen = minute.head / memoriCount + minute.tail / memoriCount;\r\n        return (beatLen + minuteLen);\r\n    }\r\n\r\n    export const getUsingLenFromDivs = (divs: BackingState.NoteDiv[], chordInfo: BackingState.ChordInfo) => {\r\n        const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n        const adjustRate = 4 / beatProps.beatMemoriCount;\r\n        return divs.reduce((prev, cur) => {\r\n            let len = 1 / cur.rate * adjustRate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            return prev + len * 4;\r\n        }, 0);\r\n    }\r\n\r\n    export const checkError = (chordInfo: BackingState.ChordInfo, voicingList: VoicingProps[], pattern: null | BackingState.Pattern): boolean => {\r\n        let hasError = false;\r\n        if (pattern != null) {\r\n\r\n            // 選択しているボイシングがチャンネル数に満たない場合\r\n            if (voicingList.length < pattern.channels.length) hasError = true;\r\n\r\n            const limitLen = getLimitLen(chordInfo);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getUsingLenFromDivs(layer.noteDivList, chordInfo);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n\r\n            // 裏レイヤーのノーツと重なっている場合\r\n            pattern.layers[0].table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        if (checkOverlapBackLayer(pattern.layers, 0, i, j)) {\r\n                            hasError = true;\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkOverlapBackLayer = (layers: BackingState.Layer[], layerIndex: number, channelIndex: number, divIndex: number): boolean => {\r\n        const baseLayer = layers[layerIndex];\r\n        const backLayer = layers[layerIndex === 0 ? 1 : 0];\r\n        const [left, right] = getDivRange(baseLayer.noteDivList, divIndex);\r\n        // console.log(`left=${left}, right=${right}`);\r\n        let isOverlap = false;\r\n        for (let i = 0; i < backLayer.noteDivList.length; i++) {\r\n            if (backLayer.table[channelIndex][i] != null) {\r\n                const [backLeft, backRight] = getDivRange(backLayer.noteDivList, i);\r\n                if (right > backLeft && left < backRight) {\r\n                    isOverlap = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return isOverlap;\r\n    }\r\n\r\n    export const getDivRange = (divs: BackingState.NoteDiv[], divIndex: number): [number, number] => {\r\n        let [left, right] = [0, 0];\r\n\r\n        divs.slice(0, divIndex + 1).forEach((cur, i) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            left = right;\r\n            right += len * 4;\r\n        });\r\n        return [left, right];\r\n    }\r\n\r\n    export const isPermitDot = (note: BackingState.NoteDiv) => {\r\n        return [8, 4, 2].includes(note.rate) && note.div3 === 0;\r\n    }\r\n\r\n    export const isPermit3ren = (note: BackingState.NoteDiv) => {\r\n        return [8, 4].includes(note.rate) && !note.isDot;\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n/**\r\n * データを高速で参照するために、\r\n * 事前に計算したデータを保持するためのユーティリティを提供する\r\n */\r\nnamespace CacheUtil {\r\n\r\n    /**\r\n     * ハーモナイズのキャッシュを生成する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const updateHarmonizeCache = (store: Store, dispatcher: Dispatcher) => {\r\n        const chordList = store.scoreData.chordList;\r\n        const scoreState = store.scoreState;\r\n        const init = (chordList[0].detail as DetailInit);\r\n\r\n        const elementCacheList: ScoreCache.Element[] = [];\r\n        const sectionCacheList: ScoreCache.Section[] = [];\r\n        const beatCacheList: ScoreCache.BeatRange[] = [];\r\n        const scaleCacheList: ScoreCache.KeyScaleRange[] = [];\r\n        const tempoCacheList: ScoreCache.TempoRange[] = [];\r\n        const measureCacheList: ScoreCache.Measure[] = [];\r\n\r\n        // 初期値情報\r\n        let keyIndex = init.keyIndex;\r\n        let scale = init.scale;\r\n        let bpm = init.bpm;\r\n\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let sectionBeatSum = 0;\r\n        let pastSecond = 0;\r\n        let curSecond = 0;\r\n        let chordIndex = -1;\r\n        // let curTotalBeat = 0;\r\n        let curMemoriCount = 0;\r\n        let totalBarCount = 0;\r\n\r\n        // 経過した16分音符のカウント\r\n        let totalMemoriCount = 0;\r\n        let beatRangeMemoriCount = 0;\r\n        let totalBeat = 0;\r\n        let totalMemoriBarCount = 0;\r\n\r\n        //拍キャッシュの産出に使う変数\r\n        let beatSignature = init.beatSignature;\r\n\r\n        let scaleMemoriCount = 0;\r\n        let tempoMemoriCount = 0;\r\n\r\n        const addScaleRange = () => {\r\n            scaleCacheList.push({\r\n                keyIndex,\r\n                scale,\r\n                memoriCnt: scaleMemoriCount\r\n            });\r\n            scaleMemoriCount = 0;\r\n        }\r\n        const addTempoRange = () => {\r\n            tempoCacheList.push({\r\n                bpm,\r\n                beatRate: beatProps.beatMemoriCount / 4,\r\n                memoriCnt: tempoMemoriCount\r\n            });\r\n            tempoMemoriCount = 0;\r\n        }\r\n\r\n\r\n        let beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        chordList.forEach((element, i) => {\r\n\r\n            const prevBeat = totalBeat;\r\n            // ブロック頭のメモリ\r\n            const prevMemoriCount = totalMemoriCount;\r\n            // ブロック頭の小節\r\n            const prevBarCount = totalBarCount;\r\n            const prevMinute = totalMinute;\r\n            const type = element.type;\r\n\r\n            switch (type) {\r\n                // 固定要素ブロック\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        pastSecond += curSecond;\r\n                    }\r\n                } break;\r\n\r\n                // セクション要素ブロック\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                } break;\r\n\r\n                // コード要素ブロック\r\n                case 'chord': {\r\n                    pastSecond += curSecond;\r\n                    // curTotalBeat += curSustain;\r\n\r\n                    const detail = element.detail as DetailChord;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    totalMinute += minute;\r\n                    chordIndex++;\r\n\r\n                    curMemoriCount = detail.beatLen * beatProps.beatMemoriCount + minute;\r\n\r\n                    const prevBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    totalBeat += detail.beatLen;\r\n                    const curBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    // 小節が変わった場合、合計小節をインクリメント\r\n                    if (prevBar !== curBar) {\r\n                        totalBarCount++\r\n                    }\r\n\r\n                    // スケールキャッシュの長さを加算\r\n                    scaleMemoriCount += curMemoriCount;\r\n                    tempoMemoriCount += curMemoriCount;\r\n\r\n                    // 時間の計算\r\n                    curSecond = TheoryUtil.calcSustainMsec(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        bpm,\r\n                        beatSignature\r\n                    );\r\n\r\n                    // メモリの加算\r\n                    for (let j = 0; j < curMemoriCount; j++) {\r\n                        let rate: ScoreCache.MeasureRate = 16;\r\n                        if (beatRangeMemoriCount % beatProps.beatMemoriCount === 0) rate = 4;\r\n                        else if (beatRangeMemoriCount % (beatProps.beatMemoriCount / (beatProps.beatMemoriCount / 2)) === 0) rate = 8;\r\n\r\n                        const barMemoriCount = beatProps.barBeatCnt * beatProps.beatMemoriCount;\r\n\r\n                        let dispBarCount = -1;\r\n                        if (beatRangeMemoriCount % barMemoriCount === 0) {\r\n                            // 拍子セクションの合計メモリ数が小節のメモリ数で割り切れる場合、小節数を表示する\r\n                            totalMemoriBarCount++;\r\n                            dispBarCount = totalMemoriBarCount;\r\n                        }\r\n                        measureCacheList.push({ rate, barCount: dispBarCount });\r\n                        totalMemoriCount++;\r\n                        beatRangeMemoriCount++;\r\n                    }\r\n                } break;\r\n\r\n                // アルター要素ブロックする\r\n                case 'alter': {\r\n                    const detail = element.detail as DetailAlter;\r\n                    switch (detail.alterType) {\r\n                        // 音階が変わる\r\n                        case 'modulate': {\r\n                            addScaleRange();\r\n                            switch (detail.modRel) {\r\n                                case 'domm': {\r\n                                    keyIndex = (keyIndex + 24 + 7 * detail.dommVal) % 12;\r\n                                } break;\r\n                                case 'key': {\r\n                                    keyIndex = (keyIndex + 12 + detail.keyAdj) % 12;\r\n                                } break;\r\n                                case 'parallel': {\r\n                                    keyIndex = (keyIndex + 12 + (scale === 'major' ? -1 : 1) * 3) % 12;\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                                case 'relative': {\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // テンポが変わる\r\n                        case 'tempo': {\r\n                            addTempoRange();\r\n                            switch (detail.tempoRel) {\r\n                                case 'diff': {\r\n                                    bpm += detail.tempoDiff;\r\n                                } break;\r\n                                case 'rate': {\r\n                                    bpm = Math.floor(bpm * 1 * (detail.tempoRate / 100));\r\n                                } break;\r\n                                case 'abs': {\r\n                                    bpm = detail.tempoAbs;\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // 拍子が変わる\r\n                        case 'beat': {\r\n                            addTempoRange();\r\n                            // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n                            beatCacheList.push({\r\n                                beatSignature,\r\n                                memoriCnt: beatRangeMemoriCount\r\n                            });\r\n\r\n                            beatSignature = detail.beatSignature;\r\n                            // 拍を初期化する（拍変更後はいかなる場合も0から数える）\r\n                            totalBeat = 0;\r\n                            beatRangeMemoriCount = 0;\r\n\r\n                            beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n                        } break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n            // const pastSecond = 60000 / init.bpm * (prevBeat + prevMinute);\r\n            elementCacheList.push({\r\n                bar: prevBarCount,\r\n                surplusBeat: prevBeat % beatProps.barBeatCnt,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                scale,\r\n                bpm,\r\n                beatSignature,\r\n                sectionNo,\r\n                pastSecond,\r\n                chordIndex,\r\n                curTotalMemori: prevMemoriCount,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n        scaleCacheList.push({\r\n            keyIndex,\r\n            scale,\r\n            memoriCnt: scaleMemoriCount\r\n        });\r\n\r\n        beatCacheList.push({\r\n            beatSignature,\r\n            memoriCnt: beatRangeMemoriCount\r\n        });\r\n        addTempoRange(); \r\n\r\n        scoreState.elementCacheList = elementCacheList;\r\n        scoreState.sectionCacheList = sectionCacheList;\r\n        scoreState.beatCacheList = beatCacheList;\r\n        scoreState.tempoCacheList = tempoCacheList;\r\n        scoreState.scaleCacheList = scaleCacheList;\r\n        scoreState.measureCacheList = measureCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }\r\n\r\n\r\n    export const updateMelodyCache = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const notesList = store.scoreData.notesList;\r\n        const state = store.melodyState;\r\n\r\n        const notesCacheList: ScoreCache.NotesCache[] = [];\r\n\r\n        notesList.forEach((notes) => {\r\n            const startTime = 0;\r\n            const duration = 0;\r\n            notesCacheList.push({\r\n                startTime,\r\n                duration\r\n            });\r\n        });\r\n    }\r\n\r\n    export const getKeyScaleFromNotesPos = (pos: number, scaleCacheList: ScoreCache.KeyScaleRange[]) => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let range: ScoreCache.KeyScaleRange | null = null;\r\n        // console.log(`count: ${scaleCacheList.length}`);\r\n        for (let i = 0; i < scaleCacheList.length; i++) {\r\n            const info = scaleCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                range = scaleCacheList[i - 1];\r\n                break;\r\n            }\r\n            tail += info.memoriCnt;\r\n            // console.log(`curPos: ${tail}`);\r\n        }\r\n        // console.log(`curMemori: ${curMemori}`);\r\n        return range === null ? scaleCacheList[scaleCacheList.length - 1] : range;\r\n    }\r\n\r\n    /**\r\n     * ノーツを再生する開始時間と持続時間を産出して返す\r\n     * @param pos ノーツの位置\r\n     * @param len ノーツの長さ\r\n     * @param tempoCacheList テンポのキャッシュリスト\r\n     * @returns \r\n     */\r\n    export const getTimeInfoFromNotesPos = (pos: number, len: number, tempoCacheList: ScoreCache.TempoRange[]): [number, number] => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let posTime = 0;\r\n        let pastLen = 0;\r\n        let last: ScoreCache.TempoRange | null = null;\r\n        for (let i = 0; i < tempoCacheList.length; i++) {\r\n            const info = tempoCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                last = tempoCacheList[i - 1];\r\n                break;\r\n            }\r\n            const beatLen = info.memoriCnt / 4;\r\n            posTime += 60 / info.bpm * beatLen;\r\n            pastLen += beatLen;\r\n            tail += info.memoriCnt;\r\n        }\r\n        if (last === null) {\r\n            last = tempoCacheList[tempoCacheList.length - 1];\r\n        }\r\n\r\n        const beatLen = (pos - pastLen) * last.beatRate;\r\n        posTime += 60 / last.bpm * beatLen;\r\n\r\n        const lenTime = 60 / last.bpm * len * last.beatRate;\r\n\r\n        return [posTime, lenTime];\r\n    }\r\n}\r\n\r\nexport default CacheUtil;\r\n","import { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += notes.len4;\r\n    total += notes.len8 / 2;\r\n    total += notes.len16 / 4;\r\n    total += notes.len4div3 / 3;\r\n    total += notes.len8div3 / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    return getSortetdNotesLen({\r\n        len4: notes1.len4 + notes2.len4,\r\n        len8: notes1.len8 + notes2.len8,\r\n        len16: notes1.len16 + notes2.len16,\r\n        len4div3: notes1.len4div3 + notes2.len4div3,\r\n        len8div3: notes1.len8div3 + notes2.len8div3\r\n    });\r\n}\r\n\r\nexport const getSortetdNotesLen = (base: MelodyLength) => {\r\n\r\n    const len8div3Cnt3 = Math.floor(base.len8div3 / 3);\r\n    base.len8div3 -= len8div3Cnt3 * 3;\r\n    base.len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(base.len8div3 / 2);\r\n    base.len8div3 -= len8div3Cnt2 * 2;\r\n    base.len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(base.len4div3 / 3);\r\n    base.len4div3 -= len4div3Cnt3 * 3;\r\n    base.len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(base.len16 / 2);\r\n    base.len16 -= len16Cnt2 * 2;\r\n    base.len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(base.len8 / 2);\r\n    base.len8 -= len8Cnt2 * 2;\r\n    base.len4 += len8Cnt2;\r\n\r\n    return base;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n    return getSortetdNotesLen({\r\n        len4, len8, len16, len4div3, len8div3\r\n    });\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if (notes.len8div3 > 0) return 6;\r\n    else if (notes.len16 > 0) return 4;\r\n    else if (notes.len4div3 > 0) return 3;\r\n    else if (notes.len8 > 0) return 2;\r\n    else if (notes.len4 > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playHarmony = (soundFullName: string, store: Store, duration: number, gain: number) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, { gain, duration });\r\n    } else {\r\n        alert('null');\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nnamespace MelodyUtil {\r\n\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        state.isPreview = false;\r\n        // state.focusIndex = state.lastFocus;\r\n        // state.distIndex = state.focusIndex;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        // store.instruments.sampler.releaseAll();\r\n        dispatcher.melody.setState(state);\r\n        dispatcher.melody.adjustScrollX();\r\n    }\r\n    \r\n    /**\r\n     * プレビュー再生を開始する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const reserveTasks: NodeJS.Timeout[] = [];\r\n        const instrument = store.instruments.soundfontPlayer;\r\n\r\n        // 開始するフォーカス（非選択時は最初から）\r\n        const start = state.focusIndex === -1 ? 0 : state.focusIndex;\r\n\r\n        // プレビュー開始時のフォーカスを保持する\r\n        state.lastFocus = state.focusIndex;\r\n        state.isPreview = true;\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = start; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n                    \r\n                    // dispatcher.tune.setState(state);\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                        dispatcher.melody.adjustScrollX();\r\n                        // dispatcher.melody.setState(state);\r\n                    }, 0);\r\n                }, (posTime - firstTime) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (posTime - firstTime + lenTime) * 1000)\r\n                );\r\n            }\r\n        }\r\n\r\n        // ハーモニーを再生\r\n        if (!state.isSolo) {\r\n            previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n\r\n        dispatcher.system.setReserveTasks(reserveTasks);\r\n        dispatcher.melody.setState(state);\r\n    }\r\n\r\n    const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        const update = store.invalidate.melody as () => void;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = 3; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                if (cache.pastSecond < start) continue;\r\n\r\n                const detail = element.detail as DetailChord;\r\n\r\n                if (detail.root == null) return;\r\n\r\n                const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n                // const chordTime = 60 / cache.bpm * len;\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const chordTime = TheoryUtil.calcSustainMsec(\r\n                    detail.beatLen,\r\n                    minute,\r\n                    cache.bpm,\r\n                    cache.beatSignature\r\n                );\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // sampler.releaseAll();\r\n                        // stopPiano(store);\r\n\r\n                        // const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                        // const div = pickingDelay / pitchList.length;\r\n\r\n                        // pitchList.forEach((index, j) => {\r\n                        //     const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        //     const octave = Math.floor(index / 12);\r\n                        //     const soundFullName = soundName + octave;\r\n                        //     playPiano(soundFullName, store, chordTime);\r\n                        // });\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n                        setTimeout(() => {\r\n                            store.melodyState.tableMouse.curChord = element;\r\n                            update();\r\n                            // dispatcher.melody.setState(store.melodyState);\r\n                        }, 0);\r\n                    }, cache.pastSecond - start - adjsut)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const chordList = store.scoreData.chordList;\r\n        const init = chordList[0].detail as DetailInit;\r\n        const curChord = state.tableMouse.curChord;\r\n        const reserveTasks = store.reserveTasks;\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n            // const chordTime = 60 / init.bpm * len;\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const chordTime = TheoryUtil.calcSustainMsec(\r\n                    detail.beatLen,\r\n                    minute,\r\n                    init.bpm,\r\n                    init.beatSignature\r\n                );\r\n\r\n            BackingUtil.playBacking(store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.melody.setState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.melody.setState(state);\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyUtil;","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailAlter, DetailChord, DetailInit, DetailSection, Scale, ScoreData, TuneNotes, VoicingProps } from \"../store/score/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/score/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/score/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport MelodyUtil, { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\nimport { Invalidate } from \"../store/invalidate\";\r\nimport BackingState from \"../store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport CacheUtil from \"../../utils/cacheUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        },\r\n\r\n        setInvalidate: (invalidate: Invalidate) => {\r\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        saveFile: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const options = {\r\n                types: [\r\n                    {\r\n                        accept: {\r\n                            'text/plain': ['.lcrs'],\r\n                        },\r\n                    },\r\n                ],\r\n            };\r\n            const fileHandle = state.fileHandle;\r\n            if (fileHandle != null) {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await fileHandle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(JSON.stringify(data));\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = fileHandle;\r\n                    this.score.setScoreState({ ...state });\r\n                    const file = await fileHandle.getFile();\r\n                    alert('saved successfully!');\r\n                })();\r\n            } else {\r\n                window.showSaveFilePicker(options).then((handle) => {\r\n                    (async () => {\r\n                        //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                        const writable = await handle.createWritable();\r\n                        //テキストデータの書き込み\r\n                        const text = DataUtil.gZip(JSON.stringify(data));\r\n                        await writable.write(text);\r\n                        //ファイルを閉じる\r\n                        await writable.close();\r\n                        state.fileHandle = handle;\r\n                        this.score.setScoreState({ ...state });\r\n                    })();\r\n                }).catch(() => {\r\n                    console.log('キャンセルされました');\r\n                });\r\n            }\r\n        },\r\n\r\n        setPiano: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, harmony: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                state.distIndex = state.focusIndex;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n        moveDist: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.distIndex + sub].type !== 'fixed') {\r\n                state.distIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n            state.focusIndex = !isTail ? distHead : distTail;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        flashElement: (index: number) => {\r\n            // const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[index];\r\n\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n\r\n            // bodyRef.style.backgroundColor = '#ffef5f';\r\n            // setTimeout(() => {\r\n            //     bodyRef.style.backgroundColor = '';\r\n            // }, 10);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                if (isUp) {\r\n                    detail.root = { index: 0, isFlat: false };\r\n                    this.score.setScoreData(data);\r\n                    this.score.flashElement(state.focusIndex);\r\n                }\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            } else if (detail.root.index + sub === -1) {\r\n                detail.root = null;\r\n                detail.symbolKey = 'major';\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                setTimeout(() => {\r\n                    CacheUtil.updateHarmonizeCache(this.store, this);\r\n                }, 1);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -2 && target <= 2) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                CacheUtil.updateHarmonizeCache(this.store, this);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[state.focusIndex];\r\n\r\n            // 拍の初期値を取得\r\n            const beatSignature = state.elementCacheList[state.focusIndex].beatSignature;\r\n            const initialBeat = TheoryUtil.getBeatProps(beatSignature).barBeatCnt;\r\n            let curBeatLen = initialBeat;\r\n            if (cur.type === 'chord') {\r\n                const curChord = cur.detail as DetailChord;\r\n                // 後にシンコペーションが設定されている場合は追加できない\r\n                if (curChord.minute.tail != 0) return;\r\n\r\n                curBeatLen = curChord.beatLen;\r\n            }\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: curBeatLen,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null,\r\n                        hasError: false\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        addAlterElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'alter', detail: {\r\n                    alterType: null,\r\n                    modRel: null,\r\n                    dommVal: 0,\r\n                    keyAdj: 0,\r\n                    tempoRel: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbs: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailAlter\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                const sectionNo = this.store.scoreState.elementCacheList[i].sectionNo;\r\n                // 先頭のセクション要素が含まれている場合削除しない\r\n                if (element.type === 'section' && sectionNo === 0) {\r\n                    return;\r\n                }\r\n            }\r\n            data.chordList.splice(distHead, (distTail - distHead) + 1);\r\n            this.score.setScoreData(data);\r\n            state.focusIndex = distHead - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // // reffer.style.width = '300px';\r\n            // wrapRef.style.opacity = '0';\r\n            // wrapRef.style.overflow = 'hidden';\r\n            // // wrapRef.style.padding = '0';\r\n            // wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '0';\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.opacity = '';\r\n            //     wrapRef.style.width = '';\r\n            //     wrapRef.style.overflow = '';\r\n            //     // wrapRef.style.padding = '';\r\n            //     const data = this.store.scoreData;\r\n            //     data.chordList.splice(state.focusIndex, 1);\r\n            //     this.score.setScoreData(data);\r\n            //     state.focusIndex--;\r\n            //     this.score.setScoreState(state);\r\n            //     // setTimeout(() => {\r\n            //     //     reffer.style.opacity = '';\r\n            //     //     reffer.style.width = '';\r\n            //     //     const data = this.store.scoreData;\r\n            //     //     data.chordList.splice(state.focusIndex, 1);\r\n            //     //     this.score.setScoreData(data);\r\n            //     // }, 200);\r\n            // }, 200);\r\n        },\r\n\r\n        copyElementList: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            const list: ChordElement[] = [];\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                list.push(JSON.parse(JSON.stringify(element)));\r\n            }\r\n            console.log(list.length);\r\n            state.copiedElementList = list;\r\n            state.cloneBacking = null;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        pasteElementList: () => {\r\n            const state = this.store.scoreState;\r\n\r\n            const data = this.store.scoreData;\r\n            const list = state.copiedElementList;\r\n            if (list == null) return;\r\n\r\n            console.log(list.length);\r\n            list.forEach((element, i) => {\r\n                data.chordList.splice(state.focusIndex + 1 + i, 0, element);\r\n            });\r\n            this.score.setScoreData(data);\r\n            state.focusIndex++;\r\n            state.distIndex = state.focusIndex + list.length - 1;\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (scale: Scale, keyIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const scaleList = scale === 'major' ? TheoryUtil.DIATONIC_MAJOR_SCALE_LIST : TheoryUtil.DIATONIC_MINOR_SCALE_LIST;\r\n            const chord = scaleList[keyIndex];\r\n            detail.root = { ...chord.root };\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        cloneBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n        },\r\n\r\n        pastBacking: () => {\r\n            const state = this.store.scoreState;\r\n            if (state.cloneBacking != null) {\r\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n                const data = this.store.scoreData;\r\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    /**\r\n     * メロディ画面のディスパッチ\r\n     */\r\n    public melody = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        /**\r\n         * 全てのノーツを選択する\r\n         */\r\n        allSelect: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = notesList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * 選択中のノーツの音程を変更する\r\n         * @param isUpper\r\n         * @param mode \r\n         * @returns \r\n         */\r\n        incrementCurPitch: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n            const scoreState = this.store.scoreState;\r\n            const state = this.store.melodyState;\r\n            const focusIndex = state.focusIndex;\r\n            const distIndex = state.destIndex;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            // フォーカスされていない場合は処理しない\r\n            if (focusIndex === -1) return;\r\n\r\n            if (focusIndex !== distIndex) {\r\n\r\n                const targetList = notesList.filter(\r\n                    (notes, i) => i >= focusIndex && i <= distIndex\r\n                );\r\n\r\n                targetList.forEach(notes => {\r\n                    notes.pitchIndex += 1 * (isUpper ? -1 : 1);\r\n\r\n                    // 履歴を作成\r\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                    this.melody.setNotesList(notesList.slice());\r\n                });\r\n            } else {\r\n                const cur = notesList[focusIndex];\r\n                // const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n                const scaleIndexList = TheoryUtil.MAJOR_SCALE_INTERVALS;\r\n                const normalLeft = getNormalizeLenFromNotes(cur.pos);\r\n                const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n                const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n\r\n                const prevPitchIndex = cur.pitchIndex;\r\n                const interval = mode !== 'octave' ? 1 : 12;\r\n                let tempPitchIndex = cur.pitchIndex;\r\n\r\n                while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                    tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                    if (mode !== 'scale' ||\r\n                        (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                    ) {\r\n                        cur.pitchIndex = tempPitchIndex;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // 値が変わっていた場合のみ処理する\r\n                if (prevPitchIndex !== cur.pitchIndex) {\r\n                    playSoundfont(cur.pitchIndex, this.store);\r\n                    // 履歴を作成\r\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                    this.melody.setNotesList(notesList.slice());\r\n\r\n                    this.melody.adjustScrollY();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * キースイッチを設定する\r\n         * @param keySwitch \r\n         */\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         */\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        /**\r\n         * 複数選択From～ToのToを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         * @returns \r\n         */\r\n        moveDestFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.destIndex > 0 : state.destIndex < notesList.length - 1) {\r\n                state.destIndex += (isNext ? 1 : -1);\r\n                this.melody.setState(state);\r\n            }\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツのエリアのコードを更新する\r\n         * @param focusIndex ノーツのフォーカス\r\n         */\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.tableMouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスの後ろに新しいノーツを追加する\r\n         * @returns \r\n         */\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const focus = state.focusIndex;\r\n            if (focus === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[focus];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = focus === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            // 新しい要素の位置\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(focus + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツを削除する\r\n         */\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            // 履歴を作成\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n            // 対象の開始と終了のインデックスを取得\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            // 削除する個数\r\n            const delNum = end - start + 1;\r\n            notesList.splice(start, delNum);\r\n            this.melody.setNotesList(notesList);\r\n            // 削除後は対象の開始インデックスの１つ前を選択\r\n            state.focusIndex = start - 1;\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * 複数選択を解除する\r\n         * @param isTail 解除時複数選択のどこにフォーカスを移すか（trueの場合終端を選択）\r\n         */\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            state.focusIndex = (!isTail ? start : end);\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            const distIndex = state.destIndex;\r\n            const focusIndex = state.focusIndex;\r\n\r\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\r\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n\r\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\r\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\r\n\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 移動可能かを判定\r\n            if (condition) {\r\n                for (let i = start; i <= end; i++) {\r\n                    const cur = notesList[i];\r\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                }\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        firstNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n                this.melody.adjustScrollX();\r\n                // this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.destIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            // if (state.focusIndex === -1) return;\r\n\r\n            MelodyUtil.previewStart(this.store, this);\r\n        },\r\n\r\n        copyNotes: () => {\r\n\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const num = focusEnd - focusStart + 1;\r\n\r\n            const cloneNotesList: TuneNotes[] = [];\r\n            const base = notesList[focusStart].pos;\r\n            const baseUnit = getMinimumLenUnit(base);\r\n            for (let i = 0; i < num; i++) {\r\n                const notes = notesList[i + focusStart];\r\n                const unit = getMinimumLenUnit(notes.pos);\r\n                const useUnit = baseUnit > unit ? baseUnit : unit;\r\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\r\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\r\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\r\n                console.log(JSON.stringify(pos));\r\n                cloneNotesList.push({\r\n                    pitchIndex: notes.pitchIndex,\r\n                    pos,\r\n                    len: { ...notes.len }\r\n                });\r\n            }\r\n            state.cloneNotesList = cloneNotesList;\r\n            // notesList.splice(state.focusIndex, num);\r\n            // this.tune.setNotesList(notesList);\r\n            // state.focusIndex = focusStart - 1;\r\n            // state.distIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            // alert(JSON.stringify(state.cloneNotesList));\r\n        },\r\n\r\n        pasteNotes: () => {\r\n            // alert('pasteNotes');\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const pastList: TuneNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\r\n            pastList.forEach(notes => {\r\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\r\n            });\r\n            // ペーストするノーツの最後（右端）の要素\r\n            const pastLast = pastList[pastList.length - 1];\r\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList = notesList.concat(pastList);\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                data.notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                this.score.setScoreData(data);\r\n\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex + pastList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            // this.tune.adjustScrollX();\r\n        },\r\n\r\n        undo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`undo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const prev = history.undo();\r\n            if (prev != null) {\r\n                if (history.cur === 0) {\r\n                    console.log('first undo');\r\n                    history.list.unshift(JSON.stringify(data.notesList));\r\n                    history.cur = 1;\r\n                }\r\n                data.notesList = JSON.parse(prev);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`undo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        },\r\n\r\n        redo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`redo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const next = history.redo();\r\n            if (next != null) {\r\n                data.notesList = JSON.parse(next);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`redo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordBacking = detail.backing;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n\r\n            let pattern: BackingState.Pattern | null = null;\r\n            if (chordBacking.pattern != null) {\r\n                const patternProps = chordBacking.pattern;\r\n                const voicingStructs = BackingUtil.buildChannels(voicingTable);\r\n                const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\r\n                const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);\r\n                let pedalActs: (null | BackingState.PedalAction)[] = [];\r\n                if (patternProps.pedals != undefined) {\r\n                    for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\r\n                        const pedal = patternProps.pedals.find(pedal => {\r\n                            if (pedal.divIndex === i) return pedal;\r\n                        });\r\n                        if (pedal == undefined) pedalActs.push(null);\r\n                        else pedalActs.push(pedal.action);\r\n                    }\r\n                } else {\r\n                    for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\r\n                        if (i === 0) pedalActs.push('on');\r\n                        else pedalActs.push(null);\r\n                    }\r\n                }\r\n                pattern = {\r\n                    channelIndex: -1,\r\n                    lenIndex: 0,\r\n                    mode: 'velocity',\r\n                    layerIndex: 0,\r\n                    channels,\r\n                    layers,\r\n                    pedalActs\r\n                };\r\n            }\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    root: (detail.root as TheoryUtil.DegreeProps),\r\n                    on: (detail.on),\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    symbolKey: detail.symbolKey,\r\n                    init: { ...cache }\r\n                },\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false,\r\n                hasError: chordBacking.hasError\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n            setTimeout(() => {\r\n                this.backing.setState(null);\r\n            }, 50);\r\n        },\r\n\r\n        setState: (backingState: null | BackingState.Editor) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingState.Layer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingState.Layer;\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const isExist = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = isExist != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        /**\r\n         * エディタで設定したバッキング情報を譜面データに反映\r\n         */\r\n        mappingEditorToScore: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n\r\n            detail.backing = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                hasError: editor.hasError\r\n            };\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const curLen = lenList[pattern.lenIndex];\r\n            const newLen: BackingState.NoteDiv = { rate: curLen.rate, div3: curLen.div3, isDot: curLen.isDot };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.noteDivList = lenList.slice();\r\n\r\n            // テーブル追加\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n\r\n            // ベロシティ追加\r\n            layer.velocityList.splice(pattern.lenIndex + 1, 0, 5);\r\n\r\n            // ペダル追加\r\n            if (pattern.layerIndex === 0) {\r\n                pattern.pedalActs.splice(pattern.lenIndex + 1, 0, null);\r\n            }\r\n\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            cur.isDot = false;\r\n            cur.div3 = 0;\r\n            layer.noteDivList = layer.noteDivList.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            if (BackingUtil.isPermitDot(cur)) {\r\n                cur.isDot = !cur.isDot;\r\n                layer.noteDivList = layer.noteDivList.slice();\r\n                this.backing.setState(state);\r\n                this.backing.updateErrorState();\r\n            }\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: BackingState.NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            layer.table = layer.table.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        incrementVel: (value: number) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const after = layer.velocityList[pattern.lenIndex] + value;\r\n            if (after >= 1 && after <= 10) {\r\n                layer.velocityList[pattern.lenIndex] = after;\r\n                this.backing.setState(state);\r\n            }\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            // 2つ以上要素がないと消せない\r\n            if (layer.noteDivList.length >= 2) {\r\n                layer.noteDivList.splice(pattern.lenIndex, 1);\r\n                layer.table.forEach((column) => {\r\n                    column.splice(pattern.lenIndex, 1);\r\n                });\r\n                layer.velocityList.splice(pattern.lenIndex, 1);\r\n                // for(let i = 0; i < pattern.channels.length; i ++) {\r\n                //     layer.table[i].splice(pattern.lenIndex, 1);\r\n                // }\r\n                if (pattern.layerIndex === 0) {\r\n                    // 終端までnullで更新\r\n                    if (pattern.lenIndex < pattern.pedalActs.length - 1) {\r\n                        for (let j = pattern.lenIndex + 1; j < pattern.pedalActs.length; j++) {\r\n                            pattern.pedalActs[j] = null;\r\n                        }\r\n                    }\r\n                    pattern.pedalActs.splice(pattern.lenIndex, 1);\r\n                }\r\n\r\n                if (pattern.lenIndex > 0) {\r\n                    pattern.lenIndex--;\r\n                }\r\n                this.backing.setState(state);\r\n            }\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n        /**\r\n         * 左右レイヤーを切り替える\r\n         */\r\n        switchLayer: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        /**\r\n         * 音量orペダルのモードを切り替える\r\n         */\r\n        switchMode: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            if (pattern.mode === 'velocity') pattern.mode = 'pedal';\r\n            else if (pattern.mode === 'pedal') pattern.mode = 'velocity';\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        /**\r\n         * バッキングのプレビュー再生をする\r\n         */\r\n        testBacking: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const reserveTasks = this.store.reserveTasks;\r\n            const chordInfo = editor.chordInfo;\r\n            const init = chordInfo.init;\r\n\r\n            const rootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n            const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n            // const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\r\n            // const chordTime = 60 / init.bpm * len;\r\n\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                chordInfo.beatLen,\r\n                chordInfo.minute.head + chordInfo.minute.tail,\r\n                init.bpm,\r\n                init.beatSignature\r\n            );\r\n            const backing: ChordBacking = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                hasError: false\r\n            };\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n            BackingUtil.playBacking(this.store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                editor.isPreview = false;\r\n                this.backing.setState(editor);\r\n            }, chordTime));\r\n\r\n            editor.isPreview = true;\r\n            this.backing.setState(editor);\r\n        },\r\n\r\n        updateErrorState: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const voicingList = BackingUtil.getVoicingListFromTable(editor.voicingTable);\r\n            editor.hasError = BackingUtil.checkError(editor.chordInfo, voicingList, editor.pattern);\r\n            this.backing.setState(editor);\r\n        }\r\n    }\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport Soundfont from 'soundfont-player';\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: TheoryUtil.SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null,\r\n        hasError: false\r\n    };\r\n    return backing;\r\n}","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./score/scoreData\"\r\nimport { ScoreState } from \"./score/scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./score/melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { Invalidate } from \"./invalidate\"\r\nimport DataHistory from \"./state/dataHistory\"\r\nimport BackingState from \"./score/backing/backingState\"\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState.Editor;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n\r\n    invalidate: Invalidate;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 2,\r\n        scoreTabIndex: 0,\r\n        dialog: null\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        fileHandle: null,\r\n        isTune: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        scaleCacheList: [],\r\n        tempoCacheList: [],\r\n        beatCacheList: [],\r\n        measureCacheList: [],\r\n        keySwitch: {\r\n            distMode: false,\r\n            sustainMode: false,\r\n            chordMode: false,\r\n            symbolMode: false,\r\n            control: false,\r\n            minHeadMode: false,\r\n            minTailMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneBacking: null,\r\n        copiedElementList: null,\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        destIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 4,\r\n        beatWidth: 120,\r\n        tableMouse: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        timelineMouse: {\r\n            pos: -1,\r\n            isPut: false,\r\n            lock: -1,\r\n            width: 0,\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 5\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false,\r\n            control: false,\r\n        },\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneNotesList: [],\r\n\r\n        dataHistory: new DataHistory(),\r\n        notesCacheList: []\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        // sampler: getDefaultSampler(),\r\n        harmony: null,\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: [],\r\n    invalidate: {\r\n        harmoniizeInvalidate: {},\r\n        harmonize: null,\r\n        melody: null\r\n    },\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note: {\r\n        left: string;\r\n        right: string;\r\n        up: string;\r\n        down: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        distMode: string;\r\n        edit1: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        edit2: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = (): KeyConfig => {\r\n    return {\r\n        note: {\r\n            left: 'ArrowLeft',\r\n            right: 'ArrowRight',\r\n            up: 'ArrowUp',\r\n            down: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'm',\r\n            deleteCur: 'Delete',\r\n            distMode: 'Shift',\r\n            edit1: 'f',\r\n            edit2: 'c',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n        }\r\n    };\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","\r\n\r\nclass DataHistory {\r\n\r\n    cur: number;\r\n    list: string[];\r\n\r\n    constructor() {\r\n        this.cur = -1;\r\n        this.list = [];\r\n    }\r\n\r\n\r\n    add(data: string) {\r\n        // console.log(`add start ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n        // if (this.list[this.cur] === data) {\r\n        //     console.log('same...');\r\n        //     return;\r\n        // }\r\n        if (this.cur > -1) {\r\n            this.list.splice(0, this.cur + 1);\r\n            this.cur = -1;\r\n            console.log('restert');\r\n        }\r\n        this.list.unshift(data);\r\n        // console.log(`add end ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n    }\r\n\r\n    undo(): null | string {\r\n        let ret = null;\r\n        if (this.cur < this.list.length - 1) {\r\n            this.cur++;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    redo(): null | string {\r\n        let ret = null;\r\n        if (this.cur > 0) {\r\n            this.cur--;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const dialog = store.systemState.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.systemState.dialog = null;\r\n            dispatcher.system.setState(store.systemState);\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n    \r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 22px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","namespace DummyUtil {\r\n\r\n    export const SECTION_CATEGORY = ['Section', 'Intro', 'A', 'B', 'C', 'D', 'Outro'];\r\n    export const SECTION_NO = ['', '1', '2', '3', '4', '5', '6'];\r\n}\r\n\r\nexport default DummyUtil;","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\nnamespace ProgSearcher {\r\n\r\n    export type ChordItemBean = {\r\n        root: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n        beatLen: number;\r\n    }\r\n\r\n    export type UnitBean = {\r\n        condition: Condition;\r\n        chordList: ChordItemBean[];\r\n    }\r\n\r\n    /**\r\n     * ダイアトニックスケールの連番でコードを指定する\r\n     * @param scaleIndex スケールの連番\r\n     * @param beatLen 拍\r\n     */\r\n    const getDiatonicChord = (scaleIndex: number, beatLen: number): ChordItemBean => {\r\n        const chord = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        return { root: { index: chord.root.index, isFlat: false }, symbolKey: chord.symbolKey, beatLen };\r\n    }\r\n\r\n    export type Condition = {\r\n        beat: BeatSignature;\r\n        step: number;\r\n        firstChord: ProgUtil.DegreeFilter;\r\n        secondChord: ProgUtil.DegreeFilter;\r\n    }\r\n\r\n    /**\r\n     * コード進行を検索する\r\n     * @param condition \r\n     * @returns フィルターしたリスト\r\n     */\r\n    export const search = (condition: Condition) => {\r\n        console.log(JSON.stringify(condition));\r\n        return UNIT_LIST.filter((unit) => (\r\n            (unit.condition.beat === condition.beat) &&\r\n            (condition.step === 0 || unit.condition.step === condition.step) &&\r\n            (condition.firstChord === '' || unit.condition.firstChord === condition.firstChord) &&\r\n            (condition.secondChord === '' || unit.condition.secondChord === condition.secondChord)\r\n        ));\r\n    }\r\n\r\n    const parseChord = (source: string): ChordItemBean[] => {\r\n        const args = source.split('@');\r\n        const baseBeat = Number(args[0]);\r\n        const script = args[1];\r\n        const list = script.split(' ');\r\n        return list.map((value)=> {\r\n            const diatonicNo = Number(value.charAt(0)) - 1;\r\n            const option = value.charAt(1);\r\n            const beatChange = value.charAt(2);\r\n\r\n            const chord = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[diatonicNo];\r\n            switch(option) {\r\n                case '_': break;\r\n            };\r\n            const beatLen = beatChange === '' ? baseBeat : Number(beatChange);\r\n            const chordItem: ChordItemBean = {\r\n                root: chord.root, symbolKey: chord.symbolKey, beatLen\r\n            }\r\n            return chordItem;\r\n        });\r\n    }\r\n\r\n    const UNIT_LIST: UnitBean[] = [\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@1 5 6 3 4 1 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@1 5 6 3 4 3 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@1 5 6 5 4 1 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@1 5 6 4 1 5 6 4')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('4@1 4 5 6 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('4@1 6 2 5 1 6 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('4@1 6 4 5 1 6 4 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@4 5 3 6 4 5 3 6')\r\n        },\r\n    ];\r\n}\r\n\r\nexport default ProgSearcher;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\n\r\nnamespace ProgStyle {\r\n\r\n\r\n    /** 実行ボタン */\r\n    export const _TitleLabel = styled.div<{\r\n    }>`\r\n        ${Styles.CSS_LABEL_MIDIUM};\r\n        background-color: #f0f0f049;\r\n        width: 120px;\r\n        text-align: center;\r\n        border-radius: 10px;\r\n        color: #2c2c2c;\r\n        border: solid 1px #ffffff79;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n\r\n    /** コンボボックス */\r\n    export const _Combobox = styled.select<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: black;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n}\r\n\r\nexport default ProgStyle;","import { BeatSignature, ChordElement, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * コード進行生成のユーティリティ\r\n */\r\nnamespace ProgUtil {\r\n\r\n    /** 生成方法 */\r\n    export type BuildType = 'blank' | 'custom' | 'template';\r\n\r\n    export const STEP_LIST = [0, 2, 3, 4] as const;\r\n    export type Step = typeof STEP_LIST[number];\r\n\r\n    /**\r\n     * ブロックに設定するプロパティ\r\n     */\r\n    export type BlockProps = {\r\n        label: DetailSection | DetailFixed;\r\n        chordList?: DetailChord[];\r\n    }\r\n\r\n    export const DEGREE_FILTER_LIST = [\r\n        '', 'Ⅰ', 'Ⅴ', 'Ⅳ', 'Ⅵm', 'Ⅱm', 'Ⅲm'\r\n    ] as const;\r\n    export type DegreeFilter = typeof DEGREE_FILTER_LIST[number];\r\n\r\n    /**\r\n     * 初期状態のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getInitialBlockList = (): BlockProps[] => {\r\n        return [\r\n            { label: { fixed: \"Start\" } },\r\n            { label: { fixed: \"End\" } },\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Blank選択時のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getBlankBlockList = (): BlockProps[] => {\r\n        return [\r\n            { label: { fixed: \"Start\" } },\r\n            {\r\n                label: { labelName: \"Section\" }, chordList: [\r\n                    getDefaultChord()\r\n                ]\r\n            },\r\n            { label: { fixed: \"End\" } },\r\n        ];\r\n    }\r\n\r\n    export const getDefaultChord = (): DetailChord => {\r\n        return {\r\n            beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n            backing: {\r\n                voicingList: [],\r\n                pattern: null,\r\n                hasError: false\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拍子より選択可能なステップリストを絞り込む\r\n     * @param beat ステップの拍\r\n     * @returns 絞り込んだリスト\r\n     */\r\n    export const getFilteredStepList = (beat: BeatSignature) => {\r\n        return STEP_LIST.filter((item) => {\r\n            // 0は空白表示なので必ず加える\r\n            if (item === 0) return true;\r\n\r\n            switch (beat) {\r\n                case '4/4':\r\n                case '6/8': {\r\n                    if (item === 3) return false;\r\n                }\r\n                    break;\r\n                case '3/4':\r\n                case '9/8': {\r\n                    if (item !== 3) return false;\r\n                }\r\n                    break;\r\n                case '2/4':\r\n                case '6/8': {\r\n                    if (item !== 2) return false;\r\n                }\r\n                    break;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * ブロックリストより譜面データを生成する\r\n     * @param blockList ブロックリスト\r\n     * @returns 譜面データ\r\n     */\r\n    export const buildScoreData = (blockList: BlockProps[]): ScoreData => {\r\n        const elementList: ChordElement[] = [];\r\n        // イニシャル要素を設定\r\n        const initElement: DetailInit = {\r\n            keyIndex: 0,\r\n            bpm: 100,\r\n            scale: \"major\",\r\n            beatSignature: \"4/4\"\r\n        }\r\n        elementList.push({ type: 'init', detail: initElement });\r\n        blockList.forEach((block) => {\r\n            if (block.chordList == undefined) {\r\n                // 固定ブロックの処理\r\n                elementList.push({ type: 'fixed', detail: block.label });\r\n            } else {\r\n                // セクションブロックの処理\r\n                elementList.push({ type: 'section', detail: block.label });\r\n                block.chordList.forEach((chord) => {\r\n                    elementList.push({ type: 'chord', detail: chord });\r\n                });\r\n            }\r\n        });\r\n        return { chordList: elementList, notesList: [] };\r\n    }\r\n}\r\n\r\nexport default ProgUtil;","import { useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../utils/dummyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgSearcher from \"./progSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行を編集する画面\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ProgCustomFrame = (props: {\r\n    /** 拍子フィルターの値 */\r\n    beat: '' | BeatSignature;\r\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\r\n    insertProgUnit: (unit: ProgSearcher.UnitBean, secName: string) => void;\r\n}) => {\r\n\r\n    const [step, setStep] = useState<ProgUtil.Step>(2);\r\n    const [degreeFilters, setDegreeFilters] = useState<(ProgUtil.DegreeFilter)[]>(['', '']);\r\n\r\n    /** セクションカテゴリのステート */\r\n    const [secCategory, setSecCategory] = useState('Section');\r\n    /** セクション連番のステート */\r\n    const [secNo, setSecNo] = useState('');\r\n\r\n    // const [progUnitList, setProgUnitList] = useState<ProgSearcher.UnitBean[]>([]);\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n\r\n    const stepList = useMemo(() => {\r\n        return props.beat === '' ? [0] : ProgUtil.getFilteredStepList(props.beat);\r\n    }, [props.beat]);\r\n\r\n    /** 拍ステップ絞り込みのコンボボックス */\r\n    const stepOptionJsxList = useMemo(() => {\r\n        // console.log(stepList.length);\r\n        return stepList.map((val, i) => {\r\n            // 0の場合は表示しない制御\r\n            const disp = val === 0 ? '' : val;\r\n            return (\r\n                <option key={i} value={val}>{disp}</option>\r\n            );\r\n        });\r\n    }, [stepList]);\r\n\r\n    /** ディグリーネーム絞り込みのコンボボックス */\r\n    const degreeOptionJsxListArray: JSX.Element[][] = useMemo(() => {\r\n        return [ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 先頭のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        }), ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 2番目のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        })];\r\n    }, [degreeFilters]);\r\n\r\n    /** リストに表示する進行ユニットのJSX */\r\n    const [progUnitList, progJsxList] = useMemo(() => {\r\n        if(props.beat === '') return [[], [<></>]];\r\n        const beat = props.beat as BeatSignature;\r\n        const unitList = ProgSearcher.search({\r\n            beat: props.beat,\r\n            step, firstChord: degreeFilters[0], secondChord: degreeFilters[1]\r\n        });\r\n        const jsx = unitList.map((unit, i) => {\r\n            const isActive = focusIndex === i;\r\n\r\n            // 表示する進行ユニット\r\n            const dispUnitJsx: JSX.Element[] = [];\r\n            let totalBeat = 0;\r\n            const beatCycle = TheoryUtil.getBeatProps(beat).barBeatCnt;\r\n            unit.chordList.forEach((chord, i) => {\r\n                const degreeRoot = TheoryUtil.getDegreeRoot(chord.root);\r\n                const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey).name;\r\n                const chordName = degreeRoot + symbolName;\r\n                if (i !== 0) {\r\n                    const divStr = totalBeat % beatCycle === 0 ? ' | ' : '・';\r\n                    dispUnitJsx.push(<_Span>{divStr}</_Span>);\r\n                }\r\n                let isMatch = false;\r\n                if(i === 0) {\r\n                    isMatch = degreeFilters[0] !== '';\r\n                } else if (i === 1) {\r\n                    isMatch = degreeFilters[1] !== '';\r\n                }\r\n                dispUnitJsx.push(<_ChordName isMatch={isMatch}>{chordName}</_ChordName>);\r\n                totalBeat += chord.beatLen;\r\n                // console.log(totalBeat);\r\n            });\r\n            return (\r\n                <_ProgItem key={i} isActive={isActive} onClick={() => {\r\n                    setFocusIndex(i);\r\n                }}>{dispUnitJsx}</_ProgItem>\r\n            )\r\n        });\r\n        return [unitList, jsx];\r\n    }, [props.beat, step, degreeFilters, focusIndex]);\r\n\r\n    const [\r\n        /** セクションカテゴリのoptionリスト */\r\n        secCatOptionJsxList,\r\n        /** セクション連番のoptionリスト */\r\n        secNoOptionJsxList,\r\n    ] = useMemo(() => {\r\n        const catList = DummyUtil.SECTION_CATEGORY.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        const noList = DummyUtil.SECTION_NO.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        return [catList, noList];\r\n    }, []);\r\n\r\n    /**\r\n     * 拍ステップ変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const stepChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setStep(Number(e.target.value) as ProgUtil.Step);\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n    /**\r\n     * ディグリーフィルター変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const degreeChangeAction = (e: React.ChangeEvent<HTMLSelectElement>, index: number) => {\r\n        const value = e.target.value as ProgUtil.DegreeFilter;\r\n        degreeFilters[index] = value;\r\n        if (index === 0 && value === '') {\r\n            degreeFilters[1] = '';\r\n        }\r\n        setDegreeFilters(degreeFilters.slice());\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n\r\n    /**\r\n     * リセットボタン押下時の処理\r\n     */\r\n    const resetAction = () => {\r\n\r\n    };\r\n\r\n    /**\r\n     * 追加ボタン押下時の処理\r\n     */\r\n    const insertAction = () => {\r\n        // セクション連番が設定されている場合のみ半角スペースで連結する\r\n        const secNoStr = secNo === '' ? '' : ` ${secNo}`;\r\n        const secName = secCategory + secNoStr;\r\n        props.insertProgUnit(progUnitList[focusIndex], secName);\r\n        setFocusIndex(-1);\r\n        setStep(0);\r\n        setDegreeFilters(['', '']);\r\n    };\r\n\r\n    /** セクションフォームの活性状態 */\r\n    const isEnableSectionForm = focusIndex !== -1;\r\n\r\n    return (\r\n        <_Frame isEnable={props.beat !== ''}>\r\n            {/* 拍ステップコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Step</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={150} value={step} onChange={(e) => {\r\n                    stepChangeAction(e);\r\n                }}>{stepOptionJsxList}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* ディグリーネームフィルターコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Chord</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={80} value={degreeFilters[0]} onChange={(e) => {\r\n                    degreeChangeAction(e, 0);\r\n                }}>{degreeOptionJsxListArray[0]}</ProgStyle._Combobox>\r\n                <ProgStyle._Combobox isEnable={degreeFilters[0] !== ''} width={90} value={degreeFilters[1]} onChange={(e) => {\r\n                    degreeChangeAction(e, 1);\r\n                }}>{degreeOptionJsxListArray[1]}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* 進行ユニットリスト */}\r\n            <_ListDiv><div>{progJsxList}</div></_ListDiv>\r\n            {/* セクション名 */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Section</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={isEnableSectionForm} width={150} value={secCategory} onChange={(e) => {\r\n                    setSecCategory(e.target.value);\r\n                }}>{secCatOptionJsxList}</ProgStyle._Combobox>\r\n                <ProgStyle._Combobox isEnable={isEnableSectionForm} width={80} value={secNo} onChange={(e) => {\r\n                    setSecNo(e.target.value);\r\n                }}>{secNoOptionJsxList}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* 実行ボタン */}\r\n            <_ButtonDiv>\r\n                <_ExecutableButton isEnable={true} onClick={resetAction}>Reset</_ExecutableButton>\r\n                <_ExecutableButton isEnable={focusIndex !== -1} onClick={insertAction}>Add</_ExecutableButton>\r\n            </_ButtonDiv>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgCustomFrame;\r\n\r\nconst BUTTON_DIV_HEIGHT = 40;\r\nconst RECORD_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 条件レコード\r\n */\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${RECORD_HEIGHT}px;\r\n    /* background-color: #d5eae4; */\r\n    /* margin: 2px 0 0 0; */\r\n    text-align: left;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 進行リスト\r\n */\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${RECORD_HEIGHT * 3 + BUTTON_DIV_HEIGHT}px);\r\n    /* background-color: #babaa8; */\r\n    text-align: left;\r\n    & >div{\r\n        display: inline-block;\r\n        width: calc(100% - 8px);\r\n        height: calc(100% - 8px);\r\n        margin: 4px 0 0 4px;\r\n        background-color: #dde0e7;\r\n        box-sizing: border-box;\r\n        border: 1px solid #797979;\r\n        overflow-y: auto;\r\n    }\r\n`;\r\n\r\nconst _ProgItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #00000010;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f6ff0062;\r\n    `}\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n`;\r\n\r\nconst _ChordName = styled.span<{\r\n    isMatch: boolean;\r\n}>`\r\n    color: #000f59;\r\n    ${props => !props.isMatch ? '' : css`\r\n        color: #a0000d;\r\n        /* background-color: #5eff0061; */\r\n    `}\r\n`;\r\nconst _Span = styled.span<{\r\n}>`\r\n    color: #0000005d;\r\n`;\r\n\r\n/**\r\n * ボタンエリア（画面汎用）\r\n */\r\nconst _ButtonDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BUTTON_DIV_HEIGHT}px;\r\n    /* background-color: #94babd; */\r\n    text-align: center;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #737d94;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #505971;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #8da0b0;\r\n    }\r\n`;","import { useContext, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { DetailChord, DetailFixed, DetailSection } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行の出力画面のコンポーネント\r\n * @param props ブロックリスト\r\n * @returns コンポーネント\r\n */\r\nconst ProgOutputFrame = (props: {\r\n    blockList: ProgUtil.BlockProps[];\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const blockJsxList = props.blockList.map((block, i) => {\r\n        const isFixed = block.chordList == undefined;\r\n        const labelName = isFixed ? (block.label as DetailFixed).fixed :\r\n            (block.label as DetailSection).labelName;\r\n\r\n        const getChordListJsx = () => {\r\n            return (block.chordList as DetailChord[]).map((chord, j) => {\r\n\r\n                const getBeatTipsJsx = () => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let k = 0; k < chord.beatLen; k++) {\r\n                        jsxList.push(<_BeatTip key={k} />);\r\n                    }\r\n                    return jsxList;\r\n                }\r\n                let chordName = 'none';\r\n                if (chord.root !== null) {\r\n                    const degreeRoot = TheoryUtil.getDegreeRoot({\r\n                        index: chord.root.index,\r\n                        isFlat: chord.root.isFlat\r\n                    });\r\n                    const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey)?.name;\r\n                    chordName = degreeRoot + symbolName;\r\n                }\r\n                return (\r\n                    <_ChordItem key={j}>\r\n                        <_ChordNameLabel>{chordName}</_ChordNameLabel>\r\n                        <_ChordBeatDiv>{getBeatTipsJsx()}</_ChordBeatDiv>\r\n                    </_ChordItem>\r\n                );\r\n            });\r\n        }\r\n        const inner = isFixed ? (\r\n            <_FixedItem>{labelName}</_FixedItem>\r\n        ) : (<>\r\n            <_SectionItem>{labelName}</_SectionItem>\r\n            <_ChordListDiv>{getChordListJsx()}</_ChordListDiv>\r\n        </>);\r\n        return (\r\n            <_Block key={i} isFixed={isFixed}>{inner}</_Block>\r\n        );\r\n    });\r\n    return (\r\n        <_Frame>\r\n            {blockJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgOutputFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Block = styled.div<{\r\n    isFixed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    background-color: #e8e4c5;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #7e7e7ee8; */\r\n    text-align: center;\r\n    ${props => !props.isFixed ? '' : css`\r\n        text-align: left;\r\n    `}\r\n`;\r\n\r\nconst _FixedItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 200px;\r\n    background-color: #b14272;\r\n    border-radius: 2px 15px 15px 2px;\r\n    color: white;\r\n    margin: 5px 0 5px 5px;\r\n`;\r\n\r\nconst _SectionItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 120px;\r\n    background-color: #4297b1;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 0;\r\n`;\r\n\r\nconst _ChordListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    /* height: 100px; */\r\n    padding: 0 5px 5px 0;\r\n    background-color: #c2d6dd1e;\r\n    border: solid 2px #ab4343;\r\n    border-radius: 8px;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 5px 0;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 45px;\r\n    background-color: #676767;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 5px;\r\n`;\r\n\r\nconst _ChordNameLabel = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    padding: 0 20px;\r\n    /* background-color: #b38282; */\r\n    color: white;\r\n`;\r\n\r\nconst _ChordBeatDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    height: 25px;\r\n    min-width: 100%;\r\n    /* background-color: #c5adad; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _BeatTip = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    height: calc(100% - 12px);\r\n    margin: 6px 2px 0 2px;\r\n    background-color: #ddd796;\r\n    border-radius: 2px;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ProgTemplateFrame = (props: {\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    const templateJsxList = useMemo(() => {\r\n        return ['short major 01', 'short major 02', 'short minor 01'].map((val, i) => {\r\n            return (\r\n                <_Item key={i}>{val}</_Item>\r\n            );\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame>\r\n            {templateJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgTemplateFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #87b4b4;\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n    color: #eb0000;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgCustomFrame from \"./progCustomFrame\";\r\nimport ProgOutputFrame from \"./progOutputFrame\";\r\nimport ProgSearcher from \"./progSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgTemplateFrame from \"./progTemplateFrame\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行を構成して譜面のベースを作成するダイアログ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ChordProgDialog = (props: {\r\n    setScoreData: (scoreData: ScoreData) => void;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** 生成モード（ブランク、カスタム、テンプレート） */\r\n    const [buildMode, setBuildType] = useState<ProgUtil.BuildType>('blank');\r\n    /** 出力する進行ユニットのリスト */\r\n    const [outputUnits, setOutputUnits] = useState(ProgUtil.getBlankBlockList());\r\n    /** 拍子フィルター */\r\n    const [beatFilter, setBeatFilter] = useState<'' | BeatSignature>('');\r\n\r\n    /**\r\n     * Closeボタン押下時の処理\r\n     */\r\n    const closeAction = () => {\r\n        store.systemState.dialog = null;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    /**\r\n     * Startボタン押下時の処理\r\n     */\r\n    const startAction = () => {\r\n        const scoreData = ProgUtil.buildScoreData(outputUnits);\r\n        props.setScoreData(scoreData);\r\n        closeAction();\r\n        // Editタブに遷移\r\n        store.systemState.scoreTabIndex = 1;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    const getSwitchContJsx = () => {\r\n        switch (buildMode) {\r\n            case 'blank': return <></>;\r\n            case 'custom': return <ProgCustomFrame beat={beatFilter} insertProgUnit={insertProgUnit} />;\r\n            case 'template': return <ProgTemplateFrame />;\r\n        }\r\n    };\r\n\r\n    /** 拍フィルターのオプションリストJSX */\r\n    const beatOptionJsxList = useMemo(() => {\r\n        if (buildMode === 'blank') {\r\n            return [(\r\n                <option key={0} value={''}></option>\r\n            )];\r\n        } else {\r\n            return [''].concat(TheoryUtil.BEAT_DEF_LIST).map((val, i) => {\r\n                return (\r\n                    <option key={i} value={val}>{val}</option>\r\n                );\r\n            });\r\n        }\r\n    }, [buildMode]);\r\n\r\n    const beatChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setBeatFilter(e.target.value as BeatSignature);\r\n    }\r\n\r\n    const insertProgUnit = (unit: ProgSearcher.UnitBean, secName: string) => {\r\n        const block: ProgUtil.BlockProps = {\r\n            label: { labelName: secName },\r\n            chordList: unit.chordList.map((chord) => {\r\n                const chordDetail = ProgUtil.getDefaultChord();\r\n                chordDetail.beatLen = chord.beatLen;\r\n                chordDetail.symbolKey = chord.symbolKey;\r\n                chordDetail.root = chord.root;\r\n                return chordDetail;\r\n            })\r\n        }\r\n        outputUnits.splice(outputUnits.length - 1, 0, block);\r\n        setOutputUnits(outputUnits.slice());\r\n    }\r\n\r\n    /**\r\n     * 切り替え式ボタンのJSXを返すクロージャ\r\n     * @param labelName ラベル名\r\n     * @param clickEvent 押下時の処理\r\n     * @param isActive 選択中かどうか\r\n     * @returns JSX\r\n     */\r\n    const createSwitchableButton = (\r\n        labelName: string,\r\n        isActive: boolean,\r\n        clickEvent: () => void\r\n    ) => {\r\n        return (\r\n            <_SwitchableButton isActive={isActive}\r\n                onClick={clickEvent}\r\n            >{labelName}</_SwitchableButton>\r\n        );\r\n    }\r\n\r\n    const beatComboboxEnable = outputUnits.length <= 2;\r\n\r\n    // Blankモードの時は空白を表示\r\n    const distBeatFilter = buildMode === 'blank' ? '' : beatFilter;\r\n    return (\r\n        <_Frame >\r\n            <_Header>\r\n                {createSwitchableButton('Blank', buildMode === 'blank', () => {\r\n                    setOutputUnits(ProgUtil.getBlankBlockList());\r\n                    setBuildType('blank');\r\n                })}\r\n                {createSwitchableButton('Custom', buildMode === 'custom', () => {\r\n                    setOutputUnits(ProgUtil.getInitialBlockList());\r\n                    setBuildType('custom');\r\n                })}\r\n                {createSwitchableButton('Template', buildMode === 'template', () => {\r\n                    setOutputUnits([]);\r\n                    setBuildType('template');\r\n                })}\r\n            </_Header>\r\n            <_MainDiv>\r\n                <_LeftDiv isEnable={buildMode !== 'blank'}>\r\n                    <_BeatFormDiv>\r\n                        <ProgStyle._TitleLabel>Beat</ProgStyle._TitleLabel>\r\n                        <ProgStyle._Combobox value={distBeatFilter} isEnable={beatComboboxEnable} width={150}\r\n                            onChange={(e) => {\r\n                                beatChangeAction(e);\r\n                            }}>{beatOptionJsxList}</ProgStyle._Combobox>\r\n                    </_BeatFormDiv>\r\n                    {/* モードによって切り替えるコンテンツ（カスタムorテンプレート） */}\r\n                    <_SwitchDiv>{getSwitchContJsx()}</_SwitchDiv>\r\n                </_LeftDiv>\r\n                <_RightDiv>\r\n                    <ProgOutputFrame blockList={outputUnits} />\r\n                </_RightDiv>\r\n            </_MainDiv>\r\n            <_Footer>\r\n                {/* ダイアログを閉じる */}\r\n                <_ExecutableButton isEnable={true} onClick={closeAction}>Cancel</_ExecutableButton>\r\n                {/* 譜面を生成 */}\r\n                <_ExecutableButton isEnable={true} onClick={startAction}>Start</_ExecutableButton>\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ChordProgDialog;\r\n\r\nconst HEADER_HEIGHT = 50;\r\nconst FOOTER_HEIGHT = 50;\r\nconst BEAT_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 1024px;\r\n    height: 768px;\r\n    z-index: 11;\r\n    /* top: 100px;\r\n    left: 100px; */\r\n    /* width: calc(100% - 200px);\r\n    height: calc(100% - 200px); */\r\n    background-color: #929292;\r\n    border: solid 2px #404250;\r\n    border-radius: 8px;\r\n    /* border: 1px solid #dadada; */\r\n`;\r\n\r\n/**\r\n * ヘッダー\r\n */\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #7d8d97;\r\n    text-align: center;\r\n`;\r\n\r\n/**\r\n * メインコンポーネント\r\n */\r\nconst _MainDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_HEIGHT + FOOTER_HEIGHT}px);\r\n    /* background-color: #7d8d97; */\r\n    text-align: left;\r\n`;\r\n\r\n/**\r\n * 左側のコンポーネント\r\n */\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n   display: inline-block;\r\n   vertical-align: top;\r\n   width: calc(50% - 6px);\r\n   height: calc(100% - 8px);\r\n   background-color: #bdced8;\r\n   text-align: left;\r\n   margin: 4px 2px 4px 4px;\r\n   ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 拍選択\r\n */\r\nconst _BeatFormDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BEAT_HEIGHT}px;\r\n    /* background-color: #b4c7ba; */\r\n    padding: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _BeatSelect = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    text-align: left;\r\n    color: black;\r\n    vertical-align: top;\r\n    line-height: 24px;\r\n    width: 210px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 5px;\r\n`;\r\n\r\n\r\n/**\r\n * テンプレートとカスタムの切り替えコンテンツ表示\r\n */\r\nconst _SwitchDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    background-color: #cedbd7;\r\n    border: 1px solid #696969;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - ${BEAT_HEIGHT + 10}px);\r\n`;\r\n\r\n/**\r\n * 右側のコンポーネント\r\n */\r\nconst _RightDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    width: calc(50% - 6px);\r\n    height: calc(100% - 8px);\r\n    background-color: #bdced8;\r\n    text-align: left;\r\n    margin: 4px 4px 4px 2px;\r\n`;\r\n\r\n/**\r\n * フッター\r\n */\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n    & *{\r\n        margin: 10px 5px 0 0;\r\n    }\r\n`;\r\n\r\n/**\r\n * スイッチボタン\r\n */\r\nconst _SwitchableButton = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #5083c5;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c5b950;\r\n    `};\r\n    width: 200px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #375176;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #77a7e6;\r\n    ${props => !props.isActive ? '' : css`\r\n            background-color: #c5b950;\r\n    `};\r\n}\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #2d5625;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../utils/cacheUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ChordProgDialog from \"./chordProg/chordProgDialog\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [file, setFile] = useState<null | File>(null);\r\n\r\n    const fileHandle = store.scoreState.fileHandle;\r\n    const data = store.scoreData;\r\n    const tabIndex = store.systemState.scoreTabIndex;\r\n\r\n    const [fileInfo, scoreInfo]: [{\r\n        name: string;\r\n        size: string;\r\n        modified: string;\r\n    }, {\r\n        key: string;\r\n        tempo: string;\r\n        rate: string;\r\n        section: string;\r\n        chord: string;\r\n        bar: string;\r\n        time: string;\r\n        notes: string;\r\n    }] = useMemo(() => {\r\n        let name = '-';\r\n        let size = '-';\r\n        let modified = '-';\r\n        let key = '-';\r\n        let tempo = '-';\r\n        let rate = '-';\r\n        let section = '-';\r\n        let chord = '-';\r\n        let bar = '-';\r\n        let time = '-';\r\n        let notes = '-';\r\n        if (tabIndex === 0) {\r\n            if (file != null) {\r\n                name = file.name;\r\n                size = `${file.size.toString()} byte`;\r\n                modified = DataUtil.getStringFromDate(new Date(file.lastModified));\r\n            }\r\n            if (data.chordList.length > 0) {\r\n                const init = data.chordList[0].detail as DetailInit;\r\n                key = `${TheoryUtil.KEY12_MAJOR_SCALE_LIST[init.keyIndex]} ${init.scale}`;\r\n                tempo = init.bpm.toString();\r\n                rate = init.beatSignature;\r\n                let sectionNum = 0;\r\n                let chordNum = 0;\r\n                data.chordList.forEach(chord => {\r\n                    switch (chord.type) {\r\n                        case 'section': sectionNum++; break;\r\n                        case 'chord': chordNum++; break;\r\n                    }\r\n                });\r\n                section = sectionNum.toString();\r\n                chord = chordNum.toString();\r\n\r\n                const cacheList = store.scoreState.elementCacheList;\r\n                if (cacheList.length > 0) {\r\n                    const last = cacheList[cacheList.length - 1];\r\n                    time = `${last.pastSecond / 1000}s`;\r\n                    bar = `${last.bar} (${last.surplusBeat})`;\r\n                }\r\n                notes = data.notesList.length.toString();\r\n            }\r\n        }\r\n        return [{\r\n            name, size, modified\r\n        }, {\r\n            key, tempo, rate, section, chord, bar, time, notes\r\n        }]\r\n    }, [tabIndex, data, file]);\r\n\r\n    useEffect(() => {\r\n        if (tabIndex === 0 && fileHandle != null) {\r\n            fileHandle.getFile().then(file => {\r\n                setFile(file);\r\n            });\r\n        }\r\n    }, [tabIndex]);\r\n\r\n    const setScoreData = ((data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    });\r\n\r\n    /**\r\n     * ラベルフォームを生成する\r\n     * @param labelName ラベル名\r\n     * @param labelValue 値\r\n     * @returns JSX\r\n     */\r\n    const createLabelRecord = (labelName: string, labelValue: string) => {\r\n        return (\r\n            <_Recored>\r\n                <_ItemnLabel>{labelName}</_ItemnLabel>\r\n                <_ItemnValue>{labelValue}</_ItemnValue>\r\n            </_Recored>\r\n        );\r\n    }\r\n\r\n\r\n    const searchLocalFileAction = () => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            // console.log(fileContents);\r\n            store.scoreState.fileHandle = fileHandle;\r\n            setFile(file);\r\n            const text = DataUtil.unZip(fileContents);\r\n            // const text = fileContents;\r\n            console.log(text);\r\n            setScoreData(JSON.parse(text));\r\n        })();\r\n    }\r\n\r\n    const disconnectAction = () => {\r\n        store.scoreState.fileHandle = null;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n        setFile(null);\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n        <_ButtonsDiv>\r\n            <_Button onClick={()=> {\r\n                store.systemState.dialog = <ChordProgDialog setScoreData={setScoreData}/>;\r\n                dispatcher.system.setState(store.systemState);\r\n            }}>new score</_Button>\r\n            <_Button onClick={searchLocalFileAction}>load file</_Button>\r\n            <_Button onClick={searchLocalFileAction}>search local</_Button>\r\n            <_Button onClick={disconnectAction}>disconnect</_Button>\r\n        </_ButtonsDiv>\r\n            <_MainDiv>\r\n                <_Left>\r\n                    <_ListInfoDiv isEnable={true}>\r\n\r\n                    </_ListInfoDiv>\r\n                    {/* <_Link onClick={() => {\r\n\r\n                    const data: ScoreData = {\r\n                        chordList: [\r\n                            { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' } as DetailInit },\r\n                            { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                            { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                            {\r\n                                type: 'chord', detail: {\r\n                                    beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                    backing: {\r\n                                        voicingList: [],\r\n                                        pattern: null,\r\n                                        hasError: false\r\n                                    }\r\n                                } as DetailChord\r\n                            },\r\n                            { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                        ],\r\n                        notesList: []\r\n                    };\r\n                    // setSource(JSON.stringify(data));\r\n                    setData(data);\r\n                }} >Create an empty score.</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅰ→Ⅴ→Ⅵ→Ⅲm→Ⅳ→Ⅰ→Ⅱm→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅵm→Ⅳ→Ⅴ→Ⅰ→Ⅵm→Ⅳ→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(4, 3);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChordDiatonic(4, 2);\r\n                    builder.addChordDiatonic(4, 5);\r\n                    builder.addChordDiatonic(4, 1);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChord(4, { index: 0, isFlat: false }, 'suspend4th');\r\n                    builder.addChordDiatonic(4, 0);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅳ→Ⅴ→Ⅲm→Ⅵm→Ⅱm→Ⅴ→Ⅰsus4→Ⅰ</_Link> */}\r\n                </_Left>\r\n                <_Right>\r\n                    {/* <_Source value={source} onChange={e => setSource(e.target.value)} /> */}\r\n\r\n                    <_DataInfoDiv isEnable={fileHandle != null}>\r\n                        <_TitleLabel>DATA</_TitleLabel>\r\n                        {createLabelRecord('file', fileInfo.name)}\r\n                        {createLabelRecord('name', fileInfo.name)}\r\n                        {createLabelRecord('url', fileInfo.name)}\r\n                        {createLabelRecord('size', fileInfo.name)}\r\n                        {/* {createLabelRecord('size', fileInfo.size)}\r\n                        {createLabelRecord('modified', fileInfo.modified)} */}\r\n                    </_DataInfoDiv>\r\n                    <_ScoreInfoDiv isEnable={data.chordList.length > 0}>\r\n                        <_TitleLabel>SCORE</_TitleLabel>\r\n                        {createLabelRecord('key', scoreInfo.key)}\r\n                        {createLabelRecord('tempo', scoreInfo.tempo)}\r\n                        {createLabelRecord('rate', scoreInfo.rate)}\r\n                        {createLabelRecord('section', scoreInfo.section)}\r\n                        {createLabelRecord('chord', scoreInfo.chord)}\r\n                        {createLabelRecord('bar', scoreInfo.bar)}\r\n                        {createLabelRecord('time', scoreInfo.time)}\r\n                        {createLabelRecord('notes', scoreInfo.notes)}\r\n                    </_ScoreInfoDiv>\r\n                </_Right>\r\n            </_MainDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #8a6b6b; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #969696; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\n// const _Source = styled.textarea`\r\n//     display: inline-block;\r\n//     width: calc(100% - 8px);\r\n//     margin: 4px 0 0 4px;\r\n//     height: calc(100% - 44px);\r\n//     /* background-color: #7e7e7e; */\r\n//     text-align: left;\r\n//     font-size: 20px;\r\n//     resize: none;\r\n//     box-sizing: border-box;\r\n//     color: #060053;\r\n// `;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    height: calc(100% - 48px);\r\n    background-color: #ffffff;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst DATA_INFO_HEIGHT = 260;\r\n\r\nconst _DataInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${DATA_INFO_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #9da5af;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ScoreInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${DATA_INFO_HEIGHT + 12}px);\r\n    margin: 0 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #ad0000;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c5;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\n\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #888888;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    border: 1px solid #000744;\r\n    color: #04274e;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    &:hover {\r\n        background-color: #98bfc2;\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : TheoryUtil.getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: TheoryUtil.SymbolKey[] = [];\r\n        const parentLine: TheoryUtil.SymbolKey[] = [];\r\n        const childrenLine: TheoryUtil.SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = TheoryUtil.getSymbolDerives(baseSymbol.key);\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = TheoryUtil.getSymbolDerives(curSymbol.key);\r\n        TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\nimport { DetailChord } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = TheoryUtil.getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = TheoryUtil.getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = TheoryUtil.getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        // 見た目上１から数えるため\r\n        bar = cache.bar + 1;\r\n    }\r\n    // 小節変更タイミングで、余りの拍がある（頭でない）場合エラー\r\n    const isError = bar !== -1 && cache.surplusBeat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n    }\r\n\r\n    let minuteStr = '';\r\n    if(cache.minute !== 0) {\r\n        switch(cache.minute) {\r\n            case 1: minuteStr = '→/16'; break;\r\n            case 2: minuteStr = '→/8'; break;\r\n            case -1: minuteStr = '←/16'; break;\r\n            case -2: minuteStr = '←/8'; break;\r\n        }\r\n    }\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.surplusBeat === 0 ? <>&nbsp;</> : cache.surplusBeat}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : minuteStr}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailAlter = (props: {\r\n    detail: DetailAlter;\r\n}) => {\r\n\r\n    const type = props.detail.alterType;\r\n\r\n    const getDetailInfo = (): string => {\r\n        let ret = '-';\r\n        if (type != null) {\r\n            switch (type) {\r\n                case 'modulate': {\r\n\r\n                    const modRel = props.detail.modRel;\r\n                    if (modRel != null) {\r\n                        switch (modRel) {\r\n                            case 'domm': {\r\n                                const val = props.detail.dommVal;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                            case 'relative':\r\n                            case 'parallel': {\r\n                                ret = modRel;\r\n                            } break;\r\n                            case 'key': {\r\n                                const val = props.detail.keyAdj;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                        }\r\n                    }\r\n                } break;\r\n                case 'tempo' : {\r\n                    const tempoRel = props.detail.tempoRel;\r\n                    switch(tempoRel) {\r\n                        case 'diff': {\r\n                            const val = props.detail.tempoDiff;\r\n                            const sign = val > 0 ? '+' : ''; \r\n                            ret = `${tempoRel}: ${sign}${val}`;\r\n                        } break;\r\n                        case 'rate': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoRate}%`;\r\n                        } break;\r\n                        case 'abs': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoAbs}`;\r\n                        } break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                {type == null ? 'alter' : type}\r\n            </_Type>\r\n            <_Detail>\r\n                {getDetailInfo()}\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, Scale } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 2 | 1;\r\n\r\n/**\r\n * コードブロックのコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isSustainMode: boolean;\r\n    isCurrent: boolean;\r\n    keyIndex: number;\r\n    scale: Scale;\r\n}) => {\r\n\r\n    const minute = props.detail.minute;\r\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() => {\r\n\r\n        // const keySwitch = store.scoreState.keySwitch;\r\n        const chordBacking = props.detail.backing;\r\n        let degreeRoot: null | string = null;\r\n        let degreeOn: null | string = null;\r\n        let chordRoot: null | string = null;\r\n        let chordOn: null | string = null;\r\n\r\n        if (props.detail.root != null) {\r\n            degreeRoot = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            });\r\n            chordRoot = TheoryUtil.getChordRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, props.keyIndex);\r\n\r\n            if (props.detail.on != null) {\r\n                degreeOn = TheoryUtil.getDegreeRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.on.isFlat\r\n                });\r\n                chordOn = TheoryUtil.getChordRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.root.isFlat\r\n                }, props.keyIndex);\r\n            }\r\n        }\r\n\r\n        const diatonicList = TheoryUtil.getDiatonicDegreeList(props.scale);\r\n        const isDiatonic = diatonicList.includes(degreeRoot + symbolName);\r\n\r\n        return <_Wrap>\r\n            <_Degree\r\n                // isSwitch={keySwitch.sustainMode && props.isCurrent}\r\n                isSwitch={props.isSustainMode}\r\n                scaleRelation={degreeRoot != null && isDiatonic ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={props.isSustainMode}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n            <_Backing>\r\n                {chordBacking.hasError ? <_Error /> : <>\r\n                    {chordBacking.voicingList.length === 0 ? '' : <_Voicing />}\r\n                    {chordBacking.voicingList.length === 0 ? '' : chordBacking.pattern == null ? '' : <_Pattern />}\r\n                </>}\r\n            </_Backing>\r\n        </_Wrap>\r\n    }\r\n        , [\r\n            props.scale,\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            props.isSustainMode,\r\n            props.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail,\r\n            props.detail.backing\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: TheoryUtil.ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 18px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #422e3099;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 2 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 1 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Backing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 6px;\r\n    /* background-color: #00a048; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _Error = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background-color: #af3838;\r\n`;\r\n\r\nconst _Voicing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 2px 0 0;\r\n    height: 4px;\r\n    border-radius: 4px 0 0 4px;\r\n    border: solid 1px #0000004e;\r\n    background-color: #acb6ca;\r\n`;\r\n\r\nconst _Pattern = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 0 0 2px;\r\n    height: 4px;\r\n    border-radius: 0 4px 4px 0;\r\n    border: solid 1px #0000004e;\r\n    background-color: #accab3;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    // const jsxList: JSX.Element[] = [];\r\n    // jsxList.push(<_Border key={0} />);\r\n    // jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    const value = props.detail.fixed;\r\n    return (\r\n        <_Wrap isStart={value === 'Start'}>\r\n            {/* {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()} */}\r\n            <_Label>{value}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div<{\r\n    isStart: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    border-left: 1px solid #00000083;\r\n    border-top: 1px solid #00000083;\r\n    border-right: 1px solid #00000083;\r\n    /* border: 1px solid #00000083; */\r\n    box-sizing: border-box;\r\n    background-color: #9b9b9b1f;\r\n    ${props => props.isStart ? css`\r\n        border-radius: 0 35px 0 0;\r\n    ` : css`\r\n        border-radius: 35px 0 0 0;\r\n    `}\r\n`;\r\n\r\n// const _Border = styled.div`\r\n//     display: inline-block;\r\n//     width: 10px;\r\n//     height: 100%;\r\n//     background-color: #b4b4b4;\r\n//     vertical-align: middle;\r\n// `;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    /* width: calc(100% - 10px); */\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #960000b0;\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    /* vertical-align: middle; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{TheoryUtil.KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.beatSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailSection } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailSection = (props: {\r\n    detail: DetailSection;\r\n}) => {\r\n    // const { store } = useContext(GlobalContext);\r\n\r\n    // const state = store.scoreState;\r\n    // const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    // const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Label>{curSection.labelName}</_Label> */}\r\n            <_Label>{props.detail.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcAlter = (props: {\r\n    detail: DetailAlter;\r\n    prevCache: ScoreCache.Element;\r\n    curCache: ScoreCache.Element;\r\n}) => {\r\n\r\n    const getType = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate': return 'Key';\r\n            case 'tempo': return 'Tempo';\r\n            case 'beat': return 'Beat';\r\n        }\r\n    }\r\n    const getDetail = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate':{\r\n                const prevKey = TheoryUtil.KEY12_SHARP_LIST[props.prevCache.keyIndex] + (props.prevCache.scale === 'major' ? '' : 'm');\r\n                const curKey = TheoryUtil.KEY12_SHARP_LIST[props.curCache.keyIndex] + (props.curCache.scale === 'major' ? '' : 'm');\r\n                return `${prevKey}→${curKey}`;\r\n            }\r\n            case 'tempo':{\r\n                const prevTempo = props.prevCache.bpm;\r\n                const curTempo = props.curCache.bpm;\r\n                return `${prevTempo}→${curTempo}`;\r\n            }\r\n            case 'beat':{\r\n                const prevBeat = props.prevCache.beatSignature;\r\n                const curBeat = props.curCache.beatSignature;\r\n                return `${prevBeat}→${curBeat}`;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Type>{getType()}</_Type>\r\n            <_Detail>{getDetail()}</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\ntype ChordDefBean = {\r\n    root: TheoryUtil.DegreeProps;\r\n    symbolKey: TheoryUtil.SymbolKey;\r\n}\r\n\r\nconst ChordEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n    }, [detail.root, detail.symbolKey]);\r\n\r\n    const getChord = (index: number, isFlat: boolean, symbolKey: TheoryUtil.SymbolKey): ChordDefBean => {\r\n        return { root: { index, isFlat }, symbolKey };\r\n    }\r\n\r\n    const createRow = (label: JSX.Element, chordList: ChordDefBean[]): JSX.Element => {\r\n        const listJsx: JSX.Element[] = [];\r\n        listJsx.push(<_Header key={listJsx.length}>{label}</_Header>);\r\n        chordList.forEach((chord) => {\r\n            const rootName = TheoryUtil.getDegreeRoot(chord.root);\r\n            const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey).name;\r\n            listJsx.push(\r\n                <_Item isActive={false} key={listJsx.length}>\r\n                    {rootName + symbolName}\r\n                </_Item>);\r\n        });\r\n        return <_Row>{listJsx}</_Row>;\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {createRow(<>triad</>, [\r\n                getChord(0, false, 'major'),\r\n                getChord(2, false, 'minor'),\r\n                getChord(4, false, 'minor'),\r\n                getChord(5, false, 'major'),\r\n                getChord(7, false, 'major'),\r\n                getChord(9, false, 'minor'),\r\n                getChord(11, false, 'minor-minus5'),\r\n            ])}\r\n            {/* {createRow(<>Tetrad</>, [\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'minor-7th'),\r\n                getChord(4, false, 'minor-7th'),\r\n                getChord(5, false, 'major-maj7th'),\r\n                getChord(7, false, 'major-min7th'),\r\n                getChord(9, false, 'minor-7th'),\r\n                getChord(11, false, 'minor7-minus5'),\r\n            ])} */}\r\n            {createRow(<>domm</>, [\r\n                getChord(9, false, 'major-min7th'),\r\n                getChord(11, false, 'major-min7th'),\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'major-min7th'),\r\n                getChord(4, false, 'major-min7th'),\r\n            ])}\r\n            {createRow(<>domm*</>, [\r\n                getChord(1, false, 'diminish'),\r\n                getChord(3, false, 'diminish'),\r\n                getChord(4, false, 'diminish'),\r\n                getChord(6, false, 'diminish'),\r\n                getChord(8, false, 'diminish'),\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    /* height: 160px; */\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    /* height: 100%; */\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport SymbolEditor from \"../tool/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailAlter from \"./form/elementDetailAlter\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcAlter from \"./calc/calcAlter\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { ScoreState } from \"../../../../../redux/store/score/scoreState\";\r\nimport ChordEditor from \"../tool/chordEditor\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n    element: ChordElement;\r\n    state: ScoreState;\r\n    setState: (state: ScoreState) => void;\r\n}) => {\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = props.state;\r\n    const keySwitch = state.keySwitch;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    // const chordList = store.scoreData.chordList;\r\n    // const element = chordList[props.index];\r\n    const element = props.element;\r\n    const cache = state.elementCacheList[props.index];\r\n    const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n    const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n    const isFocus = props.index >= distHead && props.index <= distTail;\r\n    const isRange = isFocus && distHead != distTail;\r\n    const isSameSection = isFocus || state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        props.setState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    const elementJson = JSON.stringify(element);\r\n\r\n    return useMemo(() => {\r\n        // console.log(`pos: ${props.index}`);\r\n        const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n        const isInactive = !(isSameSection || element.type === 'init');\r\n        return (\r\n            <_Wrap\r\n                ref={wrapRef}\r\n                isSelectable={element.type !== 'fixed'}\r\n                isActive={isFocus}\r\n                isInactive={isInactive}\r\n                isAdditional={['chord', 'section', 'alter', 'init'].includes(element.type)}\r\n            >\r\n                <_Head>\r\n                    {element.type !== 'chord' ? <></> : (\r\n                        <_CurKey>{TheoryUtil.getDisplayKeyScaleName(cache.keyIndex, cache.scale)}</_CurKey>\r\n                    )}\r\n                </_Head>\r\n\r\n                {/* 要素の入力フォーム */}\r\n                {['init', 'chord', 'section', 'alter'].includes(element.type) ? (\r\n                    <_Form\r\n                        ref={bodyRef}\r\n                        isActive={isFocus}\r\n                        isRange={isRange}\r\n                        isInactive={isInactive}\r\n                        type={element.type}\r\n                        isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                        onClick={() => {\r\n                            if (element.type === 'fixed') {\r\n                                return;\r\n                            }\r\n                            if (!state.keySwitch.distMode) {\r\n                                state.focusIndex = props.index;\r\n                                state.distIndex = state.focusIndex;\r\n                            } else {\r\n                                state.distIndex = props.index;\r\n                            }\r\n                            props.setState(state);\r\n                        }}\r\n                    >{(() => {\r\n                        switch (element.type) {\r\n                            case 'init': {\r\n                                const detail = element.detail as DetailInit;\r\n                                return (<ElementDetailInit detail={detail} />);\r\n                            }\r\n                            case 'section': {\r\n                                const detail = element.detail as DetailSection;\r\n                                return (<ElementDetailSection detail={detail} />);\r\n                            }\r\n                            case 'chord': {\r\n                                const detail = element.detail as DetailChord;\r\n                                return (<ElementDetailChord\r\n                                    detail={detail}\r\n                                    isCurrent={isFocus}\r\n                                    keyIndex={cache.keyIndex}\r\n                                    isSustainMode={isFocus && state.keySwitch.sustainMode}\r\n                                    scale={cache.scale}\r\n                                />);\r\n                            }\r\n                            case 'alter': {\r\n                                const detail = element.detail as DetailAlter;\r\n                                return (<ElementDetailAlter detail={detail} />);\r\n                            }\r\n                        }\r\n                    })()}\r\n                    </_Form>\r\n                ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n                {/* 入力フォーム下部の計算によって出力される情報 */}\r\n                {\r\n                    element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                        element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                            element.type === 'alter' ? (\r\n                                <CalcAlter\r\n                                    detail={element.detail as DetailAlter}\r\n                                    prevCache={state.elementCacheList[props.index - 1]}\r\n                                    curCache={cache}\r\n                                />\r\n                            ) :\r\n                                <></>\r\n                }\r\n                <>{!(isCurrent && chordDetail != null && state.keySwitch.chordMode) ? '' :\r\n                    <ChordEditor />\r\n                }</>\r\n                <>{!(isCurrent && chordDetail != null && chordDetail.root != null && state.keySwitch.symbolMode) ? '' :\r\n                    <SymbolEditor />\r\n                }</>\r\n                {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                    <_Operations>\r\n                        <_OperationItem>-</_OperationItem>\r\n                        <_OperationItem\r\n                        // onClick={() => dispatcher.score.addChordElement()}\r\n                        >+</_OperationItem>\r\n                    </_Operations>\r\n                )}\r\n            </_Wrap>\r\n        );\r\n    }, [\r\n        elementJson, isSameSection, isRange, isFocus,\r\n        keySwitch.chordMode, keySwitch.symbolMode, keySwitch.sustainMode\r\n    ]);\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isRange: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    /* border: solid 1px #00000049; */\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #df8484;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #44b168;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'alter' ? '' : css`\r\n        border: solid 1px #604fc0;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 4px;\r\n    ${props => props.isInactive ? '' : css`\r\n        /* background-color: #ebf1e2; */\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4c9df;\r\n        border: solid 1px #00000049;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n    ${props => !props.isRange ? '' : css`\r\n        background-color: #80d4e2;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isAdditional: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isAdditional ? '' : css`\r\n        /* background-color: #e8ff9549; */\r\n        background: linear-gradient(to bottom, transparent,transparent,transparent, #ffffff9e);\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #ffffff9b;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const cacheList = store.scoreState.elementCacheList;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (cacheList.length === chordList.length) {\r\n        for (let i = 0; i < cacheList.length; i++) {\r\n            list.push(\r\n                <ScoreElement key={list.length}\r\n                    index={i}\r\n                    element={chordList[i]}\r\n                    state={store.scoreState}\r\n                    setState={dispatcher.score.setScoreState}\r\n                />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {list}\r\n            {/* <_Frame> */}\r\n            {/* <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note> */}\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #d8d8d8;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    state.distIndex = state.focusIndex;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 46px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #97cce0dd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #929292;\r\n    /* border-radius: 20px 20px 20px 20px; */\r\n    border-radius: 2px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 25px;\r\n        font-size: 18px;\r\n        /* font-weight: 600; */\r\n        color: #4d4d4d;\r\n        /* background-color: #0000003a; */\r\n        line-height: 22px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 21px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #adadad39; */\r\n        line-height: 20px;\r\n    }\r\n`;","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\nimport { getKeyIndexFromPitcher, getNormalizeLenFromNotes } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nnamespace HarmonizeUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n        const state = store.scoreState;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        const reserveTasks = store.reserveTasks;\r\n        let firstTime = -1;\r\n        const update = () => {\r\n            // if (store.invalidate.harmonize) {\r\n            //     store.invalidate.harmonize();\r\n            // }\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = state.focusIndex; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                // 開始時のノーツの位置（時間）を保存する。\r\n                if (firstTime === -1) {\r\n                    firstTime = cache.pastSecond;\r\n                }\r\n\r\n\r\n                if (detail.root == null) continue;\r\n\r\n                const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n                // const chordTime = 60 / cache.bpm * len;\r\n\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const chordTime = TheoryUtil.calcSustainMsec(\r\n                    detail.beatLen,\r\n                    minute,\r\n                    cache.bpm,\r\n                    cache.beatSignature\r\n                );\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        setTimeout(() => {\r\n                            update();\r\n                        }, 0);\r\n\r\n                    }, cache.pastSecond - firstTime - adjsut)\r\n                );\r\n            }\r\n\r\n            if (i === chordList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (cache.pastSecond - firstTime - adjsut))\r\n                );\r\n            }\r\n        }\r\n\r\n        // メロディを再生\r\n        if (!state.isSolo) {\r\n            previewMelody(firstTime / 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n        state.isPreview = true;\r\n        update();\r\n    }\r\n\r\n    const previewMelody = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const instrument = store.instruments.soundfontPlayer;\r\n\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = 0; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n\r\n            if (posTime < start) continue;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    dispatcher.melody.adjustScrollX();\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                    }, 0);\r\n                }, (posTime - start) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (posTime - start + lenTime) * 1000)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    // ハーモニーのプレビューを停止する。\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        state.isPreview = false;\r\n        // store.instruments.sampler.releaseAll();\r\n        // state.focusIndex = state.lastFocus;\r\n        reserveTasks.forEach(id => clearTimeout(id));\r\n        dispatcher.system.setReserveTasks([]);\r\n        dispatcher.score.setScoreState(state);\r\n\r\n        store.instruments.harmony?.stop();\r\n    }\r\n\r\n    // 選択中の要素のバッキングパターンを鳴らす\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.scoreState;\r\n        const reserveTasks = store.reserveTasks;\r\n        const cache = state.elementCacheList[state.focusIndex];\r\n        const curChord = store.scoreData.chordList[state.focusIndex];\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n            // const chordTime = 60 / cache.bpm * len;\r\n\r\n            const minute = detail.minute.head + detail.minute.tail;\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                detail.beatLen,\r\n                minute,\r\n                cache.bpm,\r\n                cache.beatSignature\r\n            );\r\n\r\n            BackingUtil.playBacking(store, store.reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.score.setScoreState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n    }\r\n}\r\n\r\nexport default HarmonizeUtil;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport namespace SideFormStyles {\r\n\r\n    export const ___CSS_FORM = css`\r\n        display: inline-block;\r\n        /* width: 100px; */\r\n        height: 25px;\r\n        background-color: #bdbdbd;\r\n        border: 1px solid #000;\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        color: #303030;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        text-align: center;\r\n    `;\r\n\r\n    export const ___CSS_TITLE = css`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 26px;\r\n        /* background-color: #f0f0f0; */\r\n        background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n        border: 1px solid #222222;\r\n        font-size: 20px;\r\n        color: #ffffff;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        box-sizing: border-box;\r\n        /* border: 1px solid #c50000; */\r\n        text-align: center;\r\n    `;\r\n\r\n    export const createNumberForm = (value: number, isEnable: boolean,\r\n         onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n         min: number, max:number, step:number) => {\r\n\r\n        return (\r\n            <_NumberForm isEnable={isEnable}>\r\n                <input\r\n                    type=\"number\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"range\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </_NumberForm>\r\n        );\r\n    }\r\n\r\n    const _NumberForm = styled.div<{\r\n        isEnable: boolean;\r\n    }>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 55px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 5px;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n    `;\r\n}","import { stat } from \"fs\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { backingEditorInput } from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    // プレビュー再生時\r\n    if (state.isPreview) {\r\n        switch (e.key) {\r\n            case ' ': {\r\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n        return;\r\n    } else {\r\n        if (store.scoreState.hideMenu === 'none') {\r\n            if (isElement) {\r\n                if (keySwitch.control) {\r\n                    switch (e.key) {\r\n                        case 'c': {\r\n                            const element = data.chordList[state.focusIndex];\r\n                            if (element.type === \"chord\") {\r\n                                const detail = element.detail as DetailChord;\r\n                                if (detail.root != null) {\r\n                                    dispatcher.score.cloneBacking();\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'x': {\r\n                            dispatcher.score.copyElementList();\r\n                        }\r\n                            break;\r\n                        case 'v': {\r\n                            if (state.copiedElementList != null) {\r\n                                dispatcher.score.pasteElementList();\r\n                            } else if (state.cloneBacking != null) {\r\n\r\n                                const element = data.chordList[state.focusIndex];\r\n                                if (element.type === \"chord\") {\r\n                                    const detail = element.detail as DetailChord;\r\n                                    if (detail.root != null) {\r\n                                        dispatcher.score.pastBacking();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 's': {\r\n                            // dispatcher.score.saveFile();\r\n                            DataUtil.saveFile(JSON.stringify(data), state);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.distMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.moveDist(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.moveDist(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.sustainMode) {\r\n                    switch (e.key) {\r\n                        case config.decRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(false);\r\n                        }\r\n                            break;\r\n                        case config.incRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(true);\r\n                        }\r\n                            break;\r\n                        case config.decBeat: {\r\n                            dispatcher.score.incrementBeatLen(false);\r\n                        }\r\n                            break;\r\n                        case config.incBeat: {\r\n                            dispatcher.score.incrementBeatLen(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minHeadMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, 1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, -1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minTailMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, -1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, 1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.chordMode) {\r\n                    // switch (e.key) {\r\n                    //     case 'ArrowUp': {\r\n                    //         dispatcher.symbol.toNext(false);\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowDown': {\r\n                    //         dispatcher.symbol.toNext(true);\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowLeft': {\r\n                    //         dispatcher.symbol.toBase();\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowRight': {\r\n                    //         dispatcher.symbol.toDerive();\r\n                    //     }\r\n                    //         break;\r\n                    // }\r\n                } else if (keySwitch.symbolMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.symbol.toNext(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.symbol.toNext(true);\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.symbol.toBase();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.symbol.toDerive();\r\n                        }\r\n                            break;\r\n                    }\r\n                } else {\r\n                    NoteBasicInput(e, store, dispatcher);\r\n                }\r\n            }\r\n        } else if (store.scoreState.hideMenu === 'backing') {\r\n            backingEditorInput(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const state = store.scoreState;\r\n    if (!state.isPreview) {\r\n        // if (state.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case 'Control': {\r\n                keySwitch.control = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.distMode: {\r\n                if (!keySwitch.control) {\r\n                    keySwitch.distMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.edit1: {\r\n                if (!(keySwitch.control || keySwitch.distMode)) {\r\n                    keySwitch.sustainMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'v': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode)) {\r\n                    keySwitch.chordMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.edit2: {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode)) {\r\n                    keySwitch.symbolMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'd': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode)) {\r\n                    keySwitch.minHeadMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'g': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode || keySwitch.minHeadMode)) {\r\n                    keySwitch.minTailMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n        }\r\n        // }\r\n    }\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                }\r\n                    break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(cache.scale, Number(e.key) - 1);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.left: {\r\n            if(state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(false);\r\n            } else {\r\n                dispatcher.score.releaseRange(false);\r\n            }\r\n        }\r\n            break;\r\n        case config.right: {\r\n            if(state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(true);\r\n            } else {\r\n                dispatcher.score.releaseRange(true);\r\n            }\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.up: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.down: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'm': {\r\n            dispatcher.score.addAlterElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case ' ': {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        }\r\n            break;\r\n    }\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\nimport { ChordBacking } from \"../../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\n\r\nexport const backingEditorInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.backingState;\r\n\r\n    if (state == null) return;\r\n\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const pattern = state.pattern;\r\n\r\n\r\n    if (!state.isPreview) {\r\n        switch (e.key) {\r\n            case 'b': {\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n            case 'z': {\r\n                const test: ChordBacking = {\r\n                    voicingList: BackingUtil.getVoicingListFromTable(state.voicingTable),\r\n                    pattern: state.pattern == null ? null : BackingUtil.buildPatternProps(state.pattern),\r\n                    hasError: state.hasError\r\n                }\r\n                console.log('source: ' + DataUtil.gZip(JSON.stringify(test)));\r\n                console.log('source: ' + JSON.stringify(test));\r\n            }\r\n                break;\r\n            case 'Enter': {\r\n                dispatcher.backing.mappingEditorToScore();\r\n            }\r\n                break;\r\n            case ' ': {\r\n                if (!state.hasError) {\r\n                    dispatcher.backing.testBacking();\r\n                }\r\n            }\r\n                break;\r\n        }\r\n\r\n        if (pattern != null) {\r\n            if (pattern.channelIndex === -1) {\r\n\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': {\r\n                        dispatcher.backing.movePatternColumn(false);\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        dispatcher.backing.movePatternColumn(true);\r\n                    }\r\n                        break;\r\n                    case 'ArrowUp': {\r\n                        dispatcher.backing.incrementVel(1);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.backing.incrementVel(-1);\r\n                    }\r\n                        break;\r\n                    case 'a': {\r\n                        dispatcher.backing.addPatternColumn();\r\n                    }\r\n                        break;\r\n                    case 'w': {\r\n                        dispatcher.backing.switchLayer();\r\n                    }\r\n                        break;\r\n                    case 'e': {\r\n                        dispatcher.backing.switchMode();\r\n                    }\r\n                        break;\r\n                    case '1': {\r\n                        dispatcher.backing.setCurrentDivRate(16);\r\n                    }\r\n                        break;\r\n                    case '2': {\r\n                        dispatcher.backing.setCurrentDivRate(8);\r\n                    }\r\n                        break;\r\n                    case '3': {\r\n                        dispatcher.backing.setCurrentDivRate(4);\r\n                    }\r\n                        break;\r\n                    case '4': {\r\n                        dispatcher.backing.setCurrentDivRate(2);\r\n                    }\r\n                        break;\r\n                    case '5': {\r\n                        dispatcher.backing.setCurrentDivRate(1);\r\n                    }\r\n                        break;\r\n                    case '.': {\r\n                        dispatcher.backing.toggleCurrentDivHalf();\r\n                    }\r\n                        break;\r\n                    case 'Delete': {\r\n                        dispatcher.backing.deleteColumn();\r\n                    }\r\n                        break;\r\n                    case 's': {\r\n                        pattern.channelIndex = 0;\r\n                        update();\r\n                    }\r\n                        break;\r\n                    case 'Enter': {\r\n                        dispatcher.backing.mappingEditorToScore();\r\n                        dispatcher.backing.closeBackingEditor();\r\n                    }\r\n                        break;\r\n                }\r\n            } else {\r\n                if (!keySwitch.sustainMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.backing.movePatternColumn(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.backing.movePatternColumn(true);\r\n                        }\r\n                            break;\r\n                        case 'ArrowUp': {\r\n                            dispatcher.backing.moveChannelIndex(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.backing.moveChannelIndex(true);\r\n                        }\r\n                            break;\r\n                        case 's': {\r\n                            pattern.channelIndex = -1;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'a': {\r\n                            const curNotes = dispatcher.backing.getNotes();\r\n                            const notes: BackingState.NoteStatus | null = curNotes == null ? { signal: 'n', timing: 0, velAdj: 0 } : null;\r\n                            dispatcher.backing.setNotes(notes);\r\n                            dispatcher.backing.updateErrorState();\r\n                        }\r\n                            break;\r\n                    }\r\n                } else {\r\n\r\n                    const pattern = state.pattern as BackingState.Pattern;\r\n                    const layer = pattern.layers[pattern.layerIndex];\r\n                    const baseVel = layer.velocityList[pattern.layerIndex];\r\n                    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n                    const cell = layer.table[channelIndex][pattern.lenIndex];\r\n                    if (cell != null) {\r\n                        const vel = baseVel + cell.velAdj;\r\n                        switch (e.key) {\r\n                            case 'ArrowUp': {\r\n                                if (vel < 10) {\r\n                                    cell.velAdj++;\r\n                                    update();\r\n                                }\r\n                            }\r\n                                break;\r\n                            case 'ArrowDown': {\r\n                                if (vel > 1) {\r\n                                    cell.velAdj--;\r\n                                    update();\r\n                                }\r\n                            }\r\n                                break;\r\n                            case 'ArrowLeft': {\r\n                                if (cell.timing > -10) {\r\n                                    cell.timing--;\r\n                                    update();\r\n                                }\r\n                            }\r\n                                break;\r\n                            case 'ArrowRight': {\r\n                                if (cell.timing < 10) {\r\n                                    cell.timing++;\r\n                                    update();\r\n                                }\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n\r\n        switch (e.key) {\r\n            case ' ': {\r\n                BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BeatSignature, DetailAlter as DetailAlter, AlterType, ModulateRelation, TempoRelation } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormAlter = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailAlter;\r\n\r\n    const type = detail.alterType;\r\n\r\n    const update = () => {\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const createAlertTypeItem = (value: AlterType | '-', isActive: boolean): JSX.Element => {\r\n        const type = value === '-' ? null : value;\r\n        return <_Form isActive={isActive}\r\n            onClick={() => {\r\n                //値が変わった時のみ処理を実行\r\n                if (detail.alterType !== type) {\r\n                    detail.alterType = type;\r\n                    // 全ての項目を初期化\r\n                    detail.modRel = null;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    detail.tempoRel = null;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    detail.beatSignature = '4/4';\r\n                    update();\r\n                }\r\n            }}> {value}</_Form >;\r\n    }\r\n\r\n    const createModulateRelationItem = (value: ModulateRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'modulate' && rel == detail.modRel}\r\n            onClick={() => {\r\n                if (detail.modRel !== rel) {\r\n                    detail.modRel = rel;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createTempoRelationItem = (value: TempoRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'tempo' && rel == detail.tempoRel}\r\n            onClick={() => {\r\n                if (detail.tempoRel !== rel) {\r\n                    detail.tempoRel = rel;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createBeatItem = (value: BeatSignature): JSX.Element => {\r\n        return <_Form isActive={detail.alterType === 'beat' && detail.beatSignature === value}\r\n            onClick={() => {\r\n                if (detail.beatSignature !== value) {\r\n                    detail.beatSignature = value;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const donmmItemJsxList = <_ParamDiv isEnable={detail.modRel === 'domm'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'domm' && value == detail.dommVal}\r\n            onClick={() => {\r\n                detail.dommVal = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>\r\n    })}</_ParamDiv>;\r\n\r\n    const keyAdjItemJsxList = <_ParamDiv isEnable={detail.modRel === 'key'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'key' && value == detail.keyAdj}\r\n            onClick={() => {\r\n                detail.keyAdj = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>;\r\n    })}</_ParamDiv>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Group isEnable={true}>\r\n                <_CategoryLabel>Type</_CategoryLabel>\r\n                {createAlertTypeItem('-', type == null)}\r\n                {createAlertTypeItem('modulate', type === 'modulate')}\r\n                {createAlertTypeItem('tempo', type === 'tempo')}\r\n                {createAlertTypeItem('beat', type === 'beat')}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'modulate'}>\r\n                <_CategoryLabel>Modulate</_CategoryLabel>\r\n                {createModulateRelationItem('-')}\r\n                {createModulateRelationItem('domm')}\r\n                {donmmItemJsxList}\r\n                {createModulateRelationItem('parallel')}\r\n                {createModulateRelationItem('relative')}\r\n                {createModulateRelationItem('key')}\r\n                {keyAdjItemJsxList}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'tempo'}>\r\n                <_CategoryLabel>Tempo</_CategoryLabel>\r\n                {createTempoRelationItem('-')}\r\n                {createTempoRelationItem('diff')}\r\n                {SideFormStyles.createNumberForm(detail.tempoDiff,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'diff',\r\n                    (e) => {\r\n                        detail.tempoDiff = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, -100, 100, 1)}\r\n                {createTempoRelationItem('rate')}\r\n                {SideFormStyles.createNumberForm(detail.tempoRate,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'rate',\r\n                    (e) => {\r\n                        detail.tempoRate = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n                {createTempoRelationItem('abs')}\r\n                {SideFormStyles.createNumberForm(detail.tempoAbs,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'abs',\r\n                    (e) => {\r\n                        detail.tempoAbs = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'beat'}>\r\n                <_CategoryLabel>Beat</_CategoryLabel>\r\n                {createBeatItem('2/4')}\r\n                {createBeatItem('4/4')}\r\n                {createBeatItem('3/4')}\r\n                {createBeatItem('6/8')}\r\n                {createBeatItem('9/8')}\r\n                {createBeatItem('12/8')}\r\n            </_Group>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormAlter;\r\n\r\nconst _Wrap = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        background-color: #b3b5c5;\r\n        `;\r\n\r\nconst _Group = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 0 0 0 4px;\r\n    ${props => props.isEnable ? '' : css`\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n`}\r\n        `;\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        margin-top: 1px;\r\n        width: 100%;\r\n        background-color: #c1cdd4;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\nconst _ParamDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n        margin: 1px;\r\n        background-color: #070707;\r\n        ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n        `;\r\nconst _ParamItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        width: 29px;\r\n        background-color: #dddddd;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\n\r\nconst _ValueForm = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 24px;\r\n        /* margin: 5px 0 0 0; */\r\n        text-align: left;\r\n        background-color: #ececec;\r\n\r\n        & * {\r\n            display: inline-block;\r\n            box-sizing: border-box;\r\n            vertical-align: top;\r\n    }\r\n        & input:nth-child(1) {\r\n            background-color: #dddddd;\r\n            width: 60px;\r\n            height: calc(100% - 4px);\r\n            margin: 2px 0 0 0;\r\n            border: 1px solid #9b9b9b;\r\n            border-radius: 4px;\r\n    }\r\n        & input:nth-child(2) {\r\n            margin-left: 5px;\r\n            background-color: #f00;\r\n            width: calc(100% - 70px);\r\n            height: 100%;\r\n    }\r\n        `;","import styled, { css } from \"styled-components\";\r\n\r\nconst JUDGE_INFO_LIST: {\r\n    value: number, label: string\r\n}[] = [\r\n        { value: -2, label: '-/8' },\r\n        { value: -1, label: '-/16' },\r\n        { value: 0, label: '±0' },\r\n        { value: 1, label: '+/16' },\r\n        { value: 2, label: '+/8' }\r\n    ];\r\n\r\nexport const MinuteForm = (props: {\r\n    isHead: boolean;\r\n    value: number;\r\n    setValue: (value: number) => void;\r\n}) => {\r\n\r\n    const rateMinus = props.value >= 0 ? 0 : Math.abs(props.value) * 50;\r\n    const ratePlus = props.value <= 0 ? 0 : Math.abs(props.value) * 50;\r\n\r\n    const createJudgeItem = (key: number, value: number, label: string) => {\r\n        const isActive = props.value === value;\r\n        return (\r\n            <_JudgeItem key={key} isActive={isActive} onClick={() => props.setValue(value)} >\r\n                {!isActive ? '' : label}\r\n            </_JudgeItem>\r\n        )\r\n    }\r\n    const isRed = Math.abs(props.value) === 1;\r\n\r\n    const JudgeJsxList = JUDGE_INFO_LIST.map((judge, i) => {\r\n        return createJudgeItem(i, judge.value, judge.label);\r\n    });\r\n\r\n    return (\r\n        <_Wrap isHead={props.isHead}>\r\n            <_View>\r\n                <_ViewFrame isLeft={true} isRed={isRed} rate={!props.isHead ? rateMinus : ratePlus}><div /></_ViewFrame>\r\n                <_ViewFrame isLeft={false} isRed={isRed} rate={!props.isHead ? ratePlus : rateMinus}><div /></_ViewFrame>\r\n            </_View>\r\n            <_Judge>{!props.isHead ? JudgeJsxList : JudgeJsxList.reverse()}</_Judge>\r\n        </_Wrap>\r\n    );\r\n};\r\n\r\nexport default MinuteForm;\r\n\r\nconst _Wrap = styled.div<{\r\n    isHead: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #bfd380;\r\n    text-align: left;\r\n`;\r\nconst _Judge = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 9;\r\n`;\r\n\r\nconst _JudgeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(20% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    background-color: #0000001a;\r\n    /* border: 1px solid #4d4d4d91; */\r\n    border-radius: 4px;\r\n    ${props => !props.isActive ? '' : css`\r\n        border: 1px solid #c00000c5;\r\n    `}\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    /* opacity: 0.15; */\r\n    &:hover {\r\n        background-color: #ffffff24;\r\n    }\r\n`;\r\nconst _View = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    /* position: absolute;\r\n    top: 0;\r\n    left: 0; */\r\n    z-index: 8;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ViewFrame = styled.div<{\r\n    isRed: boolean;\r\n    isLeft: boolean;\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 16px;\r\n    margin-top: 7px;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n\r\n    & div {\r\n        position: absolute;\r\n        top: 0;\r\n        height: 100%;\r\n        width: ${props => props.rate}%;\r\n        ${props => props.isRed ? css`\r\n            background: linear-gradient(to right, #0066ff, #7691a3);\r\n        ` : css`\r\n            background: linear-gradient(to left, #ff0000, #a37676);\r\n        `}\r\n        ${props => props.isLeft ? css`\r\n            right: 0;\r\n            border-radius: 10px 0 0 10px;\r\n        ` : css`\r\n            left: 0;\r\n            border-radius: 0 10px 10px 0;\r\n        `}\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\nimport MinuteForm from \"./minuteForm\";\r\n\r\n/**\r\n * コードブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i}\r\n                isExist={isExist}\r\n                isActive={detail.beatLen === i + 1}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    data.chordList = data.chordList.slice();\r\n                    detail.beatLen = (i + 1);\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n        const isDiatonic = root != null && scaleIndexies.includes(root.index);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={isDiatonic}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    if (root == null) {\r\n                        detail.symbolKey = 'major';\r\n                    }\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {TheoryUtil.getDegreeRoot(root)} ({TheoryUtil.getChordRoot(root, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    /**\r\n     * シンコペーションの入力フォームを生成するコールバック\r\n     * @param isHead 頭対象フラグ（falseの場合後ろが対象）\r\n     * @returns JSX\r\n     */\r\n    const createMinuteForm = (isHead: boolean): JSX.Element => {\r\n        const minute = detail.minute;\r\n        const [value, setValue]: [number, (value: number) => void] = isHead ? [\r\n            minute.head,\r\n            (value: number) => {\r\n                minute.head = value;\r\n                dispatcher.score.setScoreData(store.scoreData);\r\n            }\r\n        ] : [\r\n            minute.tail,\r\n            (value: number) => {\r\n                minute.tail = value;\r\n                dispatcher.score.setScoreData(store.scoreData);\r\n            }\r\n        ];\r\n        return <MinuteForm value={value} setValue={setValue} isHead={isHead} />\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_CategoryLabel>{'Beat length'}</_CategoryLabel>\r\n                <_BeatDiv>\r\n                    {beatItemsJsx}\r\n                </_BeatDiv>\r\n                <_Minute>\r\n                    <_CategoryLabel>{'Minute head'}</_CategoryLabel>\r\n                    {createMinuteForm(true)}\r\n                    {/* <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                    <_CategoryLabel>{'Minute tail'}</_CategoryLabel>\r\n                    {createMinuteForm(false)}\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    {/* <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_RootDiv>\r\n                    {rootItemsJsx}\r\n                </_RootDiv>\r\n                <_SymbolDiv\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_SymbolDiv>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 100px; */\r\n    text-align: left;\r\n    background-color: #979797;\r\n`;\r\n\r\nconst _BeatDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 3px;\r\n        width: calc(100% - 6px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isActive ? '' : css`\r\n            /* border: solid 1px #fff; */\r\n        `}\r\n        box-sizing: border-box;\r\n        border-radius: 6px;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    margin-top: 5px;\r\n    width: 100%;\r\n    /* height: 360px; */\r\n    text-align: left;\r\n    /* background-color: #000000; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _RootDiv = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    margin: 0 0 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #e6e6e6; */\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #90bbcc;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #d1c521b8;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    color: #616161;\r\n    ${props => !props.isDiatonic ? '' : css`color: #ffffff;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #99999940;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #cc6363b8;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #6374ccb8;`}\r\n    }\r\n`;\r\n\r\nconst _SymbolDiv = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 93px);\r\n    margin: 0 1px 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    background-color: #a1cc90;\r\n    ${props => !props.isActive ? '' : css`background-color: #d1c521b8;`}\r\n    color: #fff;\r\n    ${props => !props.isDiatonic ? '' : css`color: #fff;`}\r\n    /* & span {\r\n        color: #f000;\r\n    } */\r\n    &:hover {\r\n        background-color: #dddddd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #cc6363b8;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const update = () => {\r\n        data.chordList = data.chordList.slice();\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const scaleItemJsxList: JSX.Element[] = TheoryUtil.SCALE_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? TheoryUtil.KEY12_MAJOR_SCALE_LIST : TheoryUtil.KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n    const rateItemJsxList: JSX.Element[] = TheoryUtil.BEAT_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.beatSignature === item} onClick={() => {\r\n                detail.beatSignature = item as BeatSignature;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            {SideFormStyles.createNumberForm(detail.bpm, true, (e) => {\r\n                detail.bpm = e.currentTarget.valueAsNumber;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }, 30, 220, 1)}\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 50%;\r\n    margin: 1px 0 0 0;\r\n\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 100%;\r\n    margin: 1px 0 0 0;\r\n    \r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    margin: 1px 0 0 0;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../../utils/dummyUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        DummyUtil.SECTION_CATEGORY.forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        const splitList = detail.labelName.split(' ');\r\n        DummyUtil.SECTION_NO.forEach((item) => {\r\n            const isActive = splitList[splitList.length - 1] === item.toString();\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(`${splitList[0]} ${item}`);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_SelectDiv>\r\n                <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n                <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n            </_SelectDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #b89b9b; */\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _SelectDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    background-color: #acacac;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(60% - 4px);\r\n    margin: 0 2px 0 2px;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(40% - 2px);\r\n    margin: 0 2px 0 0;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #6182b4; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #61b4b0; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormAlter from \"./sideFormAlter\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst HarmSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'alter': return <SideFormAlter />;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const scaleIndexies = cache.scale === 'major' ? [0, 2, 4, 5, 7, 9, 11] : [0, 2, 3, 5, 7, 8, 10];\r\n    const scaleList = scaleIndexies.map(value => (cache.keyIndex + value) % 12);\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = TheoryUtil.getIntervalValues((root.index + cache.keyIndex) % 12, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{TheoryUtil.IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        // 2オクターブ分表示\r\n        for (let i = 0; i < 14; i++) {\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            {/* <_Info>{tipJsxList}</_Info> */}\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    /* background-color: #4b4b4b; */\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    /* border: 1px solid #ffffffda; */\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    ` : css`\r\n    background: radial-gradient(#d6cec3, #a89889);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    ` : css`\r\n        background: radial-gradient(#e7a144, #72552a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternDetail = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    /** 基準となるベロシティ */\r\n    const baseVel = layer.velocityList[pattern.lenIndex];\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cell = layer.table[channelIndex][pattern.lenIndex];\r\n    const timing = cell == null ? 0 : cell.timing;\r\n    const velAdj = cell == null ? 0 : cell.velAdj;\r\n\r\n    return (<_Wrap>\r\n        {\r\n            // ノーツが設定されていない場合は何も表示しない\r\n            cell == null ? <></> : (<>\r\n                <_DelayDiv>\r\n                    <_Label>delay</_Label>\r\n                    <_TimingValue type=\"range\" min={-10} max={10} step={1} value={timing} onChange={e => {\r\n                        cell.timing = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_DelayDiv>\r\n                <_VelocityDiv>\r\n                    <_Label>velocity</_Label>\r\n                    <_VelFrame>\r\n                        <_VelItem value={baseVel} />\r\n                    </_VelFrame>\r\n                    <_VelFrame>\r\n                        <_VelItem value={baseVel + velAdj} />\r\n                    </_VelFrame>\r\n                    <_VelFrame></_VelFrame>\r\n                    {/* <_Value type=\"range\" min={-10} max={10} step={1} value={velAdj} onChange={e => {\r\n                        cell.velAdj = Number(e.target.value);\r\n                        update();\r\n                    }} /> */}\r\n                </_VelocityDiv>\r\n            </>)\r\n        }\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternDetail;\r\n\r\nconst VEL_DIV_WIDTH = 180;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    line-height: 18px;\r\n    margin-top: 14px;\r\n    margin-left: 5px;\r\n    width: 80px;\r\n    background-color: #868686;\r\n    color: #e7e7e7;\r\n    border: 1px solid #616161;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DelayDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - ${VEL_DIV_WIDTH + 1}px);\r\n    height: 100%;\r\n    background-color: #9c9c9c;\r\n`;\r\n\r\nconst _TimingValue = styled.input<{\r\n}>`\r\n    display: inline-block;\r\n    outline: none;\r\n    margin: 20px 0 0 8px;\r\n    width: calc(100% - 100px);\r\n    height: 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VelocityDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${VEL_DIV_WIDTH}px;\r\n    height: 100%;\r\n    margin-left: 1px;\r\n    /* background-color: #9a2020; */\r\n`;\r\n\r\nconst _VelFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 46px;\r\n    height: 100%;\r\n    /* background-color: #63a0a1;\r\n    border-radius: 20px; */\r\n`;\r\n\r\nconst _VelItem = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 5px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate * adjustRate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {itemJsxList}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternPedal = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    // 左手のレイヤー時のみ固定表示\r\n    const layer = pattern.layers[0];\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n\r\n    let cur: BackingState.PedalAction = 'off';\r\n    pattern.pedalActs.forEach((pedal, i) => {\r\n        const isActive = pattern.layerIndex === 0 && pattern.lenIndex === i;\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n        let isUse = false;\r\n        const prev = cur;\r\n        if (prev === 'change') {\r\n            cur = 'on';\r\n        }\r\n        if (pedal != null) {\r\n            isUse = true;\r\n            cur = pedal;\r\n        }\r\n        itemJsxList.push(\r\n            <_Column key={i} rate={rate} isActive={isActive} isUse={isUse} onClick={() => {\r\n                if (prev === 'off') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'on'; break;\r\n                        case 'on': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'on') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = 'change'; break;\r\n                        case 'change': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'change') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                }\r\n                // 終端までnullで更新\r\n                if (i < pattern.pedalActs.length - 1) {\r\n                    for (let j = i + 1; j < pattern.pedalActs.length; j++) {\r\n                        pattern.pedalActs[j] = null;\r\n                    }\r\n                }\r\n                update();\r\n            }}><div><_Item action={cur} /></div></_Column>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternPedal;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n    /* background-color: #4e4e4e; */\r\n`;\r\n\r\n\r\nconst _Column = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #00635eac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #179483ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    white-space: normal;\r\n\r\n    &>div {\r\n        display: inline-block;\r\n        width: 10px;\r\n        height: calc(100% - 2px);\r\n        background-color: #ffffffa0;\r\n        border-radius: 6px;\r\n        margin: 1px 0;\r\n        ${props => props.isUse ? '' : css`\r\n            background-color: #ffffff2f;\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    action: BackingState.PedalAction;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 14px;\r\n    border: 1px solid #9c9c9c;\r\n    ${props => {\r\n        switch (props.action) {\r\n            case 'off': return css`\r\n                margin-top: 0;\r\n                background-color: #271db8;\r\n            `;\r\n            case 'change': return css`\r\n                margin-top: 15px;\r\n                background-color: #f3d631;\r\n            `;\r\n            case 'on': return css`\r\n                margin-top: 30px;\r\n                background-color: #e03030;\r\n            `;\r\n        }\r\n    }}\r\n    box-sizing: border-box;\r\n    border-radius: 6px;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n    const curLayer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n    const layerJsxList = useMemo(() => {\r\n\r\n        const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n        pattern.layers.forEach((layer, j) => {\r\n\r\n            const jsxLsit: JSX.Element[] = [];\r\n            for (let i = 0; i < channelCount; i++) {\r\n                const notesJsxLsit: JSX.Element[] = [];\r\n\r\n                layer.noteDivList.forEach((note, k) => {\r\n                    // データ上は下から数えるため、表示のループは逆回転する\r\n                    const channelIndex = (channelCount - 1) - i;\r\n                    const isActive = pattern.layerIndex === j && pattern.lenIndex === k;\r\n                    const cell = layer.table[channelIndex][k];\r\n                    const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                    const isUse = cell != null;\r\n                    // 前面にあるレイヤーのみエラー判定をする\r\n                    const isError = pattern.layerIndex !== j ? false :\r\n                        isUse && BackingUtil.checkOverlapBackLayer(pattern.layers, j, channelIndex, k);\r\n                    const isEdit = isActive && pattern.channelIndex === i;\r\n                    let rate = note.rate * adjustRate;\r\n                    if (note.isDot) rate /= 1.5;\r\n                    if (note.div3 !== 0) rate /= note.div3 / 3;\r\n                    notesJsxLsit.push(\r\n                        <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                            <_State\r\n                                // isUse={isUse}\r\n                                isError={isError}\r\n                                signal={cell == null ? null : cell.signal}\r\n                                isBack={pattern.layerIndex !== j}\r\n                                onClick={() => {\r\n                                    if (cell == null) {\r\n                                        setNotesStatus({ signal: 'n', timing: 0, velAdj: 0 });\r\n                                    } else {\r\n                                        setNotesStatus(null);\r\n                                    }\r\n                                    curLayer.table = curLayer.table.slice();\r\n                                    update();\r\n                                    dispatcher.backing.updateErrorState();\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    pattern.channelIndex = i;\r\n                                    pattern.lenIndex = k;\r\n                                    update();\r\n                                }}\r\n                            />\r\n                        </_Notes>\r\n                    );\r\n                });\r\n                jsxLsit.push(\r\n                    <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                        {notesJsxLsit}\r\n                    </_Record>\r\n                );\r\n            }\r\n            layerJsxList[j] = jsxLsit;\r\n        });\r\n        return layerJsxList;\r\n    }, [\r\n        pattern.channels, pattern.layerIndex, pattern.lenIndex,\r\n        curLayer.noteDivList, curLayer.table, pattern.channelIndex\r\n    ]);\r\n\r\n    // 選択中のレイヤーを表に表示する\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    // isUse: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => props.signal == null ? '' : css<{\r\n        isBack: boolean;\r\n        isError: boolean;\r\n        signal: null | BackingState.NoteSignal;\r\n    }>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        ${props => props.signal !== 's' ? '' : css`    \r\n            border-radius: 8px;\r\n            background: linear-gradient(to bottom, #009e0d, #02fc49, #009e0d);\r\n        `}\r\n        // エラーあり\r\n        ${props => !props.isError ? '' : css`\r\n            opacity: 0.5;\r\n        `}\r\n        // 裏面のレイヤー\r\n        ${props => !props.isBack ? '' : css`\r\n            background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.5;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => props.signal == null ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternVelocity = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.velocityList.forEach((vel, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} >\r\n                <_Value value={vel} />\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternVelocity;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #001763ac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #173494ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Value = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 6px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternDetail from \"./patternDetail\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternPedal from \"./patternPedal\";\r\nimport PatternTable from \"./patternTable\";\r\nimport PatternVelocity from \"./patternVelocity\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const divs = layer.noteDivList;\r\n    const limitLen = BackingUtil.getLimitLen(chordInfo);\r\n    const useTotalLen = BackingUtil.getUsingLenFromDivs(divs, chordInfo);\r\n    const isLenOverError = 0 <= limitLen - useTotalLen;\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const viewRate = NOTES_1BAR_WIDTH / 4;\r\n\r\n    // メモリの数を算出\r\n    let memoriCount = chordInfo.beatLen * beatProps.beatMemoriCount;\r\n    memoriCount += chordInfo.minute.head + chordInfo.minute.tail;\r\n\r\n    const barMemoriCount = beatProps.beatMemoriCount === 4 ? 16 : 24;\r\n    const memoriWidth = NOTES_1BAR_WIDTH / barMemoriCount;\r\n    // メモリJSXの生成\r\n    const memoriJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < memoriCount + 1; i++) {\r\n        const pos = i;\r\n        let bean: { thickness: number, height: number, color: string } = { thickness: 1, height: 10, color: '#555' };\r\n        if (beatProps.beatMemoriCount === 4) {\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        } else {\r\n            switch (true) {\r\n                case pos % 24 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 6 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        }\r\n        memoriJsxList.push(\r\n            <_Memori\r\n                key={memoriJsxList.length}\r\n                width={memoriWidth}\r\n                height={bean.height}\r\n                color={bean.color}\r\n                thickness={bean.thickness}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n                <_MemoriList>{memoriJsxList}</_MemoriList>\r\n                {isLenOverError ? (\r\n                    <_ChordLenLine pos={limitLen * viewRate} />\r\n                ) : (\r\n                    // 定義した拍を超えた場合のみ表示\r\n                    <_OverCover pos={limitLen * viewRate} width={(useTotalLen - limitLen) * viewRate} />\r\n                )}\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n            {pattern.channelIndex === -1 ?\r\n                // ベロシティorペダル情報を表示\r\n                (pattern.mode === 'velocity' ? <PatternVelocity /> : <PatternPedal />) :\r\n                // セルごとの詳細情報を表示\r\n                <PatternDetail />\r\n            }\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\nconst _MemoriList = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    thickness: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.thickness}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _OverCover = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: ${props => props.width}px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #f8000053;\r\n    pointer-events: none;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;\r\n\r\nconst _ChordLenLine = styled.div<{\r\n    pos: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: 4px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #ffffffc7;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n    const channelCount = pattern.channels.length;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length + 1);\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length - 1);\r\n        update();\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap isError={props.soundFullName === '-'}>\r\n            <_Struct>{props.soundFullName}</_Struct>\r\n            <_Option isEnable={channelCount > 1} onClick={deleteRecord}>-</_Option>\r\n            <_Option isEnable={channelCount < BackingUtil.CHANNEL_MAX} onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ff0000c3;\r\n    `}\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)<{\r\n    isEnable: boolean;\r\n}>`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n    const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    const layerJsxList: JSX.Element[] = [];\r\n\r\n    if (state.pattern == null) return <></>;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channels = pattern.channels;\r\n    channels.forEach((channel, i) => {\r\n        let name = '-';\r\n        if (channel.octave !== -1) {\r\n            const soundIndex = chordRoot + TheoryUtil.IntervalRelationProps[symbol.structs[channel.structIndex]];\r\n            const octave = channel.octave + Math.floor(soundIndex / 12);\r\n            name = TheoryUtil.KEY12_SHARP_LIST[soundIndex % 12] + octave;\r\n        }\r\n        channelJsxList.push(\r\n            <ChannelItem key={i}\r\n                index={i}\r\n                soundFullName={name}\r\n            />\r\n        );\r\n    });\r\n\r\n    pattern.layers.forEach((layer, i) => {\r\n        const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\r\n        layerJsxList.push(\r\n            <_LayerItem key={i} isActive={pattern.layerIndex === i}\r\n                onClick={() => {\r\n                    if (i !== pattern.layerIndex) {\r\n                        dispatcher.backing.switchLayer();\r\n                    }\r\n                }}\r\n            >{labelName}</_LayerItem>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        <_Header>\r\n            {layerJsxList}\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n            <_ModeItem isActive={pattern.mode === 'velocity'}\r\n                onClick={() => {\r\n                    pattern.mode = 'velocity';\r\n                    dispatcher.backing.setState(state);\r\n                }}\r\n            >Velocity</_ModeItem>\r\n            <_ModeItem isActive={pattern.mode === 'pedal'}\r\n                onClick={() => {\r\n                    pattern.mode = 'pedal';\r\n                    dispatcher.backing.setState(state);\r\n                }}\r\n            >Pedal</_ModeItem>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #929292;\r\n`;\r\n\r\nconst _LayerItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #dad600;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997;\r\n`;\r\n\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #4fe419;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternOptions = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        layer.noteDivList = layer.noteDivList.slice();\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, isEnable: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={isEnable} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, true, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const isPermit3ren = ['2/4', '4/4', '4/3'].includes(chordInfo.init.beatSignature);\r\n    const isPermitDot = BackingUtil.isPermitDot(cur);\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot,\r\n            isPermitDot,\r\n            () => {\r\n                cur.isDot = !cur.isDot;\r\n                update();\r\n            })}\r\n        {createItem('1/3', cur.div3 === 1,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 1) cur.div3 = 0;\r\n                else cur.div3 = 1;\r\n                update();\r\n            })}\r\n        {createItem('2/3', cur.div3 === 2,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 2) cur.div3 = 0;\r\n                else cur.div3 = 2;\r\n                update();\r\n            })}\r\n    </_WrapLen>;\r\n\r\n    const tableRow = layer.table[channelIndex];\r\n    const selectedCell = pattern.channelIndex === -1 ? null :\r\n        tableRow[pattern.lenIndex];\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', selectedCell == null,\r\n            true,\r\n            () => {\r\n                tableRow[pattern.lenIndex] = null;\r\n                update();\r\n            })}\r\n\r\n        {createItem('□', selectedCell != null && selectedCell.signal === 'n',\r\n            true,\r\n            () => {\r\n                if(selectedCell != null) {\r\n                    selectedCell.signal = 'n';\r\n                } else {\r\n                    tableRow[pattern.lenIndex] = {signal: 'n', timing: 0, velAdj: 0};\r\n                }\r\n                update();\r\n            })}\r\n        {createItem('・', selectedCell != null && selectedCell.signal === 's',\r\n            selectedCell != null,\r\n            () => {\r\n                const status = selectedCell as BackingState.NoteStatus;\r\n                status.signal = 's'\r\n                update();\r\n            })}\r\n        {createItem('⁀', selectedCell != null && selectedCell.signal === 't',\r\n            selectedCell != null,\r\n            () => {\r\n                const status = selectedCell as BackingState.NoteStatus;\r\n                status.signal = 't'\r\n                update();\r\n            })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternOptions;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternOptions from \"./patternOptions\";\r\n\r\n/**\r\n * バッキングエディタ画面のパターン部分\r\n * @returns コンポーネント\r\n */\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    /**\r\n     * USEスイッチ押下時の処理\r\n     */\r\n    const useSwitchAction = () => {\r\n        if (!isUsePattern) {\r\n            const table = state.voicingTable as boolean[][];\r\n            const voicingStructs = BackingUtil.buildChannels(table);\r\n            const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n            state.pattern = {\r\n                layerIndex: 0,\r\n                lenIndex: 0,\r\n                channelIndex: -1,\r\n                channels,\r\n                isUsePedal: false,\r\n                mode: \"velocity\",\r\n                pedalActs: [null],\r\n                layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n            } as BackingState.Pattern;\r\n            update();\r\n        } else {\r\n            state.pattern = null;\r\n            update();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* ヘッダー部分（パターン利用スイッチ） */}\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button\r\n                        isActive={isUsePattern}\r\n                        onClick={useSwitchAction}\r\n                    >Use</_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternOptions /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #e00000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #ff0000;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\n/**\r\n * ボイシングを定義するテーブルのコンポーネント\r\n * @returns コンポーネント\r\n */\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const table = state.voicingTable;\r\n    const pattern = state.pattern;\r\n    // 選択可能なチャンネル数\r\n    const channelLimitNum = pattern == null ? BackingUtil.OCTAVE_NUM * BackingUtil.STRUCT_NUM : pattern.channels.length;\r\n\r\n    // return useMemo(() => {\r\n\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n    const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n    const chordName = TheoryUtil.KEY12_SHARP_LIST[chordRoot] + symbol.name;\r\n\r\n    const rowJsxList: JSX.Element[] = [];\r\n    let total = 0;\r\n    // オクターブ（テーブル横）のループ\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const cellJsxList: JSX.Element[] = [];\r\n        // 構成音（テーブル縦）のループ\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = symbol.structs.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n            if (isSelected) {\r\n                total++;\r\n            }\r\n\r\n            const interval = TheoryUtil.IntervalRelationProps[symbol.structs[j]];\r\n            const chordIndex = (chordRoot + interval) % 12;\r\n            const octave = i + Math.floor((chordRoot + interval) / 12);\r\n\r\n            const name = !isEnable ? '' : `${TheoryUtil.KEY12_SHARP_LIST[chordIndex]}${octave}`;\r\n            cellJsxList.push(\r\n                <_Cell key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    isOver={isSelected && total > channelLimitNum}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: BackingState.ChannelParam[] = BackingUtil.buildChannels(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                        dispatcher.backing.updateErrorState();\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.harmony;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_Cell>\r\n            );\r\n        }\r\n        rowJsxList.push(\r\n            <_TableRow key={i}>\r\n                {cellJsxList}\r\n            </_TableRow>\r\n        );\r\n    }\r\n\r\n    const structJsxList = symbol.structs.map((struct, i) => {\r\n        const key12List = TheoryUtil.KEY12_SHARP_LIST;\r\n        const interval = TheoryUtil.IntervalRelationProps[struct];\r\n        const chordIndex = (chordRoot + interval) % 12;\r\n        return (\r\n            <_StructItem key={i}>{struct} [{key12List[chordIndex]}]</_StructItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* コードの基本情報 */}\r\n            <_InfoDiv>\r\n                <_InfoItem>\r\n                    <_Label>Chord</_Label>\r\n                    <_Value>{chordName}</_Value>\r\n                </_InfoItem>\r\n                <_InfoItem>\r\n                    <_Label>Type</_Label>\r\n                    <_Value>{symbol.attr}</_Value>\r\n                </_InfoItem>\r\n            </_InfoDiv>\r\n            <_EditorDiv>\r\n                {/* 構成音の情報 */}\r\n                <_StructDiv>\r\n                    {structJsxList}\r\n                </_StructDiv>\r\n                {/* ボイシングのテーブル */}\r\n                <_TableDiv>{rowJsxList}</_TableDiv>\r\n            </_EditorDiv>\r\n        </_Wrap>\r\n    );\r\n    // }, [table, channelLimitNum]);\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _InfoItem = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #89dada; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 8px);\r\n    width: 80px;\r\n    background-color: #69bcdd;\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #026c86;\r\n    border: 1px solid #303030;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 6px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #cccccc; */\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst _EditorDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _StructDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _StructItem = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _TableDiv = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _TableRow = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Cell = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n    isOver: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #e5e747;\r\n    `}\r\n    ${props => !props.isOver ? '' : css`\r\n        background-color: #c40000;\r\n        color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #b9bb3f;\r\n        `}\r\n        ${props => !props.isOver ? '' : css`\r\n            background-color: #bb3f3f;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\n/**\r\n * バッキングエディタ画面\r\n * @returns コンポーネント\r\n */\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    useEffect(()=> {\r\n        console.log('backing start');\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_PrevireBrind isUse={state.isPreview} />\r\n            {/* ボイシングエディタ部分 */}\r\n            <VoicingChooser />\r\n            {/* パターンエディタ部分 */}\r\n            <PatternFrame />\r\n            {/* フッター部分 */}\r\n            <_FooterDiv>\r\n                {/* プレビュー再生 */}\r\n                <_Button isEnable={!state.hasError} onClick={() => {\r\n\r\n                    if (!state.isPreview) {\r\n                        dispatcher.backing.testBacking();\r\n                    } else {\r\n                        BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                    }\r\n                }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\r\n                {/* 編集を取り消しして閉じる */}\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Cancel</_Button>\r\n                {/* 編集を反映して閉じる */}\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.mappingEditorToScore();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/score/scoreData\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const cur = chordList[focusIndex];\r\n    const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={isBackingEnable}\r\n                onClick={() => {\r\n                    if (state.hideMenu === 'none') {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    } else if (state.hideMenu === 'backing') {\r\n                        dispatcher.backing.closeBackingEditor();\r\n                    }\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 7;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 8;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmClipboard = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    return (\r\n        <_Wrap>\r\n            <_Label>clipboard</_Label>\r\n            <_TypeDiv>\r\n                <_ModeItem isActive={state.cloneBacking != null}>Backing</_ModeItem>\r\n                <_ModeItem isActive={state.copiedElementList != null}>Elements</_ModeItem>\r\n            </_TypeDiv>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default HarmClipboard;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _TypeDiv = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #a8dbb3;\r\n    `}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #8f8f8f;\r\n    border-radius: 2px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst MEMORI_WIDTH = 12;\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        list.push(<_Margin key={list.length} />);\r\n        state.measureCacheList.forEach((cache) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {cache.barCount !== -1 ? <_Bar>{cache.barCount}</_Bar> : ''}\r\n                    {/* {<_Bar>{i}</_Bar>} */}\r\n                </_Memori>\r\n            );\r\n        });\r\n        list.push(<_Margin key={list.length} />);\r\n        return list;\r\n    }, [state.beatCacheList]);\r\n\r\n    const [beatJsxList, minuteJsxList] = useMemo(() => {\r\n        const beatJsxList: JSX.Element[] = [];\r\n        const minuteJsxList: JSX.Element[] = [];\r\n\r\n        const isChordFocus = dataList[focusIndex].type === 'chord';\r\n        const curChordIndex = cacheList[focusIndex].chordIndex;\r\n        // list.push(<_Start key={list.length}/>);\r\n        dataList.forEach((data, i) => {\r\n\r\n            const cache = state.elementCacheList[i];\r\n            if (data.type === 'chord' && Math.abs(cache.chordIndex - curChordIndex) <= 5) {\r\n\r\n                const detail = data.detail as DetailChord;\r\n                const sustain = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                let label = '';\r\n                let type: ItemType = 'ather';\r\n                if (!isChordFocus) {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                } else {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'cur';\r\n                        type = 'cur';\r\n                    } else if (cache.chordIndex === curChordIndex - 1) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                }\r\n\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatMemori = detail.beatLen * beatProps.beatMemoriCount;\r\n                const posMemori = 16 + cache.curTotalMemori;\r\n                beatJsxList.push(\r\n                    <_SustainItem key={beatJsxList.length}\r\n                        type={type}\r\n                        pos={posMemori} sustain={beatMemori + minute}\r\n                    >{label}</_SustainItem>\r\n                );\r\n                minuteJsxList.push(\r\n                    <_BeatItem key={beatJsxList.length}\r\n                        isActive={type === 'cur'}\r\n                        pos={posMemori + detail.minute.head} sustain={beatMemori}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        // list.push(<_Start key={list.length}/>);\r\n        return [beatJsxList, minuteJsxList];\r\n    }, [dataList.length, focusIndex, state.beatCacheList]);\r\n\r\n    const scrollPos = cacheList[focusIndex].curTotalMemori * MEMORI_WIDTH;\r\n    return (\r\n        <_Wrap>\r\n            <_ScrollFrame pos={scrollPos}>\r\n                <_Blocks>\r\n                    <_Beat>\r\n                        {beatJsxList}\r\n                    </_Beat>\r\n                    <_Minute>\r\n                        {minuteJsxList}\r\n                    </_Minute>\r\n                </_Blocks>\r\n                <_Measure>\r\n                    {memoriJsxList}\r\n                </_Measure>\r\n            </_ScrollFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _ScrollFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => -props.pos}px;\r\n    position: absolute;\r\n    height: 100%;\r\n    /* width: 100px;\r\n    background-color: #000; */\r\n    transition: left 0.5s;\r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n`;\r\n\r\ntype ItemType = 'cur' | 'prev' | 'next' | 'ather';\r\nconst _SustainItem = styled.div<{\r\n    pos: number;\r\n    sustain: number;\r\n    type: ItemType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(136, 163, 133);\r\n    ${props => {\r\n        switch (props.type) {\r\n            case 'cur': return css`\r\n                background-color: rgb(218, 107, 134);\r\n                /* color: #ffe551; */\r\n            `;\r\n            case 'prev': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 177, 221);\r\n            `;\r\n            case 'next': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 221, 171);\r\n            `;\r\n            case 'ather': return css`\r\n                background-color: rgb(192, 192, 192);\r\n            `;\r\n        }\r\n    }}\r\n    border-left: solid 1px #000;\r\n    border-top: solid 1px #000;\r\n    border-bottom: solid 1px #000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _BeatItem = styled.div<{\r\n    isActive: boolean;\r\n    pos: number;\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(224, 224, 224);\r\n    border-left: solid 1px #000;\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: rgb(233, 180, 228); */\r\n        /* color: #ffe551; */\r\n    `}\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Margin = styled.div`\r\n    display: inline-block;\r\n    width: ${MEMORI_WIDTH * 16}px;\r\n    height: 100%;\r\n    background-color: #d9ebe7;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${MEMORI_WIDTH}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection } from \"../../../../redux/store/score/scoreData\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport HarmSideForm from \"./side/harmSideForm\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport HarmClipboard from \"./initial/harmClipboard\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\n\r\n/**\r\n * ハーモナイズタブ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const state = store.scoreState;\r\n    const init = (store.scoreData.chordList[0].detail as DetailInit);\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, harmonize: () => {\r\n                dispatcher.system.setInvalidate({\r\n                    ...store.invalidate, harmoniizeInvalidate: {}\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    // useEffect(() => {\r\n    //     HarmonizeUtil.updateHarmonizeCache(store, dispatcher)\r\n    // }, [chordList, chordList.length, init.bpm]);\r\n\r\n    const harmMeasure = state.elementCacheList.length === 0 ? <></> : <HarmMeasure />;\r\n    const chordInfo = state.elementCacheList.length === 0 ? <></> : <ChordInfo />;\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_SECTIONS><HarmSections /></_SECTIONS>\r\n            <_Left>\r\n                <_Head isEnable={!state.isPreview}>\r\n                    {/* <InitialBeatTip /> */}\r\n                    <HarmClipboard />\r\n                </_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP>{harmMeasure}</_TIMELINE_WRAP>\r\n                    <_INFO_WRAP>{chordInfo}</_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right isEnable={!state.isPreview}>\r\n                <HarmSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH + HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Head = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    position: absolute;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    /* background-color: #ddc2c2; */\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7a270028;\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyTimelineMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            mouse.lock = x;\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        // if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            if (mouse.pos !== x) {\r\n                // console.log(`★ move=== x: ${x}, pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n                mouse.pos = x;\r\n                update();\r\n            }\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            // update();\r\n\r\n            const lock = mouse.lock + refs.measure.scrollLeft;\r\n            const pos = mouse.pos + refs.measure.scrollLeft;\r\n            const notesList = store.scoreData.notesList;\r\n            let start = -1;\r\n            let end = -1;\r\n            for (let i = 0; i < notesList.length; i++) {\r\n                const notes = notesList[i];\r\n                const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                const [head, tail] = lock < pos ? [lock, pos] : [pos, lock];\r\n                if (head <= left && tail >= right) {\r\n                    if (start === -1) start = i;\r\n                } else {\r\n                    if (start !== -1) {\r\n                        end = i - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            if (start !== -1 && end === -1) {\r\n                end = notesList.length - 1;\r\n            }\r\n            state.focusIndex = start;\r\n            state.destIndex = end;\r\n            mouse.lock = -1;\r\n            // console.log(`★ up=== focus: ${state.focusIndex}, dist: ${state.distIndex}`);\r\n            dispatcher.melody.setState(state);\r\n            // const [head, tail] = mouse.lock < x ? [mouse.lock, x] : [x, mouse.lock];\r\n            // const width = tail - head;\r\n            // if (width > 5) {\r\n            //     mouse.width = width;\r\n            //     mouse.lock = -1;\r\n            //     mouse.pos = head;\r\n            //     update();\r\n            //     console.log(`★ up=== pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n            // }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyTimelineMouseOperation;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport MelodyUtil, { getNormalizeLenFromNotes } from \"../../../../utils/melodyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimelineMouseOperation from \"./util/melodyTimelineMouseOperation\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n    update: () => void;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n    const update = props.update;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        state.measureCacheList.forEach((cache, i) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            // 表示する小節数\r\n            const barCount = cache.barCount;\r\n\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    beatWidth={beatWidth}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {barCount !== -1 ? <_Bar>{barCount}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        });\r\n        return list;\r\n    }, [state.beatCacheList, barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        if (state.elementCacheList.length === 0) {\r\n            return jsxList;\r\n        }\r\n        let left = 0;\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                // console.log(state.elementCacheList.length);\r\n                const detail = element.detail as DetailChord;\r\n                const cache = state.elementCacheList[i];\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minuteLen = minute * 0.25;\r\n                const adjustRate = beatProps.beatMemoriCount / 4;\r\n                const width = beatWidth * (detail.beatLen * adjustRate + minuteLen);\r\n\r\n                if (chordRef.current != null) {\r\n                    const scroll = chordRef.current.scrollLeft;\r\n                    if (left + width - scroll >= 0 ||\r\n                        left - scroll <= chordRef.current.clientWidth) {\r\n                        const symbolNmae = TheoryUtil.getSymbolFromKey(detail.symbolKey)?.name;\r\n                        const degreeName = detail.root == null ? '-' :\r\n                            TheoryUtil.getDegreeRoot(detail.root) + symbolNmae;\r\n                        const chordName = detail.root == null ? '-' :\r\n                            TheoryUtil.getChordRoot(detail.root, init.keyIndex) + symbolNmae;\r\n                        jsxList.push(\r\n                            <_ChordItem key={jsxList.length}\r\n                                left={left}\r\n                                width={width}\r\n                                isActive={element == curChord}\r\n                                onClick={() => {\r\n                                    state.isTune = false;\r\n                                    state.focusIndex = i;\r\n                                    dispatcher.score.setScoreState(state);\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                                }}\r\n                            >\r\n                                <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                            </_ChordItem>\r\n                        );\r\n                    }\r\n                }\r\n                left += width;\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_MeasureWrap ref={measureRef}>\r\n            <_MeasureInner\r\n                onMouseDown={e => MelodyTimelineMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseMove={e => MelodyTimelineMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseUp={e => MelodyTimelineMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseLeave={() => {\r\n                    const mouse = store.melodyState.timelineMouse;\r\n                    mouse.pos = -1;\r\n                    mouse.lock = -1;\r\n                    update();\r\n                }}\r\n            >\r\n                {measureJsxList}\r\n                <_MousePos\r\n                    left={mouseMeasurePos * beatWidth * rate}\r\n                    width={beatWidth * rate}\r\n                />\r\n            </_MeasureInner>\r\n        </_MeasureWrap>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _MeasureWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _MeasureInner = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* width: 100%; */\r\n    left: 0;\r\n    top: 0;\r\n    width: 10000px;\r\n    height: 100%;\r\n    &:hover {\r\n        background-color: #ff00b347;\r\n    }\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.left}px;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    pointer-events: none;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.beatWidth / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + TheoryUtil.IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #8f8f8f;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #adadad;\r\n    ${props => !props.isStruct ? '' : css`background-color: #ce6565;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #3b3b3b;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/score/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                state.isPreview = true;\r\n                dispatcher.melody.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.melody.setInstrument(soundFontPlayer);\r\n                    }).then(() => {\r\n                        state.isPreview = false;\r\n                        dispatcher.melody.setState(state);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #cacacada;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f7f7f7da;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e4e4e4da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #f7f7f7da;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={state.quantize === 4} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                {/* <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} /> */}\r\n                {/* <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} /> */}\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 9 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.destIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    const newLen = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.len) !== getNormalizeLenFromNotes(newLen)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.len = newLen;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    const newPos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.pos) !== getNormalizeLenFromNotes(newPos)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.pos = newPos;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.tableMouse;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                //履歴を作成\r\n                state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.melody.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.melody.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/score/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport MelodyUtil, {  } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n\r\n        // 選択しているノーツが1つである場合\r\n        const isSingle = state.focusIndex === state.destIndex;\r\n        const mouse = state.tableMouse;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.melody.copyNotes(); break;\r\n                    case 'v': dispatcher.melody.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.melody.allSelect();\r\n                    }\r\n                        break;\r\n                    case 's': dispatcher.score.saveFile(); break;\r\n                    case 'z': dispatcher.melody.undo(); break;\r\n                    case 'y': dispatcher.melody.redo(); break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.melody.incrementCurPitch(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.melody.incrementCurPitch(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveDestFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveDestFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.melody.incrementCurPitch(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.melody.incrementCurPitch(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(false);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(true);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.melody.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.melody.adjustScrollX(); break;\r\n                case 'e': dispatcher.melody.adjustScrollY(); break;\r\n                case 'z': {\r\n                   MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.melody.firstNotes();\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.melody.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.melody.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.melody.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.destIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/score/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport CacheUtil from \"../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const scoreState = store.scoreState;\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n    const [invalidate2, setInvalidate2] = useState<{}>({});\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.tableMouse;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n\r\n    const barCount = 150;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n    const rate = 1 / store.melodyState.quantize;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, melody: update\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    /**\r\n     * 画面上部のメモリJSXリスト\r\n     * 拍子のキャッシュから作成する\r\n     */\r\n    const measureJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        scoreState.measureCacheList.forEach((cache, i) => {\r\n\r\n            list.push(\r\n                <_Scale key={i} isHead={cache.rate === 4} beatWidth={state.beatWidth} />\r\n            );\r\n        });\r\n        return list;\r\n    }, [scoreState.beatCacheList, barCount]);\r\n\r\n    // const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    /**\r\n     * スケール区間のJSXリスト\r\n     * 背景色のラインを表現\r\n     * 転調でキーが変わる度に追加される\r\n     */\r\n    const scaleDivJsxList = useMemo(() => {\r\n        const divList: JSX.Element[] = [];\r\n        // console.log('**' + scoreState.scaleCacheList.length);\r\n        scoreState.scaleCacheList.forEach((scaleInfo, i) => {\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const scaleJsxList: JSX.Element[] = [];\r\n            for (let j = 0; j < PITCH_MAX; j++) {\r\n                const keyIndex = getKeyIndexFromPitcher(j);\r\n                scaleJsxList.push(\r\n                    <_ScaleLine key={j}\r\n                        isScale={scaleIndexies.includes(keyIndex)}\r\n                        isBase={keyIndex === scaleIndexies[0]}\r\n                    />\r\n                );\r\n            }\r\n\r\n            divList.push(\r\n                <_ScaleList key={i} width={state.beatWidth / 4 * scaleInfo.memoriCnt} isEven={i % 2 === 0}>\r\n                    {scaleJsxList}\r\n                </_ScaleList>\r\n            );\r\n        });\r\n        return divList;\r\n    }, [scoreState.scaleCacheList]);\r\n\r\n    /**\r\n     * 配置するノーツのJSXリスト\r\n     */\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        // let count = 0;\r\n        if (scoreState.scaleCacheList.length === 0) return list;//\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            const normalLeft = getNormalizeLenFromNotes(notes.pos);\r\n            const normalWidth = getNormalizeLenFromNotes(notes.len);\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const notesLeft = normalLeft * state.beatWidth;\r\n                const notesRight = notesLeft + normalWidth * state.beatWidth;\r\n                if (\r\n                    // !state.isPreview &&\r\n                    (notesRight - scroll < 0 || notesLeft - scroll > tableRef.current.clientWidth)\r\n                ) {\r\n                    continue;\r\n                }\r\n            }\r\n            const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n            // count++;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n\r\n            // クオンタイズ\r\n            const unitPos = getMinimumLenUnit(notes.pos);\r\n            const unitLen = getMinimumLenUnit(notes.len);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={normalLeft * state.beatWidth}\r\n                    width={normalWidth * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.melody.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\r\n                        isScale={isScale}\r\n                        isActive={isActive}\r\n                        isPreview={state.isPreview}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // console.log('cnt: ' + count);\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.destIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move]);\r\n\r\n    /**\r\n     * タイムラインを横にスクロールした際の処理\r\n     */\r\n    const sideScrollAction = () => {\r\n        const refs = store.refs.melody;\r\n\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const scrollLeft = refs.table.scrollLeft;\r\n            const scrollTop = refs.table.scrollTop;\r\n            refs.measure.scrollTo({ left: scrollLeft });\r\n            refs.chord.scrollTo({ left: scrollLeft });\r\n            refs.pitch.scrollTo({ top: scrollTop });\r\n        }\r\n        update();\r\n    };\r\n\r\n    /**\r\n     * マウスポインタがエリア外に出た際の処理\r\n     */\r\n    const mouseLeaveAction = () => {\r\n        console.log('leave!');\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n        update();\r\n    };\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header isEnable={!state.isPreview}>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                {(() => {\r\n                    const mouse = state.timelineMouse;\r\n                    if (mouse.lock === -1) {\r\n                        return mouse.pos === -1 ? <></> :\r\n                            <_MouseLinePos left={mouse.pos} />\r\n                    } else {\r\n                        const [head, tail] = mouse.lock < mouse.pos ? [mouse.lock, mouse.pos] : [mouse.pos, mouse.lock];\r\n                        const width = tail - head;\r\n                        return <_MouseRange left={head} width={width} />\r\n                    }\r\n                })()}\r\n                {\r\n\r\n                }\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                        update={() => setInvalidate2({})}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef} onScroll={sideScrollAction} >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleDivJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseLeave={mouseLeaveAction}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _MouseLine = css`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    width: 3px;\r\n`;\r\nconst _MouseLinePos = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #15ff00;\r\n`;\r\nconst _MouseLineLock = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #fbff00;\r\n`;\r\n\r\nconst _MouseRange = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    width: ${props => props.width}px;\r\n    background-color: #ffffff8b;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #464545;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n    /* background-color: #70ff7058; */\r\n`;\r\n\r\nconst _ScaleList = styled.div<{\r\n    width: number;\r\n    isEven: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    /* pointer-events: none; */\r\n    background-color: #70ff7021;\r\n    ${props => !props.isEven ? '' : css`\r\n        background-color: #708aff20;\r\n    `}\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #2727275a;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #00a6cf52;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `}\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `}\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb0040;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isPreview: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    opacity: 0.5;\r\n    ${props => props.isPreview && !props.isActive ? '' : css`    \r\n       opacity: 1;\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    ${props => !(props.isPreview && props.isActive) ? '' : css`\r\n        box-shadow: 0 0 32px 0 #ffffff92;\r\n    `}\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #7a270028;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport MelodyUtil, {  } from \"../../../utils/melodyUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    useEffect(() => {\r\n        const info = melody.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.melody.setInstrument(soundFontPlayer);\r\n            });\r\n\r\n        // acoustic_guitar_steel\r\n        //bright_acoustic_piano\r\n        Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\r\n            { gain: 2, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.score.setPiano(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    const switchMode = () => {\r\n        state.isTune = !state.isTune;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isTune ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isTune ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isTune ? () => {\r\n\r\n        if (!state.isPreview) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        } else {\r\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    } : () => {\r\n\r\n        if (!melody.isPreview) {\r\n            dispatcher.melody.previewStart();\r\n        } else {\r\n           MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    }\r\n    const toggleEnsamble = !state.isTune ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.melody.setState(melody);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode isEnable={!isPreview}>\r\n                    <_ModeItem isActive={!state.isTune} onClick={() => {\r\n                        if (state.isTune) switchMode();\r\n                    }}>Harmony</_ModeItem>\r\n                    <_ModeItem isActive={state.isTune} onClick={() => {\r\n                        if (!state.isTune) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch onClick={preview}><_SwitchInner isActive={isPreview}>Play</_SwitchInner> / <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner></_Switch>\r\n                    <_Switch onClick={toggleEnsamble}><_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner> / <_SwitchInner isActive={isSolo}>Solo</_SwitchInner></_Switch>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    const isPermit = !isPreview && state.hideMenu === 'none';\r\n                    if (isPermit) {\r\n                        switch (e.key) {\r\n                            case 'r': switchMode(); break;\r\n                        }\r\n                    }\r\n                }}>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isTune} />\r\n                    <MelodyFrame isActive={state.isTune} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div<{\r\n    isEnable: boolean\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #e1e4ca;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #eff3cf\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\nimport PreviewTab from \"./preview/previewTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    // { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    // { name: 'Preview', disable: !isAccept, cont: store.scoreData.chordList.length === 0 ? <></> : <PreviewTab data={store.scoreData} /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? TheoryUtil.DEGREE12_FLAT_LIST : TheoryUtil.DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    // sampler.releaseAll();\r\n\r\n                    const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = TheoryUtil.IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        // sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                // sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, isEnable: false, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, isEnable: false, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, isEnable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, isEnable: false, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length >= min && str.length <= max;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import { useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ValidateUtil from \"../../utils/validateUtil\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 400;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n    const [userId, setUserId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passConfirm, setPassConfirm] = useState('');\r\n    const [info, setInfo] = useState('');\r\n\r\n    const isButtonEnable = useMemo(() => {\r\n        return ValidateUtil.checkAll([\r\n            ValidateUtil.checkStringLength(userId, 4, 20),\r\n            ValidateUtil.checkStringLength(password, 4, 20),\r\n            ValidateUtil.checkStringLength(passConfirm, 4, 20),\r\n            \r\n        ]);\r\n    }, [isCreate, userId, password, passConfirm]);\r\n\r\n    /**\r\n     * 入力フォームのJSXを生成する\r\n     * @param title ラベル名\r\n     * @param value 値\r\n     * @param setter セッタの関数\r\n     * @returns JSX\r\n     */\r\n    const createFormJsx = (\r\n        title: string,\r\n        value: string,\r\n        setter: React.Dispatch<React.SetStateAction<string>>\r\n    ): JSX.Element => {\r\n        return (\r\n            <_Record>\r\n                <_Label>{title}</_Label>\r\n                <_TextField value={value} onChange={e => setter(e.target.value)} />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        if (isCreate) {\r\n\r\n            if (password != passConfirm) {\r\n                // setError(true);\r\n                // setMessage(`Confirmation passwords don't match.`);\r\n                // setLoading(false);\r\n                alert(`Confirmation passwords don't match.`);\r\n            } else {\r\n\r\n                (async () => {\r\n                    let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n                    let results = await response.json();\r\n                    console.log(JSON.stringify(results[0].cnt));\r\n                    const isExist = results[0].cnt > 0;\r\n                    if (isExist) {\r\n                        // setError(true);\r\n                        // setMessage('That user id has already been recorded.');\r\n                        alert('That user id has already been recorded.');\r\n                    } else {\r\n                        response = await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(id, pass) VALUES('${userId}', '${password}')`);\r\n                        results = await response.json();\r\n                        // setMessage('');\r\n                        alert('You have successfully created an account!');\r\n                        // setLoginType('login');\r\n                    }\r\n                    // setLoading(false);\r\n                })();\r\n            }\r\n\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {createFormJsx('user id', userId, setUserId)}\r\n            {createFormJsx('password', password, setPassword)}\r\n            {createFormJsx('password *', passConfirm, setPassConfirm)}\r\n            <_InfoDiv>{info}</_InfoDiv>\r\n            <_Footer>\r\n                <_ExecutableButton isEnable={true}>Clear</_ExecutableButton>\r\n                <_ExecutableButton isEnable={isButtonEnable} onClick={enterAction}>Enter</_ExecutableButton>\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #a9c5c7;\r\n    /* border: 1px solid #dadada; */\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #c73e3e75;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #d86262;\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    background-color: #91bdd6;\r\n    width: 100%;\r\n    height: 60px;\r\n    padding: 5px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: #222fa7;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport LoginFrame from \"../login/loginFrame\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton onClick={()=> {\r\n                    store.systemState.dialog = <LoginFrame />;\r\n                    dispatcher.system.setState(store.systemState);\r\n                }}>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useCallback, useEffect, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    const callback = useCallback(dispatcher.system.switchSplashToMain, []);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={callback} /\r\n                    >}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport SystemEntry from './system/contents/entry/systemEntry';\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    // 右クリック無効\r\n    document.oncontextmenu = function () { return false; }\r\n\r\n    // window.addEventListener(\"keydown\", function (e) {\r\n    //   // space and arrow keys\r\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n    //     e.preventDefault();\r\n    //   }\r\n    // }, false);\r\n\r\n    document.onkeydown = (e) => {\r\n      // if (!['F5'].includes(e.key)) {\r\n      //   return false;\r\n      // }\r\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n  }, []);\r\n  return (\r\n    <SystemEntry />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}