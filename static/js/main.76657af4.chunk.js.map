{"version":3,"sources":["system/utils/dataUtil.tsx","system/redux/reducer.tsx","system/utils/theoryUtil.tsx","system/utils/backingUtil.tsx","system/utils/cacheUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/utils/instrumentsUtil.tsx","system/redux/store/state/dataHistory.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/globalDialog.tsx","system/base/design/styles.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/contents/score/manage/chordProg/progSearcher.tsx","system/contents/score/manage/chordProg/progStyle.tsx","system/contents/score/manage/chordProg/progBackingUtil.tsx","system/contents/score/manage/chordProg/progUtil.tsx","system/contents/score/manage/chordProg/progCustomFrame.tsx","system/utils/dummyUtil.tsx","system/contents/score/manage/chordProg/progOutputFrame.tsx","system/contents/score/manage/chordProg/progTemplateFrame.tsx","system/contents/score/manage/chordProg/chordProgDialog.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/tool/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailAlter.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcAlter.tsx","system/contents/score/edit/harmonize/tool/chordEditor.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFromStyles.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/side/sideFormAlter.tsx","system/contents/score/edit/harmonize/side/minuteForm.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/harmSideForm.tsx","system/contents/score/edit/harmonize/info/structViewer.tsx","system/contents/backing/pattern/builder/patternDetail.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternPedal.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternVelocity.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternOptions.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/initial/harmClipboard.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/melody/util/melodyTimelineMouseOperation.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/utils/validateUtil.tsx","system/contents/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_DOMAIN","queryType","sql","fetch","mode","method","headers","Accept","body","JSON","stringify","createQueryRequestInit","val","content","encodeURIComponent","zlib","gzipSync","toString","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","plainData","state","fileHandle","a","createWritable","writable","text","DataUtil","gZip","write","close","getFile","alert","window","showSaveFilePicker","types","accept","then","handle","catch","console","log","ActionType","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","getBeatProps","keyIndex","scale","relation","beatSignature","beatMemoriCount","barBeatCnt","SYMBOL_LIST","beatLen","minute","bpm","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","root","index","isFlat","symbolKey","props","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","baseKeyIndex","TheoryUtil","KEY12_FLAT_LIST","KEY12_SHARP_LIST","find","symbol","list","forEach","push","rootIndex","map","on","chordRootIndex","chordFullName","getRootName","chordOnIndex","onName","structList","struct","interval","soundIndex","adjustOctave","Math","floor","isFlatFromRelation","sameIndex","some","info","i","splice","unshift","sort","b","onIndex","sound","onChordIndex","tempList","length","divCount","Array","fill","table","channels","j","octave","structIndex","voicingList","editorPattern","channelSize","layers","layer","divs","noteDivList","signals","record","cell","x","y","status","notesList","vels","velocityList","slice","pedals","pedalActs","pedal","divIndex","voicingStructs","size","channel","reverse","scoreLayers","scoreLayer","notes","item","baseInfo","backing","pitchIndexList","chordTime","pattern","soundName","playHarmony","adjustRate","pedalRangeList","total","timeList","div","start","normal","rate","isDot","div3","sustain","undefined","divTime","pedalInfo","end","ignoreList","ig","timeInfo","timingAdj","timing","startTime","sustainTime","signal","inc","isNext","nextNotes","next","k","notesTail","velAdj","gain","setTimeout","dispatcher","harmony","stop","isPreview","id","clearInterval","setState","memoriCount","head","tail","getUsingLenFromDivs","reduce","prev","cur","len","checkOverlapBackLayer","structCnt","col","isExist","voicing","voicingTable","patternProps","BackingUtil","buildChannels","getChannels","convertEditorLayerFromScore","channelIndex","lenIndex","layerIndex","detail","chordBacking","hasError","limitLen","getLimitLen","totalLen","chordInfo","init","baseLayer","backLayer","getDivRange","left","right","isOverlap","backLeft","backRight","note","includes","chordList","elementCacheList","sectionCacheList","beatCacheList","scaleCacheList","tempoCacheList","measureCacheList","totalMinute","sectionNo","sectionBeatSum","pastSecond","curSecond","chordIndex","curMemoriCount","totalBarCount","totalMemoriCount","beatRangeMemoriCount","totalBeat","totalMemoriBarCount","chordBlockNo","scaleMemoriCount","tempoMemoriCount","addTempoRange","beatRate","beatProps","memoriCnt","element","prevBeat","prevMemoriCount","prevBarCount","prevMinute","fixed","labelName","beatSum","rangeIndexStart","rangeIndexEnd","prevBar","calcSustainMsec","barMemoriCount","dispBarCount","barCount","alterType","modRel","dommVal","keyAdj","tempoRel","tempoDiff","tempoRate","tempoAbs","bar","surplusBeat","curTotalMemori","reffers","chordCacheList","createChordCacheList","score","setScoreState","cache","getSymbolFromKey","getChordDetails","backingError","hasBackingError","pos","curMemori","range","posTime","pastLen","last","CacheUtil","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len32","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","ml","getSortetdNotesLen","len32Cnt2","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","instrument","soundfontPlayer","play","duration","soundFullName","stopPreview","melody","adjustScrollX","previewHarmony","data","focusIndex","lastFocus","update","firstTime","getTimeInfoFromNotesPos","lenTime","pitch","pitchIndex","destIndex","isSolo","system","setReserveTasks","cacheList","chordCache","pitchList","getPitchListFromVoicing","playBacking","tableMouse","curChord","MelodyUtil","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","PATTERN_HEADER_HEIGHT","PATTERN_BODY_HEIGHT","NOTES_1BAR_WIDTH","Dispatcher","dispatch","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setInvalidate","saveFile","setPiano","setScoreTabIndex","scoreTabIndex","setKeySwitch","keySwitch","setScoreData","moveElement","sub","distIndex","moveDist","releaseRange","isTail","distHead","distTail","moveSection","curSectionIndex","curSectionInfo","curElementType","flashElement","incrementDegreeRoot","isUp","incrementBeatLen","updateHarmonizeCache","incrementMinuteVal","value","target","incrementMinuteValRelation","nearIndex","addChordElement","curBeatLen","addSectionElement","addAlterElement","removeCurElement","copyElementList","parse","copiedElementList","cloneBacking","pasteElementList","setDiatonicChord","diatonicIndex","chord","DIATONIC_MAJOR_SCALE_LIST","DIATONIC_MINOR_SCALE_LIST","setDefaultBacking","getDefaultBacking","pastBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setInstrument","incrementCurPitch","isUpper","filter","dataHistory","add","scaleIndexList","MAJOR_SCALE_INTERVALS","normalLeft","scaleInfo","getKeyScaleFromNotesPos","scaleIndexies","prevPitchIndex","tempPitchIndex","adjustScrollY","moveFocus","updateCurChord","moveDestFocus","beatWidth","searchedChord","width","addNotes","focus","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","posA","posB","undo","history","redo","openBackingEditor","hideMenu","getInitVoicingTable","getEditorPatternFromChordBacking","symbolAttr","getVoicingListFromTable","checkEditorError","closeBackingEditor","getInitialLayer","mappingEditorToScore","editor","buildPatternProps","addPatternColumn","lenList","curLen","newLen","column","updateErrorState","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","isPermitDot","getNotes","setNotes","incrementVel","after","deleteColumn","switchLayer","switchMode","testBacking","this","DataHistory","ret","initialStore","userEnv","keyConfig","up","down","addChord","addSection","addChange","deleteCur","distMode","edit1","edit2","incRoot","decRoot","incBeat","decBeat","colorProps","entryBackground","editable","dialog","isMelody","initialBeat","sustainMode","chordMode","symbolMode","control","minHeadMode","minTailMode","backingDataHistory","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","timelineMouse","soundfontInfo","scaleMode","resize","move","shift","notesCacheList","harmonize","measure","harmoniizeInvalidate","GloballDialog","useContext","GlobalContext","_Blind","onClick","styled","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isEnable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","ChannelContents","_Contents","CSS_BUTTON_DISABLE","_Label","TabbedPane","isDisable","disable","TabLabel","_TabLabel","TabContents","condition","UNIT_LIST","beat","step","firstChord","secondChord","parseChord","source","baseBeat","keyList","split","charAt","newBeat","Number","diatonicNo","diatonicProps","adjustKey","adjust","shortNameKey","substring","getSymbolFromShortName","shortName","ProgSearcher","ProgStyle","CSS_LABEL_MIDIUM","select","progBackingUtil","patternConditions","voicingConditions","STEP_LIST","getDefaultChord","sectionName","backingNo","outputUnits","elementList","block","blockDetail","sample","BACKING_SAMPLE_LIST","conPa","unZip","conVo","ProgUtil","ProgCustomFrame","setStep","degreeFilters","setDegreeFilters","lastChord","setLastChord","setFocusIndex","stepList","useMemo","getFilteredStepList","stepOptionJsxList","disp","degreeOptionJsxListArray","DEGREE_FILTER_LIST","unitList","search","jsx","dispUnitJsx","tootTipStr","beatCycle","chordName","getDegreeRoot","divStr","_Span","isMatch","_ChordName","_ProgItem","title","progUnitList","progJsxList","degreeChangeAction","e","_Frame","_TitleLabel","_Combobox","onChange","stepChangeAction","getLastChordName","_ListDiv","_ButtonDiv","_ExecutableButton","unitNum","reset","progUnit","insertProgUnit","_Record","RECORD_HEIGHT","span","DummyUtil","ProgOutputFrame","SECTION_CATEGORY","SECTION_NO","secCatOptionJsxList","secNoOptionJsxList","backingSampleJsxList","blockJsxList","isFixed","_Block","_FixedItem","_BackingLabel","updateOutputUnits","_ChordListDiv","_ChordItem","_ChordNameLabel","_ChordBeatDiv","jsxList","_BeatTip","getBeatTipsJsx","getInner","CSS_LABEL_SMALL","ProgTemplateFrame","templateJsxList","ChordProgDialog","buildMode","setBuildType","getBlankBlockList","setOutputUnits","beatFilter","setBeatFilter","closeAction","beatOptionJsxList","BEAT_DEF_LIST","chordDetail","createSwitchableButton","clickEvent","_SwitchableButton","beatComboboxEnable","distBeatFilter","_Header","getInitialBlockList","_MainDiv","_LeftDiv","_BeatFormDiv","beatChangeAction","_SwitchDiv","getSwitchContJsx","_RightDiv","_Footer","buildScoreData","HEADER_HEIGHT","BEAT_HEIGHT","ManageTab","file","setFile","tabIndex","modified","tempo","section","time","getStringFromDate","Date","lastModified","sectionNum","chordNum","fileInfo","scoreInfo","createLabelRecord","labelValue","_Recored","_ItemnLabel","_ItemnValue","isDataConnect","_Wrap","_ButtonsDiv","_Button","_Left","_ListInfoDiv","_Right","showOpenFilePicker","fileContents","_DataInfoDiv","_ScoreInfoDiv","DATA_INFO_HEIGHT","SymbolEditor","curSymbol","baseSymbol","derives","getSymbolDerives","parentJsx","curJsx","childrenJsx","_Row","CalcChord","symbolName","chordRoot","chordOn","prevCache","isError","minuteStr","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","barRem","_Len","_Border","ElementDetailAlter","_Type","sign","getDetailInfo","ElementDetailChord","degreeRoot","degreeOn","isDiatonic","getDiatonicDegreeList","_Degree","isSwitch","isSustainMode","scaleRelation","isOnChordScale","_DegreeRoot","_Tip","lenType","valueType","abs","_TipItem","_Error","_Voicing","_Pattern","isCurrent","_DegreeSymbol","_DegreeOnChord","_Backing","ElementFixedBorder","isStart","ElementDetailInit","_Title","_Value","ElementDetailSection","CalcAlter","getType","prevKey","curKey","curCache","prevTempo","curTempo","curBeat","getDetail","ChordEditor","getChord","createRow","label","listJsx","rootName","ScoreElement","wrapRef","useRef","bodyRef","isFocus","isRange","isSameSection","wrap","current","elementJson","isInactive","ref","isSelectable","isAdditional","_Head","_CurKey","getDisplayKeyScaleName","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","HarmSections","sections","curSectionNo","_Total","addProgAction","callback","HarmonizeUtil","previewMelody","clearTimeout","edit","common","patternNormalMode","patternDetailMode","test","isEdit","baseVel","tempTiming","tempVelAdj","vel","curNotes","BackingEditorInput","NoteKeyDown","config","isElement","previewCurHarmony","NoteBasicInput","main","NoteKeySwitch","isPress","min","max","_NumberForm","SideFormStyles","SideFormAlter","createAlertTypeItem","createModulateRelationItem","rel","createTempoRelationItem","createBeatItem","donmmItemJsxList","_ParamDiv","_ParamItem","keyAdjItemJsxList","_Group","_CategoryLabel","createNumberForm","currentTarget","valueAsNumber","___CSS_TITLE","___CSS_FORM","JUDGE_INFO_LIST","MinuteForm","rateMinus","ratePlus","isRed","JudgeJsxList","judge","_JudgeItem","setValue","createJudgeItem","isHead","_View","_ViewFrame","isLeft","_Judge","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","DEGREE_ALL","degree","isRootActive","isOnActive","MINOR_SCALE_INTERVALS","_RootItem","onContextMenu","symbolItemsJsx","_SymbolItem","createMinuteForm","_Timing","_BeatDiv","_Minute","_RootDiv","_SymbolDiv","SideFormInit","scaleItemJsxList","SCALE_DEF_LIST","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","splitList","_NumberItem","_DirectText","_SelectDiv","_TemplateFrame","_NumberFrame","input","_ItemBase","HarmSideForm","StructViewer","indexList","scaleList","structJsxList","curIndex","isScale","isUse","isBlack","_Struct","WIDTH","PatternDetail","_DelayDiv","_TimingValue","_VelocityDiv","_VelFrame","_VelItem","VEL_DIV_WIDTH","PatternLength","itemJsxList","PatternPedal","_Column","PatternTable","channelCount","curLayer","layerJsxList","jsxLsit","notesJsxLsit","setNotesStatus","viewSignal","prevCell","_Notes","isBack","_State","isEven","isFront","_Layer","zIndex","PatternVelocity","PatternBuilder","useTotalLen","isLenOverError","memoriWidth","memoriJsxList","bean","thickness","height","color","_Memori","_LengthDiv","_MeasureDiv","_MemoriList","_ChordLenLine","_OverCover","_Body","ChannelItem","soundfont","_Option","CHANNEL_MAX","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","structInfo","_LayerItem","_ModeItem","proops","PatternOptions","createItem","createRateItem","String","setRate","sizeJsxList","_ListItem","isPermit3ren","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","tableRecord","curCell","setRowStaccato","isSet","editModeJsx","_WrapEdit","hasStaccato","isExistNext","isEnableTai","option","PatternFrame","isUsePattern","_UseSwitch","isUsePedal","_Main","_StatusDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","channelLimitNum","OCTAVE_NUM","STRUCT_NUM","rowJsxList","selectCount","cellJsxList","isSelected","key12List","getSoundFullName","_Cell","isOver","_TableRow","_StructItem","isOnChord","_InfoItem","_EditorDiv","_StructDiv","_TableDiv","_InfoDiv","TIP_WIDTH","BackingEditorFrame","_PrevireBrind","_FooterDiv","HarmHideFrame","isOpen","isBackingEnable","HarmClipboard","_TypeDiv","MEMORI_WIDTH","HarmMeasure","dataList","_Margin","_Bar","beatJsxList","minuteJsxList","isChordFocus","curChordIndex","beatMemori","posMemori","_SustainItem","scrollPos","_ScrollFrame","_Blocks","_Measure","HarmonizeTab","timelineJsx","structViewerJsx","scoreCache","sideFormEnable","onKeyDown","onKeyUp","_SectionsDiv","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_RIGHT_WIDTH","HARMONIZE_HEAD_WIDTH","MelodyTimelineMouseOperation","mouseDownEvent","timelineLength","button","rect","getBoundingClientRect","clientX","mouseMoveEvent","mouse","mouseUpEvent","scrollLeft","MelodyTimeline","measureRef","chordRef","barLength","measureJsxList","chordJsxList","minuteLen","scroll","clientWidth","symbolNmae","degreeName","_DegreeName","_ChordWrap","_MeasureWrap","_MeasureInner","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_MousePos","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","Soundfont","AudioContext","release","soundFontPlayer","QuantizeSwitch","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","getNextLeft","clientY","scrollTop","curPos","posX","lenWidth","newPos","prevFocus","MelodyInput","keyDownEvent","isSingle","keySwitchEvent","MelodyFrame","tableRef","pitchRef","setInvalidate2","isTune","scaleDivJsxList","divList","scaleJsxList","_ScaleLine","isBase","_ScaleList","notesJsxList","normalWidth","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_MouseLinePos","_MouseRange","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","_Test","editAnimation","keyframes","_MouseLine","TUNE_TIMELINE_WIDTH","_Scale","EditTab","preview","toggleEnsamble","playJsx","_SwitchInner","stopJsx","ensambleJsx","soloJsx","_Mode","_Buttons","_Switch","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","items","degreeRootName","chordRootName","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","remove","_NowLoading","_Copylight","fadeIn","ValidateUtil","str","conditions","LoginFrame","isCreate","setCreate","userId","setUserId","password","setPassword","passConfirm","setPassConfirm","isButtonEnable","checkAll","checkStringLength","createFormJsx","setter","_TextField","_TypeSwitch","sendQueryRequestToAPI","response","json","results","cnt","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","useCallback","Provider","App","document","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.76657af4.chunk.js","sourcesContent":["import zlib from \"zlib\";\r\nimport { ScoreState } from \"../redux/store/score/scoreState\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const API_DOMAIN = 'http://10.114.240.172:5000';\r\n    export const API_DOMAIN = 'http://localhost:5000';\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         // sampleテーブルから全カラムのデータをid順に取得\r\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\r\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\r\n\r\n    //         if (error) {\r\n    //             throw error;\r\n    //         }\r\n    //         if (data) {\r\n    //             console.log(data);\r\n    //         }\r\n    //     } catch (error: any) {\r\n    //         alert(error.message);\r\n    //     } finally {\r\n\r\n    //     }\r\n    // };\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(API_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    export const saveFile = (plainData: string, state: ScoreState) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.lcrs'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        const fileHandle = state.fileHandle;\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                state.fileHandle = fileHandle;\r\n                // this.score.setScoreState({ ...state });\r\n                const file = await fileHandle.getFile();\r\n                alert('saved successfully!');\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = handle;\r\n                    // this.score.setScoreState({ ...state });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataUtil;","import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n    SET_INVALIDATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n        case ActionType.SET_INVALIDATE:\r\n            store.invalidate = payload.invalidate;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature, Scale } from \"../redux/store/score/scoreData\";\r\n\r\nnamespace TheoryUtil {\r\n\r\n    export const MAJOR_SCALE_INTERVALS = [0, 2, 4, 5, 7, 9, 11];\r\n    export const MINOR_SCALE_INTERVALS = [0, 2, 3, 5, 7, 8, 10];\r\n\r\n    export const KEY12_FLAT_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n    export const KEY12_SHARP_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n    ];\r\n\r\n    export const DEGREE12_FLAT_LIST = [\r\n        'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n    ];\r\n    // export const DEGREE12_FLAT_LIST = [\r\n    //     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n    // ];\r\n    export const DEGREE12_SHARP_LIST = [\r\n        'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n    ];\r\n\r\n    export const KEY12_MAJOR_SCALE_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const KEY12_MINOR_SCALE_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const getDisplayKeyScaleName = (keyIndex: number, scale: Scale) => {\r\n        return scale === 'major' ? KEY12_MAJOR_SCALE_LIST[keyIndex] :\r\n            KEY12_MINOR_SCALE_LIST[keyIndex] + 'm';\r\n    }\r\n\r\n    export const SCALE_DEF_LIST = ['major', 'minor'] as const;\r\n    export const BEAT_DEF_LIST = ['2/4', '4/4', '3/4', '6/8', '9/8', '12/8'] as const;\r\n\r\n    export type IntervalRelation =\r\n        'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n        'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n        'd7' | 'm7' | 'M7'\r\n        ;\r\n\r\n    export const isFlatFromRelation = (relation: IntervalRelation) => {\r\n        // 以下の場合#（シャープ）とする\r\n        switch (relation) {\r\n            case 'M2':\r\n            case 'M3':\r\n            case 'M6':\r\n            case 'M7':\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    export type SymbolAttribute =\r\n        'triad' |\r\n        'seventh' |\r\n        'add9th'\r\n        ;\r\n\r\n    export type SymbolParams = {\r\n        key: SymbolKey;\r\n        name: string;\r\n        base: null | SymbolKey;\r\n        attr?: SymbolAttribute;\r\n        structs: IntervalRelation[];\r\n    }\r\n\r\n    export type BeatProps = {\r\n        // mol: number;\r\n        // den: number;\r\n        // 1拍のメモリ（16分音符）の数\r\n        beatMemoriCount: number;\r\n        // 1小節の拍数\r\n        barBeatCnt: number;\r\n    }\r\n\r\n    /**\r\n     * 拍子より拍情報を取得する\r\n     * @param beatSignature 拍子\r\n     * @returns 拍情報\r\n     */\r\n    export const getBeatProps = (beatSignature: BeatSignature): BeatProps => {\r\n        switch (beatSignature) {\r\n            case '4/4': return { beatMemoriCount: 4, barBeatCnt: 4 };\r\n            case '2/4': return { beatMemoriCount: 4, barBeatCnt: 2 };\r\n            case '3/4': return { beatMemoriCount: 4, barBeatCnt: 3 };\r\n            case '6/8': return { beatMemoriCount: 6, barBeatCnt: 2 };\r\n            case '9/8': return { beatMemoriCount: 6, barBeatCnt: 3 };\r\n            case '12/8': return { beatMemoriCount: 6, barBeatCnt: 4 };\r\n        };\r\n        // return {} as BeatProps;\r\n    }\r\n\r\n    /**\r\n     * 拍の長さからコードの持続時間をミリ秒で算出する\r\n     * @param beatLen \r\n     * @param minute \r\n     * @param bpm \r\n     * @param beatSignature \r\n     * @returns \r\n     */\r\n    export const calcSustainMsec = (beatLen: number, minute: number, bpm: number, beatSignature: BeatSignature): number => {\r\n        const beatMemoriCount = getBeatProps(beatSignature).beatMemoriCount;\r\n        const minuteLen = minute * (1 / beatMemoriCount);\r\n        return 60000 / bpm * (beatLen + minuteLen);\r\n    }\r\n\r\n\r\n    export type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\n    export type SymbolKey =\r\n        'major' |\r\n        'minor' |\r\n        'suspend4th' |\r\n        'diminish' |\r\n        'augument' |\r\n        'major-maj7th' |\r\n        'major-min7th' |\r\n        'minor-7th' |\r\n        'minor-maj7th' |\r\n        'sus4-7th' |\r\n        'diminish-7th' |\r\n        'augument-7th' |\r\n        'major-add9th' |\r\n        'minor-add9th' |\r\n        'sixth-9th' |\r\n        'minor-minus5' |\r\n        'major-minus5' |\r\n        'minor7-minus5' |\r\n        'major-maj9th' |\r\n        'major-9th'\r\n        ;\r\n\r\n    export type DegreeProps = {\r\n        index: number;\r\n        isFlat: boolean;\r\n    };\r\n\r\n    export type ChordProps = {\r\n        root: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    };\r\n\r\n    export const SYMBOL_LIST: readonly SymbolParams[] = [\r\n        {\r\n            key: 'major', name: '',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor', name: 'm',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'suspend4th', name: 'sus4',\r\n            base: null,\r\n            structs: ['p1', 'p4', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish', name: 'dim',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish-7th', name: 'dim7',\r\n            base: 'diminish',\r\n            structs: ['p1', 'm3', 'd5', 'd7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'augument', name: 'aug',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'a5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'augument-7th', name: 'aug7',\r\n            base: 'augument',\r\n            structs: ['p1', 'M3', 'a5', 'm7']\r\n        },\r\n        {\r\n            key: 'minor-minus5', name: 'm(-5)',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'major-minus5', name: '-5',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor7-minus5', name: 'm7(-5)',\r\n            base: 'minor-minus5',\r\n            structs: ['p1', 'm3', 'd5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-maj7th', name: 'maj7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-min7th', name: '7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'minor-7th', name: 'm7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'sus4-7th', name: '7sus4',\r\n            base: 'suspend4th',\r\n            structs: ['p1', 'p4', 'p5']\r\n        },\r\n        {\r\n            key: 'minor-maj7th', name: 'mmaj7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-add9th', name: 'add9',\r\n            base: 'major',\r\n            structs: ['p1', 'M2', 'M3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'minor-add9th', name: 'madd9',\r\n            base: 'minor',\r\n            structs: ['p1', 'M2', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-maj9th', name: 'maj9',\r\n            base: 'major-maj7th',\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-9th', name: '9',\r\n            base: 'major-min7th',\r\n            structs: ['p1', 'm3', 'p5']\r\n        },\r\n    ];\r\n\r\n    /** インターバルの関係性 */\r\n    export const IntervalRelationProps = {\r\n        'p1': 0,\r\n        'm2': 1,\r\n        'M2': 2,\r\n        'm3': 3,\r\n        'M3': 4,\r\n        'p4': 5,\r\n        'd5': 6,\r\n        'p5': 7,\r\n        'a5': 8,\r\n        'm6': 8,\r\n        'M6': 9,\r\n        'd7': 9,\r\n        'm7': 10,\r\n        'M7': 11\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n    ];\r\n\r\n    export const DIATONIC_MINOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor-minus5' },\r\n        { root: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n    ];\r\n\r\n\r\n\r\n    export const DEGREE_ALL: readonly (DegreeProps | null)[] = [\r\n        null,\r\n        { index: 0, isFlat: false },\r\n        { index: 1, isFlat: false },\r\n        { index: 1, isFlat: true },\r\n        { index: 2, isFlat: false },\r\n        { index: 3, isFlat: false },\r\n        { index: 3, isFlat: true },\r\n        { index: 4, isFlat: false },\r\n        { index: 5, isFlat: false },\r\n        { index: 6, isFlat: false },\r\n        { index: 6, isFlat: true },\r\n        { index: 7, isFlat: false },\r\n        { index: 8, isFlat: false },\r\n        { index: 8, isFlat: true },\r\n        { index: 9, isFlat: false },\r\n        { index: 10, isFlat: false },\r\n        { index: 10, isFlat: true },\r\n        { index: 11, isFlat: false }\r\n    ];\r\n\r\n    export const getDegreeRoot = (props: DegreeProps) => {\r\n        const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n        return list[props.index];\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰ', 'Ⅰmaj7',\r\n        'Ⅱm', 'Ⅱm7',\r\n        'Ⅲm', 'Ⅲm7',\r\n        'Ⅳ', 'Ⅳmaj7',\r\n        'Ⅴ', 'Ⅴ7',\r\n        'Ⅵm', 'Ⅵm7',\r\n        'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n    ];\r\n\r\n    export const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰm', 'Ⅰm7',\r\n        'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n        'bⅢ', 'bⅢM7',\r\n        'Ⅳm', 'Ⅳm7',\r\n        'Ⅴm', 'Ⅴm7',\r\n        'bⅥ', 'bⅥM7',\r\n        'bⅦ', 'bⅦ7'\r\n    ];\r\n\r\n    export const getDiatonicDegreeList = (scale: Scale) => {\r\n        return scale === 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES :\r\n            DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\r\n    }\r\n\r\n    export const getRootName = (\r\n        props: DegreeProps,\r\n        baseKeyIndex: number\r\n    ): string => {\r\n        const list = props.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST;\r\n        return list[(baseKeyIndex + props.index) % 12];\r\n    }\r\n\r\n\r\n\r\n    export const getSymbolFromKey = (key: string): SymbolParams | undefined => {\r\n        return SYMBOL_LIST.find((symbol) => {\r\n            if (key === symbol.key) {\r\n                return symbol;\r\n            }\r\n        });\r\n        // return ret != undefined ? ret : SYMBOL_LIST[0];\r\n    }\r\n\r\n    export const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n        let list: SymbolKey[] = [];\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (key === symbol.base) {\r\n                list.push(symbol.key);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n\r\n    export const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n        return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n    }\r\n}\r\n\r\nexport default TheoryUtil;\r\n\r\n","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { BackingLayerData, BackingPatternProps, BackingSignalProps, BeatSignature, ChordBacking, DetailChord, DetailInit, PedalInfo, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { playHarmony } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nexport namespace BackingUtil {\r\n\r\n    // オクターブの数\r\n    export const OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    export const STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    export const CHANNEL_MAX = 12;\r\n\r\n    export const getChordDetails = (\r\n        root: TheoryUtil.DegreeProps,\r\n        keyIndex: number,\r\n        on: null | TheoryUtil.DegreeProps,\r\n        symbol: TheoryUtil.SymbolParams\r\n    ): [\r\n            string, BackingState.StructInfo[]\r\n        ] => {\r\n\r\n        // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n        const chordRootIndex = (root.index + keyIndex) % 12;\r\n        const rootName = TheoryUtil.getRootName(root, keyIndex);\r\n        let chordFullName = rootName + symbol.name;\r\n\r\n        let chordOnIndex = -1;\r\n        // オンコードが設定されている場合\r\n        if (on != null) {\r\n            const onName = TheoryUtil.getRootName(on, keyIndex);\r\n            chordFullName = `${chordFullName}/${onName}`;\r\n\r\n            chordOnIndex = (on.index + keyIndex) % 12;\r\n        }\r\n\r\n        // 構成音情報を算出\r\n        let structList: BackingState.StructInfo[] = symbol.structs.map(struct => {\r\n            const relation = struct;\r\n            const interval = TheoryUtil.IntervalRelationProps[relation];\r\n            const soundIndex = (chordRootIndex + interval) % 12;\r\n            const adjustOctave = Math.floor((chordRootIndex + interval) / 12);\r\n            const isFlat = TheoryUtil.isFlatFromRelation(relation);\r\n            return {\r\n                relation, soundIndex, isFlat, adjustOctave\r\n            }\r\n        });\r\n        // オンコードを考慮\r\n        if (chordOnIndex !== -1) {\r\n            let sameIndex = -1;\r\n            structList.some((info, i) => {\r\n                if (info.soundIndex === chordOnIndex) {\r\n                    sameIndex = i;\r\n                    return;\r\n                }\r\n            });\r\n            // オンコードが構成音と被っている場合リストから削除\r\n            if (sameIndex !== -1) {\r\n                structList.splice(sameIndex, 1);\r\n            }\r\n            // オンコードをリストに追加\r\n            structList.unshift({\r\n                relation: null,\r\n                soundIndex: chordOnIndex,\r\n                isFlat: false,\r\n                adjustOctave: 0\r\n            });\r\n            // 音程の昇順でソート\r\n            structList.sort((a, b) => {\r\n                return a.soundIndex - b.soundIndex;\r\n            });\r\n\r\n            /** ソート後のオンコードの場所 */\r\n            let onIndex = -1;\r\n            structList.some((sound, i) => {\r\n                if (sound.relation == null) {\r\n                    onIndex = i;\r\n                    return;\r\n                }\r\n            });\r\n            const onChordIndex = structList[onIndex].soundIndex;\r\n            const tempList: BackingState.StructInfo[] = [];\r\n            for (let i = onIndex; i < structList.length; i++) {\r\n                const sound = structList[i];\r\n                tempList.push(sound);\r\n            }\r\n            for (let i = 0; i < onIndex; i++) {\r\n                const sound = structList[i];\r\n                tempList.push(sound);\r\n            }\r\n            tempList.forEach(sound => {\r\n                sound.adjustOctave = 0;\r\n                if (sound.soundIndex < onChordIndex) {\r\n                    sound.adjustOctave = 1;\r\n                }\r\n            });\r\n            structList = tempList;\r\n        }\r\n        return [chordFullName, structList];\r\n    }\r\n\r\n    export const getInitialRecord = (divCount: number) => {\r\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    export const buildChannels = (table: boolean[][]): BackingState.ChannelParam[] => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    export const getVoicingListFromTable = (table: boolean[][]) => {\r\n\r\n        const voicingList: VoicingProps[] = [];\r\n        // ボイシングを設定\r\n        if (table != null) {\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        voicingList.push({ octave: i, struct: j });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return voicingList;\r\n    }\r\n\r\n    export const buildPatternProps = (editorPattern: BackingState.Pattern): BackingPatternProps => {\r\n        const channelSize = editorPattern.channels.length;\r\n        const layers: BackingLayerData[] = [];\r\n        editorPattern.layers.forEach(layer => {\r\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\r\n            const signals: BackingSignalProps[] = [];\r\n            layer.table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        signals.push({ x: j, y: i, status: cell });\r\n                    }\r\n                });\r\n            });\r\n            layers.push({ divs, notesList: signals, vels: layer.velocityList.slice() });\r\n        });\r\n        const pedals: PedalInfo[] = [];\r\n        editorPattern.pedalActs.forEach((pedal, i) => {\r\n            if (pedal != null) pedals.push({\r\n                divIndex: i, action: pedal\r\n            });\r\n        });\r\n        return { channelSize, pedals, layers };\r\n    }\r\n\r\n    export const getChannels = (voicingStructs: BackingState.ChannelParam[], size: number) => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: BackingState.ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n\r\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\r\n\r\n        const layers: BackingState.Layer[] = [];\r\n        console.log(JSON.stringify(scoreLayers));\r\n        scoreLayers.forEach(scoreLayer => {\r\n            const table: (BackingState.NoteStatus | null)[][] = [];\r\n            for (let i = 0; i < channelSize; i++) {\r\n                const record: (BackingState.NoteStatus | null)[] = [];\r\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\r\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\r\n                    record.push(notes == null ? null : notes.status);\r\n                }\r\n                table.push(record);\r\n            }\r\n            layers.push({\r\n                noteDivList: scoreLayer.divs,\r\n                table,\r\n                velocityList: scoreLayer.vels\r\n            });\r\n        });\r\n        console.log(JSON.stringify(layers));\r\n        return layers;\r\n    }\r\n\r\n    export const getPitchListFromVoicing = (\r\n        voicingList: VoicingProps[],\r\n        structList: BackingState.StructInfo[]\r\n    ) => {\r\n        // return voicingList.map((item) => {\r\n        //     const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        //     return 12 * item.octave + rootIndex + interval;\r\n        // });\r\n        return voicingList.map((item) => {\r\n            // const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n            // return 12 * item.octave + rootIndex + interval;\r\n            const struct = structList[item.struct];\r\n            const octave = item.octave + struct.adjustOctave;\r\n            return 12 * octave + struct.soundIndex;\r\n        });\r\n    }\r\n\r\n    export const playBacking = (\r\n        store: Store,\r\n        reserveTasks: NodeJS.Timeout[],\r\n        baseInfo: DetailInit,\r\n        backing: ChordBacking,\r\n        pitchIndexList: number[],\r\n        chordTime: number\r\n    ) => {\r\n        if (backing.pattern == null) {\r\n            pitchIndexList.forEach((index) => {\r\n                const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                const octave = Math.floor(index / 12);\r\n                const soundFullName = soundName + octave;\r\n                playHarmony(soundFullName, store, chordTime / 1000, 5);\r\n            });\r\n        } else {\r\n\r\n            const bpm = baseInfo.bpm;\r\n            const beatProps = TheoryUtil.getBeatProps(baseInfo.beatSignature);\r\n            const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (2 / 3);\r\n\r\n            const pattern = backing.pattern;\r\n            // const pedalIndexes = pattern.pedals === undefined ? null : pattern.pedals.map(pedal => pedal.divIndex);\r\n\r\n            /** ペダルの有効範囲を定義したリスト */\r\n            const pedalRangeList: { start: number, end: number, action: BackingState.PedalAction }[] = [];\r\n            pattern.layers.forEach((layer, i) => {\r\n                /** バッキング内で経過した時間（ノーツごとの開始時間） */\r\n                let total = 0;\r\n                const timeList: {\r\n                    start: number, sustain: number\r\n                }[] = layer.divs.map(div => {\r\n                    /** 開始時間 */\r\n                    const start = 60000 / bpm * total;\r\n                    let normal = 4 / div.rate * adjustRate;\r\n                    if (div.isDot) normal *= 1.5;\r\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                    total += normal;\r\n                    return { start, sustain: 60000 / bpm * normal };\r\n                });\r\n\r\n                // ペダル状態のキャッシュを作成\r\n                if (i === 0 && pattern.pedals != undefined) {\r\n                    timeList.forEach((divTime, j) => {\r\n                        const pedalInfo = pattern.pedals?.find((pedal) => {\r\n                            if (j === pedal.divIndex) return pedal;\r\n                        });\r\n                        if (pedalInfo != undefined) {\r\n\r\n                            if (pedalRangeList.length > 0) {\r\n                                pedalRangeList[pedalRangeList.length - 1].end = divTime.start;\r\n                            }\r\n                            pedalRangeList.push({\r\n                                start: divTime.start,\r\n                                end: chordTime,\r\n                                action: pedalInfo.action\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /** 除外リスト（タイで吸収されるノーツ） */\r\n                const ignoreList: { x: number, y: number }[] = [];\r\n                layer.notesList.forEach((notes) => {\r\n\r\n                    // 除外リストに含まれている場合、以降の処理をしない\r\n                    if (ignoreList.find(ig => {\r\n                        if (ig.x === notes.x && ig.y === notes.y) return ig;\r\n                    }) !== undefined) return;\r\n\r\n                    const timeInfo = timeList[notes.x];\r\n                    const timing = notes.status.timing == undefined ? 0 : notes.status.timing;\r\n                    const timingAdj = timing * (60000 / bpm * 1 / 32);\r\n                    const startTime = timeInfo.start + timingAdj;\r\n\r\n                    /** 持続時間 */\r\n                    let sustainTime = timeInfo.sustain;\r\n                    if (notes.status.signal === 's') {\r\n                        // スタッカートの場合半分の音価にする\r\n                        sustainTime *= 0.5;\r\n                    } else if (notes.status.signal === 't') {\r\n\r\n                        let inc = notes.x;\r\n                        let isNext = true;\r\n                        while (isNext) {\r\n                            inc++;\r\n                            // 次のノーツを探す\r\n                            const nextNotes = layer.notesList.find(next => {\r\n                                if (next.x === inc && next.y === notes.y) {\r\n                                    return next;\r\n                                }\r\n                            });\r\n                            if (nextNotes != undefined) {\r\n                                sustainTime += timeList[inc].sustain;\r\n                                // 次の要素を除外する\r\n                                ignoreList.push({ x: inc, y: notes.y });\r\n                                // 次のノーツがタイだったらループを継続\r\n                                isNext = nextNotes.status.signal === 't';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //ペダルを検出\r\n                    for (let k = 0; k < pedalRangeList.length; k++) {\r\n                        const pedal = pedalRangeList[k];\r\n                        const notesTail = startTime + timeInfo.sustain;\r\n                        if (pedal.action !== 'off' && notesTail > pedal.start &&\r\n                            notesTail <= pedal.end\r\n                        ) {\r\n                            // ペダルの持続時間で更新\r\n                            sustainTime = pedal.end - startTime;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    /** 音量 */\r\n                    const velAdj = notes.status.velAdj == undefined ? 0 : notes.status.velAdj;\r\n                    let gain = layer.vels[notes.x] + velAdj;\r\n                    if (gain < 1) gain = 1;\r\n                    if (gain > 10) gain = 10;\r\n                    gain *= 0.6;\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            const index = pitchIndexList[notes.y];\r\n                            const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                            const octave = Math.floor(index / 12);\r\n                            const soundFullName = soundName + octave;\r\n                            playHarmony(soundFullName, store, sustainTime / 1000, gain);\r\n                        }, startTime)\r\n                    );\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    export const stopPreview = (store: Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        store.instruments.harmony?.stop();\r\n        state.isPreview = false;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    export const getLimitLen = (beatLen: number, minute: BackingState.MinuteProps, beatSignature: BeatSignature) => {\r\n        // 16分音符の長さで割る\r\n        const memoriCount = TheoryUtil.getBeatProps(beatSignature).beatMemoriCount;\r\n        const minuteLen = minute.head / memoriCount + minute.tail / memoriCount;\r\n        return (beatLen + minuteLen);\r\n    }\r\n\r\n    export const getUsingLenFromDivs = (divs: BackingState.NoteDiv[], beatSignature: BeatSignature) => {\r\n        const beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        const adjustRate = 4 / beatProps.beatMemoriCount;\r\n        return divs.reduce((prev, cur) => {\r\n            let len = 1 / cur.rate * adjustRate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            return prev + len * 4;\r\n        }, 0);\r\n    }\r\n\r\n    export const getInitVoicingTable = (voicingList: VoicingProps[], structCnt: number): boolean[][] => {\r\n        const table = new Array<boolean[]>(8);\r\n        for (let i = 0; i < table.length; i++) {\r\n            table[i] = new Array<boolean>(6);\r\n            const col = table[i];\r\n            for (let j = 0; j < col.length; j++) {\r\n                // 構成音をオーバーしていた場合セットしない\r\n                if (j >= structCnt) continue;\r\n\r\n                const isExist = voicingList.find(voicing => {\r\n                    if (voicing.octave === i && voicing.struct === j) {\r\n                        return voicing;\r\n                    }\r\n                });\r\n                table[i][j] = isExist != null;\r\n            }\r\n        }\r\n        return table;\r\n    };\r\n\r\n    export const getEditorPatternFromChordBacking = (voicingTable: boolean[][], patternProps: BackingPatternProps | null) => {\r\n        let pattern: BackingState.Pattern | null = null;\r\n        if (patternProps != null) {\r\n            const voicingStructs = BackingUtil.buildChannels(voicingTable);\r\n            const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\r\n            const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);\r\n            let pedalActs: (null | BackingState.PedalAction)[] = [];\r\n            if (patternProps.pedals != undefined) {\r\n                for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\r\n                    const pedal = patternProps.pedals.find(pedal => {\r\n                        if (pedal.divIndex === i) return pedal;\r\n                    });\r\n                    if (pedal == undefined) pedalActs.push(null);\r\n                    else pedalActs.push(pedal.action);\r\n                }\r\n            } else {\r\n                for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\r\n                    if (i === 0) pedalActs.push('on');\r\n                    else pedalActs.push(null);\r\n                }\r\n            }\r\n            pattern = {\r\n                channelIndex: -1,\r\n                lenIndex: 0,\r\n                mode: 'velocity',\r\n                layerIndex: 0,\r\n                channels,\r\n                layers,\r\n                pedalActs\r\n            };\r\n        }\r\n        return pattern;\r\n    }\r\n\r\n    export const hasBackingError = (detail: DetailChord, beatSignature: BeatSignature, structCnt: number) => {\r\n        const chordBacking = detail.backing;\r\n        const voicingList = detail.backing.voicingList;\r\n        const pattern = chordBacking.pattern;\r\n        \r\n        let hasError = false;\r\n\r\n        // ボイシングが構成音に収まっているかチェック\r\n        voicingList.some(voicing => {\r\n            if(voicing.struct > structCnt - 1) {\r\n                hasError = true;\r\n                return true; // ループから脱出\r\n            }\r\n        });\r\n        if (pattern != null) {\r\n\r\n            const limitLen = BackingUtil.getLimitLen(detail.beatLen, detail.minute, beatSignature);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getUsingLenFromDivs(layer.divs, beatSignature);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkEditorError = (\r\n        chordInfo: BackingState.ChordInfo,\r\n        voicingList: VoicingProps[],\r\n        pattern: null | BackingState.Pattern\r\n    ): boolean => {\r\n        let hasError = false;\r\n        if (pattern != null) {\r\n\r\n            // 選択しているボイシングがチャンネル数に満たない場合\r\n            if (voicingList.length < pattern.channels.length) hasError = true;\r\n\r\n            const limitLen = BackingUtil.getLimitLen(chordInfo.beatLen, chordInfo.minute, chordInfo.init.beatSignature);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getUsingLenFromDivs(layer.noteDivList, chordInfo.init.beatSignature);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n\r\n            // 裏レイヤーのノーツと重なっている場合\r\n            pattern.layers[0].table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        if (checkOverlapBackLayer(pattern.layers, 0, i, j)) {\r\n                            hasError = true;\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkOverlapBackLayer = (layers: BackingState.Layer[], layerIndex: number, channelIndex: number, divIndex: number): boolean => {\r\n        const baseLayer = layers[layerIndex];\r\n        const backLayer = layers[layerIndex === 0 ? 1 : 0];\r\n        const [left, right] = getDivRange(baseLayer.noteDivList, divIndex);\r\n        // console.log(`left=${left}, right=${right}`);\r\n        let isOverlap = false;\r\n        for (let i = 0; i < backLayer.noteDivList.length; i++) {\r\n            if (backLayer.table[channelIndex][i] != null) {\r\n                const [backLeft, backRight] = getDivRange(backLayer.noteDivList, i);\r\n                if (right > backLeft && left < backRight) {\r\n                    isOverlap = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return isOverlap;\r\n    }\r\n\r\n    export const getDivRange = (divs: BackingState.NoteDiv[], divIndex: number): [number, number] => {\r\n        let [left, right] = [0, 0];\r\n\r\n        divs.slice(0, divIndex + 1).forEach((cur, i) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            left = right;\r\n            right += len * 4;\r\n        });\r\n        return [left, right];\r\n    }\r\n\r\n    export const isPermitDot = (note: BackingState.NoteDiv) => {\r\n        return [8, 4, 2].includes(note.rate) && note.div3 === 0;\r\n    }\r\n\r\n    export const isPermit3ren = (note: BackingState.NoteDiv) => {\r\n        return [8, 4].includes(note.rate) && !note.isDot;\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { symbolName } from \"typescript\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n/**\r\n * データを高速で参照するために、\r\n * 事前に計算したデータを保持するためのユーティリティを提供する\r\n */\r\nnamespace CacheUtil {\r\n\r\n    /**\r\n     * ハーモナイズのキャッシュを生成する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const updateHarmonizeCache = (store: Store, dispatcher: Dispatcher) => {\r\n        const chordList = store.scoreData.chordList;\r\n        const scoreState = store.scoreState;\r\n        const init = (chordList[0].detail as DetailInit);\r\n\r\n        const elementCacheList: ScoreCache.Element[] = [];\r\n        const sectionCacheList: ScoreCache.Section[] = [];\r\n        const beatCacheList: ScoreCache.BeatRange[] = [];\r\n        const scaleCacheList: ScoreCache.KeyScaleRange[] = [];\r\n        const tempoCacheList: ScoreCache.TempoRange[] = [];\r\n        const measureCacheList: ScoreCache.Measure[] = [];\r\n\r\n        // 初期値情報\r\n        let keyIndex = init.keyIndex;\r\n        let scale = init.scale;\r\n        let bpm = init.bpm;\r\n\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let sectionBeatSum = 0;\r\n        let pastSecond = 0;\r\n        let curSecond = 0;\r\n        let chordIndex = -1;\r\n        // let curTotalBeat = 0;\r\n        let curMemoriCount = 0;\r\n        let totalBarCount = 0;\r\n\r\n        // 経過した16分音符のカウント\r\n        let totalMemoriCount = 0;\r\n        let beatRangeMemoriCount = 0;\r\n        let totalBeat = 0;\r\n        let totalMemoriBarCount = 0;\r\n\r\n        let chordBlockNo = -1;\r\n\r\n        //拍キャッシュの産出に使う変数\r\n        let beatSignature = init.beatSignature;\r\n\r\n        let scaleMemoriCount = 0;\r\n        let tempoMemoriCount = 0;\r\n\r\n        const addScaleRange = () => {\r\n            scaleCacheList.push({\r\n                keyIndex,\r\n                scale,\r\n                memoriCnt: scaleMemoriCount\r\n            });\r\n            scaleMemoriCount = 0;\r\n        }\r\n        const addTempoRange = () => {\r\n            tempoCacheList.push({\r\n                bpm,\r\n                beatRate: beatProps.beatMemoriCount / 4,\r\n                memoriCnt: tempoMemoriCount\r\n            });\r\n            tempoMemoriCount = 0;\r\n        }\r\n\r\n\r\n        let beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        chordList.forEach((element, i) => {\r\n\r\n            const prevBeat = totalBeat;\r\n            // ブロック頭のメモリ\r\n            const prevMemoriCount = totalMemoriCount;\r\n            // ブロック頭の小節\r\n            const prevBarCount = totalBarCount;\r\n            const prevMinute = totalMinute;\r\n            const type = element.type;\r\n\r\n            switch (type) {\r\n                // 固定要素ブロック\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        pastSecond += curSecond;\r\n                    }\r\n                } break;\r\n\r\n                // セクション要素ブロック\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                } break;\r\n\r\n                // コード要素ブロック\r\n                case 'chord': {\r\n                    pastSecond += curSecond;\r\n                    // curTotalBeat += curSustain;\r\n\r\n                    const detail = element.detail as DetailChord;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    totalMinute += minute;\r\n                    chordIndex++;\r\n\r\n                    curMemoriCount = detail.beatLen * beatProps.beatMemoriCount + minute;\r\n\r\n                    const prevBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    totalBeat += detail.beatLen;\r\n                    const curBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    // 小節が変わった場合、合計小節をインクリメント\r\n                    if (prevBar !== curBar) {\r\n                        totalBarCount++\r\n                    }\r\n\r\n                    // スケールキャッシュの長さを加算\r\n                    scaleMemoriCount += curMemoriCount;\r\n                    tempoMemoriCount += curMemoriCount;\r\n\r\n                    // 時間の計算\r\n                    curSecond = TheoryUtil.calcSustainMsec(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        bpm,\r\n                        beatSignature\r\n                    );\r\n\r\n                    // メモリの加算\r\n                    for (let j = 0; j < curMemoriCount; j++) {\r\n                        let rate: ScoreCache.MeasureRate = 16;\r\n                        if (beatRangeMemoriCount % beatProps.beatMemoriCount === 0) rate = 4;\r\n                        else if (beatRangeMemoriCount % (beatProps.beatMemoriCount / (beatProps.beatMemoriCount / 2)) === 0) rate = 8;\r\n\r\n                        const barMemoriCount = beatProps.barBeatCnt * beatProps.beatMemoriCount;\r\n\r\n                        let dispBarCount = -1;\r\n                        if (beatRangeMemoriCount % barMemoriCount === 0) {\r\n                            // 拍子セクションの合計メモリ数が小節のメモリ数で割り切れる場合、小節数を表示する\r\n                            totalMemoriBarCount++;\r\n                            dispBarCount = totalMemoriBarCount;\r\n                        }\r\n                        measureCacheList.push({ rate, barCount: dispBarCount });\r\n                        totalMemoriCount++;\r\n                        beatRangeMemoriCount++;\r\n                    }\r\n\r\n                    // コードブロック連番の設定\r\n                    chordBlockNo++;\r\n                } break;\r\n\r\n                // アルター要素ブロックする\r\n                case 'alter': {\r\n                    const detail = element.detail as DetailAlter;\r\n                    switch (detail.alterType) {\r\n                        // 音階が変わる\r\n                        case 'modulate': {\r\n                            addScaleRange();\r\n                            switch (detail.modRel) {\r\n                                case 'domm': {\r\n                                    keyIndex = (keyIndex + 24 + 7 * detail.dommVal) % 12;\r\n                                } break;\r\n                                case 'key': {\r\n                                    keyIndex = (keyIndex + 12 + detail.keyAdj) % 12;\r\n                                } break;\r\n                                case 'parallel': {\r\n                                    keyIndex = (keyIndex + 12 + (scale === 'major' ? -1 : 1) * 3) % 12;\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                                case 'relative': {\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // テンポが変わる\r\n                        case 'tempo': {\r\n                            addTempoRange();\r\n                            switch (detail.tempoRel) {\r\n                                case 'diff': {\r\n                                    bpm += detail.tempoDiff;\r\n                                } break;\r\n                                case 'rate': {\r\n                                    bpm = Math.floor(bpm * 1 * (detail.tempoRate / 100));\r\n                                } break;\r\n                                case 'abs': {\r\n                                    bpm = detail.tempoAbs;\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // 拍子が変わる\r\n                        case 'beat': {\r\n                            addTempoRange();\r\n                            // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n                            beatCacheList.push({\r\n                                beatSignature,\r\n                                memoriCnt: beatRangeMemoriCount\r\n                            });\r\n\r\n                            beatSignature = detail.beatSignature;\r\n                            // 拍を初期化する（拍変更後はいかなる場合も0から数える）\r\n                            totalBeat = 0;\r\n                            beatRangeMemoriCount = 0;\r\n\r\n                            beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n                        } break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n\r\n            elementCacheList.push({\r\n                bar: prevBarCount,\r\n                surplusBeat: prevBeat % beatProps.barBeatCnt,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                scale,\r\n                bpm,\r\n                beatSignature,\r\n                sectionNo,\r\n                pastSecond,\r\n                chordIndex,\r\n                curTotalMemori: prevMemoriCount,\r\n                // chordFullName,\r\n                // structList,\r\n                chordBlockNo,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n        scaleCacheList.push({\r\n            keyIndex,\r\n            scale,\r\n            memoriCnt: scaleMemoriCount\r\n        });\r\n\r\n        beatCacheList.push({\r\n            beatSignature,\r\n            memoriCnt: beatRangeMemoriCount\r\n        });\r\n        addTempoRange();\r\n\r\n        scoreState.elementCacheList = elementCacheList;\r\n        scoreState.sectionCacheList = sectionCacheList;\r\n        scoreState.beatCacheList = beatCacheList;\r\n        scoreState.tempoCacheList = tempoCacheList;\r\n        scoreState.scaleCacheList = scaleCacheList;\r\n        scoreState.measureCacheList = measureCacheList;\r\n\r\n        scoreState.chordCacheList = createChordCacheList(chordList, elementCacheList);\r\n\r\n        dispatcher.score.setScoreState(scoreState);\r\n    }\r\n\r\n    export const createChordCacheList = (chordList: ChordElement[], elementCacheList: ScoreCache.Element[]) => {\r\n\r\n        const chordCacheList: ScoreCache.Chord[] = [];\r\n\r\n        chordList.forEach((element, i) => {\r\n\r\n            const type = element.type;\r\n            if (type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const cache = elementCacheList[i];\r\n\r\n\r\n                const keyIndex = cache.keyIndex;\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                const [chordFullName, structList] = detail.root != null ? BackingUtil.getChordDetails(\r\n                    detail.root,\r\n                    keyIndex,\r\n                    detail.on,\r\n                    symbol\r\n                ) : ['', []];\r\n\r\n                const backingError = BackingUtil.hasBackingError(detail, cache.beatSignature, structList.length);\r\n\r\n                chordCacheList.push({\r\n                    structList,\r\n                    chordFullName,\r\n                    backingError\r\n                });\r\n\r\n            }\r\n        });\r\n        return chordCacheList;\r\n    }\r\n\r\n    // export const getChordCache = (focusIndex: number, ) => {\r\n\r\n    // }\r\n\r\n\r\n    // export const updateMelodyCache = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    //     const notesList = store.scoreData.notesList;\r\n    //     const state = store.melodyState;\r\n\r\n    //     const notesCacheList: ScoreCache.NotesCache[] = [];\r\n\r\n    //     notesList.forEach((notes) => {\r\n    //         const startTime = 0;\r\n    //         const duration = 0;\r\n    //         notesCacheList.push({\r\n    //             startTime,\r\n    //             duration\r\n    //         });\r\n    //     });\r\n    // }\r\n\r\n    export const getKeyScaleFromNotesPos = (pos: number, scaleCacheList: ScoreCache.KeyScaleRange[]) => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let range: ScoreCache.KeyScaleRange | null = null;\r\n        // console.log(`count: ${scaleCacheList.length}`);\r\n        for (let i = 0; i < scaleCacheList.length; i++) {\r\n            const info = scaleCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                range = scaleCacheList[i - 1];\r\n                break;\r\n            }\r\n            tail += info.memoriCnt;\r\n            // console.log(`curPos: ${tail}`);\r\n        }\r\n        // console.log(`curMemori: ${curMemori}`);\r\n        return range === null ? scaleCacheList[scaleCacheList.length - 1] : range;\r\n    }\r\n\r\n    /**\r\n     * ノーツを再生する開始時間と持続時間を産出して返す\r\n     * @param pos ノーツの位置\r\n     * @param len ノーツの長さ\r\n     * @param tempoCacheList テンポのキャッシュリスト\r\n     * @returns \r\n     */\r\n    export const getTimeInfoFromNotesPos = (pos: number, len: number, tempoCacheList: ScoreCache.TempoRange[]): [number, number] => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let posTime = 0;\r\n        let pastLen = 0;\r\n        let last: ScoreCache.TempoRange | null = null;\r\n        for (let i = 0; i < tempoCacheList.length; i++) {\r\n            const info = tempoCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                last = tempoCacheList[i - 1];\r\n                break;\r\n            }\r\n            const beatLen = info.memoriCnt / 4;\r\n            posTime += 60 / info.bpm * beatLen;\r\n            pastLen += beatLen;\r\n            tail += info.memoriCnt;\r\n        }\r\n        if (last === null) {\r\n            last = tempoCacheList[tempoCacheList.length - 1];\r\n        }\r\n\r\n        const beatLen = (pos - pastLen) * last.beatRate;\r\n        posTime += 60 / last.bpm * beatLen;\r\n\r\n        const lenTime = 60 / last.bpm * len * last.beatRate;\r\n\r\n        return [posTime, lenTime];\r\n    }\r\n}\r\n\r\nexport default CacheUtil;\r\n","import { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += (notes.len4 ?? 0);\r\n    total += (notes.len8 ?? 0) / 2;\r\n    total += (notes.len16 ?? 0) / 4;\r\n    total += (notes.len32 ?? 0) / 8;\r\n    total += (notes.len4div3 ?? 0) / 3;\r\n    total += (notes.len8div3 ?? 0) / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    const ml: MelodyLength = {};\r\n    const len4 = (notes1.len4 ?? 0) + (notes2.len4 ?? 0);\r\n    if (len4 > 0) ml.len4 = len4;\r\n    const len8 = (notes1.len8 ?? 0) + (notes2.len8 ?? 0);\r\n    if (len8 > 0) ml.len8 = len8;\r\n    const len16 = (notes1.len16 ?? 0) + (notes2.len16 ?? 0);\r\n    if (len16 > 0) ml.len16 = len16;\r\n    const len32 = (notes1.len32 ?? 0) + (notes2.len32 ?? 0);\r\n    if (len32 > 0) ml.len32 = len32;\r\n    const len4div3 = (notes1.len4div3 ?? 0) + (notes2.len4div3 ?? 0);\r\n    if (len4div3 > 0) ml.len4 = len4div3;\r\n    const len8div3 = (notes1.len8div3 ?? 0) + (notes2.len8div3 ?? 0);\r\n    if (len8div3 > 0) ml.len8div3 = len8div3;\r\n    return getSortetdNotesLen(ml);\r\n}\r\n\r\nconst getSortetdNotesLen = (base: MelodyLength) => {\r\n    let len4 = base.len4 ?? 0;\r\n    let len8 = base.len8 ?? 0;\r\n    let len16 = base.len16 ?? 0;\r\n    let len32 = base.len32 ?? 0;\r\n    let len4div3 = base.len4div3 ?? 0;\r\n    let len8div3 = base.len8div3 ?? 0;\r\n\r\n    const ml: MelodyLength = {};\r\n\r\n    const len32Cnt2 = Math.floor(len32 / 2);\r\n    len32 -= len32Cnt2 * 2;\r\n    len16 += len32Cnt2;\r\n\r\n    const len8div3Cnt3 = Math.floor(len8div3 / 3);\r\n    len8div3 -= len8div3Cnt3 * 3;\r\n    len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(len8div3 / 2);\r\n    len8div3 -= len8div3Cnt2 * 2;\r\n    len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(len4div3 / 3);\r\n    len4div3 -= len4div3Cnt3 * 3;\r\n    len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(len16 / 2);\r\n    len16 -= len16Cnt2 * 2;\r\n    len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(len8 / 2);\r\n    len8 -= len8Cnt2 * 2;\r\n    len4 += len8Cnt2;\r\n\r\n    if (len4 > 0) ml.len4 = len4;\r\n    if (len8 > 0) ml.len8 = len8;\r\n    if (len16 > 0) ml.len16 = len16;\r\n    if (len32 > 0) ml.len32 = len32;\r\n    if (len4div3 > 0) ml.len4div3 = len4div3;\r\n    if (len8div3 > 0) ml.len8div3 = len8div3;\r\n\r\n    return ml;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len32 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 8: len32 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n\r\n    const ml: MelodyLength = {};\r\n    if (len4 > 0) ml.len4 = len4;\r\n    if (len8 > 0) ml.len8 = len8;\r\n    if (len16 > 0) ml.len16 = len16;\r\n    if (len32 > 0) ml.len32 = len32;\r\n    if (len4div3 > 0) ml.len4div3 = len4div3;\r\n    if (len8div3 > 0) ml.len8div3 = len8div3;\r\n    return getSortetdNotesLen(ml);\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if ((notes.len32 ?? 0) > 0) return 8;\r\n    else if ((notes.len8div3 ?? 0) > 0) return 6;\r\n    else if ((notes.len16 ?? 0) > 0) return 4;\r\n    else if ((notes.len4div3 ?? 0) > 0) return 3;\r\n    else if ((notes.len8 ?? 0) > 0) return 2;\r\n    else if ((notes.len4 ?? 0) > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playHarmony = (soundFullName: string, store: Store, duration: number, gain: number) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, { gain, duration });\r\n    } else {\r\n        alert('null');\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nnamespace MelodyUtil {\r\n\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        state.isPreview = false;\r\n        // state.focusIndex = state.lastFocus;\r\n        // state.distIndex = state.focusIndex;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        // store.instruments.sampler.releaseAll();\r\n        dispatcher.melody.setState(state);\r\n        dispatcher.melody.adjustScrollX();\r\n    }\r\n\r\n    /**\r\n     * プレビュー再生を開始する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const reserveTasks: NodeJS.Timeout[] = [];\r\n        const instrument = store.instruments.soundfontPlayer;\r\n\r\n        // 開始するフォーカス（非選択時は最初から）\r\n        const start = state.focusIndex === -1 ? 0 : state.focusIndex;\r\n\r\n        // プレビュー開始時のフォーカスを保持する\r\n        state.lastFocus = state.focusIndex;\r\n        state.isPreview = true;\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = start; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                        dispatcher.melody.adjustScrollX();\r\n                        // dispatcher.melody.setState(state);\r\n                    }, 0);\r\n                }, (posTime - firstTime) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (posTime - firstTime + lenTime) * 1000)\r\n                );\r\n            }\r\n        }\r\n\r\n        // ハーモニーを再生\r\n        if (!state.isSolo) {\r\n            previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n\r\n        dispatcher.system.setReserveTasks(reserveTasks);\r\n        dispatcher.melody.setState(state);\r\n    }\r\n\r\n    const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        const update = store.invalidate.melody as () => void;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = 3; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                if (cache.pastSecond < start) continue;\r\n\r\n                const detail = element.detail as DetailChord;\r\n\r\n                if (detail.root == null) return;\r\n\r\n                // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\r\n                // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n\r\n                // const chordTime = 60 / cache.bpm * len;\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const chordTime = TheoryUtil.calcSustainMsec(\r\n                    detail.beatLen,\r\n                    minute,\r\n                    cache.bpm,\r\n                    cache.beatSignature\r\n                );\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // sampler.releaseAll();\r\n                        // stopPiano(store);\r\n\r\n                        // const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                        // const div = pickingDelay / pitchList.length;\r\n\r\n                        // pitchList.forEach((index, j) => {\r\n                        //     const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        //     const octave = Math.floor(index / 12);\r\n                        //     const soundFullName = soundName + octave;\r\n                        //     playPiano(soundFullName, store, chordTime);\r\n                        // });\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n                        setTimeout(() => {\r\n                            store.melodyState.tableMouse.curChord = element;\r\n                            update();\r\n                            // dispatcher.melody.setState(store.melodyState);\r\n                        }, 0);\r\n                    }, cache.pastSecond - start - adjsut)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const chordList = store.scoreData.chordList;\r\n        const cacheList = store.scoreState.elementCacheList;\r\n        const cache = cacheList[3];\r\n        const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n        const init = chordList[0].detail as DetailInit;\r\n        const curChord = state.tableMouse.curChord;\r\n        const reserveTasks = store.reserveTasks;\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            // const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            // const onIndex = detail.on == null ? -1 : ((detail.on.index + init.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n            // const chordTime = 60 / init.bpm * len;\r\n            const minute = detail.minute.head + detail.minute.tail;\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                detail.beatLen,\r\n                minute,\r\n                init.bpm,\r\n                init.beatSignature\r\n            );\r\n\r\n            BackingUtil.playBacking(store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.melody.setState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.melody.setState(state);\r\n\r\n        }\r\n    }\r\n\r\n    export type Quantize = 32 | 16| 8 | 4;\r\n\r\n    export const isEnableQuantize = (quantize: Quantize, notes: MelodyLength) => {\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyUtil;","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailAlter, DetailChord, DetailInit, DetailSection, Scale, ScoreData, MelodyNotes, VoicingProps } from \"../store/score/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/score/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/score/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport MelodyUtil, { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\nimport { Invalidate } from \"../store/invalidate\";\r\nimport BackingState from \"../store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport CacheUtil from \"../../utils/cacheUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport ScoreCache from \"../store/score/scoreCache\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        },\r\n\r\n        setInvalidate: (invalidate: Invalidate) => {\r\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        saveFile: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const options = {\r\n                types: [\r\n                    {\r\n                        accept: {\r\n                            'text/plain': ['.lcrs'],\r\n                        },\r\n                    },\r\n                ],\r\n            };\r\n            const fileHandle = state.fileHandle;\r\n            if (fileHandle != null) {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await fileHandle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(JSON.stringify(data));\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = fileHandle;\r\n                    this.score.setScoreState({ ...state });\r\n                    const file = await fileHandle.getFile();\r\n                    // alert('saved successfully!');\r\n                    console.log('saved successfully!');\r\n                })();\r\n            } else {\r\n                window.showSaveFilePicker(options).then((handle) => {\r\n                    (async () => {\r\n                        //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                        const writable = await handle.createWritable();\r\n                        //テキストデータの書き込み\r\n                        const text = DataUtil.gZip(JSON.stringify(data));\r\n                        await writable.write(text);\r\n                        //ファイルを閉じる\r\n                        await writable.close();\r\n                        state.fileHandle = handle;\r\n                        this.score.setScoreState({ ...state });\r\n                    })();\r\n                }).catch(() => {\r\n                    console.log('キャンセルされました');\r\n                });\r\n            }\r\n        },\r\n\r\n        setPiano: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, harmony: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                state.distIndex = state.focusIndex;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 選択範囲の終点を移動する\r\n         * @param isNext \r\n         */\r\n        moveDist: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.distIndex + sub].type !== 'fixed') {\r\n                state.distIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n            state.focusIndex = !isTail ? distHead : distTail;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        flashElement: (index: number) => {\r\n            // const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[index];\r\n\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n\r\n            // bodyRef.style.backgroundColor = '#ffef5f';\r\n            // setTimeout(() => {\r\n            //     bodyRef.style.backgroundColor = '';\r\n            // }, 10);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                if (isUp) {\r\n                    detail.root = { index: 0, isFlat: false };\r\n                    this.score.setScoreData(data);\r\n                    this.score.flashElement(state.focusIndex);\r\n                }\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            } else if (detail.root.index + sub === -1) {\r\n                detail.root = null;\r\n                detail.symbolKey = 'major';\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n            // キャッシュの更新\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            if (detail.root != null) {\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(detail.root, cache.keyIndex, detail.on, symbol);\r\n            } else {\r\n                chordCache.chordFullName = '';\r\n                chordCache.structList = [];\r\n            }\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                // setTimeout(() => {\r\n                CacheUtil.updateHarmonizeCache(this.store, this);\r\n                // }, 1);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -2 && target <= 2) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                CacheUtil.updateHarmonizeCache(this.store, this);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[state.focusIndex];\r\n\r\n            // 拍の初期値を取得\r\n            const beatSignature = state.elementCacheList[state.focusIndex].beatSignature;\r\n            const initialBeat = TheoryUtil.getBeatProps(beatSignature).barBeatCnt;\r\n            let curBeatLen = initialBeat;\r\n            if (cur.type === 'chord') {\r\n                const curChord = cur.detail as DetailChord;\r\n                // 後にシンコペーションが設定されている場合は追加できない\r\n                if (curChord.minute.tail != 0) return;\r\n\r\n                curBeatLen = curChord.beatLen;\r\n            }\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: curBeatLen,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null,\r\n                        hasError: false\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        addAlterElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'alter', detail: {\r\n                    alterType: null,\r\n                    modRel: null,\r\n                    dommVal: 0,\r\n                    keyAdj: 0,\r\n                    tempoRel: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbs: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailAlter\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                const sectionNo = this.store.scoreState.elementCacheList[i].sectionNo;\r\n                // 先頭のセクション要素が含まれている場合削除しない\r\n                if (element.type === 'section' && sectionNo === 0) {\r\n                    return;\r\n                }\r\n            }\r\n            data.chordList.splice(distHead, (distTail - distHead) + 1);\r\n            this.score.setScoreData(data);\r\n            state.focusIndex = distHead - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // // reffer.style.width = '300px';\r\n            // wrapRef.style.opacity = '0';\r\n            // wrapRef.style.overflow = 'hidden';\r\n            // // wrapRef.style.padding = '0';\r\n            // wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '0';\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.opacity = '';\r\n            //     wrapRef.style.width = '';\r\n            //     wrapRef.style.overflow = '';\r\n            //     // wrapRef.style.padding = '';\r\n            //     const data = this.store.scoreData;\r\n            //     data.chordList.splice(state.focusIndex, 1);\r\n            //     this.score.setScoreData(data);\r\n            //     state.focusIndex--;\r\n            //     this.score.setScoreState(state);\r\n            //     // setTimeout(() => {\r\n            //     //     reffer.style.opacity = '';\r\n            //     //     reffer.style.width = '';\r\n            //     //     const data = this.store.scoreData;\r\n            //     //     data.chordList.splice(state.focusIndex, 1);\r\n            //     //     this.score.setScoreData(data);\r\n            //     // }, 200);\r\n            // }, 200);\r\n        },\r\n\r\n        copyElementList: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            const list: ChordElement[] = [];\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                list.push(JSON.parse(JSON.stringify(element)));\r\n            }\r\n            console.log(list.length);\r\n            state.copiedElementList = list;\r\n            state.cloneBacking = null;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        pasteElementList: () => {\r\n            const state = this.store.scoreState;\r\n\r\n            const data = this.store.scoreData;\r\n            const list = state.copiedElementList;\r\n            if (list == null) return;\r\n\r\n            console.log(list.length);\r\n            list.forEach((element, i) => {\r\n                data.chordList.splice(state.focusIndex + 1 + i, 0, element);\r\n            });\r\n            this.score.setScoreData(data);\r\n            state.focusIndex++;\r\n            state.distIndex = state.focusIndex + list.length - 1;\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        // incrementSymbol: (isUp: boolean) => {\r\n        //     const state = this.store.scoreState;\r\n        //     const data = this.store.scoreData;\r\n        //     const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n        //     const sub = isUp ? 1 : -1;\r\n        //     if (detail.root == null) {\r\n        //         detail.root = { index: 0, isFlat: false };\r\n        //         this.score.setScoreData(data);\r\n        //     } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n        //         detail.root.index += sub;\r\n        //         detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n        //         this.score.setScoreData(data);\r\n        //     }\r\n        // },\r\n\r\n        setDiatonicChord: (scale: Scale, diatonicIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const scaleList = scale === 'major' ? TheoryUtil.DIATONIC_MAJOR_SCALE_LIST : TheoryUtil.DIATONIC_MINOR_SCALE_LIST;\r\n            const chord = scaleList[diatonicIndex];\r\n            const root: TheoryUtil.DegreeProps = { ...chord.root };\r\n            detail.root = root;\r\n            detail.symbolKey = chord.symbolKey;\r\n            // オンコードの設定を解除\r\n            detail.on = null;\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n            [chordCache.chordFullName, chordCache.structList] =\r\n                BackingUtil.getChordDetails(root, cache.keyIndex, null, symbol);\r\n            chordCache.backingError =\r\n                BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        cloneBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n        },\r\n\r\n        pastBacking: () => {\r\n            const state = this.store.scoreState;\r\n            if (state.cloneBacking != null) {\r\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n                const data = this.store.scoreData;\r\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreData(data);\r\n\r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n\r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                chordCache.backingError =\r\n                    BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n\r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                chordCache.backingError =\r\n                    BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    /**\r\n     * メロディ画面のディスパッチ\r\n     */\r\n    public melody = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        /**\r\n         * 全てのノーツを選択する\r\n         */\r\n        allSelect: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = notesList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n        },\r\n\r\n        setNotesList: (notesList: MelodyNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * 選択中のノーツの音程を変更する\r\n         * @param isUpper\r\n         * @param mode \r\n         * @returns \r\n         */\r\n        incrementCurPitch: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n            const scoreState = this.store.scoreState;\r\n            const state = this.store.melodyState;\r\n            const focusIndex = state.focusIndex;\r\n            const distIndex = state.destIndex;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            // フォーカスされていない場合は処理しない\r\n            if (focusIndex === -1) return;\r\n\r\n            if (focusIndex !== distIndex) {\r\n\r\n                const targetList = notesList.filter(\r\n                    (notes, i) => i >= focusIndex && i <= distIndex\r\n                );\r\n\r\n                targetList.forEach(notes => {\r\n                    notes.pitchIndex += 1 * (isUpper ? -1 : 1);\r\n                });\r\n\r\n                // 履歴を作成\r\n                state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                this.melody.setNotesList(notesList.slice());\r\n            } else {\r\n                const cur = notesList[focusIndex];\r\n                // const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n                const scaleIndexList = TheoryUtil.MAJOR_SCALE_INTERVALS;\r\n                const normalLeft = getNormalizeLenFromNotes(cur.pos);\r\n                const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n                const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n\r\n                const prevPitchIndex = cur.pitchIndex;\r\n                const interval = mode !== 'octave' ? 1 : 12;\r\n                let tempPitchIndex = cur.pitchIndex;\r\n\r\n                while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                    tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                    if (mode !== 'scale' ||\r\n                        (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                    ) {\r\n                        cur.pitchIndex = tempPitchIndex;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // 値が変わっていた場合のみ処理する\r\n                if (prevPitchIndex !== cur.pitchIndex) {\r\n                    playSoundfont(cur.pitchIndex, this.store);\r\n                    // 履歴を作成\r\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                    this.melody.setNotesList(notesList.slice());\r\n\r\n                    this.melody.adjustScrollY();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * キースイッチを設定する\r\n         * @param keySwitch \r\n         */\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         */\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        /**\r\n         * 複数選択From～ToのToを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         * @returns \r\n         */\r\n        moveDestFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.destIndex > 0 : state.destIndex < notesList.length - 1) {\r\n                state.destIndex += (isNext ? 1 : -1);\r\n                this.melody.setState(state);\r\n            }\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツのエリアのコードを更新する\r\n         * @param focusIndex ノーツのフォーカス\r\n         */\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.tableMouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスの後ろに新しいノーツを追加する\r\n         * @returns \r\n         */\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const focus = state.focusIndex;\r\n            if (focus === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[focus];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = focus === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            // 新しい要素の位置\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(focus + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツを削除する\r\n         */\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            // 履歴を作成\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n            // 対象の開始と終了のインデックスを取得\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            // 削除する個数\r\n            const delNum = end - start + 1;\r\n            notesList.splice(start, delNum);\r\n            this.melody.setNotesList(notesList);\r\n            // 削除後は対象の開始インデックスの１つ前を選択\r\n            state.focusIndex = start - 1;\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * 複数選択を解除する\r\n         * @param isTail 解除時複数選択のどこにフォーカスを移すか（trueの場合終端を選択）\r\n         */\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            state.focusIndex = (!isTail ? start : end);\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            const distIndex = state.destIndex;\r\n            const focusIndex = state.focusIndex;\r\n\r\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\r\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n\r\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\r\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\r\n\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 移動可能かを判定\r\n            if (condition) {\r\n                for (let i = start; i <= end; i++) {\r\n                    const cur = notesList[i];\r\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                }\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        firstNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n                this.melody.adjustScrollX();\r\n                // this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.destIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            // if (state.focusIndex === -1) return;\r\n\r\n            MelodyUtil.previewStart(this.store, this);\r\n        },\r\n\r\n        copyNotes: () => {\r\n\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const num = focusEnd - focusStart + 1;\r\n\r\n            const cloneNotesList: MelodyNotes[] = [];\r\n            const base = notesList[focusStart].pos;\r\n            const baseUnit = getMinimumLenUnit(base);\r\n            for (let i = 0; i < num; i++) {\r\n                const notes = notesList[i + focusStart];\r\n                const unit = getMinimumLenUnit(notes.pos);\r\n                const useUnit = baseUnit > unit ? baseUnit : unit;\r\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\r\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\r\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\r\n                console.log(JSON.stringify(pos));\r\n                cloneNotesList.push({\r\n                    pitchIndex: notes.pitchIndex,\r\n                    pos,\r\n                    len: { ...notes.len }\r\n                });\r\n            }\r\n            state.cloneNotesList = cloneNotesList;\r\n            // notesList.splice(state.focusIndex, num);\r\n            // this.tune.setNotesList(notesList);\r\n            // state.focusIndex = focusStart - 1;\r\n            // state.distIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            // alert(JSON.stringify(state.cloneNotesList));\r\n        },\r\n\r\n        pasteNotes: () => {\r\n            // alert('pasteNotes');\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const pastList: MelodyNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\r\n            pastList.forEach(notes => {\r\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\r\n            });\r\n            // ペーストするノーツの最後（右端）の要素\r\n            const pastLast = pastList[pastList.length - 1];\r\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList = notesList.concat(pastList);\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                data.notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                this.score.setScoreData(data);\r\n\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex + pastList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            // this.tune.adjustScrollX();\r\n        },\r\n\r\n        undo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`undo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const prev = history.undo();\r\n            if (prev != null) {\r\n                if (history.cur === 0) {\r\n                    console.log('first undo');\r\n                    history.list.unshift(JSON.stringify(data.notesList));\r\n                    history.cur = 1;\r\n                }\r\n                data.notesList = JSON.parse(prev);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`undo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        },\r\n\r\n        redo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`redo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const next = history.redo();\r\n            if (next != null) {\r\n                data.notesList = JSON.parse(next);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`redo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            const chordBacking = detail.backing;\r\n            const structList = chordCache.structList;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n\r\n            const voicingTable = BackingUtil.getInitVoicingTable(detail.backing.voicingList, structList.length);\r\n            const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, chordBacking.pattern);\r\n\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n            const chordInfo = {\r\n                symbolAttr: symbol.attr,\r\n                chordFullName: chordCache.chordFullName,\r\n                structList,\r\n                beatLen: detail.beatLen,\r\n                minute: detail.minute,\r\n                init: { ...cache }\r\n            };\r\n            // エラーチェックのためにテーブルからリストへ逆変換\r\n            const voicingList = BackingUtil.getVoicingListFromTable(voicingTable);\r\n            const hasError = BackingUtil.checkEditorError(chordInfo, voicingList, pattern);\r\n            // バッキングステートの初期化\r\n            this.backing.setState({\r\n                chordInfo,\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false,\r\n                hasError\r\n            });\r\n\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n            setTimeout(() => {\r\n                this.backing.setState(null);\r\n            }, 50);\r\n        },\r\n\r\n        setState: (backingState: null | BackingState.Editor) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingState.Layer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingState.Layer;\r\n        },\r\n\r\n        /**\r\n         * エディタで設定したバッキング情報を譜面データに反映\r\n         */\r\n        mappingEditorToScore: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const focus = scoreState.focusIndex;\r\n            const detail = data.chordList[focus].detail as DetailChord;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n\r\n            detail.backing = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                // hasError: editor.hasError\r\n            };\r\n            this.score.setScoreData(data);\r\n\r\n            // エラーの反映\r\n            const cache = scoreState.elementCacheList[focus];\r\n            const scoreCache = scoreState.chordCacheList[cache.chordBlockNo];\r\n            scoreCache.backingError = editor.hasError;\r\n            this.score.setScoreState(scoreState);\r\n        },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const curLen = lenList[pattern.lenIndex];\r\n            const newLen: BackingState.NoteDiv = { rate: curLen.rate, div3: curLen.div3, isDot: curLen.isDot };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.noteDivList = lenList.slice();\r\n\r\n            // テーブル追加\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n\r\n            // ベロシティ追加\r\n            layer.velocityList.splice(pattern.lenIndex + 1, 0, 5);\r\n\r\n            // ペダル追加\r\n            if (pattern.layerIndex === 0) {\r\n                pattern.pedalActs.splice(pattern.lenIndex + 1, 0, null);\r\n            }\r\n\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            cur.isDot = false;\r\n            cur.div3 = 0;\r\n            layer.noteDivList = layer.noteDivList.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            if (BackingUtil.isPermitDot(cur)) {\r\n                cur.isDot = !cur.isDot;\r\n                layer.noteDivList = layer.noteDivList.slice();\r\n                this.backing.setState(state);\r\n                this.backing.updateErrorState();\r\n            }\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: BackingState.NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            layer.table = layer.table.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        incrementVel: (value: number) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const after = layer.velocityList[pattern.lenIndex] + value;\r\n            if (after >= 1 && after <= 10) {\r\n                layer.velocityList[pattern.lenIndex] = after;\r\n                this.backing.setState(state);\r\n            }\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            // 2つ以上要素がないと消せない\r\n            if (layer.noteDivList.length >= 2) {\r\n                layer.noteDivList.splice(pattern.lenIndex, 1);\r\n                layer.table.forEach((column) => {\r\n                    column.splice(pattern.lenIndex, 1);\r\n                });\r\n                layer.velocityList.splice(pattern.lenIndex, 1);\r\n                // for(let i = 0; i < pattern.channels.length; i ++) {\r\n                //     layer.table[i].splice(pattern.lenIndex, 1);\r\n                // }\r\n                if (pattern.layerIndex === 0) {\r\n                    // 終端までnullで更新\r\n                    if (pattern.lenIndex < pattern.pedalActs.length - 1) {\r\n                        for (let j = pattern.lenIndex + 1; j < pattern.pedalActs.length; j++) {\r\n                            pattern.pedalActs[j] = null;\r\n                        }\r\n                    }\r\n                    pattern.pedalActs.splice(pattern.lenIndex, 1);\r\n                }\r\n\r\n                if (pattern.lenIndex > 0) {\r\n                    pattern.lenIndex--;\r\n                }\r\n                this.backing.setState(state);\r\n            }\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n        /**\r\n         * 左右レイヤーを切り替える\r\n         */\r\n        switchLayer: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        /**\r\n         * 音量orペダルのモードを切り替える\r\n         */\r\n        switchMode: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            if (pattern.mode === 'velocity') pattern.mode = 'pedal';\r\n            else if (pattern.mode === 'pedal') pattern.mode = 'velocity';\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        /**\r\n         * バッキングのプレビュー再生をする\r\n         */\r\n        testBacking: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const reserveTasks = this.store.reserveTasks;\r\n            const chordInfo = editor.chordInfo;\r\n            const init = chordInfo.init;\r\n\r\n            // const rootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n            // const onIndex = chordInfo.on == null ? -1 : ((chordInfo.on.index + chordInfo.init.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n            // const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\r\n            // const chordTime = 60 / init.bpm * len;\r\n\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                chordInfo.beatLen,\r\n                chordInfo.minute.head + chordInfo.minute.tail,\r\n                init.bpm,\r\n                init.beatSignature\r\n            );\r\n            const backing: ChordBacking = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern)\r\n            };\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordInfo.structList);\r\n\r\n            BackingUtil.playBacking(this.store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                editor.isPreview = false;\r\n                this.backing.setState(editor);\r\n            }, chordTime));\r\n\r\n            editor.isPreview = true;\r\n            this.backing.setState(editor);\r\n        },\r\n\r\n        updateErrorState: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const voicingList = BackingUtil.getVoicingListFromTable(editor.voicingTable);\r\n            editor.hasError = BackingUtil.checkEditorError(editor.chordInfo, voicingList, editor.pattern);\r\n            this.backing.setState(editor);\r\n        },\r\n    }\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport Soundfont from 'soundfont-player';\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: TheoryUtil.SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null,\r\n        // hasError: false\r\n    };\r\n    return backing;\r\n}","\r\n\r\n/**\r\n * データの履歴を管理するクラス\r\n */\r\nclass DataHistory {\r\n\r\n    cur: number;\r\n    list: string[];\r\n\r\n    constructor() {\r\n        this.cur = -1;\r\n        this.list = [];\r\n    }\r\n\r\n\r\n    add(data: string) {\r\n        // console.log(`add start ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n        // if (this.list[this.cur] === data) {\r\n        //     console.log('same...');\r\n        //     return;\r\n        // }\r\n        if (this.cur > -1) {\r\n            this.list.splice(0, this.cur + 1);\r\n            this.cur = -1;\r\n            console.log('restert');\r\n        }\r\n        this.list.unshift(data);\r\n        // console.log(`add end ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n    }\r\n\r\n    undo(): null | string {\r\n        let ret = null;\r\n        if (this.cur < this.list.length - 1) {\r\n            this.cur++;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    redo(): null | string {\r\n        let ret = null;\r\n        if (this.cur > 0) {\r\n            this.cur--;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./score/scoreData\"\r\nimport { ScoreState } from \"./score/scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./score/melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { Invalidate } from \"./invalidate\"\r\nimport DataHistory from \"./state/dataHistory\"\r\nimport BackingState from \"./score/backing/backingState\"\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState.Editor;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n\r\n    invalidate: Invalidate;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 2,\r\n        scoreTabIndex: 0,\r\n        editable: true,\r\n        dialog: null\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        fileHandle: null,\r\n        isMelody: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        elementCacheList: [],\r\n        chordCacheList: [],\r\n        sectionCacheList: [],\r\n        scaleCacheList: [],\r\n        tempoCacheList: [],\r\n        beatCacheList: [],\r\n        measureCacheList: [],\r\n        keySwitch: {\r\n            distMode: false,\r\n            sustainMode: false,\r\n            chordMode: false,\r\n            symbolMode: false,\r\n            control: false,\r\n            minHeadMode: false,\r\n            minTailMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneBacking: null,\r\n        copiedElementList: null,\r\n        backingDataHistory: new DataHistory(),\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        destIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 4,\r\n        beatWidth: 120,\r\n        tableMouse: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        timelineMouse: {\r\n            pos: -1,\r\n            isPut: false,\r\n            lock: -1,\r\n            width: 0,\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 9\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false,\r\n            control: false,\r\n        },\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneNotesList: [],\r\n\r\n        dataHistory: new DataHistory(),\r\n        notesCacheList: []\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        // sampler: getDefaultSampler(),\r\n        harmony: null,\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: [],\r\n    invalidate: {\r\n        harmoniizeInvalidate: {},\r\n        harmonize: null,\r\n        melody: null\r\n    },\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note: {\r\n        left: string;\r\n        right: string;\r\n        up: string;\r\n        down: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        distMode: string;\r\n        edit1: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        edit2: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = (): KeyConfig => {\r\n    return {\r\n        note: {\r\n            left: 'ArrowLeft',\r\n            right: 'ArrowRight',\r\n            up: 'ArrowUp',\r\n            down: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'm',\r\n            deleteCur: 'Delete',\r\n            distMode: 'Shift',\r\n            edit1: 'f',\r\n            edit2: 'c',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n        }\r\n    };\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const dialog = store.systemState.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.systemState.dialog = null;\r\n            dispatcher.system.setState(store.systemState);\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n    \r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 22px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行のサンプルを検索するユーティリティ\r\n */\r\nnamespace ProgSearcher {\r\n\r\n    export type ChordItemBean = {\r\n        root: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n        beatLen: number;\r\n    }\r\n\r\n    export type UnitBean = {\r\n        condition: Condition;\r\n        chordList: ChordItemBean[];\r\n    }\r\n\r\n    /**\r\n     * ダイアトニックスケールの連番でコードを指定する\r\n     * @param scaleIndex スケールの連番\r\n     * @param beatLen 拍\r\n     */\r\n    const getDiatonicChord = (scaleIndex: number, beatLen: number): ChordItemBean => {\r\n        const chord = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        return { root: { index: chord.root.index, isFlat: false }, symbolKey: chord.symbolKey, beatLen };\r\n    }\r\n\r\n    export type Condition = {\r\n        beat: BeatSignature;\r\n        step: number;\r\n        firstChord: ProgUtil.DegreeFilter;\r\n        secondChord: ProgUtil.DegreeFilter;\r\n    }\r\n\r\n    /**\r\n     * コード進行を検索する\r\n     * @param condition \r\n     * @returns フィルターしたリスト\r\n     */\r\n    export const search = (condition: Condition) => {\r\n        console.log(JSON.stringify(condition));\r\n        return UNIT_LIST.filter((unit) => (\r\n            (unit.condition.beat === condition.beat) &&\r\n            (condition.step === 0 || unit.condition.step === condition.step) &&\r\n            (condition.firstChord === '' || unit.condition.firstChord === condition.firstChord) &&\r\n            (condition.secondChord === '' || unit.condition.secondChord === condition.secondChord)\r\n        ));\r\n    }\r\n\r\n    const parseChord = (source: string): ChordItemBean[] => {\r\n        let baseBeat = -1;\r\n        const keyList = source.split(' ');\r\n        let hasError = false;\r\n        const chordList: ChordItemBean[] = [];\r\n        keyList.some((key, i) => {\r\n            const head = key.charAt(0);\r\n            if (head === '@') {\r\n                const newBeat = Number(key.charAt(1));\r\n                baseBeat = newBeat;\r\n            } else if (['1', '2', '3', '4', '5', '6', '7'].includes(head)) {\r\n                const diatonicNo = Number(head) - 1;\r\n\r\n                let chord: null | ProgSearcher.ChordItemBean = null;\r\n                const diatonicProps = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[diatonicNo];\r\n                if (key.length === 1) {\r\n                    chord = {\r\n                        root: diatonicProps.root, symbolKey: diatonicProps.symbolKey, beatLen: baseBeat\r\n                    }\r\n                } else {\r\n                    const adjustKey = key.charAt(1);\r\n                    const adjust = adjustKey === '#' ? 1 : adjustKey === 'b' ? -1 : 0;\r\n                    const shortNameKey = key.substring(2);\r\n                    const symbol = getSymbolFromShortName(shortNameKey);\r\n                    if (symbol != undefined) {\r\n                        const root = { ...diatonicProps.root };\r\n                        root.index += adjust;\r\n                        root.isFlat = adjust === -1;\r\n                        chord = {\r\n                            root, symbolKey: symbol.key, beatLen: baseBeat\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (chord == null) {\r\n                    hasError = true;\r\n                    return true;\r\n                } else {\r\n                    chordList.push(chord);\r\n                }\r\n            } else {\r\n                hasError = true;\r\n                return true;\r\n            }\r\n\r\n        });\r\n        console.log(chordList);\r\n        return chordList;\r\n    }\r\n\r\n    const getSymbolFromShortName = (shortName: string): undefined | TheoryUtil.SymbolParams => {\r\n        return TheoryUtil.SYMBOL_LIST.find(symbol => {\r\n            if ('*' + symbol.name === shortName) return symbol;\r\n        });\r\n    }\r\n\r\n    const UNIT_LIST: UnitBean[] = [\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 3 4 1 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 3 4 3 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 3 4 1 2 5 1')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 5 4 1 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@4 1 5 6 4 1 5 6 4')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 7b* 6n*7 2 1#*dim 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@4 1 4 5 6 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('@4 1 6 2 5 1 6 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('@4 1 6 4 5 1 6 4 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 4 5 3 6 4 5 3 6')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 4n*maj7 5 3n*m7 6 4n*maj7 5 3n*m7 6')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 4n*maj7 5 3n*m7 6 2n*m7 3n*7 6 6n*7')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 2n*m7 5 3n*m7 6 2n*m7 3n*7 6n*sus4 6')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@2 6 4 5 1 6 4 5 1')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@4 6 4 5 1 6 4 5 1')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@2 6 4 1 5 6 4 1 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@4 6 4 1 5 6 4 1 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 6 5 4 3n*m7 2n*m7 6 2#*dim 3n*7')\r\n        },\r\n    ];\r\n}\r\n\r\nexport default ProgSearcher;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\n\r\nnamespace ProgStyle {\r\n\r\n\r\n    /** 実行ボタン */\r\n    export const _TitleLabel = styled.div<{\r\n    }>`\r\n        ${Styles.CSS_LABEL_MIDIUM};\r\n        background-color: #f0f0f049;\r\n        width: 120px;\r\n        text-align: center;\r\n        border-radius: 10px;\r\n        color: #2c2c2c;\r\n        border: solid 1px #ffffff79;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n\r\n    /** コンボボックス */\r\n    export const _Combobox = styled.select<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: black;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n\r\n    /** ラベル */\r\n    export const _Label = styled.div<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: #002bc5;\r\n        font-weight: 600;\r\n        background-color: #e1f9fa;\r\n        padding-left: 4px;\r\n        border-radius: 4px;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n}\r\n\r\nexport default ProgStyle;","import { ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport { ScoreState } from \"../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * コード進行生成のバッキング関連のユーティリティ\r\n */\r\n namespace progBackingUtil {\r\n\r\n    export type Props = {\r\n        name: string;\r\n        patternConditions: PatternCondition[];\r\n    }\r\n    export type VoicingCondition = {\r\n        attr: TheoryUtil.SymbolAttribute;\r\n        source: string;\r\n    }\r\n    export type PatternCondition = {\r\n        beatLen: number;\r\n        source: string;\r\n        voicingConditions: VoicingCondition[];\r\n    }\r\n\r\n    export const BACKING_SAMPLE_LIST: Props[] = [\r\n        {\r\n            name: 'none',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'barrade-01',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTwRKCIBD9Gu4FOnbVvDTTrS9ghIyGsJHNyb4+BCkxb416YWD3LW/fY0FJhjAuLlQpLk/ixc0JkTRGeG92d86o1C6E4gxZMBPNQTH+dOGNQ9ICRKV6JMZum+Qozl1e0pbXEzeNQzWFvoXIFQqdV+AiZ9MLd1FTSTx/YilG1btf3PR1f1d7haoCro9Cw0hR6FMbnDRQeHgLLFqLUlH58dHaaKEgbkKVQXXDZcquAxsGWnpWvArrNmDdzsXqnTe57xh1k9uNDunSg9ZmnLVo7mnBq7zbUqyhVrKK1qVYQ63R4j/D/wq7vgHgSWwr/AUAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqAW7wdQFAL14+prfAAAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYl1oTHG4wdQEAGcWLSt8AAAA='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA9WVwVLDIBCGn4a7XcB4bc3Fmd58AqbBioPECdtO69NLINGAdexBYLwwsOzPB7sskGZDAHbPwhipH9W7dCNC17cE7l3vTXZC22AifEO8c6eOD6aTp2C+CZ5ih6o3kydA6DYt4W2Y1+IshwsrpaZB4LQFFoTKtj0Gy5PbiwxWp6Qzv/GIRH333e/ychnU7Hc1Doc/QM/BNT1Ku1UWk2DGKTpHI4sCD3P0vbdVeyP0Zwp9Br0rqldl9pH6KPW6e1lkYHGWUxSFwtRVRF0VotIqVIiokIs63zI391Wt3NnGDI8nH/swui22mLG0ryivbKX9X9RXvgy0zA1K7i2vQo1fQVrlPSpFZVWocYRZlQiXokIVKqtCjfPKq0Q4G/XH341OPxwkP5xvPwCCCyaGNwsAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGuES60JCW7AohbsBlMXAA68b5wLAQAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGtEglpjXGpNcLjB1AUAqgEeTAsBAAA='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'barrade-02',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTXQ+CIBT9NbwbxPRV86Wtt34BUzIaYQty2a+PQFLMuT7tgQ3OPZdzOZcLwgRAmG2JEJSv2YXqE0AxBnChdweaEy4tBHACDDln1VLk9GzhwDJJplgpGiaEdhumAKc2zklNjwM39aEjUU0JkU1kMi2VRTa6FmpRnYmcfmgkhrO7vOHr/pzt/BGlonLFpOr54btceyepiDo5Aw1bskIQfu+CaYKhKrZnovCyK8rjfNcxsfOWRnXmqc4mUkWeKpxIFXqq6Feqrt861n7927S1C3vljc7I/IUZeeunTeV+8EX30TMS848koseHwfEGYxcM0ysSYVFzcwUAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqAWba+oCACBiEqvfAAAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqDUGqTV1AQCUaWUN3wAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2V0W7CIBSGn4b7eUrFW11vTHbnExCLjgWpEWbUp5dC2cA1y1YSuPGiLRzOz8dJfwCRFQLYvlMpmdjwGzM9VC3nCF5N68haKpQLoXqFbHLLz2vZsosLv7hMutW8k0MmgGuSBtWNGxf0yk4jMz2GTlQPS1g4IVdNp11kZ9bCXNQoK88nFjGuDvPGp3uqi6i9L2SnmXrjSj/4IHbXNeopTfWnN47NVnwvqfhynzWfTdX8wOU+Up+ZWLYfgXmCWgbqLKLOMlFxEWoVUSETtS5CJUWoEFGrTNR5Hqrfx2bs+yjv/65/cPDtH+glwXJ/vQNw0h2Ak06z/6gnnWa5nFDGf3GtOImKf1LhL7WmUafWWidRycS9hod9Zd93wUPW69YJAAA=',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqMXpBlMc5pq6AADXs/OfCwEAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqCXFXGOQWlMXACkdNMwLAQAA'\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: '8beat-01',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTSw7CIBQ8DXulJbht7cbEnScgLVYMUlOwsZ5e5BUtTeNGU1bAMMM83gfRHGFcnphSXB7Eg9sTSrIU4a3dXXnFpAYIkRw5ciW6nar4HeAVMFlpRKMGJsawpQUiBdxL1vN25qUp1DIzhLABodBFYwA52lg4oFaZeH/qLObVY978c5HVPj+qMVzvhTaTfIRZ7oOTNszcfAIdW4taMfmugiuCoxpxEaoO1B2XWXUeJXH0l8F1HcUVR3FNlnH19bZ3n9YnFnv5w0qC8L7OSPrTjKT/79OwY9YL1S6cDhxlOpZyDf+aROhT4gm0eAKCqPtePgYAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGsEUmvqAgBJsewgswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2V0Q6CIBSGn4b7Omp2W3nT1l1PwJSKRtiEXPb0IWhJc67N5bnpRuBwDh+w3x8SrwlAeqJSMrHnD2ZGJFiFBDamd2UZFcqFSLQmNjnj5VZm7O7CM5dJU81z2WQCuG6ckChx84JWrOhZ6TNUUN1sYekKuUpy7SIHsxfmoqYyaPmxRfRXd/P6l/tXo1S3upC5ZmrHlf7Qga+uyhspTfWtFY7NVvwoqXipz4rPpmp+4fLoVZdMrLJzRzydszTUOQoVUKgBCjVEoUYo1AUKNZ6G2v7HZu5t5fU917rqbyNvu4NvQDjqDQhHudl01V96oe9KcxR/mIrq+z6g+P5UVECh+jccoJz1Z9RBV4KOC9nvE4/6Z+UECwAA',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmuCww2mLgAeyOCMswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: '8beat-02',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTQQ6CMBB8Te9SJHgFuZh48wUNVKypxdCFiK+3dqlSwsXE0Attp7M7y26HpDmhtLwwpbg8iSc3JxJnW0L3ZnfnFZMaIZLkxJIr0R9UxR8Ib5DJShCNGpmU4jYtSFLgvWQDbxcyzaGWwVjCDgOFLhpA5Gxq4YiayNjpp1ZiOXrKW04XONr1RzXA9VFomPXD7/LgnTQw6FwDLVuLWjH5mYIdgqWCuAlVe9E9l1l1nTRx8i+jahRElQZRjddRdfM2d9+nnxjsrY9r4pX3o0eg7f5oEZttrTfuv7Zopbn7zqJBnLWWKg2i6nc4DuIs5yr7fQFCZXGQ9AYAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGsEUmvqAgBJsewgswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2VwU4DIRCGn4a7nQXx2roXE28+AelixSBrFtrYPn0ps+jSEBMTw8TEE+wwPx/L/jvD5IYBbF+Uc9o+mZOOT6xbcwb3cfauB2U9hpjYsJQ8mMODG/QHhm8wU22DGd2cCYBT2TPR47pVRz1VdroOTSrMR7hDofH9GDDyHM+iMRqVXebLhKirl3n17f7VJOrsCzcG7R+ND1c+KN11LJ58UGGfjZOyvdk5ZT/dl8yXUoN5M25XqA/arofXhXkW7zJTVyRUIKF2JFROQhUk1FsSqmxDzf9xXPsq5Zd7vviqPoriuD/sAWHa/2ILSLtVxfyP1NEmVbishyuSytSKKkioZZ8Dkj7XigokVE5CLb9rR3LDrai8DfXbjgPziHORBbI/A9v3xeToDAAA',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmuCww2mLgAeyOCMswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'arpeggio-01',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'arpeggio-02',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'rock-01',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: '16beat-01',\r\n            patternConditions: []\r\n        },\r\n    ];\r\n }\r\n\r\n export default progBackingUtil;","import { BackingPatternProps, BeatSignature, ChordElement, DetailChord, DetailFixed, DetailInit, DetailSection, FixedItem, ScoreData, VoicingProps } from \"../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport progBackingUtil from \"./progBackingUtil\";\r\n\r\n/**\r\n * コード進行生成のユーティリティ\r\n */\r\nnamespace ProgUtil {\r\n\r\n    /** 生成方法 */\r\n    export type BuildType = 'blank' | 'custom' | 'template';\r\n\r\n    export const STEP_LIST = [0, 2, 3, 4] as const;\r\n    export type Step = typeof STEP_LIST[number];\r\n\r\n    /**\r\n     * ブロックに設定するプロパティ\r\n     */\r\n    export type UnitProps = {\r\n        type: BlockType;\r\n        detail: SectionProps | FixedItem;\r\n    }\r\n\r\n    export type BlockType = 'fixed' | 'section';\r\n\r\n    export type SectionProps = {\r\n        sectionName: string;\r\n        sectionNo: string;\r\n        chordList: DetailChord[];\r\n        backingNo: number;\r\n    }\r\n\r\n    export const DEGREE_FILTER_LIST = [\r\n        '', 'Ⅰ', 'Ⅴ', 'Ⅳ', 'Ⅵm', 'Ⅱm', 'Ⅲm'\r\n    ] as const;\r\n    export type DegreeFilter = typeof DEGREE_FILTER_LIST[number];\r\n\r\n    /**\r\n     * 初期状態のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getInitialBlockList = (): UnitProps[] => {\r\n        return [\r\n            { type: 'fixed', detail: 'Start' },\r\n            { type: 'fixed', detail: 'End' },\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Blank選択時のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getBlankBlockList = (): UnitProps[] => {\r\n        return [\r\n            { type: 'fixed', detail: 'Start' },\r\n            {\r\n                type: 'section',\r\n                detail: {\r\n                    sectionName: 'Section',\r\n                    sectionNo: '',\r\n                    chordList: [\r\n                        getDefaultChord()\r\n                    ],\r\n                    backingNo: 0\r\n                }\r\n            },\r\n            { type: 'fixed', detail: 'End' },\r\n        ];\r\n    }\r\n\r\n    export const getDefaultChord = (): DetailChord => {\r\n        return {\r\n            beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n            backing: {\r\n                voicingList: [],\r\n                pattern: null,\r\n                // hasError: false\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拍子より選択可能なステップリストを絞り込む\r\n     * @param beat ステップの拍\r\n     * @returns 絞り込んだリスト\r\n     */\r\n    export const getFilteredStepList = (beat: BeatSignature) => {\r\n        return STEP_LIST.filter((item) => {\r\n            // 0は空白表示なので必ず加える\r\n            if (item === 0) return true;\r\n\r\n            switch (beat) {\r\n                case '4/4':\r\n                case '6/8': {\r\n                    if (item === 3) return false;\r\n                }\r\n                    break;\r\n                case '3/4':\r\n                case '9/8': {\r\n                    if (item !== 3) return false;\r\n                }\r\n                    break;\r\n                case '2/4':\r\n                case '6/8': {\r\n                    if (item !== 2) return false;\r\n                }\r\n                    break;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * ブロックリストより譜面データを生成する\r\n     * @param outputUnits ユニットリスト\r\n     * @returns 譜面データ\r\n     */\r\n    export const buildScoreData = (outputUnits: UnitProps[]): ScoreData => {\r\n        const elementList: ChordElement[] = [];\r\n        // イニシャル要素を設定\r\n        const initElement: DetailInit = {\r\n            keyIndex: 0,\r\n            bpm: 100,\r\n            scale: \"major\",\r\n            beatSignature: \"4/4\"\r\n        }\r\n        elementList.push({ type: 'init', detail: initElement });\r\n        outputUnits.forEach((block) => {\r\n            if (block.type === 'fixed') {\r\n                const fixed = block.detail as FixedItem;\r\n                // 固定ブロックの処理\r\n                elementList.push({ type: 'fixed', detail: { fixed } });\r\n            } else {\r\n                const blockDetail = block.detail as SectionProps;\r\n                const getSectionFullName = () => {\r\n                    return blockDetail.sectionName;\r\n                }\r\n                // セクションブロックの処理\r\n                elementList.push({ type: 'section', detail: {labelName: getSectionFullName()} });\r\n\r\n                // サンプルバッキングの適用\r\n                const sample = progBackingUtil.BACKING_SAMPLE_LIST[blockDetail.backingNo];\r\n                blockDetail.chordList.forEach((chord) => {\r\n                    const detail = chord;\r\n\r\n                    let voicingList: VoicingProps[] = [];\r\n                    let pattern: BackingPatternProps | null = null;\r\n                    sample.patternConditions.some(conPa => {\r\n                        if(conPa.beatLen === detail.beatLen) {\r\n                            // console.log(DataUtil.unZip(conPa.source));\r\n                            pattern = JSON.parse(DataUtil.unZip(conPa.source));\r\n\r\n                            conPa.voicingConditions.some(conVo => {\r\n                                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                                if(conVo.attr === symbol.attr) {\r\n                                    voicingList = JSON.parse(DataUtil.unZip(conVo.source));\r\n                                    return true;\r\n                                }\r\n                            });\r\n                            return true;\r\n                        }\r\n                    });\r\n                    detail.backing.voicingList = voicingList;\r\n                    detail.backing.pattern = pattern;\r\n\r\n                    elementList.push({ type: 'chord', detail });\r\n                });\r\n            }\r\n        });\r\n        return { chordList: elementList, notesList: [] };\r\n    }\r\n}\r\n\r\nexport default ProgUtil;","import { useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../utils/dummyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgSearcher from \"./progSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行を編集する画面\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ProgCustomFrame = (props: {\r\n    /** 拍子フィルターの値 */\r\n    beat: '' | BeatSignature;\r\n    /** ユニット数 */\r\n    unitNum: number;\r\n    /** 出力リストを初期化するコールバック関数 */\r\n    reset: () => void;\r\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\r\n    insertProgUnit: (unit: ProgSearcher.UnitBean) => void;\r\n}) => {\r\n\r\n    const [step, setStep] = useState<ProgUtil.Step>(0);\r\n    const [degreeFilters, setDegreeFilters] = useState<(ProgUtil.DegreeFilter)[]>(['', '']);\r\n\r\n    /** ブロックの最後のコード */\r\n    const [lastChord, setLastChord] = useState<ProgSearcher.ChordItemBean | null>(null);\r\n\r\n    // const [progUnitList, setProgUnitList] = useState<ProgSearcher.UnitBean[]>([]);\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n\r\n    const stepList = useMemo(() => {\r\n        return props.beat === '' ? [0] : ProgUtil.getFilteredStepList(props.beat);\r\n    }, [props.beat]);\r\n\r\n    /** 拍ステップ絞り込みのコンボボックス */\r\n    const stepOptionJsxList = useMemo(() => {\r\n        // console.log(stepList.length);\r\n        return stepList.map((val, i) => {\r\n            // 0の場合は表示しない制御\r\n            const disp = val === 0 ? '' : val;\r\n            return (\r\n                <option key={i} value={val}>{disp}</option>\r\n            );\r\n        });\r\n    }, [stepList]);\r\n\r\n    /** ディグリーネーム絞り込みのコンボボックス */\r\n    const degreeOptionJsxListArray: JSX.Element[][] = useMemo(() => {\r\n        return [ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 先頭のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        }), ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 2番目のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        })];\r\n    }, [degreeFilters]);\r\n\r\n    /** リストに表示する進行ユニットのJSX */\r\n    const [progUnitList, progJsxList] = useMemo(() => {\r\n        if (props.beat === '') return [[], []];\r\n        const beat = props.beat as BeatSignature;\r\n        // フィルタリングしたユニットリスト\r\n        const unitList = ProgSearcher.search({\r\n            beat: props.beat,\r\n            step, firstChord: degreeFilters[0], secondChord: degreeFilters[1]\r\n        });\r\n        const jsx = unitList.map((unit, i) => {\r\n            const isActive = focusIndex === i;\r\n\r\n            /** 表示する進行ユニット */\r\n            const dispUnitJsx: JSX.Element[] = [];\r\n            /** 表示する進行ユニット */\r\n            let tootTipStr: string = '';\r\n            let totalBeat = 0;\r\n            const beatCycle = TheoryUtil.getBeatProps(beat).barBeatCnt;\r\n            unit.chordList.forEach((chord, j) => {\r\n                const degreeRoot = TheoryUtil.getDegreeRoot(chord.root);\r\n                const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\r\n                const symbolName = symbol.name;\r\n                const chordName = degreeRoot + symbolName;\r\n                if (j !== 0) {\r\n                    const divStr = totalBeat % beatCycle === 0 ? ' | ' : '・';\r\n                    dispUnitJsx.push(<_Span key={dispUnitJsx.length}>{divStr}</_Span>);\r\n                    tootTipStr += divStr;\r\n                }\r\n                let isMatch = false;\r\n                if (j === 0) {\r\n                    isMatch = degreeFilters[0] !== '';\r\n                } else if (j === 1) {\r\n                    isMatch = degreeFilters[1] !== '';\r\n                }\r\n                dispUnitJsx.push(<_ChordName key={dispUnitJsx.length} isMatch={isMatch}>{chordName}</_ChordName>);\r\n                tootTipStr += chordName;\r\n                totalBeat += chord.beatLen;\r\n                // console.log(totalBeat);\r\n            });\r\n            return (\r\n                <_ProgItem key={i} isActive={isActive} title={tootTipStr} onClick={() => {\r\n                    setFocusIndex(i);\r\n                }}>{dispUnitJsx}</_ProgItem>\r\n            )\r\n        });\r\n        return [unitList, jsx];\r\n    }, [props.beat, step, degreeFilters, focusIndex]);\r\n\r\n    /**\r\n     * 拍ステップ変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const stepChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setStep(Number(e.target.value) as ProgUtil.Step);\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n    /**\r\n     * ディグリーフィルター変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const degreeChangeAction = (e: React.ChangeEvent<HTMLSelectElement>, index: number) => {\r\n        const value = e.target.value as ProgUtil.DegreeFilter;\r\n        degreeFilters[index] = value;\r\n        if (index === 0 && value === '') {\r\n            degreeFilters[1] = '';\r\n        }\r\n        setDegreeFilters(degreeFilters.slice());\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n\r\n    /**\r\n     * リセットボタン押下時の処理\r\n     */\r\n    const resetAction = () => {\r\n        setStep(0);\r\n        setDegreeFilters(['', '']);\r\n        props.reset();\r\n    };\r\n\r\n    /**\r\n     * 追加ボタン押下時の処理\r\n     */\r\n    const insertAction = () => {\r\n        const progUnit = progUnitList[focusIndex];\r\n        props.insertProgUnit(progUnit);\r\n        setFocusIndex(-1);\r\n        setStep(0);\r\n        setDegreeFilters(['', '']);\r\n\r\n        const chord = progUnit.chordList[progUnit.chordList.length - 1];\r\n        setLastChord(chord);\r\n    };\r\n\r\n    /**\r\n     * ユニットの最後のコードネームを取得\r\n     */\r\n    const getLastChordName = () => {\r\n        let name = '-';\r\n        if (lastChord != null) {\r\n            const rootName = TheoryUtil.getDegreeRoot(lastChord.root);\r\n            const symbol = TheoryUtil.getSymbolFromKey(lastChord.symbolKey) as TheoryUtil.SymbolParams;\r\n            name = rootName + symbol.name;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    return (\r\n        <_Frame isEnable={props.beat !== ''}>\r\n            {/* 拍ステップコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Step</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={80} value={step} onChange={(e) => {\r\n                    stepChangeAction(e);\r\n                }}>{stepOptionJsxList}</ProgStyle._Combobox>\r\n                <ProgStyle._TitleLabel>Last</ProgStyle._TitleLabel>\r\n                <ProgStyle._Label isEnable={true} width={80} >{getLastChordName()}</ProgStyle._Label>\r\n            </_Record>\r\n            {/* ディグリーネームフィルターコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Chord</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={80} value={degreeFilters[0]} onChange={(e) => {\r\n                    degreeChangeAction(e, 0);\r\n                }}>{degreeOptionJsxListArray[0]}</ProgStyle._Combobox>\r\n                <ProgStyle._Combobox isEnable={degreeFilters[0] !== ''} width={80} value={degreeFilters[1]} onChange={(e) => {\r\n                    degreeChangeAction(e, 1);\r\n                }}>{degreeOptionJsxListArray[1]}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* 進行ユニットリスト */}\r\n            <_ListDiv><div>{progJsxList}</div></_ListDiv>\r\n            {/* 実行ボタン */}\r\n            <_ButtonDiv>\r\n                <_ExecutableButton isEnable={props.unitNum > 0} onClick={resetAction}>Reset</_ExecutableButton>\r\n                <_ExecutableButton isEnable={focusIndex !== -1} onClick={insertAction}>Add</_ExecutableButton>\r\n            </_ButtonDiv>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgCustomFrame;\r\n\r\nconst BUTTON_DIV_HEIGHT = 40;\r\nconst RECORD_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 条件レコード\r\n */\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${RECORD_HEIGHT}px;\r\n    /* background-color: #d5eae4; */\r\n    /* margin: 2px 0 0 0; */\r\n    text-align: left;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 進行リスト\r\n */\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${RECORD_HEIGHT * 2 + BUTTON_DIV_HEIGHT}px);\r\n    /* background-color: #babaa8; */\r\n    text-align: left;\r\n    & >div{\r\n        display: inline-block;\r\n        width: calc(100% - 8px);\r\n        height: calc(100% - 8px);\r\n        margin: 4px 0 0 4px;\r\n        background-color: #dde0e7;\r\n        box-sizing: border-box;\r\n        border: 1px solid #797979;\r\n        overflow-y: auto;\r\n    }\r\n`;\r\n\r\nconst _ProgItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #00000010;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f6ff0062;\r\n    `}\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordName = styled.span<{\r\n    isMatch: boolean;\r\n}>`\r\n    color: #000f59;\r\n    ${props => !props.isMatch ? '' : css`\r\n        color: #a0000d;\r\n        /* background-color: #5eff0061; */\r\n    `}\r\n`;\r\nconst _Span = styled.span<{\r\n}>`\r\n    color: #0000005d;\r\n`;\r\n\r\n/**\r\n * ボタンエリア（画面汎用）\r\n */\r\nconst _ButtonDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BUTTON_DIV_HEIGHT}px;\r\n    /* background-color: #94babd; */\r\n    text-align: center;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #737d94;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #505971;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #8da0b0;\r\n    }\r\n`;","namespace DummyUtil {\r\n\r\n    export const SECTION_CATEGORY = ['Section', 'Intro', 'A', 'B', 'C', 'D', 'Outro'];\r\n    export const SECTION_NO = ['', '1', '2', '3', '4', '5', '6'];\r\n}\r\n\r\nexport default DummyUtil;","import { useContext, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { DetailChord, DetailFixed, DetailSection, FixedItem } from \"../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../utils/dummyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport progBackingUtil from \"./progBackingUtil\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行の出力画面のコンポーネント\r\n * @param props ブロックリスト\r\n * @returns コンポーネント\r\n */\r\nconst ProgOutputFrame = (props: {\r\n    outputUnits: ProgUtil.UnitProps[];\r\n    updateOutputUnits: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    const [\r\n        /** セクションカテゴリのoptionリスト */\r\n        secCatOptionJsxList,\r\n        /** セクション連番のoptionリスト */\r\n        secNoOptionJsxList,\r\n    ] = useMemo(() => {\r\n        const catList = DummyUtil.SECTION_CATEGORY.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        const noList = DummyUtil.SECTION_NO.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        return [catList, noList];\r\n    }, []);\r\n\r\n    const backingSampleJsxList = progBackingUtil.BACKING_SAMPLE_LIST.map((sample, i) => {\r\n        return (\r\n            <option key={i} value={i}>{sample.name}</option>\r\n        );\r\n    });\r\n\r\n    const blockJsxList = props.outputUnits.map((block, i) => {\r\n        const isFixed = block.type === 'fixed';\r\n        const getInner = () => {\r\n            if (isFixed) {\r\n                return <_FixedItem>{(block.detail as FixedItem)}</_FixedItem>;\r\n            } else {\r\n                const detail = block.detail as ProgUtil.SectionProps;\r\n                const chordList = detail.chordList;\r\n                const getChordListJsx = () => {\r\n                    return chordList.map((chord, j) => {\r\n                        const getBeatTipsJsx = () => {\r\n                            const jsxList: JSX.Element[] = [];\r\n                            for (let k = 0; k < chord.beatLen; k++) {\r\n                                jsxList.push(<_BeatTip key={k} />);\r\n                            }\r\n                            return jsxList;\r\n                        }\r\n                        let chordName = 'none';\r\n                        if (chord.root !== null) {\r\n                            const degreeRoot = TheoryUtil.getDegreeRoot({\r\n                                index: chord.root.index,\r\n                                isFlat: chord.root.isFlat\r\n                            });\r\n                            const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey)?.name;\r\n                            chordName = degreeRoot + symbolName;\r\n                        }\r\n                        return (\r\n                            <_ChordItem key={j}>\r\n                                <_ChordNameLabel>{chordName}</_ChordNameLabel>\r\n                                <_ChordBeatDiv>{getBeatTipsJsx()}</_ChordBeatDiv>\r\n                            </_ChordItem>\r\n                        );\r\n                    });\r\n                }\r\n                return (<>\r\n                    <_Record>\r\n                        <_BackingLabel>Section</_BackingLabel>\r\n                        <_Combobox isEnable={true} width={180} value={detail.sectionName} onChange={(e) => {\r\n                            detail.sectionName = e.target.value;\r\n                            props.updateOutputUnits();\r\n                        }}>{secCatOptionJsxList}</_Combobox>\r\n                        <_Combobox isEnable={true} width={60} value={detail.sectionNo} onChange={(e) => {\r\n                            detail.sectionNo = e.target.value;\r\n                            props.updateOutputUnits();\r\n                        }}>{secNoOptionJsxList}</_Combobox>\r\n                    </_Record>\r\n                    <_Record>\r\n                        {/* <_SectionItem>{labelName}</_SectionItem> */}\r\n                        <_BackingLabel>Backing</_BackingLabel>\r\n                        <_Combobox\r\n                            isEnable={true} width={180}\r\n                            value={detail.backingNo}\r\n                            onChange={(e) => {\r\n                                detail.backingNo = Number(e.target.value);\r\n                                props.updateOutputUnits();\r\n                            }}>{backingSampleJsxList}</_Combobox>\r\n                    </_Record>\r\n                    <_ChordListDiv>{getChordListJsx()}</_ChordListDiv>\r\n                </>);\r\n            }\r\n        };\r\n        return (\r\n            <_Block key={i} isFixed={isFixed}>{getInner()}</_Block>\r\n        );\r\n    });\r\n    return (\r\n        <_Frame>\r\n            {blockJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgOutputFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Block = styled.div<{\r\n    isFixed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    background-color: #e8e4c5;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #7e7e7ee8; */\r\n    text-align: left;\r\n    ${props => !props.isFixed ? '' : css`\r\n        text-align: left;\r\n    `}\r\n`;\r\n\r\nconst _FixedItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 200px;\r\n    background-color: #b14272;\r\n    border-radius: 2px 15px 15px 2px;\r\n    color: white;\r\n    margin: 5px 0 5px 5px;\r\n`;\r\n\r\nconst _SectionItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 120px;\r\n    background-color: #4297b1;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 5px;\r\n`;\r\n\r\nconst RECORD_HEIGHT = 22;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${RECORD_HEIGHT}px;\r\n    /* background-color: #5b6e69; */\r\n    margin: 2px 0 0 0;\r\n    text-align: left;\r\n    /* padding: 5px 0 0 0; */\r\n`;\r\nconst _BackingLabel = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 90px;\r\n    background-color: #95b6d1;\r\n    color: white;\r\n    border-radius: 8px;\r\n    margin: 0 0 0 5px;\r\n`;\r\n\r\nexport const _Combobox = styled.select<{\r\n    isEnable: boolean;\r\n    width: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    font-weight: inherit;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    width: ${props => props.width}px;\r\n    margin: 0 0 0 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ChordListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    /* height: 100px; */\r\n    padding: 0 5px 5px 0;\r\n    background-color: #c2d6dd1e;\r\n    border: solid 2px #ab4343;\r\n    border-radius: 8px;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 5px 5px;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 45px;\r\n    background-color: #676767;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 5px;\r\n`;\r\n\r\nconst _ChordNameLabel = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    padding: 0 20px;\r\n    /* background-color: #b38282; */\r\n    color: white;\r\n`;\r\n\r\nconst _ChordBeatDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    height: 25px;\r\n    min-width: 100%;\r\n    /* background-color: #c5adad; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _BeatTip = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    height: calc(100% - 12px);\r\n    margin: 6px 2px 0 2px;\r\n    background-color: #ddd796;\r\n    border-radius: 2px;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ProgTemplateFrame = (props: {\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    const templateJsxList = useMemo(() => {\r\n        return ['short major 01', 'short major 02', 'short minor 01'].map((val, i) => {\r\n            return (\r\n                <_Item key={i}>{val}</_Item>\r\n            );\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame>\r\n            {templateJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgTemplateFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #87b4b4;\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n    color: #eb0000;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgCustomFrame from \"./progCustomFrame\";\r\nimport ProgOutputFrame from \"./progOutputFrame\";\r\nimport ProgSearcher from \"./progSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgTemplateFrame from \"./progTemplateFrame\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行を構成して譜面のベースを作成するダイアログ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ChordProgDialog = (props: {\r\n    setScoreData: (scoreData: ScoreData) => void;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** 生成モード（ブランク、カスタム、テンプレート） */\r\n    const [buildMode, setBuildType] = useState<ProgUtil.BuildType>('blank');\r\n    /** 出力する進行ユニットのリスト */\r\n    const [outputUnits, setOutputUnits] = useState(ProgUtil.getBlankBlockList());\r\n    /** 拍子フィルター */\r\n    const [beatFilter, setBeatFilter] = useState<'' | BeatSignature>('');\r\n\r\n    /**\r\n     * Closeボタン押下時の処理\r\n     */\r\n    const closeAction = () => {\r\n        store.systemState.dialog = null;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    /**\r\n     * Startボタン押下時の処理\r\n     */\r\n    const startAction = () => {\r\n        const scoreData = ProgUtil.buildScoreData(outputUnits);\r\n        props.setScoreData(scoreData);\r\n        closeAction();\r\n        // Editタブに遷移\r\n        store.systemState.scoreTabIndex = 1;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    const getSwitchContJsx = () => {\r\n        switch (buildMode) {\r\n            case 'blank': return <></>;\r\n            case 'custom': return <ProgCustomFrame\r\n                beat={beatFilter}\r\n                unitNum={outputUnits.length - 2}\r\n                reset={() => { setOutputUnits(ProgUtil.getInitialBlockList()) }}\r\n                insertProgUnit={insertProgUnit}\r\n            />;\r\n            case 'template': return <ProgTemplateFrame />;\r\n        }\r\n    };\r\n\r\n    /** 拍フィルターのオプションリストJSX */\r\n    const beatOptionJsxList = useMemo(() => {\r\n        if (buildMode === 'blank') {\r\n            return [(\r\n                <option key={0} value={''}></option>\r\n            )];\r\n        } else {\r\n            return [''].concat(TheoryUtil.BEAT_DEF_LIST).map((val, i) => {\r\n                return (\r\n                    <option key={i} value={val}>{val}</option>\r\n                );\r\n            });\r\n        }\r\n    }, [buildMode]);\r\n\r\n    const beatChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setBeatFilter(e.target.value as BeatSignature);\r\n    }\r\n\r\n    /** リストから選択中のコード進行ブロックを出力に追加する */\r\n    const insertProgUnit = (unit: ProgSearcher.UnitBean) => {\r\n        const detail: ProgUtil.SectionProps = {\r\n            sectionName: 'Section',\r\n            sectionNo: '',\r\n            chordList: unit.chordList.map((chord) => {\r\n                const chordDetail = ProgUtil.getDefaultChord();\r\n                chordDetail.beatLen = chord.beatLen;\r\n                chordDetail.symbolKey = chord.symbolKey;\r\n                chordDetail.root = chord.root;\r\n                return chordDetail;\r\n            }),\r\n            backingNo: 0\r\n        }\r\n        const block: ProgUtil.UnitProps = { type: 'section', detail }\r\n        outputUnits.splice(outputUnits.length - 1, 0, block);\r\n        setOutputUnits(outputUnits.slice());\r\n    }\r\n\r\n    /**\r\n     * 切り替え式ボタンのJSXを返すクロージャ\r\n     * @param labelName ラベル名\r\n     * @param clickEvent 押下時の処理\r\n     * @param isActive 選択中かどうか\r\n     * @returns JSX\r\n     */\r\n    const createSwitchableButton = (\r\n        labelName: string,\r\n        isActive: boolean,\r\n        clickEvent: () => void\r\n    ) => {\r\n        return (\r\n            <_SwitchableButton isActive={isActive}\r\n                onClick={clickEvent}\r\n            >{labelName}</_SwitchableButton>\r\n        );\r\n    }\r\n\r\n    const beatComboboxEnable = outputUnits.length <= 2;\r\n\r\n    // Blankモードの時は空白を表示\r\n    const distBeatFilter = buildMode === 'blank' ? '' : beatFilter;\r\n    return (\r\n        <_Frame >\r\n            <_Header>\r\n                {createSwitchableButton('Blank', buildMode === 'blank', () => {\r\n                    setOutputUnits(ProgUtil.getBlankBlockList());\r\n                    setBuildType('blank');\r\n                })}\r\n                {createSwitchableButton('Custom', buildMode === 'custom', () => {\r\n                    setOutputUnits(ProgUtil.getInitialBlockList());\r\n                    setBuildType('custom');\r\n                })}\r\n                {createSwitchableButton('Template', buildMode === 'template', () => {\r\n                    setOutputUnits([]);\r\n                    setBuildType('template');\r\n                })}\r\n            </_Header>\r\n            <_MainDiv>\r\n                <_LeftDiv isEnable={buildMode !== 'blank'}>\r\n                    <_BeatFormDiv>\r\n                        <ProgStyle._TitleLabel>Beat</ProgStyle._TitleLabel>\r\n                        <ProgStyle._Combobox value={distBeatFilter} isEnable={beatComboboxEnable} width={150}\r\n                            onChange={(e) => {\r\n                                beatChangeAction(e);\r\n                            }}>{beatOptionJsxList}</ProgStyle._Combobox>\r\n                    </_BeatFormDiv>\r\n                    {/* モードによって切り替えるコンテンツ（カスタムorテンプレート） */}\r\n                    <_SwitchDiv>{getSwitchContJsx()}</_SwitchDiv>\r\n                </_LeftDiv>\r\n                <_RightDiv>\r\n                    <ProgOutputFrame\r\n                        outputUnits={outputUnits}\r\n                        updateOutputUnits={() => { setOutputUnits(outputUnits.slice()) }}\r\n                    />\r\n                </_RightDiv>\r\n            </_MainDiv>\r\n            <_Footer>\r\n                {/* ダイアログを閉じる */}\r\n                <_ExecutableButton isEnable={true} onClick={closeAction}>Cancel</_ExecutableButton>\r\n                {/* 譜面を生成 */}\r\n                <_ExecutableButton isEnable={outputUnits.length >= 3} onClick={startAction}>Start</_ExecutableButton>\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ChordProgDialog;\r\n\r\nconst HEADER_HEIGHT = 50;\r\nconst FOOTER_HEIGHT = 50;\r\nconst BEAT_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 1024px;\r\n    height: 768px;\r\n    z-index: 11;\r\n    /* top: 100px;\r\n    left: 100px; */\r\n    /* width: calc(100% - 200px);\r\n    height: calc(100% - 200px); */\r\n    background-color: #929292;\r\n    border: solid 2px #404250;\r\n    border-radius: 8px;\r\n    /* border: 1px solid #dadada; */\r\n`;\r\n\r\n/**\r\n * ヘッダー\r\n */\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #7d8d97;\r\n    text-align: center;\r\n`;\r\n\r\n/**\r\n * メインコンポーネント\r\n */\r\nconst _MainDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_HEIGHT + FOOTER_HEIGHT}px);\r\n    /* background-color: #7d8d97; */\r\n    text-align: left;\r\n`;\r\n\r\n/**\r\n * 左側のコンポーネント\r\n */\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n   display: inline-block;\r\n   vertical-align: top;\r\n   width: calc(50% - 6px);\r\n   height: calc(100% - 8px);\r\n   background-color: #bdced8;\r\n   text-align: left;\r\n   margin: 4px 2px 4px 4px;\r\n   ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 拍選択\r\n */\r\nconst _BeatFormDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BEAT_HEIGHT}px;\r\n    /* background-color: #b4c7ba; */\r\n    padding: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _BeatSelect = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    text-align: left;\r\n    color: black;\r\n    vertical-align: top;\r\n    line-height: 24px;\r\n    width: 210px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 5px;\r\n`;\r\n\r\n\r\n/**\r\n * テンプレートとカスタムの切り替えコンテンツ表示\r\n */\r\nconst _SwitchDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    background-color: #cedbd7;\r\n    border: 1px solid #696969;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - ${BEAT_HEIGHT + 10}px);\r\n`;\r\n\r\n/**\r\n * 右側のコンポーネント\r\n */\r\nconst _RightDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    width: calc(50% - 6px);\r\n    height: calc(100% - 8px);\r\n    background-color: #bdced8;\r\n    text-align: left;\r\n    margin: 4px 4px 4px 2px;\r\n`;\r\n\r\n/**\r\n * フッター\r\n */\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n    & *{\r\n        margin: 10px 5px 0 0;\r\n    }\r\n`;\r\n\r\n/**\r\n * スイッチボタン\r\n */\r\nconst _SwitchableButton = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #5083c5;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c5b950;\r\n    `};\r\n    width: 200px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #375176;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #77a7e6;\r\n    ${props => !props.isActive ? '' : css`\r\n            background-color: #c5b950;\r\n    `};\r\n}\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #2d5625;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../utils/cacheUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ChordProgDialog from \"./chordProg/chordProgDialog\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [file, setFile] = useState<null | File>(null);\r\n\r\n    const fileHandle = store.scoreState.fileHandle;\r\n    const data = store.scoreData;\r\n    const tabIndex = store.systemState.scoreTabIndex;\r\n\r\n    const [fileInfo, scoreInfo]: [{\r\n        name: string;\r\n        size: string;\r\n        modified: string;\r\n    }, {\r\n        key: string;\r\n        tempo: string;\r\n        rate: string;\r\n        section: string;\r\n        chord: string;\r\n        bar: string;\r\n        time: string;\r\n        notes: string;\r\n    }] = useMemo(() => {\r\n        let name = '-';\r\n        let size = '-';\r\n        let modified = '-';\r\n        let key = '-';\r\n        let tempo = '-';\r\n        let rate = '-';\r\n        let section = '-';\r\n        let chord = '-';\r\n        let bar = '-';\r\n        let time = '-';\r\n        let notes = '-';\r\n        if (tabIndex === 0) {\r\n            if (file != null) {\r\n                name = file.name;\r\n                size = `${file.size.toString()} byte`;\r\n                modified = DataUtil.getStringFromDate(new Date(file.lastModified));\r\n            }\r\n            if (data.chordList.length > 0) {\r\n                const init = data.chordList[0].detail as DetailInit;\r\n                key = `${TheoryUtil.KEY12_MAJOR_SCALE_LIST[init.keyIndex]} ${init.scale}`;\r\n                tempo = init.bpm.toString();\r\n                rate = init.beatSignature;\r\n                let sectionNum = 0;\r\n                let chordNum = 0;\r\n                data.chordList.forEach(chord => {\r\n                    switch (chord.type) {\r\n                        case 'section': sectionNum++; break;\r\n                        case 'chord': chordNum++; break;\r\n                    }\r\n                });\r\n                section = sectionNum.toString();\r\n                chord = chordNum.toString();\r\n\r\n                const cacheList = store.scoreState.elementCacheList;\r\n                if (cacheList.length > 0) {\r\n                    const last = cacheList[cacheList.length - 1];\r\n                    time = `${last.pastSecond / 1000}s`;\r\n                    bar = `${last.bar} (${last.surplusBeat})`;\r\n                }\r\n                notes = data.notesList.length.toString();\r\n            }\r\n        }\r\n        return [{\r\n            name, size, modified\r\n        }, {\r\n            key, tempo, rate, section, chord, bar, time, notes\r\n        }]\r\n    }, [tabIndex, data, file]);\r\n\r\n    useEffect(() => {\r\n        if (tabIndex === 0 && fileHandle != null) {\r\n            fileHandle.getFile().then(file => {\r\n                setFile(file);\r\n            });\r\n        }\r\n    }, [tabIndex]);\r\n\r\n    const setScoreData = ((data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    });\r\n\r\n    /**\r\n     * ラベルフォームを生成する\r\n     * @param labelName ラベル名\r\n     * @param labelValue 値\r\n     * @returns JSX\r\n     */\r\n    const createLabelRecord = (labelName: string, labelValue: string) => {\r\n        return (\r\n            <_Recored>\r\n                <_ItemnLabel>{labelName}</_ItemnLabel>\r\n                <_ItemnValue>{labelValue}</_ItemnValue>\r\n            </_Recored>\r\n        );\r\n    }\r\n\r\n\r\n    const searchLocalFileAction = () => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            // console.log(fileContents);\r\n            store.scoreState.fileHandle = fileHandle;\r\n            setFile(file);\r\n            const text = DataUtil.unZip(fileContents);\r\n            // const text = fileContents;\r\n            console.log(text);\r\n            setScoreData(JSON.parse(text));\r\n        })();\r\n    }\r\n\r\n    const disconnectAction = () => {\r\n        store.scoreState.fileHandle = null;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n        setFile(null);\r\n    };\r\n\r\n    const isDataConnect = fileHandle != null;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_ButtonsDiv>\r\n                <_Button isEnable={true} onClick={() => {\r\n                    store.systemState.dialog = <ChordProgDialog setScoreData={setScoreData} />;\r\n                    dispatcher.system.setState(store.systemState);\r\n                }}>new score</_Button>\r\n            </_ButtonsDiv>\r\n            <_MainDiv>\r\n                <_Left>\r\n                    <_ListInfoDiv isEnable={true}>\r\n\r\n                    </_ListInfoDiv>\r\n                </_Left>\r\n                <_Right>\r\n                    {/* <_Source value={source} onChange={e => setSource(e.target.value)} /> */}\r\n\r\n                    <_ButtonsDiv>\r\n                            <_Button isEnable={!isDataConnect} onClick={searchLocalFileAction}>load file</_Button>\r\n                            <_Button isEnable={isDataConnect} onClick={disconnectAction}>disconnect</_Button>\r\n                        </_ButtonsDiv>\r\n                    <_DataInfoDiv isEnable={isDataConnect}>\r\n                        <_TitleLabel>DATA</_TitleLabel>\r\n                        {createLabelRecord('file', fileInfo.name)}\r\n                        {createLabelRecord('name', fileInfo.name)}\r\n                        {createLabelRecord('url', fileInfo.name)}\r\n                        {createLabelRecord('size', fileInfo.name)}\r\n                        {/* {createLabelRecord('size', fileInfo.size)}\r\n                        {createLabelRecord('modified', fileInfo.modified)} */}\r\n                    </_DataInfoDiv>\r\n                    <_ScoreInfoDiv isEnable={data.chordList.length > 0}>\r\n                        <_TitleLabel>SCORE</_TitleLabel>\r\n                        {createLabelRecord('key', scoreInfo.key)}\r\n                        {createLabelRecord('tempo', scoreInfo.tempo)}\r\n                        {createLabelRecord('rate', scoreInfo.rate)}\r\n                        {createLabelRecord('section', scoreInfo.section)}\r\n                        {createLabelRecord('chord', scoreInfo.chord)}\r\n                        {createLabelRecord('bar', scoreInfo.bar)}\r\n                        {createLabelRecord('time', scoreInfo.time)}\r\n                        {createLabelRecord('notes', scoreInfo.notes)}\r\n                    </_ScoreInfoDiv>\r\n                </_Right>\r\n            </_MainDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #8a6b6b; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #969696; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\n// const _Source = styled.textarea`\r\n//     display: inline-block;\r\n//     width: calc(100% - 8px);\r\n//     margin: 4px 0 0 4px;\r\n//     height: calc(100% - 44px);\r\n//     /* background-color: #7e7e7e; */\r\n//     text-align: left;\r\n//     font-size: 20px;\r\n//     resize: none;\r\n//     box-sizing: border-box;\r\n//     color: #060053;\r\n// `;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    height: calc(100% - 48px);\r\n    background-color: #ffffff;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst DATA_INFO_HEIGHT = 260;\r\n\r\nconst _DataInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${DATA_INFO_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #9da5af;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ScoreInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${DATA_INFO_HEIGHT + 40 + 12}px);\r\n    margin: 0 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\n\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #888888;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : TheoryUtil.getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: TheoryUtil.SymbolKey[] = [];\r\n        const parentLine: TheoryUtil.SymbolKey[] = [];\r\n        const childrenLine: TheoryUtil.SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = TheoryUtil.getSymbolDerives(baseSymbol.key);\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = TheoryUtil.getSymbolDerives(curSymbol.key);\r\n        TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\nimport { DetailChord } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = TheoryUtil.getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = TheoryUtil.getRootName({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = TheoryUtil.getRootName({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        // 見た目上１から数えるため\r\n        bar = cache.bar + 1;\r\n    }\r\n    // 小節変更タイミングで、余りの拍がある（頭でない）場合エラー\r\n    const isError = bar !== -1 && cache.surplusBeat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n        if(chordOn != null) {\r\n            chordName += `/${chordOn}`;\r\n        }\r\n    }\r\n\r\n    let minuteStr = '';\r\n    if(cache.minute !== 0) {\r\n        switch(cache.minute) {\r\n            case 1: minuteStr = '→/16'; break;\r\n            case 2: minuteStr = '→/8'; break;\r\n            case -1: minuteStr = '←/16'; break;\r\n            case -2: minuteStr = '←/8'; break;\r\n        }\r\n    }\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.surplusBeat === 0 ? <>&nbsp;</> : cache.surplusBeat}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : minuteStr}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailAlter = (props: {\r\n    detail: DetailAlter;\r\n}) => {\r\n\r\n    const type = props.detail.alterType;\r\n\r\n    const getDetailInfo = (): string => {\r\n        let ret = '-';\r\n        if (type != null) {\r\n            switch (type) {\r\n                case 'modulate': {\r\n\r\n                    const modRel = props.detail.modRel;\r\n                    if (modRel != null) {\r\n                        switch (modRel) {\r\n                            case 'domm': {\r\n                                const val = props.detail.dommVal;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                            case 'relative':\r\n                            case 'parallel': {\r\n                                ret = modRel;\r\n                            } break;\r\n                            case 'key': {\r\n                                const val = props.detail.keyAdj;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                        }\r\n                    }\r\n                } break;\r\n                case 'tempo' : {\r\n                    const tempoRel = props.detail.tempoRel;\r\n                    switch(tempoRel) {\r\n                        case 'diff': {\r\n                            const val = props.detail.tempoDiff;\r\n                            const sign = val > 0 ? '+' : ''; \r\n                            ret = `${tempoRel}: ${sign}${val}`;\r\n                        } break;\r\n                        case 'rate': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoRate}%`;\r\n                        } break;\r\n                        case 'abs': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoAbs}`;\r\n                        } break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                {type == null ? 'alter' : type}\r\n            </_Type>\r\n            <_Detail>\r\n                {getDetailInfo()}\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailChord, Scale } from \"../../../../../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../../../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 2 | 1;\r\n\r\n/**\r\n * コードブロックのコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isSustainMode: boolean;\r\n    isCurrent: boolean;\r\n    cache: ScoreCache.Element;\r\n    chordCacheList: ScoreCache.Chord[];\r\n    keyIndex: number;\r\n    scale: Scale;\r\n}) => {\r\n\r\n    const minute = props.detail.minute;\r\n    const symbol = TheoryUtil.getSymbolFromKey(props.detail.symbolKey) as TheoryUtil.SymbolParams;\r\n    const symbolName = symbol.name;\r\n    const chordBacking = props.detail.backing;\r\n    const cache = props.cache;\r\n    const chordCache = props.chordCacheList[cache.chordBlockNo];\r\n\r\n    const backingError = chordCache != undefined ? chordCache.backingError : false;\r\n    \r\n    return useMemo(() => {\r\n\r\n        // const keySwitch = store.scoreState.keySwitch;\r\n        let degreeRoot: null | string = null;\r\n        let degreeOn: null | string = null;\r\n        let chordRoot: null | string = null;\r\n        let chordOn: null | string = null;\r\n\r\n        if (props.detail.root != null) {\r\n            degreeRoot = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            });\r\n            chordRoot = TheoryUtil.getRootName({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, props.keyIndex);\r\n\r\n            if (props.detail.on != null) {\r\n                degreeOn = TheoryUtil.getDegreeRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.on.isFlat\r\n                });\r\n                chordOn = TheoryUtil.getRootName({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.root.isFlat\r\n                }, props.keyIndex);\r\n            }\r\n        }\r\n\r\n        const diatonicList = TheoryUtil.getDiatonicDegreeList(props.scale);\r\n        const isDiatonic = diatonicList.includes(degreeRoot + symbolName);\r\n\r\n        return <_Wrap>\r\n            <_Degree\r\n                // isSwitch={keySwitch.sustainMode && props.isCurrent}\r\n                isSwitch={props.isSustainMode}\r\n                scaleRelation={degreeRoot != null && isDiatonic ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}{symbolName}{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeRoot>\r\n                    {/* <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord> */}\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={props.isSustainMode}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n            <_Backing>\r\n                {backingError ? <_Error /> : <>\r\n                    {chordBacking.voicingList.length === 0 ? '' : <_Voicing />}\r\n                    {chordBacking.voicingList.length === 0 ? '' : chordBacking.pattern == null ? '' : <_Pattern />}\r\n                </>}\r\n            </_Backing>\r\n        </_Wrap>\r\n    }\r\n        , [\r\n            props.scale,\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            props.isSustainMode,\r\n            props.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail,\r\n            props.detail.backing,\r\n            backingError\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: TheoryUtil.ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 18px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #4e5163cc;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 2 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 1 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Backing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 6px;\r\n    /* background-color: #00a048; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _Error = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background-color: #af3838;\r\n`;\r\n\r\nconst _Voicing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 2px 0 0;\r\n    height: 4px;\r\n    border-radius: 4px 0 0 4px;\r\n    border: solid 1px #0000004e;\r\n    background-color: #acb6ca;\r\n`;\r\n\r\nconst _Pattern = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 0 0 2px;\r\n    height: 4px;\r\n    border-radius: 0 4px 4px 0;\r\n    border: solid 1px #0000004e;\r\n    background-color: #accab3;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    // const jsxList: JSX.Element[] = [];\r\n    // jsxList.push(<_Border key={0} />);\r\n    // jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    const value = props.detail.fixed;\r\n    return (\r\n        <_Wrap isStart={value === 'Start'}>\r\n            {/* {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()} */}\r\n            <_Label>{value}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div<{\r\n    isStart: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    border-left: 1px solid #00000083;\r\n    border-top: 1px solid #00000083;\r\n    border-right: 1px solid #00000083;\r\n    /* border: 1px solid #00000083; */\r\n    box-sizing: border-box;\r\n    background-color: #9b9b9b1f;\r\n    ${props => props.isStart ? css`\r\n        border-radius: 0 35px 0 0;\r\n    ` : css`\r\n        border-radius: 35px 0 0 0;\r\n    `}\r\n`;\r\n\r\n// const _Border = styled.div`\r\n//     display: inline-block;\r\n//     width: 10px;\r\n//     height: 100%;\r\n//     background-color: #b4b4b4;\r\n//     vertical-align: middle;\r\n// `;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    /* width: calc(100% - 10px); */\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #960000b0;\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    /* vertical-align: middle; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{TheoryUtil.KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.beatSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailSection } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailSection = (props: {\r\n    detail: DetailSection;\r\n}) => {\r\n    // const { store } = useContext(GlobalContext);\r\n\r\n    // const state = store.scoreState;\r\n    // const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    // const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Label>{curSection.labelName}</_Label> */}\r\n            <_Label>{props.detail.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcAlter = (props: {\r\n    detail: DetailAlter;\r\n    prevCache: ScoreCache.Element;\r\n    curCache: ScoreCache.Element;\r\n}) => {\r\n\r\n    const getType = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate': return 'Key';\r\n            case 'tempo': return 'Tempo';\r\n            case 'beat': return 'Beat';\r\n        }\r\n    }\r\n    const getDetail = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate':{\r\n                const prevKey = TheoryUtil.KEY12_SHARP_LIST[props.prevCache.keyIndex] + (props.prevCache.scale === 'major' ? '' : 'm');\r\n                const curKey = TheoryUtil.KEY12_SHARP_LIST[props.curCache.keyIndex] + (props.curCache.scale === 'major' ? '' : 'm');\r\n                return `${prevKey}→${curKey}`;\r\n            }\r\n            case 'tempo':{\r\n                const prevTempo = props.prevCache.bpm;\r\n                const curTempo = props.curCache.bpm;\r\n                return `${prevTempo}→${curTempo}`;\r\n            }\r\n            case 'beat':{\r\n                const prevBeat = props.prevCache.beatSignature;\r\n                const curBeat = props.curCache.beatSignature;\r\n                return `${prevBeat}→${curBeat}`;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Type>{getType()}</_Type>\r\n            <_Detail>{getDetail()}</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\ntype ChordDefBean = {\r\n    root: TheoryUtil.DegreeProps;\r\n    symbolKey: TheoryUtil.SymbolKey;\r\n}\r\n\r\nconst ChordEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n    }, [detail.root, detail.symbolKey]);\r\n\r\n    const getChord = (index: number, isFlat: boolean, symbolKey: TheoryUtil.SymbolKey): ChordDefBean => {\r\n        return { root: { index, isFlat }, symbolKey };\r\n    }\r\n\r\n    const createRow = (label: JSX.Element, chordList: ChordDefBean[]): JSX.Element => {\r\n        const listJsx: JSX.Element[] = [];\r\n        listJsx.push(<_Header key={listJsx.length}>{label}</_Header>);\r\n        chordList.forEach((chord) => {\r\n            const rootName = TheoryUtil.getDegreeRoot(chord.root);\r\n            const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\r\n            const symbolName = symbol.name;\r\n            listJsx.push(\r\n                <_Item isActive={false} key={listJsx.length}>\r\n                    {rootName + symbolName}\r\n                </_Item>);\r\n        });\r\n        return <_Row>{listJsx}</_Row>;\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {createRow(<>triad</>, [\r\n                getChord(0, false, 'major'),\r\n                getChord(2, false, 'minor'),\r\n                getChord(4, false, 'minor'),\r\n                getChord(5, false, 'major'),\r\n                getChord(7, false, 'major'),\r\n                getChord(9, false, 'minor'),\r\n                getChord(11, false, 'minor-minus5'),\r\n            ])}\r\n            {/* {createRow(<>Tetrad</>, [\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'minor-7th'),\r\n                getChord(4, false, 'minor-7th'),\r\n                getChord(5, false, 'major-maj7th'),\r\n                getChord(7, false, 'major-min7th'),\r\n                getChord(9, false, 'minor-7th'),\r\n                getChord(11, false, 'minor7-minus5'),\r\n            ])} */}\r\n            {createRow(<>domm</>, [\r\n                getChord(9, false, 'major-min7th'),\r\n                getChord(11, false, 'major-min7th'),\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'major-min7th'),\r\n                getChord(4, false, 'major-min7th'),\r\n            ])}\r\n            {createRow(<>domm*</>, [\r\n                getChord(1, false, 'diminish'),\r\n                getChord(3, false, 'diminish'),\r\n                getChord(4, false, 'diminish'),\r\n                getChord(6, false, 'diminish'),\r\n                getChord(8, false, 'diminish'),\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    /* height: 160px; */\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    /* height: 100%; */\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport SymbolEditor from \"../tool/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailAlter from \"./form/elementDetailAlter\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcAlter from \"./calc/calcAlter\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { ScoreState } from \"../../../../../redux/store/score/scoreState\";\r\nimport ChordEditor from \"../tool/chordEditor\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n    element: ChordElement;\r\n    state: ScoreState;\r\n    setState: (state: ScoreState) => void;\r\n}) => {\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = props.state;\r\n    const keySwitch = state.keySwitch;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    // const chordList = store.scoreData.chordList;\r\n    // const element = chordList[props.index];\r\n    const element = props.element;\r\n    const cache = state.elementCacheList[props.index];\r\n    const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n    const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n    const isFocus = props.index >= distHead && props.index <= distTail;\r\n    const isRange = isFocus && distHead != distTail;\r\n    const isSameSection = isFocus || state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        props.setState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    const elementJson = JSON.stringify(element);\r\n\r\n    const isError = () => {\r\n        let ret = false;\r\n        if(element.type === 'chord') {\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            ret = chordCache.backingError;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    return useMemo(() => {\r\n        // console.log(`pos: ${props.index}`);\r\n        const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n        const isInactive = !(isSameSection || element.type === 'init');\r\n        return (\r\n            <_Wrap\r\n                ref={wrapRef}\r\n                isSelectable={element.type !== 'fixed'}\r\n                isActive={isFocus}\r\n                isInactive={isInactive}\r\n                isAdditional={['chord', 'section', 'alter', 'init'].includes(element.type)}\r\n            >\r\n                <_Head>\r\n                    {element.type !== 'chord' ? <></> : (\r\n                        <_CurKey>{TheoryUtil.getDisplayKeyScaleName(cache.keyIndex, cache.scale)}</_CurKey>\r\n                    )}\r\n                </_Head>\r\n\r\n                {/* 要素の入力フォーム */}\r\n                {['init', 'chord', 'section', 'alter'].includes(element.type) ? (\r\n                    <_Form\r\n                        ref={bodyRef}\r\n                        isActive={isFocus}\r\n                        isRange={isRange}\r\n                        isInactive={isInactive}\r\n                        type={element.type}\r\n                        isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                        onClick={() => {\r\n                            if (element.type === 'fixed') {\r\n                                return;\r\n                            }\r\n                            if (!state.keySwitch.distMode) {\r\n                                state.focusIndex = props.index;\r\n                                state.distIndex = state.focusIndex;\r\n                            } else {\r\n                                state.distIndex = props.index;\r\n                            }\r\n                            props.setState(state);\r\n                        }}\r\n                    >{(() => {\r\n                        switch (element.type) {\r\n                            case 'init': {\r\n                                const detail = element.detail as DetailInit;\r\n                                return (<ElementDetailInit detail={detail} />);\r\n                            }\r\n                            case 'section': {\r\n                                const detail = element.detail as DetailSection;\r\n                                return (<ElementDetailSection detail={detail} />);\r\n                            }\r\n                            case 'chord': {\r\n                                const detail = element.detail as DetailChord;\r\n                                return (<ElementDetailChord\r\n                                    detail={detail}\r\n                                    isCurrent={isFocus}\r\n                                    cache={cache}\r\n                                    chordCacheList={state.chordCacheList}\r\n                                    keyIndex={cache.keyIndex}\r\n                                    isSustainMode={isFocus && state.keySwitch.sustainMode}\r\n                                    scale={cache.scale}\r\n                                />);\r\n                            }\r\n                            case 'alter': {\r\n                                const detail = element.detail as DetailAlter;\r\n                                return (<ElementDetailAlter detail={detail} />);\r\n                            }\r\n                        }\r\n                    })()}\r\n                    </_Form>\r\n                ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n                {/* 入力フォーム下部の計算によって出力される情報 */}\r\n                {\r\n                    element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                        element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                            element.type === 'alter' ? (\r\n                                <CalcAlter\r\n                                    detail={element.detail as DetailAlter}\r\n                                    prevCache={state.elementCacheList[props.index - 1]}\r\n                                    curCache={cache}\r\n                                />\r\n                            ) :\r\n                                <></>\r\n                }\r\n                <>{!(isCurrent && chordDetail != null && state.keySwitch.chordMode) ? '' :\r\n                    <ChordEditor />\r\n                }</>\r\n                <>{!(isCurrent && chordDetail != null && chordDetail.root != null && state.keySwitch.symbolMode) ? '' :\r\n                    <SymbolEditor />\r\n                }</>\r\n                {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                    <_Operations>\r\n                        <_OperationItem>-</_OperationItem>\r\n                        <_OperationItem\r\n                        // onClick={() => dispatcher.score.addChordElement()}\r\n                        >+</_OperationItem>\r\n                    </_Operations>\r\n                )}\r\n            </_Wrap>\r\n        );\r\n    }, [\r\n        elementJson, isSameSection, isRange, isFocus,\r\n        keySwitch.chordMode, keySwitch.symbolMode, keySwitch.sustainMode,\r\n        isError(), cache.keyIndex, cache.scale\r\n    ]);\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isRange: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    /* border: solid 1px #00000049; */\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #df8484;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #44b168;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'alter' ? '' : css`\r\n        border: solid 1px #604fc0;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 4px;\r\n    ${props => props.isInactive ? '' : css`\r\n        /* background-color: #ebf1e2; */\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4c9df;\r\n        border: solid 1px #00000049;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n    ${props => !props.isRange ? '' : css`\r\n        background-color: #80d4e2;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isAdditional: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isAdditional ? '' : css`\r\n        /* background-color: #e8ff9549; */\r\n        background: linear-gradient(to bottom, transparent,transparent,transparent, #ffffff9e);\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #ffffff9b;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (cacheList.length === chordList.length) {\r\n        for (let i = 0; i < cacheList.length; i++) {\r\n            list.push(\r\n                <ScoreElement key={list.length}\r\n                    index={i}\r\n                    element={chordList[i]}\r\n                    state={store.scoreState}\r\n                    setState={dispatcher.score.setScoreState}\r\n                />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {list}\r\n            {/* <_Frame> */}\r\n            {/* <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note> */}\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    /* overflow: auto; */\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #d8d8d8;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    state.distIndex = state.focusIndex;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 46px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #97cce0dd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #929292;\r\n    /* border-radius: 20px 20px 20px 20px; */\r\n    border-radius: 2px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 25px;\r\n        font-size: 18px;\r\n        /* font-weight: 600; */\r\n        color: #4d4d4d;\r\n        /* background-color: #0000003a; */\r\n        line-height: 22px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 21px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #adadad39; */\r\n        line-height: 20px;\r\n    }\r\n`;","import { on } from \"stream\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\nimport { getKeyIndexFromPitcher, getNormalizeLenFromNotes } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nnamespace HarmonizeUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n        const state = store.scoreState;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        const reserveTasks = store.reserveTasks;\r\n        let firstTime = -1;\r\n        const update = () => {\r\n            // if (store.invalidate.harmonize) {\r\n            //     store.invalidate.harmonize();\r\n            // }\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = state.focusIndex; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n            const element = chordList[i];\r\n\r\n            /**\r\n             * 要素の切り替わり時の処理をタスクに追加する\r\n             * @param callback 実行する処理\r\n             */\r\n            const addProgAction = (callback: () => void) => {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        callback();\r\n                    }, cache.pastSecond - firstTime - adjsut)\r\n                );\r\n            }\r\n\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                // 開始時のノーツの位置（時間）を保存する。\r\n                if (firstTime === -1) {\r\n                    firstTime = cache.pastSecond;\r\n                }\r\n\r\n                // コードが指定されてい場合\r\n                if (detail.root == null) {\r\n                    addProgAction(()=> {\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        update();\r\n                    });\r\n                }\r\n\r\n                // バッキングエラーがない場合\r\n                if (!chordCache.backingError) {\r\n                    const backing = detail.backing;\r\n                    const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n\r\n                    // const chordTime = 60 / cache.bpm * len;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    const chordTime = TheoryUtil.calcSustainMsec(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        cache.bpm,\r\n                        cache.beatSignature\r\n                    );\r\n\r\n                    addProgAction(()=> {\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        setTimeout(() => {\r\n                            update();\r\n                        }, 0);\r\n                    });\r\n                } else {\r\n                    // バッキングエラーがある場合プレビューを止める\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                        }, (cache.pastSecond - firstTime - adjsut))\r\n                    );\r\n                }\r\n            }\r\n\r\n            // 終端の要素を処理\r\n            if (i === chordList.length - 1) {   \r\n                addProgAction(()=> {\r\n                    HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                });\r\n            }\r\n        }\r\n\r\n        // メロディを再生\r\n        if (!state.isSolo) {\r\n            previewMelody(firstTime / 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n        state.isPreview = true;\r\n        update();\r\n    }\r\n\r\n    const previewMelody = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const instrument = store.instruments.soundfontPlayer;\r\n\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = 0; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n\r\n            if (posTime < start) continue;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    dispatcher.melody.adjustScrollX();\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                    }, 0);\r\n                }, (posTime - start) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            // if (i === data.notesList.length - 1) {\r\n            //     reserveTasks.push(\r\n            //         setTimeout(() => {\r\n            //             stopPreview(store, dispatcher, reserveTasks);\r\n            //         }, (posTime - start + lenTime) * 1000)\r\n            //     );\r\n            // }\r\n        }\r\n    }\r\n\r\n    // ハーモニーのプレビューを停止する。\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        state.isPreview = false;\r\n        // store.instruments.sampler.releaseAll();\r\n        // state.focusIndex = state.lastFocus;\r\n        reserveTasks.forEach(id => clearTimeout(id));\r\n        dispatcher.system.setReserveTasks([]);\r\n        dispatcher.score.setScoreState(state);\r\n\r\n        store.instruments.harmony?.stop();\r\n    }\r\n\r\n    // 選択中の要素のバッキングパターンを鳴らす\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.scoreState;\r\n        const reserveTasks = store.reserveTasks;\r\n        const cache = state.elementCacheList[state.focusIndex];\r\n        const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n        const curChord = store.scoreData.chordList[state.focusIndex];\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n            // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n            // const chordTime = 60 / cache.bpm * len;\r\n\r\n            const minute = detail.minute.head + detail.minute.tail;\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                detail.beatLen,\r\n                minute,\r\n                cache.bpm,\r\n                cache.beatSignature\r\n            );\r\n\r\n            BackingUtil.playBacking(store, store.reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.score.setScoreState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n    }\r\n}\r\n\r\nexport default HarmonizeUtil;\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\nimport { ChordBacking } from \"../../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\nimport { NoteKeySwitch } from \"../../../../../redux/store/score/scoreState\";\r\n\r\nnamespace BackingEditorInput {\r\n\r\n    export const main = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const data = store.scoreData;\r\n        const state = store.backingState;\r\n\r\n        if (state == null) return;\r\n\r\n        if (!state.isPreview) {\r\n            edit(e, state, keySwitch, dispatcher);\r\n        } else {\r\n\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const edit = (e: KeyboardEvent, state: BackingState.Editor, keySwitch: NoteKeySwitch, dispatcher: Dispatcher) => {\r\n\r\n        const pattern = state.pattern;\r\n\r\n        // 共通処理\r\n        common(e, state, dispatcher);\r\n\r\n        if (pattern != null) {\r\n            if (pattern.channelIndex === -1) {\r\n                patternNormalMode(e, state, pattern, dispatcher);\r\n            } else {\r\n                patternDetailMode(e, state, pattern, keySwitch.sustainMode, dispatcher);\r\n            }\r\n        }\r\n    }\r\n\r\n    const common = (e: KeyboardEvent, state: BackingState.Editor, dispatcher: Dispatcher) => {\r\n\r\n        switch (e.key) {\r\n            case 'b': {\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n            case 'z': {\r\n                const voicingList = BackingUtil.getVoicingListFromTable(state.voicingTable);\r\n                const pattern = state.pattern == null ? null : BackingUtil.buildPatternProps(state.pattern);\r\n                const test: ChordBacking = { voicingList, pattern };\r\n                console.log('voicingList: ' + DataUtil.gZip(JSON.stringify(voicingList)));\r\n                console.log('pattern: ' + DataUtil.gZip(JSON.stringify(pattern)));\r\n                console.log('source: ' + DataUtil.gZip(JSON.stringify(test)));\r\n                console.log('source: ' + JSON.stringify(test));\r\n            }\r\n                break;\r\n            case ' ': {\r\n                if (!state.hasError) {\r\n                    dispatcher.backing.testBacking();\r\n                }\r\n            }\r\n                break;\r\n            case 'Enter': {\r\n                dispatcher.backing.mappingEditorToScore();\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * パターン編集の通常モード\r\n     * @param e \r\n     * @param state \r\n     * @param pattern \r\n     * @param dispatcher \r\n     */\r\n    const patternNormalMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, dispatcher: Dispatcher) => {\r\n\r\n        const update = () => dispatcher.backing.setState(state);\r\n        switch (e.key) {\r\n            case 'ArrowLeft': {\r\n                dispatcher.backing.movePatternColumn(false);\r\n            }\r\n                break;\r\n            case 'ArrowRight': {\r\n                dispatcher.backing.movePatternColumn(true);\r\n            }\r\n                break;\r\n            case 'ArrowUp': {\r\n                dispatcher.backing.incrementVel(1);\r\n            }\r\n                break;\r\n            case 'ArrowDown': {\r\n                dispatcher.backing.incrementVel(-1);\r\n            }\r\n                break;\r\n            case 'a': {\r\n                dispatcher.backing.addPatternColumn();\r\n            }\r\n                break;\r\n            case 'w': {\r\n                dispatcher.backing.switchLayer();\r\n            }\r\n                break;\r\n            case 'e': {\r\n                dispatcher.backing.switchMode();\r\n            }\r\n                break;\r\n            case '1': {\r\n                dispatcher.backing.setCurrentDivRate(16);\r\n            }\r\n                break;\r\n            case '2': {\r\n                dispatcher.backing.setCurrentDivRate(8);\r\n            }\r\n                break;\r\n            case '3': {\r\n                dispatcher.backing.setCurrentDivRate(4);\r\n            }\r\n                break;\r\n            case '4': {\r\n                dispatcher.backing.setCurrentDivRate(2);\r\n            }\r\n                break;\r\n            case '5': {\r\n                dispatcher.backing.setCurrentDivRate(1);\r\n            }\r\n                break;\r\n            case '.': {\r\n                dispatcher.backing.toggleCurrentDivHalf();\r\n            }\r\n                break;\r\n            case 'Delete': {\r\n                dispatcher.backing.deleteColumn();\r\n            }\r\n                break;\r\n            case 's': {\r\n                pattern.channelIndex = 0;\r\n                update();\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * パターン編集の詳細モード\r\n     * @param e \r\n     * @param state \r\n     * @param pattern \r\n     * @param isEdit \r\n     * @param dispatcher \r\n     */\r\n    const patternDetailMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, isEdit: boolean, dispatcher: Dispatcher) => {\r\n\r\n        const update = () => dispatcher.backing.setState(state);\r\n        if (!isEdit) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft': {\r\n                    dispatcher.backing.movePatternColumn(false);\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    dispatcher.backing.movePatternColumn(true);\r\n                }\r\n                    break;\r\n                case 'ArrowUp': {\r\n                    dispatcher.backing.moveChannelIndex(false);\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.backing.moveChannelIndex(true);\r\n                }\r\n                    break;\r\n                case 's': {\r\n                    pattern.channelIndex = -1;\r\n                    update();\r\n                }\r\n                    break;\r\n                case 'a': {\r\n                    const curNotes = dispatcher.backing.getNotes();\r\n\r\n                    const hasStaccato = () => {\r\n                        const layer = pattern.layers[pattern.layerIndex];\r\n                        const search = layer.table.find((record) => {\r\n                            const cell = record[pattern.lenIndex];\r\n                            if (cell != null && cell.signal === 's') return cell;\r\n                        });\r\n                        return search != undefined;\r\n                    }\r\n                    // 同列にスタッカートがある場合、スタッカートを設定\r\n                    const signal = !hasStaccato() ? 'n' : 's';\r\n                    const notes: BackingState.NoteStatus | null = curNotes == null ? { signal, timing: 0, velAdj: 0 } : null;\r\n                    dispatcher.backing.setNotes(notes);\r\n                    dispatcher.backing.updateErrorState();\r\n                }\r\n                    break;\r\n            }\r\n        } else {\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const baseVel = layer.velocityList[pattern.lenIndex];\r\n            const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n            const cell = layer.table[channelIndex][pattern.lenIndex];\r\n\r\n            if (cell != null) {\r\n                let tempTiming = cell.timing == undefined ? 0 : cell.timing;\r\n                let tempVelAdj = cell.velAdj == undefined ? 0 : cell.velAdj;\r\n                const vel = baseVel + tempVelAdj;\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        if (vel < 10) {\r\n                            tempVelAdj++;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        if (vel > 1) {\r\n                            tempVelAdj--;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowLeft': {\r\n                        if (tempTiming > -10) {\r\n                            tempTiming--;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        if (tempTiming < 10) {\r\n                            tempTiming++;\r\n                        }\r\n                    }\r\n                        break;\r\n                }\r\n                if (tempVelAdj !== 0) {\r\n                    cell.velAdj = tempVelAdj;\r\n                } else {\r\n                    delete cell.velAdj;\r\n                }\r\n                if (tempTiming != 0) {\r\n                    cell.timing = tempTiming;\r\n                } else {\r\n                    delete cell.timing;\r\n                }\r\n                update();\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default BackingEditorInput;","import styled, { css } from \"styled-components\";\r\n\r\nexport namespace SideFormStyles {\r\n\r\n    export const ___CSS_FORM = css`\r\n        display: inline-block;\r\n        /* width: 100px; */\r\n        height: 25px;\r\n        background-color: #bdbdbd;\r\n        border: 1px solid #000;\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        color: #303030;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        text-align: center;\r\n    `;\r\n\r\n    export const ___CSS_TITLE = css`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 26px;\r\n        /* background-color: #f0f0f0; */\r\n        background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n        border: 1px solid #222222;\r\n        font-size: 20px;\r\n        color: #ffffff;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        box-sizing: border-box;\r\n        /* border: 1px solid #c50000; */\r\n        text-align: center;\r\n    `;\r\n\r\n    export const createNumberForm = (value: number, isEnable: boolean,\r\n         onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n         min: number, max:number, step:number) => {\r\n\r\n        return (\r\n            <_NumberForm isEnable={isEnable}>\r\n                <input\r\n                    type=\"number\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"range\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </_NumberForm>\r\n        );\r\n    }\r\n\r\n    const _NumberForm = styled.div<{\r\n        isEnable: boolean;\r\n    }>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 55px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 5px;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n    `;\r\n}","import { stat } from \"fs\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport BackingEditorInput from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    // プレビュー再生時\r\n    if (state.isPreview) {\r\n        switch (e.key) {\r\n            case ' ': {\r\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n        return;\r\n    } else {\r\n        if (store.scoreState.hideMenu === 'none') {\r\n            if (isElement) {\r\n                if (keySwitch.control) {\r\n                    switch (e.key) {\r\n                        case 'c': {\r\n                            const element = data.chordList[state.focusIndex];\r\n                            if (element.type === \"chord\") {\r\n                                const detail = element.detail as DetailChord;\r\n                                if (detail.root != null) {\r\n                                    dispatcher.score.cloneBacking();\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'x': {\r\n                            dispatcher.score.copyElementList();\r\n                        }\r\n                            break;\r\n                        case 'v': {\r\n                            if (state.copiedElementList != null) {\r\n                                dispatcher.score.pasteElementList();\r\n                            } else if (state.cloneBacking != null) {\r\n\r\n                                const element = data.chordList[state.focusIndex];\r\n                                if (element.type === \"chord\") {\r\n                                    const detail = element.detail as DetailChord;\r\n                                    if (detail.root != null) {\r\n                                        dispatcher.score.pastBacking();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 's': {\r\n                            // dispatcher.score.saveFile();\r\n                            DataUtil.saveFile(JSON.stringify(data), state);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.distMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.moveDist(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.moveDist(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.sustainMode) {\r\n                    switch (e.key) {\r\n                        case config.decRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(false);\r\n                        }\r\n                            break;\r\n                        case config.incRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(true);\r\n                        }\r\n                            break;\r\n                        case config.decBeat: {\r\n                            dispatcher.score.incrementBeatLen(false);\r\n                        }\r\n                            break;\r\n                        case config.incBeat: {\r\n                            dispatcher.score.incrementBeatLen(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minHeadMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, 1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, -1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minTailMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, -1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, 1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.chordMode) {\r\n                    // switch (e.key) {\r\n                    //     case 'ArrowUp': {\r\n                    //         dispatcher.symbol.toNext(false);\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowDown': {\r\n                    //         dispatcher.symbol.toNext(true);\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowLeft': {\r\n                    //         dispatcher.symbol.toBase();\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowRight': {\r\n                    //         dispatcher.symbol.toDerive();\r\n                    //     }\r\n                    //         break;\r\n                    // }\r\n                } else if (keySwitch.symbolMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.symbol.toNext(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.symbol.toNext(true);\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.symbol.toBase();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.symbol.toDerive();\r\n                        }\r\n                            break;\r\n                    }\r\n                } else {\r\n                    NoteBasicInput(e, store, dispatcher);\r\n                }\r\n            }\r\n        } else if (store.scoreState.hideMenu === 'backing') {\r\n            BackingEditorInput.main(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const state = store.scoreState;\r\n    if (!state.isPreview) {\r\n        // if (state.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case 'Control': {\r\n                keySwitch.control = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.distMode: {\r\n                if (!keySwitch.control) {\r\n                    keySwitch.distMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.edit1: {\r\n                if (!(keySwitch.control || keySwitch.distMode)) {\r\n                    keySwitch.sustainMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'v': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode)) {\r\n                    keySwitch.chordMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.edit2: {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode)) {\r\n                    keySwitch.symbolMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'd': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode)) {\r\n                    keySwitch.minHeadMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'g': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode || keySwitch.minHeadMode)) {\r\n                    keySwitch.minTailMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n        }\r\n        // }\r\n    }\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const element = data.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n    const curType = element.type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                }\r\n                    break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(cache.scale, Number(e.key) - 1);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.left: {\r\n            if (state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(false);\r\n            } else {\r\n                dispatcher.score.releaseRange(false);\r\n            }\r\n        }\r\n            break;\r\n        case config.right: {\r\n            if (state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(true);\r\n            } else {\r\n                dispatcher.score.releaseRange(true);\r\n            }\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.up: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.down: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'm': {\r\n            dispatcher.score.addAlterElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case ' ': {\r\n            // if (!chordCache.backingError) {\r\n                HarmonizeUtil.previewStart(store, dispatcher);\r\n            // }\r\n        }\r\n            break;\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BeatSignature, DetailAlter as DetailAlter, AlterType, ModulateRelation, TempoRelation } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormAlter = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailAlter;\r\n\r\n    const type = detail.alterType;\r\n\r\n    const update = () => {\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const createAlertTypeItem = (value: AlterType | '-', isActive: boolean): JSX.Element => {\r\n        const type = value === '-' ? null : value;\r\n        return <_Form isActive={isActive}\r\n            onClick={() => {\r\n                //値が変わった時のみ処理を実行\r\n                if (detail.alterType !== type) {\r\n                    detail.alterType = type;\r\n                    // 全ての項目を初期化\r\n                    detail.modRel = null;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    detail.tempoRel = null;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    detail.beatSignature = '4/4';\r\n                    update();\r\n                }\r\n            }}> {value}</_Form >;\r\n    }\r\n\r\n    const createModulateRelationItem = (value: ModulateRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'modulate' && rel == detail.modRel}\r\n            onClick={() => {\r\n                if (detail.modRel !== rel) {\r\n                    detail.modRel = rel;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createTempoRelationItem = (value: TempoRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'tempo' && rel == detail.tempoRel}\r\n            onClick={() => {\r\n                if (detail.tempoRel !== rel) {\r\n                    detail.tempoRel = rel;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createBeatItem = (value: BeatSignature): JSX.Element => {\r\n        return <_Form isActive={detail.alterType === 'beat' && detail.beatSignature === value}\r\n            onClick={() => {\r\n                if (detail.beatSignature !== value) {\r\n                    detail.beatSignature = value;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const donmmItemJsxList = <_ParamDiv isEnable={detail.modRel === 'domm'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'domm' && value == detail.dommVal}\r\n            onClick={() => {\r\n                detail.dommVal = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>\r\n    })}</_ParamDiv>;\r\n\r\n    const keyAdjItemJsxList = <_ParamDiv isEnable={detail.modRel === 'key'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'key' && value == detail.keyAdj}\r\n            onClick={() => {\r\n                detail.keyAdj = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>;\r\n    })}</_ParamDiv>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Group isEnable={true}>\r\n                <_CategoryLabel>Type</_CategoryLabel>\r\n                {createAlertTypeItem('-', type == null)}\r\n                {createAlertTypeItem('modulate', type === 'modulate')}\r\n                {createAlertTypeItem('tempo', type === 'tempo')}\r\n                {createAlertTypeItem('beat', type === 'beat')}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'modulate'}>\r\n                <_CategoryLabel>Modulate</_CategoryLabel>\r\n                {createModulateRelationItem('-')}\r\n                {createModulateRelationItem('domm')}\r\n                {donmmItemJsxList}\r\n                {createModulateRelationItem('parallel')}\r\n                {createModulateRelationItem('relative')}\r\n                {createModulateRelationItem('key')}\r\n                {keyAdjItemJsxList}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'tempo'}>\r\n                <_CategoryLabel>Tempo</_CategoryLabel>\r\n                {createTempoRelationItem('-')}\r\n                {createTempoRelationItem('diff')}\r\n                {SideFormStyles.createNumberForm(detail.tempoDiff,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'diff',\r\n                    (e) => {\r\n                        detail.tempoDiff = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, -100, 100, 1)}\r\n                {createTempoRelationItem('rate')}\r\n                {SideFormStyles.createNumberForm(detail.tempoRate,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'rate',\r\n                    (e) => {\r\n                        detail.tempoRate = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n                {createTempoRelationItem('abs')}\r\n                {SideFormStyles.createNumberForm(detail.tempoAbs,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'abs',\r\n                    (e) => {\r\n                        detail.tempoAbs = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'beat'}>\r\n                <_CategoryLabel>Beat</_CategoryLabel>\r\n                {createBeatItem('2/4')}\r\n                {createBeatItem('4/4')}\r\n                {createBeatItem('3/4')}\r\n                {createBeatItem('6/8')}\r\n                {createBeatItem('9/8')}\r\n                {createBeatItem('12/8')}\r\n            </_Group>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormAlter;\r\n\r\nconst _Wrap = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        background-color: #b3b5c5;\r\n        `;\r\n\r\nconst _Group = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 0 0 0 4px;\r\n    ${props => props.isEnable ? '' : css`\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n`}\r\n        `;\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        margin-top: 1px;\r\n        width: 100%;\r\n        background-color: #c1cdd4;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\nconst _ParamDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n        margin: 1px;\r\n        background-color: #070707;\r\n        ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n        `;\r\nconst _ParamItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        width: 29px;\r\n        background-color: #dddddd;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\n\r\nconst _ValueForm = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 24px;\r\n        /* margin: 5px 0 0 0; */\r\n        text-align: left;\r\n        background-color: #ececec;\r\n\r\n        & * {\r\n            display: inline-block;\r\n            box-sizing: border-box;\r\n            vertical-align: top;\r\n    }\r\n        & input:nth-child(1) {\r\n            background-color: #dddddd;\r\n            width: 60px;\r\n            height: calc(100% - 4px);\r\n            margin: 2px 0 0 0;\r\n            border: 1px solid #9b9b9b;\r\n            border-radius: 4px;\r\n    }\r\n        & input:nth-child(2) {\r\n            margin-left: 5px;\r\n            background-color: #f00;\r\n            width: calc(100% - 70px);\r\n            height: 100%;\r\n    }\r\n        `;","import styled, { css } from \"styled-components\";\r\n\r\nconst JUDGE_INFO_LIST: {\r\n    value: number, label: string\r\n}[] = [\r\n        { value: -2, label: '-/8' },\r\n        { value: -1, label: '-/16' },\r\n        { value: 0, label: '±0' },\r\n        { value: 1, label: '+/16' },\r\n        { value: 2, label: '+/8' }\r\n    ];\r\n\r\nexport const MinuteForm = (props: {\r\n    isHead: boolean;\r\n    value: number;\r\n    setValue: (value: number) => void;\r\n}) => {\r\n\r\n    const rateMinus = props.value >= 0 ? 0 : Math.abs(props.value) * 50;\r\n    const ratePlus = props.value <= 0 ? 0 : Math.abs(props.value) * 50;\r\n\r\n    const createJudgeItem = (key: number, value: number, label: string) => {\r\n        const isActive = props.value === value;\r\n        return (\r\n            <_JudgeItem key={key} isActive={isActive} onClick={() => props.setValue(value)} >\r\n                {!isActive ? '' : label}\r\n            </_JudgeItem>\r\n        )\r\n    }\r\n    const isRed = Math.abs(props.value) === 1;\r\n\r\n    const JudgeJsxList = JUDGE_INFO_LIST.map((judge, i) => {\r\n        return createJudgeItem(i, judge.value, judge.label);\r\n    });\r\n\r\n    return (\r\n        <_Wrap isHead={props.isHead}>\r\n            <_View>\r\n                <_ViewFrame isLeft={true} isRed={isRed} rate={!props.isHead ? rateMinus : ratePlus}><div /></_ViewFrame>\r\n                <_ViewFrame isLeft={false} isRed={isRed} rate={!props.isHead ? ratePlus : rateMinus}><div /></_ViewFrame>\r\n            </_View>\r\n            <_Judge>{!props.isHead ? JudgeJsxList : JudgeJsxList.reverse()}</_Judge>\r\n        </_Wrap>\r\n    );\r\n};\r\n\r\nexport default MinuteForm;\r\n\r\nconst _Wrap = styled.div<{\r\n    isHead: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #bfd380;\r\n    text-align: left;\r\n`;\r\nconst _Judge = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 9;\r\n`;\r\n\r\nconst _JudgeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(20% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    background-color: #0000001a;\r\n    /* border: 1px solid #4d4d4d91; */\r\n    border-radius: 4px;\r\n    ${props => !props.isActive ? '' : css`\r\n        border: 1px solid #c00000c5;\r\n    `}\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    /* opacity: 0.15; */\r\n    &:hover {\r\n        background-color: #ffffff24;\r\n    }\r\n`;\r\nconst _View = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    /* position: absolute;\r\n    top: 0;\r\n    left: 0; */\r\n    z-index: 8;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ViewFrame = styled.div<{\r\n    isRed: boolean;\r\n    isLeft: boolean;\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 16px;\r\n    margin-top: 7px;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n\r\n    & div {\r\n        position: absolute;\r\n        top: 0;\r\n        height: 100%;\r\n        width: ${props => props.rate}%;\r\n        ${props => props.isRed ? css`\r\n            background: linear-gradient(to right, #0066ff, #7691a3);\r\n        ` : css`\r\n            background: linear-gradient(to left, #ff0000, #a37676);\r\n        `}\r\n        ${props => props.isLeft ? css`\r\n            right: 0;\r\n            border-radius: 10px 0 0 10px;\r\n        ` : css`\r\n            left: 0;\r\n            border-radius: 0 10px 10px 0;\r\n        `}\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\nimport MinuteForm from \"./minuteForm\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\n\r\n/**\r\n * コードブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i}\r\n                isExist={isExist}\r\n                isActive={detail.beatLen === i + 1}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    data.chordList = data.chordList.slice();\r\n                    detail.beatLen = (i + 1);\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.DEGREE_ALL.forEach((degree, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(degree);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(degree);\r\n        const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n        const isDiatonic = degree != null && scaleIndexies.includes(degree.index);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={isDiatonic}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || degree == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = degree == null ? null : { ...degree };\r\n                    if (degree == null) {\r\n                        detail.symbolKey = 'major';\r\n                    }\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n\r\n                    // キャッシュの更新\r\n                    const root = detail.root as TheoryUtil.DegreeProps;\r\n                    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                    [chordCache.chordFullName, chordCache.structList] =\r\n                        BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = degree == null ? null : { ...degree };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n\r\n                        // キャッシュの更新\r\n                        const root = detail.root as TheoryUtil.DegreeProps;\r\n                        const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                        [chordCache.chordFullName, chordCache.structList] =\r\n                            BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                        dispatcher.score.setScoreState(state);\r\n                    }\r\n                }}\r\n            >\r\n                {degree == null ? '-' : <>\r\n                    {TheoryUtil.getDegreeRoot(degree)} ({TheoryUtil.getRootName(degree, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    /**\r\n     * シンコペーションの入力フォームを生成するコールバック\r\n     * @param isHead 頭対象フラグ（falseの場合後ろが対象）\r\n     * @returns JSX\r\n     */\r\n    const createMinuteForm = (isHead: boolean): JSX.Element => {\r\n        const minute = detail.minute;\r\n        const [value, setValue]: [number, (value: number) => void] = isHead ? [\r\n            minute.head,\r\n            (value: number) => {\r\n                // minute.head = value;\r\n                // dispatcher.score.setScoreData(store.scoreData);\r\n                const adjust = value - minute.head;\r\n                dispatcher.score.incrementMinuteValRelation(false, adjust);\r\n            }\r\n        ] : [\r\n            minute.tail,\r\n            (value: number) => {\r\n                // minute.tail = value;\r\n                // dispatcher.score.setScoreData(store.scoreData);\r\n                const adjust = value - minute.tail;\r\n                dispatcher.score.incrementMinuteValRelation(true, adjust);\r\n            }\r\n        ];\r\n        return <MinuteForm value={value} setValue={setValue} isHead={isHead} />\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_CategoryLabel>{'Beat length'}</_CategoryLabel>\r\n                <_BeatDiv>\r\n                    {beatItemsJsx}\r\n                </_BeatDiv>\r\n                <_Minute>\r\n                    <_CategoryLabel>{'Minute head'}</_CategoryLabel>\r\n                    {createMinuteForm(true)}\r\n                    {/* <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                    <_CategoryLabel>{'Minute tail'}</_CategoryLabel>\r\n                    {createMinuteForm(false)}\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    {/* <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_RootDiv>\r\n                    {rootItemsJsx}\r\n                </_RootDiv>\r\n                <_SymbolDiv\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_SymbolDiv>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 100px; */\r\n    text-align: left;\r\n    background-color: #979797;\r\n`;\r\n\r\nconst _BeatDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 3px;\r\n        width: calc(100% - 6px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isActive ? '' : css`\r\n            /* border: solid 1px #fff; */\r\n        `}\r\n        box-sizing: border-box;\r\n        border-radius: 6px;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    margin-top: 5px;\r\n    width: 100%;\r\n    /* height: 360px; */\r\n    text-align: left;\r\n    /* background-color: #000000; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _RootDiv = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    margin: 0 0 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #e6e6e6; */\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #90bbcc;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #d1c521b8;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    color: #616161;\r\n    ${props => !props.isDiatonic ? '' : css`color: #ffffff;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #99999940;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #cc6363b8;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #6374ccb8;`}\r\n    }\r\n`;\r\n\r\nconst _SymbolDiv = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 93px);\r\n    margin: 0 1px 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    background-color: #a1cc90;\r\n    ${props => !props.isActive ? '' : css`background-color: #d1c521b8;`}\r\n    color: #fff;\r\n    ${props => !props.isDiatonic ? '' : css`color: #fff;`}\r\n    /* & span {\r\n        color: #f000;\r\n    } */\r\n    &:hover {\r\n        background-color: #dddddd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #cc6363b8;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const update = () => {\r\n        data.chordList = data.chordList.slice();\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const scaleItemJsxList: JSX.Element[] = TheoryUtil.SCALE_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? TheoryUtil.KEY12_MAJOR_SCALE_LIST : TheoryUtil.KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n    const rateItemJsxList: JSX.Element[] = TheoryUtil.BEAT_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.beatSignature === item} onClick={() => {\r\n                detail.beatSignature = item as BeatSignature;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            {SideFormStyles.createNumberForm(detail.bpm, true, (e) => {\r\n                detail.bpm = e.currentTarget.valueAsNumber;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }, 30, 220, 1)}\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 50%;\r\n    margin: 1px 0 0 0;\r\n\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 100%;\r\n    margin: 1px 0 0 0;\r\n    \r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    margin: 1px 0 0 0;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../../utils/dummyUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        DummyUtil.SECTION_CATEGORY.forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        const splitList = detail.labelName.split(' ');\r\n        DummyUtil.SECTION_NO.forEach((item) => {\r\n            const isActive = splitList[splitList.length - 1] === item.toString();\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(`${splitList[0]} ${item}`);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_SelectDiv>\r\n                <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n                <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n            </_SelectDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #b89b9b; */\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _SelectDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    background-color: #acacac;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(60% - 4px);\r\n    margin: 0 2px 0 2px;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(40% - 2px);\r\n    margin: 0 2px 0 0;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #6182b4; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #61b4b0; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormAlter from \"./sideFormAlter\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst HarmSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'alter': return <SideFormAlter />;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../../../../../redux/store/score/scoreCache\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\n\r\nconst TIP_COUNT = 14;\r\n\r\nconst StructViewer = (props: {\r\n    cache: ScoreCache.Element;\r\n    structList: BackingState.StructInfo[];\r\n}) => {\r\n    const cache = props.cache;\r\n    const structList = props.structList;\r\n    const indexList = structList.map(struct => struct.soundIndex + struct.adjustOctave * 12);\r\n    const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n    const scaleList = scaleIndexies.map(value => (cache.keyIndex + value) % 12);\r\n\r\n    const structJsxList: JSX.Element[] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n\r\n        // 2オクターブ分表示\r\n        for (let i = 0; i < TIP_COUNT; i++) {\r\n            // 下の段（白鍵のチップ）\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = indexList.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            // 上の段（黒鍵のチップ）\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = indexList.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return structJsxList;\r\n    }, [indexList]);\r\n\r\n    return (\r\n        <_Wrap isUse={indexList.length > 0}>\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default StructViewer;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    /* border: 1px solid #ffffffda; */\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    ` : css`\r\n    background: radial-gradient(#d6cec3, #a89889);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    ` : css`\r\n        background: radial-gradient(#e7a144, #72552a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternDetail = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    /** 基準となるベロシティ */\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cell = layer.table[channelIndex][pattern.lenIndex];\r\n    const baseVel = layer.velocityList[pattern.lenIndex];\r\n    const timing = (cell == null || cell.timing == undefined) ? 0 : cell.timing;\r\n    const velAdj = (cell == null || cell.velAdj == undefined) ? 0 : cell.velAdj;\r\n\r\n    return (<_Wrap>\r\n        {\r\n            // ノーツが設定されていない場合は何も表示しない\r\n            cell == null ? <></> : (<>\r\n                <_DelayDiv>\r\n                    <_Label>delay</_Label>\r\n                    <_TimingValue type=\"range\" min={-10} max={10} step={1} value={timing} onChange={e => {\r\n                        cell.timing = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_DelayDiv>\r\n                <_VelocityDiv>\r\n                    <_Label>velocity</_Label>\r\n                    <_VelFrame isFocus={false}>\r\n                        <_VelItem value={baseVel} isEdit={false}/>\r\n                    </_VelFrame>\r\n                    <_VelFrame isFocus={store.scoreState.keySwitch.sustainMode}>\r\n                        <_VelItem value={baseVel + velAdj} isEdit={velAdj != 0} />\r\n                    </_VelFrame>\r\n                    {/* <_Value type=\"range\" min={-10} max={10} step={1} value={velAdj} onChange={e => {\r\n                        cell.velAdj = Number(e.target.value);\r\n                        update();\r\n                    }} /> */}\r\n                </_VelocityDiv>\r\n            </>)\r\n        }\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternDetail;\r\n\r\nconst VEL_DIV_WIDTH = 180;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    line-height: 18px;\r\n    margin-top: 14px;\r\n    margin-left: 5px;\r\n    width: 80px;\r\n    background-color: #868686;\r\n    color: #e7e7e7;\r\n    border: 1px solid #616161;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DelayDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - ${VEL_DIV_WIDTH + 1}px);\r\n    height: 100%;\r\n    background-color: #9c9c9c;\r\n`;\r\n\r\nconst _TimingValue = styled.input<{\r\n}>`\r\n    display: inline-block;\r\n    outline: none;\r\n    margin: 20px 0 0 8px;\r\n    width: calc(100% - 100px);\r\n    height: 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VelocityDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${VEL_DIV_WIDTH}px;\r\n    height: 100%;\r\n    margin-left: 1px;\r\n    /* background-color: #9a2020; */\r\n`;\r\n\r\nconst _VelFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 46px;\r\n    height: 100%;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffffff17;\r\n    `}\r\n    /* background-color: #63a0a1;\r\n    border-radius: 20px; */\r\n`;\r\n\r\nconst _VelItem = styled.div<{\r\n    value: number;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 5px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #ddc35cae;\r\n    `}\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate * adjustRate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {itemJsxList}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternPedal = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    // 左手のレイヤー時のみ固定表示\r\n    const layer = pattern.layers[0];\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n\r\n    let cur: BackingState.PedalAction = 'off';\r\n    pattern.pedalActs.forEach((pedal, i) => {\r\n        const isActive = pattern.layerIndex === 0 && pattern.lenIndex === i;\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n        let isUse = false;\r\n        const prev = cur;\r\n        if (prev === 'change') {\r\n            cur = 'on';\r\n        }\r\n        if (pedal != null) {\r\n            isUse = true;\r\n            cur = pedal;\r\n        }\r\n        itemJsxList.push(\r\n            <_Column key={i} rate={rate} isActive={isActive} isUse={isUse} onClick={() => {\r\n                if (prev === 'off') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'on'; break;\r\n                        case 'on': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'on') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = 'change'; break;\r\n                        case 'change': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'change') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                }\r\n                // 終端までnullで更新\r\n                if (i < pattern.pedalActs.length - 1) {\r\n                    for (let j = i + 1; j < pattern.pedalActs.length; j++) {\r\n                        pattern.pedalActs[j] = null;\r\n                    }\r\n                }\r\n                update();\r\n            }}><div><_Item action={cur} /></div></_Column>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternPedal;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n    /* background-color: #4e4e4e; */\r\n`;\r\n\r\n\r\nconst _Column = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #00635eac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #179483ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    white-space: normal;\r\n\r\n    &>div {\r\n        display: inline-block;\r\n        width: 10px;\r\n        height: calc(100% - 2px);\r\n        background-color: #ffffffa0;\r\n        border-radius: 6px;\r\n        margin: 1px 0;\r\n        ${props => props.isUse ? '' : css`\r\n            background-color: #ffffff2f;\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    action: BackingState.PedalAction;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 14px;\r\n    border: 1px solid #9c9c9c;\r\n    ${props => {\r\n        switch (props.action) {\r\n            case 'off': return css`\r\n                margin-top: 0;\r\n                background-color: #271db8;\r\n            `;\r\n            case 'change': return css`\r\n                margin-top: 15px;\r\n                background-color: #f3d631;\r\n            `;\r\n            case 'on': return css`\r\n                margin-top: 30px;\r\n                background-color: #e03030;\r\n            `;\r\n        }\r\n    }}\r\n    box-sizing: border-box;\r\n    border-radius: 6px;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n    const curLayer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n    const layerJsxList = useMemo(() => {\r\n\r\n        const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n        pattern.layers.forEach((layer, j) => {\r\n\r\n            const jsxLsit: JSX.Element[] = [];\r\n            for (let i = 0; i < channelCount; i++) {\r\n                const notesJsxLsit: JSX.Element[] = [];\r\n\r\n                layer.noteDivList.forEach((note, k) => {\r\n                    // データ上は下から数えるため、表示のループは逆回転する\r\n                    const channelIndex = (channelCount - 1) - i;\r\n                    const isActive = pattern.layerIndex === j && pattern.lenIndex === k;\r\n                    const cell = layer.table[channelIndex][k];\r\n                    const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                    const isUse = cell != null;\r\n                    // 前面にあるレイヤーのみエラー判定をする\r\n                    const isError = pattern.layerIndex !== j ? false :\r\n                        isUse && BackingUtil.checkOverlapBackLayer(pattern.layers, j, channelIndex, k);\r\n                    const isEdit = isActive && pattern.channelIndex === i;\r\n                    let rate = note.rate * adjustRate;\r\n                    if (note.isDot) rate /= 1.5;\r\n                    if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n                    let viewSignal: BackingState.NoteSignal | null = null;\r\n                    if (cell != null) {\r\n                        viewSignal = cell.signal;\r\n                        if (k > 0) {\r\n                            const prevCell = layer.table[channelIndex][k - 1];\r\n                            if (prevCell != null && prevCell.signal === 't') {\r\n                                viewSignal = 't';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const hasStaccato = () => {\r\n                        const search = layer.table.find((record) => {\r\n                            const cell = record[k];\r\n                            if (cell != null && cell.signal === 's') return cell;\r\n                        });\r\n                        return search != undefined;\r\n                    }\r\n                    notesJsxLsit.push(\r\n                        <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                            <_State\r\n                                // isUse={isUse}\r\n                                isError={isError}\r\n                                signal={viewSignal}\r\n                                isBack={pattern.layerIndex !== j}\r\n                                // クリック\r\n                                onClick={() => {\r\n                                    if (cell == null) {\r\n                                        // 同列にスタッカートがある場合、スタッカートを設定\r\n                                        const signal = !hasStaccato() ? 'n' : 's';\r\n                                        setNotesStatus({ signal, timing: 0, velAdj: 0 });\r\n                                    } else {\r\n                                        setNotesStatus(null);\r\n                                    }\r\n                                    curLayer.table = curLayer.table.slice();\r\n                                    update();\r\n                                    dispatcher.backing.updateErrorState();\r\n                                }}\r\n                                // 右クリック\r\n                                onContextMenu={() => {\r\n                                    pattern.channelIndex = i;\r\n                                    pattern.lenIndex = k;\r\n                                    update();\r\n                                }}\r\n                            />\r\n                        </_Notes>\r\n                    );\r\n                });\r\n                jsxLsit.push(\r\n                    <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                        {notesJsxLsit}\r\n                    </_Record>\r\n                );\r\n            }\r\n            layerJsxList[j] = jsxLsit;\r\n        });\r\n        return layerJsxList;\r\n    }, [\r\n        pattern.channels, pattern.layerIndex, pattern.lenIndex,\r\n        curLayer.noteDivList, curLayer.table, pattern.channelIndex\r\n    ]);\r\n\r\n    // 選択中のレイヤーを表に表示する\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    // isUse: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => props.signal == null ? '' : css<{\r\n    isBack: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n}>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        ${props => props.signal !== 's' ? '' : css`\r\n            border-radius: 8px;\r\n            background: linear-gradient(to bottom, #009e0d, #02fc49, #009e0d);\r\n        `}\r\n        ${props => props.signal !== 't' ? '' : css`\r\n            height: calc(100% - 8px);\r\n            margin: 4px 0 0 1px;\r\n            background: linear-gradient(to bottom, #9e4c00, #fc6a02, #9e4c00);\r\n        `}\r\n        // エラーあり\r\n        ${props => !props.isError ? '' : css`\r\n            opacity: 0.5;\r\n        `}\r\n        // 裏面のレイヤー\r\n        ${props => !props.isBack ? '' : css`\r\n            background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.5;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => props.signal == null ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternVelocity = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.velocityList.forEach((vel, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} >\r\n                <_Value value={vel} />\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternVelocity;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #001763ac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #173494ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Value = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 6px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    /* background-color: #5cceddaf; */\r\n    background: linear-gradient(to right, #00949e, #26dcf4, #00949e);\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternDetail from \"./patternDetail\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternPedal from \"./patternPedal\";\r\nimport PatternTable from \"./patternTable\";\r\nimport PatternVelocity from \"./patternVelocity\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const divs = layer.noteDivList;\r\n    const limitLen = BackingUtil.getLimitLen(chordInfo.beatLen, chordInfo.minute, chordInfo.init.beatSignature);\r\n    const useTotalLen = BackingUtil.getUsingLenFromDivs(divs, chordInfo.init.beatSignature);\r\n    const isLenOverError = 0 <= limitLen - useTotalLen;\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const viewRate = NOTES_1BAR_WIDTH / 4;\r\n\r\n    // メモリの数を算出\r\n    let memoriCount = chordInfo.beatLen * beatProps.beatMemoriCount;\r\n    memoriCount += chordInfo.minute.head + chordInfo.minute.tail;\r\n\r\n    const barMemoriCount = beatProps.beatMemoriCount === 4 ? 16 : 24;\r\n    const memoriWidth = NOTES_1BAR_WIDTH / barMemoriCount;\r\n    // メモリJSXの生成\r\n    const memoriJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < memoriCount + 1; i++) {\r\n        const pos = i;\r\n        let bean: { thickness: number, height: number, color: string } = { thickness: 1, height: 10, color: '#555' };\r\n        if (beatProps.beatMemoriCount === 4) {\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        } else {\r\n            switch (true) {\r\n                case pos % 24 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 6 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        }\r\n        memoriJsxList.push(\r\n            <_Memori\r\n                key={memoriJsxList.length}\r\n                width={memoriWidth}\r\n                height={bean.height}\r\n                color={bean.color}\r\n                thickness={bean.thickness}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n                <_MemoriList>{memoriJsxList}</_MemoriList>\r\n                {isLenOverError ? (\r\n                    <_ChordLenLine pos={limitLen * viewRate} />\r\n                ) : (\r\n                    // 定義した拍を超えた場合のみ表示\r\n                    <_OverCover pos={limitLen * viewRate} width={(useTotalLen - limitLen) * viewRate} />\r\n                )}\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n            {pattern.channelIndex === -1 ?\r\n                // ベロシティorペダル情報を表示\r\n                (pattern.mode === 'velocity' ? <PatternVelocity /> : <PatternPedal />) :\r\n                // セルごとの詳細情報を表示\r\n                <PatternDetail />\r\n            }\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\nconst _MemoriList = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    thickness: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.thickness}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _OverCover = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: ${props => props.width}px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #f8000053;\r\n    pointer-events: none;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;\r\n\r\nconst _ChordLenLine = styled.div<{\r\n    pos: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: 4px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #ffffffc7;\r\n`;","import { useContext } from \"react\";\r\nimport { Player } from \"soundfont-player\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    soundfont: Player | null;\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n    const channelCount = pattern.channels.length;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length + 1);\r\n        pattern.channelIndex = -1;\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length - 1);\r\n        pattern.channelIndex = -1;\r\n        update();\r\n    }\r\n\r\n    const preview = () => {\r\n        if (props.soundfont != null) {\r\n            props.soundfont.play(props.soundFullName, 0, { duration: 1 });\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap isError={props.soundFullName === '-'}>\r\n            <_Struct onClick={preview}>{props.soundFullName}</_Struct>\r\n            <_Option isEnable={channelCount > 1} onClick={deleteRecord}>-</_Option>\r\n            <_Option isEnable={channelCount < BackingUtil.CHANNEL_MAX} onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ff0000c3;\r\n    `}\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)<{\r\n    isEnable: boolean;\r\n}>`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n    // const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    const layerJsxList: JSX.Element[] = [];\r\n\r\n    if (state.pattern == null) return <></>;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channels = pattern.channels;\r\n    channels.forEach((channel, i) => {\r\n        let name = '-';\r\n        if (channel.octave !== -1) {\r\n            const structInfo = chordInfo.structList[channel.structIndex];\r\n            const soundIndex = structInfo.soundIndex;\r\n            const octave = channel.octave + structInfo.adjustOctave;\r\n            const keyList = !structInfo.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\r\n            name = keyList[soundIndex % 12] + octave;\r\n        }\r\n        channelJsxList.push(\r\n            <ChannelItem key={i}\r\n                soundfont={store.instruments.harmony}\r\n                index={i}\r\n                soundFullName={name}\r\n            />\r\n        );\r\n    });\r\n\r\n    pattern.layers.forEach((layer, i) => {\r\n        const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\r\n        layerJsxList.push(\r\n            <_LayerItem key={i} isActive={pattern.layerIndex === i}\r\n                onClick={() => {\r\n                    if (i !== pattern.layerIndex) {\r\n                        dispatcher.backing.switchLayer();\r\n                    }\r\n                }}\r\n            >{labelName}</_LayerItem>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        <_Header>\r\n            {layerJsxList}\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n            <_ModeItem isActive={pattern.mode === 'velocity'}\r\n                onClick={() => {\r\n                    pattern.mode = 'velocity';\r\n                    dispatcher.backing.setState(state);\r\n                }}\r\n            >Velocity</_ModeItem>\r\n            <_ModeItem isActive={pattern.mode === 'pedal'}\r\n                onClick={() => {\r\n                    pattern.mode = 'pedal';\r\n                    dispatcher.backing.setState(state);\r\n                }}\r\n            >Pedal</_ModeItem>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #929292;\r\n`;\r\n\r\nconst _LayerItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #dad600;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997;\r\n`;\r\n\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #4fe419;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternOptions = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        layer.noteDivList = layer.noteDivList.slice();\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, isEnable: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={isEnable} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, true, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const isPermit3ren = ['2/4', '4/4', '4/3'].includes(chordInfo.init.beatSignature);\r\n    const isPermitDot = BackingUtil.isPermitDot(cur);\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot,\r\n            isPermitDot,\r\n            () => {\r\n                cur.isDot = !cur.isDot;\r\n                update();\r\n            })}\r\n        {createItem('1/3', cur.div3 === 1,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 1) cur.div3 = 0;\r\n                else cur.div3 = 1;\r\n                update();\r\n            })}\r\n        {createItem('2/3', cur.div3 === 2,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 2) cur.div3 = 0;\r\n                else cur.div3 = 2;\r\n                update();\r\n            })}\r\n    </_WrapLen>;\r\n\r\n    /** テーブルの行 */\r\n    const tableRecord = layer.table[channelIndex];\r\n    const curCell = pattern.channelIndex === -1 ? null :\r\n        tableRecord[pattern.lenIndex];\r\n\r\n    const isEnableTai = () => {\r\n        if(tableRecord == null) return false;\r\n\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 's') return cell;\r\n        });\r\n        const hasStaccato = search != undefined;\r\n        let isExistNext = false;\r\n        if(pattern.lenIndex < tableRecord.length - 1 && tableRecord[pattern.lenIndex + 1] != null) {\r\n            isExistNext = true;\r\n        }\r\n        return !hasStaccato && isExistNext;\r\n    };\r\n\r\n    const isNormalRow = () => {\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 't') return cell;\r\n        });\r\n        return search == undefined;\r\n    };\r\n\r\n    const setRowStaccato = (isSet: boolean) => {\r\n        layer.table.forEach((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null) {\r\n                cell.signal = isSet ? 's' : 'n';\r\n            }\r\n        });\r\n    }\r\n\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', curCell == null,\r\n            true,\r\n            () => {\r\n                tableRecord[pattern.lenIndex] = null;\r\n                update();\r\n            })}\r\n        {createItem('□', curCell != null && curCell.signal === 'n',\r\n            true,\r\n            () => {\r\n                if (curCell != null) {\r\n                    if(curCell.signal === 's') {\r\n                        setRowStaccato(false);\r\n                    } else {\r\n                        curCell.signal = 'n';\r\n                    }\r\n                } else {\r\n                    tableRecord[pattern.lenIndex] = { signal: 'n', timing: 0, velAdj: 0 };\r\n                }\r\n                update();\r\n            })}\r\n        {createItem('・', curCell != null && curCell.signal === 's',\r\n            curCell != null && isNormalRow(),\r\n            () => {\r\n                setRowStaccato(true);\r\n                update();\r\n            })}\r\n        {createItem('⁀', curCell != null && curCell.signal === 't',\r\n            isEnableTai(),\r\n            () => {\r\n                const status = curCell as BackingState.NoteStatus;\r\n                status.signal = 't'\r\n                update();\r\n            })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternOptions;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternOptions from \"./patternOptions\";\r\n\r\n/**\r\n * バッキングエディタ画面のパターン部分\r\n * @returns コンポーネント\r\n */\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    /**\r\n     * USEスイッチ押下時の処理\r\n     */\r\n    const useSwitchAction = () => {\r\n        if (!isUsePattern) {\r\n            const table = state.voicingTable as boolean[][];\r\n            const voicingStructs = BackingUtil.buildChannels(table);\r\n            const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n            state.pattern = {\r\n                layerIndex: 0,\r\n                lenIndex: 0,\r\n                channelIndex: -1,\r\n                channels,\r\n                isUsePedal: false,\r\n                mode: \"velocity\",\r\n                pedalActs: [null],\r\n                layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n            } as BackingState.Pattern;\r\n            update();\r\n        } else {\r\n            state.pattern = null;\r\n            update();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* ヘッダー部分（パターン利用スイッチ） */}\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button\r\n                        isActive={isUsePattern}\r\n                        onClick={useSwitchAction}\r\n                    >Use</_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternOptions /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #e00000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #ff0000;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\n/**\r\n * ボイシングを定義するテーブルのコンポーネント\r\n * @returns コンポーネント\r\n */\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const table = state.voicingTable;\r\n    const pattern = state.pattern;\r\n    // 選択可能なチャンネル数\r\n    const channelLimitNum = pattern == null ? BackingUtil.OCTAVE_NUM * BackingUtil.STRUCT_NUM : pattern.channels.length;\r\n\r\n    // return useMemo(() => {\r\n\r\n    const chordInfo = state.chordInfo;\r\n    const structList = chordInfo.structList;\r\n\r\n    const rowJsxList: JSX.Element[] = [];\r\n\r\n    /** 選択数 */\r\n    let selectCount = 0;\r\n    // オクターブ（テーブル横）のループ\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const cellJsxList: JSX.Element[] = [];\r\n        // 構成音（テーブル縦）のループ\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = structList.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n            if (isSelected) {\r\n                selectCount++;\r\n            }\r\n\r\n            /** セルに表示する音程 */\r\n            const getSoundFullName = (): string => {\r\n                if (!isEnable) return '';\r\n                // const relation = symbol.structs[j];\r\n                // const interval = TheoryUtil.IntervalRelationProps[relation];\r\n                // const structIndex = (chordRootIndex + interval) % 12;\r\n                const sound = structList[j];\r\n                const octave = i + sound.adjustOctave;\r\n\r\n                const key12List = !sound.isFlat ?\r\n                    TheoryUtil.KEY12_SHARP_LIST :\r\n                    TheoryUtil.KEY12_FLAT_LIST\r\n                    ;\r\n                return `${key12List[sound.soundIndex]}${octave}`;\r\n            }\r\n\r\n            const name = getSoundFullName();\r\n            cellJsxList.push(\r\n                <_Cell key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    isOver={isSelected && selectCount > channelLimitNum}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: BackingState.ChannelParam[] = BackingUtil.buildChannels(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                        dispatcher.backing.updateErrorState();\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.harmony;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_Cell>\r\n            );\r\n        }\r\n        rowJsxList.push(\r\n            <_TableRow key={i}>\r\n                {cellJsxList}\r\n            </_TableRow>\r\n        );\r\n    }\r\n\r\n    /** 構成音リストのJSX */\r\n    const structJsxList = structList.map((sound, i) => {\r\n        const key12List = !sound.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\r\n\r\n        /** 表示する構成音の関係性 */\r\n        const getStructName = (): string => {\r\n            if (sound.relation == null) {\r\n                // オンコードの場合\r\n                return 'On';\r\n            } else if (sound.relation === 'p1') {\r\n                // ルート音の場合\r\n                return 'Root';\r\n            }\r\n            return sound.relation;\r\n        }\r\n        return (\r\n            <_StructItem key={i}\r\n                isOnChord={sound.relation == null}\r\n            >{getStructName()} [{key12List[sound.soundIndex]}]</_StructItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* コードの基本情報 */}\r\n            <_InfoDiv>\r\n                <_InfoItem>\r\n                    <_Label>Chord</_Label>\r\n                    <_Value>{chordInfo.chordFullName}</_Value>\r\n                </_InfoItem>\r\n                <_InfoItem>\r\n                    <_Label>Type</_Label>\r\n                    {/* <_Value>{symbol.attr}</_Value> */}\r\n                    <_Value>{chordInfo.symbolAttr}</_Value>\r\n                </_InfoItem>\r\n            </_InfoDiv>\r\n            <_EditorDiv>\r\n                {/* 構成音の情報 */}\r\n                <_StructDiv>\r\n                    {structJsxList}\r\n                </_StructDiv>\r\n                {/* ボイシングのテーブル */}\r\n                <_TableDiv>{rowJsxList}</_TableDiv>\r\n            </_EditorDiv>\r\n        </_Wrap>\r\n    );\r\n    // }, [table, channelLimitNum]);\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _InfoItem = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #89dada; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 8px);\r\n    width: 80px;\r\n    background-color: #69bcdd;\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #026c86;\r\n    border: 1px solid #303030;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 6px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #cccccc; */\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst _EditorDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _StructDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _StructItem = styled.div<{\r\n    isOnChord: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    color: white;\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    ${props => !props.isOnChord ? '' : css`\r\n        /* color: #e00000; */\r\n        background: linear-gradient(to bottom, #104f8a, #7699db, #104f8a);\r\n    `}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _TableDiv = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _TableRow = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Cell = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n    isOver: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    border: 1px solid #215e53;\r\n    border-radius: 4px;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #e5e747;\r\n    `}\r\n    ${props => !props.isOver ? '' : css`\r\n        background-color: #c40000;\r\n        color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #b9bb3f;\r\n        `}\r\n        ${props => !props.isOver ? '' : css`\r\n            background-color: #bb3f3f;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\n/**\r\n * バッキングエディタ画面\r\n * @returns コンポーネント\r\n */\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    useEffect(()=> {\r\n        console.log('backing start');\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_PrevireBrind isUse={state.isPreview} />\r\n            {/* ボイシングエディタ部分 */}\r\n            <VoicingChooser />\r\n            {/* パターンエディタ部分 */}\r\n            <PatternFrame />\r\n            {/* フッター部分 */}\r\n            <_FooterDiv>\r\n                {/* プレビュー再生 */}\r\n                <_Button isEnable={!state.hasError} onClick={() => {\r\n\r\n                    if (!state.isPreview) {\r\n                        dispatcher.backing.testBacking();\r\n                    } else {\r\n                        BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                    }\r\n                }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\r\n                {/* 編集を取り消しして閉じる */}\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Cancel</_Button>\r\n                {/* 編集を反映して閉じる */}\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.mappingEditorToScore();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/score/scoreData\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const cur = chordList[focusIndex];\r\n    const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={isBackingEnable}\r\n                onClick={() => {\r\n                    if (state.hideMenu === 'none') {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    } else if (state.hideMenu === 'backing') {\r\n                        dispatcher.backing.closeBackingEditor();\r\n                    }\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 7;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 8;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmClipboard = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    return (\r\n        <_Wrap>\r\n            <_Label>clipboard</_Label>\r\n            <_TypeDiv>\r\n                <_ModeItem isActive={state.cloneBacking != null}>Backing</_ModeItem>\r\n                <_ModeItem isActive={state.copiedElementList != null}>Elements</_ModeItem>\r\n            </_TypeDiv>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default HarmClipboard;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _TypeDiv = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #a8dbb3;\r\n    `}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #8f8f8f;\r\n    border-radius: 2px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst MEMORI_WIDTH = 12;\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        list.push(<_Margin key={list.length} />);\r\n        state.measureCacheList.forEach((cache) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {cache.barCount !== -1 ? <_Bar>{cache.barCount}</_Bar> : ''}\r\n                    {/* {<_Bar>{i}</_Bar>} */}\r\n                </_Memori>\r\n            );\r\n        });\r\n        list.push(<_Margin key={list.length} />);\r\n        return list;\r\n    }, [state.beatCacheList]);\r\n\r\n    const [beatJsxList, minuteJsxList] = useMemo(() => {\r\n        const beatJsxList: JSX.Element[] = [];\r\n        const minuteJsxList: JSX.Element[] = [];\r\n\r\n        const isChordFocus = dataList[focusIndex].type === 'chord';\r\n        const curChordIndex = cacheList[focusIndex].chordIndex;\r\n        // list.push(<_Start key={list.length}/>);\r\n        dataList.forEach((data, i) => {\r\n\r\n            const cache = state.elementCacheList[i];\r\n            if (data.type === 'chord' && Math.abs(cache.chordIndex - curChordIndex) <= 5) {\r\n\r\n                const detail = data.detail as DetailChord;\r\n                const sustain = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                let label = '';\r\n                let type: ItemType = 'ather';\r\n                if (!isChordFocus) {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                } else {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'cur';\r\n                        type = 'cur';\r\n                    } else if (cache.chordIndex === curChordIndex - 1) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                }\r\n\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatMemori = detail.beatLen * beatProps.beatMemoriCount;\r\n                const posMemori = 16 + cache.curTotalMemori;\r\n                beatJsxList.push(\r\n                    <_SustainItem key={beatJsxList.length}\r\n                        type={type}\r\n                        pos={posMemori} sustain={beatMemori + minute}\r\n                    >{label}</_SustainItem>\r\n                );\r\n                minuteJsxList.push(\r\n                    <_BeatItem key={beatJsxList.length}\r\n                        isActive={type === 'cur'}\r\n                        pos={posMemori + detail.minute.head} sustain={beatMemori}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        // list.push(<_Start key={list.length}/>);\r\n        return [beatJsxList, minuteJsxList];\r\n    }, [dataList.length, focusIndex, state.beatCacheList]);\r\n\r\n    const scrollPos = cacheList[focusIndex].curTotalMemori * MEMORI_WIDTH;\r\n    return (\r\n        <_Wrap>\r\n            <_ScrollFrame pos={scrollPos}>\r\n                <_Blocks>\r\n                    <_Beat>\r\n                        {beatJsxList}\r\n                    </_Beat>\r\n                    <_Minute>\r\n                        {minuteJsxList}\r\n                    </_Minute>\r\n                </_Blocks>\r\n                <_Measure>\r\n                    {memoriJsxList}\r\n                </_Measure>\r\n            </_ScrollFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _ScrollFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => -props.pos}px;\r\n    position: absolute;\r\n    height: 100%;\r\n    /* width: 100px;\r\n    background-color: #000; */\r\n    transition: left 0.5s;\r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n`;\r\n\r\ntype ItemType = 'cur' | 'prev' | 'next' | 'ather';\r\nconst _SustainItem = styled.div<{\r\n    pos: number;\r\n    sustain: number;\r\n    type: ItemType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(136, 163, 133);\r\n    ${props => {\r\n        switch (props.type) {\r\n            case 'cur': return css`\r\n                background-color: rgb(218, 107, 134);\r\n                /* color: #ffe551; */\r\n            `;\r\n            case 'prev': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 177, 221);\r\n            `;\r\n            case 'next': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 221, 171);\r\n            `;\r\n            case 'ather': return css`\r\n                background-color: rgb(192, 192, 192);\r\n            `;\r\n        }\r\n    }}\r\n    border-left: solid 1px #000;\r\n    border-top: solid 1px #000;\r\n    border-bottom: solid 1px #000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _BeatItem = styled.div<{\r\n    isActive: boolean;\r\n    pos: number;\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(224, 224, 224);\r\n    border-left: solid 1px #000;\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: rgb(233, 180, 228); */\r\n        /* color: #ffe551; */\r\n    `}\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Margin = styled.div`\r\n    display: inline-block;\r\n    width: ${MEMORI_WIDTH * 16}px;\r\n    height: 100%;\r\n    background-color: #d9ebe7;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${MEMORI_WIDTH}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection } from \"../../../../redux/store/score/scoreData\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport HarmSideForm from \"./side/harmSideForm\";\r\nimport { Timeline } from \"tone\";\r\nimport StructViewer from \"./info/structViewer\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport HarmClipboard from \"./initial/harmClipboard\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\n\r\n/**\r\n * ハーモナイズタブ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const state = store.scoreState;\r\n\r\n    const isMelody = store.scoreState.isMelody;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, harmonize: () => {\r\n                dispatcher.system.setInvalidate({\r\n                    ...store.invalidate, harmoniizeInvalidate: {}\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isMelody) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isMelody]);\r\n\r\n\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const element = store.scoreData.chordList[state.focusIndex];\r\n    \r\n    const timelineJsx = state.elementCacheList.length === 0 ? <></> : <HarmMeasure />;\r\n\r\n    let structViewerJsx = <></>;\r\n    if (state.elementCacheList.length > 0) {\r\n        const scoreCache = state.chordCacheList[cache.chordBlockNo];\r\n        const structList = element.type === 'chord' ? scoreCache.structList : [];\r\n        structViewerJsx = <StructViewer cache={cache} structList={structList} />;\r\n    }\r\n\r\n    /** サイドフォームの活性状態 */\r\n    const sideFormEnable = !state.isPreview && state.hideMenu === 'none';\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_SectionsDiv isEnable={sideFormEnable}><HarmSections /></_SectionsDiv>\r\n            <_Left>\r\n                <_Head isEnable={!state.isPreview}>\r\n                    <HarmClipboard />\r\n                </_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main>\r\n                        <HarmNote />\r\n                    </_Main>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP>{timelineJsx}</_TIMELINE_WRAP>\r\n                    <_INFO_WRAP>{structViewerJsx}</_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right isEnable={sideFormEnable}>\r\n                <HarmSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _SectionsDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH + HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Head = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    position: absolute;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    min-height: 100%;\r\n    vertical-align: top;\r\n    /* overflow: auto; */\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    /* background-color: #ddc2c2; */\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7a270028;\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyTimelineMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            mouse.lock = x;\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        // if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            if (mouse.pos !== x) {\r\n                // console.log(`★ move=== x: ${x}, pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n                mouse.pos = x;\r\n                update();\r\n            }\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            // update();\r\n\r\n            const lock = mouse.lock + refs.measure.scrollLeft;\r\n            const pos = mouse.pos + refs.measure.scrollLeft;\r\n            const notesList = store.scoreData.notesList;\r\n            let start = -1;\r\n            let end = -1;\r\n            for (let i = 0; i < notesList.length; i++) {\r\n                const notes = notesList[i];\r\n                const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                const [head, tail] = lock < pos ? [lock, pos] : [pos, lock];\r\n                if (head <= left && tail >= right) {\r\n                    if (start === -1) start = i;\r\n                } else {\r\n                    if (start !== -1) {\r\n                        end = i - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            if (start !== -1 && end === -1) {\r\n                end = notesList.length - 1;\r\n            }\r\n            state.focusIndex = start;\r\n            state.destIndex = end;\r\n            mouse.lock = -1;\r\n            // console.log(`★ up=== focus: ${state.focusIndex}, dist: ${state.distIndex}`);\r\n            dispatcher.melody.setState(state);\r\n            // const [head, tail] = mouse.lock < x ? [mouse.lock, x] : [x, mouse.lock];\r\n            // const width = tail - head;\r\n            // if (width > 5) {\r\n            //     mouse.width = width;\r\n            //     mouse.lock = -1;\r\n            //     mouse.pos = head;\r\n            //     update();\r\n            //     console.log(`★ up=== pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n            // }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyTimelineMouseOperation;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../redux/store/score/scoreCache\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport MelodyUtil, { getNormalizeLenFromNotes } from \"../../../../utils/melodyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimelineMouseOperation from \"./util/melodyTimelineMouseOperation\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n    update: () => void;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n    const update = props.update;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        state.measureCacheList.forEach(cache => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            // 表示する小節数\r\n            const barCount = cache.barCount;\r\n\r\n            jsxList.push(\r\n                <_Memori\r\n                    key={jsxList.length}\r\n                    beatWidth={beatWidth}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {barCount !== -1 ? <_Bar>{barCount}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [state.beatCacheList, barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        if (state.elementCacheList.length === 0) {\r\n            return jsxList;\r\n        }\r\n        let left = 0;\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                // console.log(state.elementCacheList.length);\r\n                const detail = element.detail as DetailChord;\r\n                const cache = state.elementCacheList[i];\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minuteLen = minute * 0.25;\r\n                const adjustRate = beatProps.beatMemoriCount / 4;\r\n                const width = beatWidth * (detail.beatLen * adjustRate + minuteLen);\r\n\r\n                if (chordRef.current != null) {\r\n                    const scroll = chordRef.current.scrollLeft;\r\n                    if (left + width - scroll >= 0 ||\r\n                        left - scroll <= chordRef.current.clientWidth) {\r\n                        const symbolNmae = TheoryUtil.getSymbolFromKey(detail.symbolKey)?.name;\r\n                        const degreeName = detail.root == null ? '-' :\r\n                            TheoryUtil.getDegreeRoot(detail.root) + symbolNmae;\r\n                        const chordName = detail.root == null ? '-' :\r\n                            TheoryUtil.getRootName(detail.root, init.keyIndex) + symbolNmae;\r\n                        jsxList.push(\r\n                            <_ChordItem key={jsxList.length}\r\n                                left={left}\r\n                                width={width}\r\n                                isActive={element == curChord}\r\n                                onClick={() => {\r\n                                    state.isMelody = false;\r\n                                    state.focusIndex = i;\r\n                                    dispatcher.score.setScoreState(state);\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                                }}\r\n                            >\r\n                                <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                            </_ChordItem>\r\n                        );\r\n                    }\r\n                }\r\n                left += width;\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_MeasureWrap ref={measureRef}>\r\n            <_MeasureInner\r\n                onMouseDown={e => MelodyTimelineMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseMove={e => MelodyTimelineMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseUp={e => MelodyTimelineMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseLeave={() => {\r\n                    const mouse = store.melodyState.timelineMouse;\r\n                    mouse.pos = -1;\r\n                    mouse.lock = -1;\r\n                    update();\r\n                }}\r\n            >\r\n                {measureJsxList}\r\n                <_MousePos\r\n                    left={mouseMeasurePos * beatWidth * rate}\r\n                    width={beatWidth * rate}\r\n                />\r\n            </_MeasureInner>\r\n        </_MeasureWrap>\r\n    </>);\r\n}\r\n\r\nconst getExtendMeasure = (measureList: ScoreCache.Measure[]): ScoreCache.Measure[] => {\r\n    const list:ScoreCache.Measure[] = [];\r\n\r\n    return list;\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _MeasureWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _MeasureInner = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* width: 100%; */\r\n    left: 0;\r\n    top: 0;\r\n    width: 10000px;\r\n    height: 100%;\r\n    &:hover {\r\n        background-color: #ff00b347;\r\n    }\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.left}px;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    pointer-events: none;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.beatWidth / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + TheoryUtil.IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #8f8f8f;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #adadad;\r\n    ${props => !props.isStruct ? '' : css`background-color: #ce6565;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #3b3b3b;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/score/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                state.isPreview = true;\r\n                dispatcher.melody.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.melody.setInstrument(soundFontPlayer);\r\n                    }).then(() => {\r\n                        state.isPreview = false;\r\n                        dispatcher.melody.setState(state);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #cacacada;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f7f7f7da;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e4e4e4da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #f7f7f7da;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'32'} isDisable={false} isActive={state.quantize === 8} callback={() => {\r\n                    state.quantize = 8;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={![1, 2, 3, 6].includes(state.quantize)} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                        dispatcher.melody.setState(state);\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                        dispatcher.melody.setState(state);\r\n                    }\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                {/* <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} /> */}\r\n                {/* <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} /> */}\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 9 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, MelodyNotes } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.destIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    const newLen = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.len) !== getNormalizeLenFromNotes(newLen)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.len = newLen;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    const newPos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.pos) !== getNormalizeLenFromNotes(newPos)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.pos = newPos;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.tableMouse;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                //履歴を作成\r\n                state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.melody.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.melody.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/score/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport MelodyUtil, { } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n\r\n        // 選択しているノーツが1つである場合\r\n        const isSingle = state.focusIndex === state.destIndex;\r\n        const mouse = state.tableMouse;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.melody.copyNotes(); break;\r\n                    case 'v': dispatcher.melody.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.melody.allSelect();\r\n                    }\r\n                        break;\r\n                    case 's': dispatcher.score.saveFile(); break;\r\n                    case 'z': dispatcher.melody.undo(); break;\r\n                    case 'y': dispatcher.melody.redo(); break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.melody.incrementCurPitch(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.melody.incrementCurPitch(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveDestFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveDestFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.melody.incrementCurPitch(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.melody.incrementCurPitch(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(false);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(true);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.melody.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.melody.adjustScrollX(); break;\r\n                case 'e': dispatcher.melody.adjustScrollY(); break;\r\n                case 'z': {\r\n                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.melody.firstNotes();\r\n                }\r\n                    break;\r\n                case '0': {\r\n                    state.quantize = 8;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else if([2, 1].includes(state.quantize)) {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.melody.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.melody.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.melody.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.destIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/score/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport CacheUtil from \"../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const scoreState = store.scoreState;\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n    const [invalidate2, setInvalidate2] = useState<{}>({});\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.tableMouse;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n\r\n    const barCount = 150;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n    const rate = 1 / store.melodyState.quantize;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isMelody;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, melody: update\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    /**\r\n     * 画面上部のメモリJSXリスト\r\n     * 拍子のキャッシュから作成する\r\n     */\r\n    const measureJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        scoreState.measureCacheList.forEach((cache, i) => {\r\n\r\n            list.push(\r\n                <_Scale key={i} isHead={cache.rate === 4} beatWidth={state.beatWidth} />\r\n            );\r\n        });\r\n        return list;\r\n    }, [scoreState.beatCacheList, barCount]);\r\n\r\n    // const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    /**\r\n     * スケール区間のJSXリスト\r\n     * 背景色のラインを表現\r\n     * 転調でキーが変わる度に追加される\r\n     */\r\n    const scaleDivJsxList = useMemo(() => {\r\n        const divList: JSX.Element[] = [];\r\n        // console.log('**' + scoreState.scaleCacheList.length);\r\n        scoreState.scaleCacheList.forEach((scaleInfo, i) => {\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const scaleJsxList: JSX.Element[] = [];\r\n            for (let j = 0; j < PITCH_MAX; j++) {\r\n                const keyIndex = getKeyIndexFromPitcher(j);\r\n                scaleJsxList.push(\r\n                    <_ScaleLine key={j}\r\n                        isScale={scaleIndexies.includes(keyIndex)}\r\n                        isBase={keyIndex === scaleIndexies[0]}\r\n                    />\r\n                );\r\n            }\r\n\r\n            divList.push(\r\n                <_ScaleList key={i} width={state.beatWidth / 4 * scaleInfo.memoriCnt} isEven={i % 2 === 0}>\r\n                    {scaleJsxList}\r\n                </_ScaleList>\r\n            );\r\n        });\r\n        return divList;\r\n    }, [scoreState.scaleCacheList]);\r\n\r\n    /**\r\n     * 配置するノーツのJSXリスト\r\n     */\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        // let count = 0;\r\n        if (scoreState.scaleCacheList.length === 0) return list;//\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            const normalLeft = getNormalizeLenFromNotes(notes.pos);\r\n            const normalWidth = getNormalizeLenFromNotes(notes.len);\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const notesLeft = normalLeft * state.beatWidth;\r\n                const notesRight = notesLeft + normalWidth * state.beatWidth;\r\n                if (\r\n                    // !state.isPreview &&\r\n                    (notesRight - scroll < 0 || notesLeft - scroll > tableRef.current.clientWidth)\r\n                ) {\r\n                    continue;\r\n                }\r\n            }\r\n            const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n            // count++;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n\r\n            // クオンタイズ\r\n            const unitPos = getMinimumLenUnit(notes.pos);\r\n            const unitLen = getMinimumLenUnit(notes.len);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={normalLeft * state.beatWidth}\r\n                    width={normalWidth * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.melody.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\r\n                        isScale={isScale}\r\n                        isActive={isActive}\r\n                        isPreview={state.isPreview}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // console.log('cnt: ' + count);\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.destIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move]);\r\n\r\n    /**\r\n     * タイムラインを横にスクロールした際の処理\r\n     */\r\n    const sideScrollAction = () => {\r\n        const refs = store.refs.melody;\r\n\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const scrollLeft = refs.table.scrollLeft;\r\n            const scrollTop = refs.table.scrollTop;\r\n            refs.measure.scrollTo({ left: scrollLeft });\r\n            refs.chord.scrollTo({ left: scrollLeft });\r\n            refs.pitch.scrollTo({ top: scrollTop });\r\n        }\r\n        update();\r\n    };\r\n\r\n    /**\r\n     * マウスポインタがエリア外に出た際の処理\r\n     */\r\n    const mouseLeaveAction = () => {\r\n        console.log('leave!');\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n        update();\r\n    };\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header isEnable={!state.isPreview}>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                {(() => {\r\n                    const mouse = state.timelineMouse;\r\n                    if (mouse.lock === -1) {\r\n                        return mouse.pos === -1 ? <></> :\r\n                            <_MouseLinePos left={mouse.pos} />\r\n                    } else {\r\n                        const [head, tail] = mouse.lock < mouse.pos ? [mouse.lock, mouse.pos] : [mouse.pos, mouse.lock];\r\n                        const width = tail - head;\r\n                        return <_MouseRange left={head} width={width} />\r\n                    }\r\n                })()}\r\n                {\r\n\r\n                }\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                        update={() => setInvalidate2({})}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef} onScroll={sideScrollAction} >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleDivJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseLeave={mouseLeaveAction}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _MouseLine = css`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    width: 3px;\r\n`;\r\nconst _MouseLinePos = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #15ff00;\r\n`;\r\nconst _MouseLineLock = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #fbff00;\r\n`;\r\n\r\nconst _MouseRange = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    width: ${props => props.width}px;\r\n    background-color: #ffffff8b;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #464545;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n    /* background-color: #70ff7058; */\r\n`;\r\n\r\nconst _ScaleList = styled.div<{\r\n    width: number;\r\n    isEven: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    /* pointer-events: none; */\r\n    background-color: #70ff7021;\r\n    ${props => !props.isEven ? '' : css`\r\n        background-color: #708aff20;\r\n    `}\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #2727275a;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #00a6cf52;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `}\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `}\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb0040;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isPreview: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    opacity: 0.5;\r\n    ${props => props.isPreview && !props.isActive ? '' : css`    \r\n       opacity: 1;\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    ${props => !(props.isPreview && props.isActive) ? '' : css`\r\n        box-shadow: 0 0 32px 0 #ffffff92;\r\n    `}\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #7a270028;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport Styles, { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport MelodyUtil, {  } from \"../../../utils/melodyUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    useEffect(() => {\r\n        const info = melody.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.melody.setInstrument(soundFontPlayer);\r\n            });\r\n\r\n        // acoustic_guitar_steel\r\n        //bright_acoustic_piano\r\n        Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\r\n            { gain: 2, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.score.setPiano(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    const switchMode = () => {\r\n        state.isMelody = !state.isMelody;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isMelody ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isMelody ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isMelody ? () => {\r\n\r\n        if (!state.isPreview) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        } else {\r\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    } : () => {\r\n\r\n        if (!melody.isPreview) {\r\n            dispatcher.melody.previewStart();\r\n        } else {\r\n           MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    }\r\n    /** アンサンブルの切替 */\r\n    const toggleEnsamble = !state.isMelody ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.melody.setState(melody);\r\n    }\r\n\r\n    const playJsx = <_SwitchInner isActive={isPreview}>Play</_SwitchInner>;\r\n    const stopJsx = <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner>;\r\n    const ensambleJsx = <_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner>;\r\n    const soloJsx = <_SwitchInner isActive={isSolo}>Solo</_SwitchInner>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header isEnable={state.hideMenu === 'none'}>\r\n                <_Mode isEnable={!isPreview}>\r\n                    <_ModeItem isActive={!state.isMelody} onClick={() => {\r\n                        if (state.isMelody) switchMode();\r\n                    }}>Harmony</_ModeItem>\r\n                    <_ModeItem isActive={state.isMelody} onClick={() => {\r\n                        if (!state.isMelody) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch isEnable={true} onClick={preview}>{playJsx} / {stopJsx}</_Switch>\r\n                    <_Switch isEnable={!state.isPreview} onClick={toggleEnsamble}>{ensambleJsx} / {soloJsx}</_Switch>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    const isPermit = !isPreview && state.hideMenu === 'none';\r\n                    if (isPermit) {\r\n                        switch (e.key) {\r\n                            case 'r': switchMode(); break;\r\n                        }\r\n                    }\r\n                }}>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isMelody} />\r\n                    <MelodyFrame isActive={state.isMelody} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _Mode = styled.div<{\r\n    isEnable: boolean\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #e1e4ca;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    &:hover {\r\n        background-color: #eff3cf\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\nimport PreviewTab from \"./preview/previewTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    // { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    // { name: 'Preview', disable: !isAccept, cont: store.scoreData.chordList.length === 0 ? <></> : <PreviewTab data={store.scoreData} /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? TheoryUtil.DEGREE12_FLAT_LIST : TheoryUtil.DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey) as TheoryUtil.SymbolParams;\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    // sampler.releaseAll();\r\n\r\n                    const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = TheoryUtil.IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        // sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                // sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, isEnable: false, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, isEnable: false, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, isEnable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, isEnable: false, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length >= min && str.length <= max;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import { useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ValidateUtil from \"../../utils/validateUtil\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 400;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n    const [userId, setUserId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passConfirm, setPassConfirm] = useState('');\r\n    const [info, setInfo] = useState('');\r\n\r\n    const isButtonEnable = useMemo(() => {\r\n        return ValidateUtil.checkAll([\r\n            ValidateUtil.checkStringLength(userId, 4, 20),\r\n            ValidateUtil.checkStringLength(password, 4, 20),\r\n            ValidateUtil.checkStringLength(passConfirm, 4, 20),\r\n            \r\n        ]);\r\n    }, [isCreate, userId, password, passConfirm]);\r\n\r\n    /**\r\n     * 入力フォームのJSXを生成する\r\n     * @param title ラベル名\r\n     * @param value 値\r\n     * @param setter セッタの関数\r\n     * @returns JSX\r\n     */\r\n    const createFormJsx = (\r\n        title: string,\r\n        value: string,\r\n        setter: React.Dispatch<React.SetStateAction<string>>\r\n    ): JSX.Element => {\r\n        return (\r\n            <_Record>\r\n                <_Label>{title}</_Label>\r\n                <_TextField value={value} onChange={e => setter(e.target.value)} />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        if (isCreate) {\r\n\r\n            if (password != passConfirm) {\r\n                // setError(true);\r\n                // setMessage(`Confirmation passwords don't match.`);\r\n                // setLoading(false);\r\n                alert(`Confirmation passwords don't match.`);\r\n            } else {\r\n\r\n                (async () => {\r\n                    let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n                    let results = await response.json();\r\n                    console.log(JSON.stringify(results[0].cnt));\r\n                    const isExist = results[0].cnt > 0;\r\n                    if (isExist) {\r\n                        // setError(true);\r\n                        // setMessage('That user id has already been recorded.');\r\n                        alert('That user id has already been recorded.');\r\n                    } else {\r\n                        response = await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(id, pass) VALUES('${userId}', '${password}')`);\r\n                        results = await response.json();\r\n                        // setMessage('');\r\n                        alert('You have successfully created an account!');\r\n                        // setLoginType('login');\r\n                    }\r\n                    // setLoading(false);\r\n                })();\r\n            }\r\n\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {createFormJsx('user id', userId, setUserId)}\r\n            {createFormJsx('password', password, setPassword)}\r\n            {createFormJsx('password *', passConfirm, setPassConfirm)}\r\n            <_InfoDiv>{info}</_InfoDiv>\r\n            <_Footer>\r\n                <_ExecutableButton isEnable={true}>Clear</_ExecutableButton>\r\n                <_ExecutableButton isEnable={isButtonEnable} onClick={enterAction}>Enter</_ExecutableButton>\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #a9c5c7;\r\n    /* border: 1px solid #dadada; */\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #c73e3e75;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #d86262;\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    background-color: #91bdd6;\r\n    width: 100%;\r\n    height: 60px;\r\n    padding: 5px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: #222fa7;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport LoginFrame from \"../login/loginFrame\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton onClick={()=> {\r\n                    store.systemState.dialog = <LoginFrame />;\r\n                    dispatcher.system.setState(store.systemState);\r\n                }}>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useCallback, useEffect, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    const callback = useCallback(dispatcher.system.switchSplashToMain, []);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={callback} /\r\n                    >}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}