{"version":3,"sources":["system/utils/dataUtil.tsx","system/redux/reducer.tsx","system/utils/theoryUtil.tsx","system/utils/backingUtil.tsx","system/utils/cacheUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/utils/instrumentsUtil.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/redux/store/state/dataHistory.tsx","system/contents/dialog/globalDialog.tsx","system/base/design/styles.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/dummyUtil.tsx","system/contents/score/manage/chordProg/progSearcher.tsx","system/contents/score/manage/chordProg/progStyle.tsx","system/contents/score/manage/chordProg/progUtil.tsx","system/contents/score/manage/chordProg/progCustomFrame.tsx","system/contents/score/manage/chordProg/progOutputFrame.tsx","system/contents/score/manage/chordProg/progTemplateFrame.tsx","system/contents/score/manage/chordProg/chordProgDialog.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/tool/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailAlter.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcAlter.tsx","system/contents/score/edit/harmonize/tool/chordEditor.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFromStyles.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/side/sideFormAlter.tsx","system/contents/score/edit/harmonize/side/minuteForm.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/harmSideForm.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/backing/pattern/builder/patternDetail.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternPedal.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternVelocity.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternOptions.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/initial/harmClipboard.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/melody/util/melodyTimelineMouseOperation.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/utils/validateUtil.tsx","system/contents/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_DOMAIN","queryType","sql","fetch","mode","method","headers","Accept","body","JSON","stringify","createQueryRequestInit","val","content","encodeURIComponent","zlib","gzipSync","toString","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","plainData","state","fileHandle","a","createWritable","writable","text","DataUtil","gZip","write","close","getFile","alert","window","showSaveFilePicker","types","accept","then","handle","catch","console","log","ActionType","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","getBeatProps","keyIndex","scale","relation","beatSignature","beatMemoriCount","barBeatCnt","SYMBOL_LIST","beatLen","minute","bpm","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","root","index","isFlat","symbolKey","props","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","baseKeyIndex","TheoryUtil","KEY12_FLAT_LIST","KEY12_SHARP_LIST","ret","find","symbol","undefined","list","forEach","push","rootIndex","map","divCount","Array","fill","table","channels","i","length","j","octave","structIndex","voicingList","struct","editorPattern","channelSize","layers","layer","divs","noteDivList","signals","record","cell","x","y","status","notesList","vels","velocityList","slice","pedals","pedalActs","pedal","divIndex","voicingStructs","size","channel","reverse","scoreLayers","scoreLayer","notes","onIndex","item","interval","baseInfo","backing","pitchIndexList","chordTime","pattern","soundName","Math","floor","playHarmony","adjustRate","pedalRangeList","total","timeList","div","start","normal","rate","isDot","div3","sustain","divTime","pedalInfo","end","ignoreList","ig","timeInfo","timingAdj","timing","startTime","sustainTime","signal","inc","isNext","nextNotes","next","k","notesTail","velAdj","gain","setTimeout","dispatcher","harmony","stop","isPreview","id","clearInterval","setState","getLimitLen","chordInfo","memoriCount","init","head","tail","getUsingLenFromDivs","reduce","prev","cur","len","checkOverlapBackLayer","hasError","limitLen","totalLen","layerIndex","channelIndex","baseLayer","backLayer","getDivRange","left","right","isOverlap","backLeft","backRight","note","includes","BackingUtil","CacheUtil","chordList","detail","elementCacheList","sectionCacheList","beatCacheList","scaleCacheList","tempoCacheList","measureCacheList","totalMinute","sectionNo","sectionBeatSum","pastSecond","curSecond","chordIndex","curMemoriCount","totalBarCount","totalMemoriCount","beatRangeMemoriCount","totalBeat","totalMemoriBarCount","scaleMemoriCount","tempoMemoriCount","addTempoRange","beatRate","beatProps","memoriCnt","element","prevBeat","prevMemoriCount","prevBarCount","prevMinute","fixed","labelName","beatSum","rangeIndexStart","rangeIndexEnd","prevBar","calcSustainMsec","barMemoriCount","dispBarCount","barCount","alterType","modRel","dommVal","keyAdj","tempoRel","tempoDiff","tempoRate","tempoAbs","bar","surplusBeat","curTotalMemori","reffers","score","setScoreState","notesCacheList","duration","pos","curMemori","range","info","posTime","pastLen","last","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","getSortetdNotesLen","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","instrument","soundfontPlayer","play","soundFullName","stopPreview","melody","adjustScrollX","previewHarmony","data","focusIndex","lastFocus","update","firstTime","getTimeInfoFromNotesPos","lenTime","pitch","pitchIndex","destIndex","isSolo","system","setReserveTasks","cacheList","cache","on","getSymbolFromKey","pitchList","getPitchListFromVoicing","playBacking","tableMouse","curChord","MelodyUtil","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","PATTERN_HEADER_HEIGHT","PATTERN_BODY_HEIGHT","NOTES_1BAR_WIDTH","Dispatcher","dispatch","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setInvalidate","saveFile","setPiano","setScoreTabIndex","scoreTabIndex","setKeySwitch","keySwitch","setScoreData","moveElement","sub","distIndex","moveDist","releaseRange","isTail","distHead","distTail","moveSection","curSectionIndex","curSectionInfo","curElementType","flashElement","incrementDegreeRoot","isUp","incrementBeatLen","updateHarmonizeCache","incrementMinuteVal","value","target","incrementMinuteValRelation","nearIndex","addChordElement","curBeatLen","splice","addSectionElement","addAlterElement","removeCurElement","copyElementList","parse","copiedElementList","cloneBacking","pasteElementList","incrementSymbol","setDiatonicChord","chord","DIATONIC_MAJOR_SCALE_LIST","DIATONIC_MINOR_SCALE_LIST","setDefaultBacking","getDefaultBacking","pastBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setInstrument","incrementCurPitch","isUpper","filter","dataHistory","add","scaleIndexList","MAJOR_SCALE_INTERVALS","normalLeft","scaleInfo","getKeyScaleFromNotesPos","scaleIndexies","prevPitchIndex","tempPitchIndex","adjustScrollY","moveFocus","updateCurChord","moveDestFocus","beatWidth","searchedChord","width","addNotes","focus","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","sort","b","posA","posB","undo","history","unshift","redo","openBackingEditor","chordBacking","hideMenu","voicingTable","getInitVoicingTable","patternProps","buildChannels","getChannels","convertEditorLayerFromScore","lenIndex","closeBackingEditor","getInitialLayer","col","isExist","voicing","mappingEditorToScore","editor","getVoicingListFromTable","buildPatternProps","addPatternColumn","lenList","curLen","newLen","column","updateErrorState","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","isPermitDot","getNotes","setNotes","incrementVel","after","deleteColumn","switchLayer","switchMode","testBacking","checkError","this","initialStore","userEnv","keyConfig","up","down","addChord","addSection","addChange","deleteCur","distMode","edit1","edit2","incRoot","decRoot","incBeat","decBeat","colorProps","entryBackground","dialog","isMelody","initialBeat","sustainMode","chordMode","symbolMode","control","minHeadMode","minTailMode","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","timelineMouse","soundfontInfo","scaleMode","resize","move","shift","harmonize","measure","harmoniizeInvalidate","GloballDialog","useContext","GlobalContext","_Blind","onClick","styled","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isEnable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","_Label","ChannelContents","_Contents","CSS_BUTTON_DISABLE","TabbedPane","isDisable","disable","TabLabel","_TabLabel","TabContents","DummyUtil","condition","UNIT_LIST","beat","step","firstChord","secondChord","parseChord","source","args","split","baseBeat","Number","diatonicNo","charAt","option","beatChange","ProgSearcher","ProgStyle","CSS_LABEL_MIDIUM","select","STEP_LIST","getDefaultChord","label","blockList","elementList","block","ProgUtil","ProgCustomFrame","setStep","degreeFilters","setDegreeFilters","secCategory","setSecCategory","secNo","setSecNo","setFocusIndex","stepList","useMemo","getFilteredStepList","stepOptionJsxList","disp","degreeOptionJsxListArray","DEGREE_FILTER_LIST","unitList","search","jsx","dispUnitJsx","beatCycle","chordName","getDegreeRoot","divStr","_Span","isMatch","_ChordName","_ProgItem","progUnitList","progJsxList","SECTION_CATEGORY","SECTION_NO","secCatOptionJsxList","secNoOptionJsxList","degreeChangeAction","e","isEnableSectionForm","_Frame","_TitleLabel","_Combobox","onChange","stepChangeAction","_ListDiv","_ButtonDiv","_ExecutableButton","secNoStr","secName","insertProgUnit","_Record","RECORD_HEIGHT","span","ProgOutputFrame","blockJsxList","isFixed","inner","_FixedItem","_SectionItem","_ChordListDiv","_ChordItem","_ChordNameLabel","_ChordBeatDiv","jsxList","_BeatTip","getBeatTipsJsx","_Block","CSS_LABEL_SMALL","ProgTemplateFrame","templateJsxList","ChordProgDialog","buildMode","setBuildType","getBlankBlockList","outputUnits","setOutputUnits","beatFilter","setBeatFilter","closeAction","beatOptionJsxList","BEAT_DEF_LIST","chordDetail","createSwitchableButton","clickEvent","_SwitchableButton","beatComboboxEnable","distBeatFilter","_Header","getInitialBlockList","_MainDiv","_LeftDiv","_BeatFormDiv","beatChangeAction","_SwitchDiv","getSwitchContJsx","_RightDiv","_Footer","buildScoreData","HEADER_HEIGHT","BEAT_HEIGHT","ManageTab","file","setFile","tabIndex","modified","tempo","section","time","getStringFromDate","Date","lastModified","sectionNum","chordNum","fileInfo","scoreInfo","createLabelRecord","labelValue","_Recored","_ItemnLabel","_ItemnValue","searchLocalFileAction","showOpenFilePicker","fileContents","unZip","_Wrap","_ButtonsDiv","_Button","_Left","_ListInfoDiv","_Right","_DataInfoDiv","_ScoreInfoDiv","DATA_INFO_HEIGHT","SymbolEditor","curSymbol","baseSymbol","derives","getSymbolDerives","parentJsx","curJsx","childrenJsx","_Row","CalcChord","symbolName","chordRoot","getRootName","prevCache","isError","minuteStr","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","barRem","_Len","_Border","ElementDetailAlter","_Type","sign","getDetailInfo","ElementDetailChord","degreeRoot","degreeOn","isDiatonic","getDiatonicDegreeList","_Degree","isSwitch","isSustainMode","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Tip","lenType","valueType","abs","_TipItem","_Error","_Voicing","_Pattern","isCurrent","_Backing","ElementFixedBorder","isStart","ElementDetailInit","_Title","_Value","ElementDetailSection","CalcAlter","getType","prevKey","curKey","curCache","prevTempo","curTempo","curBeat","getDetail","ChordEditor","getChord","createRow","listJsx","rootName","ScoreElement","wrapRef","useRef","bodyRef","isFocus","isRange","isSameSection","wrap","current","elementJson","isInactive","ref","isSelectable","isAdditional","_Head","_CurKey","getDisplayKeyScaleName","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","HarmSections","sections","curSectionNo","_Total","HarmonizeUtil","previewMelody","clearTimeout","edit","common","patternNormalMode","patternDetailMode","test","isEdit","baseVel","tempTiming","tempVelAdj","vel","curNotes","BackingEditorInput","NoteKeyDown","config","isElement","previewCurHarmony","NoteBasicInput","main","NoteKeySwitch","isPress","min","max","_NumberForm","SideFormStyles","SideFormAlter","createAlertTypeItem","createModulateRelationItem","rel","createTempoRelationItem","createBeatItem","donmmItemJsxList","_ParamDiv","_ParamItem","keyAdjItemJsxList","_Group","_CategoryLabel","createNumberForm","currentTarget","valueAsNumber","___CSS_TITLE","___CSS_FORM","JUDGE_INFO_LIST","MinuteForm","rateMinus","ratePlus","isRed","JudgeJsxList","judge","_JudgeItem","setValue","createJudgeItem","isHead","_View","_ViewFrame","isLeft","_Judge","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","ROOT_ALL","isRootActive","isOnActive","MINOR_SCALE_INTERVALS","_RootItem","onContextMenu","symbolItemsJsx","_SymbolItem","createMinuteForm","_Timing","_BeatDiv","_Minute","_RootDiv","_SymbolDiv","SideFormInit","scaleItemJsxList","SCALE_DEF_LIST","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","splitList","_NumberItem","_DirectText","_SelectDiv","_TemplateFrame","_NumberFrame","input","_ItemBase","HarmSideForm","ChordInfo","scaleList","structJsxList","tipJsxList","getIntervalValues","_InfoItem","curIndex","isScale","isUse","isBlack","_Struct","WIDTH","PatternDetail","_DelayDiv","_TimingValue","_VelocityDiv","_VelFrame","_VelItem","VEL_DIV_WIDTH","PatternLength","itemJsxList","PatternPedal","_Column","PatternTable","channelCount","curLayer","layerJsxList","jsxLsit","notesJsxLsit","setNotesStatus","viewSignal","prevCell","_Notes","isBack","_State","isEven","isFront","_Layer","zIndex","PatternVelocity","PatternBuilder","useTotalLen","isLenOverError","memoriWidth","memoriJsxList","bean","thickness","height","color","_Memori","_LengthDiv","_MeasureDiv","_MemoriList","_ChordLenLine","_OverCover","_Body","ChannelItem","_Option","CHANNEL_MAX","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","soundIndex","_LayerItem","_ModeItem","proops","PatternOptions","createItem","callback","createRateItem","String","setRate","sizeJsxList","_ListItem","isPermit3ren","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","tableRecord","curCell","setRowStaccato","isSet","editModeJsx","_WrapEdit","hasStaccato","isExistNext","isEnableTai","PatternFrame","isUsePattern","_UseSwitch","isUsePedal","_Main","_StatusDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","channelLimitNum","OCTAVE_NUM","STRUCT_NUM","chordRootIndex","chordFullName","chordOnIndex","onName","soundInfoList","adjustOctave","isFlatFromRelation","sameIndex","some","sound","onChordIndex","tempList","rowJsxList","selectCount","cellJsxList","isSelected","key12List","getSoundFullName","_Cell","isOver","soundfont","_TableRow","_StructItem","isOnChord","_EditorDiv","_StructDiv","_TableDiv","_InfoDiv","TIP_WIDTH","BackingEditorFrame","_PrevireBrind","_FooterDiv","HarmHideFrame","isOpen","isBackingEnable","HarmClipboard","_TypeDiv","MEMORI_WIDTH","HarmMeasure","dataList","_Margin","_Bar","beatJsxList","minuteJsxList","isChordFocus","curChordIndex","beatMemori","posMemori","_SustainItem","scrollPos","_ScrollFrame","_Blocks","_Measure","HarmonizeTab","isTune","harmMeasure","onKeyDown","onKeyUp","_SECTIONS","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_RIGHT_WIDTH","HARMONIZE_HEAD_WIDTH","MelodyTimelineMouseOperation","mouseDownEvent","timelineLength","button","rect","getBoundingClientRect","clientX","mouseMoveEvent","mouse","mouseUpEvent","scrollLeft","MelodyTimeline","measureRef","chordRef","barLength","measureJsxList","chordJsxList","minuteLen","scroll","clientWidth","symbolNmae","degreeName","_DegreeName","_ChordWrap","_MeasureWrap","_MeasureInner","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_MousePos","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","Soundfont","AudioContext","release","soundFontPlayer","QuantizeSwitch","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","getNextLeft","clientY","scrollTop","curPos","posX","lenWidth","newPos","prevFocus","MelodyInput","keyDownEvent","isSingle","keySwitchEvent","MelodyFrame","tableRef","pitchRef","setInvalidate2","scaleDivJsxList","divList","scaleJsxList","_ScaleLine","isBase","_ScaleList","notesJsxList","normalWidth","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_MouseLinePos","_MouseRange","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","_Test","editAnimation","keyframes","_MouseLine","TUNE_TIMELINE_WIDTH","_Scale","EditTab","preview","toggleEnsamble","_Mode","_Buttons","_Switch","_SwitchInner","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","items","degree","degreeRootName","chordRootName","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","remove","_NowLoading","_Copylight","fadeIn","ValidateUtil","str","conditions","LoginFrame","isCreate","setCreate","userId","setUserId","password","setPassword","passConfirm","setPassConfirm","isButtonEnable","checkAll","checkStringLength","createFormJsx","title","setter","_TextField","_TypeSwitch","sendQueryRequestToAPI","response","json","results","cnt","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","useCallback","Provider","App","document","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d75c9b86.chunk.js","sourcesContent":["import zlib from \"zlib\";\r\nimport { ScoreState } from \"../redux/store/score/scoreState\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const API_DOMAIN = 'http://10.114.240.172:5000';\r\n    export const API_DOMAIN = 'http://localhost:5000';\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         // sampleテーブルから全カラムのデータをid順に取得\r\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\r\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\r\n\r\n    //         if (error) {\r\n    //             throw error;\r\n    //         }\r\n    //         if (data) {\r\n    //             console.log(data);\r\n    //         }\r\n    //     } catch (error: any) {\r\n    //         alert(error.message);\r\n    //     } finally {\r\n\r\n    //     }\r\n    // };\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(API_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    export const saveFile = (plainData: string, state: ScoreState) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.lcrs'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        const fileHandle = state.fileHandle;\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                state.fileHandle = fileHandle;\r\n                // this.score.setScoreState({ ...state });\r\n                const file = await fileHandle.getFile();\r\n                alert('saved successfully!');\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = handle;\r\n                    // this.score.setScoreState({ ...state });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataUtil;","import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n    SET_INVALIDATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n        case ActionType.SET_INVALIDATE:\r\n            store.invalidate = payload.invalidate;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature, Scale } from \"../redux/store/score/scoreData\";\r\n\r\nnamespace TheoryUtil {\r\n\r\n    export const MAJOR_SCALE_INTERVALS = [0, 2, 4, 5, 7, 9, 11];\r\n    export const MINOR_SCALE_INTERVALS = [0, 2, 3, 5, 7, 8, 10];\r\n\r\n    export const KEY12_FLAT_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n    export const KEY12_SHARP_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n    ];\r\n\r\n    export const DEGREE12_FLAT_LIST = [\r\n        'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n    ];\r\n    // export const DEGREE12_FLAT_LIST = [\r\n    //     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n    // ];\r\n    export const DEGREE12_SHARP_LIST = [\r\n        'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n    ];\r\n\r\n    export const KEY12_MAJOR_SCALE_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const KEY12_MINOR_SCALE_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const getDisplayKeyScaleName = (keyIndex: number, scale: Scale) => {\r\n        return scale === 'major' ? KEY12_MAJOR_SCALE_LIST[keyIndex] :\r\n            KEY12_MINOR_SCALE_LIST[keyIndex] + 'm';\r\n    }\r\n\r\n    export const SCALE_DEF_LIST = ['major', 'minor'] as const;\r\n    export const BEAT_DEF_LIST = ['2/4', '4/4', '3/4', '6/8', '9/8', '12/8'] as const;\r\n\r\n    export type IntervalRelation =\r\n        'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n        'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n        'd7' | 'm7' | 'M7'\r\n        ;\r\n\r\n    export const isFlatFromRelation = (relation: IntervalRelation) => {\r\n        // 以下の場合#（シャープ）とする\r\n        switch (relation) {\r\n            case 'M2':\r\n            case 'M3':\r\n            case 'M6':\r\n            case 'M7':\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    export type SymbolAttribute =\r\n        'triad' |\r\n        'seventh' |\r\n        'add9th'\r\n        ;\r\n\r\n    export type SymbolParams = {\r\n        key: SymbolKey;\r\n        name: string;\r\n        base: null | SymbolKey;\r\n        attr?: SymbolAttribute;\r\n        structs: IntervalRelation[];\r\n    }\r\n\r\n    export type BeatProps = {\r\n        // mol: number;\r\n        // den: number;\r\n        // 1拍のメモリ（16分音符）の数\r\n        beatMemoriCount: number;\r\n        // 1小節の拍数\r\n        barBeatCnt: number;\r\n    }\r\n\r\n    /**\r\n     * 拍子より拍情報を取得する\r\n     * @param beatSignature 拍子\r\n     * @returns 拍情報\r\n     */\r\n    export const getBeatProps = (beatSignature: BeatSignature): BeatProps => {\r\n        switch (beatSignature) {\r\n            case '4/4': return { beatMemoriCount: 4, barBeatCnt: 4 };\r\n            case '2/4': return { beatMemoriCount: 4, barBeatCnt: 2 };\r\n            case '3/4': return { beatMemoriCount: 4, barBeatCnt: 3 };\r\n            case '6/8': return { beatMemoriCount: 6, barBeatCnt: 2 };\r\n            case '9/8': return { beatMemoriCount: 6, barBeatCnt: 3 };\r\n            case '12/8': return { beatMemoriCount: 6, barBeatCnt: 4 };\r\n        };\r\n        // return {} as BeatProps;\r\n    }\r\n\r\n    /**\r\n     * 拍の長さからコードの持続時間をミリ秒で算出する\r\n     * @param beatLen \r\n     * @param minute \r\n     * @param bpm \r\n     * @param beatSignature \r\n     * @returns \r\n     */\r\n    export const calcSustainMsec = (beatLen: number, minute: number, bpm: number, beatSignature: BeatSignature): number => {\r\n        const beatMemoriCount = getBeatProps(beatSignature).beatMemoriCount;\r\n        const minuteLen = minute * (1 / beatMemoriCount);\r\n        return 60000 / bpm * (beatLen + minuteLen);\r\n    }\r\n\r\n\r\n    export type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\n    export type SymbolKey =\r\n        'major' |\r\n        'minor' |\r\n        'suspend4th' |\r\n        'diminish' |\r\n        'augument' |\r\n        'major-maj7th' |\r\n        'major-min7th' |\r\n        'minor-7th' |\r\n        'minor-maj7th' |\r\n        'sus4-7th' |\r\n        'diminish-7th' |\r\n        'augument-7th' |\r\n        'major-add9th' |\r\n        'minor-add9th' |\r\n        'sixth-9th' |\r\n        'minor-minus5' |\r\n        'minor7-minus5' |\r\n        'major-maj9th' |\r\n        'major-9th'\r\n        ;\r\n\r\n    export type DegreeProps = {\r\n        index: number;\r\n        isFlat: boolean;\r\n    };\r\n\r\n    export type ChordProps = {\r\n        root: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    };\r\n\r\n    export const SYMBOL_LIST: readonly SymbolParams[] = [\r\n        {\r\n            key: 'major', name: '',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor', name: 'm',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'suspend4th', name: 'sus4',\r\n            base: null,\r\n            structs: ['p1', 'p4', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish', name: 'dim',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish-7th', name: 'dim7',\r\n            base: 'diminish',\r\n            structs: ['p1', 'm3', 'd5', 'd7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'augument', name: 'aug',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'a5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'augument-7th', name: 'aug7',\r\n            base: 'augument',\r\n            structs: ['p1', 'M3', 'a5', 'm7']\r\n        },\r\n        {\r\n            key: 'minor-minus5', name: 'm(-5)',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor7-minus5', name: 'm7(-5)',\r\n            base: 'minor-minus5',\r\n            structs: ['p1', 'm3', 'd5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-maj7th', name: 'maj7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-min7th', name: '7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'minor-7th', name: 'm7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'sus4-7th', name: '7sus4',\r\n            base: 'suspend4th',\r\n            structs: ['p1', 'p4', 'p5']\r\n        },\r\n        {\r\n            key: 'minor-maj7th', name: 'mmaj7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-add9th', name: 'add9',\r\n            base: 'major',\r\n            structs: ['p1', 'M2', 'M3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'minor-add9th', name: 'madd9',\r\n            base: 'minor',\r\n            structs: ['p1', 'M2', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-maj9th', name: 'maj9',\r\n            base: 'major-maj7th',\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-9th', name: '9',\r\n            base: 'major-min7th',\r\n            structs: ['p1', 'm3', 'p5']\r\n        },\r\n    ];\r\n\r\n    /** インターバルの関係性 */\r\n    export const IntervalRelationProps = {\r\n        'p1': 0,\r\n        'm2': 1,\r\n        'M2': 2,\r\n        'm3': 3,\r\n        'M3': 4,\r\n        'p4': 5,\r\n        'd5': 6,\r\n        'p5': 7,\r\n        'a5': 8,\r\n        'm6': 8,\r\n        'M6': 9,\r\n        'd7': 9,\r\n        'm7': 10,\r\n        'M7': 11\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n    ];\r\n\r\n    export const DIATONIC_MINOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor-minus5' },\r\n        { root: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n    ];\r\n\r\n\r\n\r\n    export const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n        null,\r\n        { index: 0, isFlat: false },\r\n        { index: 1, isFlat: false },\r\n        { index: 1, isFlat: true },\r\n        { index: 2, isFlat: false },\r\n        { index: 3, isFlat: false },\r\n        { index: 3, isFlat: true },\r\n        { index: 4, isFlat: false },\r\n        { index: 5, isFlat: false },\r\n        { index: 6, isFlat: false },\r\n        { index: 6, isFlat: true },\r\n        { index: 7, isFlat: false },\r\n        { index: 8, isFlat: false },\r\n        { index: 8, isFlat: true },\r\n        { index: 9, isFlat: false },\r\n        { index: 10, isFlat: false },\r\n        { index: 10, isFlat: true },\r\n        { index: 11, isFlat: false }\r\n    ];\r\n\r\n    export const getDegreeRoot = (props: DegreeProps) => {\r\n        const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n        return list[props.index];\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰ', 'Ⅰmaj7',\r\n        'Ⅱm', 'Ⅱm7',\r\n        'Ⅲm', 'Ⅲm7',\r\n        'Ⅳ', 'Ⅳmaj7',\r\n        'Ⅴ', 'Ⅴ7',\r\n        'Ⅵm', 'Ⅵm7',\r\n        'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n    ];\r\n\r\n    export const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰm', 'Ⅰm7',\r\n        'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n        'bⅢ', 'bⅢM7',\r\n        'Ⅳm', 'Ⅳm7',\r\n        'Ⅴm', 'Ⅴm7',\r\n        'bⅥ', 'bⅥM7',\r\n        'bⅦ', 'bⅦ7'\r\n    ];\r\n\r\n    export const getDiatonicDegreeList = (scale: Scale) => {\r\n        return scale === 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES :\r\n            DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\r\n    }\r\n\r\n    export const getRootName = (\r\n        props: DegreeProps,\r\n        baseKeyIndex: number\r\n    ): string => {\r\n        const list = props.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST;\r\n        return list[(baseKeyIndex + props.index) % 12];\r\n    }\r\n\r\n\r\n\r\n    export const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n        const ret = SYMBOL_LIST.find((symbol) => {\r\n            if (key === symbol.key) {\r\n                return symbol;\r\n            }\r\n        });\r\n        return ret != undefined ? ret : SYMBOL_LIST[0];\r\n    }\r\n\r\n    export const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n        let list: SymbolKey[] = [];\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (key === symbol.base) {\r\n                list.push(symbol.key);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n\r\n    export const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n        return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n    }\r\n}\r\n\r\nexport default TheoryUtil;\r\n\r\n","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport { BackingLayerData, BackingPatternProps, BackingSignalProps, ChordBacking, DetailInit, PedalInfo, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { playHarmony } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nexport namespace BackingUtil {\r\n\r\n    // オクターブの数\r\n    export const OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    export const STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    export const CHANNEL_MAX = 12;\r\n\r\n    export const getInitialRecord = (divCount: number) => {\r\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    export const buildChannels = (table: boolean[][]): BackingState.ChannelParam[] => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    export const getVoicingListFromTable = (table: boolean[][]) => {\r\n\r\n        const voicingList: VoicingProps[] = [];\r\n        // ボイシングを設定\r\n        if (table != null) {\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        voicingList.push({ octave: i, struct: j });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return voicingList;\r\n    }\r\n\r\n    export const buildPatternProps = (editorPattern: BackingState.Pattern): BackingPatternProps => {\r\n        const channelSize = editorPattern.channels.length;\r\n        const layers: BackingLayerData[] = [];\r\n        editorPattern.layers.forEach(layer => {\r\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\r\n            const signals: BackingSignalProps[] = [];\r\n            layer.table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        signals.push({ x: j, y: i, status: cell });\r\n                    }\r\n                });\r\n            });\r\n            layers.push({ divs, notesList: signals, vels: layer.velocityList.slice() });\r\n        });\r\n        const pedals: PedalInfo[] = [];\r\n        editorPattern.pedalActs.forEach((pedal, i) => {\r\n            if (pedal != null) pedals.push({\r\n                divIndex: i, action: pedal\r\n            });\r\n        });\r\n        return { channelSize, pedals, layers };\r\n    }\r\n\r\n    export const getChannels = (voicingStructs: BackingState.ChannelParam[], size: number) => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: BackingState.ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n\r\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\r\n\r\n        const layers: BackingState.Layer[] = [];\r\n        console.log(JSON.stringify(scoreLayers));\r\n        scoreLayers.forEach(scoreLayer => {\r\n            const table: (BackingState.NoteStatus | null)[][] = [];\r\n            for (let i = 0; i < channelSize; i++) {\r\n                const record: (BackingState.NoteStatus | null)[] = [];\r\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\r\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\r\n                    record.push(notes == null ? null : notes.status);\r\n                }\r\n                table.push(record);\r\n            }\r\n            layers.push({\r\n                noteDivList: scoreLayer.divs,\r\n                table,\r\n                velocityList: scoreLayer.vels\r\n            });\r\n        });\r\n        console.log(JSON.stringify(layers));\r\n        return layers;\r\n    }\r\n\r\n    export const getPitchListFromVoicing = (\r\n        voicingList: VoicingProps[],\r\n        rootIndex: number,\r\n        onIndex: number,\r\n        symbol: TheoryUtil.SymbolParams\r\n    ) => {\r\n        return voicingList.map((item) => {\r\n            const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n            return 12 * item.octave + rootIndex + interval;\r\n        });\r\n    }\r\n\r\n    export const playBacking = (\r\n        store: Store,\r\n        reserveTasks: NodeJS.Timeout[],\r\n        baseInfo: DetailInit,\r\n        backing: ChordBacking,\r\n        pitchIndexList: number[],\r\n        chordTime: number\r\n    ) => {\r\n        if (backing.pattern == null) {\r\n            pitchIndexList.forEach((index) => {\r\n                const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                const octave = Math.floor(index / 12);\r\n                const soundFullName = soundName + octave;\r\n                playHarmony(soundFullName, store, chordTime / 1000, 5);\r\n            });\r\n        } else {\r\n\r\n            const bpm = baseInfo.bpm;\r\n            const beatProps = TheoryUtil.getBeatProps(baseInfo.beatSignature);\r\n            const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (2 / 3);\r\n\r\n            const pattern = backing.pattern;\r\n            // const pedalIndexes = pattern.pedals === undefined ? null : pattern.pedals.map(pedal => pedal.divIndex);\r\n\r\n            /** ペダルの有効範囲を定義したリスト */\r\n            const pedalRangeList: { start: number, end: number, action: BackingState.PedalAction }[] = [];\r\n            pattern.layers.forEach((layer, i) => {\r\n                /** バッキング内で経過した時間（ノーツごとの開始時間） */\r\n                let total = 0;\r\n                const timeList: {\r\n                    start: number, sustain: number\r\n                }[] = layer.divs.map(div => {\r\n                    /** 開始時間 */\r\n                    const start = 60000 / bpm * total;\r\n                    let normal = 4 / div.rate * adjustRate;\r\n                    if (div.isDot) normal *= 1.5;\r\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                    total += normal;\r\n                    return { start, sustain: 60000 / bpm * normal };\r\n                });\r\n\r\n                // ペダル状態のキャッシュを作成\r\n                if (i === 0 && pattern.pedals != undefined) {\r\n                    timeList.forEach((divTime, j) => {\r\n                        const pedalInfo = pattern.pedals?.find((pedal) => {\r\n                            if (j === pedal.divIndex) return pedal;\r\n                        });\r\n                        if (pedalInfo != undefined) {\r\n\r\n                            if (pedalRangeList.length > 0) {\r\n                                pedalRangeList[pedalRangeList.length - 1].end = divTime.start;\r\n                            }\r\n                            pedalRangeList.push({\r\n                                start: divTime.start,\r\n                                end: chordTime,\r\n                                action: pedalInfo.action\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /** 除外リスト（タイで吸収されるノーツ） */\r\n                const ignoreList: { x: number, y: number }[] = [];\r\n                layer.notesList.forEach((notes) => {\r\n\r\n                    // 除外リストに含まれている場合、以降の処理をしない\r\n                    if (ignoreList.find(ig => {\r\n                        if (ig.x === notes.x && ig.y === notes.y) return ig;\r\n                    }) !== undefined) return;\r\n\r\n                    const timeInfo = timeList[notes.x];\r\n                    const timing = notes.status.timing == undefined ? 0 : notes.status.timing;\r\n                    const timingAdj = timing * (60000 / bpm * 1 / 32);\r\n                    const startTime = timeInfo.start + timingAdj;\r\n\r\n                    /** 持続時間 */\r\n                    let sustainTime = timeInfo.sustain;\r\n                    if (notes.status.signal === 's') {\r\n                        // スタッカートの場合半分の音価にする\r\n                        sustainTime *= 0.5;\r\n                    } else if (notes.status.signal === 't') {\r\n\r\n                        let inc = notes.x;\r\n                        let isNext = true;\r\n                        while (isNext) {\r\n                            inc++;\r\n                            // 次のノーツを探す\r\n                            const nextNotes = layer.notesList.find(next => {\r\n                                if (next.x === inc && next.y === notes.y) {\r\n                                    return next;\r\n                                }\r\n                            });\r\n                            if (nextNotes != undefined) {\r\n                                sustainTime += timeList[inc].sustain;\r\n                                // 次の要素を除外する\r\n                                ignoreList.push({ x: inc, y: notes.y });\r\n                                // 次のノーツがタイだったらループを継続\r\n                                isNext = nextNotes.status.signal === 't';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //ペダルを検出\r\n                    for (let k = 0; k < pedalRangeList.length; k++) {\r\n                        const pedal = pedalRangeList[k];\r\n                        const notesTail = startTime + timeInfo.sustain;\r\n                        if (pedal.action !== 'off' && notesTail > pedal.start &&\r\n                            notesTail <= pedal.end\r\n                        ) {\r\n                            // ペダルの持続時間で更新\r\n                            sustainTime = pedal.end - startTime;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    /** 音量 */\r\n                    const velAdj = notes.status.velAdj == undefined ? 0 : notes.status.velAdj;\r\n                    let gain = layer.vels[notes.x] + velAdj;\r\n                    if (gain < 1) gain = 1;\r\n                    if (gain > 10) gain = 10;\r\n                    gain *= 0.6;\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            const index = pitchIndexList[notes.y];\r\n                            const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                            const octave = Math.floor(index / 12);\r\n                            const soundFullName = soundName + octave;\r\n                            playHarmony(soundFullName, store, sustainTime / 1000, gain);\r\n                        }, startTime)\r\n                    );\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    export const stopPreview = (store: Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        store.instruments.harmony?.stop();\r\n        state.isPreview = false;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    export const getLimitLen = (chordInfo: BackingState.ChordInfo) => {\r\n        const minute = chordInfo.minute;\r\n        // 16分音符の長さで割る\r\n        const memoriCount = TheoryUtil.getBeatProps(chordInfo.init.beatSignature).beatMemoriCount;\r\n        const beatLen = chordInfo.beatLen;// * (memoriCount / 4)\r\n        const minuteLen = minute.head / memoriCount + minute.tail / memoriCount;\r\n        return (beatLen + minuteLen);\r\n    }\r\n\r\n    export const getUsingLenFromDivs = (divs: BackingState.NoteDiv[], chordInfo: BackingState.ChordInfo) => {\r\n        const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n        const adjustRate = 4 / beatProps.beatMemoriCount;\r\n        return divs.reduce((prev, cur) => {\r\n            let len = 1 / cur.rate * adjustRate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            return prev + len * 4;\r\n        }, 0);\r\n    }\r\n\r\n    export const checkError = (chordInfo: BackingState.ChordInfo, voicingList: VoicingProps[], pattern: null | BackingState.Pattern): boolean => {\r\n        let hasError = false;\r\n        if (pattern != null) {\r\n\r\n            // 選択しているボイシングがチャンネル数に満たない場合\r\n            if (voicingList.length < pattern.channels.length) hasError = true;\r\n\r\n            const limitLen = getLimitLen(chordInfo);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getUsingLenFromDivs(layer.noteDivList, chordInfo);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n\r\n            // 裏レイヤーのノーツと重なっている場合\r\n            pattern.layers[0].table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        if (checkOverlapBackLayer(pattern.layers, 0, i, j)) {\r\n                            hasError = true;\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkOverlapBackLayer = (layers: BackingState.Layer[], layerIndex: number, channelIndex: number, divIndex: number): boolean => {\r\n        const baseLayer = layers[layerIndex];\r\n        const backLayer = layers[layerIndex === 0 ? 1 : 0];\r\n        const [left, right] = getDivRange(baseLayer.noteDivList, divIndex);\r\n        // console.log(`left=${left}, right=${right}`);\r\n        let isOverlap = false;\r\n        for (let i = 0; i < backLayer.noteDivList.length; i++) {\r\n            if (backLayer.table[channelIndex][i] != null) {\r\n                const [backLeft, backRight] = getDivRange(backLayer.noteDivList, i);\r\n                if (right > backLeft && left < backRight) {\r\n                    isOverlap = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return isOverlap;\r\n    }\r\n\r\n    export const getDivRange = (divs: BackingState.NoteDiv[], divIndex: number): [number, number] => {\r\n        let [left, right] = [0, 0];\r\n\r\n        divs.slice(0, divIndex + 1).forEach((cur, i) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            left = right;\r\n            right += len * 4;\r\n        });\r\n        return [left, right];\r\n    }\r\n\r\n    export const isPermitDot = (note: BackingState.NoteDiv) => {\r\n        return [8, 4, 2].includes(note.rate) && note.div3 === 0;\r\n    }\r\n\r\n    export const isPermit3ren = (note: BackingState.NoteDiv) => {\r\n        return [8, 4].includes(note.rate) && !note.isDot;\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n/**\r\n * データを高速で参照するために、\r\n * 事前に計算したデータを保持するためのユーティリティを提供する\r\n */\r\nnamespace CacheUtil {\r\n\r\n    /**\r\n     * ハーモナイズのキャッシュを生成する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const updateHarmonizeCache = (store: Store, dispatcher: Dispatcher) => {\r\n        const chordList = store.scoreData.chordList;\r\n        const scoreState = store.scoreState;\r\n        const init = (chordList[0].detail as DetailInit);\r\n\r\n        const elementCacheList: ScoreCache.Element[] = [];\r\n        const sectionCacheList: ScoreCache.Section[] = [];\r\n        const beatCacheList: ScoreCache.BeatRange[] = [];\r\n        const scaleCacheList: ScoreCache.KeyScaleRange[] = [];\r\n        const tempoCacheList: ScoreCache.TempoRange[] = [];\r\n        const measureCacheList: ScoreCache.Measure[] = [];\r\n\r\n        // 初期値情報\r\n        let keyIndex = init.keyIndex;\r\n        let scale = init.scale;\r\n        let bpm = init.bpm;\r\n\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let sectionBeatSum = 0;\r\n        let pastSecond = 0;\r\n        let curSecond = 0;\r\n        let chordIndex = -1;\r\n        // let curTotalBeat = 0;\r\n        let curMemoriCount = 0;\r\n        let totalBarCount = 0;\r\n\r\n        // 経過した16分音符のカウント\r\n        let totalMemoriCount = 0;\r\n        let beatRangeMemoriCount = 0;\r\n        let totalBeat = 0;\r\n        let totalMemoriBarCount = 0;\r\n\r\n        //拍キャッシュの産出に使う変数\r\n        let beatSignature = init.beatSignature;\r\n\r\n        let scaleMemoriCount = 0;\r\n        let tempoMemoriCount = 0;\r\n\r\n        const addScaleRange = () => {\r\n            scaleCacheList.push({\r\n                keyIndex,\r\n                scale,\r\n                memoriCnt: scaleMemoriCount\r\n            });\r\n            scaleMemoriCount = 0;\r\n        }\r\n        const addTempoRange = () => {\r\n            tempoCacheList.push({\r\n                bpm,\r\n                beatRate: beatProps.beatMemoriCount / 4,\r\n                memoriCnt: tempoMemoriCount\r\n            });\r\n            tempoMemoriCount = 0;\r\n        }\r\n\r\n\r\n        let beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        chordList.forEach((element, i) => {\r\n\r\n            const prevBeat = totalBeat;\r\n            // ブロック頭のメモリ\r\n            const prevMemoriCount = totalMemoriCount;\r\n            // ブロック頭の小節\r\n            const prevBarCount = totalBarCount;\r\n            const prevMinute = totalMinute;\r\n            const type = element.type;\r\n\r\n            switch (type) {\r\n                // 固定要素ブロック\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        pastSecond += curSecond;\r\n                    }\r\n                } break;\r\n\r\n                // セクション要素ブロック\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                } break;\r\n\r\n                // コード要素ブロック\r\n                case 'chord': {\r\n                    pastSecond += curSecond;\r\n                    // curTotalBeat += curSustain;\r\n\r\n                    const detail = element.detail as DetailChord;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    totalMinute += minute;\r\n                    chordIndex++;\r\n\r\n                    curMemoriCount = detail.beatLen * beatProps.beatMemoriCount + minute;\r\n\r\n                    const prevBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    totalBeat += detail.beatLen;\r\n                    const curBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    // 小節が変わった場合、合計小節をインクリメント\r\n                    if (prevBar !== curBar) {\r\n                        totalBarCount++\r\n                    }\r\n\r\n                    // スケールキャッシュの長さを加算\r\n                    scaleMemoriCount += curMemoriCount;\r\n                    tempoMemoriCount += curMemoriCount;\r\n\r\n                    // 時間の計算\r\n                    curSecond = TheoryUtil.calcSustainMsec(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        bpm,\r\n                        beatSignature\r\n                    );\r\n\r\n                    // メモリの加算\r\n                    for (let j = 0; j < curMemoriCount; j++) {\r\n                        let rate: ScoreCache.MeasureRate = 16;\r\n                        if (beatRangeMemoriCount % beatProps.beatMemoriCount === 0) rate = 4;\r\n                        else if (beatRangeMemoriCount % (beatProps.beatMemoriCount / (beatProps.beatMemoriCount / 2)) === 0) rate = 8;\r\n\r\n                        const barMemoriCount = beatProps.barBeatCnt * beatProps.beatMemoriCount;\r\n\r\n                        let dispBarCount = -1;\r\n                        if (beatRangeMemoriCount % barMemoriCount === 0) {\r\n                            // 拍子セクションの合計メモリ数が小節のメモリ数で割り切れる場合、小節数を表示する\r\n                            totalMemoriBarCount++;\r\n                            dispBarCount = totalMemoriBarCount;\r\n                        }\r\n                        measureCacheList.push({ rate, barCount: dispBarCount });\r\n                        totalMemoriCount++;\r\n                        beatRangeMemoriCount++;\r\n                    }\r\n                } break;\r\n\r\n                // アルター要素ブロックする\r\n                case 'alter': {\r\n                    const detail = element.detail as DetailAlter;\r\n                    switch (detail.alterType) {\r\n                        // 音階が変わる\r\n                        case 'modulate': {\r\n                            addScaleRange();\r\n                            switch (detail.modRel) {\r\n                                case 'domm': {\r\n                                    keyIndex = (keyIndex + 24 + 7 * detail.dommVal) % 12;\r\n                                } break;\r\n                                case 'key': {\r\n                                    keyIndex = (keyIndex + 12 + detail.keyAdj) % 12;\r\n                                } break;\r\n                                case 'parallel': {\r\n                                    keyIndex = (keyIndex + 12 + (scale === 'major' ? -1 : 1) * 3) % 12;\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                                case 'relative': {\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // テンポが変わる\r\n                        case 'tempo': {\r\n                            addTempoRange();\r\n                            switch (detail.tempoRel) {\r\n                                case 'diff': {\r\n                                    bpm += detail.tempoDiff;\r\n                                } break;\r\n                                case 'rate': {\r\n                                    bpm = Math.floor(bpm * 1 * (detail.tempoRate / 100));\r\n                                } break;\r\n                                case 'abs': {\r\n                                    bpm = detail.tempoAbs;\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // 拍子が変わる\r\n                        case 'beat': {\r\n                            addTempoRange();\r\n                            // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n                            beatCacheList.push({\r\n                                beatSignature,\r\n                                memoriCnt: beatRangeMemoriCount\r\n                            });\r\n\r\n                            beatSignature = detail.beatSignature;\r\n                            // 拍を初期化する（拍変更後はいかなる場合も0から数える）\r\n                            totalBeat = 0;\r\n                            beatRangeMemoriCount = 0;\r\n\r\n                            beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n                        } break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n            // const pastSecond = 60000 / init.bpm * (prevBeat + prevMinute);\r\n            elementCacheList.push({\r\n                bar: prevBarCount,\r\n                surplusBeat: prevBeat % beatProps.barBeatCnt,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                scale,\r\n                bpm,\r\n                beatSignature,\r\n                sectionNo,\r\n                pastSecond,\r\n                chordIndex,\r\n                curTotalMemori: prevMemoriCount,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n        scaleCacheList.push({\r\n            keyIndex,\r\n            scale,\r\n            memoriCnt: scaleMemoriCount\r\n        });\r\n\r\n        beatCacheList.push({\r\n            beatSignature,\r\n            memoriCnt: beatRangeMemoriCount\r\n        });\r\n        addTempoRange(); \r\n\r\n        scoreState.elementCacheList = elementCacheList;\r\n        scoreState.sectionCacheList = sectionCacheList;\r\n        scoreState.beatCacheList = beatCacheList;\r\n        scoreState.tempoCacheList = tempoCacheList;\r\n        scoreState.scaleCacheList = scaleCacheList;\r\n        scoreState.measureCacheList = measureCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }\r\n\r\n\r\n    export const updateMelodyCache = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const notesList = store.scoreData.notesList;\r\n        const state = store.melodyState;\r\n\r\n        const notesCacheList: ScoreCache.NotesCache[] = [];\r\n\r\n        notesList.forEach((notes) => {\r\n            const startTime = 0;\r\n            const duration = 0;\r\n            notesCacheList.push({\r\n                startTime,\r\n                duration\r\n            });\r\n        });\r\n    }\r\n\r\n    export const getKeyScaleFromNotesPos = (pos: number, scaleCacheList: ScoreCache.KeyScaleRange[]) => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let range: ScoreCache.KeyScaleRange | null = null;\r\n        // console.log(`count: ${scaleCacheList.length}`);\r\n        for (let i = 0; i < scaleCacheList.length; i++) {\r\n            const info = scaleCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                range = scaleCacheList[i - 1];\r\n                break;\r\n            }\r\n            tail += info.memoriCnt;\r\n            // console.log(`curPos: ${tail}`);\r\n        }\r\n        // console.log(`curMemori: ${curMemori}`);\r\n        return range === null ? scaleCacheList[scaleCacheList.length - 1] : range;\r\n    }\r\n\r\n    /**\r\n     * ノーツを再生する開始時間と持続時間を産出して返す\r\n     * @param pos ノーツの位置\r\n     * @param len ノーツの長さ\r\n     * @param tempoCacheList テンポのキャッシュリスト\r\n     * @returns \r\n     */\r\n    export const getTimeInfoFromNotesPos = (pos: number, len: number, tempoCacheList: ScoreCache.TempoRange[]): [number, number] => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let posTime = 0;\r\n        let pastLen = 0;\r\n        let last: ScoreCache.TempoRange | null = null;\r\n        for (let i = 0; i < tempoCacheList.length; i++) {\r\n            const info = tempoCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                last = tempoCacheList[i - 1];\r\n                break;\r\n            }\r\n            const beatLen = info.memoriCnt / 4;\r\n            posTime += 60 / info.bpm * beatLen;\r\n            pastLen += beatLen;\r\n            tail += info.memoriCnt;\r\n        }\r\n        if (last === null) {\r\n            last = tempoCacheList[tempoCacheList.length - 1];\r\n        }\r\n\r\n        const beatLen = (pos - pastLen) * last.beatRate;\r\n        posTime += 60 / last.bpm * beatLen;\r\n\r\n        const lenTime = 60 / last.bpm * len * last.beatRate;\r\n\r\n        return [posTime, lenTime];\r\n    }\r\n}\r\n\r\nexport default CacheUtil;\r\n","import { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += notes.len4;\r\n    total += notes.len8 / 2;\r\n    total += notes.len16 / 4;\r\n    total += notes.len4div3 / 3;\r\n    total += notes.len8div3 / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    return getSortetdNotesLen({\r\n        len4: notes1.len4 + notes2.len4,\r\n        len8: notes1.len8 + notes2.len8,\r\n        len16: notes1.len16 + notes2.len16,\r\n        len4div3: notes1.len4div3 + notes2.len4div3,\r\n        len8div3: notes1.len8div3 + notes2.len8div3\r\n    });\r\n}\r\n\r\nexport const getSortetdNotesLen = (base: MelodyLength) => {\r\n\r\n    const len8div3Cnt3 = Math.floor(base.len8div3 / 3);\r\n    base.len8div3 -= len8div3Cnt3 * 3;\r\n    base.len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(base.len8div3 / 2);\r\n    base.len8div3 -= len8div3Cnt2 * 2;\r\n    base.len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(base.len4div3 / 3);\r\n    base.len4div3 -= len4div3Cnt3 * 3;\r\n    base.len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(base.len16 / 2);\r\n    base.len16 -= len16Cnt2 * 2;\r\n    base.len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(base.len8 / 2);\r\n    base.len8 -= len8Cnt2 * 2;\r\n    base.len4 += len8Cnt2;\r\n\r\n    return base;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n    return getSortetdNotesLen({\r\n        len4, len8, len16, len4div3, len8div3\r\n    });\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if (notes.len8div3 > 0) return 6;\r\n    else if (notes.len16 > 0) return 4;\r\n    else if (notes.len4div3 > 0) return 3;\r\n    else if (notes.len8 > 0) return 2;\r\n    else if (notes.len4 > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playHarmony = (soundFullName: string, store: Store, duration: number, gain: number) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, { gain, duration });\r\n    } else {\r\n        alert('null');\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nnamespace MelodyUtil {\r\n\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        state.isPreview = false;\r\n        // state.focusIndex = state.lastFocus;\r\n        // state.distIndex = state.focusIndex;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        // store.instruments.sampler.releaseAll();\r\n        dispatcher.melody.setState(state);\r\n        dispatcher.melody.adjustScrollX();\r\n    }\r\n\r\n    /**\r\n     * プレビュー再生を開始する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const reserveTasks: NodeJS.Timeout[] = [];\r\n        const instrument = store.instruments.soundfontPlayer;\r\n\r\n        // 開始するフォーカス（非選択時は最初から）\r\n        const start = state.focusIndex === -1 ? 0 : state.focusIndex;\r\n\r\n        // プレビュー開始時のフォーカスを保持する\r\n        state.lastFocus = state.focusIndex;\r\n        state.isPreview = true;\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = start; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                        dispatcher.melody.adjustScrollX();\r\n                        // dispatcher.melody.setState(state);\r\n                    }, 0);\r\n                }, (posTime - firstTime) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (posTime - firstTime + lenTime) * 1000)\r\n                );\r\n            }\r\n        }\r\n\r\n        // ハーモニーを再生\r\n        if (!state.isSolo) {\r\n            previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n\r\n        dispatcher.system.setReserveTasks(reserveTasks);\r\n        dispatcher.melody.setState(state);\r\n    }\r\n\r\n    const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        const update = store.invalidate.melody as () => void;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = 3; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                if (cache.pastSecond < start) continue;\r\n\r\n                const detail = element.detail as DetailChord;\r\n\r\n                if (detail.root == null) return;\r\n\r\n                const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, onIndex, symbol);\r\n\r\n                // const chordTime = 60 / cache.bpm * len;\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const chordTime = TheoryUtil.calcSustainMsec(\r\n                    detail.beatLen,\r\n                    minute,\r\n                    cache.bpm,\r\n                    cache.beatSignature\r\n                );\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // sampler.releaseAll();\r\n                        // stopPiano(store);\r\n\r\n                        // const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                        // const div = pickingDelay / pitchList.length;\r\n\r\n                        // pitchList.forEach((index, j) => {\r\n                        //     const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        //     const octave = Math.floor(index / 12);\r\n                        //     const soundFullName = soundName + octave;\r\n                        //     playPiano(soundFullName, store, chordTime);\r\n                        // });\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n                        setTimeout(() => {\r\n                            store.melodyState.tableMouse.curChord = element;\r\n                            update();\r\n                            // dispatcher.melody.setState(store.melodyState);\r\n                        }, 0);\r\n                    }, cache.pastSecond - start - adjsut)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const chordList = store.scoreData.chordList;\r\n        const init = chordList[0].detail as DetailInit;\r\n        const curChord = state.tableMouse.curChord;\r\n        const reserveTasks = store.reserveTasks;\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            const onIndex = detail.on == null ? -1 : ((detail.on.index + init.keyIndex) % 12);\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, onIndex, symbol);\r\n            // const chordTime = 60 / init.bpm * len;\r\n            const minute = detail.minute.head + detail.minute.tail;\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                detail.beatLen,\r\n                minute,\r\n                init.bpm,\r\n                init.beatSignature\r\n            );\r\n\r\n            BackingUtil.playBacking(store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.melody.setState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.melody.setState(state);\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyUtil;","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailAlter, DetailChord, DetailInit, DetailSection, Scale, ScoreData, TuneNotes, VoicingProps } from \"../store/score/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/score/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/score/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport MelodyUtil, { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\nimport { Invalidate } from \"../store/invalidate\";\r\nimport BackingState from \"../store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport CacheUtil from \"../../utils/cacheUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        },\r\n\r\n        setInvalidate: (invalidate: Invalidate) => {\r\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        saveFile: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const options = {\r\n                types: [\r\n                    {\r\n                        accept: {\r\n                            'text/plain': ['.lcrs'],\r\n                        },\r\n                    },\r\n                ],\r\n            };\r\n            const fileHandle = state.fileHandle;\r\n            if (fileHandle != null) {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await fileHandle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(JSON.stringify(data));\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = fileHandle;\r\n                    this.score.setScoreState({ ...state });\r\n                    const file = await fileHandle.getFile();\r\n                    // alert('saved successfully!');\r\n                    console.log('saved successfully!');\r\n                })();\r\n            } else {\r\n                window.showSaveFilePicker(options).then((handle) => {\r\n                    (async () => {\r\n                        //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                        const writable = await handle.createWritable();\r\n                        //テキストデータの書き込み\r\n                        const text = DataUtil.gZip(JSON.stringify(data));\r\n                        await writable.write(text);\r\n                        //ファイルを閉じる\r\n                        await writable.close();\r\n                        state.fileHandle = handle;\r\n                        this.score.setScoreState({ ...state });\r\n                    })();\r\n                }).catch(() => {\r\n                    console.log('キャンセルされました');\r\n                });\r\n            }\r\n        },\r\n\r\n        setPiano: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, harmony: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                state.distIndex = state.focusIndex;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n        moveDist: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.distIndex + sub].type !== 'fixed') {\r\n                state.distIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n            state.focusIndex = !isTail ? distHead : distTail;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        flashElement: (index: number) => {\r\n            // const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[index];\r\n\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n\r\n            // bodyRef.style.backgroundColor = '#ffef5f';\r\n            // setTimeout(() => {\r\n            //     bodyRef.style.backgroundColor = '';\r\n            // }, 10);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                if (isUp) {\r\n                    detail.root = { index: 0, isFlat: false };\r\n                    this.score.setScoreData(data);\r\n                    this.score.flashElement(state.focusIndex);\r\n                }\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            } else if (detail.root.index + sub === -1) {\r\n                detail.root = null;\r\n                detail.symbolKey = 'major';\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                setTimeout(() => {\r\n                    CacheUtil.updateHarmonizeCache(this.store, this);\r\n                }, 1);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -2 && target <= 2) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                CacheUtil.updateHarmonizeCache(this.store, this);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[state.focusIndex];\r\n\r\n            // 拍の初期値を取得\r\n            const beatSignature = state.elementCacheList[state.focusIndex].beatSignature;\r\n            const initialBeat = TheoryUtil.getBeatProps(beatSignature).barBeatCnt;\r\n            let curBeatLen = initialBeat;\r\n            if (cur.type === 'chord') {\r\n                const curChord = cur.detail as DetailChord;\r\n                // 後にシンコペーションが設定されている場合は追加できない\r\n                if (curChord.minute.tail != 0) return;\r\n\r\n                curBeatLen = curChord.beatLen;\r\n            }\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: curBeatLen,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null,\r\n                        hasError: false\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        addAlterElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'alter', detail: {\r\n                    alterType: null,\r\n                    modRel: null,\r\n                    dommVal: 0,\r\n                    keyAdj: 0,\r\n                    tempoRel: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbs: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailAlter\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                const sectionNo = this.store.scoreState.elementCacheList[i].sectionNo;\r\n                // 先頭のセクション要素が含まれている場合削除しない\r\n                if (element.type === 'section' && sectionNo === 0) {\r\n                    return;\r\n                }\r\n            }\r\n            data.chordList.splice(distHead, (distTail - distHead) + 1);\r\n            this.score.setScoreData(data);\r\n            state.focusIndex = distHead - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // // reffer.style.width = '300px';\r\n            // wrapRef.style.opacity = '0';\r\n            // wrapRef.style.overflow = 'hidden';\r\n            // // wrapRef.style.padding = '0';\r\n            // wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '0';\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.opacity = '';\r\n            //     wrapRef.style.width = '';\r\n            //     wrapRef.style.overflow = '';\r\n            //     // wrapRef.style.padding = '';\r\n            //     const data = this.store.scoreData;\r\n            //     data.chordList.splice(state.focusIndex, 1);\r\n            //     this.score.setScoreData(data);\r\n            //     state.focusIndex--;\r\n            //     this.score.setScoreState(state);\r\n            //     // setTimeout(() => {\r\n            //     //     reffer.style.opacity = '';\r\n            //     //     reffer.style.width = '';\r\n            //     //     const data = this.store.scoreData;\r\n            //     //     data.chordList.splice(state.focusIndex, 1);\r\n            //     //     this.score.setScoreData(data);\r\n            //     // }, 200);\r\n            // }, 200);\r\n        },\r\n\r\n        copyElementList: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            const list: ChordElement[] = [];\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                list.push(JSON.parse(JSON.stringify(element)));\r\n            }\r\n            console.log(list.length);\r\n            state.copiedElementList = list;\r\n            state.cloneBacking = null;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        pasteElementList: () => {\r\n            const state = this.store.scoreState;\r\n\r\n            const data = this.store.scoreData;\r\n            const list = state.copiedElementList;\r\n            if (list == null) return;\r\n\r\n            console.log(list.length);\r\n            list.forEach((element, i) => {\r\n                data.chordList.splice(state.focusIndex + 1 + i, 0, element);\r\n            });\r\n            this.score.setScoreData(data);\r\n            state.focusIndex++;\r\n            state.distIndex = state.focusIndex + list.length - 1;\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (scale: Scale, keyIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const scaleList = scale === 'major' ? TheoryUtil.DIATONIC_MAJOR_SCALE_LIST : TheoryUtil.DIATONIC_MINOR_SCALE_LIST;\r\n            const chord = scaleList[keyIndex];\r\n            detail.root = { ...chord.root };\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        cloneBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n        },\r\n\r\n        pastBacking: () => {\r\n            const state = this.store.scoreState;\r\n            if (state.cloneBacking != null) {\r\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n                const data = this.store.scoreData;\r\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    /**\r\n     * メロディ画面のディスパッチ\r\n     */\r\n    public melody = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        /**\r\n         * 全てのノーツを選択する\r\n         */\r\n        allSelect: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = notesList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * 選択中のノーツの音程を変更する\r\n         * @param isUpper\r\n         * @param mode \r\n         * @returns \r\n         */\r\n        incrementCurPitch: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n            const scoreState = this.store.scoreState;\r\n            const state = this.store.melodyState;\r\n            const focusIndex = state.focusIndex;\r\n            const distIndex = state.destIndex;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            // フォーカスされていない場合は処理しない\r\n            if (focusIndex === -1) return;\r\n\r\n            if (focusIndex !== distIndex) {\r\n\r\n                const targetList = notesList.filter(\r\n                    (notes, i) => i >= focusIndex && i <= distIndex\r\n                );\r\n\r\n                targetList.forEach(notes => {\r\n                    notes.pitchIndex += 1 * (isUpper ? -1 : 1);\r\n\r\n                    // 履歴を作成\r\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                    this.melody.setNotesList(notesList.slice());\r\n                });\r\n            } else {\r\n                const cur = notesList[focusIndex];\r\n                // const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n                const scaleIndexList = TheoryUtil.MAJOR_SCALE_INTERVALS;\r\n                const normalLeft = getNormalizeLenFromNotes(cur.pos);\r\n                const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n                const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n\r\n                const prevPitchIndex = cur.pitchIndex;\r\n                const interval = mode !== 'octave' ? 1 : 12;\r\n                let tempPitchIndex = cur.pitchIndex;\r\n\r\n                while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                    tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                    if (mode !== 'scale' ||\r\n                        (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                    ) {\r\n                        cur.pitchIndex = tempPitchIndex;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // 値が変わっていた場合のみ処理する\r\n                if (prevPitchIndex !== cur.pitchIndex) {\r\n                    playSoundfont(cur.pitchIndex, this.store);\r\n                    // 履歴を作成\r\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                    this.melody.setNotesList(notesList.slice());\r\n\r\n                    this.melody.adjustScrollY();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * キースイッチを設定する\r\n         * @param keySwitch \r\n         */\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         */\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        /**\r\n         * 複数選択From～ToのToを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         * @returns \r\n         */\r\n        moveDestFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.destIndex > 0 : state.destIndex < notesList.length - 1) {\r\n                state.destIndex += (isNext ? 1 : -1);\r\n                this.melody.setState(state);\r\n            }\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツのエリアのコードを更新する\r\n         * @param focusIndex ノーツのフォーカス\r\n         */\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.tableMouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスの後ろに新しいノーツを追加する\r\n         * @returns \r\n         */\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const focus = state.focusIndex;\r\n            if (focus === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[focus];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = focus === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            // 新しい要素の位置\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(focus + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツを削除する\r\n         */\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            // 履歴を作成\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n            // 対象の開始と終了のインデックスを取得\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            // 削除する個数\r\n            const delNum = end - start + 1;\r\n            notesList.splice(start, delNum);\r\n            this.melody.setNotesList(notesList);\r\n            // 削除後は対象の開始インデックスの１つ前を選択\r\n            state.focusIndex = start - 1;\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * 複数選択を解除する\r\n         * @param isTail 解除時複数選択のどこにフォーカスを移すか（trueの場合終端を選択）\r\n         */\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            state.focusIndex = (!isTail ? start : end);\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            const distIndex = state.destIndex;\r\n            const focusIndex = state.focusIndex;\r\n\r\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\r\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n\r\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\r\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\r\n\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 移動可能かを判定\r\n            if (condition) {\r\n                for (let i = start; i <= end; i++) {\r\n                    const cur = notesList[i];\r\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                }\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        firstNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n                this.melody.adjustScrollX();\r\n                // this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.destIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            // if (state.focusIndex === -1) return;\r\n\r\n            MelodyUtil.previewStart(this.store, this);\r\n        },\r\n\r\n        copyNotes: () => {\r\n\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const num = focusEnd - focusStart + 1;\r\n\r\n            const cloneNotesList: TuneNotes[] = [];\r\n            const base = notesList[focusStart].pos;\r\n            const baseUnit = getMinimumLenUnit(base);\r\n            for (let i = 0; i < num; i++) {\r\n                const notes = notesList[i + focusStart];\r\n                const unit = getMinimumLenUnit(notes.pos);\r\n                const useUnit = baseUnit > unit ? baseUnit : unit;\r\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\r\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\r\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\r\n                console.log(JSON.stringify(pos));\r\n                cloneNotesList.push({\r\n                    pitchIndex: notes.pitchIndex,\r\n                    pos,\r\n                    len: { ...notes.len }\r\n                });\r\n            }\r\n            state.cloneNotesList = cloneNotesList;\r\n            // notesList.splice(state.focusIndex, num);\r\n            // this.tune.setNotesList(notesList);\r\n            // state.focusIndex = focusStart - 1;\r\n            // state.distIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            // alert(JSON.stringify(state.cloneNotesList));\r\n        },\r\n\r\n        pasteNotes: () => {\r\n            // alert('pasteNotes');\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const pastList: TuneNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\r\n            pastList.forEach(notes => {\r\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\r\n            });\r\n            // ペーストするノーツの最後（右端）の要素\r\n            const pastLast = pastList[pastList.length - 1];\r\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList = notesList.concat(pastList);\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                data.notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                this.score.setScoreData(data);\r\n\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex + pastList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            // this.tune.adjustScrollX();\r\n        },\r\n\r\n        undo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`undo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const prev = history.undo();\r\n            if (prev != null) {\r\n                if (history.cur === 0) {\r\n                    console.log('first undo');\r\n                    history.list.unshift(JSON.stringify(data.notesList));\r\n                    history.cur = 1;\r\n                }\r\n                data.notesList = JSON.parse(prev);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`undo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        },\r\n\r\n        redo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`redo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const next = history.redo();\r\n            if (next != null) {\r\n                data.notesList = JSON.parse(next);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`redo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordBacking = detail.backing;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n\r\n            let pattern: BackingState.Pattern | null = null;\r\n            if (chordBacking.pattern != null) {\r\n                const patternProps = chordBacking.pattern;\r\n                const voicingStructs = BackingUtil.buildChannels(voicingTable);\r\n                const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\r\n                const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);\r\n                let pedalActs: (null | BackingState.PedalAction)[] = [];\r\n                if (patternProps.pedals != undefined) {\r\n                    for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\r\n                        const pedal = patternProps.pedals.find(pedal => {\r\n                            if (pedal.divIndex === i) return pedal;\r\n                        });\r\n                        if (pedal == undefined) pedalActs.push(null);\r\n                        else pedalActs.push(pedal.action);\r\n                    }\r\n                } else {\r\n                    for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\r\n                        if (i === 0) pedalActs.push('on');\r\n                        else pedalActs.push(null);\r\n                    }\r\n                }\r\n                pattern = {\r\n                    channelIndex: -1,\r\n                    lenIndex: 0,\r\n                    mode: 'velocity',\r\n                    layerIndex: 0,\r\n                    channels,\r\n                    layers,\r\n                    pedalActs\r\n                };\r\n            }\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    root: (detail.root as TheoryUtil.DegreeProps),\r\n                    on: (detail.on),\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    symbolKey: detail.symbolKey,\r\n                    init: { ...cache }\r\n                },\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false,\r\n                hasError: chordBacking.hasError\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n            setTimeout(() => {\r\n                this.backing.setState(null);\r\n            }, 50);\r\n        },\r\n\r\n        setState: (backingState: null | BackingState.Editor) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingState.Layer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingState.Layer;\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const isExist = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = isExist != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        /**\r\n         * エディタで設定したバッキング情報を譜面データに反映\r\n         */\r\n        mappingEditorToScore: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n\r\n            detail.backing = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                hasError: editor.hasError\r\n            };\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const curLen = lenList[pattern.lenIndex];\r\n            const newLen: BackingState.NoteDiv = { rate: curLen.rate, div3: curLen.div3, isDot: curLen.isDot };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.noteDivList = lenList.slice();\r\n\r\n            // テーブル追加\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n\r\n            // ベロシティ追加\r\n            layer.velocityList.splice(pattern.lenIndex + 1, 0, 5);\r\n\r\n            // ペダル追加\r\n            if (pattern.layerIndex === 0) {\r\n                pattern.pedalActs.splice(pattern.lenIndex + 1, 0, null);\r\n            }\r\n\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            cur.isDot = false;\r\n            cur.div3 = 0;\r\n            layer.noteDivList = layer.noteDivList.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            if (BackingUtil.isPermitDot(cur)) {\r\n                cur.isDot = !cur.isDot;\r\n                layer.noteDivList = layer.noteDivList.slice();\r\n                this.backing.setState(state);\r\n                this.backing.updateErrorState();\r\n            }\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: BackingState.NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            layer.table = layer.table.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        incrementVel: (value: number) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const after = layer.velocityList[pattern.lenIndex] + value;\r\n            if (after >= 1 && after <= 10) {\r\n                layer.velocityList[pattern.lenIndex] = after;\r\n                this.backing.setState(state);\r\n            }\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            // 2つ以上要素がないと消せない\r\n            if (layer.noteDivList.length >= 2) {\r\n                layer.noteDivList.splice(pattern.lenIndex, 1);\r\n                layer.table.forEach((column) => {\r\n                    column.splice(pattern.lenIndex, 1);\r\n                });\r\n                layer.velocityList.splice(pattern.lenIndex, 1);\r\n                // for(let i = 0; i < pattern.channels.length; i ++) {\r\n                //     layer.table[i].splice(pattern.lenIndex, 1);\r\n                // }\r\n                if (pattern.layerIndex === 0) {\r\n                    // 終端までnullで更新\r\n                    if (pattern.lenIndex < pattern.pedalActs.length - 1) {\r\n                        for (let j = pattern.lenIndex + 1; j < pattern.pedalActs.length; j++) {\r\n                            pattern.pedalActs[j] = null;\r\n                        }\r\n                    }\r\n                    pattern.pedalActs.splice(pattern.lenIndex, 1);\r\n                }\r\n\r\n                if (pattern.lenIndex > 0) {\r\n                    pattern.lenIndex--;\r\n                }\r\n                this.backing.setState(state);\r\n            }\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n        /**\r\n         * 左右レイヤーを切り替える\r\n         */\r\n        switchLayer: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        /**\r\n         * 音量orペダルのモードを切り替える\r\n         */\r\n        switchMode: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            if (pattern.mode === 'velocity') pattern.mode = 'pedal';\r\n            else if (pattern.mode === 'pedal') pattern.mode = 'velocity';\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        /**\r\n         * バッキングのプレビュー再生をする\r\n         */\r\n        testBacking: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const reserveTasks = this.store.reserveTasks;\r\n            const chordInfo = editor.chordInfo;\r\n            const init = chordInfo.init;\r\n\r\n            const rootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n            const onIndex = chordInfo.on == null ? -1 : ((chordInfo.on.index + chordInfo.init.keyIndex) % 12);\r\n            const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n            // const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\r\n            // const chordTime = 60 / init.bpm * len;\r\n\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                chordInfo.beatLen,\r\n                chordInfo.minute.head + chordInfo.minute.tail,\r\n                init.bpm,\r\n                init.beatSignature\r\n            );\r\n            const backing: ChordBacking = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                hasError: false\r\n            };\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, onIndex, symbol);\r\n\r\n            BackingUtil.playBacking(this.store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                editor.isPreview = false;\r\n                this.backing.setState(editor);\r\n            }, chordTime));\r\n\r\n            editor.isPreview = true;\r\n            this.backing.setState(editor);\r\n        },\r\n\r\n        updateErrorState: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const voicingList = BackingUtil.getVoicingListFromTable(editor.voicingTable);\r\n            editor.hasError = BackingUtil.checkError(editor.chordInfo, voicingList, editor.pattern);\r\n            this.backing.setState(editor);\r\n        }\r\n    }\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport Soundfont from 'soundfont-player';\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: TheoryUtil.SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null,\r\n        hasError: false\r\n    };\r\n    return backing;\r\n}","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./score/scoreData\"\r\nimport { ScoreState } from \"./score/scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./score/melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { Invalidate } from \"./invalidate\"\r\nimport DataHistory from \"./state/dataHistory\"\r\nimport BackingState from \"./score/backing/backingState\"\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState.Editor;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n\r\n    invalidate: Invalidate;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 2,\r\n        scoreTabIndex: 0,\r\n        dialog: null\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        fileHandle: null,\r\n        isMelody: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        scaleCacheList: [],\r\n        tempoCacheList: [],\r\n        beatCacheList: [],\r\n        measureCacheList: [],\r\n        keySwitch: {\r\n            distMode: false,\r\n            sustainMode: false,\r\n            chordMode: false,\r\n            symbolMode: false,\r\n            control: false,\r\n            minHeadMode: false,\r\n            minTailMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneBacking: null,\r\n        copiedElementList: null,\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        destIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 4,\r\n        beatWidth: 120,\r\n        tableMouse: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        timelineMouse: {\r\n            pos: -1,\r\n            isPut: false,\r\n            lock: -1,\r\n            width: 0,\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 9\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false,\r\n            control: false,\r\n        },\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneNotesList: [],\r\n\r\n        dataHistory: new DataHistory(),\r\n        notesCacheList: []\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        // sampler: getDefaultSampler(),\r\n        harmony: null,\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: [],\r\n    invalidate: {\r\n        harmoniizeInvalidate: {},\r\n        harmonize: null,\r\n        melody: null\r\n    },\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note: {\r\n        left: string;\r\n        right: string;\r\n        up: string;\r\n        down: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        distMode: string;\r\n        edit1: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        edit2: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = (): KeyConfig => {\r\n    return {\r\n        note: {\r\n            left: 'ArrowLeft',\r\n            right: 'ArrowRight',\r\n            up: 'ArrowUp',\r\n            down: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'm',\r\n            deleteCur: 'Delete',\r\n            distMode: 'Shift',\r\n            edit1: 'f',\r\n            edit2: 'c',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n        }\r\n    };\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","\r\n\r\nclass DataHistory {\r\n\r\n    cur: number;\r\n    list: string[];\r\n\r\n    constructor() {\r\n        this.cur = -1;\r\n        this.list = [];\r\n    }\r\n\r\n\r\n    add(data: string) {\r\n        // console.log(`add start ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n        // if (this.list[this.cur] === data) {\r\n        //     console.log('same...');\r\n        //     return;\r\n        // }\r\n        if (this.cur > -1) {\r\n            this.list.splice(0, this.cur + 1);\r\n            this.cur = -1;\r\n            console.log('restert');\r\n        }\r\n        this.list.unshift(data);\r\n        // console.log(`add end ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n    }\r\n\r\n    undo(): null | string {\r\n        let ret = null;\r\n        if (this.cur < this.list.length - 1) {\r\n            this.cur++;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    redo(): null | string {\r\n        let ret = null;\r\n        if (this.cur > 0) {\r\n            this.cur--;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const dialog = store.systemState.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.systemState.dialog = null;\r\n            dispatcher.system.setState(store.systemState);\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n    \r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 22px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","namespace DummyUtil {\r\n\r\n    export const SECTION_CATEGORY = ['Section', 'Intro', 'A', 'B', 'C', 'D', 'Outro'];\r\n    export const SECTION_NO = ['', '1', '2', '3', '4', '5', '6'];\r\n}\r\n\r\nexport default DummyUtil;","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\nnamespace ProgSearcher {\r\n\r\n    export type ChordItemBean = {\r\n        root: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n        beatLen: number;\r\n    }\r\n\r\n    export type UnitBean = {\r\n        condition: Condition;\r\n        chordList: ChordItemBean[];\r\n    }\r\n\r\n    /**\r\n     * ダイアトニックスケールの連番でコードを指定する\r\n     * @param scaleIndex スケールの連番\r\n     * @param beatLen 拍\r\n     */\r\n    const getDiatonicChord = (scaleIndex: number, beatLen: number): ChordItemBean => {\r\n        const chord = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        return { root: { index: chord.root.index, isFlat: false }, symbolKey: chord.symbolKey, beatLen };\r\n    }\r\n\r\n    export type Condition = {\r\n        beat: BeatSignature;\r\n        step: number;\r\n        firstChord: ProgUtil.DegreeFilter;\r\n        secondChord: ProgUtil.DegreeFilter;\r\n    }\r\n\r\n    /**\r\n     * コード進行を検索する\r\n     * @param condition \r\n     * @returns フィルターしたリスト\r\n     */\r\n    export const search = (condition: Condition) => {\r\n        console.log(JSON.stringify(condition));\r\n        return UNIT_LIST.filter((unit) => (\r\n            (unit.condition.beat === condition.beat) &&\r\n            (condition.step === 0 || unit.condition.step === condition.step) &&\r\n            (condition.firstChord === '' || unit.condition.firstChord === condition.firstChord) &&\r\n            (condition.secondChord === '' || unit.condition.secondChord === condition.secondChord)\r\n        ));\r\n    }\r\n\r\n    const parseChord = (source: string): ChordItemBean[] => {\r\n        const args = source.split('@');\r\n        const baseBeat = Number(args[0]);\r\n        const script = args[1];\r\n        const list = script.split(' ');\r\n        return list.map((value)=> {\r\n            const diatonicNo = Number(value.charAt(0)) - 1;\r\n            const option = value.charAt(1);\r\n            const beatChange = value.charAt(2);\r\n\r\n            const chord = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[diatonicNo];\r\n            switch(option) {\r\n                case '_': break;\r\n            };\r\n            const beatLen = beatChange === '' ? baseBeat : Number(beatChange);\r\n            const chordItem: ChordItemBean = {\r\n                root: chord.root, symbolKey: chord.symbolKey, beatLen\r\n            }\r\n            return chordItem;\r\n        });\r\n    }\r\n\r\n    const UNIT_LIST: UnitBean[] = [\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@1 5 6 3 4 1 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@1 5 6 3 4 3 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@1 5 6 5 4 1 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@1 5 6 4 1 5 6 4')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('4@1 4 5 6 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('4@1 6 2 5 1 6 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('4@1 6 4 5 1 6 4 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@4 5 3 6 4 5 3 6')\r\n        },\r\n    ];\r\n}\r\n\r\nexport default ProgSearcher;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\n\r\nnamespace ProgStyle {\r\n\r\n\r\n    /** 実行ボタン */\r\n    export const _TitleLabel = styled.div<{\r\n    }>`\r\n        ${Styles.CSS_LABEL_MIDIUM};\r\n        background-color: #f0f0f049;\r\n        width: 120px;\r\n        text-align: center;\r\n        border-radius: 10px;\r\n        color: #2c2c2c;\r\n        border: solid 1px #ffffff79;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n\r\n    /** コンボボックス */\r\n    export const _Combobox = styled.select<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: black;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n}\r\n\r\nexport default ProgStyle;","import { BeatSignature, ChordElement, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * コード進行生成のユーティリティ\r\n */\r\nnamespace ProgUtil {\r\n\r\n    /** 生成方法 */\r\n    export type BuildType = 'blank' | 'custom' | 'template';\r\n\r\n    export const STEP_LIST = [0, 2, 3, 4] as const;\r\n    export type Step = typeof STEP_LIST[number];\r\n\r\n    /**\r\n     * ブロックに設定するプロパティ\r\n     */\r\n    export type BlockProps = {\r\n        label: DetailSection | DetailFixed;\r\n        chordList?: DetailChord[];\r\n    }\r\n\r\n    export const DEGREE_FILTER_LIST = [\r\n        '', 'Ⅰ', 'Ⅴ', 'Ⅳ', 'Ⅵm', 'Ⅱm', 'Ⅲm'\r\n    ] as const;\r\n    export type DegreeFilter = typeof DEGREE_FILTER_LIST[number];\r\n\r\n    /**\r\n     * 初期状態のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getInitialBlockList = (): BlockProps[] => {\r\n        return [\r\n            { label: { fixed: \"Start\" } },\r\n            { label: { fixed: \"End\" } },\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Blank選択時のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getBlankBlockList = (): BlockProps[] => {\r\n        return [\r\n            { label: { fixed: \"Start\" } },\r\n            {\r\n                label: { labelName: \"Section\" }, chordList: [\r\n                    getDefaultChord()\r\n                ]\r\n            },\r\n            { label: { fixed: \"End\" } },\r\n        ];\r\n    }\r\n\r\n    export const getDefaultChord = (): DetailChord => {\r\n        return {\r\n            beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n            backing: {\r\n                voicingList: [],\r\n                pattern: null,\r\n                hasError: false\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拍子より選択可能なステップリストを絞り込む\r\n     * @param beat ステップの拍\r\n     * @returns 絞り込んだリスト\r\n     */\r\n    export const getFilteredStepList = (beat: BeatSignature) => {\r\n        return STEP_LIST.filter((item) => {\r\n            // 0は空白表示なので必ず加える\r\n            if (item === 0) return true;\r\n\r\n            switch (beat) {\r\n                case '4/4':\r\n                case '6/8': {\r\n                    if (item === 3) return false;\r\n                }\r\n                    break;\r\n                case '3/4':\r\n                case '9/8': {\r\n                    if (item !== 3) return false;\r\n                }\r\n                    break;\r\n                case '2/4':\r\n                case '6/8': {\r\n                    if (item !== 2) return false;\r\n                }\r\n                    break;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * ブロックリストより譜面データを生成する\r\n     * @param blockList ブロックリスト\r\n     * @returns 譜面データ\r\n     */\r\n    export const buildScoreData = (blockList: BlockProps[]): ScoreData => {\r\n        const elementList: ChordElement[] = [];\r\n        // イニシャル要素を設定\r\n        const initElement: DetailInit = {\r\n            keyIndex: 0,\r\n            bpm: 100,\r\n            scale: \"major\",\r\n            beatSignature: \"4/4\"\r\n        }\r\n        elementList.push({ type: 'init', detail: initElement });\r\n        blockList.forEach((block) => {\r\n            if (block.chordList == undefined) {\r\n                // 固定ブロックの処理\r\n                elementList.push({ type: 'fixed', detail: block.label });\r\n            } else {\r\n                // セクションブロックの処理\r\n                elementList.push({ type: 'section', detail: block.label });\r\n                block.chordList.forEach((chord) => {\r\n                    elementList.push({ type: 'chord', detail: chord });\r\n                });\r\n            }\r\n        });\r\n        return { chordList: elementList, notesList: [] };\r\n    }\r\n}\r\n\r\nexport default ProgUtil;","import { useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../utils/dummyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgSearcher from \"./progSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行を編集する画面\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ProgCustomFrame = (props: {\r\n    /** 拍子フィルターの値 */\r\n    beat: '' | BeatSignature;\r\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\r\n    insertProgUnit: (unit: ProgSearcher.UnitBean, secName: string) => void;\r\n}) => {\r\n\r\n    const [step, setStep] = useState<ProgUtil.Step>(2);\r\n    const [degreeFilters, setDegreeFilters] = useState<(ProgUtil.DegreeFilter)[]>(['', '']);\r\n\r\n    /** セクションカテゴリのステート */\r\n    const [secCategory, setSecCategory] = useState('Section');\r\n    /** セクション連番のステート */\r\n    const [secNo, setSecNo] = useState('');\r\n\r\n    // const [progUnitList, setProgUnitList] = useState<ProgSearcher.UnitBean[]>([]);\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n\r\n    const stepList = useMemo(() => {\r\n        return props.beat === '' ? [0] : ProgUtil.getFilteredStepList(props.beat);\r\n    }, [props.beat]);\r\n\r\n    /** 拍ステップ絞り込みのコンボボックス */\r\n    const stepOptionJsxList = useMemo(() => {\r\n        // console.log(stepList.length);\r\n        return stepList.map((val, i) => {\r\n            // 0の場合は表示しない制御\r\n            const disp = val === 0 ? '' : val;\r\n            return (\r\n                <option key={i} value={val}>{disp}</option>\r\n            );\r\n        });\r\n    }, [stepList]);\r\n\r\n    /** ディグリーネーム絞り込みのコンボボックス */\r\n    const degreeOptionJsxListArray: JSX.Element[][] = useMemo(() => {\r\n        return [ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 先頭のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        }), ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 2番目のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        })];\r\n    }, [degreeFilters]);\r\n\r\n    /** リストに表示する進行ユニットのJSX */\r\n    const [progUnitList, progJsxList] = useMemo(() => {\r\n        if(props.beat === '') return [[], [<></>]];\r\n        const beat = props.beat as BeatSignature;\r\n        const unitList = ProgSearcher.search({\r\n            beat: props.beat,\r\n            step, firstChord: degreeFilters[0], secondChord: degreeFilters[1]\r\n        });\r\n        const jsx = unitList.map((unit, i) => {\r\n            const isActive = focusIndex === i;\r\n\r\n            // 表示する進行ユニット\r\n            const dispUnitJsx: JSX.Element[] = [];\r\n            let totalBeat = 0;\r\n            const beatCycle = TheoryUtil.getBeatProps(beat).barBeatCnt;\r\n            unit.chordList.forEach((chord, i) => {\r\n                const degreeRoot = TheoryUtil.getDegreeRoot(chord.root);\r\n                const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey).name;\r\n                const chordName = degreeRoot + symbolName;\r\n                if (i !== 0) {\r\n                    const divStr = totalBeat % beatCycle === 0 ? ' | ' : '・';\r\n                    dispUnitJsx.push(<_Span>{divStr}</_Span>);\r\n                }\r\n                let isMatch = false;\r\n                if(i === 0) {\r\n                    isMatch = degreeFilters[0] !== '';\r\n                } else if (i === 1) {\r\n                    isMatch = degreeFilters[1] !== '';\r\n                }\r\n                dispUnitJsx.push(<_ChordName isMatch={isMatch}>{chordName}</_ChordName>);\r\n                totalBeat += chord.beatLen;\r\n                // console.log(totalBeat);\r\n            });\r\n            return (\r\n                <_ProgItem key={i} isActive={isActive} onClick={() => {\r\n                    setFocusIndex(i);\r\n                }}>{dispUnitJsx}</_ProgItem>\r\n            )\r\n        });\r\n        return [unitList, jsx];\r\n    }, [props.beat, step, degreeFilters, focusIndex]);\r\n\r\n    const [\r\n        /** セクションカテゴリのoptionリスト */\r\n        secCatOptionJsxList,\r\n        /** セクション連番のoptionリスト */\r\n        secNoOptionJsxList,\r\n    ] = useMemo(() => {\r\n        const catList = DummyUtil.SECTION_CATEGORY.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        const noList = DummyUtil.SECTION_NO.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        return [catList, noList];\r\n    }, []);\r\n\r\n    /**\r\n     * 拍ステップ変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const stepChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setStep(Number(e.target.value) as ProgUtil.Step);\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n    /**\r\n     * ディグリーフィルター変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const degreeChangeAction = (e: React.ChangeEvent<HTMLSelectElement>, index: number) => {\r\n        const value = e.target.value as ProgUtil.DegreeFilter;\r\n        degreeFilters[index] = value;\r\n        if (index === 0 && value === '') {\r\n            degreeFilters[1] = '';\r\n        }\r\n        setDegreeFilters(degreeFilters.slice());\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n\r\n    /**\r\n     * リセットボタン押下時の処理\r\n     */\r\n    const resetAction = () => {\r\n\r\n    };\r\n\r\n    /**\r\n     * 追加ボタン押下時の処理\r\n     */\r\n    const insertAction = () => {\r\n        // セクション連番が設定されている場合のみ半角スペースで連結する\r\n        const secNoStr = secNo === '' ? '' : ` ${secNo}`;\r\n        const secName = secCategory + secNoStr;\r\n        props.insertProgUnit(progUnitList[focusIndex], secName);\r\n        setFocusIndex(-1);\r\n        setStep(0);\r\n        setDegreeFilters(['', '']);\r\n    };\r\n\r\n    /** セクションフォームの活性状態 */\r\n    const isEnableSectionForm = focusIndex !== -1;\r\n\r\n    return (\r\n        <_Frame isEnable={props.beat !== ''}>\r\n            {/* 拍ステップコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Step</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={150} value={step} onChange={(e) => {\r\n                    stepChangeAction(e);\r\n                }}>{stepOptionJsxList}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* ディグリーネームフィルターコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Chord</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={80} value={degreeFilters[0]} onChange={(e) => {\r\n                    degreeChangeAction(e, 0);\r\n                }}>{degreeOptionJsxListArray[0]}</ProgStyle._Combobox>\r\n                <ProgStyle._Combobox isEnable={degreeFilters[0] !== ''} width={90} value={degreeFilters[1]} onChange={(e) => {\r\n                    degreeChangeAction(e, 1);\r\n                }}>{degreeOptionJsxListArray[1]}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* 進行ユニットリスト */}\r\n            <_ListDiv><div>{progJsxList}</div></_ListDiv>\r\n            {/* セクション名 */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Section</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={isEnableSectionForm} width={150} value={secCategory} onChange={(e) => {\r\n                    setSecCategory(e.target.value);\r\n                }}>{secCatOptionJsxList}</ProgStyle._Combobox>\r\n                <ProgStyle._Combobox isEnable={isEnableSectionForm} width={80} value={secNo} onChange={(e) => {\r\n                    setSecNo(e.target.value);\r\n                }}>{secNoOptionJsxList}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* 実行ボタン */}\r\n            <_ButtonDiv>\r\n                <_ExecutableButton isEnable={true} onClick={resetAction}>Reset</_ExecutableButton>\r\n                <_ExecutableButton isEnable={focusIndex !== -1} onClick={insertAction}>Add</_ExecutableButton>\r\n            </_ButtonDiv>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgCustomFrame;\r\n\r\nconst BUTTON_DIV_HEIGHT = 40;\r\nconst RECORD_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 条件レコード\r\n */\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${RECORD_HEIGHT}px;\r\n    /* background-color: #d5eae4; */\r\n    /* margin: 2px 0 0 0; */\r\n    text-align: left;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 進行リスト\r\n */\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${RECORD_HEIGHT * 3 + BUTTON_DIV_HEIGHT}px);\r\n    /* background-color: #babaa8; */\r\n    text-align: left;\r\n    & >div{\r\n        display: inline-block;\r\n        width: calc(100% - 8px);\r\n        height: calc(100% - 8px);\r\n        margin: 4px 0 0 4px;\r\n        background-color: #dde0e7;\r\n        box-sizing: border-box;\r\n        border: 1px solid #797979;\r\n        overflow-y: auto;\r\n    }\r\n`;\r\n\r\nconst _ProgItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #00000010;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f6ff0062;\r\n    `}\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n`;\r\n\r\nconst _ChordName = styled.span<{\r\n    isMatch: boolean;\r\n}>`\r\n    color: #000f59;\r\n    ${props => !props.isMatch ? '' : css`\r\n        color: #a0000d;\r\n        /* background-color: #5eff0061; */\r\n    `}\r\n`;\r\nconst _Span = styled.span<{\r\n}>`\r\n    color: #0000005d;\r\n`;\r\n\r\n/**\r\n * ボタンエリア（画面汎用）\r\n */\r\nconst _ButtonDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BUTTON_DIV_HEIGHT}px;\r\n    /* background-color: #94babd; */\r\n    text-align: center;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #737d94;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #505971;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #8da0b0;\r\n    }\r\n`;","import { useContext, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { DetailChord, DetailFixed, DetailSection } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行の出力画面のコンポーネント\r\n * @param props ブロックリスト\r\n * @returns コンポーネント\r\n */\r\nconst ProgOutputFrame = (props: {\r\n    blockList: ProgUtil.BlockProps[];\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const blockJsxList = props.blockList.map((block, i) => {\r\n        const isFixed = block.chordList == undefined;\r\n        const labelName = isFixed ? (block.label as DetailFixed).fixed :\r\n            (block.label as DetailSection).labelName;\r\n\r\n        const getChordListJsx = () => {\r\n            return (block.chordList as DetailChord[]).map((chord, j) => {\r\n\r\n                const getBeatTipsJsx = () => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let k = 0; k < chord.beatLen; k++) {\r\n                        jsxList.push(<_BeatTip key={k} />);\r\n                    }\r\n                    return jsxList;\r\n                }\r\n                let chordName = 'none';\r\n                if (chord.root !== null) {\r\n                    const degreeRoot = TheoryUtil.getDegreeRoot({\r\n                        index: chord.root.index,\r\n                        isFlat: chord.root.isFlat\r\n                    });\r\n                    const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey)?.name;\r\n                    chordName = degreeRoot + symbolName;\r\n                }\r\n                return (\r\n                    <_ChordItem key={j}>\r\n                        <_ChordNameLabel>{chordName}</_ChordNameLabel>\r\n                        <_ChordBeatDiv>{getBeatTipsJsx()}</_ChordBeatDiv>\r\n                    </_ChordItem>\r\n                );\r\n            });\r\n        }\r\n        const inner = isFixed ? (\r\n            <_FixedItem>{labelName}</_FixedItem>\r\n        ) : (<>\r\n            <_SectionItem>{labelName}</_SectionItem>\r\n            <_ChordListDiv>{getChordListJsx()}</_ChordListDiv>\r\n        </>);\r\n        return (\r\n            <_Block key={i} isFixed={isFixed}>{inner}</_Block>\r\n        );\r\n    });\r\n    return (\r\n        <_Frame>\r\n            {blockJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgOutputFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Block = styled.div<{\r\n    isFixed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    background-color: #e8e4c5;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #7e7e7ee8; */\r\n    text-align: center;\r\n    ${props => !props.isFixed ? '' : css`\r\n        text-align: left;\r\n    `}\r\n`;\r\n\r\nconst _FixedItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 200px;\r\n    background-color: #b14272;\r\n    border-radius: 2px 15px 15px 2px;\r\n    color: white;\r\n    margin: 5px 0 5px 5px;\r\n`;\r\n\r\nconst _SectionItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 120px;\r\n    background-color: #4297b1;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 0;\r\n`;\r\n\r\nconst _ChordListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    /* height: 100px; */\r\n    padding: 0 5px 5px 0;\r\n    background-color: #c2d6dd1e;\r\n    border: solid 2px #ab4343;\r\n    border-radius: 8px;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 5px 0;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 45px;\r\n    background-color: #676767;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 5px;\r\n`;\r\n\r\nconst _ChordNameLabel = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    padding: 0 20px;\r\n    /* background-color: #b38282; */\r\n    color: white;\r\n`;\r\n\r\nconst _ChordBeatDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    height: 25px;\r\n    min-width: 100%;\r\n    /* background-color: #c5adad; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _BeatTip = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    height: calc(100% - 12px);\r\n    margin: 6px 2px 0 2px;\r\n    background-color: #ddd796;\r\n    border-radius: 2px;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ProgTemplateFrame = (props: {\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    const templateJsxList = useMemo(() => {\r\n        return ['short major 01', 'short major 02', 'short minor 01'].map((val, i) => {\r\n            return (\r\n                <_Item key={i}>{val}</_Item>\r\n            );\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame>\r\n            {templateJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgTemplateFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #87b4b4;\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n    color: #eb0000;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgCustomFrame from \"./progCustomFrame\";\r\nimport ProgOutputFrame from \"./progOutputFrame\";\r\nimport ProgSearcher from \"./progSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgTemplateFrame from \"./progTemplateFrame\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行を構成して譜面のベースを作成するダイアログ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ChordProgDialog = (props: {\r\n    setScoreData: (scoreData: ScoreData) => void;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** 生成モード（ブランク、カスタム、テンプレート） */\r\n    const [buildMode, setBuildType] = useState<ProgUtil.BuildType>('blank');\r\n    /** 出力する進行ユニットのリスト */\r\n    const [outputUnits, setOutputUnits] = useState(ProgUtil.getBlankBlockList());\r\n    /** 拍子フィルター */\r\n    const [beatFilter, setBeatFilter] = useState<'' | BeatSignature>('');\r\n\r\n    /**\r\n     * Closeボタン押下時の処理\r\n     */\r\n    const closeAction = () => {\r\n        store.systemState.dialog = null;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    /**\r\n     * Startボタン押下時の処理\r\n     */\r\n    const startAction = () => {\r\n        const scoreData = ProgUtil.buildScoreData(outputUnits);\r\n        props.setScoreData(scoreData);\r\n        closeAction();\r\n        // Editタブに遷移\r\n        store.systemState.scoreTabIndex = 1;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    const getSwitchContJsx = () => {\r\n        switch (buildMode) {\r\n            case 'blank': return <></>;\r\n            case 'custom': return <ProgCustomFrame beat={beatFilter} insertProgUnit={insertProgUnit} />;\r\n            case 'template': return <ProgTemplateFrame />;\r\n        }\r\n    };\r\n\r\n    /** 拍フィルターのオプションリストJSX */\r\n    const beatOptionJsxList = useMemo(() => {\r\n        if (buildMode === 'blank') {\r\n            return [(\r\n                <option key={0} value={''}></option>\r\n            )];\r\n        } else {\r\n            return [''].concat(TheoryUtil.BEAT_DEF_LIST).map((val, i) => {\r\n                return (\r\n                    <option key={i} value={val}>{val}</option>\r\n                );\r\n            });\r\n        }\r\n    }, [buildMode]);\r\n\r\n    const beatChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setBeatFilter(e.target.value as BeatSignature);\r\n    }\r\n\r\n    const insertProgUnit = (unit: ProgSearcher.UnitBean, secName: string) => {\r\n        const block: ProgUtil.BlockProps = {\r\n            label: { labelName: secName },\r\n            chordList: unit.chordList.map((chord) => {\r\n                const chordDetail = ProgUtil.getDefaultChord();\r\n                chordDetail.beatLen = chord.beatLen;\r\n                chordDetail.symbolKey = chord.symbolKey;\r\n                chordDetail.root = chord.root;\r\n                return chordDetail;\r\n            })\r\n        }\r\n        outputUnits.splice(outputUnits.length - 1, 0, block);\r\n        setOutputUnits(outputUnits.slice());\r\n    }\r\n\r\n    /**\r\n     * 切り替え式ボタンのJSXを返すクロージャ\r\n     * @param labelName ラベル名\r\n     * @param clickEvent 押下時の処理\r\n     * @param isActive 選択中かどうか\r\n     * @returns JSX\r\n     */\r\n    const createSwitchableButton = (\r\n        labelName: string,\r\n        isActive: boolean,\r\n        clickEvent: () => void\r\n    ) => {\r\n        return (\r\n            <_SwitchableButton isActive={isActive}\r\n                onClick={clickEvent}\r\n            >{labelName}</_SwitchableButton>\r\n        );\r\n    }\r\n\r\n    const beatComboboxEnable = outputUnits.length <= 2;\r\n\r\n    // Blankモードの時は空白を表示\r\n    const distBeatFilter = buildMode === 'blank' ? '' : beatFilter;\r\n    return (\r\n        <_Frame >\r\n            <_Header>\r\n                {createSwitchableButton('Blank', buildMode === 'blank', () => {\r\n                    setOutputUnits(ProgUtil.getBlankBlockList());\r\n                    setBuildType('blank');\r\n                })}\r\n                {createSwitchableButton('Custom', buildMode === 'custom', () => {\r\n                    setOutputUnits(ProgUtil.getInitialBlockList());\r\n                    setBuildType('custom');\r\n                })}\r\n                {createSwitchableButton('Template', buildMode === 'template', () => {\r\n                    setOutputUnits([]);\r\n                    setBuildType('template');\r\n                })}\r\n            </_Header>\r\n            <_MainDiv>\r\n                <_LeftDiv isEnable={buildMode !== 'blank'}>\r\n                    <_BeatFormDiv>\r\n                        <ProgStyle._TitleLabel>Beat</ProgStyle._TitleLabel>\r\n                        <ProgStyle._Combobox value={distBeatFilter} isEnable={beatComboboxEnable} width={150}\r\n                            onChange={(e) => {\r\n                                beatChangeAction(e);\r\n                            }}>{beatOptionJsxList}</ProgStyle._Combobox>\r\n                    </_BeatFormDiv>\r\n                    {/* モードによって切り替えるコンテンツ（カスタムorテンプレート） */}\r\n                    <_SwitchDiv>{getSwitchContJsx()}</_SwitchDiv>\r\n                </_LeftDiv>\r\n                <_RightDiv>\r\n                    <ProgOutputFrame blockList={outputUnits} />\r\n                </_RightDiv>\r\n            </_MainDiv>\r\n            <_Footer>\r\n                {/* ダイアログを閉じる */}\r\n                <_ExecutableButton isEnable={true} onClick={closeAction}>Cancel</_ExecutableButton>\r\n                {/* 譜面を生成 */}\r\n                <_ExecutableButton isEnable={true} onClick={startAction}>Start</_ExecutableButton>\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ChordProgDialog;\r\n\r\nconst HEADER_HEIGHT = 50;\r\nconst FOOTER_HEIGHT = 50;\r\nconst BEAT_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 1024px;\r\n    height: 768px;\r\n    z-index: 11;\r\n    /* top: 100px;\r\n    left: 100px; */\r\n    /* width: calc(100% - 200px);\r\n    height: calc(100% - 200px); */\r\n    background-color: #929292;\r\n    border: solid 2px #404250;\r\n    border-radius: 8px;\r\n    /* border: 1px solid #dadada; */\r\n`;\r\n\r\n/**\r\n * ヘッダー\r\n */\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #7d8d97;\r\n    text-align: center;\r\n`;\r\n\r\n/**\r\n * メインコンポーネント\r\n */\r\nconst _MainDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_HEIGHT + FOOTER_HEIGHT}px);\r\n    /* background-color: #7d8d97; */\r\n    text-align: left;\r\n`;\r\n\r\n/**\r\n * 左側のコンポーネント\r\n */\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n   display: inline-block;\r\n   vertical-align: top;\r\n   width: calc(50% - 6px);\r\n   height: calc(100% - 8px);\r\n   background-color: #bdced8;\r\n   text-align: left;\r\n   margin: 4px 2px 4px 4px;\r\n   ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 拍選択\r\n */\r\nconst _BeatFormDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BEAT_HEIGHT}px;\r\n    /* background-color: #b4c7ba; */\r\n    padding: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _BeatSelect = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    text-align: left;\r\n    color: black;\r\n    vertical-align: top;\r\n    line-height: 24px;\r\n    width: 210px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 5px;\r\n`;\r\n\r\n\r\n/**\r\n * テンプレートとカスタムの切り替えコンテンツ表示\r\n */\r\nconst _SwitchDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    background-color: #cedbd7;\r\n    border: 1px solid #696969;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - ${BEAT_HEIGHT + 10}px);\r\n`;\r\n\r\n/**\r\n * 右側のコンポーネント\r\n */\r\nconst _RightDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    width: calc(50% - 6px);\r\n    height: calc(100% - 8px);\r\n    background-color: #bdced8;\r\n    text-align: left;\r\n    margin: 4px 4px 4px 2px;\r\n`;\r\n\r\n/**\r\n * フッター\r\n */\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n    & *{\r\n        margin: 10px 5px 0 0;\r\n    }\r\n`;\r\n\r\n/**\r\n * スイッチボタン\r\n */\r\nconst _SwitchableButton = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #5083c5;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c5b950;\r\n    `};\r\n    width: 200px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #375176;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #77a7e6;\r\n    ${props => !props.isActive ? '' : css`\r\n            background-color: #c5b950;\r\n    `};\r\n}\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #2d5625;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../utils/cacheUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ChordProgDialog from \"./chordProg/chordProgDialog\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [file, setFile] = useState<null | File>(null);\r\n\r\n    const fileHandle = store.scoreState.fileHandle;\r\n    const data = store.scoreData;\r\n    const tabIndex = store.systemState.scoreTabIndex;\r\n\r\n    const [fileInfo, scoreInfo]: [{\r\n        name: string;\r\n        size: string;\r\n        modified: string;\r\n    }, {\r\n        key: string;\r\n        tempo: string;\r\n        rate: string;\r\n        section: string;\r\n        chord: string;\r\n        bar: string;\r\n        time: string;\r\n        notes: string;\r\n    }] = useMemo(() => {\r\n        let name = '-';\r\n        let size = '-';\r\n        let modified = '-';\r\n        let key = '-';\r\n        let tempo = '-';\r\n        let rate = '-';\r\n        let section = '-';\r\n        let chord = '-';\r\n        let bar = '-';\r\n        let time = '-';\r\n        let notes = '-';\r\n        if (tabIndex === 0) {\r\n            if (file != null) {\r\n                name = file.name;\r\n                size = `${file.size.toString()} byte`;\r\n                modified = DataUtil.getStringFromDate(new Date(file.lastModified));\r\n            }\r\n            if (data.chordList.length > 0) {\r\n                const init = data.chordList[0].detail as DetailInit;\r\n                key = `${TheoryUtil.KEY12_MAJOR_SCALE_LIST[init.keyIndex]} ${init.scale}`;\r\n                tempo = init.bpm.toString();\r\n                rate = init.beatSignature;\r\n                let sectionNum = 0;\r\n                let chordNum = 0;\r\n                data.chordList.forEach(chord => {\r\n                    switch (chord.type) {\r\n                        case 'section': sectionNum++; break;\r\n                        case 'chord': chordNum++; break;\r\n                    }\r\n                });\r\n                section = sectionNum.toString();\r\n                chord = chordNum.toString();\r\n\r\n                const cacheList = store.scoreState.elementCacheList;\r\n                if (cacheList.length > 0) {\r\n                    const last = cacheList[cacheList.length - 1];\r\n                    time = `${last.pastSecond / 1000}s`;\r\n                    bar = `${last.bar} (${last.surplusBeat})`;\r\n                }\r\n                notes = data.notesList.length.toString();\r\n            }\r\n        }\r\n        return [{\r\n            name, size, modified\r\n        }, {\r\n            key, tempo, rate, section, chord, bar, time, notes\r\n        }]\r\n    }, [tabIndex, data, file]);\r\n\r\n    useEffect(() => {\r\n        if (tabIndex === 0 && fileHandle != null) {\r\n            fileHandle.getFile().then(file => {\r\n                setFile(file);\r\n            });\r\n        }\r\n    }, [tabIndex]);\r\n\r\n    const setScoreData = ((data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    });\r\n\r\n    /**\r\n     * ラベルフォームを生成する\r\n     * @param labelName ラベル名\r\n     * @param labelValue 値\r\n     * @returns JSX\r\n     */\r\n    const createLabelRecord = (labelName: string, labelValue: string) => {\r\n        return (\r\n            <_Recored>\r\n                <_ItemnLabel>{labelName}</_ItemnLabel>\r\n                <_ItemnValue>{labelValue}</_ItemnValue>\r\n            </_Recored>\r\n        );\r\n    }\r\n\r\n\r\n    const searchLocalFileAction = () => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            // console.log(fileContents);\r\n            store.scoreState.fileHandle = fileHandle;\r\n            setFile(file);\r\n            const text = DataUtil.unZip(fileContents);\r\n            // const text = fileContents;\r\n            console.log(text);\r\n            setScoreData(JSON.parse(text));\r\n        })();\r\n    }\r\n\r\n    const disconnectAction = () => {\r\n        store.scoreState.fileHandle = null;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n        setFile(null);\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n        <_ButtonsDiv>\r\n            <_Button onClick={()=> {\r\n                store.systemState.dialog = <ChordProgDialog setScoreData={setScoreData}/>;\r\n                dispatcher.system.setState(store.systemState);\r\n            }}>new score</_Button>\r\n            <_Button onClick={searchLocalFileAction}>load file</_Button>\r\n            <_Button onClick={searchLocalFileAction}>search local</_Button>\r\n            <_Button onClick={disconnectAction}>disconnect</_Button>\r\n        </_ButtonsDiv>\r\n            <_MainDiv>\r\n                <_Left>\r\n                    <_ListInfoDiv isEnable={true}>\r\n\r\n                    </_ListInfoDiv>\r\n                    {/* <_Link onClick={() => {\r\n\r\n                    const data: ScoreData = {\r\n                        chordList: [\r\n                            { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' } as DetailInit },\r\n                            { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                            { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                            {\r\n                                type: 'chord', detail: {\r\n                                    beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                    backing: {\r\n                                        voicingList: [],\r\n                                        pattern: null,\r\n                                        hasError: false\r\n                                    }\r\n                                } as DetailChord\r\n                            },\r\n                            { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                        ],\r\n                        notesList: []\r\n                    };\r\n                    // setSource(JSON.stringify(data));\r\n                    setData(data);\r\n                }} >Create an empty score.</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅰ→Ⅴ→Ⅵ→Ⅲm→Ⅳ→Ⅰ→Ⅱm→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅵm→Ⅳ→Ⅴ→Ⅰ→Ⅵm→Ⅳ→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(4, 3);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChordDiatonic(4, 2);\r\n                    builder.addChordDiatonic(4, 5);\r\n                    builder.addChordDiatonic(4, 1);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChord(4, { index: 0, isFlat: false }, 'suspend4th');\r\n                    builder.addChordDiatonic(4, 0);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅳ→Ⅴ→Ⅲm→Ⅵm→Ⅱm→Ⅴ→Ⅰsus4→Ⅰ</_Link> */}\r\n                </_Left>\r\n                <_Right>\r\n                    {/* <_Source value={source} onChange={e => setSource(e.target.value)} /> */}\r\n\r\n                    <_DataInfoDiv isEnable={fileHandle != null}>\r\n                        <_TitleLabel>DATA</_TitleLabel>\r\n                        {createLabelRecord('file', fileInfo.name)}\r\n                        {createLabelRecord('name', fileInfo.name)}\r\n                        {createLabelRecord('url', fileInfo.name)}\r\n                        {createLabelRecord('size', fileInfo.name)}\r\n                        {/* {createLabelRecord('size', fileInfo.size)}\r\n                        {createLabelRecord('modified', fileInfo.modified)} */}\r\n                    </_DataInfoDiv>\r\n                    <_ScoreInfoDiv isEnable={data.chordList.length > 0}>\r\n                        <_TitleLabel>SCORE</_TitleLabel>\r\n                        {createLabelRecord('key', scoreInfo.key)}\r\n                        {createLabelRecord('tempo', scoreInfo.tempo)}\r\n                        {createLabelRecord('rate', scoreInfo.rate)}\r\n                        {createLabelRecord('section', scoreInfo.section)}\r\n                        {createLabelRecord('chord', scoreInfo.chord)}\r\n                        {createLabelRecord('bar', scoreInfo.bar)}\r\n                        {createLabelRecord('time', scoreInfo.time)}\r\n                        {createLabelRecord('notes', scoreInfo.notes)}\r\n                    </_ScoreInfoDiv>\r\n                </_Right>\r\n            </_MainDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #8a6b6b; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #969696; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\n// const _Source = styled.textarea`\r\n//     display: inline-block;\r\n//     width: calc(100% - 8px);\r\n//     margin: 4px 0 0 4px;\r\n//     height: calc(100% - 44px);\r\n//     /* background-color: #7e7e7e; */\r\n//     text-align: left;\r\n//     font-size: 20px;\r\n//     resize: none;\r\n//     box-sizing: border-box;\r\n//     color: #060053;\r\n// `;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    height: calc(100% - 48px);\r\n    background-color: #ffffff;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst DATA_INFO_HEIGHT = 260;\r\n\r\nconst _DataInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${DATA_INFO_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #9da5af;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ScoreInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${DATA_INFO_HEIGHT + 12}px);\r\n    margin: 0 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #ad0000;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c5;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\n\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #888888;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    border: 1px solid #000744;\r\n    color: #04274e;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    &:hover {\r\n        background-color: #98bfc2;\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : TheoryUtil.getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: TheoryUtil.SymbolKey[] = [];\r\n        const parentLine: TheoryUtil.SymbolKey[] = [];\r\n        const childrenLine: TheoryUtil.SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = TheoryUtil.getSymbolDerives(baseSymbol.key);\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = TheoryUtil.getSymbolDerives(curSymbol.key);\r\n        TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\nimport { DetailChord } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = TheoryUtil.getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = TheoryUtil.getRootName({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = TheoryUtil.getRootName({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        // 見た目上１から数えるため\r\n        bar = cache.bar + 1;\r\n    }\r\n    // 小節変更タイミングで、余りの拍がある（頭でない）場合エラー\r\n    const isError = bar !== -1 && cache.surplusBeat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n    }\r\n\r\n    let minuteStr = '';\r\n    if(cache.minute !== 0) {\r\n        switch(cache.minute) {\r\n            case 1: minuteStr = '→/16'; break;\r\n            case 2: minuteStr = '→/8'; break;\r\n            case -1: minuteStr = '←/16'; break;\r\n            case -2: minuteStr = '←/8'; break;\r\n        }\r\n    }\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.surplusBeat === 0 ? <>&nbsp;</> : cache.surplusBeat}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : minuteStr}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailAlter = (props: {\r\n    detail: DetailAlter;\r\n}) => {\r\n\r\n    const type = props.detail.alterType;\r\n\r\n    const getDetailInfo = (): string => {\r\n        let ret = '-';\r\n        if (type != null) {\r\n            switch (type) {\r\n                case 'modulate': {\r\n\r\n                    const modRel = props.detail.modRel;\r\n                    if (modRel != null) {\r\n                        switch (modRel) {\r\n                            case 'domm': {\r\n                                const val = props.detail.dommVal;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                            case 'relative':\r\n                            case 'parallel': {\r\n                                ret = modRel;\r\n                            } break;\r\n                            case 'key': {\r\n                                const val = props.detail.keyAdj;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                        }\r\n                    }\r\n                } break;\r\n                case 'tempo' : {\r\n                    const tempoRel = props.detail.tempoRel;\r\n                    switch(tempoRel) {\r\n                        case 'diff': {\r\n                            const val = props.detail.tempoDiff;\r\n                            const sign = val > 0 ? '+' : ''; \r\n                            ret = `${tempoRel}: ${sign}${val}`;\r\n                        } break;\r\n                        case 'rate': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoRate}%`;\r\n                        } break;\r\n                        case 'abs': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoAbs}`;\r\n                        } break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                {type == null ? 'alter' : type}\r\n            </_Type>\r\n            <_Detail>\r\n                {getDetailInfo()}\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, Scale } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 2 | 1;\r\n\r\n/**\r\n * コードブロックのコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isSustainMode: boolean;\r\n    isCurrent: boolean;\r\n    keyIndex: number;\r\n    scale: Scale;\r\n}) => {\r\n\r\n    const minute = props.detail.minute;\r\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() => {\r\n\r\n        // const keySwitch = store.scoreState.keySwitch;\r\n        const chordBacking = props.detail.backing;\r\n        let degreeRoot: null | string = null;\r\n        let degreeOn: null | string = null;\r\n        let chordRoot: null | string = null;\r\n        let chordOn: null | string = null;\r\n\r\n        if (props.detail.root != null) {\r\n            degreeRoot = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            });\r\n            chordRoot = TheoryUtil.getRootName({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, props.keyIndex);\r\n\r\n            if (props.detail.on != null) {\r\n                degreeOn = TheoryUtil.getDegreeRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.on.isFlat\r\n                });\r\n                chordOn = TheoryUtil.getRootName({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.root.isFlat\r\n                }, props.keyIndex);\r\n            }\r\n        }\r\n\r\n        const diatonicList = TheoryUtil.getDiatonicDegreeList(props.scale);\r\n        const isDiatonic = diatonicList.includes(degreeRoot + symbolName);\r\n\r\n        return <_Wrap>\r\n            <_Degree\r\n                // isSwitch={keySwitch.sustainMode && props.isCurrent}\r\n                isSwitch={props.isSustainMode}\r\n                scaleRelation={degreeRoot != null && isDiatonic ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={props.isSustainMode}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n            <_Backing>\r\n                {chordBacking.hasError ? <_Error /> : <>\r\n                    {chordBacking.voicingList.length === 0 ? '' : <_Voicing />}\r\n                    {chordBacking.voicingList.length === 0 ? '' : chordBacking.pattern == null ? '' : <_Pattern />}\r\n                </>}\r\n            </_Backing>\r\n        </_Wrap>\r\n    }\r\n        , [\r\n            props.scale,\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            props.isSustainMode,\r\n            props.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail,\r\n            props.detail.backing\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: TheoryUtil.ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 18px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #4e5163cc;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 2 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 1 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Backing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 6px;\r\n    /* background-color: #00a048; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _Error = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background-color: #af3838;\r\n`;\r\n\r\nconst _Voicing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 2px 0 0;\r\n    height: 4px;\r\n    border-radius: 4px 0 0 4px;\r\n    border: solid 1px #0000004e;\r\n    background-color: #acb6ca;\r\n`;\r\n\r\nconst _Pattern = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 0 0 2px;\r\n    height: 4px;\r\n    border-radius: 0 4px 4px 0;\r\n    border: solid 1px #0000004e;\r\n    background-color: #accab3;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    // const jsxList: JSX.Element[] = [];\r\n    // jsxList.push(<_Border key={0} />);\r\n    // jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    const value = props.detail.fixed;\r\n    return (\r\n        <_Wrap isStart={value === 'Start'}>\r\n            {/* {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()} */}\r\n            <_Label>{value}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div<{\r\n    isStart: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    border-left: 1px solid #00000083;\r\n    border-top: 1px solid #00000083;\r\n    border-right: 1px solid #00000083;\r\n    /* border: 1px solid #00000083; */\r\n    box-sizing: border-box;\r\n    background-color: #9b9b9b1f;\r\n    ${props => props.isStart ? css`\r\n        border-radius: 0 35px 0 0;\r\n    ` : css`\r\n        border-radius: 35px 0 0 0;\r\n    `}\r\n`;\r\n\r\n// const _Border = styled.div`\r\n//     display: inline-block;\r\n//     width: 10px;\r\n//     height: 100%;\r\n//     background-color: #b4b4b4;\r\n//     vertical-align: middle;\r\n// `;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    /* width: calc(100% - 10px); */\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #960000b0;\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    /* vertical-align: middle; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{TheoryUtil.KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.beatSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailSection } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailSection = (props: {\r\n    detail: DetailSection;\r\n}) => {\r\n    // const { store } = useContext(GlobalContext);\r\n\r\n    // const state = store.scoreState;\r\n    // const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    // const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Label>{curSection.labelName}</_Label> */}\r\n            <_Label>{props.detail.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcAlter = (props: {\r\n    detail: DetailAlter;\r\n    prevCache: ScoreCache.Element;\r\n    curCache: ScoreCache.Element;\r\n}) => {\r\n\r\n    const getType = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate': return 'Key';\r\n            case 'tempo': return 'Tempo';\r\n            case 'beat': return 'Beat';\r\n        }\r\n    }\r\n    const getDetail = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate':{\r\n                const prevKey = TheoryUtil.KEY12_SHARP_LIST[props.prevCache.keyIndex] + (props.prevCache.scale === 'major' ? '' : 'm');\r\n                const curKey = TheoryUtil.KEY12_SHARP_LIST[props.curCache.keyIndex] + (props.curCache.scale === 'major' ? '' : 'm');\r\n                return `${prevKey}→${curKey}`;\r\n            }\r\n            case 'tempo':{\r\n                const prevTempo = props.prevCache.bpm;\r\n                const curTempo = props.curCache.bpm;\r\n                return `${prevTempo}→${curTempo}`;\r\n            }\r\n            case 'beat':{\r\n                const prevBeat = props.prevCache.beatSignature;\r\n                const curBeat = props.curCache.beatSignature;\r\n                return `${prevBeat}→${curBeat}`;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Type>{getType()}</_Type>\r\n            <_Detail>{getDetail()}</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\ntype ChordDefBean = {\r\n    root: TheoryUtil.DegreeProps;\r\n    symbolKey: TheoryUtil.SymbolKey;\r\n}\r\n\r\nconst ChordEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n    }, [detail.root, detail.symbolKey]);\r\n\r\n    const getChord = (index: number, isFlat: boolean, symbolKey: TheoryUtil.SymbolKey): ChordDefBean => {\r\n        return { root: { index, isFlat }, symbolKey };\r\n    }\r\n\r\n    const createRow = (label: JSX.Element, chordList: ChordDefBean[]): JSX.Element => {\r\n        const listJsx: JSX.Element[] = [];\r\n        listJsx.push(<_Header key={listJsx.length}>{label}</_Header>);\r\n        chordList.forEach((chord) => {\r\n            const rootName = TheoryUtil.getDegreeRoot(chord.root);\r\n            const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey).name;\r\n            listJsx.push(\r\n                <_Item isActive={false} key={listJsx.length}>\r\n                    {rootName + symbolName}\r\n                </_Item>);\r\n        });\r\n        return <_Row>{listJsx}</_Row>;\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {createRow(<>triad</>, [\r\n                getChord(0, false, 'major'),\r\n                getChord(2, false, 'minor'),\r\n                getChord(4, false, 'minor'),\r\n                getChord(5, false, 'major'),\r\n                getChord(7, false, 'major'),\r\n                getChord(9, false, 'minor'),\r\n                getChord(11, false, 'minor-minus5'),\r\n            ])}\r\n            {/* {createRow(<>Tetrad</>, [\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'minor-7th'),\r\n                getChord(4, false, 'minor-7th'),\r\n                getChord(5, false, 'major-maj7th'),\r\n                getChord(7, false, 'major-min7th'),\r\n                getChord(9, false, 'minor-7th'),\r\n                getChord(11, false, 'minor7-minus5'),\r\n            ])} */}\r\n            {createRow(<>domm</>, [\r\n                getChord(9, false, 'major-min7th'),\r\n                getChord(11, false, 'major-min7th'),\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'major-min7th'),\r\n                getChord(4, false, 'major-min7th'),\r\n            ])}\r\n            {createRow(<>domm*</>, [\r\n                getChord(1, false, 'diminish'),\r\n                getChord(3, false, 'diminish'),\r\n                getChord(4, false, 'diminish'),\r\n                getChord(6, false, 'diminish'),\r\n                getChord(8, false, 'diminish'),\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    /* height: 160px; */\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    /* height: 100%; */\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport SymbolEditor from \"../tool/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailAlter from \"./form/elementDetailAlter\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcAlter from \"./calc/calcAlter\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { ScoreState } from \"../../../../../redux/store/score/scoreState\";\r\nimport ChordEditor from \"../tool/chordEditor\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n    element: ChordElement;\r\n    state: ScoreState;\r\n    setState: (state: ScoreState) => void;\r\n}) => {\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = props.state;\r\n    const keySwitch = state.keySwitch;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    // const chordList = store.scoreData.chordList;\r\n    // const element = chordList[props.index];\r\n    const element = props.element;\r\n    const cache = state.elementCacheList[props.index];\r\n    const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n    const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n    const isFocus = props.index >= distHead && props.index <= distTail;\r\n    const isRange = isFocus && distHead != distTail;\r\n    const isSameSection = isFocus || state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        props.setState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    const elementJson = JSON.stringify(element);\r\n\r\n    return useMemo(() => {\r\n        // console.log(`pos: ${props.index}`);\r\n        const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n        const isInactive = !(isSameSection || element.type === 'init');\r\n        return (\r\n            <_Wrap\r\n                ref={wrapRef}\r\n                isSelectable={element.type !== 'fixed'}\r\n                isActive={isFocus}\r\n                isInactive={isInactive}\r\n                isAdditional={['chord', 'section', 'alter', 'init'].includes(element.type)}\r\n            >\r\n                <_Head>\r\n                    {element.type !== 'chord' ? <></> : (\r\n                        <_CurKey>{TheoryUtil.getDisplayKeyScaleName(cache.keyIndex, cache.scale)}</_CurKey>\r\n                    )}\r\n                </_Head>\r\n\r\n                {/* 要素の入力フォーム */}\r\n                {['init', 'chord', 'section', 'alter'].includes(element.type) ? (\r\n                    <_Form\r\n                        ref={bodyRef}\r\n                        isActive={isFocus}\r\n                        isRange={isRange}\r\n                        isInactive={isInactive}\r\n                        type={element.type}\r\n                        isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                        onClick={() => {\r\n                            if (element.type === 'fixed') {\r\n                                return;\r\n                            }\r\n                            if (!state.keySwitch.distMode) {\r\n                                state.focusIndex = props.index;\r\n                                state.distIndex = state.focusIndex;\r\n                            } else {\r\n                                state.distIndex = props.index;\r\n                            }\r\n                            props.setState(state);\r\n                        }}\r\n                    >{(() => {\r\n                        switch (element.type) {\r\n                            case 'init': {\r\n                                const detail = element.detail as DetailInit;\r\n                                return (<ElementDetailInit detail={detail} />);\r\n                            }\r\n                            case 'section': {\r\n                                const detail = element.detail as DetailSection;\r\n                                return (<ElementDetailSection detail={detail} />);\r\n                            }\r\n                            case 'chord': {\r\n                                const detail = element.detail as DetailChord;\r\n                                return (<ElementDetailChord\r\n                                    detail={detail}\r\n                                    isCurrent={isFocus}\r\n                                    keyIndex={cache.keyIndex}\r\n                                    isSustainMode={isFocus && state.keySwitch.sustainMode}\r\n                                    scale={cache.scale}\r\n                                />);\r\n                            }\r\n                            case 'alter': {\r\n                                const detail = element.detail as DetailAlter;\r\n                                return (<ElementDetailAlter detail={detail} />);\r\n                            }\r\n                        }\r\n                    })()}\r\n                    </_Form>\r\n                ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n                {/* 入力フォーム下部の計算によって出力される情報 */}\r\n                {\r\n                    element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                        element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                            element.type === 'alter' ? (\r\n                                <CalcAlter\r\n                                    detail={element.detail as DetailAlter}\r\n                                    prevCache={state.elementCacheList[props.index - 1]}\r\n                                    curCache={cache}\r\n                                />\r\n                            ) :\r\n                                <></>\r\n                }\r\n                <>{!(isCurrent && chordDetail != null && state.keySwitch.chordMode) ? '' :\r\n                    <ChordEditor />\r\n                }</>\r\n                <>{!(isCurrent && chordDetail != null && chordDetail.root != null && state.keySwitch.symbolMode) ? '' :\r\n                    <SymbolEditor />\r\n                }</>\r\n                {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                    <_Operations>\r\n                        <_OperationItem>-</_OperationItem>\r\n                        <_OperationItem\r\n                        // onClick={() => dispatcher.score.addChordElement()}\r\n                        >+</_OperationItem>\r\n                    </_Operations>\r\n                )}\r\n            </_Wrap>\r\n        );\r\n    }, [\r\n        elementJson, isSameSection, isRange, isFocus,\r\n        keySwitch.chordMode, keySwitch.symbolMode, keySwitch.sustainMode\r\n    ]);\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isRange: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    /* border: solid 1px #00000049; */\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #df8484;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #44b168;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'alter' ? '' : css`\r\n        border: solid 1px #604fc0;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 4px;\r\n    ${props => props.isInactive ? '' : css`\r\n        /* background-color: #ebf1e2; */\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4c9df;\r\n        border: solid 1px #00000049;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n    ${props => !props.isRange ? '' : css`\r\n        background-color: #80d4e2;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isAdditional: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isAdditional ? '' : css`\r\n        /* background-color: #e8ff9549; */\r\n        background: linear-gradient(to bottom, transparent,transparent,transparent, #ffffff9e);\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #ffffff9b;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const cacheList = store.scoreState.elementCacheList;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (cacheList.length === chordList.length) {\r\n        for (let i = 0; i < cacheList.length; i++) {\r\n            list.push(\r\n                <ScoreElement key={list.length}\r\n                    index={i}\r\n                    element={chordList[i]}\r\n                    state={store.scoreState}\r\n                    setState={dispatcher.score.setScoreState}\r\n                />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {list}\r\n            {/* <_Frame> */}\r\n            {/* <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note> */}\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #d8d8d8;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    state.distIndex = state.focusIndex;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 46px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #97cce0dd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #929292;\r\n    /* border-radius: 20px 20px 20px 20px; */\r\n    border-radius: 2px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 25px;\r\n        font-size: 18px;\r\n        /* font-weight: 600; */\r\n        color: #4d4d4d;\r\n        /* background-color: #0000003a; */\r\n        line-height: 22px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 21px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #adadad39; */\r\n        line-height: 20px;\r\n    }\r\n`;","import { on } from \"stream\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\nimport { getKeyIndexFromPitcher, getNormalizeLenFromNotes } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nnamespace HarmonizeUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n        const state = store.scoreState;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        const reserveTasks = store.reserveTasks;\r\n        let firstTime = -1;\r\n        const update = () => {\r\n            // if (store.invalidate.harmonize) {\r\n            //     store.invalidate.harmonize();\r\n            // }\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = state.focusIndex; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                // 開始時のノーツの位置（時間）を保存する。\r\n                if (firstTime === -1) {\r\n                    firstTime = cache.pastSecond;\r\n                }\r\n\r\n\r\n                if (detail.root == null) continue;\r\n\r\n                const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, onIndex, symbol);\r\n\r\n                // const chordTime = 60 / cache.bpm * len;\r\n\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const chordTime = TheoryUtil.calcSustainMsec(\r\n                    detail.beatLen,\r\n                    minute,\r\n                    cache.bpm,\r\n                    cache.beatSignature\r\n                );\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        setTimeout(() => {\r\n                            update();\r\n                        }, 0);\r\n\r\n                    }, cache.pastSecond - firstTime - adjsut)\r\n                );\r\n            }\r\n\r\n            if (i === chordList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (cache.pastSecond - firstTime - adjsut))\r\n                );\r\n            }\r\n        }\r\n\r\n        // メロディを再生\r\n        if (!state.isSolo) {\r\n            previewMelody(firstTime / 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n        state.isPreview = true;\r\n        update();\r\n    }\r\n\r\n    const previewMelody = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const instrument = store.instruments.soundfontPlayer;\r\n\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = 0; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n\r\n            if (posTime < start) continue;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    dispatcher.melody.adjustScrollX();\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                    }, 0);\r\n                }, (posTime - start) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (posTime - start + lenTime) * 1000)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    // ハーモニーのプレビューを停止する。\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        state.isPreview = false;\r\n        // store.instruments.sampler.releaseAll();\r\n        // state.focusIndex = state.lastFocus;\r\n        reserveTasks.forEach(id => clearTimeout(id));\r\n        dispatcher.system.setReserveTasks([]);\r\n        dispatcher.score.setScoreState(state);\r\n\r\n        store.instruments.harmony?.stop();\r\n    }\r\n\r\n    // 選択中の要素のバッキングパターンを鳴らす\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.scoreState;\r\n        const reserveTasks = store.reserveTasks;\r\n        const cache = state.elementCacheList[state.focusIndex];\r\n        const curChord = store.scoreData.chordList[state.focusIndex];\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n            const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, onIndex, symbol);\r\n            // const chordTime = 60 / cache.bpm * len;\r\n\r\n            const minute = detail.minute.head + detail.minute.tail;\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                detail.beatLen,\r\n                minute,\r\n                cache.bpm,\r\n                cache.beatSignature\r\n            );\r\n\r\n            BackingUtil.playBacking(store, store.reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.score.setScoreState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n    }\r\n}\r\n\r\nexport default HarmonizeUtil;\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\nimport { ChordBacking } from \"../../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\nimport { NoteKeySwitch } from \"../../../../../redux/store/score/scoreState\";\r\n\r\nnamespace BackingEditorInput {\r\n\r\n    export const main = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const data = store.scoreData;\r\n        const state = store.backingState;\r\n\r\n        if (state == null) return;\r\n\r\n        if (!state.isPreview) {\r\n            edit(e, state, keySwitch, dispatcher);\r\n        } else {\r\n\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const edit = (e: KeyboardEvent, state: BackingState.Editor, keySwitch: NoteKeySwitch, dispatcher: Dispatcher) => {\r\n\r\n        const pattern = state.pattern;\r\n\r\n        // 共通処理\r\n        common(e, state, dispatcher);\r\n\r\n        if (pattern != null) {\r\n            if (pattern.channelIndex === -1) {\r\n                patternNormalMode(e, state, pattern, dispatcher);\r\n            } else {\r\n                patternDetailMode(e, state, pattern, keySwitch.sustainMode, dispatcher);\r\n            }\r\n        }\r\n    }\r\n\r\n    const common = (e: KeyboardEvent, state: BackingState.Editor, dispatcher: Dispatcher) => {\r\n\r\n        switch (e.key) {\r\n            case 'b': {\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n            case 'z': {\r\n                const test: ChordBacking = {\r\n                    voicingList: BackingUtil.getVoicingListFromTable(state.voicingTable),\r\n                    pattern: state.pattern == null ? null : BackingUtil.buildPatternProps(state.pattern),\r\n                    hasError: state.hasError\r\n                }\r\n                console.log('source: ' + DataUtil.gZip(JSON.stringify(test)));\r\n                console.log('source: ' + JSON.stringify(test));\r\n            }\r\n                break;\r\n            case ' ': {\r\n                if (!state.hasError) {\r\n                    dispatcher.backing.testBacking();\r\n                }\r\n            }\r\n                break;\r\n            case 'Enter': {\r\n                dispatcher.backing.mappingEditorToScore();\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * パターン編集の通常モード\r\n     * @param e \r\n     * @param state \r\n     * @param pattern \r\n     * @param dispatcher \r\n     */\r\n    const patternNormalMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, dispatcher: Dispatcher) => {\r\n\r\n        const update = () => dispatcher.backing.setState(state);\r\n        switch (e.key) {\r\n            case 'ArrowLeft': {\r\n                dispatcher.backing.movePatternColumn(false);\r\n            }\r\n                break;\r\n            case 'ArrowRight': {\r\n                dispatcher.backing.movePatternColumn(true);\r\n            }\r\n                break;\r\n            case 'ArrowUp': {\r\n                dispatcher.backing.incrementVel(1);\r\n            }\r\n                break;\r\n            case 'ArrowDown': {\r\n                dispatcher.backing.incrementVel(-1);\r\n            }\r\n                break;\r\n            case 'a': {\r\n                dispatcher.backing.addPatternColumn();\r\n            }\r\n                break;\r\n            case 'w': {\r\n                dispatcher.backing.switchLayer();\r\n            }\r\n                break;\r\n            case 'e': {\r\n                dispatcher.backing.switchMode();\r\n            }\r\n                break;\r\n            case '1': {\r\n                dispatcher.backing.setCurrentDivRate(16);\r\n            }\r\n                break;\r\n            case '2': {\r\n                dispatcher.backing.setCurrentDivRate(8);\r\n            }\r\n                break;\r\n            case '3': {\r\n                dispatcher.backing.setCurrentDivRate(4);\r\n            }\r\n                break;\r\n            case '4': {\r\n                dispatcher.backing.setCurrentDivRate(2);\r\n            }\r\n                break;\r\n            case '5': {\r\n                dispatcher.backing.setCurrentDivRate(1);\r\n            }\r\n                break;\r\n            case '.': {\r\n                dispatcher.backing.toggleCurrentDivHalf();\r\n            }\r\n                break;\r\n            case 'Delete': {\r\n                dispatcher.backing.deleteColumn();\r\n            }\r\n                break;\r\n            case 's': {\r\n                pattern.channelIndex = 0;\r\n                update();\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * パターン編集の詳細モード\r\n     * @param e \r\n     * @param state \r\n     * @param pattern \r\n     * @param isEdit \r\n     * @param dispatcher \r\n     */\r\n    const patternDetailMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, isEdit: boolean, dispatcher: Dispatcher) => {\r\n\r\n        const update = () => dispatcher.backing.setState(state);\r\n        if (!isEdit) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft': {\r\n                    dispatcher.backing.movePatternColumn(false);\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    dispatcher.backing.movePatternColumn(true);\r\n                }\r\n                    break;\r\n                case 'ArrowUp': {\r\n                    dispatcher.backing.moveChannelIndex(false);\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.backing.moveChannelIndex(true);\r\n                }\r\n                    break;\r\n                case 's': {\r\n                    pattern.channelIndex = -1;\r\n                    update();\r\n                }\r\n                    break;\r\n                case 'a': {\r\n                    const curNotes = dispatcher.backing.getNotes();\r\n                    \r\n                    const hasStaccato = () => {\r\n                        const layer = pattern.layers[pattern.layerIndex];\r\n                        const search = layer.table.find((record) => {\r\n                            const cell = record[pattern.lenIndex];\r\n                            if (cell != null && cell.signal === 's') return cell;\r\n                        });\r\n                        return search != undefined;\r\n                    }\r\n                    // 同列にスタッカートがある場合、スタッカートを設定\r\n                    const signal = !hasStaccato() ? 'n' : 's';\r\n                    const notes: BackingState.NoteStatus | null = curNotes == null ? { signal, timing: 0, velAdj: 0 } : null;\r\n                    dispatcher.backing.setNotes(notes);\r\n                    dispatcher.backing.updateErrorState();\r\n                }\r\n                    break;\r\n            }\r\n        } else {\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const baseVel = layer.velocityList[pattern.layerIndex];\r\n            const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n            const cell = layer.table[channelIndex][pattern.lenIndex];\r\n\r\n            if (cell != null) {\r\n                let tempTiming = cell.timing == undefined ? 0 : cell.timing;\r\n                let tempVelAdj = cell.velAdj == undefined ? 0 : cell.velAdj;\r\n                const vel = baseVel + tempVelAdj;\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        if (vel < 10) {\r\n                            tempVelAdj++;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        if (vel > 1) {\r\n                            tempVelAdj--;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowLeft': {\r\n                        if (tempTiming > -10) {\r\n                            tempTiming--;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        if (tempTiming < 10) {\r\n                            tempTiming++;\r\n                        }\r\n                    }\r\n                        break;\r\n                }\r\n                if (tempVelAdj !== 0) {\r\n                    cell.velAdj = tempVelAdj;\r\n                } else {\r\n                    delete cell.velAdj;\r\n                }\r\n                if (tempTiming != 0) {\r\n                    cell.timing = tempTiming;\r\n                } else {\r\n                    delete cell.timing;\r\n                }\r\n                update();\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default BackingEditorInput;","import styled, { css } from \"styled-components\";\r\n\r\nexport namespace SideFormStyles {\r\n\r\n    export const ___CSS_FORM = css`\r\n        display: inline-block;\r\n        /* width: 100px; */\r\n        height: 25px;\r\n        background-color: #bdbdbd;\r\n        border: 1px solid #000;\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        color: #303030;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        text-align: center;\r\n    `;\r\n\r\n    export const ___CSS_TITLE = css`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 26px;\r\n        /* background-color: #f0f0f0; */\r\n        background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n        border: 1px solid #222222;\r\n        font-size: 20px;\r\n        color: #ffffff;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        box-sizing: border-box;\r\n        /* border: 1px solid #c50000; */\r\n        text-align: center;\r\n    `;\r\n\r\n    export const createNumberForm = (value: number, isEnable: boolean,\r\n         onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n         min: number, max:number, step:number) => {\r\n\r\n        return (\r\n            <_NumberForm isEnable={isEnable}>\r\n                <input\r\n                    type=\"number\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"range\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </_NumberForm>\r\n        );\r\n    }\r\n\r\n    const _NumberForm = styled.div<{\r\n        isEnable: boolean;\r\n    }>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 55px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 5px;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n    `;\r\n}","import { stat } from \"fs\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport BackingEditorInput from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    // プレビュー再生時\r\n    if (state.isPreview) {\r\n        switch (e.key) {\r\n            case ' ': {\r\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n        return;\r\n    } else {\r\n        if (store.scoreState.hideMenu === 'none') {\r\n            if (isElement) {\r\n                if (keySwitch.control) {\r\n                    switch (e.key) {\r\n                        case 'c': {\r\n                            const element = data.chordList[state.focusIndex];\r\n                            if (element.type === \"chord\") {\r\n                                const detail = element.detail as DetailChord;\r\n                                if (detail.root != null) {\r\n                                    dispatcher.score.cloneBacking();\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'x': {\r\n                            dispatcher.score.copyElementList();\r\n                        }\r\n                            break;\r\n                        case 'v': {\r\n                            if (state.copiedElementList != null) {\r\n                                dispatcher.score.pasteElementList();\r\n                            } else if (state.cloneBacking != null) {\r\n\r\n                                const element = data.chordList[state.focusIndex];\r\n                                if (element.type === \"chord\") {\r\n                                    const detail = element.detail as DetailChord;\r\n                                    if (detail.root != null) {\r\n                                        dispatcher.score.pastBacking();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 's': {\r\n                            // dispatcher.score.saveFile();\r\n                            DataUtil.saveFile(JSON.stringify(data), state);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.distMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.moveDist(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.moveDist(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.sustainMode) {\r\n                    switch (e.key) {\r\n                        case config.decRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(false);\r\n                        }\r\n                            break;\r\n                        case config.incRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(true);\r\n                        }\r\n                            break;\r\n                        case config.decBeat: {\r\n                            dispatcher.score.incrementBeatLen(false);\r\n                        }\r\n                            break;\r\n                        case config.incBeat: {\r\n                            dispatcher.score.incrementBeatLen(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minHeadMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, 1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, -1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minTailMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, -1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, 1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.chordMode) {\r\n                    // switch (e.key) {\r\n                    //     case 'ArrowUp': {\r\n                    //         dispatcher.symbol.toNext(false);\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowDown': {\r\n                    //         dispatcher.symbol.toNext(true);\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowLeft': {\r\n                    //         dispatcher.symbol.toBase();\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowRight': {\r\n                    //         dispatcher.symbol.toDerive();\r\n                    //     }\r\n                    //         break;\r\n                    // }\r\n                } else if (keySwitch.symbolMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.symbol.toNext(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.symbol.toNext(true);\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.symbol.toBase();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.symbol.toDerive();\r\n                        }\r\n                            break;\r\n                    }\r\n                } else {\r\n                    NoteBasicInput(e, store, dispatcher);\r\n                }\r\n            }\r\n        } else if (store.scoreState.hideMenu === 'backing') {\r\n            BackingEditorInput.main(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const state = store.scoreState;\r\n    if (!state.isPreview) {\r\n        // if (state.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case 'Control': {\r\n                keySwitch.control = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.distMode: {\r\n                if (!keySwitch.control) {\r\n                    keySwitch.distMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.edit1: {\r\n                if (!(keySwitch.control || keySwitch.distMode)) {\r\n                    keySwitch.sustainMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'v': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode)) {\r\n                    keySwitch.chordMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.edit2: {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode)) {\r\n                    keySwitch.symbolMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'd': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode)) {\r\n                    keySwitch.minHeadMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'g': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode || keySwitch.minHeadMode)) {\r\n                    keySwitch.minTailMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n        }\r\n        // }\r\n    }\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                }\r\n                    break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(cache.scale, Number(e.key) - 1);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.left: {\r\n            if(state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(false);\r\n            } else {\r\n                dispatcher.score.releaseRange(false);\r\n            }\r\n        }\r\n            break;\r\n        case config.right: {\r\n            if(state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(true);\r\n            } else {\r\n                dispatcher.score.releaseRange(true);\r\n            }\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.up: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.down: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'm': {\r\n            dispatcher.score.addAlterElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case ' ': {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        }\r\n            break;\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BeatSignature, DetailAlter as DetailAlter, AlterType, ModulateRelation, TempoRelation } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormAlter = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailAlter;\r\n\r\n    const type = detail.alterType;\r\n\r\n    const update = () => {\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const createAlertTypeItem = (value: AlterType | '-', isActive: boolean): JSX.Element => {\r\n        const type = value === '-' ? null : value;\r\n        return <_Form isActive={isActive}\r\n            onClick={() => {\r\n                //値が変わった時のみ処理を実行\r\n                if (detail.alterType !== type) {\r\n                    detail.alterType = type;\r\n                    // 全ての項目を初期化\r\n                    detail.modRel = null;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    detail.tempoRel = null;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    detail.beatSignature = '4/4';\r\n                    update();\r\n                }\r\n            }}> {value}</_Form >;\r\n    }\r\n\r\n    const createModulateRelationItem = (value: ModulateRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'modulate' && rel == detail.modRel}\r\n            onClick={() => {\r\n                if (detail.modRel !== rel) {\r\n                    detail.modRel = rel;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createTempoRelationItem = (value: TempoRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'tempo' && rel == detail.tempoRel}\r\n            onClick={() => {\r\n                if (detail.tempoRel !== rel) {\r\n                    detail.tempoRel = rel;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createBeatItem = (value: BeatSignature): JSX.Element => {\r\n        return <_Form isActive={detail.alterType === 'beat' && detail.beatSignature === value}\r\n            onClick={() => {\r\n                if (detail.beatSignature !== value) {\r\n                    detail.beatSignature = value;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const donmmItemJsxList = <_ParamDiv isEnable={detail.modRel === 'domm'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'domm' && value == detail.dommVal}\r\n            onClick={() => {\r\n                detail.dommVal = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>\r\n    })}</_ParamDiv>;\r\n\r\n    const keyAdjItemJsxList = <_ParamDiv isEnable={detail.modRel === 'key'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'key' && value == detail.keyAdj}\r\n            onClick={() => {\r\n                detail.keyAdj = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>;\r\n    })}</_ParamDiv>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Group isEnable={true}>\r\n                <_CategoryLabel>Type</_CategoryLabel>\r\n                {createAlertTypeItem('-', type == null)}\r\n                {createAlertTypeItem('modulate', type === 'modulate')}\r\n                {createAlertTypeItem('tempo', type === 'tempo')}\r\n                {createAlertTypeItem('beat', type === 'beat')}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'modulate'}>\r\n                <_CategoryLabel>Modulate</_CategoryLabel>\r\n                {createModulateRelationItem('-')}\r\n                {createModulateRelationItem('domm')}\r\n                {donmmItemJsxList}\r\n                {createModulateRelationItem('parallel')}\r\n                {createModulateRelationItem('relative')}\r\n                {createModulateRelationItem('key')}\r\n                {keyAdjItemJsxList}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'tempo'}>\r\n                <_CategoryLabel>Tempo</_CategoryLabel>\r\n                {createTempoRelationItem('-')}\r\n                {createTempoRelationItem('diff')}\r\n                {SideFormStyles.createNumberForm(detail.tempoDiff,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'diff',\r\n                    (e) => {\r\n                        detail.tempoDiff = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, -100, 100, 1)}\r\n                {createTempoRelationItem('rate')}\r\n                {SideFormStyles.createNumberForm(detail.tempoRate,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'rate',\r\n                    (e) => {\r\n                        detail.tempoRate = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n                {createTempoRelationItem('abs')}\r\n                {SideFormStyles.createNumberForm(detail.tempoAbs,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'abs',\r\n                    (e) => {\r\n                        detail.tempoAbs = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'beat'}>\r\n                <_CategoryLabel>Beat</_CategoryLabel>\r\n                {createBeatItem('2/4')}\r\n                {createBeatItem('4/4')}\r\n                {createBeatItem('3/4')}\r\n                {createBeatItem('6/8')}\r\n                {createBeatItem('9/8')}\r\n                {createBeatItem('12/8')}\r\n            </_Group>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormAlter;\r\n\r\nconst _Wrap = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        background-color: #b3b5c5;\r\n        `;\r\n\r\nconst _Group = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 0 0 0 4px;\r\n    ${props => props.isEnable ? '' : css`\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n`}\r\n        `;\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        margin-top: 1px;\r\n        width: 100%;\r\n        background-color: #c1cdd4;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\nconst _ParamDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n        margin: 1px;\r\n        background-color: #070707;\r\n        ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n        `;\r\nconst _ParamItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        width: 29px;\r\n        background-color: #dddddd;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\n\r\nconst _ValueForm = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 24px;\r\n        /* margin: 5px 0 0 0; */\r\n        text-align: left;\r\n        background-color: #ececec;\r\n\r\n        & * {\r\n            display: inline-block;\r\n            box-sizing: border-box;\r\n            vertical-align: top;\r\n    }\r\n        & input:nth-child(1) {\r\n            background-color: #dddddd;\r\n            width: 60px;\r\n            height: calc(100% - 4px);\r\n            margin: 2px 0 0 0;\r\n            border: 1px solid #9b9b9b;\r\n            border-radius: 4px;\r\n    }\r\n        & input:nth-child(2) {\r\n            margin-left: 5px;\r\n            background-color: #f00;\r\n            width: calc(100% - 70px);\r\n            height: 100%;\r\n    }\r\n        `;","import styled, { css } from \"styled-components\";\r\n\r\nconst JUDGE_INFO_LIST: {\r\n    value: number, label: string\r\n}[] = [\r\n        { value: -2, label: '-/8' },\r\n        { value: -1, label: '-/16' },\r\n        { value: 0, label: '±0' },\r\n        { value: 1, label: '+/16' },\r\n        { value: 2, label: '+/8' }\r\n    ];\r\n\r\nexport const MinuteForm = (props: {\r\n    isHead: boolean;\r\n    value: number;\r\n    setValue: (value: number) => void;\r\n}) => {\r\n\r\n    const rateMinus = props.value >= 0 ? 0 : Math.abs(props.value) * 50;\r\n    const ratePlus = props.value <= 0 ? 0 : Math.abs(props.value) * 50;\r\n\r\n    const createJudgeItem = (key: number, value: number, label: string) => {\r\n        const isActive = props.value === value;\r\n        return (\r\n            <_JudgeItem key={key} isActive={isActive} onClick={() => props.setValue(value)} >\r\n                {!isActive ? '' : label}\r\n            </_JudgeItem>\r\n        )\r\n    }\r\n    const isRed = Math.abs(props.value) === 1;\r\n\r\n    const JudgeJsxList = JUDGE_INFO_LIST.map((judge, i) => {\r\n        return createJudgeItem(i, judge.value, judge.label);\r\n    });\r\n\r\n    return (\r\n        <_Wrap isHead={props.isHead}>\r\n            <_View>\r\n                <_ViewFrame isLeft={true} isRed={isRed} rate={!props.isHead ? rateMinus : ratePlus}><div /></_ViewFrame>\r\n                <_ViewFrame isLeft={false} isRed={isRed} rate={!props.isHead ? ratePlus : rateMinus}><div /></_ViewFrame>\r\n            </_View>\r\n            <_Judge>{!props.isHead ? JudgeJsxList : JudgeJsxList.reverse()}</_Judge>\r\n        </_Wrap>\r\n    );\r\n};\r\n\r\nexport default MinuteForm;\r\n\r\nconst _Wrap = styled.div<{\r\n    isHead: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #bfd380;\r\n    text-align: left;\r\n`;\r\nconst _Judge = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 9;\r\n`;\r\n\r\nconst _JudgeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(20% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    background-color: #0000001a;\r\n    /* border: 1px solid #4d4d4d91; */\r\n    border-radius: 4px;\r\n    ${props => !props.isActive ? '' : css`\r\n        border: 1px solid #c00000c5;\r\n    `}\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    /* opacity: 0.15; */\r\n    &:hover {\r\n        background-color: #ffffff24;\r\n    }\r\n`;\r\nconst _View = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    /* position: absolute;\r\n    top: 0;\r\n    left: 0; */\r\n    z-index: 8;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ViewFrame = styled.div<{\r\n    isRed: boolean;\r\n    isLeft: boolean;\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 16px;\r\n    margin-top: 7px;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n\r\n    & div {\r\n        position: absolute;\r\n        top: 0;\r\n        height: 100%;\r\n        width: ${props => props.rate}%;\r\n        ${props => props.isRed ? css`\r\n            background: linear-gradient(to right, #0066ff, #7691a3);\r\n        ` : css`\r\n            background: linear-gradient(to left, #ff0000, #a37676);\r\n        `}\r\n        ${props => props.isLeft ? css`\r\n            right: 0;\r\n            border-radius: 10px 0 0 10px;\r\n        ` : css`\r\n            left: 0;\r\n            border-radius: 0 10px 10px 0;\r\n        `}\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\nimport MinuteForm from \"./minuteForm\";\r\n\r\n/**\r\n * コードブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i}\r\n                isExist={isExist}\r\n                isActive={detail.beatLen === i + 1}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    data.chordList = data.chordList.slice();\r\n                    detail.beatLen = (i + 1);\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n        const isDiatonic = root != null && scaleIndexies.includes(root.index);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={isDiatonic}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    if (root == null) {\r\n                        detail.symbolKey = 'major';\r\n                    }\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {TheoryUtil.getDegreeRoot(root)} ({TheoryUtil.getRootName(root, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    /**\r\n     * シンコペーションの入力フォームを生成するコールバック\r\n     * @param isHead 頭対象フラグ（falseの場合後ろが対象）\r\n     * @returns JSX\r\n     */\r\n    const createMinuteForm = (isHead: boolean): JSX.Element => {\r\n        const minute = detail.minute;\r\n        const [value, setValue]: [number, (value: number) => void] = isHead ? [\r\n            minute.head,\r\n            (value: number) => {\r\n                minute.head = value;\r\n                dispatcher.score.setScoreData(store.scoreData);\r\n            }\r\n        ] : [\r\n            minute.tail,\r\n            (value: number) => {\r\n                minute.tail = value;\r\n                dispatcher.score.setScoreData(store.scoreData);\r\n            }\r\n        ];\r\n        return <MinuteForm value={value} setValue={setValue} isHead={isHead} />\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_CategoryLabel>{'Beat length'}</_CategoryLabel>\r\n                <_BeatDiv>\r\n                    {beatItemsJsx}\r\n                </_BeatDiv>\r\n                <_Minute>\r\n                    <_CategoryLabel>{'Minute head'}</_CategoryLabel>\r\n                    {createMinuteForm(true)}\r\n                    {/* <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                    <_CategoryLabel>{'Minute tail'}</_CategoryLabel>\r\n                    {createMinuteForm(false)}\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    {/* <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_RootDiv>\r\n                    {rootItemsJsx}\r\n                </_RootDiv>\r\n                <_SymbolDiv\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_SymbolDiv>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 100px; */\r\n    text-align: left;\r\n    background-color: #979797;\r\n`;\r\n\r\nconst _BeatDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 3px;\r\n        width: calc(100% - 6px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isActive ? '' : css`\r\n            /* border: solid 1px #fff; */\r\n        `}\r\n        box-sizing: border-box;\r\n        border-radius: 6px;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    margin-top: 5px;\r\n    width: 100%;\r\n    /* height: 360px; */\r\n    text-align: left;\r\n    /* background-color: #000000; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _RootDiv = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    margin: 0 0 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #e6e6e6; */\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #90bbcc;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #d1c521b8;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    color: #616161;\r\n    ${props => !props.isDiatonic ? '' : css`color: #ffffff;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #99999940;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #cc6363b8;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #6374ccb8;`}\r\n    }\r\n`;\r\n\r\nconst _SymbolDiv = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 93px);\r\n    margin: 0 1px 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    background-color: #a1cc90;\r\n    ${props => !props.isActive ? '' : css`background-color: #d1c521b8;`}\r\n    color: #fff;\r\n    ${props => !props.isDiatonic ? '' : css`color: #fff;`}\r\n    /* & span {\r\n        color: #f000;\r\n    } */\r\n    &:hover {\r\n        background-color: #dddddd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #cc6363b8;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const update = () => {\r\n        data.chordList = data.chordList.slice();\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const scaleItemJsxList: JSX.Element[] = TheoryUtil.SCALE_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? TheoryUtil.KEY12_MAJOR_SCALE_LIST : TheoryUtil.KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n    const rateItemJsxList: JSX.Element[] = TheoryUtil.BEAT_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.beatSignature === item} onClick={() => {\r\n                detail.beatSignature = item as BeatSignature;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            {SideFormStyles.createNumberForm(detail.bpm, true, (e) => {\r\n                detail.bpm = e.currentTarget.valueAsNumber;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }, 30, 220, 1)}\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 50%;\r\n    margin: 1px 0 0 0;\r\n\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 100%;\r\n    margin: 1px 0 0 0;\r\n    \r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    margin: 1px 0 0 0;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../../utils/dummyUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        DummyUtil.SECTION_CATEGORY.forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        const splitList = detail.labelName.split(' ');\r\n        DummyUtil.SECTION_NO.forEach((item) => {\r\n            const isActive = splitList[splitList.length - 1] === item.toString();\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(`${splitList[0]} ${item}`);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_SelectDiv>\r\n                <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n                <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n            </_SelectDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #b89b9b; */\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _SelectDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    background-color: #acacac;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(60% - 4px);\r\n    margin: 0 2px 0 2px;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(40% - 2px);\r\n    margin: 0 2px 0 0;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #6182b4; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #61b4b0; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormAlter from \"./sideFormAlter\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst HarmSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'alter': return <SideFormAlter />;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const scaleIndexies = cache.scale === 'major' ? [0, 2, 4, 5, 7, 9, 11] : [0, 2, 3, 5, 7, 8, 10];\r\n    const scaleList = scaleIndexies.map(value => (cache.keyIndex + value) % 12);\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = TheoryUtil.getIntervalValues((root.index + cache.keyIndex) % 12, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{TheoryUtil.IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        // 2オクターブ分表示\r\n        for (let i = 0; i < 14; i++) {\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            {/* <_Info>{tipJsxList}</_Info> */}\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    /* background-color: #4b4b4b; */\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    /* border: 1px solid #ffffffda; */\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    ` : css`\r\n    background: radial-gradient(#d6cec3, #a89889);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    ` : css`\r\n        background: radial-gradient(#e7a144, #72552a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternDetail = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    /** 基準となるベロシティ */\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cell = layer.table[channelIndex][pattern.lenIndex];\r\n    const baseVel = layer.velocityList[pattern.lenIndex];\r\n    const timing = (cell == null || cell.timing == undefined) ? 0 : cell.timing;\r\n    const velAdj = (cell == null || cell.velAdj == undefined) ? 0 : cell.velAdj;\r\n\r\n    return (<_Wrap>\r\n        {\r\n            // ノーツが設定されていない場合は何も表示しない\r\n            cell == null ? <></> : (<>\r\n                <_DelayDiv>\r\n                    <_Label>delay</_Label>\r\n                    <_TimingValue type=\"range\" min={-10} max={10} step={1} value={timing} onChange={e => {\r\n                        cell.timing = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_DelayDiv>\r\n                <_VelocityDiv>\r\n                    <_Label>velocity</_Label>\r\n                    <_VelFrame isFocus={false}>\r\n                        <_VelItem value={baseVel} isEdit={false}/>\r\n                    </_VelFrame>\r\n                    <_VelFrame isFocus={store.scoreState.keySwitch.sustainMode}>\r\n                        <_VelItem value={baseVel + velAdj} isEdit={velAdj != 0} />\r\n                    </_VelFrame>\r\n                    {/* <_Value type=\"range\" min={-10} max={10} step={1} value={velAdj} onChange={e => {\r\n                        cell.velAdj = Number(e.target.value);\r\n                        update();\r\n                    }} /> */}\r\n                </_VelocityDiv>\r\n            </>)\r\n        }\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternDetail;\r\n\r\nconst VEL_DIV_WIDTH = 180;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    line-height: 18px;\r\n    margin-top: 14px;\r\n    margin-left: 5px;\r\n    width: 80px;\r\n    background-color: #868686;\r\n    color: #e7e7e7;\r\n    border: 1px solid #616161;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DelayDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - ${VEL_DIV_WIDTH + 1}px);\r\n    height: 100%;\r\n    background-color: #9c9c9c;\r\n`;\r\n\r\nconst _TimingValue = styled.input<{\r\n}>`\r\n    display: inline-block;\r\n    outline: none;\r\n    margin: 20px 0 0 8px;\r\n    width: calc(100% - 100px);\r\n    height: 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VelocityDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${VEL_DIV_WIDTH}px;\r\n    height: 100%;\r\n    margin-left: 1px;\r\n    /* background-color: #9a2020; */\r\n`;\r\n\r\nconst _VelFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 46px;\r\n    height: 100%;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffffff17;\r\n    `}\r\n    /* background-color: #63a0a1;\r\n    border-radius: 20px; */\r\n`;\r\n\r\nconst _VelItem = styled.div<{\r\n    value: number;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 5px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #ddc35cae;\r\n    `}\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate * adjustRate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {itemJsxList}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternPedal = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    // 左手のレイヤー時のみ固定表示\r\n    const layer = pattern.layers[0];\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n\r\n    let cur: BackingState.PedalAction = 'off';\r\n    pattern.pedalActs.forEach((pedal, i) => {\r\n        const isActive = pattern.layerIndex === 0 && pattern.lenIndex === i;\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n        let isUse = false;\r\n        const prev = cur;\r\n        if (prev === 'change') {\r\n            cur = 'on';\r\n        }\r\n        if (pedal != null) {\r\n            isUse = true;\r\n            cur = pedal;\r\n        }\r\n        itemJsxList.push(\r\n            <_Column key={i} rate={rate} isActive={isActive} isUse={isUse} onClick={() => {\r\n                if (prev === 'off') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'on'; break;\r\n                        case 'on': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'on') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = 'change'; break;\r\n                        case 'change': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'change') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                }\r\n                // 終端までnullで更新\r\n                if (i < pattern.pedalActs.length - 1) {\r\n                    for (let j = i + 1; j < pattern.pedalActs.length; j++) {\r\n                        pattern.pedalActs[j] = null;\r\n                    }\r\n                }\r\n                update();\r\n            }}><div><_Item action={cur} /></div></_Column>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternPedal;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n    /* background-color: #4e4e4e; */\r\n`;\r\n\r\n\r\nconst _Column = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #00635eac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #179483ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    white-space: normal;\r\n\r\n    &>div {\r\n        display: inline-block;\r\n        width: 10px;\r\n        height: calc(100% - 2px);\r\n        background-color: #ffffffa0;\r\n        border-radius: 6px;\r\n        margin: 1px 0;\r\n        ${props => props.isUse ? '' : css`\r\n            background-color: #ffffff2f;\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    action: BackingState.PedalAction;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 14px;\r\n    border: 1px solid #9c9c9c;\r\n    ${props => {\r\n        switch (props.action) {\r\n            case 'off': return css`\r\n                margin-top: 0;\r\n                background-color: #271db8;\r\n            `;\r\n            case 'change': return css`\r\n                margin-top: 15px;\r\n                background-color: #f3d631;\r\n            `;\r\n            case 'on': return css`\r\n                margin-top: 30px;\r\n                background-color: #e03030;\r\n            `;\r\n        }\r\n    }}\r\n    box-sizing: border-box;\r\n    border-radius: 6px;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n    const curLayer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n    const layerJsxList = useMemo(() => {\r\n\r\n        const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n        pattern.layers.forEach((layer, j) => {\r\n\r\n            const jsxLsit: JSX.Element[] = [];\r\n            for (let i = 0; i < channelCount; i++) {\r\n                const notesJsxLsit: JSX.Element[] = [];\r\n\r\n                layer.noteDivList.forEach((note, k) => {\r\n                    // データ上は下から数えるため、表示のループは逆回転する\r\n                    const channelIndex = (channelCount - 1) - i;\r\n                    const isActive = pattern.layerIndex === j && pattern.lenIndex === k;\r\n                    const cell = layer.table[channelIndex][k];\r\n                    const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                    const isUse = cell != null;\r\n                    // 前面にあるレイヤーのみエラー判定をする\r\n                    const isError = pattern.layerIndex !== j ? false :\r\n                        isUse && BackingUtil.checkOverlapBackLayer(pattern.layers, j, channelIndex, k);\r\n                    const isEdit = isActive && pattern.channelIndex === i;\r\n                    let rate = note.rate * adjustRate;\r\n                    if (note.isDot) rate /= 1.5;\r\n                    if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n                    let viewSignal: BackingState.NoteSignal | null = null;\r\n                    if (cell != null) {\r\n                        viewSignal = cell.signal;\r\n                        if (k > 0) {\r\n                            const prevCell = layer.table[channelIndex][k - 1];\r\n                            if (prevCell != null && prevCell.signal === 't') {\r\n                                viewSignal = 't';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const hasStaccato = () => {\r\n                        const search = layer.table.find((record) => {\r\n                            const cell = record[pattern.lenIndex];\r\n                            if (cell != null && cell.signal === 's') return cell;\r\n                        });\r\n                        return search != undefined;\r\n                    }\r\n                    notesJsxLsit.push(\r\n                        <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                            <_State\r\n                                // isUse={isUse}\r\n                                isError={isError}\r\n                                signal={viewSignal}\r\n                                isBack={pattern.layerIndex !== j}\r\n                                // クリック\r\n                                onClick={() => {\r\n                                    if (cell == null) {\r\n                                        // 同列にスタッカートがある場合、スタッカートを設定\r\n                                        const signal = !hasStaccato() ? 'n' : 's';\r\n                                        setNotesStatus({ signal, timing: 0, velAdj: 0 });\r\n                                    } else {\r\n                                        setNotesStatus(null);\r\n                                    }\r\n                                    curLayer.table = curLayer.table.slice();\r\n                                    update();\r\n                                    dispatcher.backing.updateErrorState();\r\n                                }}\r\n                                // 右クリック\r\n                                onContextMenu={() => {\r\n                                    pattern.channelIndex = i;\r\n                                    pattern.lenIndex = k;\r\n                                    update();\r\n                                }}\r\n                            />\r\n                        </_Notes>\r\n                    );\r\n                });\r\n                jsxLsit.push(\r\n                    <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                        {notesJsxLsit}\r\n                    </_Record>\r\n                );\r\n            }\r\n            layerJsxList[j] = jsxLsit;\r\n        });\r\n        return layerJsxList;\r\n    }, [\r\n        pattern.channels, pattern.layerIndex, pattern.lenIndex,\r\n        curLayer.noteDivList, curLayer.table, pattern.channelIndex\r\n    ]);\r\n\r\n    // 選択中のレイヤーを表に表示する\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    // isUse: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => props.signal == null ? '' : css<{\r\n    isBack: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n}>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        ${props => props.signal !== 's' ? '' : css`\r\n            border-radius: 8px;\r\n            background: linear-gradient(to bottom, #009e0d, #02fc49, #009e0d);\r\n        `}\r\n        ${props => props.signal !== 't' ? '' : css`\r\n            height: calc(100% - 8px);\r\n            margin: 4px 0 0 1px;\r\n            background: linear-gradient(to bottom, #9e4c00, #fc6a02, #9e4c00);\r\n        `}\r\n        // エラーあり\r\n        ${props => !props.isError ? '' : css`\r\n            opacity: 0.5;\r\n        `}\r\n        // 裏面のレイヤー\r\n        ${props => !props.isBack ? '' : css`\r\n            background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.5;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => props.signal == null ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternVelocity = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.velocityList.forEach((vel, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} >\r\n                <_Value value={vel} />\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternVelocity;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #001763ac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #173494ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Value = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 6px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternDetail from \"./patternDetail\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternPedal from \"./patternPedal\";\r\nimport PatternTable from \"./patternTable\";\r\nimport PatternVelocity from \"./patternVelocity\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const divs = layer.noteDivList;\r\n    const limitLen = BackingUtil.getLimitLen(chordInfo);\r\n    const useTotalLen = BackingUtil.getUsingLenFromDivs(divs, chordInfo);\r\n    const isLenOverError = 0 <= limitLen - useTotalLen;\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const viewRate = NOTES_1BAR_WIDTH / 4;\r\n\r\n    // メモリの数を算出\r\n    let memoriCount = chordInfo.beatLen * beatProps.beatMemoriCount;\r\n    memoriCount += chordInfo.minute.head + chordInfo.minute.tail;\r\n\r\n    const barMemoriCount = beatProps.beatMemoriCount === 4 ? 16 : 24;\r\n    const memoriWidth = NOTES_1BAR_WIDTH / barMemoriCount;\r\n    // メモリJSXの生成\r\n    const memoriJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < memoriCount + 1; i++) {\r\n        const pos = i;\r\n        let bean: { thickness: number, height: number, color: string } = { thickness: 1, height: 10, color: '#555' };\r\n        if (beatProps.beatMemoriCount === 4) {\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        } else {\r\n            switch (true) {\r\n                case pos % 24 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 6 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        }\r\n        memoriJsxList.push(\r\n            <_Memori\r\n                key={memoriJsxList.length}\r\n                width={memoriWidth}\r\n                height={bean.height}\r\n                color={bean.color}\r\n                thickness={bean.thickness}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n                <_MemoriList>{memoriJsxList}</_MemoriList>\r\n                {isLenOverError ? (\r\n                    <_ChordLenLine pos={limitLen * viewRate} />\r\n                ) : (\r\n                    // 定義した拍を超えた場合のみ表示\r\n                    <_OverCover pos={limitLen * viewRate} width={(useTotalLen - limitLen) * viewRate} />\r\n                )}\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n            {pattern.channelIndex === -1 ?\r\n                // ベロシティorペダル情報を表示\r\n                (pattern.mode === 'velocity' ? <PatternVelocity /> : <PatternPedal />) :\r\n                // セルごとの詳細情報を表示\r\n                <PatternDetail />\r\n            }\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\nconst _MemoriList = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    thickness: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.thickness}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _OverCover = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: ${props => props.width}px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #f8000053;\r\n    pointer-events: none;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;\r\n\r\nconst _ChordLenLine = styled.div<{\r\n    pos: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: 4px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #ffffffc7;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n    const channelCount = pattern.channels.length;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length + 1);\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length - 1);\r\n        update();\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap isError={props.soundFullName === '-'}>\r\n            <_Struct>{props.soundFullName}</_Struct>\r\n            <_Option isEnable={channelCount > 1} onClick={deleteRecord}>-</_Option>\r\n            <_Option isEnable={channelCount < BackingUtil.CHANNEL_MAX} onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ff0000c3;\r\n    `}\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)<{\r\n    isEnable: boolean;\r\n}>`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n    const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    const layerJsxList: JSX.Element[] = [];\r\n\r\n    if (state.pattern == null) return <></>;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channels = pattern.channels;\r\n    channels.forEach((channel, i) => {\r\n        let name = '-';\r\n        if (channel.octave !== -1) {\r\n            const soundIndex = chordRoot + TheoryUtil.IntervalRelationProps[symbol.structs[channel.structIndex]];\r\n            const octave = channel.octave + Math.floor(soundIndex / 12);\r\n            name = TheoryUtil.KEY12_SHARP_LIST[soundIndex % 12] + octave;\r\n        }\r\n        channelJsxList.push(\r\n            <ChannelItem key={i}\r\n                index={i}\r\n                soundFullName={name}\r\n            />\r\n        );\r\n    });\r\n\r\n    pattern.layers.forEach((layer, i) => {\r\n        const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\r\n        layerJsxList.push(\r\n            <_LayerItem key={i} isActive={pattern.layerIndex === i}\r\n                onClick={() => {\r\n                    if (i !== pattern.layerIndex) {\r\n                        dispatcher.backing.switchLayer();\r\n                    }\r\n                }}\r\n            >{labelName}</_LayerItem>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        <_Header>\r\n            {layerJsxList}\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n            <_ModeItem isActive={pattern.mode === 'velocity'}\r\n                onClick={() => {\r\n                    pattern.mode = 'velocity';\r\n                    dispatcher.backing.setState(state);\r\n                }}\r\n            >Velocity</_ModeItem>\r\n            <_ModeItem isActive={pattern.mode === 'pedal'}\r\n                onClick={() => {\r\n                    pattern.mode = 'pedal';\r\n                    dispatcher.backing.setState(state);\r\n                }}\r\n            >Pedal</_ModeItem>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #929292;\r\n`;\r\n\r\nconst _LayerItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #dad600;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997;\r\n`;\r\n\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #4fe419;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternOptions = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        layer.noteDivList = layer.noteDivList.slice();\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, isEnable: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={isEnable} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, true, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const isPermit3ren = ['2/4', '4/4', '4/3'].includes(chordInfo.init.beatSignature);\r\n    const isPermitDot = BackingUtil.isPermitDot(cur);\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot,\r\n            isPermitDot,\r\n            () => {\r\n                cur.isDot = !cur.isDot;\r\n                update();\r\n            })}\r\n        {createItem('1/3', cur.div3 === 1,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 1) cur.div3 = 0;\r\n                else cur.div3 = 1;\r\n                update();\r\n            })}\r\n        {createItem('2/3', cur.div3 === 2,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 2) cur.div3 = 0;\r\n                else cur.div3 = 2;\r\n                update();\r\n            })}\r\n    </_WrapLen>;\r\n\r\n    /** テーブルの行 */\r\n    const tableRecord = layer.table[channelIndex];\r\n    const curCell = pattern.channelIndex === -1 ? null :\r\n        tableRecord[pattern.lenIndex];\r\n\r\n    const isEnableTai = () => {\r\n        if(tableRecord == null) return false;\r\n\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 's') return cell;\r\n        });\r\n        const hasStaccato = search != undefined;\r\n        let isExistNext = false;\r\n        if(pattern.lenIndex < tableRecord.length - 1 && tableRecord[pattern.lenIndex + 1] != null) {\r\n            isExistNext = true;\r\n        }\r\n        return !hasStaccato && isExistNext;\r\n    };\r\n\r\n    const isNormalRow = () => {\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 't') return cell;\r\n        });\r\n        return search == undefined;\r\n    };\r\n\r\n    const setRowStaccato = (isSet: boolean) => {\r\n        layer.table.forEach((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null) {\r\n                cell.signal = isSet ? 's' : 'n';\r\n            }\r\n        });\r\n    }\r\n\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', curCell == null,\r\n            true,\r\n            () => {\r\n                tableRecord[pattern.lenIndex] = null;\r\n                update();\r\n            })}\r\n        {createItem('□', curCell != null && curCell.signal === 'n',\r\n            true,\r\n            () => {\r\n                if (curCell != null) {\r\n                    if(curCell.signal === 's') {\r\n                        setRowStaccato(false);\r\n                    } else {\r\n                        curCell.signal = 'n';\r\n                    }\r\n                } else {\r\n                    tableRecord[pattern.lenIndex] = { signal: 'n', timing: 0, velAdj: 0 };\r\n                }\r\n                update();\r\n            })}\r\n        {createItem('・', curCell != null && curCell.signal === 's',\r\n            curCell != null && isNormalRow(),\r\n            () => {\r\n                setRowStaccato(true);\r\n                update();\r\n            })}\r\n        {createItem('⁀', curCell != null && curCell.signal === 't',\r\n            isEnableTai(),\r\n            () => {\r\n                const status = curCell as BackingState.NoteStatus;\r\n                status.signal = 't'\r\n                update();\r\n            })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternOptions;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternOptions from \"./patternOptions\";\r\n\r\n/**\r\n * バッキングエディタ画面のパターン部分\r\n * @returns コンポーネント\r\n */\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    /**\r\n     * USEスイッチ押下時の処理\r\n     */\r\n    const useSwitchAction = () => {\r\n        if (!isUsePattern) {\r\n            const table = state.voicingTable as boolean[][];\r\n            const voicingStructs = BackingUtil.buildChannels(table);\r\n            const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n            state.pattern = {\r\n                layerIndex: 0,\r\n                lenIndex: 0,\r\n                channelIndex: -1,\r\n                channels,\r\n                isUsePedal: false,\r\n                mode: \"velocity\",\r\n                pedalActs: [null],\r\n                layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n            } as BackingState.Pattern;\r\n            update();\r\n        } else {\r\n            state.pattern = null;\r\n            update();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* ヘッダー部分（パターン利用スイッチ） */}\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button\r\n                        isActive={isUsePattern}\r\n                        onClick={useSwitchAction}\r\n                    >Use</_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternOptions /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #e00000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #ff0000;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\n\r\ntype StructInfo = {\r\n    /** ルートとの関係（オンコードを考慮してnullを許容する） */\r\n    relation: null | TheoryUtil.IntervalRelation;\r\n    structIndex: number;\r\n    isFlat: boolean;\r\n    /** オクターブの繰り上がり */\r\n    adjustOctave: number;\r\n};\r\n\r\n/**\r\n * ボイシングを定義するテーブルのコンポーネント\r\n * @returns コンポーネント\r\n */\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const table = state.voicingTable;\r\n    const pattern = state.pattern;\r\n    // 選択可能なチャンネル数\r\n    const channelLimitNum = pattern == null ? BackingUtil.OCTAVE_NUM * BackingUtil.STRUCT_NUM : pattern.channels.length;\r\n\r\n    // return useMemo(() => {\r\n\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n    const chordRootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n    const rootName = TheoryUtil.getRootName(chordInfo.root, chordInfo.init.keyIndex);\r\n    let chordFullName = rootName + symbol.name;\r\n\r\n    let chordOnIndex = -1;\r\n    // オンコードが設定されている場合\r\n    if (chordInfo.on != null) {\r\n        const onName = TheoryUtil.getRootName(chordInfo.on, chordInfo.init.keyIndex);\r\n        chordFullName = `${chordFullName}/${onName}`;\r\n\r\n        chordOnIndex = (chordInfo.on.index + chordInfo.init.keyIndex) % 12;\r\n    }\r\n\r\n    // 構成音情報を算出\r\n    let soundInfoList: StructInfo[] = symbol.structs.map(struct => {\r\n        const relation = struct;\r\n        const interval = TheoryUtil.IntervalRelationProps[relation];\r\n        const structIndex = (chordRootIndex + interval) % 12;\r\n        const adjustOctave = Math.floor((chordRootIndex + interval) / 12);\r\n        const isFlat = TheoryUtil.isFlatFromRelation(relation);\r\n        return {\r\n            relation, structIndex, isFlat, adjustOctave\r\n        }\r\n    });\r\n    // オンコードを考慮\r\n    if (chordOnIndex !== -1) {\r\n        let sameIndex = -1;\r\n        soundInfoList.some((info, i) => {\r\n            if (info.structIndex === chordOnIndex) {\r\n                sameIndex = i;\r\n                return;\r\n            }\r\n        });\r\n        // オンコードが構成音と被っている場合リストから削除\r\n        if (sameIndex !== -1) {\r\n            soundInfoList.splice(sameIndex, 1);\r\n        }\r\n        // オンコードをリストに追加\r\n        soundInfoList.unshift({\r\n            relation: null,\r\n            structIndex: chordOnIndex,\r\n            isFlat: false,\r\n            adjustOctave: 0\r\n        });\r\n        // 音程の昇順でソート\r\n        soundInfoList.sort((a, b) => {\r\n            return a.structIndex - b.structIndex;\r\n        });\r\n\r\n        /** ソート後のオンコードの場所 */\r\n        let onIndex = -1;\r\n        soundInfoList.some((sound, i) => {\r\n            if (sound.relation == null) {\r\n                onIndex = i;\r\n                return;\r\n            }\r\n        });\r\n        const onChordIndex = soundInfoList[onIndex].structIndex;\r\n        const tempList:StructInfo[] = [];\r\n        for (let i = onIndex; i < soundInfoList.length; i ++) {\r\n            const sound = soundInfoList[i];\r\n            tempList.push(sound);\r\n        }\r\n        for (let i = 0; i < onIndex; i ++) {\r\n            const sound = soundInfoList[i];\r\n            tempList.push(sound);\r\n        }\r\n        tempList.forEach(sound => {\r\n            sound.adjustOctave = 0;\r\n            if(sound.structIndex < onChordIndex) {\r\n                sound.adjustOctave = 1;\r\n            }\r\n        });\r\n        soundInfoList = tempList;\r\n    }\r\n\r\n    const rowJsxList: JSX.Element[] = [];\r\n\r\n    /** 選択数 */\r\n    let selectCount = 0;\r\n    // オクターブ（テーブル横）のループ\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const cellJsxList: JSX.Element[] = [];\r\n        // 構成音（テーブル縦）のループ\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = soundInfoList.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n            if (isSelected) {\r\n                selectCount++;\r\n            }\r\n\r\n            /** セルに表示する音程 */\r\n            const getSoundFullName = (): string => {\r\n                if (!isEnable) return '';\r\n                // const relation = symbol.structs[j];\r\n                // const interval = TheoryUtil.IntervalRelationProps[relation];\r\n                // const structIndex = (chordRootIndex + interval) % 12;\r\n                const sound = soundInfoList[j];\r\n                const octave = i + sound.adjustOctave;\r\n\r\n                const key12List = !sound.isFlat ?\r\n                    TheoryUtil.KEY12_SHARP_LIST :\r\n                    TheoryUtil.KEY12_FLAT_LIST\r\n                    ;\r\n                return `${key12List[sound.structIndex]}${octave}`;\r\n            }\r\n\r\n            const name = getSoundFullName();\r\n            cellJsxList.push(\r\n                <_Cell key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    isOver={isSelected && selectCount > channelLimitNum}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: BackingState.ChannelParam[] = BackingUtil.buildChannels(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                        dispatcher.backing.updateErrorState();\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.harmony;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_Cell>\r\n            );\r\n        }\r\n        rowJsxList.push(\r\n            <_TableRow key={i}>\r\n                {cellJsxList}\r\n            </_TableRow>\r\n        );\r\n    }\r\n\r\n    /** 構成音リストのJSX */\r\n    const structJsxList = soundInfoList.map((sound, i) => {\r\n        const key12List = !sound.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\r\n\r\n        /** 表示する構成音の関係性 */\r\n        const getStructName = (): string => {\r\n            if (sound.relation == null) {\r\n                // オンコードの場合\r\n                return 'Base';\r\n            } else if (sound.relation === 'p1') {\r\n                // ルート音の場合\r\n                return 'Root';\r\n            }\r\n            return sound.relation;\r\n        }\r\n        return (\r\n            <_StructItem key={i}\r\n                isOnChord={sound.relation == null}\r\n            >{getStructName()} [{key12List[sound.structIndex]}]</_StructItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* コードの基本情報 */}\r\n            <_InfoDiv>\r\n                <_InfoItem>\r\n                    <_Label>Chord</_Label>\r\n                    <_Value>{chordFullName}</_Value>\r\n                </_InfoItem>\r\n                <_InfoItem>\r\n                    <_Label>Type</_Label>\r\n                    <_Value>{symbol.attr}</_Value>\r\n                </_InfoItem>\r\n            </_InfoDiv>\r\n            <_EditorDiv>\r\n                {/* 構成音の情報 */}\r\n                <_StructDiv>\r\n                    {structJsxList}\r\n                </_StructDiv>\r\n                {/* ボイシングのテーブル */}\r\n                <_TableDiv>{rowJsxList}</_TableDiv>\r\n            </_EditorDiv>\r\n        </_Wrap>\r\n    );\r\n    // }, [table, channelLimitNum]);\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _InfoItem = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #89dada; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 8px);\r\n    width: 80px;\r\n    background-color: #69bcdd;\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #026c86;\r\n    border: 1px solid #303030;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 6px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #cccccc; */\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst _EditorDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _StructDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _StructItem = styled.div<{\r\n    isOnChord: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    ${props => !props.isOnChord ? '' : css`\r\n        background: linear-gradient(to bottom, #8a1010, #db7676, #8a1010);\r\n    `}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _TableDiv = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _TableRow = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Cell = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n    isOver: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #e5e747;\r\n    `}\r\n    ${props => !props.isOver ? '' : css`\r\n        background-color: #c40000;\r\n        color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #b9bb3f;\r\n        `}\r\n        ${props => !props.isOver ? '' : css`\r\n            background-color: #bb3f3f;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\n/**\r\n * バッキングエディタ画面\r\n * @returns コンポーネント\r\n */\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    useEffect(()=> {\r\n        console.log('backing start');\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_PrevireBrind isUse={state.isPreview} />\r\n            {/* ボイシングエディタ部分 */}\r\n            <VoicingChooser />\r\n            {/* パターンエディタ部分 */}\r\n            <PatternFrame />\r\n            {/* フッター部分 */}\r\n            <_FooterDiv>\r\n                {/* プレビュー再生 */}\r\n                <_Button isEnable={!state.hasError} onClick={() => {\r\n\r\n                    if (!state.isPreview) {\r\n                        dispatcher.backing.testBacking();\r\n                    } else {\r\n                        BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                    }\r\n                }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\r\n                {/* 編集を取り消しして閉じる */}\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Cancel</_Button>\r\n                {/* 編集を反映して閉じる */}\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.mappingEditorToScore();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/score/scoreData\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const cur = chordList[focusIndex];\r\n    const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={isBackingEnable}\r\n                onClick={() => {\r\n                    if (state.hideMenu === 'none') {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    } else if (state.hideMenu === 'backing') {\r\n                        dispatcher.backing.closeBackingEditor();\r\n                    }\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 7;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 8;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmClipboard = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    return (\r\n        <_Wrap>\r\n            <_Label>clipboard</_Label>\r\n            <_TypeDiv>\r\n                <_ModeItem isActive={state.cloneBacking != null}>Backing</_ModeItem>\r\n                <_ModeItem isActive={state.copiedElementList != null}>Elements</_ModeItem>\r\n            </_TypeDiv>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default HarmClipboard;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _TypeDiv = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #a8dbb3;\r\n    `}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #8f8f8f;\r\n    border-radius: 2px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst MEMORI_WIDTH = 12;\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        list.push(<_Margin key={list.length} />);\r\n        state.measureCacheList.forEach((cache) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {cache.barCount !== -1 ? <_Bar>{cache.barCount}</_Bar> : ''}\r\n                    {/* {<_Bar>{i}</_Bar>} */}\r\n                </_Memori>\r\n            );\r\n        });\r\n        list.push(<_Margin key={list.length} />);\r\n        return list;\r\n    }, [state.beatCacheList]);\r\n\r\n    const [beatJsxList, minuteJsxList] = useMemo(() => {\r\n        const beatJsxList: JSX.Element[] = [];\r\n        const minuteJsxList: JSX.Element[] = [];\r\n\r\n        const isChordFocus = dataList[focusIndex].type === 'chord';\r\n        const curChordIndex = cacheList[focusIndex].chordIndex;\r\n        // list.push(<_Start key={list.length}/>);\r\n        dataList.forEach((data, i) => {\r\n\r\n            const cache = state.elementCacheList[i];\r\n            if (data.type === 'chord' && Math.abs(cache.chordIndex - curChordIndex) <= 5) {\r\n\r\n                const detail = data.detail as DetailChord;\r\n                const sustain = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                let label = '';\r\n                let type: ItemType = 'ather';\r\n                if (!isChordFocus) {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                } else {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'cur';\r\n                        type = 'cur';\r\n                    } else if (cache.chordIndex === curChordIndex - 1) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                }\r\n\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatMemori = detail.beatLen * beatProps.beatMemoriCount;\r\n                const posMemori = 16 + cache.curTotalMemori;\r\n                beatJsxList.push(\r\n                    <_SustainItem key={beatJsxList.length}\r\n                        type={type}\r\n                        pos={posMemori} sustain={beatMemori + minute}\r\n                    >{label}</_SustainItem>\r\n                );\r\n                minuteJsxList.push(\r\n                    <_BeatItem key={beatJsxList.length}\r\n                        isActive={type === 'cur'}\r\n                        pos={posMemori + detail.minute.head} sustain={beatMemori}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        // list.push(<_Start key={list.length}/>);\r\n        return [beatJsxList, minuteJsxList];\r\n    }, [dataList.length, focusIndex, state.beatCacheList]);\r\n\r\n    const scrollPos = cacheList[focusIndex].curTotalMemori * MEMORI_WIDTH;\r\n    return (\r\n        <_Wrap>\r\n            <_ScrollFrame pos={scrollPos}>\r\n                <_Blocks>\r\n                    <_Beat>\r\n                        {beatJsxList}\r\n                    </_Beat>\r\n                    <_Minute>\r\n                        {minuteJsxList}\r\n                    </_Minute>\r\n                </_Blocks>\r\n                <_Measure>\r\n                    {memoriJsxList}\r\n                </_Measure>\r\n            </_ScrollFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _ScrollFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => -props.pos}px;\r\n    position: absolute;\r\n    height: 100%;\r\n    /* width: 100px;\r\n    background-color: #000; */\r\n    transition: left 0.5s;\r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n`;\r\n\r\ntype ItemType = 'cur' | 'prev' | 'next' | 'ather';\r\nconst _SustainItem = styled.div<{\r\n    pos: number;\r\n    sustain: number;\r\n    type: ItemType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(136, 163, 133);\r\n    ${props => {\r\n        switch (props.type) {\r\n            case 'cur': return css`\r\n                background-color: rgb(218, 107, 134);\r\n                /* color: #ffe551; */\r\n            `;\r\n            case 'prev': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 177, 221);\r\n            `;\r\n            case 'next': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 221, 171);\r\n            `;\r\n            case 'ather': return css`\r\n                background-color: rgb(192, 192, 192);\r\n            `;\r\n        }\r\n    }}\r\n    border-left: solid 1px #000;\r\n    border-top: solid 1px #000;\r\n    border-bottom: solid 1px #000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _BeatItem = styled.div<{\r\n    isActive: boolean;\r\n    pos: number;\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(224, 224, 224);\r\n    border-left: solid 1px #000;\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: rgb(233, 180, 228); */\r\n        /* color: #ffe551; */\r\n    `}\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Margin = styled.div`\r\n    display: inline-block;\r\n    width: ${MEMORI_WIDTH * 16}px;\r\n    height: 100%;\r\n    background-color: #d9ebe7;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${MEMORI_WIDTH}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection } from \"../../../../redux/store/score/scoreData\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport HarmSideForm from \"./side/harmSideForm\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport HarmClipboard from \"./initial/harmClipboard\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\n\r\n/**\r\n * ハーモナイズタブ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const state = store.scoreState;\r\n    const init = (store.scoreData.chordList[0].detail as DetailInit);\r\n\r\n    const isTune = store.scoreState.isMelody;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, harmonize: () => {\r\n                dispatcher.system.setInvalidate({\r\n                    ...store.invalidate, harmoniizeInvalidate: {}\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    // useEffect(() => {\r\n    //     HarmonizeUtil.updateHarmonizeCache(store, dispatcher)\r\n    // }, [chordList, chordList.length, init.bpm]);\r\n\r\n    const harmMeasure = state.elementCacheList.length === 0 ? <></> : <HarmMeasure />;\r\n    const chordInfo = state.elementCacheList.length === 0 ? <></> : <ChordInfo />;\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_SECTIONS><HarmSections /></_SECTIONS>\r\n            <_Left>\r\n                <_Head isEnable={!state.isPreview}>\r\n                    {/* <InitialBeatTip /> */}\r\n                    <HarmClipboard />\r\n                </_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP>{harmMeasure}</_TIMELINE_WRAP>\r\n                    <_INFO_WRAP>{chordInfo}</_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right isEnable={!state.isPreview}>\r\n                <HarmSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH + HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Head = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    position: absolute;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    /* background-color: #ddc2c2; */\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7a270028;\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyTimelineMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            mouse.lock = x;\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        // if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            if (mouse.pos !== x) {\r\n                // console.log(`★ move=== x: ${x}, pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n                mouse.pos = x;\r\n                update();\r\n            }\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            // update();\r\n\r\n            const lock = mouse.lock + refs.measure.scrollLeft;\r\n            const pos = mouse.pos + refs.measure.scrollLeft;\r\n            const notesList = store.scoreData.notesList;\r\n            let start = -1;\r\n            let end = -1;\r\n            for (let i = 0; i < notesList.length; i++) {\r\n                const notes = notesList[i];\r\n                const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                const [head, tail] = lock < pos ? [lock, pos] : [pos, lock];\r\n                if (head <= left && tail >= right) {\r\n                    if (start === -1) start = i;\r\n                } else {\r\n                    if (start !== -1) {\r\n                        end = i - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            if (start !== -1 && end === -1) {\r\n                end = notesList.length - 1;\r\n            }\r\n            state.focusIndex = start;\r\n            state.destIndex = end;\r\n            mouse.lock = -1;\r\n            // console.log(`★ up=== focus: ${state.focusIndex}, dist: ${state.distIndex}`);\r\n            dispatcher.melody.setState(state);\r\n            // const [head, tail] = mouse.lock < x ? [mouse.lock, x] : [x, mouse.lock];\r\n            // const width = tail - head;\r\n            // if (width > 5) {\r\n            //     mouse.width = width;\r\n            //     mouse.lock = -1;\r\n            //     mouse.pos = head;\r\n            //     update();\r\n            //     console.log(`★ up=== pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n            // }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyTimelineMouseOperation;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport MelodyUtil, { getNormalizeLenFromNotes } from \"../../../../utils/melodyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimelineMouseOperation from \"./util/melodyTimelineMouseOperation\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n    update: () => void;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n    const update = props.update;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        state.measureCacheList.forEach((cache, i) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            // 表示する小節数\r\n            const barCount = cache.barCount;\r\n\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    beatWidth={beatWidth}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {barCount !== -1 ? <_Bar>{barCount}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        });\r\n        return list;\r\n    }, [state.beatCacheList, barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        if (state.elementCacheList.length === 0) {\r\n            return jsxList;\r\n        }\r\n        let left = 0;\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                // console.log(state.elementCacheList.length);\r\n                const detail = element.detail as DetailChord;\r\n                const cache = state.elementCacheList[i];\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minuteLen = minute * 0.25;\r\n                const adjustRate = beatProps.beatMemoriCount / 4;\r\n                const width = beatWidth * (detail.beatLen * adjustRate + minuteLen);\r\n\r\n                if (chordRef.current != null) {\r\n                    const scroll = chordRef.current.scrollLeft;\r\n                    if (left + width - scroll >= 0 ||\r\n                        left - scroll <= chordRef.current.clientWidth) {\r\n                        const symbolNmae = TheoryUtil.getSymbolFromKey(detail.symbolKey)?.name;\r\n                        const degreeName = detail.root == null ? '-' :\r\n                            TheoryUtil.getDegreeRoot(detail.root) + symbolNmae;\r\n                        const chordName = detail.root == null ? '-' :\r\n                            TheoryUtil.getRootName(detail.root, init.keyIndex) + symbolNmae;\r\n                        jsxList.push(\r\n                            <_ChordItem key={jsxList.length}\r\n                                left={left}\r\n                                width={width}\r\n                                isActive={element == curChord}\r\n                                onClick={() => {\r\n                                    state.isMelody = false;\r\n                                    state.focusIndex = i;\r\n                                    dispatcher.score.setScoreState(state);\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                                }}\r\n                            >\r\n                                <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                            </_ChordItem>\r\n                        );\r\n                    }\r\n                }\r\n                left += width;\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_MeasureWrap ref={measureRef}>\r\n            <_MeasureInner\r\n                onMouseDown={e => MelodyTimelineMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseMove={e => MelodyTimelineMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseUp={e => MelodyTimelineMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseLeave={() => {\r\n                    const mouse = store.melodyState.timelineMouse;\r\n                    mouse.pos = -1;\r\n                    mouse.lock = -1;\r\n                    update();\r\n                }}\r\n            >\r\n                {measureJsxList}\r\n                <_MousePos\r\n                    left={mouseMeasurePos * beatWidth * rate}\r\n                    width={beatWidth * rate}\r\n                />\r\n            </_MeasureInner>\r\n        </_MeasureWrap>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _MeasureWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _MeasureInner = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* width: 100%; */\r\n    left: 0;\r\n    top: 0;\r\n    width: 10000px;\r\n    height: 100%;\r\n    &:hover {\r\n        background-color: #ff00b347;\r\n    }\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.left}px;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    pointer-events: none;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.beatWidth / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + TheoryUtil.IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #8f8f8f;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #adadad;\r\n    ${props => !props.isStruct ? '' : css`background-color: #ce6565;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #3b3b3b;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/score/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                state.isPreview = true;\r\n                dispatcher.melody.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.melody.setInstrument(soundFontPlayer);\r\n                    }).then(() => {\r\n                        state.isPreview = false;\r\n                        dispatcher.melody.setState(state);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #cacacada;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f7f7f7da;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e4e4e4da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #f7f7f7da;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={state.quantize === 4} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                {/* <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} /> */}\r\n                {/* <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} /> */}\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 9 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.destIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    const newLen = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.len) !== getNormalizeLenFromNotes(newLen)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.len = newLen;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    const newPos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.pos) !== getNormalizeLenFromNotes(newPos)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.pos = newPos;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.tableMouse;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                //履歴を作成\r\n                state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.melody.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.melody.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/score/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport MelodyUtil, {  } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n\r\n        // 選択しているノーツが1つである場合\r\n        const isSingle = state.focusIndex === state.destIndex;\r\n        const mouse = state.tableMouse;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.melody.copyNotes(); break;\r\n                    case 'v': dispatcher.melody.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.melody.allSelect();\r\n                    }\r\n                        break;\r\n                    case 's': dispatcher.score.saveFile(); break;\r\n                    case 'z': dispatcher.melody.undo(); break;\r\n                    case 'y': dispatcher.melody.redo(); break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.melody.incrementCurPitch(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.melody.incrementCurPitch(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveDestFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveDestFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.melody.incrementCurPitch(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.melody.incrementCurPitch(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(false);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(true);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.melody.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.melody.adjustScrollX(); break;\r\n                case 'e': dispatcher.melody.adjustScrollY(); break;\r\n                case 'z': {\r\n                   MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.melody.firstNotes();\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.melody.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.melody.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.melody.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.destIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/score/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport CacheUtil from \"../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const scoreState = store.scoreState;\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n    const [invalidate2, setInvalidate2] = useState<{}>({});\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.tableMouse;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n\r\n    const barCount = 150;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n    const rate = 1 / store.melodyState.quantize;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isMelody;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, melody: update\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    /**\r\n     * 画面上部のメモリJSXリスト\r\n     * 拍子のキャッシュから作成する\r\n     */\r\n    const measureJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        scoreState.measureCacheList.forEach((cache, i) => {\r\n\r\n            list.push(\r\n                <_Scale key={i} isHead={cache.rate === 4} beatWidth={state.beatWidth} />\r\n            );\r\n        });\r\n        return list;\r\n    }, [scoreState.beatCacheList, barCount]);\r\n\r\n    // const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    /**\r\n     * スケール区間のJSXリスト\r\n     * 背景色のラインを表現\r\n     * 転調でキーが変わる度に追加される\r\n     */\r\n    const scaleDivJsxList = useMemo(() => {\r\n        const divList: JSX.Element[] = [];\r\n        // console.log('**' + scoreState.scaleCacheList.length);\r\n        scoreState.scaleCacheList.forEach((scaleInfo, i) => {\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const scaleJsxList: JSX.Element[] = [];\r\n            for (let j = 0; j < PITCH_MAX; j++) {\r\n                const keyIndex = getKeyIndexFromPitcher(j);\r\n                scaleJsxList.push(\r\n                    <_ScaleLine key={j}\r\n                        isScale={scaleIndexies.includes(keyIndex)}\r\n                        isBase={keyIndex === scaleIndexies[0]}\r\n                    />\r\n                );\r\n            }\r\n\r\n            divList.push(\r\n                <_ScaleList key={i} width={state.beatWidth / 4 * scaleInfo.memoriCnt} isEven={i % 2 === 0}>\r\n                    {scaleJsxList}\r\n                </_ScaleList>\r\n            );\r\n        });\r\n        return divList;\r\n    }, [scoreState.scaleCacheList]);\r\n\r\n    /**\r\n     * 配置するノーツのJSXリスト\r\n     */\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        // let count = 0;\r\n        if (scoreState.scaleCacheList.length === 0) return list;//\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            const normalLeft = getNormalizeLenFromNotes(notes.pos);\r\n            const normalWidth = getNormalizeLenFromNotes(notes.len);\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const notesLeft = normalLeft * state.beatWidth;\r\n                const notesRight = notesLeft + normalWidth * state.beatWidth;\r\n                if (\r\n                    // !state.isPreview &&\r\n                    (notesRight - scroll < 0 || notesLeft - scroll > tableRef.current.clientWidth)\r\n                ) {\r\n                    continue;\r\n                }\r\n            }\r\n            const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n            // count++;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n\r\n            // クオンタイズ\r\n            const unitPos = getMinimumLenUnit(notes.pos);\r\n            const unitLen = getMinimumLenUnit(notes.len);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={normalLeft * state.beatWidth}\r\n                    width={normalWidth * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.melody.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\r\n                        isScale={isScale}\r\n                        isActive={isActive}\r\n                        isPreview={state.isPreview}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // console.log('cnt: ' + count);\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.destIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move]);\r\n\r\n    /**\r\n     * タイムラインを横にスクロールした際の処理\r\n     */\r\n    const sideScrollAction = () => {\r\n        const refs = store.refs.melody;\r\n\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const scrollLeft = refs.table.scrollLeft;\r\n            const scrollTop = refs.table.scrollTop;\r\n            refs.measure.scrollTo({ left: scrollLeft });\r\n            refs.chord.scrollTo({ left: scrollLeft });\r\n            refs.pitch.scrollTo({ top: scrollTop });\r\n        }\r\n        update();\r\n    };\r\n\r\n    /**\r\n     * マウスポインタがエリア外に出た際の処理\r\n     */\r\n    const mouseLeaveAction = () => {\r\n        console.log('leave!');\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n        update();\r\n    };\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header isEnable={!state.isPreview}>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                {(() => {\r\n                    const mouse = state.timelineMouse;\r\n                    if (mouse.lock === -1) {\r\n                        return mouse.pos === -1 ? <></> :\r\n                            <_MouseLinePos left={mouse.pos} />\r\n                    } else {\r\n                        const [head, tail] = mouse.lock < mouse.pos ? [mouse.lock, mouse.pos] : [mouse.pos, mouse.lock];\r\n                        const width = tail - head;\r\n                        return <_MouseRange left={head} width={width} />\r\n                    }\r\n                })()}\r\n                {\r\n\r\n                }\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                        update={() => setInvalidate2({})}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef} onScroll={sideScrollAction} >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleDivJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseLeave={mouseLeaveAction}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _MouseLine = css`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    width: 3px;\r\n`;\r\nconst _MouseLinePos = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #15ff00;\r\n`;\r\nconst _MouseLineLock = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #fbff00;\r\n`;\r\n\r\nconst _MouseRange = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    width: ${props => props.width}px;\r\n    background-color: #ffffff8b;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #464545;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n    /* background-color: #70ff7058; */\r\n`;\r\n\r\nconst _ScaleList = styled.div<{\r\n    width: number;\r\n    isEven: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    /* pointer-events: none; */\r\n    background-color: #70ff7021;\r\n    ${props => !props.isEven ? '' : css`\r\n        background-color: #708aff20;\r\n    `}\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #2727275a;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #00a6cf52;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `}\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `}\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb0040;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isPreview: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    opacity: 0.5;\r\n    ${props => props.isPreview && !props.isActive ? '' : css`    \r\n       opacity: 1;\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    ${props => !(props.isPreview && props.isActive) ? '' : css`\r\n        box-shadow: 0 0 32px 0 #ffffff92;\r\n    `}\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #7a270028;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport MelodyUtil, {  } from \"../../../utils/melodyUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    useEffect(() => {\r\n        const info = melody.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.melody.setInstrument(soundFontPlayer);\r\n            });\r\n\r\n        // acoustic_guitar_steel\r\n        //bright_acoustic_piano\r\n        Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\r\n            { gain: 2, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.score.setPiano(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    const switchMode = () => {\r\n        state.isMelody = !state.isMelody;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isMelody ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isMelody ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isMelody ? () => {\r\n\r\n        if (!state.isPreview) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        } else {\r\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    } : () => {\r\n\r\n        if (!melody.isPreview) {\r\n            dispatcher.melody.previewStart();\r\n        } else {\r\n           MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    }\r\n    /** アンサンブルの切替 */\r\n    const toggleEnsamble = !state.isMelody ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.melody.setState(melody);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode isEnable={!isPreview}>\r\n                    <_ModeItem isActive={!state.isMelody} onClick={() => {\r\n                        if (state.isMelody) switchMode();\r\n                    }}>Harmony</_ModeItem>\r\n                    <_ModeItem isActive={state.isMelody} onClick={() => {\r\n                        if (!state.isMelody) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch onClick={preview}><_SwitchInner isActive={isPreview}>Play</_SwitchInner> / <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner></_Switch>\r\n                    <_Switch onClick={toggleEnsamble}><_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner> / <_SwitchInner isActive={isSolo}>Solo</_SwitchInner></_Switch>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    const isPermit = !isPreview && state.hideMenu === 'none';\r\n                    if (isPermit) {\r\n                        switch (e.key) {\r\n                            case 'r': switchMode(); break;\r\n                        }\r\n                    }\r\n                }}>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isMelody} />\r\n                    <MelodyFrame isActive={state.isMelody} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div<{\r\n    isEnable: boolean\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #e1e4ca;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #eff3cf\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\nimport PreviewTab from \"./preview/previewTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    // { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    // { name: 'Preview', disable: !isAccept, cont: store.scoreData.chordList.length === 0 ? <></> : <PreviewTab data={store.scoreData} /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? TheoryUtil.DEGREE12_FLAT_LIST : TheoryUtil.DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    // sampler.releaseAll();\r\n\r\n                    const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = TheoryUtil.IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        // sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                // sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, isEnable: false, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, isEnable: false, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, isEnable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, isEnable: false, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length >= min && str.length <= max;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import { useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ValidateUtil from \"../../utils/validateUtil\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 400;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n    const [userId, setUserId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passConfirm, setPassConfirm] = useState('');\r\n    const [info, setInfo] = useState('');\r\n\r\n    const isButtonEnable = useMemo(() => {\r\n        return ValidateUtil.checkAll([\r\n            ValidateUtil.checkStringLength(userId, 4, 20),\r\n            ValidateUtil.checkStringLength(password, 4, 20),\r\n            ValidateUtil.checkStringLength(passConfirm, 4, 20),\r\n            \r\n        ]);\r\n    }, [isCreate, userId, password, passConfirm]);\r\n\r\n    /**\r\n     * 入力フォームのJSXを生成する\r\n     * @param title ラベル名\r\n     * @param value 値\r\n     * @param setter セッタの関数\r\n     * @returns JSX\r\n     */\r\n    const createFormJsx = (\r\n        title: string,\r\n        value: string,\r\n        setter: React.Dispatch<React.SetStateAction<string>>\r\n    ): JSX.Element => {\r\n        return (\r\n            <_Record>\r\n                <_Label>{title}</_Label>\r\n                <_TextField value={value} onChange={e => setter(e.target.value)} />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        if (isCreate) {\r\n\r\n            if (password != passConfirm) {\r\n                // setError(true);\r\n                // setMessage(`Confirmation passwords don't match.`);\r\n                // setLoading(false);\r\n                alert(`Confirmation passwords don't match.`);\r\n            } else {\r\n\r\n                (async () => {\r\n                    let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n                    let results = await response.json();\r\n                    console.log(JSON.stringify(results[0].cnt));\r\n                    const isExist = results[0].cnt > 0;\r\n                    if (isExist) {\r\n                        // setError(true);\r\n                        // setMessage('That user id has already been recorded.');\r\n                        alert('That user id has already been recorded.');\r\n                    } else {\r\n                        response = await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(id, pass) VALUES('${userId}', '${password}')`);\r\n                        results = await response.json();\r\n                        // setMessage('');\r\n                        alert('You have successfully created an account!');\r\n                        // setLoginType('login');\r\n                    }\r\n                    // setLoading(false);\r\n                })();\r\n            }\r\n\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {createFormJsx('user id', userId, setUserId)}\r\n            {createFormJsx('password', password, setPassword)}\r\n            {createFormJsx('password *', passConfirm, setPassConfirm)}\r\n            <_InfoDiv>{info}</_InfoDiv>\r\n            <_Footer>\r\n                <_ExecutableButton isEnable={true}>Clear</_ExecutableButton>\r\n                <_ExecutableButton isEnable={isButtonEnable} onClick={enterAction}>Enter</_ExecutableButton>\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #a9c5c7;\r\n    /* border: 1px solid #dadada; */\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #c73e3e75;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #d86262;\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    background-color: #91bdd6;\r\n    width: 100%;\r\n    height: 60px;\r\n    padding: 5px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: #222fa7;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport LoginFrame from \"../login/loginFrame\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton onClick={()=> {\r\n                    store.systemState.dialog = <LoginFrame />;\r\n                    dispatcher.system.setState(store.systemState);\r\n                }}>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useCallback, useEffect, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    const callback = useCallback(dispatcher.system.switchSplashToMain, []);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={callback} /\r\n                    >}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport SystemEntry from './system/contents/entry/systemEntry';\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    // 右クリック無効\r\n    document.oncontextmenu = function () { return false; }\r\n\r\n    // window.addEventListener(\"keydown\", function (e) {\r\n    //   // space and arrow keys\r\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n    //     e.preventDefault();\r\n    //   }\r\n    // }, false);\r\n\r\n    document.onkeydown = (e) => {\r\n      // if (!['F5'].includes(e.key)) {\r\n      //   return false;\r\n      // }\r\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n  }, []);\r\n  return (\r\n    <SystemEntry />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}