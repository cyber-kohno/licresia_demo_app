{"version":3,"sources":["system/redux/reducer.tsx","system/utils/theoryUtils.tsx","system/utils/instrumentsUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/sysModalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/base/design/styles.tsx","system/contents/score/manage/scoreBuilder.tsx","system/contents/score/manage/manageTab.tsx","system/base/components/button/executableButton.tsx","system/contents/score/edit/harmonize/input/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChange.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcChange.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/noteSideForm.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/score/edit/harmonize/initial/initialBeat.tsx","system/utils/backingUtil.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternStatus.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/item/controlButton.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionType","SCALE_INDEX","ROOT_ALL","index","isFlat","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","getDegreeRoot","props","KEY12_FLAT_LIST","KEY12_SHARP_LIST","getChordRoot","baseKeyIndex","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SYMBOL_LIST","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_LIST","root","symbolKey","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","getSymbolFromKey","ret","find","symbol","undefined","getSymbolDerives","list","forEach","push","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","getDefaultBacking","voicingList","struct","octave","pattern","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","notes","total","len4","len8","len16","len4div3","len8div3","getSortetdNotesLen","len8div3Cnt3","Math","floor","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","i","keyIndex","soundName","instrument","soundfontPlayer","stop","play","duration","previewHarmony","start","dispatcher","state","cacheList","sampler","elementCacheList","chordList","init","detail","cache","element","pastSecond","rootIndex","len","beatLen","minute","head","tail","channelList","backing","map","item","interval","chordTime","bpm","setTimeout","mouseState","curChord","tune","setState","length","j","soundFullName","piano","alert","playPiano","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","Dispatcher","dispatch","system","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setReserveTasks","score","setPiano","setScoreTabIndex","scoreTabIndex","setScoreState","setKeySwitch","keySwitch","setScoreData","moveElement","isNext","sub","focusIndex","moveSection","curSectionIndex","sectionNo","sectionCacheList","curSectionInfo","curElementType","rangeIndexStart","rangeIndexEnd","incrementDegreeRoot","isUp","data","includes","incrementBeatLen","slice","incrementMinuteVal","pos","isTail","value","target","incrementMinuteValRelation","nearIndex","addChordElement","initialBeat","on","splice","addSectionElement","labelName","addChangeElement","changeType","modulateRelation","domminantValue","keyAdjust","tempoRelation","tempoDiff","tempoRate","tempoAbsolute","beatSignature","removeCurElement","wrapRef","reffers","wrap","body","style","opacity","overflow","width","clientWidth","incrementSymbol","setDiatonicChord","scaleIndex","chord","setDefaultBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","setNotesList","notesList","setInstrument","incrementCurNoteKey","isUpper","mode","scaleIndexies","cur","prevPitchIndex","pitchIndex","tempPitchIndex","adjustScrollY","moveFocus","lastFocus","adjustScrollX","updateCurChord","x","left","searchedChord","beatWidth","addNotes","notes1","notes2","newLeftNormal","nextNormalPos","newRightNormal","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","normal","moveNotes","isBehind","curNormalLeft","prevNormalRight","nextNormalLeft","moveNormal","table","melody","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","isPreview","firstTime","pitch","time","id","clearInterval","releaseAll","openBackingEditor","hideMenu","voicingTable","getInitVoicingTable","chordInfo","chordRoot","closeBackingEditor","getInitialLayer","noteDivList","rate","isDot","div3","velocityList","Array","col","isExist","voicing","applyBackingToChordData","channelSize","channels","layers","layer","divs","signals","record","cell","y","val","signal","addPatternColumn","layerIndex","lenList","newLen","lenIndex","column","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","channelIndex","setCurrentDivRate","toggleCurrentDivHalf","getNotes","setNotes","deleteColumn","changeLayer","this","initialStore","userEnv","keyConfig","note","prevElement","nextElement","prevSection","nextSection","addChord","addSection","addChange","deleteCur","editMode","incRoot","decRoot","incBeat","decBeat","symbolMode","colorProps","entryBackground","dialogMode","isTune","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","soundfontInfo","gain","scaleMode","resize","move","Sampler","toDestination","harmonize","measure","SysModalDialog","useContext","GlobalContext","isDisplay","_Blind","_Frame","styled","div","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isDisable","disable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","onClick","_Icon","_Label","ChannelContents","_Contents","css","TabbedPane","TabLabel","_TabLabel","TabContents","_Object","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ScoreBuilder","curIndex","addChordDiatonic","getScoreData","fixed","ManageTab","source","setSource","_Wrap","_Left","_Link","JSON","stringify","scale","timeSignature","builder","_Right","_Source","onChange","e","_ButtonsDiv","_Button","parse","textarea","ExecutableButton","size","get","height","fontSize","backgroundColor","callback","labelText","SymbolEditor","curSymbol","baseSymbol","derives","parentJsx","curJsx","childrenJsx","_Header","_Row","CalcChord","symbolName","bar","prevCache","isError","beat","chordName","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","beatSum","barRem","_Len","_Border","ElementDetailChange","_Type","ElementDetailChord","degreeRoot","degreeOn","useMemo","_Degree","isSwitch","isCurrent","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Tip","jsxList","lenType","valueType","abs","_TipItem","ElementFixedBorder","reverse","ElementDetailInit","_Title","_Value","_Record","ElementDetailSection","CalcChange","ScoreElement","useRef","bodyRef","current","isFocus","isSameSection","chordDetail","ref","isSelectable","isInactive","isChord","_Head","_CurKey","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","num","_Note","NoteBasicInput","config","curType","soundfont","playChordSoundfont","Number","NoteKeySwitch","isPress","isElement","update","timing","velocityAdjust","backingEditorInput","NoteKeyDown","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","isRootActive","isOnActive","_RootItem","isDiatonic","onContextMenu","symbolItemsJsx","_SymbolItem","_Timing","_LabelBeat","_Minute","_LabelMinute","_MinuteItem","isReverse","step","min","max","_Root","_Symbol","input","SideFormInit","scaleItemJsxList","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_TempoWrap","currentTarget","valueAsNumber","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","toString","_NumberItem","_DirectText","_TemplateFrame","_NumberFrame","_ItemBase","NoteSideForm","HarmMeasure","dataList","curBeatJsx","prevBeatJsx","nextBeatJsx","curMinuteJsx","prevMinuteJsx","nextMinuteJsx","memoriJsxList","prevIndex","nextIndex","temp","add","sustain","adjust","bean","color","_Memori","_Bar","_Prev","_Start","_Cur","_Next","_Blocks","_Measure","BEAT_WIDTH","ChordInfo","scaleList","structJsxList","tipJsxList","relation","getIntervalValues","_InfoItem","isScale","isUse","isBlack","_Struct","WIDTH","InitialBeatTip","_WrapTip","BackingUtil","OCTAVE_NUM","STRUCT_NUM","CHANNEL_MAX","getInitialRecord","divCount","fill","getVoicingStructs","structIndex","getChannels","voicingStructs","channel","PatternLength","itemJsxList","isEdit","PatternTable","channelCount","layerJsxList","jsxLsit","notesJsxLsit","k","setNotesStatus","status","_Notes","_State","isEven","isFront","_Layer","zIndex","PatternBuilder","_LengthDiv","_MeasureDiv","_Body","_Footer","PATTERN_HEADER_HEIGHT","ChannelItem","_Option","initialCellArray","PatternChannel","channelJsxList","soundIndex","PatternStatus","createItem","isEnable","createRateItem","String","setRate","sizeJsxList","_ListItem","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","selectedCell","editModeJsx","_WrapEdit","select","option","PatternFrame","isUsePattern","_UseSwitch","isUsePedal","_Main","_StatusDiv","_MainDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","voicingLaneJsxList","isSelected","chordIndex","_VoicingItem","_VoicingLane","_Relation","_Info","TIP_WIDTH","BackingEditorFrame","_FooterDiv","HarmHideFrame","isOpen","HarmonizeTab","focus","Soundfont","AudioContext","release","then","soundFontPlayer","prevBeat","totalBeat","prevMinute","totalMinute","sectionBeatSum","beatRate","getBeatRate","tabIndex","onKeyDown","onKeyUp","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_HEAD_WIDTH","HarmSections","sections","curSectionNo","section","_Total","MelodyTimeline","measureRef","chordRef","barLength","timelineLength","measureJsxList","barJsx","_Scale","isHead","chordJsxList","symbolNmae","degreeName","_ChordItem","_DegreeName","_ChordName","_ChordWrap","_MousePos","span","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","info","QuantizeSwitch","ControlButton","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","mouseDownEvent","button","mouse","getNextLeft","next","rect","getBoundingClientRect","clientX","scrollLeft","clientY","scrollTop","prev","mouseMoveEvent","curPos","posX","lenWidth","prevFocus","right","mouseUpEvent","sort","a","b","posA","posB","MelodyInput","keyDownEvent","clearTimeout","keySwitchEvent","MelodyFrame","tableRef","pitchRef","invalidate","setInvalidate","tableWidth","barCount","scaleLineJsxList","_ScaleLine","isBase","notesJsxList","notesLeft","notesRight","middle","_NotesWrap","isOctave","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","onMouseDown","onMouseMove","onMouseUp","_Test","_PrevireBrind","editAnimation","keyframes","EditTab","switchMode","_Mode","_ModeItem","_Buttons","_SECTIONS","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","label","items","degree","degreeRootName","chordRootName","triggerAttack","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","fadeIn","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","Provider","App","document","oncontextmenu","window","addEventListener","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9103de75.chunk.js","sourcesContent":["import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature } from \"../redux/store/scoreData\";\r\n\r\nexport const SCALE_INDEX = [0, 2, 4, 5, 7, 9, 11];\r\n\r\nexport type DegreeProps = {\r\n    index: number;\r\n    isFlat: boolean;\r\n};\r\n\r\nexport type ChordProps = {\r\n    root: DegreeProps;\r\n    symbolKey: SymbolKey;\r\n};\r\n\r\nexport const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n    null,\r\n    { index: 0, isFlat: false },\r\n    { index: 1, isFlat: false },\r\n    { index: 1, isFlat: true },\r\n    { index: 2, isFlat: false },\r\n    { index: 3, isFlat: false },\r\n    { index: 3, isFlat: true },\r\n    { index: 4, isFlat: false },\r\n    { index: 5, isFlat: false },\r\n    { index: 6, isFlat: false },\r\n    { index: 6, isFlat: true },\r\n    { index: 7, isFlat: false },\r\n    { index: 8, isFlat: false },\r\n    { index: 8, isFlat: true },\r\n    { index: 9, isFlat: false },\r\n    { index: 10, isFlat: false },\r\n    { index: 10, isFlat: true },\r\n    { index: 11, isFlat: false }\r\n];\r\n\r\n\r\nexport const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\n// export const DEGREE12_FLAT_LIST = [\r\n//     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n// ];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const getDegreeRoot = (props: DegreeProps) => {\r\n    const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n    return list[props.index];\r\n}\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\n\r\nexport const getChordRoot = (props: DegreeProps, baseKeyIndex: number) => {\r\n    const list = props.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n    return list[(baseKeyIndex + props.index) % 12];\r\n}\r\n\r\n\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\n// export const KEY12_MINOR_SCALE_LIST = [\r\n//     'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'Bbm', 'Bm'\r\n// ];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n];\r\n\r\nexport type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\nexport type SymbolKey =\r\n    'major' |\r\n    'minor' |\r\n    'suspend4th' |\r\n    'diminish' |\r\n    'augument' |\r\n    'major-maj7th' |\r\n    'major-min7th' |\r\n    'minor-7th' |\r\n    'minor-maj7th' |\r\n    'sus4-7th' |\r\n    'diminish-7th' |\r\n    'augument-7th' |\r\n    'major-add9th' |\r\n    'minor-add9th' |\r\n    'sixth-9th' |\r\n    'minor-minus5' |\r\n    'minor7-minus5' |\r\n    'major-maj9th' |\r\n    'major-9th'\r\n    ;\r\n\r\n\r\nexport type SymbolAttribute =\r\n    'triad' |\r\n    'seventh' |\r\n    'add9th'\r\n    ;\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey;\r\n    name: string;\r\n    base: null | SymbolKey;\r\n    attr?: SymbolAttribute;\r\n    structs: IntervalRelation[];\r\n}\r\n\r\nexport const SYMBOL_LIST: readonly SymbolParams[] = [\r\n    {\r\n        key: 'major', name: '',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor', name: 'm',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'suspend4th', name: 'sus4',\r\n        base: null,\r\n        structs: ['p1', 'p4', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish', name: 'dim',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish-7th', name: 'dim7',\r\n        base: 'diminish',\r\n        structs: ['p1', 'm3', 'd5', 'd7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'augument', name: 'aug',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'a5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'augument-7th', name: 'aug7',\r\n        base: 'augument',\r\n        structs: ['p1', 'M3', 'a5', 'm7']\r\n    },\r\n    {\r\n        key: 'minor-minus5', name: 'm(-5)',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor7-minus5', name: 'm7(-5)',\r\n        base: 'minor-minus5',\r\n        structs: ['p1', 'm3', 'd5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-maj7th', name: 'maj7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-min7th', name: '7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'minor-7th', name: 'm7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'sus4-7th', name: '7sus4',\r\n        base: 'suspend4th',\r\n        structs: ['p1', 'p4', 'p5']\r\n    },\r\n    {\r\n        key: 'minor-maj7th', name: 'mmaj7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-add9th', name: 'add9',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'minor-add9th', name: 'madd9',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-maj9th', name: 'maj9',\r\n        base: 'major-maj7th',\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-9th', name: '9',\r\n        base: 'major-min7th',\r\n        structs: ['p1', 'm3', 'p5']\r\n    },\r\n];\r\n\r\nexport type IntervalRelation =\r\n    'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n    'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n    'd7' | 'm7' | 'M7'\r\n    ;\r\n\r\nexport const IntervalRelationProps = {\r\n    'p1': 0,\r\n    'm2': 1,\r\n    'M2': 2,\r\n    'm3': 3,\r\n    'M3': 4,\r\n    'p4': 5,\r\n    'd5': 6,\r\n    'p5': 7,\r\n    'a5': 8,\r\n    'm6': 8,\r\n    'M6': 9,\r\n    'd7': 9,\r\n    'm7': 10,\r\n    'M7': 11\r\n}\r\n\r\nexport const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n    { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n];\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n];\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    'bⅢ', 'bⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    'bⅥ', 'bⅥM7',\r\n    'bⅦ', 'bⅦ7'\r\n];\r\n\r\nexport const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n    const ret = SYMBOL_LIST.find((symbol) => {\r\n        if (key === symbol.key) {\r\n            return symbol;\r\n        }\r\n    });\r\n    return ret != undefined ? ret : SYMBOL_LIST[0];\r\n}\r\n\r\nexport const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n    let list: SymbolKey[] = [];\r\n    SYMBOL_LIST.forEach((symbol) => {\r\n        if (key === symbol.base) {\r\n            list.push(symbol.key);\r\n        }\r\n    });\r\n    return list;\r\n}\r\n\r\nexport const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n    return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n}\r\n\r\nexport const getBeatRate = (beatSignature: BeatSignature): [number, number] => {\r\n\r\n    switch (beatSignature) {\r\n        case '4/4': return [4, 4];\r\n        case '3/4': return [3, 4];\r\n    }\r\n    return [0, 0];\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SymbolAttribute } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null\r\n    };\r\n    return backing;\r\n}","import { isatty } from \"tty\";\r\nimport { MelodyState } from \"../redux/store/melodyState\";\r\nimport { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { ScoreState } from \"../redux/store/scoreState\";\r\nimport ElementDetailChord from \"../contents/score/edit/harmonize/elements/form/elementDetailChord\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += notes.len4;\r\n    total += notes.len8 / 2;\r\n    total += notes.len16 / 4;\r\n    total += notes.len4div3 / 3;\r\n    total += notes.len8div3 / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    return getSortetdNotesLen({\r\n        len4: notes1.len4 + notes2.len4,\r\n        len8: notes1.len8 + notes2.len8,\r\n        len16: notes1.len16 + notes2.len16,\r\n        len4div3: notes1.len4div3 + notes2.len4div3,\r\n        len8div3: notes1.len8div3 + notes2.len8div3\r\n    });\r\n}\r\n\r\nexport const getSortetdNotesLen = (base: MelodyLength) => {\r\n\r\n    const len8div3Cnt3 = Math.floor(base.len8div3 / 3);\r\n    base.len8div3 -= len8div3Cnt3 * 3;\r\n    base.len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(base.len8div3 / 2);\r\n    base.len8div3 -= len8div3Cnt2 * 2;\r\n    base.len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(base.len4div3 / 3);\r\n    base.len4div3 -= len4div3Cnt3 * 3;\r\n    base.len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(base.len16 / 2);\r\n    base.len16 -= len16Cnt2 * 2;\r\n    base.len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(base.len8 / 2);\r\n    base.len8 -= len8Cnt2 * 2;\r\n    base.len4 += len8Cnt2;\r\n\r\n    return base;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n    return getSortetdNotesLen({\r\n        len4, len8, len16, len4div3, len8div3\r\n    });\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if (notes.len8div3 > 0) return 6;\r\n    else if (notes.len16 > 0) return 4;\r\n    else if (notes.len4div3 > 0) return 3;\r\n    else if (notes.len8 > 0) return 2;\r\n    else if (notes.len4 > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playPiano = (soundFullName: string, store: Store, duration: number) => {\r\n    const instrument = store.instruments.piano;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, { duration });\r\n    } else {\r\n        alert('null');\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.piano;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nexport const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const state = store.melodyState;\r\n    const data = store.scoreData;\r\n    const reserveTasks: NodeJS.Timeout[] = [];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    const init = data.chordList[0].detail as DetailInit;\r\n    const bpm = init.bpm;\r\n    state.lastFocus = state.focusIndex;\r\n    state.isPreview = true;\r\n    let firstTime = -1;\r\n    for (let i = state.focusIndex; i < data.notesList.length; i++) {\r\n        const notes = data.notesList[i];\r\n        const pos = getNormalizeLenFromNotes(notes.pos);\r\n        const len = getNormalizeLenFromNotes(notes.len);\r\n        const pitch = notes.pitchIndex;\r\n        const time = 60 / bpm * pos;\r\n\r\n        // 開始時のノーツの位置（時間）を保存する。\r\n        if (firstTime === -1) {\r\n            firstTime = time;\r\n        }\r\n\r\n        reserveTasks.push(\r\n            setTimeout(() => {\r\n                state.focusIndex = i;\r\n                // state.mouseState.curChord = searchCurChord(store, i);\r\n                dispatcher.tune.setState(state);\r\n                dispatcher.tune.adjustScrollX();\r\n                if (instrument != null) {\r\n                    const keyIndex = getKeyIndexFromPitcher(pitch);\r\n                    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n                    const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n                    instrument.stop();\r\n                    instrument.play(soundName + octave, 0, { duration: 60 / bpm * len });\r\n                }\r\n            }, (time - firstTime) * 1000)\r\n        );\r\n\r\n        if (i === data.notesList.length - 1) {\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    state.isPreview = false;\r\n                    state.focusIndex = state.lastFocus;\r\n                    reserveTasks.forEach(id => clearInterval(id));\r\n                    store.instruments.sampler.releaseAll();\r\n                    dispatcher.tune.setState(state);\r\n                }, (time - firstTime + 60 / bpm * len) * 1000)\r\n            );\r\n        }\r\n    }\r\n\r\n    // ハーモニーを再生\r\n    previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n\r\n\r\n    dispatcher.system.setReserveTasks(reserveTasks);\r\n    dispatcher.tune.setState(state);\r\n}\r\n\r\n\r\nexport const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n    const state = store.scoreState;\r\n    const sampler = store.instruments.sampler;\r\n    const cacheList = state.elementCacheList;\r\n    const chordList = store.scoreData.chordList;\r\n    // const reserveTasks = store.reserveTasks;\r\n    const init = chordList[0].detail as DetailInit;\r\n    const adjsut = 0;\r\n    for (let i = 3; i < chordList.length; i++) {\r\n        const cache = cacheList[i];\r\n        const element = chordList[i];\r\n        if (element.type === 'chord') {\r\n            if (cache.pastSecond < start) continue;\r\n\r\n            const detail = element.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const channelList = detail.backing.voicingList.map((item) => {\r\n                const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n                return 12 * item.octave + rootIndex + interval;\r\n            });\r\n\r\n            const chordTime = 60 / init.bpm * len;\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // sampler.releaseAll();\r\n                    // stopPiano(store);\r\n                    store.melodyState.mouseState.curChord = element;\r\n                    dispatcher.tune.setState(store.melodyState);\r\n\r\n                    const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                    const div = pickingDelay / channelList.length;\r\n\r\n                    channelList.forEach((index, j) => {\r\n                        const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        playPiano(soundFullName, store, chordTime);\r\n                    });\r\n\r\n                    //     stopPiano(store);\r\n                    //     channelList.forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 4 + div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.reverse().forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 8 * 3 + div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.reverse().forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 8 * 5 +  div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 8 * 6 +  div * j)\r\n                    //         );\r\n                    //     });\r\n                }, cache.pastSecond - start - adjsut)\r\n            );\r\n        }\r\n    }\r\n}\r\n","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 60;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SCALE_INDEX, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordElement, DetailChange, DetailChord, DetailInit, DetailSection, ScoreData, TuneNotes, VoicingProps } from \"../store/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { BackingLayer, BackingPattern, BackingState, ChannelParam, NoteDiv, NoteRate, NoteStatus } from \"../store/backingState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont, previewStart } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        setPiano: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, piano: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            // alert(`totalSection=${sectionCacheList.length}, curSection=${curSectionIndex}, focus=${state.focusIndex}`);\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -0.5 && target <= 0.5) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: state.initialBeat,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        addChangeElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'change', detail: {\r\n                    changeType: null,\r\n                    modulateRelation: null,\r\n                    domminantValue: 0,\r\n                    keyAdjust: 0,\r\n                    tempoRelation: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbsolute: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailChange\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            const element = this.store.scoreData.chordList[state.focusIndex];\r\n            const sectionNo = this.store.scoreState.elementCacheList[state.focusIndex].sectionNo;\r\n            if (element.type === 'section' && sectionNo === 0) {\r\n                return;\r\n            }\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // reffer.style.width = '300px';\r\n            wrapRef.style.opacity = '0';\r\n            wrapRef.style.overflow = 'hidden';\r\n            // wrapRef.style.padding = '0';\r\n            wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            setTimeout(() => {\r\n                wrapRef.style.width = '0';\r\n            }, 1);\r\n            setTimeout(() => {\r\n                wrapRef.style.opacity = '';\r\n                wrapRef.style.width = '';\r\n                wrapRef.style.overflow = '';\r\n                // wrapRef.style.padding = '';\r\n                const data = this.store.scoreData;\r\n                data.chordList.splice(state.focusIndex, 1);\r\n                this.score.setScoreData(data);\r\n                state.focusIndex--;\r\n                this.score.setScoreState(state);\r\n                // setTimeout(() => {\r\n                //     reffer.style.opacity = '';\r\n                //     reffer.style.width = '';\r\n                //     const data = this.store.scoreData;\r\n                //     data.chordList.splice(state.focusIndex, 1);\r\n                //     this.score.setScoreData(data);\r\n                // }, 200);\r\n            }, 200);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (scaleIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const chord = DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n            detail.root = { ...chord.root };\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public tune = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        incrementCurNoteKey: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n\r\n            const focusIndex = this.store.melodyState.focusIndex;\r\n            if (focusIndex === -1) return;\r\n\r\n            const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n            const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            const cur = notesList[focusIndex];\r\n            const prevPitchIndex = cur.pitchIndex;\r\n            const interval = mode !== 'octave' ? 1 : 12;\r\n            let tempPitchIndex = cur.pitchIndex;\r\n\r\n            while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                if (mode !== 'scale' ||\r\n                    (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                ) {\r\n                    cur.pitchIndex = tempPitchIndex;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // 値が変わっていた場合のみ処理する\r\n            if (prevPitchIndex !== cur.pitchIndex) {\r\n                playSoundfont(cur.pitchIndex, this.store);\r\n                // 画面更新のためにインスタンスを複製する\r\n                this.tune.setNotesList(notesList.slice());\r\n\r\n                this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    this.tune.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    this.tune.setState(state);\r\n                }\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        updateCurChord: () => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[state.focusIndex].pos);\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.mouseState.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(state.focusIndex + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                this.tune.setState(state);\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curNormalLeft = getNormalizeLenFromNotes(cur.pos);\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = curNormalLeft + curLenNormal;\r\n            const prevNormalRight = state.focusIndex === 0 ? 0 : getNormalizeLenFromNotes(notesList[state.focusIndex - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[state.focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            previewStart(this.store, this);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    symbolKey: detail.symbolKey,\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    chordRoot: ((detail.root as DegreeProps).index + cache.keyIndex) % 12\r\n                },\r\n                voicingTable,\r\n                pattern: null\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setState: (backingState: BackingState) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingLayer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingLayer;\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const isExist = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = isExist != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        applyBackingToChordData: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const backingState = this.store.backingState as BackingState;\r\n            const voicingTable = backingState.voicingTable;\r\n            const backing = detail.backing;\r\n            backing.voicingList.length = 0;\r\n            if (voicingTable != null) {\r\n                for (let i = 0; i < voicingTable.length; i++) {\r\n                    for (let j = 0; j < voicingTable[i].length; j++) {\r\n                        if (voicingTable[i][j]) {\r\n                            backing.voicingList.push({ octave: i, struct: j });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (backingState.pattern == null) {\r\n                detail.backing.pattern = null;\r\n            } else {\r\n                const channelSize = backingState.pattern.channels.length;\r\n                const layers: BackingLayerData[] = [];\r\n                backingState.pattern.layers.forEach(layer => {\r\n                    const divs: NoteDiv[] = layer.noteDivList;\r\n                    const signals: BackingSignalProps[] = [];\r\n                    layer.table.forEach((record, i) => {\r\n                        record.forEach((cell, j) => {\r\n                            signals.push({x: j, y: i, val: cell == null ? '-' : cell.signal});\r\n                        });\r\n                    });\r\n                    layers.push({divs, signals});\r\n                });\r\n                backing.pattern = { channelSize, layers };\r\n            }\r\n            // detail.backing = backing;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        // getChannels: (table: boolean[][]): ChannelParam[] => {\r\n        //     const channels: ChannelParam[] = [];\r\n        //     for (let i = 0; i < table.length; i++) {\r\n        //         for (let j = 0; j < table[i].length; j++) {\r\n        //             if (table[i][j]) {\r\n        //                 channels.push({ octave: i, structIndex: j });\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     if (channels.length === 0) {\r\n        //         channels.push({ octave: -1, structIndex: 0 });\r\n        //     }\r\n        //     return channels;\r\n        // },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const newLen: NoteDiv = { rate: lenList[pattern.lenIndex].rate, div3: 0, isDot: false };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: NoteRate) => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.isDot = !cur.isDot;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex, 1);\r\n            });\r\n            layer.noteDivList.splice(pattern.lenIndex, 1);\r\n            // for(let i = 0; i < pattern.channels.length; i ++) {\r\n            //     layer.table[i].splice(pattern.lenIndex, 1);\r\n            // }\r\n            pattern.lenIndex--;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        changeLayer: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        }\r\n    }\r\n}","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./scoreData\"\r\nimport { ScoreState } from \"./scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { BackingState } from \"./backingState\"\r\n\r\n\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        dialogMode: 'none'\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        isTune: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        keySwitch: {\r\n            editMode: false,\r\n            symbolMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 4,\r\n        beatWidth: 120,\r\n        mouseState: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: 0,\r\n            mouseMeasurePos: 0\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 5\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false\r\n        },\r\n        isPreview: false\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        sampler: getDefaultSampler(),\r\n        piano: null,\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: []\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note : {\r\n        prevElement: string;\r\n        nextElement: string;\r\n        prevSection: string;\r\n        nextSection: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        editMode: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        symbolMode: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = ()=> {\r\n    return {\r\n        note: {\r\n            prevElement: 'ArrowLeft',\r\n            nextElement: 'ArrowRight',\r\n            prevSection: 'ArrowUp',\r\n            nextSection: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'f',\r\n            deleteCur: 'Delete',\r\n            editMode: 'Shift',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n            symbolMode: 'c',\r\n        }\r\n    } as KeyConfig;\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SysModalDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const mode = store.systemState.dialogMode;\r\n    const isDisplay = mode !== 'none';\r\n\r\n    return (\r\n        <_Blind isDisplay={isDisplay}>\r\n            <_Frame>\r\n\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default SysModalDialog;\r\n\r\nconst _Blind = styled.div<{\r\n    isDisplay: boolean;\r\n}>`\r\n    display: ${props => props.isDisplay ? 'block' : 'none'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000000d8;\r\n    z-index: 10;\r\n`;\r\nconst _Frame = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 500px;\r\n    height: 400px;\r\n    background-color: #464646cc;\r\n    border: 1px solid #dadada;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.7;\r\n    pointer-events: none;\r\n`;","import { Dispatcher } from \"../../../redux/dispatcher/dispatcher\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData, VoicingProps } from \"../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../redux/store/store\";\r\nimport { getDefaultBacking } from \"../../../utils/instrumentsUtil\";\r\nimport { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SymbolKey } from \"../../../utils/theoryUtils\";\r\n\r\n\r\nclass ScoreBuilder {\r\n\r\n    private scoreData: ScoreData\r\n\r\n    private curIndex: number;\r\n\r\n    constructor(init: DetailInit) {\r\n        this.scoreData = {\r\n            chordList: [\r\n                { type: 'init', detail: init },\r\n                { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n            ],\r\n            notesList: []\r\n        };\r\n\r\n        this.curIndex = 3;\r\n    }\r\n\r\n    public addChord = (beatLen: number, root: DegreeProps, symbolKey: SymbolKey) => {\r\n\r\n        const symbol = getSymbolFromKey(symbolKey);\r\n        const backing: ChordBacking = symbol.attr == undefined ? { voicingList: [], pattern: null } : getDefaultBacking(symbol.attr);\r\n        this.scoreData.chordList.splice(this.curIndex, 0, {\r\n            type: 'chord', detail: {\r\n                beatLen, minute: { head: 0, tail: 0 }, root, on: null, symbolKey,\r\n                backing\r\n            } as DetailChord\r\n        });\r\n        this.curIndex++;\r\n    }\r\n\r\n    public addChordDiatonic = (beatLen: number, scaleIndex: number) => {\r\n        const chord = DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        this.addChord(beatLen, chord.root, chord.symbolKey);\r\n    }\r\n\r\n    public getScoreData = () => { return this.scoreData; }\r\n}\r\n\r\nexport default ScoreBuilder;","import { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [source, setSource] = useState<string>('');\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Left>\r\n                <_Link onClick={() => {\r\n\r\n                    const data: ScoreData = {\r\n                        chordList: [\r\n                            { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' } as DetailInit },\r\n                            { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                            { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                            {\r\n                                type: 'chord', detail: {\r\n                                    beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                    backing: {\r\n                                        voicingList: [],\r\n                                        pattern: null\r\n                                    }\r\n                                } as DetailChord\r\n                            },\r\n                            { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                        ],\r\n                        notesList: []\r\n                    };\r\n                    setSource(JSON.stringify(data));\r\n                }} >Create an empty score.</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    setSource(JSON.stringify(builder.getScoreData()));\r\n                }} >Ⅰ→Ⅴ→Ⅵ→Ⅲm→Ⅳ→Ⅰ→Ⅱm→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    setSource(JSON.stringify(builder.getScoreData()));\r\n                }} >Ⅵm→Ⅳ→Ⅴ→Ⅰ→Ⅵm→Ⅳ→Ⅴ→Ⅰ</_Link>\r\n            </_Left>\r\n            <_Right>\r\n                <_Source value={source} onChange={e => setSource(e.target.value)} />\r\n                <_ButtonsDiv>\r\n                    <_Button onClick={() => {\r\n                        setSource(JSON.stringify(store.scoreData));\r\n                    }}>Reload</_Button>\r\n                    <_Button onClick={() => {\r\n                        const data = JSON.parse(source);\r\n                        dispatcher.score.setScoreData(data);\r\n                        store.scoreState.focusIndex = 2;\r\n                        dispatcher.score.setScoreState({ ...store.scoreState });\r\n\r\n                        dispatcher.score.setScoreTabIndex(1);\r\n                    }}>Apply</_Button>\r\n                </_ButtonsDiv>\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #888999;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\nconst _Source = styled.textarea`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    height: calc(100% - 44px);\r\n    /* background-color: #7e7e7e; */\r\n    text-align: left;\r\n    font-size: 20px;\r\n    resize: none;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #5f5f5f;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    width: 100px;\r\n    background-color: #afafaf;\r\n    border: 1px solid #4d4d4d;\r\n    color: #292929;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    &:hover {\r\n        background-color: #c4c4c4;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport { BUTTON_LARGE_HEIGHT, BUTTON_MIDIUM_HEIGHT, BUTTON_SMALL_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { _Object } from \"../../design/styles\";\r\n\r\nexport type ButtonSize = 'small' | 'midium' | 'large';\r\n\r\nexport interface ExecutableButtonProps {\r\n    labelText: JSX.Element;\r\n    size: ButtonSize;\r\n    width: number;\r\n    callback?: ()=>void;\r\n}\r\n\r\nexport const ExecutableButton = (props: ExecutableButtonProps) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const get = () => {\r\n        switch(props.size) {\r\n            case \"small\": return [BUTTON_SMALL_HEIGHT, 18];\r\n            case \"midium\": return [BUTTON_MIDIUM_HEIGHT, 18];\r\n            case \"large\": return [BUTTON_LARGE_HEIGHT, 18];\r\n        }\r\n    };\r\n    const [height, fontSize] = get();\r\n\r\n    return (\r\n        <_Wrap\r\n            width={props.width} height={height}\r\n            fontSize={fontSize}\r\n            backgroundColor={store.userEnv.colorProps.entryBackground}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelText}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nconst _Wrap = styled(_Object) <{\r\n    width: number;\r\n    height: number;\r\n    fontSize: number;\r\n    backgroundColor: string;\r\n}>`\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    ${props => {\r\n        if (props.width === 0) {\r\n            return css`\r\n                padding-left: 10px;\r\n                padding-right: 10px;\r\n            `;\r\n        } else {\r\n        }\r\n            return css`width: ${props.width}px`;\r\n    }};\r\n    height: ${props => props.height}px;\r\n    /* background-color: ${props => props.backgroundColor}; */\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    /* box-shadow: 2px 2px 2px 2px #000b3a1a; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        background: linear-gradient(to bottom, #f5efef, #c7afaf, #f5efef);\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/scoreState\";\r\nimport { getSymbolDerives as getSymbolDerives, getSymbolFromKey, SymbolKey, SymbolParams, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = getSymbolFromKey(detail.symbolKey) as SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: SymbolKey[] = [];\r\n        const parentLine: SymbolKey[] = [];\r\n        const childrenLine: SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = getSymbolDerives(baseSymbol.key);\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = getSymbolDerives(curSymbol.key);\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../../redux/store/scoreState\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        bar = cache.bar + 1;\r\n    }\r\n    const isError = bar !== -1 && cache.beat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n    }\r\n\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.beat === 0 ? <>&nbsp;</> : cache.beat}\r\n                        {/* {` (+0.25)`} */}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : ` (${cache.minute})`}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailChange } from \"../../../../../../redux/store/scoreData\";\r\n\r\nconst ElementDetailChange = (props: {\r\n    detail: DetailChange;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                Modulation\r\n            </_Type>\r\n            <_Detail>\r\n                Domm+1\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { DIATONIC_MAJOR_SCALE_DEGREE_NAMES, getChordRoot, getDegreeRoot, getSymbolFromKey, ScaleRelation } from \"../../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 0.5 | 0.25;\r\n\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isCurrent: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const minute = props.detail.minute;\r\n\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() =>\r\n        <_Wrap>\r\n            <_Degree\r\n                isSwitch={keySwitch.editMode && props.isCurrent}\r\n                scaleRelation={degreeRoot != null && DIATONIC_MAJOR_SCALE_DEGREE_NAMES.includes(degreeRoot + symbolName) ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={keySwitch.editMode && props.isCurrent}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n        </_Wrap>\r\n        , [\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            state.keySwitch.editMode,\r\n            cache.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 28px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 20px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #422e3099;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 0.5 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 0.25 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;","import styled from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    const jsxList: JSX.Element[] = [];\r\n    jsxList.push(<_Border key={0} />);\r\n    jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    /* border: 1px solid #00000083; */\r\n    background-color: #c2c2c237;\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n    height: 100%;\r\n    background-color: #d1d1d1;\r\n    vertical-align: middle;\r\n`;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #1b003d6f;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST } from \"../../../../../../utils/theoryUtils\";\r\n\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.timeSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst ElementDetailSection = (props: {\r\n    index: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>{curSection.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChange = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>Key</_Type>\r\n            <_Detail>C→Am</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { ElementType, useContext, useEffect, useRef } from \"react\";\r\nimport { CgDetailsLess } from \"react-icons/cg\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TypeElement } from \"typescript\";\r\nimport { DetailChange, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_SHARP_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SymbolEditor from \"../input/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailChange from \"./form/elementDetailChange\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcChange from \"./calc/calcChange\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = store.scoreState;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        dispatcher.score.setScoreState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    // if (props.index > state.elementCacheList.length - 1) {\r\n    //     return <></>;\r\n    // }\r\n\r\n    const isFocus = state.focusIndex === props.index;\r\n    const isSameSection = state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n    return (\r\n        <_Wrap\r\n            ref={wrapRef}\r\n            isSelectable={element.type !== 'fixed'}\r\n            isActive={isFocus}\r\n            isInactive={!isSameSection}\r\n            isChord={element.type === 'chord'}\r\n        >\r\n            <_Head>\r\n                {element.type !== 'chord' ? <></> : (\r\n                    <_CurKey>{KEY12_SHARP_LIST[cache.keyIndex]}</_CurKey>\r\n                )}\r\n            </_Head>\r\n\r\n            {/* 要素の入力フォーム */}\r\n            {['init', 'chord', 'section', 'change'].includes(element.type) ? (\r\n                <_Form\r\n                    ref={bodyRef}\r\n                    isActive={isFocus}\r\n                    isInactive={!isSameSection}\r\n                    type={element.type}\r\n                    isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                    onClick={() => {\r\n                        if (element.type === 'fixed') {\r\n                            return;\r\n                        }\r\n                        state.focusIndex = props.index;\r\n                        dispatcher.score.setScoreState(state);\r\n                    }}\r\n                >{(() => {\r\n                    switch (element.type) {\r\n                        case 'init': {\r\n                            const detail = element.detail as DetailInit;\r\n                            return (<ElementDetailInit detail={detail} />);\r\n                        }\r\n                        case 'section': {\r\n                            const detail = element.detail as DetailSection;\r\n                            return (<ElementDetailSection index={props.index} />);\r\n                        }\r\n                        case 'chord': {\r\n                            const detail = element.detail as DetailChord;\r\n                            return (<ElementDetailChord detail={detail} isCurrent={isFocus} />);\r\n                        }\r\n                        case 'change': {\r\n                            const detail = element.detail as DetailChange;\r\n                            return (<ElementDetailChange detail={detail} />);\r\n                        }\r\n                    }\r\n                })()}\r\n                </_Form>\r\n            ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n            {/* 入力フォーム下部の計算によって出力される情報 */}\r\n            {\r\n                element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                    element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                        element.type === 'change' ? (<CalcChange index={props.index} />) :\r\n                            <></>\r\n            }\r\n            <>{!(isCurrent && chordDetail != null && chordDetail.root != null && store.scoreState.keySwitch.symbolMode) ? '' :\r\n                <SymbolEditor />\r\n            }</>\r\n            {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                <_Operations>\r\n                    <_OperationItem>-</_OperationItem>\r\n                    <_OperationItem onClick={() => dispatcher.score.addChordElement()}>+</_OperationItem>\r\n                </_Operations>\r\n            )}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    border: solid 1px #00000049;\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #ff000084;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #006823a7;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'change' ? '' : css`\r\n        border: solid 1px #1800a1a7;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 6px;\r\n    ${props => props.isInactive ? '' : css`\r\n        background-color: #ebebeb84;\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #d85cce5a;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isChord: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isChord ? '' : css`\r\n        background-color: #e4ecd039;\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #fffb0018;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\nimport SymbolEditor from \"./input/symbolEditor\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const num = store.scoreData.chordList.length;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (store.scoreState.elementCacheList.length === num) {\r\n        for (let i = 0; i < num; i++) {\r\n            list.push(\r\n                <ScoreElement key={i} index={i} />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Frame> */}\r\n            <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note>\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #f1f1f1;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { playChordSoundfont } from \"../../../../../utils/instrumentsUtil\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                    const soundfont = store.instruments.piano;\r\n                    if (soundfont != null) {\r\n                        playChordSoundfont(soundfont, detail);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    dispatcher.backing.openBackingEditor();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.prevElement: {\r\n            dispatcher.score.moveElement(false);\r\n        }\r\n            break;\r\n        case config.nextElement: {\r\n            dispatcher.score.moveElement(true);\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.prevSection: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.nextSection: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'f': {\r\n            dispatcher.score.addChangeElement();\r\n        }\r\n            break;\r\n        case 'f': {\r\n            dispatcher.score.addChangeElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case '1':\r\n        case '2':\r\n        case '3':\r\n        case '4':\r\n        case '5':\r\n        case '6':\r\n        case '7': {\r\n            dispatcher.score.setDiatonicChord(Number(e.key) - 1);\r\n        }\r\n            break;\r\n    }\r\n}","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { backingEditorInput } from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    if (store.scoreState.hideMenu === 'none') {\r\n        if (isElement) {\r\n            if (keySwitch.editMode) {\r\n                switch (e.key) {\r\n                    case config.decRoot: {\r\n                        dispatcher.score.incrementDegreeRoot(false);\r\n                    }\r\n                        break;\r\n                    case config.incRoot: {\r\n                        dispatcher.score.incrementDegreeRoot(true);\r\n                    }\r\n                        break;\r\n                    case config.decBeat: {\r\n                        dispatcher.score.incrementBeatLen(false);\r\n                    }\r\n                        break;\r\n                    case config.incBeat: {\r\n                        dispatcher.score.incrementBeatLen(true);\r\n                    }\r\n                        break;\r\n                    case 'A': dispatcher.score.incrementMinuteValRelation(false, -0.25); break;\r\n                    case 'S': dispatcher.score.incrementMinuteValRelation(false, 0.25); break;\r\n                    case 'D': dispatcher.score.incrementMinuteValRelation(true, -0.25); break;\r\n                    case 'F': dispatcher.score.incrementMinuteValRelation(true, 0.25); break;\r\n                }\r\n            } else if (keySwitch.symbolMode) {\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.symbol.toNext(false);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.symbol.toNext(true);\r\n                    }\r\n                        break;\r\n                    case 'ArrowLeft': {\r\n                        dispatcher.symbol.toBase();\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        dispatcher.symbol.toDerive();\r\n                    }\r\n                        break;\r\n                }\r\n            } else {\r\n                NoteBasicInput(e, store, dispatcher);\r\n            }\r\n        }\r\n    } else if (store.scoreState.hideMenu === 'backing') {\r\n        backingEditorInput(e, store, dispatcher);\r\n    }\r\n}\r\n\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    if (store.scoreState.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case config.editMode: {\r\n                keySwitch.editMode = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.symbolMode: {\r\n                keySwitch.symbolMode = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { NoteStatus } from \"../../../../../redux/store/backingState\";\r\n\r\nexport const backingEditorInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.backingState;\r\n\r\n    if (state == null) return;\r\n\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const pattern = state.pattern;\r\n\r\n    switch (e.key) {\r\n        case 'b': {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }\r\n            break;\r\n        case 'Enter': {\r\n            dispatcher.backing.applyBackingToChordData();\r\n        }\r\n            break;\r\n    }\r\n\r\n    if (pattern != null) {\r\n        switch (e.key) {\r\n            case 'ArrowLeft': {\r\n                dispatcher.backing.movePatternColumn(false);\r\n            }\r\n                break;\r\n            case 'ArrowRight': {\r\n                dispatcher.backing.movePatternColumn(true);\r\n            }\r\n                break;\r\n        }\r\n        if (pattern.channelIndex === -1) {\r\n\r\n            switch (e.key) {\r\n                case 'ArrowUp': {\r\n                    // dispatcher.backing.moveChannelIndex(false);\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    // dispatcher.backing.moveChannelIndex(true);\r\n                }\r\n                    break;\r\n                case 'a': {\r\n                    dispatcher.backing.addPatternColumn();\r\n                }\r\n                    break;\r\n                case 'w': {\r\n                    dispatcher.backing.changeLayer();\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    dispatcher.backing.setCurrentDivRate(16);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    dispatcher.backing.setCurrentDivRate(8);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    dispatcher.backing.setCurrentDivRate(4);\r\n                }\r\n                    break;\r\n                case '4': {\r\n                    dispatcher.backing.setCurrentDivRate(2);\r\n                }\r\n                    break;\r\n                case '5': {\r\n                    dispatcher.backing.setCurrentDivRate(1);\r\n                }\r\n                    break;\r\n                case '.': {\r\n                    dispatcher.backing.toggleCurrentDivHalf();\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.backing.deleteColumn();\r\n                }\r\n                    break;\r\n                case 'f': {\r\n                    pattern.channelIndex = 0;\r\n                    update();\r\n                }\r\n                    break;\r\n\r\n            }\r\n        } else {\r\n\r\n            switch (e.key) {\r\n                case 'ArrowUp': {\r\n                    dispatcher.backing.moveChannelIndex(false);\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.backing.moveChannelIndex(true);\r\n                }\r\n                    break;\r\n                case 'f': {\r\n                    pattern.channelIndex = -1;\r\n                    update();\r\n                }\r\n                    break;\r\n                case 'Enter': {\r\n                    const curNotes = dispatcher.backing.getNotes();\r\n                    const notes: NoteStatus | null = curNotes == null ? { signal: 'n', timing: 0, velocityAdjust: 0 } : null;\r\n                    dispatcher.backing.setNotes(notes);\r\n                }\r\n                    break;\r\n\r\n            }\r\n        }\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ROOT_ALL, getChordRoot, getDegreeRoot, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport MinuteForm from \"./minuteForm\";\r\n\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    \r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i} isExist={isExist} onClick={() => {\r\n                const data = store.scoreData;\r\n                data.chordList = data.chordList.slice();\r\n                detail.beatLen = (i + 1);\r\n                data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={root != null && [0, 2, 4, 5, 7, 9, 11].includes(root.index)}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {getDegreeRoot(root)} ({getChordRoot(root, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_LabelBeat>{'Beat Length'}</_LabelBeat>\r\n                <_Beat>\r\n                    {beatItemsJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    <_LabelMinute>{'Minute Head'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={true} /> */}\r\n                    <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                    <_LabelMinute>{'Minute Tail'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_Root>\r\n                    {rootItemsJsx}\r\n                </_Root>\r\n                <_Symbol\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_Symbol>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _LabelBeat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #c50000; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100px;\r\n    text-align: left;\r\n    background-color: #9c93b9;\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 2px;\r\n        width: calc(100% - 4px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 75px;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _LabelMinute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #222222;\r\n    text-align: center;\r\n`;\r\n// const _Minutetem = styled.div<{\r\n//     isExist: boolean;\r\n// }>`\r\n//     display: inline-block;\r\n//     width: 20%;\r\n//     height: 20px;\r\n//     text-align: left;\r\n//     background-color: #4c3696;\r\n//     font-size: 18px;\r\n//     font-weight: 600;\r\n//     color: #ce0000;\r\n//     line-height: 12px;\r\n//     text-align: center;\r\n\r\n//     & span{\r\n//         display: inline-block;\r\n//         margin: 2px 0 0 2px;\r\n//         width: calc(100% - 4px);\r\n//         height: calc(100% - 4px);\r\n//         background-color: #9b8585;\r\n//         ${props => !props.isExist ? '' : css`\r\n//             /* background-color: #ebf37eb7; */\r\n//             background: linear-gradient(to bottom, #bdb652d2, #fff56cd3, #bdb652d2);\r\n//         `}\r\n//     }\r\n// `;\r\nconst _MinuteItem = styled.input<{\r\n    isReverse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: 20px;\r\n    color: #3b51d1;\r\n    ${props => !props.isReverse ? '' : css`\r\n        transform: rotateY(180deg);\r\n    `}\r\n`;\r\n\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 360px;\r\n    text-align: left;\r\n    background-color: #78b48c;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Root = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #e6e6e6;\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #ff6060bd;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #ff9090bc;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #90d3ffbb;`}\r\n    }\r\n`;\r\n\r\nconst _Symbol = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 90px);\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #99e07d;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isActive ? '' : css`background-color: #ff6060bd;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #ff9090bc;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const scaleItemJsxList: JSX.Element[] = ['major', 'minor'].map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n\r\n    const rateItemJsxList: JSX.Element[] = ['4/4', '3/4'].map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.timeSignature === item} onClick={() => {\r\n                detail.timeSignature = item as BeatSignature;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            <_TempoWrap>\r\n                <input\r\n                    type=\"number\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n                <input\r\n                    type=\"range\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n            </_TempoWrap>\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    margin: 5px 0 0 0;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        ['Intro', 'A-mero', 'B-mero', 'Sabi', 'C-mero', 'Outro'].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={()=>{\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        [1, 2, 3, 4].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item.toString()) !== -1;\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}>\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n            <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #b89b9b;\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 24px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: 60%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: 40%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #61b4b0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst NoteSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'change': return <></>;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default NoteSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../redux/store/scoreState\";\r\nimport { TIMELINE_BEAT_WIDTH } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport BlockItem from \"./blockItem\";\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    let curBeatJsx: JSX.Element = <></>;\r\n    let prevBeatJsx: JSX.Element = <></>;\r\n    let nextBeatJsx: JSX.Element = <></>;\r\n    let curMinuteJsx: JSX.Element = <></>;\r\n    let prevMinuteJsx: JSX.Element = <></>;\r\n    let nextMinuteJsx: JSX.Element = <></>;\r\n\r\n    const memoriJsxList: JSX.Element[] = [];\r\n\r\n    //現在の要素取得\r\n\r\n    let curIndex = 2;\r\n    let prevIndex = 2;\r\n    let nextIndex = dataList.length - 1;\r\n    let temp = focusIndex;\r\n    while (temp > 2) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            curIndex = temp;\r\n            break;\r\n        }\r\n        temp--;\r\n    }\r\n    // 前が存在する\r\n    if (curIndex > 2) {\r\n        temp = curIndex - 1;\r\n        while (temp > 2) {\r\n            const element = dataList[temp];\r\n            if (element.type === 'chord') {\r\n                prevIndex = temp;\r\n                break;\r\n            }\r\n            temp--;\r\n        }\r\n    }\r\n    temp = focusIndex + 1;\r\n    while (temp < dataList.length - 1) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            nextIndex = temp;\r\n            break;\r\n        }\r\n        temp++;\r\n    }\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const add = (sustain: number, cache: ElementCache): void => {\r\n        const adjust = cache.beat + cache.minute;\r\n        for (let i = 0; i < Math.floor(sustain / 0.25); i++) {\r\n            const pos = i + Math.floor(adjust / 0.25);\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { width: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n            memoriJsxList.push(\r\n                <_Memori\r\n                    key={memoriJsxList.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {pos % 16 === 0 ? <_Bar>{cache.bar + 1 + (adjust === 0 ? 0 : 1)}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        }\r\n    }\r\n\r\n    if (curIndex > 2) {\r\n\r\n        if (prevIndex === 2) {\r\n            prevBeatJsx = (\r\n                <_Prev sustain={4}>start</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={4} />\r\n            );\r\n\r\n            memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n        } else {\r\n            const chord = dataList[prevIndex].detail as DetailChord;\r\n            const cache = cacheList[prevIndex];\r\n            const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n            prevBeatJsx = (\r\n                <_Prev sustain={chord.beatLen}>Prev</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={sustain} />\r\n            );\r\n\r\n            add(sustain, cache);\r\n        }\r\n    }\r\n    if (curIndex === 2) {\r\n        curBeatJsx = (\r\n            <_Cur sustain={4}>start</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[curIndex].detail as DetailChord;\r\n        const cache = cacheList[curIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        curBeatJsx = (\r\n            <_Cur sustain={chord.beatLen}>Cur</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={sustain} />\r\n        );\r\n\r\n        add(sustain, cache);\r\n    }\r\n    if (nextIndex === dataList.length - 1) {\r\n        nextBeatJsx = (\r\n            <_Next sustain={4}>end</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[nextIndex].detail as DetailChord;\r\n        const cache = cacheList[nextIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        nextBeatJsx = (\r\n            <_Next sustain={chord.beatLen}>Next</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={sustain} />\r\n        );\r\n\r\n        add(sustain + 0.25, cache);\r\n    }\r\n\r\n    // const curSustain = nextCache.beat - curCache.beat;\r\n    return (\r\n        <_Wrap>\r\n            <_Blocks>\r\n                <_Beat>\r\n                    {prevBeatJsx}\r\n                    {curBeatJsx}\r\n                    {nextBeatJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    {prevMinuteJsx}\r\n                    {curMinuteJsx}\r\n                    {nextMinuteJsx}\r\n                </_Minute>\r\n            </_Blocks>\r\n            <_Measure>\r\n                {memoriJsxList}\r\n            </_Measure>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst BEAT_WIDTH = 50;\r\n\r\nconst _Wrap = styled.div`\r\n    overflow: hidden;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    height: 10px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.sustain * BEAT_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Prev = styled(_Item) <{\r\n}>`\r\n    background-color: rgba(0, 21, 211, 0.158);\r\n`;\r\n\r\nconst _Cur = styled(_Item) <{\r\n}>`\r\n    background-color: rgb(233, 5, 5);\r\n`;\r\n\r\nconst _Next = styled(_Item) <{\r\n}>`\r\n    background-color: rgba(31, 189, 0, 0.144);\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Start = styled.div`\r\n    display: inline-block;\r\n    width: ${BEAT_WIDTH * 4}px;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${BEAT_WIDTH / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { getIntervalValues, getSymbolFromKey, IntervalRelationProps } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const scaleList = cache == null ? [] : [0, 2, 4, 5, 7, 9, 11].map(value => (cache.keyIndex + value) % 12);\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = getIntervalValues((root.index + cache.keyIndex) % 12, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        for (let i = 0; i < 14; i++) {\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            {/* <_Info>{tipJsxList}</_Info> */}\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    /* background-color: #4b4b4b; */\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    border: 1px solid #ffffffda;\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#c3c3d6, #8989a8);\r\n    ` : css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#3e9ef7, #254e74);\r\n    ` : css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst InitialBeatTip = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const tipJsxList:JSX.Element[] = [];\r\n    for(let i = 0; i < 4; i ++) {\r\n        tipJsxList.push(\r\n            <_Tip key={i} isActive={state.initialBeat > i} onClick={()=> {\r\n                state.initialBeat = i + 1;\r\n                dispatcher.score.setScoreState(state);\r\n            }}/>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Label>inital beat</_Label>\r\n            <_WrapTip>{tipJsxList}</_WrapTip>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default InitialBeatTip;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\nconst _WrapTip = styled.div`\r\n    display: inline-block;\r\n    width: 142px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 8px;\r\n    border-radius: 4px;\r\n    border: solid 1px #747474;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 4px;\r\n    background-color: #d6d6d6;\r\n    ${props => !props.isActive ? '' : css`background-color: #eeedcf;`}\r\n    border: solid 1px #b9b9b9;\r\n    box-sizing: border-box;\r\n`;","import { ChannelParam, NoteStatus } from \"../redux/store/backingState\";\r\n\r\n\r\nexport class BackingUtil {\r\n\r\n    // オクターブの数\r\n    static OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    static STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    static CHANNEL_MAX = 12;\r\n\r\n    static getInitialRecord = (divCount: number) => {\r\n        return new Array<NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    static getVoicingStructs = (table: boolean[][]): ChannelParam[] => {\r\n        const channels: ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    static getChannels = (voicingStructs: ChannelParam[], size: number) => {\r\n        const channels: ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingPattern, BackingState } from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingPattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingPattern, BackingState, NoteSignal, NoteStatus } from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const layerJsxList: JSX.Element[][] = Array(2);\r\n    pattern.layers.forEach((layer, j) => {\r\n\r\n        const jsxLsit: JSX.Element[] = [];\r\n        for (let i = 0; i < channelCount; i++) {\r\n            const notesJsxLsit: JSX.Element[] = [];\r\n\r\n            layer.noteDivList.forEach((note, k) => {\r\n                const channelIndex = (channelCount - 1) - i;\r\n                const isActive = pattern.lenIndex === k;\r\n                const cell = layer.table[channelIndex][k];\r\n                const setNotesStatus = (status: NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                const isUse = cell != null;\r\n                const isEdit = isActive && pattern.channelIndex === i;\r\n                let rate = note.rate;\r\n                if (note.isDot) rate /= 1.5;\r\n                if (note.div3 !== 0) rate /= note.div3 / 3;\r\n                notesJsxLsit.push(\r\n                    <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit}>\r\n                        <_State isUse={isUse} signal={'n'}\r\n                            onClick={() => {\r\n                                if (cell == null) {\r\n                                    setNotesStatus({ signal: 'n', timing: 0, velocityAdjust: 0 });\r\n                                } else {\r\n                                    setNotesStatus(null);\r\n                                }\r\n                                update();\r\n                            }}\r\n                            onContextMenu={() => {\r\n                                pattern.channelIndex = i;\r\n                                pattern.lenIndex = k;\r\n                                update();\r\n                            }}\r\n                        />\r\n                    </_Notes>\r\n                );\r\n            });\r\n            jsxLsit.push(\r\n                <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                    {notesJsxLsit}\r\n                </_Record>\r\n            );\r\n        }\r\n        layerJsxList[j] = jsxLsit;\r\n    });\r\n\r\n\r\n    return (<>\r\n        <_Layer zIndex={1}>{layerJsxList[pattern.layerIndex]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #ffffff31;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ffffff56;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    isUse: boolean;\r\n    signal: NoteSignal;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => !props.isUse ? '' : css`\r\n        background-color: #f8fc029b;\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => !props.isUse ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingState } from \"../../../../redux/store/backingState\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternTable from \"./patternTable\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingPattern, BackingState, NoteStatus } from \"../../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.getVoicingStructs(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs ,pattern.channels.length + 1);\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.getVoicingStructs(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs ,pattern.channels.length - 1);\r\n        update();\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap>\r\n            <_Struct>{props.soundFullName}</_Struct>\r\n            <_Option onClick={deleteRecord}>-</_Option>\r\n            <_Option onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingPattern, BackingState } from \"../../../../redux/store/backingState\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n    const pattern = state.pattern;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    if (pattern != null) {\r\n        const channels = pattern.channels;\r\n        channels.forEach((channel, i) => {\r\n            let name = '-';\r\n            if (channel.octave !== -1) {\r\n                const soundIndex = chordInfo.chordRoot + IntervalRelationProps[symbol.structs[channel.structIndex]];\r\n                const octave = channel.octave + Math.floor(soundIndex / 12);\r\n                name = KEY12_SHARP_LIST[soundIndex % 12] + octave;\r\n            }\r\n            channelJsxList.push(\r\n                <ChannelItem key={i}\r\n                    index={i}\r\n                    soundFullName={name}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { VoicingTable } from \"../../../redux/store/backing/voicingTable\";\r\nimport { BackingPattern, BackingState, NoteRate, NoteStatus } from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternStatus = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    const setRate = (rate: NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={true} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.getVoicingStructs(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot, () => {\r\n            cur.isDot = !cur.isDot;\r\n            update();\r\n        })}\r\n        {createItem('1/3', cur.div3 === 1, () => {\r\n            if (cur.div3 === 1) cur.div3 = 0;\r\n            else cur.div3 = 1;\r\n            update();\r\n        })}\r\n        {createItem('2/3', cur.div3 === 2, () => {\r\n            if (cur.div3 === 2) cur.div3 = 0;\r\n            else cur.div3 = 2;\r\n            update();\r\n        })}\r\n    </_WrapLen>;\r\n\r\n\r\n    const selectedCell = pattern.channelIndex === -1 ? null :\r\n        pattern.layers[pattern.layerIndex].table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', selectedCell == null, () => {\r\n\r\n            update();\r\n        })}\r\n\r\n        {createItem('□', selectedCell != null && selectedCell.signal === 'n', () => {\r\n\r\n            update();\r\n        })}\r\n        {createItem('・', selectedCell != null && selectedCell.signal === 's', () => {\r\n\r\n            update();\r\n        })}\r\n        {createItem('⁀', selectedCell != null && selectedCell.signal === 't', () => {\r\n\r\n            update();\r\n        })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternStatus;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState } from \"../../../redux/store/backingState\";\r\nimport { BackingPattern, ChannelParam, BackingLayer } from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternStatus from \"./patternStatus\";\r\n\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button isActive={isUsePattern}\r\n                        onClick={() => {\r\n                            if (!isUsePattern) {\r\n                                const table = state.voicingTable as boolean[][];\r\n                                const voicingStructs = BackingUtil.getVoicingStructs(table);\r\n                                const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n                                state.pattern = {\r\n                                    layerIndex: 0,\r\n                                    lenIndex: 0,\r\n                                    channelIndex: -1,\r\n                                    channels,\r\n                                    isUsePedal: false,\r\n                                    layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n                                } as BackingPattern;\r\n                                update();\r\n                            } else {\r\n                                state.pattern = null;\r\n                                update();\r\n                            }\r\n                        }}>Use\r\n                    </_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternStatus /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #fa1d1d;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #dadada;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState, ChannelParam } from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { playChordSoundfont } from \"../../../utils/instrumentsUtil\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n\r\n    const table = state.voicingTable as boolean[][];\r\n    const pattern = state.pattern;\r\n\r\n    const voicingLaneJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const tipJsxList: JSX.Element[] = [];\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = symbol.structs.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n\r\n            const interval = IntervalRelationProps[symbol.structs[j]];\r\n            const chordIndex = (chordInfo.chordRoot + interval) % 12;\r\n            const octave = i + Math.floor((chordInfo.chordRoot + interval) / 12);\r\n\r\n            const name = !isEnable ? '' : `${KEY12_SHARP_LIST[chordIndex]}${octave}`;\r\n            tipJsxList.push(\r\n                <_VoicingItem key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: ChannelParam[] = BackingUtil.getVoicingStructs(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.piano;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_VoicingItem>\r\n            );\r\n        }\r\n        voicingLaneJsxList.push(\r\n            <_VoicingLane key={i}>\r\n                {tipJsxList}\r\n            </_VoicingLane>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Info>\r\n\r\n            </_Info>\r\n            <_Main>\r\n                <_Left>\r\n                    <_Relation>root [C]</_Relation>\r\n                    <_Relation>long3 [E]</_Relation>\r\n                    <_Relation>perfect5 [G]</_Relation>\r\n                </_Left>\r\n                <_Right>{voicingLaneJsxList}</_Right>\r\n            </_Main>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _Info = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _Relation = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _VoicingLane = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VoicingItem = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #43a6c4;\r\n    color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #3f70bb;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState } from \"../../redux/store/backingState\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <VoicingChooser />\r\n            <PatternFrame />\r\n            <_FooterDiv>\r\n                <_Button isEnable={true}>Test</_Button>\r\n                <_Button isEnable={true}>Cancel</_Button>\r\n                <_Button isEnable={true} onClick={()=> {\r\n                    dispatcher.backing.applyBackingToChordData();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport PatternFrame from \"../../../backing/pattern/patternFrame\";\r\nimport VoicingChooser from \"../../../backing/voicing/voicingChooser\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={chordList[focusIndex].type === 'chord'}\r\n                onClick={() => {\r\n                    dispatcher.backing.openBackingEditor();\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../redux/store/scoreData\";\r\nimport { ElementCache, SectionCache } from \"../../../../redux/store/scoreState\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport NoteSideForm from \"./side/noteSideForm\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport { getBeatRate } from \"../../../../utils/theoryUtils\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\n\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const init = (store.scoreData.chordList[0].detail as DetailInit);\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    // useEffect(() => {\r\n    // }, []);\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n        // acoustic_guitar_steel\r\n        Soundfont.instrument(new AudioContext(), 'bright_acoustic_piano',\r\n            { gain: 5, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.score.setPiano(soundFontPlayer);\r\n            });\r\n    }, [isTune]);\r\n\r\n    useEffect(() => {\r\n        const elementCacheList: ElementCache[] = [];\r\n        const sectionCacheList: SectionCache[] = [];\r\n\r\n        let prevBeat = 0;\r\n        let totalBeat = 0;\r\n        let prevMinute = 0;\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let keyIndex = -1;\r\n        let sectionBeatSum = 0;\r\n\r\n        chordList.forEach((element, i) => {\r\n            const type = element.type;\r\n            switch (type) {\r\n                case 'fixed': {\r\n\r\n                }\r\n                    break;\r\n                case 'init': {\r\n                    const detail = element.detail as DetailInit;\r\n                    keyIndex = detail.keyIndex;\r\n                }\r\n                    break;\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'chord': {\r\n                    const detail = element.detail as DetailChord;\r\n                    prevBeat = totalBeat;\r\n                    totalBeat += detail.beatLen;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    prevMinute = totalMinute;\r\n                    totalMinute += detail.minute.head;\r\n                    totalMinute += detail.minute.tail;\r\n                }\r\n                    break;\r\n                case 'change': {\r\n\r\n                }\r\n                    break;\r\n            }\r\n\r\n            const pastSecond = 60000 / init.bpm * (prevBeat + prevMinute);\r\n            const beatRate = getBeatRate(init.timeSignature)[0];\r\n            elementCacheList.push({\r\n                bar: Math.floor(prevBeat / beatRate),\r\n                beat: prevBeat % beatRate,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                sectionNo,\r\n                pastSecond,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        store.scoreState.elementCacheList = elementCacheList;\r\n        store.scoreState.sectionCacheList = sectionCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }, [chordList, chordList.length, init.bpm]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Left>\r\n                <_Head><InitialBeatTip /></_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP><HarmMeasure /></_TIMELINE_WRAP>\r\n                    <_INFO_WRAP><ChordInfo /></_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right>\r\n                <NoteSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n`;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #ddc2c2;\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 36px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #e7e7e6be;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #aaaaaa;\r\n    border-radius: 20px 20px 20px 20px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 20px;\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: #888;\r\n        /* background-color: #c500003b; */\r\n        line-height: 18px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 16px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #10c5003a; */\r\n        line-height: 16px;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barLength * 4 * 4; i++) {\r\n            let barJsx = <></>;\r\n            if (i % 16 == 0) {\r\n                barJsx = <_Bar>{Math.floor(i / 16) + 1}</_Bar>\r\n            }\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={beatWidth}>\r\n                    {barJsx}\r\n                </_Scale>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const symbolNmae = getSymbolFromKey(detail.symbolKey)?.name;\r\n                const degreeName = detail.root == null ? '-' :\r\n                    getDegreeRoot(detail.root) + symbolNmae;\r\n                const chordName = detail.root == null ? '-' :\r\n                    getChordRoot(detail.root, init.keyIndex) + symbolNmae;\r\n                jsxList.push(\r\n                    <_ChordItem key={jsxList.length}\r\n                        width={beatWidth * (detail.beatLen + detail.minute.head + detail.minute.tail)}\r\n                        isActive={element == curChord}\r\n                        onClick={() => {\r\n                            state.isTune = false;\r\n                            state.focusIndex = i;\r\n                            dispatcher.score.setScoreState(state);\r\n                        }}\r\n                    >\r\n                        <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                    </_ChordItem>\r\n                );\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_Measure ref={measureRef}>\r\n            {measureJsxList}\r\n            <_MousePos\r\n                left={mouseMeasurePos * beatWidth * rate}\r\n                width={beatWidth * rate}\r\n            />\r\n        </_Measure>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _Measure = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Bar = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #ec0000;\r\n    left: -5px;\r\n    top: -20px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #758f94;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #637596;\r\n    ${props => !props.isStruct ? '' : css`background-color: #949494;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                dispatcher.tune.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.tune.setInstrument(soundFontPlayer);\r\n                    }).then(() => {\r\n                        alert('load successful!');\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #c7c6abda;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fffd7eda;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e6e2c5da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #fffd7eda;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst ControlButton = (props: {\r\n    labelName: string;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ControlButton;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #a8bae0, #818ada, #a8bae0);\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d5d6e;\r\n    border-radius: 2px;\r\n    border: solid 1px #737374;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to bottom, #c2d0f0, #929beb, #c2d0f0);\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\n\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={state.quantize === 4} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.tune.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.tune.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} />\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 6 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 3 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.mouseState;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.mouseState;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        else notesState.side = 'normal';\r\n                        break;\r\n                    }\r\n                };\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    notes.len = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    // dispatcher.tune.setNotesList(notesList.slice());\r\n                    store.scoreData.notesList = notesList.slice();\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    notes.pos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    // dispatcher.tune.setNotesList(notesList.slice());\r\n                    store.scoreData.notesList = notesList.slice();\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.mouseState;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.tune.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.tune.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n        const mouse = state.mouseState;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    state.isPreview = false;\r\n                    store.instruments.sampler.releaseAll();\r\n                    state.focusIndex = state.lastFocus;\r\n                    store.reserveTasks.forEach(id => clearTimeout(id));\r\n                    dispatcher.system.setReserveTasks([]);\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move) {\r\n            if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.tune.incrementCurNoteKey(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.tune.incrementCurNoteKey(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveNotes(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.tune.incrementCurNoteKey(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.tune.incrementCurNoteKey(false, 'normal'); break;\r\n                case 'ArrowLeft': dispatcher.tune.moveFocus(false); break;\r\n                case 'ArrowRight': dispatcher.tune.moveFocus(true); break;\r\n                case 'a': dispatcher.tune.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.tune.adjustScrollX(); break;\r\n                case 'e': dispatcher.tune.adjustScrollY(); break;\r\n            }\r\n        }\r\n\r\n        switch (e.key) {\r\n            case '1': {\r\n                state.quantize = 4;\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case '2': {\r\n                state.quantize = 2;\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case '3': {\r\n                state.quantize = 1;\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case '/': {\r\n                if ([3, 6].includes(state.quantize)) {\r\n                    state.quantize /= 3;\r\n                } else {\r\n                    state.quantize *= 3;\r\n                }\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case 'Delete': {\r\n                const notesList = store.scoreData.notesList;\r\n                notesList.splice(state.focusIndex, 1);\r\n                dispatcher.tune.setNotesList(notesList);\r\n                state.focusIndex--;\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case ' ': {\r\n                dispatcher.tune.previewStart();\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    keySwitch.octave = isPress;\r\n                    dispatcher.tune.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n                case 'c': {\r\n                    keySwitch.scaleMode = isPress;\r\n                    dispatcher.tune.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n                case 'f': {\r\n                    keySwitch.resize = isPress;\r\n                    dispatcher.tune.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n                case 'd': {\r\n                    keySwitch.move = isPress;\r\n                    dispatcher.tune.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SCALE_INDEX } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.mouseState;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n\r\n    const barCount = 20;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        const info = state.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.tune.setInstrument(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barCount * 4 * 4; i++) {\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={state.beatWidth} />\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barCount]);\r\n\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n    const scaleLineJsxList = useMemo(() => {\r\n        const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < PITCH_MAX; i++) {\r\n            const keyIndex = getKeyIndexFromPitcher(i);\r\n            list.push(\r\n                <_ScaleLine key={i}\r\n                    isScale={scaleIndexies.includes(keyIndex)}\r\n                    isBase={keyIndex === scaleIndexies[0]}\r\n                />\r\n            );\r\n        }\r\n        return list;\r\n    }, [init.keyIndex]);\r\n\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            const notesLeft = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n            const notesRight = notesLeft + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const middle = (scroll + tableWidth / 2);\r\n                if (notesLeft - middle > tableWidth / 2 ||\r\n                    middle - notesRight < -tableWidth / 2) {\r\n                    continue;\r\n                }\r\n            }\r\n            const isActive = state.focusIndex === i;\r\n            const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={getNormalizeLenFromNotes(notes.pos) * state.beatWidth}\r\n                    width={getNormalizeLenFromNotes(notes.len) * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        notesList.splice(state.focusIndex, 1);\r\n                        dispatcher.tune.setNotesList(notesList);\r\n                        state.focusIndex--;\r\n                        dispatcher.tune.setState(state);\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={getMinimumLenUnit(notes.len)}\r\n                        isScale={isScale}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move,\r\n        invalidate]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header >\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef}\r\n                    onScroll={() => {\r\n                        const refs = store.refs.melody;\r\n\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const scrollLeft = refs.table.scrollLeft;\r\n                            const scrollTop = refs.table.scrollTop;\r\n                            refs.measure.scrollTo({ left: scrollLeft });\r\n                            refs.chord.scrollTo({ left: scrollLeft });\r\n                            refs.pitch.scrollTo({ top: scrollTop });\r\n                        }\r\n                        update();\r\n                    }}\r\n                >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleLineJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={(e) => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={(e) => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={(e) => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #534b81;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #0044ff1f;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #39cfd452;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `};\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `};\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb006d;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #007a1428;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport { FiHelpCircle } from 'react-icons/fi'\r\nimport { AiOutlinePlaySquare } from 'react-icons/ai'\r\nimport { BsStopBtn } from 'react-icons/bs'\r\nimport { AiTwotoneSetting } from 'react-icons/ai'\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const switchMode = () => {\r\n        state.isTune = !state.isTune;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode>\r\n                    <_ModeItem isActive={!state.isTune} onClick={() => {\r\n                        if (state.isTune) switchMode();\r\n                    }}>Harmonize</_ModeItem>\r\n                    <_ModeItem isActive={state.isTune} onClick={() => {\r\n                        if (!state.isTune) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <ExecutableButton labelText={<><FiHelpCircle /> Help</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><AiOutlinePlaySquare /> Play</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><BsStopBtn /> Stop</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><AiTwotoneSetting /> Setting</>} size={'midium'} width={110} />\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'r': switchMode(); break;\r\n                    }\r\n                }}>\r\n                <_SECTIONS><HarmSections /></_SECTIONS>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isTune} />\r\n                    <MelodyFrame isActive={state.isTune} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 140px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    { name: 'Preview', disable: !isAccept, cont: <div></div> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DegreeProps, getSymbolFromKey, IntervalRelationProps, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    sampler.releaseAll();\r\n\r\n                    const symbol = getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, disable: true, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, disable: true, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, disable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, disable: true, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { GlobalContext } from './systemEntry';\r\n\r\nconst Splash = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                dispatcher.system.switchSplashToMain();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n        <_Wrap isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Title>\r\n                <span>L</span>iCreSia\r\n            </_Title>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Wrap = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    /* width: 500px;\r\n    height: 500px; */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #d8d8d8; */\r\n    background: radial-gradient(#868686, #ffffff);\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 15%;\r\n    width: 100%;\r\n    height: 400px;\r\n    background-color: #ffffff1f;\r\n    /* background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913); */\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    line-height: 350px;\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\n\r\nconst TotalHeader = () => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport SysModalDialog from '../dialog/sysModalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> : <Splash />}\r\n                <_Wrap>\r\n                    <SysModalDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n  \n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    window.addEventListener(\"keydown\", function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    }, false);\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}