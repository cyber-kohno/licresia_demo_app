{"version":3,"sources":["system/utils/dataUtil.tsx","system/redux/reducer.tsx","system/utils/theoryUtil.tsx","system/utils/backingUtil.tsx","system/utils/score/cacheUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/base/components/tab/tabbedPane.tsx","system/base/design/styles.tsx","system/utils/form/formUtiil.tsx","system/utils/form/validateUtil.tsx","system/contents/dialog/confirmDialog.tsx","system/contents/dialog/accountFrame.tsx","system/redux/dispatcher/dispatcher.tsx","system/utils/instrumentsUtil.tsx","system/redux/store/state/dataHistory.tsx","system/utils/LibraryUtil.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/globalDialog.tsx","system/base/components/tab/channelPane.tsx","system/contents/score/manage/chordProg/progUnitSearcher.tsx","system/contents/score/manage/chordProg/progStyle.tsx","system/contents/score/manage/chordProg/progBackingUtil.tsx","system/contents/score/manage/chordProg/progUtil.tsx","system/contents/score/manage/chordProg/progCustomFrame.tsx","system/utils/dummyUtil.tsx","system/contents/score/manage/chordProg/progOutputFrame.tsx","system/contents/score/manage/chordProg/progTemplateUtil.tsx","system/contents/score/manage/chordProg/progTemplateFrame.tsx","system/contents/score/manage/chordProg/chordProgDialog.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/tool/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailAlter.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcAlter.tsx","system/contents/score/edit/harmonize/tool/chordEditor.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/utils/score/harmonizeUtil.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/input/presetSelectorInput.tsx","system/contents/score/edit/harmonize/input/themaSelectorInput.tsx","system/contents/score/edit/harmonize/side/sideFromStyles.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/side/sideFormAlter.tsx","system/contents/score/edit/harmonize/side/minuteForm.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/harmSideForm.tsx","system/utils/pianoViewer.tsx","system/contents/score/edit/harmonize/info/structViewer2.tsx","system/contents/backing/pattern/builder/patternDetail.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternPedal.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternVelocity.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternOptions.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/thema/presetSelectorFrame.tsx","system/contents/thema/themaSelectorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/initial/harmClipboard.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/initial/harmBackingLibrary.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/melody/util/melodyTimelineMouseOperation.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/preview/scoreInfoTab.tsx","system/contents/preview/previewChannel.tsx","system/contents/custom/backing/treeUtil.tsx","system/contents/custom/backing/form/themaEditTabUtil.tsx","system/contents/custom/backing/form/attrFormTab.tsx","system/contents/custom/backing/form/baseFormTab.tsx","system/contents/custom/backing/form/methFormTab.tsx","system/contents/custom/backing/form/pattFormTab.tsx","system/contents/custom/backing/form/rootFormTab.tsx","system/contents/custom/backing/form/sustFormTab.tsx","system/contents/custom/backing/form/voicFormTab.tsx","system/contents/custom/backing/hierarchyNavi.tsx","system/contents/custom/backing/themaUtil.tsx","system/contents/custom/backing/backingLibraryTab.tsx","system/contents/custom/customChannel.tsx","system/contents/entry/directView.tsx","system/contents/entry/directLogin.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/utils/canvasUtil.tsx","system/contents/dialog/login/loginCreateAccount.tsx","system/contents/dialog/login/loginLogin.tsx","system/contents/dialog/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","seq","hash","encode","Base64","hashedSeq","hashids","Number","decode","getHashedFromScoreSeq","sendQueryRequestToAPI","scoreSeq","hashedKey","json","fetch","mode","method","headers","Accept","body","JSON","stringify","createSendMailRequestInit","queryType","sql","createQueryRequestInit","findUserInfoList","a","response","results","map","res","id","email","password","nextSeq","DataUtil","userSeq","val","content","encodeURIComponent","zlib","gzipSync","toString","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","plainData","state","fileHandle","createWritable","writable","text","gZip","write","close","getFile","alert","window","showSaveFilePicker","types","accept","then","handle","catch","console","log","ActionType","reducer","store","action","type","payload","SET_USER_ENV","userEnv","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","getBeatProps","keyIndex","scale","indexOf","relation","beatSignature","beatMemoriCount","barBeatCnt","SYMBOL_LIST","beatLen","minute","bpm","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","root","index","isFlat","symbolKey","props","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","baseKeyIndex","TheoryUtil","KEY12_FLAT_LIST","KEY12_SHARP_LIST","find","symbol","list","forEach","push","rootIndex","on","chordRootIndex","chordFullName","getRootName","chordOnIndex","onName","structList","struct","interval","soundIndex","adjustOctave","Math","floor","isFlatFromRelation","sameIndex","some","info","i","splice","unshift","sort","b","onIndex","sound","onChordIndex","tempList","length","divCount","Array","fill","vctbl","voics","j","octave","structIndex","voicingList","editorPattern","channelSize","channels","layers","layer","divs","noteDivList","signals","table","record","cell","x","y","status","notesList","vels","velocityList","slice","pedals","pedalActs","pedal","divIndex","channelParams","size","channel","reverse","scoreLayers","scoreLayer","notes","item","baseInfo","backing","pitchIndexList","chordTime","pattern","soundName","playHarmony","adjustRate","pedalRangeList","total","timeList","div","start","normal","rate","isDot","div3","sustain","undefined","divTime","pedalInfo","end","ignoreList","ig","timeInfo","timingAdj","timing","startTime","sustainTime","signal","inc","isNext","nextNotes","next","k","notesTail","velAdj","gain","setTimeout","dispatcher","harmonyFont","stop","isPreview","clearInterval","setState","memoriCount","head","tail","getUsingLenFromDivs","reduce","prev","cur","len","checkOverlapBackLayer","structCnt","col","isExist","voicing","voicingTable","patternProps","voicingStructs","BackingUtil","buildVoicsFromTable","getChannels","convertEditorLayerFromScore","channelIndex","lenIndex","layerIndex","detail","chordBacking","hasError","limitLen","getLimitLen","totalLen","chordInfo","init","baseLayer","backLayer","getDivRange","left","right","isOverlap","backLeft","backRight","note","includes","chordList","elementCacheList","sectionCacheList","beatCacheList","scaleCacheList","tempoCacheList","measureCacheList","totalMinute","sectionNo","sectionBeatSum","pastSecond","curSecond","chordIndex","curMemoriCount","totalBarCount","totalMemoriCount","beatRangeMemoriCount","totalBeat","totalMemoriBarCount","chordBlockNo","scaleMemoriCount","tempoMemoriCount","addTempoRange","beatRate","beatProps","memoriCnt","element","prevBeat","prevMemoriCount","prevBarCount","prevMinute","fixed","labelName","beatSum","rangeIndexStart","rangeIndexEnd","prevBar","calcSustainMsec","barMemoriCount","dispBarCount","barCount","alterType","modRel","dommVal","keyAdj","tempoRel","tempoDiff","tempoRate","tempoAbs","bar","surplusBeat","curTotalMemori","reffers","chordCacheList","createChordCacheList","score","setScoreState","cache","getSymbolFromKey","getChordDetails","backingError","hasBackingError","pos","curMemori","range","posTime","pastLen","last","CacheUtil","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len32","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","ml","getSortetdNotesLen","len32Cnt2","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","instrument","melodyFont","play","duration","soundFullName","stopPreview","melody","adjustScrollX","previewHarmony","data","focusIndex","lastFocus","update","firstTime","getTimeInfoFromNotesPos","lenTime","pitch","pitchIndex","destIndex","isSolo","system","setReserveTasks","cacheList","chordCache","pitchList","getPitchListFromVoicing","playBacking","tableMouse","curChord","MelodyUtil","SystemConst","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","PATTERN_HEADER_HEIGHT","PATTERN_BODY_HEIGHT","NOTES_1BAR_WIDTH","TabbedPane","useState","activeNo","setActiveNo","tabRecordNum","useEffect","_LabelList","tabElements","tab","isActive","isDisable","disable","selectTab","selectTabIndex","_ContList","cont","TabLabel","_TabLabel","onClick","TabContents","_Contents","styled","css","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","Styles","_CSS_LABEL_SMALL","_CSS_LABEL_MIDIUM","_CSS_DISABLE","FormUtil","isPassword","validaters","validates","errors","checkable","dependency","dep","value","getErrors","validater","checker","errorType","setCheckable","isEnable","textAlign","isCenter","marginTop","titleLabel","_ItemnLabel","_ItemnInput","hasTitle","width","placeholder","onChange","e","target","readOnly","isReadOnly","buttons","button","_Button","callback","label","_Message","message","isLink","clickAction","_BorderText","title","_BorderPanel","innerJsx","height","_InfoDiv","color","textRecords","_Record","CSS_BUTTON_DISABLE","CSS_LABEL_MIDIUM","input","select","CSS_LABEL_SMALL","ValidateUtil","str","min","max","ch","charAt","conditions","ConfirmDialog","useContext","GlobalContext","closeDialog","_Frame","_Main","_Inner","split","msg","Message","ButtonRecord","AccountFrame","tabIndex","setTabIndex","userId","setUserId","oldPass","setOldPass","newPass","setNewPass","newPassConfirm","setNewPassConfirm","setEmail","userIdList","setUserIdList","emailList","setEmailList","isModify","setModify","loginProps","login","reloadInfo","getHashedFromUserSeq","history","replaceState","userTabJsx","_Wrap","InputTextForm","checkStringLength","checkAsciiChars","permitRegist","_Header","_Body","_Footer","passwordStr","setUserEnv","setDialog","Component","updateUserInfo","Dispatcher","dispatch","jsx","dialog","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setInvalidate","saveFile","directScore","setHarmonyFont","soundfontPlayer","harmony","setInstruments","setScoreTabIndex","scoreTabIndex","clearCache","distIndex","initialBeat","setKeySwitch","keySwitch","setScoreData","moveElement","sub","moveDist","releaseRange","isTail","distHead","distTail","moveSection","curSectionIndex","curSectionInfo","curElementType","flashElement","incrementDegreeRoot","isUp","incrementBeatLen","updateHarmonizeCache","incrementMinuteVal","incrementMinuteValRelation","nearIndex","addChordElement","curBeatLen","addSectionElement","addAlterElement","removeElement","removeBacking","copyElementList","parse","copiedElementList","cloneBacking","pasteElementList","setDiatonicChord","diatonicIndex","chord","DIATONIC_MAJOR_SCALE_LIST","DIATONIC_MINOR_SCALE_LIST","setDefaultBacking","getDefaultBacking","pastBacking","openLibraryWnd","isPreset","hideMenu","symbolAttr","closeAction","closeLibraryWnd","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setMelodyFont","incrementCurPitch","isUpper","filter","dataHistory","add","normalLeft","scaleInfo","getKeyScaleFromNotesPos","scaleIndexies","MAJOR_SCALE_INTERVALS","MINOR_SCALE_INTERVALS","prevPitchIndex","tempPitchIndex","adjustScrollY","moveFocus","updateCurChord","moveDestFocus","beatWidth","searchedChord","addNotes","focus","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","posA","posB","undo","redo","openBackingEditor","getInitVoicingTable","getEditorPatternFromChordBacking","getVoicingListFromTable","checkEditorError","editor","isUpdate","mappingEditorToScore","closeBackingEditor","getInitialLayer","buildPatternProps","addPatternColumn","lenList","curLen","newLen","column","updateErrorState","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","isPermitDot","getNotes","setNotes","incrementVel","after","deleteColumn","switchLayer","switchMode","testBacking","thema","mappingEditorToThema","mappingSelectorToScore","this","DataHistory","ret","isChordElement","isUseLib","activeThemaIndex","isRangeSelect","attrsSearch","patts","patt","preset","voicCallback","pattVoicCallback","refer","attrs","master","fPatt","getAttrs","symbols","roots","minIdx","maxIdx","voic","preUsies","preUse","depPatt","presKey","searchSustMeth","sustMet","condition","defs","pattName","source","searchPattMeth","pattMet","pattCallback","sust","beat","patternList","pattIndex","depend","masterIdx","isBlank","pattIdx","isMatch","isDepend","conditionList","meths","meth","prenams","applyList","con","backingList","dispName","LibraryUtil","initialStore","keyConfig","up","down","addChord","addSection","addChange","deleteCur","distMode","edit1","edit2","incRoot","decRoot","incBeat","decBeat","colorProps","entryBackground","editable","themaList","getDefaultLibs","isMelody","sustainMode","chordMode","symbolMode","control","minHeadMode","minTailMode","backingDataHistory","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","timelineMouse","soundfontInfo","scaleMode","resize","move","shift","notesCacheList","harmonize","measure","harmoniizeInvalidate","GloballDialog","_Blind","ChannelPane","icon","ChannelLabel","_Item","_Icon","ChannelContents","_Label","UNIT_LIST","step","firstChord","secondChord","parseChord","baseBeat","keyList","newBeat","diatonicNo","diatonicProps","adjustKey","adjust","shortNameKey","substring","getSymbolFromShortName","shortName","ProgUnitSearcher","ProgStyle","progBackingUtil","patternConditions","voicingConditions","STEP_LIST","getDefaultChord","sectionName","backingNo","outputUnits","elementList","block","blockDetail","sample","BACKING_SAMPLE_LIST","conPa","unZip","conVo","ProgUtil","ProgCustomFrame","setStep","degreeFilters","setDegreeFilters","lastChord","setLastChord","setFocusIndex","stepList","useMemo","getFilteredStepList","stepOptionJsxList","disp","degreeOptionJsxListArray","DEGREE_FILTER_LIST","unitList","search","dispUnitJsx","tootTipStr","beatCycle","chordName","getDegreeRoot","divStr","_Span","_ChordName","_ProgItem","progUnitList","progJsxList","degreeChangeAction","_TitleLabel","_Combobox","stepChangeAction","getLastChordName","_ListDiv","_ButtonDiv","_ExecutableButton","unitNum","reset","progUnit","insertProgUnit","RECORD_HEIGHT","span","DummyUtil","ProgOutputFrame","SECTION_CATEGORY","SECTION_NO","secCatOptionJsxList","secNoOptionJsxList","backingSampleJsxList","blockJsxList","isFixed","_Block","_FixedItem","_BackingLabel","updateOutputUnits","_ChordListDiv","_ChordItem","_ChordNameLabel","_ChordBeatDiv","jsxList","_BeatTip","getBeatTipsJsx","getInner","TEMPLATE_LIST","template","ProgTemplateUtil","ProgTemplateFrame","templateList","templateJsxList","isFocus","applyProgTemplate","ChordProgDialog","buildMode","setBuildType","getBlankBlockList","setOutputUnits","beatFilter","setBeatFilter","beatOptionJsxList","BEAT_DEF_LIST","chordDetail","templateBean","getInitialBlockList","createSwitchableButton","clickEvent","_SwitchableButton","beatComboboxEnable","distBeatFilter","_MainDiv","_LeftDiv","_BeatFormDiv","beatChangeAction","_SwitchDiv","getSwitchContJsx","_RightDiv","buildScoreData","HEADER_HEIGHT","BEAT_HEIGHT","ManageTab","file","setFile","cloudScoreList","setCloudScoreList","cloudScoreName","setCloudScoreName","cloudScoreShare","setCloudScoreShare","loadCloudScore","findUserScoreList","resList","url","getPreviewURL","share","modified","tempo","section","time","getStringFromDate","Date","lastModified","sectionNum","chordNum","fileInfo","scoreInfo","textValue","changeAction","createLabelRecord","labelValue","_Recored","_ItemnValue","fileDisconnectAction","isDataConnect","cloudScoreListJsx","_CloudItem","_CName","_CHash","curCloudScore","uploadEnable","isExistEditingData","isSelectedScore","_Left","_CloudDiv","newScoreName","_ListFrame","findScore","_Right","showOpenFilePicker","fileContents","_DataInfoDiv","_ItemnURL","onContextMenu","navigator","clipboard","writeText","_ScoreInfoDiv","DATA_INFO_HEIGHT","_ItemnCombobox","_ButtonsDiv","SymbolEditor","curSymbol","baseSymbol","derives","getSymbolDerives","parentJsx","curJsx","childrenJsx","_Row","CalcChord","symbolName","chordRoot","chordOn","prevCache","isError","minuteStr","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","barRem","_Len","_Border","ElementDetailAlter","_Type","sign","getDetailInfo","ElementDetailChord","degreeRoot","degreeOn","isDiatonic","getDiatonicDegreeList","_Degree","isSwitch","isSustainMode","scaleRelation","isOnChordScale","_DegreeRoot","_Tip","lenType","valueType","abs","_TipItem","_Error","_Voicing","_Pattern","isCurrent","_DegreeSymbol","_DegreeOnChord","_Backing","ElementFixedBorder","isStart","ElementDetailInit","_Title","_Value","ElementDetailSection","CalcAlter","getType","prevKey","curKey","curCache","prevTempo","curTempo","curBeat","getDetail","ChordEditor","getChord","createRow","listJsx","rootName","ScoreElement","wrapRef","useRef","bodyRef","isRange","isSameSection","wrap","current","elementJson","isInactive","ref","isSelectable","isAdditional","_Head","_CurKey","getDisplayKeyScaleName","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","HarmSections","sections","curSectionNo","_Total","addProgAction","HarmonizeUtil","previewMelody","clearTimeout","edit","common","patternNormalMode","patternDetailMode","test","isEdit","baseVel","tempTiming","tempVelAdj","vel","curNotes","BackingEditorInput","PresetSelectorInput","field","moveList","listIndex","presetList","applyAction","ThemaSelectorInput","focusSide","voicIndex","filteredList","acceptVoic","moveSide","isPermitTest","NoteKeyDown","config","isElement","curType","libEnables","getEnableState","previewCurHarmony","NoteBasicInput","main","NoteKeySwitch","isPress","_NumberForm","SideFormStyles","SideFormAlter","createAlertTypeItem","createModulateRelationItem","rel","createTempoRelationItem","createBeatItem","donmmItemJsxList","_ParamDiv","_ParamItem","keyAdjItemJsxList","_Group","_CategoryLabel","createNumberForm","currentTarget","valueAsNumber","___CSS_TITLE","___CSS_FORM","JUDGE_INFO_LIST","MinuteForm","rateMinus","ratePlus","isRed","JudgeJsxList","judge","_JudgeItem","setValue","createJudgeItem","isHead","_View","_ViewFrame","isLeft","_Judge","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","DEGREE_ALL","degree","isRootActive","isOnActive","_RootItem","symbolItemsJsx","_SymbolItem","createMinuteForm","_Timing","_BeatDiv","_Minute","_RootDiv","_SymbolDiv","SideFormInit","scaleItemJsxList","SCALE_DEF_LIST","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","_TemplateItem","numberItemJsxList","splitList","_NumberItem","_DirectText","_SelectDiv","_TemplateFrame","_NumberFrame","_ItemBase","HarmSideForm","PianoViewer","canvasRef","SIDE_MARGIN","uiParam","sideMargin","TOP_MARGIN","topMargin","BOTTOM_MARGIN","bottomMargin","SCALE_COLOR","scaleColor","NON_SCALE_COLOR","ctx","getContext","setLinierGradient","x0","y0","x1","y1","stops","gradColor","createLinearGradient","addColorStop","offset","fillStyle","fillRect","FACT_WIDTH","FACT_HEIGHT","WHITE_KEY_INTERVAL","wKeyNum","runWhiteKeyCallback","doSomething","wLeft","wTop","wWidth","wHeight","uses","scaleList","bTop","bWidth","bLeft","wMargin","bHeight","bHeightT","bHeightF","save","StructViewer","indexList","isUse","PatternDetail","_DelayDiv","_TimingValue","_VelocityDiv","_VelFrame","_VelItem","VEL_DIV_WIDTH","PatternLength","itemJsxList","PatternPedal","_Column","PatternTable","channelCount","curLayer","layerJsxList","jsxLsit","notesJsxLsit","setNotesStatus","viewSignal","prevCell","_Notes","isBack","_State","isEven","isFront","_Layer","zIndex","PatternVelocity","PatternBuilder","useTotalLen","isLenOverError","memoriWidth","memoriJsxList","bean","thickness","_Memori","_LengthDiv","_MeasureDiv","_MemoriList","_ChordLenLine","_OverCover","ChannelItem","_Struct","soundfont","_Option","CHANNEL_MAX","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","structInfo","_LayerItem","_ModeItem","proops","PatternOptions","createItem","createRateItem","String","setRate","sizeJsxList","_ListItem","isPermit3ren","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","tableRecord","curCell","setRowStaccato","isSet","editModeJsx","_WrapEdit","hasStaccato","isExistNext","isEnableTai","option","PatternFrame","isUsePattern","_UseSwitch","isUsePedal","_StatusDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","channelLimitNum","OCTAVE_NUM","STRUCT_NUM","rowJsxList","selectCount","cellJsxList","isSelected","key12List","getSoundFullName","_Cell","isOver","_TableRow","structJsxList","_StructItem","isOnChord","_InfoItem","_EditorDiv","_StructDiv","_TableDiv","TIP_WIDTH","BackingEditorFrame","setSource","syncSource","_LabelFrame","_PrevireBrind","_FooterDiv","_SourceFrame","_TextArea","textarea","PresetSelectorFrame","setField","minIndex","maxIndex","inputCache","targetList","getPresetList","focusPreset","_PresetItem","_Preset","_Method","_ApplyItem","applyItem","_Result","apply","presetJsxList","applyJsxList","useCallback","chordElement","matchCondition","_BodyDiv","_Sum","_Rate","toFixed","ThemaSelectorFrame","updateBacking","voicingProps","v","join","soundList","isNone","fullName","getDistinctionFromRelate","dispLabel","pattJsxList","voicJsxList","HarmHideFrame","isOpen","enableState","isVisible","HarmClipboard","_TypeDiv","MEMORI_WIDTH","HarmMeasure","dataList","_Margin","_Bar","beatJsxList","minuteJsxList","isChordFocus","curChordIndex","beatMemori","posMemori","_SustainItem","scrollPos","_ScrollFrame","_Blocks","_Measure","HarmBackingLibrary","themaName","HarmonizeTab","timelineJsx","structViewerJsx","scoreCache","sideFormEnable","onKeyDown","onKeyUp","_SectionsDiv","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_RIGHT_WIDTH","HARMONIZE_HEAD_WIDTH","MelodyTimelineMouseOperation","mouseDownEvent","timelineLength","rect","getBoundingClientRect","clientX","mouseMoveEvent","mouse","mouseUpEvent","scrollLeft","MelodyTimeline","measureRef","chordRef","barLength","measureJsxList","chordJsxList","minuteLen","scroll","clientWidth","symbolNmae","degreeName","_DegreeName","_ChordWrap","_MeasureWrap","_MeasureInner","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_MousePos","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isScale","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","Soundfont","AudioContext","release","soundFontPlayer","QuantizeSwitch","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","getNextLeft","clientY","scrollTop","curPos","posX","lenWidth","newPos","prevFocus","MelodyInput","keyDownEvent","isSingle","keySwitchEvent","MelodyFrame","tableRef","pitchRef","setInvalidate2","isTune","scaleDivJsxList","divList","scaleJsxList","_ScaleLine","isBase","_ScaleList","notesJsxList","normalWidth","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_MouseLinePos","_MouseRange","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","_Test","editAnimation","keyframes","_MouseLine","TUNE_TIMELINE_WIDTH","_Scale","EditTab","isDirect","preview","toggleEnsamble","playJsx","_SwitchInner","stopJsx","ensambleJsx","soloJsx","_Mode","_Buttons","_Switch","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","items","degreeRootName","chordRootName","_Lane","_Box","ReleaseNote","setJsx","r","version","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","setUserCount","scoreList","setScoreList","countUsers","cnt","findAllScore","scoreListJsx","open","_Owner","owner","dispnam","_CDate","lastmod","_MessageRecord","ScoreInfoTab","_ListInfoDiv","PreviewChannel","TreeUtil","parent","depth","children","node","parentNode","focusNode","buildElementNodeFromData","build","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","buildJsxRecords","spaceList","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","onDoubleClick","getLabelJsx","ThemaEditTabUtil","labelText","_ListRecordFrame","records","dim","buttonJsxList","_ListRecordButton","_ListRecordItem","_ListRecordLabel","AttrFormTab","ThemaTreeContext","setFocusNode","setTreeDisable","setAttr","setSymbols","errorList","setErrorList","targetSymbolList","getSymbolsFromAttr","InputComboboxForm","createBlankCatList","SymbolAttributeList","_SymbolKey","BorderPanel","TextAreaView","ButtonDiv","attrData","isPattern","selfIndex","getChildIndex","LabelTextItem","newNode","createNode","BaseFormTab","setThamaData","setThemaName","themaData","addThema","ListManager","MethFormTab","presetName","setPresetName","setPrenams","nextPresetSeq","setNextPresetSeq","isSustMeth","pre","p","prenam","PattFormTab","setBackingWnd","parentData","sustData","setPattName","setRefer","setRootIndex","setSymbolKsy","hasDepend","permitDependKeys","useDepend","matchChannel","parseInt","key12","idx","chordPattern","pattData","RootFormTab","setMinIdx","setMaxIdx","rootData","SustFormTab","setBeat","setHead","setTail","VoicFormTab","methData","setSymbolKey","depPattKey","setDepPattKey","setPreset","setPreUsies","symbolList","depPatts","curPattKey","editorUpdate","voicSrc","editorClose","voicData","HierarchyNavi","connect","isCreaet","addInfo","_Create","addBaseInfo","_Base","addMethInfo","_Meth","addSustInfo","_Sust","addPattInfo","_Patt","addAttrInfo","symbolNameList","_Attr","addRootInfo","nameList","_Root","addVoicInfo","_Voic","_TextField","ThemaUtil","innderJsx","setAttrJsx","_TypeLabel","_C_Symbol","getMainLabel","setRootJsx","setVoicJsx","setBaseJsx","setMethJsx","_P_Key","_P_Channel","_P_Master","_P_Depend","_NodeFrame","_CSS_FONT","createContext","BackingLibraryTab","getInitialThema","isBackingWnd","treeDisable","getDefsChildren","tabInner","contJsx","_TabContWrap","_TreeDiv","_TreeHead","_TreeBody","Frame","_PropsDiv","Provider","CustomChannel","DirectView","conteseq","getDecryptionedScoreSeq","hashKey","to","DirectLogin","getDecryptionedUserSeq","findUserInfoFromSeq","MainFrame","basename","process","RouterManage","URLSearchParams","useLocation","get","path","exact","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","remove","_NowLoading","_Copylight","fadeIn","createURL","draw","canvas","document","createElement","toDataURL","CanvasUtil","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillText","measureText","WIDTH","AUTH_TEXT_WIDTH","SIZE","AUTH_TEXT_HEIGHT","rotate","PI","char","fontRand","random","alphaRand","LoginCreateAccount","isRegist","setRegist","setPassword","passwordConfirm","setPasswordConfirm","messageList","setMessageList","createAuthText","findUserIdList","authCollation","setAuthCollation","authInput","setAuthInput","authPicture","getAuthTextURL","checkRequired","InfoFrame","_AuthText","src","getNextUserSeq","MessageLink","img","LoginLogin","isForget","setForget","findUserInfoLogin","findUserInfoFromEmail","sendQueryRequestToMailAPI","subject","LoginFrame","isCreate","setCreate","logo","getLogoURL","_TypeSwitch","_LogoDiv","TotalHeader","authButtonJsx","_LoginButton","location","origin","_UserName","isEntry","_ACCENT","_NORMAL","_Menu","_Language","_MenuItem","TOTAL_HEADER_WIDTH","SystemEntry","useReducer","App","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.832c4e02.chunk.js","sourcesContent":["import zlib from \"zlib\";\r\nimport { ScoreState } from \"../redux/store/score/scoreState\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport Hashids from 'hashids';\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5000';\r\n    export const DB_SERVER_DOMAIN = 'https://licresia-demo01-server.glitch.me';\r\n    // export const DB_SERVER_DOMAIN = 'https://licresia-server.glitch.me';\r\n\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4000';\r\n    // export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/licresia_demo_app';\r\n    export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         // sampleテーブルから全カラムのデータをid順に取得\r\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\r\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\r\n\r\n    //         if (error) {\r\n    //             throw error;\r\n    //         }\r\n    //         if (data) {\r\n    //             console.log(data);\r\n    //         }\r\n    //     } catch (error: any) {\r\n    //         alert(error.message);\r\n    //     } finally {\r\n\r\n    //     }\r\n    // };\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('licresia-demo-user', 8);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('licresia-demo', 8);\r\n    }\r\n\r\n    export const getHashedFromScoreSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedScoreSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromScoreSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string}[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string}[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findScore = async (scoreSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    export const saveFile = (plainData: string, state: ScoreState) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.lcrs'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        const fileHandle = state.fileHandle;\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                state.fileHandle = fileHandle;\r\n                // this.score.setScoreState({ ...state });\r\n                const file = await fileHandle.getFile();\r\n                alert('saved successfully!');\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = handle;\r\n                    // this.score.setScoreState({ ...state });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataUtil;","import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_USER_ENV,\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n    SET_INVALIDATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_USER_ENV:\r\n            store.userEnv = payload.userEnv;\r\n            break;\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n        case ActionType.SET_INVALIDATE:\r\n            store.invalidate = payload.invalidate;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature, Scale } from \"../redux/store/score/scoreData\";\r\n\r\nnamespace TheoryUtil {\r\n\r\n    export const MAJOR_SCALE_INTERVALS = [0, 2, 4, 5, 7, 9, 11];\r\n    export const MINOR_SCALE_INTERVALS = [0, 2, 3, 5, 7, 8, 10];\r\n\r\n    export const KEY12_FLAT_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n    export const KEY12_SHARP_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n    ];\r\n\r\n    export const DEGREE12_FLAT_LIST = [\r\n        'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n    ];\r\n    // export const DEGREE12_FLAT_LIST = [\r\n    //     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n    // ];\r\n    export const DEGREE12_SHARP_LIST = [\r\n        'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n    ];\r\n\r\n    export const KEY12_MAJOR_SCALE_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const KEY12_MINOR_SCALE_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const getDisplayKeyScaleName = (keyIndex: number, scale: Scale) => {\r\n        return scale === 'major' ? KEY12_MAJOR_SCALE_LIST[keyIndex] :\r\n            KEY12_MINOR_SCALE_LIST[keyIndex] + 'm';\r\n    };\r\n\r\n    export const isFlat = (keyIndex: number, scale: Scale) => {\r\n        const scaleName = scale === 'major' ? KEY12_MAJOR_SCALE_LIST[keyIndex] :\r\n            KEY12_MINOR_SCALE_LIST[keyIndex];\r\n        return scaleName.indexOf('b') !== -1;\r\n    };\r\n\r\n    export const SCALE_DEF_LIST = ['major', 'minor'] as const;\r\n    export const BEAT_DEF_LIST = ['2/4', '4/4', '3/4', '6/8', '9/8', '12/8'] as const;\r\n\r\n    export type IntervalRelation =\r\n        'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n        'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n        'd7' | 'm7' | 'M7'\r\n        ;\r\n\r\n    export const isFlatFromRelation = (relation: IntervalRelation) => {\r\n        // 以下の場合#（シャープ）とする\r\n        switch (relation) {\r\n            case 'M2':\r\n            case 'M3':\r\n            case 'M6':\r\n            case 'M7':\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    export const SymbolAttributeList = [\"triad\", \"seventh\", \"add9th\", \"ninth\"] as const;\r\n\r\n    export type SymbolAttribute = typeof SymbolAttributeList[number];\r\n\r\n    export type SymbolParams = {\r\n        key: SymbolKey;\r\n        name: string;\r\n        base: null | SymbolKey;\r\n        attr?: SymbolAttribute;\r\n        structs: IntervalRelation[];\r\n    }\r\n\r\n    export type BeatProps = {\r\n        // mol: number;\r\n        // den: number;\r\n        // 1拍のメモリ（16分音符）の数\r\n        beatMemoriCount: number;\r\n        // 1小節の拍数\r\n        barBeatCnt: number;\r\n    }\r\n\r\n    /**\r\n     * 拍子より拍情報を取得する\r\n     * @param beatSignature 拍子\r\n     * @returns 拍情報\r\n     */\r\n    export const getBeatProps = (beatSignature: BeatSignature): BeatProps => {\r\n        switch (beatSignature) {\r\n            case '4/4': return { beatMemoriCount: 4, barBeatCnt: 4 };\r\n            case '2/4': return { beatMemoriCount: 4, barBeatCnt: 2 };\r\n            case '3/4': return { beatMemoriCount: 4, barBeatCnt: 3 };\r\n            case '6/8': return { beatMemoriCount: 6, barBeatCnt: 2 };\r\n            case '9/8': return { beatMemoriCount: 6, barBeatCnt: 3 };\r\n            case '12/8': return { beatMemoriCount: 6, barBeatCnt: 4 };\r\n        };\r\n        // return {} as BeatProps;\r\n    }\r\n\r\n    /**\r\n     * 拍の長さからコードの持続時間をミリ秒で算出する\r\n     * @param beatLen \r\n     * @param minute \r\n     * @param bpm \r\n     * @param beatSignature \r\n     * @returns \r\n     */\r\n    export const calcSustainMsec = (beatLen: number, minute: number, bpm: number, beatSignature: BeatSignature): number => {\r\n        const beatMemoriCount = getBeatProps(beatSignature).beatMemoriCount;\r\n        const minuteLen = minute * (1 / beatMemoriCount);\r\n        return 60000 / bpm * (beatLen + minuteLen);\r\n    }\r\n\r\n\r\n    export type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\n    export type SymbolKey =\r\n        'major' |\r\n        'minor' |\r\n        'suspend4th' |\r\n        'diminish' |\r\n        'augument' |\r\n        'major-maj7th' |\r\n        'major-min7th' |\r\n        'minor-7th' |\r\n        'minor-maj7th' |\r\n        'sus4-7th' |\r\n        'diminish-7th' |\r\n        'augument-7th' |\r\n        'major-add9th' |\r\n        'minor-add9th' |\r\n        'sixth-9th' |\r\n        'minor-minus5' |\r\n        'major-minus5' |\r\n        'minor7-minus5' |\r\n        'major-maj9th' |\r\n        'major-9th' |\r\n        'sixth' |\r\n        'minor-sixth'\r\n        ;\r\n\r\n    export type DegreeProps = {\r\n        index: number;\r\n        isFlat: boolean;\r\n    };\r\n\r\n    export type ChordProps = {\r\n        root: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    };\r\n\r\n    export const SYMBOL_LIST: readonly SymbolParams[] = [\r\n        {\r\n            key: 'major', name: '',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor', name: 'm',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'suspend4th', name: 'sus4',\r\n            base: null,\r\n            structs: ['p1', 'p4', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish', name: 'dim',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish-7th', name: 'dim7',\r\n            base: 'diminish',\r\n            structs: ['p1', 'm3', 'd5', 'd7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'augument', name: 'aug',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'a5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'augument-7th', name: 'aug7',\r\n            base: 'augument',\r\n            structs: ['p1', 'M3', 'a5', 'm7']\r\n        },\r\n        {\r\n            key: 'minor-minus5', name: 'm(-5)',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'major-minus5', name: '-5',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor7-minus5', name: 'm7(-5)',\r\n            base: 'minor-minus5',\r\n            structs: ['p1', 'm3', 'd5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-maj7th', name: 'maj7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-min7th', name: '7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'minor-7th', name: 'm7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'sus4-7th', name: '7sus4',\r\n            base: 'suspend4th',\r\n            structs: ['p1', 'p4', 'p5', 'm7']\r\n        },\r\n        {\r\n            key: 'minor-maj7th', name: 'mmaj7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-add9th', name: 'add9',\r\n            base: 'major',\r\n            structs: ['p1', 'M2', 'M3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'minor-add9th', name: 'madd9',\r\n            base: 'minor',\r\n            structs: ['p1', 'M2', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-maj9th', name: 'maj9',\r\n            base: 'major-maj7th',\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-9th', name: '9',\r\n            base: 'major-min7th',\r\n            structs: ['p1', 'm3', 'p5']\r\n        },\r\n        {\r\n            key: 'sixth', name: '6',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'M6']\r\n        },\r\n        {\r\n            key: 'minor-sixth', name: 'm6',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'M6']\r\n        },\r\n    ];\r\n\r\n    /** インターバルの関係性 */\r\n    export const IntervalRelationProps = {\r\n        'p1': 0,\r\n        'm2': 1,\r\n        'M2': 2,\r\n        'm3': 3,\r\n        'M3': 4,\r\n        'p4': 5,\r\n        'd5': 6,\r\n        'p5': 7,\r\n        'a5': 8,\r\n        'm6': 8,\r\n        'M6': 9,\r\n        'd7': 9,\r\n        'm7': 10,\r\n        'M7': 11\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n    ];\r\n\r\n    export const DIATONIC_MINOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor-minus5' },\r\n        { root: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n    ];\r\n\r\n\r\n\r\n    export const DEGREE_ALL: readonly (DegreeProps | null)[] = [\r\n        null,\r\n        { index: 0, isFlat: false },\r\n        { index: 1, isFlat: false },\r\n        { index: 1, isFlat: true },\r\n        { index: 2, isFlat: false },\r\n        { index: 3, isFlat: false },\r\n        { index: 3, isFlat: true },\r\n        { index: 4, isFlat: false },\r\n        { index: 5, isFlat: false },\r\n        { index: 6, isFlat: false },\r\n        { index: 6, isFlat: true },\r\n        { index: 7, isFlat: false },\r\n        { index: 8, isFlat: false },\r\n        { index: 8, isFlat: true },\r\n        { index: 9, isFlat: false },\r\n        { index: 10, isFlat: false },\r\n        { index: 10, isFlat: true },\r\n        { index: 11, isFlat: false }\r\n    ];\r\n\r\n    export const getDegreeRoot = (props: DegreeProps) => {\r\n        const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n        return list[props.index];\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰ', 'Ⅰmaj7',\r\n        'Ⅱm', 'Ⅱm7',\r\n        'Ⅲm', 'Ⅲm7',\r\n        'Ⅳ', 'Ⅳmaj7',\r\n        'Ⅴ', 'Ⅴ7',\r\n        'Ⅵm', 'Ⅵm7',\r\n        'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n    ];\r\n\r\n    export const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰm', 'Ⅰm7',\r\n        'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n        'bⅢ', 'bⅢM7',\r\n        'Ⅳm', 'Ⅳm7',\r\n        'Ⅴm', 'Ⅴm7',\r\n        'bⅥ', 'bⅥM7',\r\n        'bⅦ', 'bⅦ7'\r\n    ];\r\n\r\n    export const getDiatonicDegreeList = (scale: Scale) => {\r\n        return scale === 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES :\r\n            DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\r\n    }\r\n\r\n    export const getRootName = (\r\n        props: DegreeProps,\r\n        baseKeyIndex: number\r\n    ): string => {\r\n        const list = props.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST;\r\n        return list[(baseKeyIndex + props.index) % 12];\r\n    }\r\n\r\n\r\n\r\n    export const getSymbolFromKey = (key: string): SymbolParams | undefined => {\r\n        return SYMBOL_LIST.find((symbol) => {\r\n            if (key === symbol.key) {\r\n                return symbol;\r\n            }\r\n        });\r\n        // return ret != undefined ? ret : SYMBOL_LIST[0];\r\n    }\r\n\r\n    export const getSymbolsFromAttr = (attr: SymbolAttribute): SymbolParams[] => {\r\n        const list: SymbolParams[] = [];\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (attr === symbol.attr) {\r\n                list.push(symbol);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n\r\n    export const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n        let list: SymbolKey[] = [];\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (key === symbol.base) {\r\n                list.push(symbol.key);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n\r\n    export const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n        return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n    }\r\n}\r\n\r\nexport default TheoryUtil;\r\n\r\n","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { BackingLayerData, BackingPatternProps, BackingSignalProps, BeatSignature, ChordBacking, DetailChord, DetailInit, PedalInfo, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { playHarmony } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n/**\r\n * バッキングエディタで利用するユーティリティ\r\n */\r\nexport namespace BackingUtil {\r\n\r\n    // オクターブの数\r\n    export const OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    export const STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    export const CHANNEL_MAX = 12;\r\n\r\n    /**\r\n     * オンコードを考慮したコードのフル名称と構成音を返す。\r\n     * @param root ルート\r\n     * @param keyIndex キー\r\n     * @param on オンコードのルート\r\n     * @param symbol シンボル\r\n     * @returns オンコードを考慮したコードのフル名称と構成音\r\n     */\r\n    export const getChordDetails = (\r\n        root: TheoryUtil.DegreeProps,\r\n        keyIndex: number,\r\n        on: null | TheoryUtil.DegreeProps,\r\n        symbol: TheoryUtil.SymbolParams\r\n    ): [\r\n            string, BackingState.StructInfo[]\r\n        ] => {\r\n\r\n        // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n        const chordRootIndex = (root.index + keyIndex) % 12;\r\n        const rootName = TheoryUtil.getRootName(root, keyIndex);\r\n        let chordFullName = rootName + symbol.name;\r\n\r\n        let chordOnIndex = -1;\r\n        // オンコードが設定されている場合\r\n        if (on != null) {\r\n            const onName = TheoryUtil.getRootName(on, keyIndex);\r\n            chordFullName = `${chordFullName}/${onName}`;\r\n\r\n            chordOnIndex = (on.index + keyIndex) % 12;\r\n        }\r\n\r\n        // 構成音情報を算出\r\n        let structList: BackingState.StructInfo[] = symbol.structs.map(struct => {\r\n            const relation = struct;\r\n            const interval = TheoryUtil.IntervalRelationProps[relation];\r\n            const soundIndex = (chordRootIndex + interval) % 12;\r\n            const adjustOctave = Math.floor((chordRootIndex + interval) / 12);\r\n            const isFlat = TheoryUtil.isFlatFromRelation(relation);\r\n            return {\r\n                relation, soundIndex, isFlat, adjustOctave\r\n            }\r\n        });\r\n        // オンコードを考慮\r\n        if (chordOnIndex !== -1) {\r\n            let sameIndex = -1;\r\n            structList.some((info, i) => {\r\n                if (info.soundIndex === chordOnIndex) {\r\n                    sameIndex = i;\r\n                    return;\r\n                }\r\n            });\r\n            // オンコードが構成音と被っている場合リストから削除\r\n            if (sameIndex !== -1) {\r\n                structList.splice(sameIndex, 1);\r\n            }\r\n            // オンコードをリストに追加\r\n            structList.unshift({\r\n                relation: null,\r\n                soundIndex: chordOnIndex,\r\n                isFlat: false,\r\n                adjustOctave: 0\r\n            });\r\n            // 音程の昇順でソート\r\n            structList.sort((a, b) => {\r\n                return a.soundIndex - b.soundIndex;\r\n            });\r\n\r\n            /** ソート後のオンコードの場所 */\r\n            let onIndex = -1;\r\n            structList.some((sound, i) => {\r\n                if (sound.relation == null) {\r\n                    onIndex = i;\r\n                    return;\r\n                }\r\n            });\r\n            const onChordIndex = structList[onIndex].soundIndex;\r\n            const tempList: BackingState.StructInfo[] = [];\r\n            for (let i = onIndex; i < structList.length; i++) {\r\n                const sound = structList[i];\r\n                tempList.push(sound);\r\n            }\r\n            for (let i = 0; i < onIndex; i++) {\r\n                const sound = structList[i];\r\n                tempList.push(sound);\r\n            }\r\n            tempList.forEach(sound => {\r\n                sound.adjustOctave = 0;\r\n                if (sound.soundIndex < onChordIndex) {\r\n                    sound.adjustOctave = 1;\r\n                }\r\n            });\r\n            structList = tempList;\r\n        }\r\n        return [chordFullName, structList];\r\n    }\r\n\r\n    /**\r\n     * ノーツレコードを返す\r\n     * @param divCount 区切り数\r\n     * @returns ノーツレコード\r\n     */\r\n    export const getInitialRecord = (divCount: number) => {\r\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    /**\r\n     * ボイシングテーブルをリストに変換して返す。\r\n     * @param vctbl ボイシングテーブル\r\n     * @returns チャンネルリスト\r\n     */\r\n    export const buildVoicsFromTable = (vctbl: boolean[][]): BackingState.VoicParam[] => {\r\n        const voics: BackingState.VoicParam[] = [];\r\n        for (let i = 0; i < vctbl.length; i++) {\r\n            for (let j = 0; j < vctbl[i].length; j++) {\r\n                if (vctbl[i][j]) {\r\n                    voics.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (voics.length === 0) {\r\n            voics.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return voics;\r\n    }\r\n\r\n    /**\r\n     * ボイシングテーブルをボイシングリストに変換して返す。\r\n     * @param vctbl ボイシングテーブル\r\n     * @returns ボイシングリスト\r\n     */\r\n    export const getVoicingListFromTable = (vctbl: boolean[][]): VoicingProps[] => {\r\n\r\n        const voicingList: VoicingProps[] = [];\r\n        // ボイシングを設定\r\n        if (vctbl != null) {\r\n            for (let i = 0; i < vctbl.length; i++) {\r\n                for (let j = 0; j < vctbl[i].length; j++) {\r\n                    if (vctbl[i][j]) {\r\n                        voicingList.push({ octave: i, struct: j });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return voicingList;\r\n    }\r\n\r\n    /**\r\n     * コードのパターン情報に変換して返す。\r\n     * @param editorPattern エディタのパターン\r\n     * @returns コードのパターン情報\r\n     */\r\n    export const buildPatternProps = (\r\n        editorPattern: BackingState.Pattern\r\n    ): BackingPatternProps => {\r\n        const channelSize = editorPattern.channels.length;\r\n        const layers: BackingLayerData[] = [];\r\n        editorPattern.layers.forEach(layer => {\r\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\r\n            const signals: BackingSignalProps[] = [];\r\n            layer.table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        signals.push({ x: j, y: i, status: cell });\r\n                    }\r\n                });\r\n            });\r\n            layers.push({ divs, notesList: signals, vels: layer.velocityList.slice() });\r\n        });\r\n        const pedals: PedalInfo[] = [];\r\n        editorPattern.pedalActs.forEach((pedal, i) => {\r\n            if (pedal != null) pedals.push({\r\n                divIndex: i, action: pedal\r\n            });\r\n        });\r\n        return { channelSize, pedals, layers };\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param channelParams \r\n     * @param size \r\n     * @returns \r\n     */\r\n    export const getChannels = (\r\n        channelParams: BackingState.VoicParam[],\r\n        size: number\r\n    ) => {\r\n        const channels: BackingState.VoicParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: BackingState.VoicParam = { octave: -1, structIndex: 0 };\r\n            if (i < channelParams.length) {\r\n                channel.octave = channelParams[i].octave;\r\n                channel.structIndex = channelParams[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n\r\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\r\n\r\n        const layers: BackingState.Layer[] = [];\r\n        // console.log(JSON.stringify(scoreLayers));\r\n        scoreLayers.forEach(scoreLayer => {\r\n            const table: (BackingState.NoteStatus | null)[][] = [];\r\n            for (let i = 0; i < channelSize; i++) {\r\n                const record: (BackingState.NoteStatus | null)[] = [];\r\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\r\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\r\n                    record.push(notes == null ? null : notes.status);\r\n                }\r\n                table.push(record);\r\n            }\r\n            layers.push({\r\n                noteDivList: scoreLayer.divs,\r\n                table,\r\n                velocityList: scoreLayer.vels\r\n            });\r\n        });\r\n        // console.log(JSON.stringify(layers));\r\n        return layers;\r\n    }\r\n\r\n    export const getPitchListFromVoicing = (\r\n        voicingList: VoicingProps[],\r\n        structList: BackingState.StructInfo[]\r\n    ) => {\r\n        // return voicingList.map((item) => {\r\n        //     const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        //     return 12 * item.octave + rootIndex + interval;\r\n        // });\r\n        return voicingList.map((item) => {\r\n            // const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n            // return 12 * item.octave + rootIndex + interval;\r\n            const struct = structList[item.struct];\r\n            const octave = item.octave + struct.adjustOctave;\r\n            return 12 * octave + struct.soundIndex;\r\n        });\r\n    }\r\n\r\n    export const playBacking = (\r\n        store: Store,\r\n        reserveTasks: NodeJS.Timeout[],\r\n        baseInfo: DetailInit,\r\n        backing: ChordBacking,\r\n        pitchIndexList: number[],\r\n        chordTime: number\r\n    ) => {\r\n        if (backing.pattern == null) {\r\n            pitchIndexList.forEach((index) => {\r\n                const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                const octave = Math.floor(index / 12);\r\n                const soundFullName = soundName + octave;\r\n                playHarmony(soundFullName, store, chordTime / 1000, 5);\r\n            });\r\n        } else {\r\n\r\n            const bpm = baseInfo.bpm;\r\n            const beatProps = TheoryUtil.getBeatProps(baseInfo.beatSignature);\r\n            const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (2 / 3);\r\n\r\n            const pattern = backing.pattern;\r\n            // const pedalIndexes = pattern.pedals === undefined ? null : pattern.pedals.map(pedal => pedal.divIndex);\r\n\r\n            /** ペダルの有効範囲を定義したリスト */\r\n            const pedalRangeList: { start: number, end: number, action: BackingState.PedalAction }[] = [];\r\n            pattern.layers.forEach((layer, i) => {\r\n                /** バッキング内で経過した時間（ノーツごとの開始時間） */\r\n                let total = 0;\r\n                const timeList: {\r\n                    start: number, sustain: number\r\n                }[] = layer.divs.map(div => {\r\n                    /** 開始時間 */\r\n                    const start = 60000 / bpm * total;\r\n                    let normal = 4 / div.rate * adjustRate;\r\n                    if (div.isDot) normal *= 1.5;\r\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                    total += normal;\r\n                    return { start, sustain: 60000 / bpm * normal };\r\n                });\r\n\r\n                // ペダル状態のキャッシュを作成\r\n                if (i === 0 && pattern.pedals != undefined) {\r\n                    timeList.forEach((divTime, j) => {\r\n                        const pedalInfo = pattern.pedals?.find((pedal) => {\r\n                            if (j === pedal.divIndex) return pedal;\r\n                        });\r\n                        if (pedalInfo != undefined) {\r\n\r\n                            if (pedalRangeList.length > 0) {\r\n                                pedalRangeList[pedalRangeList.length - 1].end = divTime.start;\r\n                            }\r\n                            pedalRangeList.push({\r\n                                start: divTime.start,\r\n                                end: chordTime,\r\n                                action: pedalInfo.action\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /** 除外リスト（タイで吸収されるノーツ） */\r\n                const ignoreList: { x: number, y: number }[] = [];\r\n                layer.notesList.forEach((notes) => {\r\n\r\n                    // 除外リストに含まれている場合、以降の処理をしない\r\n                    if (ignoreList.find(ig => {\r\n                        if (ig.x === notes.x && ig.y === notes.y) return ig;\r\n                    }) !== undefined) return;\r\n\r\n                    const timeInfo = timeList[notes.x];\r\n                    const timing = notes.status.timing == undefined ? 0 : notes.status.timing;\r\n                    const timingAdj = timing * (60000 / bpm * 1 / 32);\r\n                    const startTime = timeInfo.start + timingAdj;\r\n\r\n                    /** 持続時間 */\r\n                    let sustainTime = timeInfo.sustain;\r\n                    if (notes.status.signal === 's') {\r\n                        // スタッカートの場合半分の音価にする\r\n                        sustainTime *= 0.5;\r\n                    } else if (notes.status.signal === 't') {\r\n\r\n                        let inc = notes.x;\r\n                        let isNext = true;\r\n                        while (isNext) {\r\n                            inc++;\r\n                            // 次のノーツを探す\r\n                            const nextNotes = layer.notesList.find(next => {\r\n                                if (next.x === inc && next.y === notes.y) {\r\n                                    return next;\r\n                                }\r\n                            });\r\n                            if (nextNotes != undefined) {\r\n                                sustainTime += timeList[inc].sustain;\r\n                                // 次の要素を除外する\r\n                                ignoreList.push({ x: inc, y: notes.y });\r\n                                // 次のノーツがタイだったらループを継続\r\n                                isNext = nextNotes.status.signal === 't';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //ペダルを検出\r\n                    for (let k = 0; k < pedalRangeList.length; k++) {\r\n                        const pedal = pedalRangeList[k];\r\n                        const notesTail = startTime + timeInfo.sustain;\r\n                        if (pedal.action !== 'off' && notesTail > pedal.start &&\r\n                            notesTail <= pedal.end\r\n                        ) {\r\n                            // ペダルの持続時間で更新\r\n                            sustainTime = pedal.end - startTime;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    /** 音量 */\r\n                    const velAdj = notes.status.velAdj == undefined ? 0 : notes.status.velAdj;\r\n                    let gain = layer.vels[notes.x] + velAdj;\r\n                    if (gain < 1) gain = 1;\r\n                    if (gain > 10) gain = 10;\r\n                    gain *= 0.6;\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            const index = pitchIndexList[notes.y];\r\n                            const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                            const octave = Math.floor(index / 12);\r\n                            const soundFullName = soundName + octave;\r\n                            playHarmony(soundFullName, store, sustainTime / 1000, gain);\r\n                        }, startTime)\r\n                    );\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    export const stopPreview = (store: Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        store.instruments.harmonyFont?.stop();\r\n        state.isPreview = false;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    export const getLimitLen = (beatLen: number, minute: BackingState.MinuteProps, beatSignature: BeatSignature) => {\r\n        // 16分音符の長さで割る\r\n        const memoriCount = TheoryUtil.getBeatProps(beatSignature).beatMemoriCount;\r\n        const minuteLen = minute.head / memoriCount + minute.tail / memoriCount;\r\n        return (beatLen + minuteLen);\r\n    }\r\n\r\n    export const getUsingLenFromDivs = (divs: BackingState.NoteDiv[], beatSignature: BeatSignature) => {\r\n        const beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        const adjustRate = 4 / beatProps.beatMemoriCount;\r\n        return divs.reduce((prev, cur) => {\r\n            let len = 1 / cur.rate * adjustRate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            return prev + len * 4;\r\n        }, 0);\r\n    }\r\n\r\n    export const getInitVoicingTable = (voicingList: VoicingProps[], structCnt: number): boolean[][] => {\r\n        const table = new Array<boolean[]>(8);\r\n        for (let i = 0; i < table.length; i++) {\r\n            table[i] = new Array<boolean>(6);\r\n            const col = table[i];\r\n            for (let j = 0; j < col.length; j++) {\r\n                // 構成音をオーバーしていた場合セットしない\r\n                if (j >= structCnt) continue;\r\n\r\n                const isExist = voicingList.find(voicing => {\r\n                    if (voicing.octave === i && voicing.struct === j) {\r\n                        return voicing;\r\n                    }\r\n                });\r\n                table[i][j] = isExist != null;\r\n            }\r\n        }\r\n        return table;\r\n    };\r\n\r\n    export const getEditorPatternFromChordBacking = (voicingTable: boolean[][], patternProps: BackingPatternProps | null) => {\r\n        let pattern: BackingState.Pattern | null = null;\r\n        if (patternProps != null) {\r\n            const voicingStructs = BackingUtil.buildVoicsFromTable(voicingTable);\r\n            const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\r\n            const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);\r\n            let pedalActs: (null | BackingState.PedalAction)[] = [];\r\n            if (patternProps.pedals != undefined) {\r\n                for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\r\n                    const pedal = patternProps.pedals.find(pedal => {\r\n                        if (pedal.divIndex === i) return pedal;\r\n                    });\r\n                    if (pedal == undefined) pedalActs.push(null);\r\n                    else pedalActs.push(pedal.action);\r\n                }\r\n            } else {\r\n                for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\r\n                    if (i === 0) pedalActs.push('on');\r\n                    else pedalActs.push(null);\r\n                }\r\n            }\r\n            pattern = {\r\n                channelIndex: -1,\r\n                lenIndex: 0,\r\n                mode: 'velocity',\r\n                layerIndex: 0,\r\n                channels,\r\n                layers,\r\n                pedalActs\r\n            };\r\n        }\r\n        return pattern;\r\n    }\r\n\r\n    export const hasBackingError = (detail: DetailChord, beatSignature: BeatSignature, structCnt: number) => {\r\n        const chordBacking = detail.backing;\r\n        const voicingList = detail.backing.voicingList;\r\n        const pattern = chordBacking.pattern;\r\n\r\n        let hasError = false;\r\n\r\n        // ボイシングが構成音に収まっているかチェック\r\n        voicingList.some(voicing => {\r\n            if (voicing.struct > structCnt - 1) {\r\n                hasError = true;\r\n                return true; // ループから脱出\r\n            }\r\n        });\r\n        if (pattern != null) {\r\n\r\n            const limitLen = BackingUtil.getLimitLen(detail.beatLen, detail.minute, beatSignature);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getUsingLenFromDivs(layer.divs, beatSignature);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkEditorError = (\r\n        chordInfo: BackingState.ChordInfo,\r\n        voicingList: VoicingProps[],\r\n        pattern: null | BackingState.Pattern\r\n    ): boolean => {\r\n        let hasError = false;\r\n        if (pattern != null) {\r\n\r\n            // 選択しているボイシングがチャンネル数に満たない場合\r\n            if (voicingList.length < pattern.channels.length) hasError = true;\r\n\r\n            const limitLen = BackingUtil.getLimitLen(chordInfo.beatLen, chordInfo.minute, chordInfo.init.beatSignature);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getUsingLenFromDivs(layer.noteDivList, chordInfo.init.beatSignature);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n\r\n            // 裏レイヤーのノーツと重なっている場合\r\n            pattern.layers[0].table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        if (checkOverlapBackLayer(pattern.layers, 0, i, j)) {\r\n                            hasError = true;\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkOverlapBackLayer = (layers: BackingState.Layer[], layerIndex: number, channelIndex: number, divIndex: number): boolean => {\r\n        const baseLayer = layers[layerIndex];\r\n        const backLayer = layers[layerIndex === 0 ? 1 : 0];\r\n        const [left, right] = getDivRange(baseLayer.noteDivList, divIndex);\r\n        // console.log(`left=${left}, right=${right}`);\r\n        let isOverlap = false;\r\n        for (let i = 0; i < backLayer.noteDivList.length; i++) {\r\n            if (backLayer.table[channelIndex][i] != null) {\r\n                const [backLeft, backRight] = getDivRange(backLayer.noteDivList, i);\r\n                if (right > backLeft && left < backRight) {\r\n                    isOverlap = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return isOverlap;\r\n    }\r\n\r\n    export const getDivRange = (divs: BackingState.NoteDiv[], divIndex: number): [number, number] => {\r\n        let [left, right] = [0, 0];\r\n\r\n        divs.slice(0, divIndex + 1).forEach((cur, i) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            left = right;\r\n            right += len * 4;\r\n        });\r\n        return [left, right];\r\n    }\r\n\r\n    export const isPermitDot = (note: BackingState.NoteDiv) => {\r\n        return [8, 4, 2].includes(note.rate) && note.div3 === 0;\r\n    }\r\n\r\n    export const isPermit3ren = (note: BackingState.NoteDiv) => {\r\n        return [8, 4].includes(note.rate) && !note.isDot;\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { symbolName } from \"typescript\";\r\nimport { Dispatcher } from \"../../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../../redux/store/score/scoreCache\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection } from \"../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../redux/store/store\";\r\nimport BackingUtil from \"../backingUtil\";\r\nimport TheoryUtil from \"../theoryUtil\";\r\n\r\n/**\r\n * データを高速で参照するために、\r\n * 事前に計算したデータを保持するためのユーティリティを提供する\r\n */\r\nnamespace CacheUtil {\r\n\r\n    /**\r\n     * ハーモナイズのキャッシュを生成する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const updateHarmonizeCache = (store: Store, dispatcher: Dispatcher) => {\r\n        const chordList = store.scoreData.chordList;\r\n        const scoreState = store.scoreState;\r\n        const init = (chordList[0].detail as DetailInit);\r\n\r\n        const elementCacheList: ScoreCache.Element[] = [];\r\n        const sectionCacheList: ScoreCache.Section[] = [];\r\n        const beatCacheList: ScoreCache.BeatRange[] = [];\r\n        const scaleCacheList: ScoreCache.KeyScaleRange[] = [];\r\n        const tempoCacheList: ScoreCache.TempoRange[] = [];\r\n        const measureCacheList: ScoreCache.Measure[] = [];\r\n\r\n        // 初期値情報\r\n        let keyIndex = init.keyIndex;\r\n        let scale = init.scale;\r\n        let bpm = init.bpm;\r\n\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let sectionBeatSum = 0;\r\n        let pastSecond = 0;\r\n        let curSecond = 0;\r\n        let chordIndex = -1;\r\n        // let curTotalBeat = 0;\r\n        let curMemoriCount = 0;\r\n        let totalBarCount = 0;\r\n\r\n        // 経過した16分音符のカウント\r\n        let totalMemoriCount = 0;\r\n        let beatRangeMemoriCount = 0;\r\n        let totalBeat = 0;\r\n        let totalMemoriBarCount = 0;\r\n\r\n        let chordBlockNo = -1;\r\n\r\n        //拍キャッシュの産出に使う変数\r\n        let beatSignature = init.beatSignature;\r\n\r\n        let scaleMemoriCount = 0;\r\n        let tempoMemoriCount = 0;\r\n\r\n        const addScaleRange = () => {\r\n            scaleCacheList.push({\r\n                keyIndex,\r\n                scale,\r\n                memoriCnt: scaleMemoriCount\r\n            });\r\n            scaleMemoriCount = 0;\r\n        }\r\n        const addTempoRange = () => {\r\n            tempoCacheList.push({\r\n                bpm,\r\n                beatRate: beatProps.beatMemoriCount / 4,\r\n                memoriCnt: tempoMemoriCount\r\n            });\r\n            tempoMemoriCount = 0;\r\n        }\r\n\r\n\r\n        let beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        chordList.forEach((element, i) => {\r\n\r\n            const prevBeat = totalBeat;\r\n            // ブロック頭のメモリ\r\n            const prevMemoriCount = totalMemoriCount;\r\n            // ブロック頭の小節\r\n            const prevBarCount = totalBarCount;\r\n            const prevMinute = totalMinute;\r\n            const type = element.type;\r\n\r\n            switch (type) {\r\n                // 固定要素ブロック\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        pastSecond += curSecond;\r\n                    }\r\n                } break;\r\n\r\n                // セクション要素ブロック\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                } break;\r\n\r\n                // コード要素ブロック\r\n                case 'chord': {\r\n                    pastSecond += curSecond;\r\n                    // curTotalBeat += curSustain;\r\n\r\n                    const detail = element.detail as DetailChord;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    totalMinute += minute;\r\n                    chordIndex++;\r\n\r\n                    curMemoriCount = detail.beatLen * beatProps.beatMemoriCount + minute;\r\n\r\n                    const prevBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    totalBeat += detail.beatLen;\r\n                    const curBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    // 小節が変わった場合、合計小節をインクリメント\r\n                    if (prevBar !== curBar) {\r\n                        totalBarCount++\r\n                    }\r\n\r\n                    // スケールキャッシュの長さを加算\r\n                    scaleMemoriCount += curMemoriCount;\r\n                    tempoMemoriCount += curMemoriCount;\r\n\r\n                    // 時間の計算\r\n                    curSecond = TheoryUtil.calcSustainMsec(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        bpm,\r\n                        beatSignature\r\n                    );\r\n\r\n                    // メモリの加算\r\n                    for (let j = 0; j < curMemoriCount; j++) {\r\n                        let rate: ScoreCache.MeasureRate = 16;\r\n                        if (beatRangeMemoriCount % beatProps.beatMemoriCount === 0) rate = 4;\r\n                        else if (beatRangeMemoriCount % (beatProps.beatMemoriCount / (beatProps.beatMemoriCount / 2)) === 0) rate = 8;\r\n\r\n                        const barMemoriCount = beatProps.barBeatCnt * beatProps.beatMemoriCount;\r\n\r\n                        let dispBarCount = -1;\r\n                        if (beatRangeMemoriCount % barMemoriCount === 0) {\r\n                            // 拍子セクションの合計メモリ数が小節のメモリ数で割り切れる場合、小節数を表示する\r\n                            totalMemoriBarCount++;\r\n                            dispBarCount = totalMemoriBarCount;\r\n                        }\r\n                        measureCacheList.push({ rate, barCount: dispBarCount });\r\n                        totalMemoriCount++;\r\n                        beatRangeMemoriCount++;\r\n                    }\r\n\r\n                    // コードブロック連番の設定\r\n                    chordBlockNo++;\r\n                } break;\r\n\r\n                // アルター要素ブロックする\r\n                case 'alter': {\r\n                    const detail = element.detail as DetailAlter;\r\n                    switch (detail.alterType) {\r\n                        // 音階が変わる\r\n                        case 'modulate': {\r\n                            addScaleRange();\r\n                            switch (detail.modRel) {\r\n                                case 'domm': {\r\n                                    keyIndex = (keyIndex + 24 + 7 * detail.dommVal) % 12;\r\n                                } break;\r\n                                case 'key': {\r\n                                    keyIndex = (keyIndex + 12 + detail.keyAdj) % 12;\r\n                                } break;\r\n                                case 'parallel': {\r\n                                    keyIndex = (keyIndex + 12 + (scale === 'major' ? -1 : 1) * 3) % 12;\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                                case 'relative': {\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // テンポが変わる\r\n                        case 'tempo': {\r\n                            addTempoRange();\r\n                            switch (detail.tempoRel) {\r\n                                case 'diff': {\r\n                                    bpm += detail.tempoDiff;\r\n                                } break;\r\n                                case 'rate': {\r\n                                    bpm = Math.floor(bpm * 1 * (detail.tempoRate / 100));\r\n                                } break;\r\n                                case 'abs': {\r\n                                    bpm = detail.tempoAbs;\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // 拍子が変わる\r\n                        case 'beat': {\r\n                            addTempoRange();\r\n                            // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n                            beatCacheList.push({\r\n                                beatSignature,\r\n                                memoriCnt: beatRangeMemoriCount\r\n                            });\r\n\r\n                            beatSignature = detail.beatSignature;\r\n                            // 拍を初期化する（拍変更後はいかなる場合も0から数える）\r\n                            totalBeat = 0;\r\n                            beatRangeMemoriCount = 0;\r\n\r\n                            beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n                        } break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n\r\n            elementCacheList.push({\r\n                bar: prevBarCount,\r\n                surplusBeat: prevBeat % beatProps.barBeatCnt,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                scale,\r\n                bpm,\r\n                beatSignature,\r\n                sectionNo,\r\n                pastSecond,\r\n                chordIndex,\r\n                curTotalMemori: prevMemoriCount,\r\n                // chordFullName,\r\n                // structList,\r\n                chordBlockNo,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n        scaleCacheList.push({\r\n            keyIndex,\r\n            scale,\r\n            memoriCnt: scaleMemoriCount\r\n        });\r\n\r\n        beatCacheList.push({\r\n            beatSignature,\r\n            memoriCnt: beatRangeMemoriCount\r\n        });\r\n        addTempoRange();\r\n\r\n        scoreState.elementCacheList = elementCacheList;\r\n        scoreState.sectionCacheList = sectionCacheList;\r\n        scoreState.beatCacheList = beatCacheList;\r\n        scoreState.tempoCacheList = tempoCacheList;\r\n        scoreState.scaleCacheList = scaleCacheList;\r\n        scoreState.measureCacheList = measureCacheList;\r\n\r\n        scoreState.chordCacheList = createChordCacheList(chordList, elementCacheList);\r\n\r\n        dispatcher.score.setScoreState(scoreState);\r\n    }\r\n\r\n    export const createChordCacheList = (chordList: ChordElement[], elementCacheList: ScoreCache.Element[]) => {\r\n\r\n        const chordCacheList: ScoreCache.Chord[] = [];\r\n\r\n        chordList.forEach((element, i) => {\r\n\r\n            const type = element.type;\r\n            if (type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const cache = elementCacheList[i];\r\n\r\n\r\n                const keyIndex = cache.keyIndex;\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                const [chordFullName, structList] = detail.root != null ? BackingUtil.getChordDetails(\r\n                    detail.root,\r\n                    keyIndex,\r\n                    detail.on,\r\n                    symbol\r\n                ) : ['', []];\r\n\r\n                const backingError = BackingUtil.hasBackingError(detail, cache.beatSignature, structList.length);\r\n\r\n                chordCacheList.push({\r\n                    structList,\r\n                    chordFullName,\r\n                    backingError\r\n                });\r\n\r\n            }\r\n        });\r\n        return chordCacheList;\r\n    }\r\n\r\n    // export const getChordCache = (focusIndex: number, ) => {\r\n\r\n    // }\r\n\r\n\r\n    // export const updateMelodyCache = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    //     const notesList = store.scoreData.notesList;\r\n    //     const state = store.melodyState;\r\n\r\n    //     const notesCacheList: ScoreCache.NotesCache[] = [];\r\n\r\n    //     notesList.forEach((notes) => {\r\n    //         const startTime = 0;\r\n    //         const duration = 0;\r\n    //         notesCacheList.push({\r\n    //             startTime,\r\n    //             duration\r\n    //         });\r\n    //     });\r\n    // }\r\n\r\n    export const getKeyScaleFromNotesPos = (pos: number, scaleCacheList: ScoreCache.KeyScaleRange[]) => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let range: ScoreCache.KeyScaleRange | null = null;\r\n        // console.log(`count: ${scaleCacheList.length}`);\r\n        for (let i = 0; i < scaleCacheList.length; i++) {\r\n            const info = scaleCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                range = scaleCacheList[i - 1];\r\n                break;\r\n            }\r\n            tail += info.memoriCnt;\r\n            // console.log(`curPos: ${tail}`);\r\n        }\r\n        // console.log(`curMemori: ${curMemori}`);\r\n        return range === null ? scaleCacheList[scaleCacheList.length - 1] : range;\r\n    }\r\n\r\n    /**\r\n     * ノーツを再生する開始時間と持続時間を産出して返す\r\n     * @param pos ノーツの位置\r\n     * @param len ノーツの長さ\r\n     * @param tempoCacheList テンポのキャッシュリスト\r\n     * @returns \r\n     */\r\n    export const getTimeInfoFromNotesPos = (pos: number, len: number, tempoCacheList: ScoreCache.TempoRange[]): [number, number] => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let posTime = 0;\r\n        let pastLen = 0;\r\n        let last: ScoreCache.TempoRange | null = null;\r\n        for (let i = 0; i < tempoCacheList.length; i++) {\r\n            const info = tempoCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                last = tempoCacheList[i - 1];\r\n                break;\r\n            }\r\n            const beatLen = info.memoriCnt / 4;\r\n            posTime += 60 / info.bpm * beatLen;\r\n            pastLen += beatLen;\r\n            tail += info.memoriCnt;\r\n        }\r\n        if (last === null) {\r\n            last = tempoCacheList[tempoCacheList.length - 1];\r\n        }\r\n\r\n        const beatLen = (pos - pastLen) * last.beatRate;\r\n        posTime += 60 / last.bpm * beatLen;\r\n\r\n        const lenTime = 60 / last.bpm * len * last.beatRate;\r\n\r\n        return [posTime, lenTime];\r\n    }\r\n}\r\n\r\nexport default CacheUtil;\r\n","import { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./score/cacheUtil\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += (notes.len4 ?? 0);\r\n    total += (notes.len8 ?? 0) / 2;\r\n    total += (notes.len16 ?? 0) / 4;\r\n    total += (notes.len32 ?? 0) / 8;\r\n    total += (notes.len4div3 ?? 0) / 3;\r\n    total += (notes.len8div3 ?? 0) / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    const ml: MelodyLength = {};\r\n    const len4 = (notes1.len4 ?? 0) + (notes2.len4 ?? 0);\r\n    if (len4 > 0) ml.len4 = len4;\r\n    const len8 = (notes1.len8 ?? 0) + (notes2.len8 ?? 0);\r\n    if (len8 > 0) ml.len8 = len8;\r\n    const len16 = (notes1.len16 ?? 0) + (notes2.len16 ?? 0);\r\n    if (len16 > 0) ml.len16 = len16;\r\n    const len32 = (notes1.len32 ?? 0) + (notes2.len32 ?? 0);\r\n    if (len32 > 0) ml.len32 = len32;\r\n    const len4div3 = (notes1.len4div3 ?? 0) + (notes2.len4div3 ?? 0);\r\n    if (len4div3 > 0) ml.len4 = len4div3;\r\n    const len8div3 = (notes1.len8div3 ?? 0) + (notes2.len8div3 ?? 0);\r\n    if (len8div3 > 0) ml.len8div3 = len8div3;\r\n    return getSortetdNotesLen(ml);\r\n}\r\n\r\nconst getSortetdNotesLen = (base: MelodyLength) => {\r\n    let len4 = base.len4 ?? 0;\r\n    let len8 = base.len8 ?? 0;\r\n    let len16 = base.len16 ?? 0;\r\n    let len32 = base.len32 ?? 0;\r\n    let len4div3 = base.len4div3 ?? 0;\r\n    let len8div3 = base.len8div3 ?? 0;\r\n\r\n    const ml: MelodyLength = {};\r\n\r\n    const len32Cnt2 = Math.floor(len32 / 2);\r\n    len32 -= len32Cnt2 * 2;\r\n    len16 += len32Cnt2;\r\n\r\n    const len8div3Cnt3 = Math.floor(len8div3 / 3);\r\n    len8div3 -= len8div3Cnt3 * 3;\r\n    len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(len8div3 / 2);\r\n    len8div3 -= len8div3Cnt2 * 2;\r\n    len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(len4div3 / 3);\r\n    len4div3 -= len4div3Cnt3 * 3;\r\n    len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(len16 / 2);\r\n    len16 -= len16Cnt2 * 2;\r\n    len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(len8 / 2);\r\n    len8 -= len8Cnt2 * 2;\r\n    len4 += len8Cnt2;\r\n\r\n    if (len4 > 0) ml.len4 = len4;\r\n    if (len8 > 0) ml.len8 = len8;\r\n    if (len16 > 0) ml.len16 = len16;\r\n    if (len32 > 0) ml.len32 = len32;\r\n    if (len4div3 > 0) ml.len4div3 = len4div3;\r\n    if (len8div3 > 0) ml.len8div3 = len8div3;\r\n\r\n    return ml;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len32 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 8: len32 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n\r\n    const ml: MelodyLength = {};\r\n    if (len4 > 0) ml.len4 = len4;\r\n    if (len8 > 0) ml.len8 = len8;\r\n    if (len16 > 0) ml.len16 = len16;\r\n    if (len32 > 0) ml.len32 = len32;\r\n    if (len4div3 > 0) ml.len4div3 = len4div3;\r\n    if (len8div3 > 0) ml.len8div3 = len8div3;\r\n    return getSortetdNotesLen(ml);\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if ((notes.len32 ?? 0) > 0) return 8;\r\n    else if ((notes.len8div3 ?? 0) > 0) return 6;\r\n    else if ((notes.len16 ?? 0) > 0) return 4;\r\n    else if ((notes.len4div3 ?? 0) > 0) return 3;\r\n    else if ((notes.len8 ?? 0) > 0) return 2;\r\n    else if ((notes.len4 ?? 0) > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.melodyFont;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playHarmony = (soundFullName: string, store: Store, duration: number, gain: number) => {\r\n    const instrument = store.instruments.harmonyFont;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, { gain, duration });\r\n    } else {\r\n        // alert('null');\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.harmonyFont;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nnamespace MelodyUtil {\r\n\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        state.isPreview = false;\r\n        // state.focusIndex = state.lastFocus;\r\n        // state.distIndex = state.focusIndex;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        // store.instruments.sampler.releaseAll();\r\n        dispatcher.melody.setState(state);\r\n        dispatcher.melody.adjustScrollX();\r\n    }\r\n\r\n    /**\r\n     * プレビュー再生を開始する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const reserveTasks: NodeJS.Timeout[] = [];\r\n        const instrument = store.instruments.melodyFont;\r\n\r\n        // 開始するフォーカス（非選択時は最初から）\r\n        const start = state.focusIndex === -1 ? 0 : state.focusIndex;\r\n\r\n        // プレビュー開始時のフォーカスを保持する\r\n        state.lastFocus = state.focusIndex;\r\n        state.isPreview = true;\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = start; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                        dispatcher.melody.adjustScrollX();\r\n                        // dispatcher.melody.setState(state);\r\n                    }, 0);\r\n                }, (posTime - firstTime) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (posTime - firstTime + lenTime) * 1000)\r\n                );\r\n            }\r\n        }\r\n\r\n        // ハーモニーを再生\r\n        if (!state.isSolo) {\r\n            previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n\r\n        dispatcher.system.setReserveTasks(reserveTasks);\r\n        dispatcher.melody.setState(state);\r\n    }\r\n\r\n    const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        const update = store.invalidate.melody as () => void;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = 3; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                if (cache.pastSecond < start) continue;\r\n\r\n                const detail = element.detail as DetailChord;\r\n\r\n                if (detail.root == null) return;\r\n\r\n                // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\r\n                // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n\r\n                // const chordTime = 60 / cache.bpm * len;\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const chordTime = TheoryUtil.calcSustainMsec(\r\n                    detail.beatLen,\r\n                    minute,\r\n                    cache.bpm,\r\n                    cache.beatSignature\r\n                );\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // sampler.releaseAll();\r\n                        // stopPiano(store);\r\n\r\n                        // const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                        // const div = pickingDelay / pitchList.length;\r\n\r\n                        // pitchList.forEach((index, j) => {\r\n                        //     const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        //     const octave = Math.floor(index / 12);\r\n                        //     const soundFullName = soundName + octave;\r\n                        //     playPiano(soundFullName, store, chordTime);\r\n                        // });\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n                        setTimeout(() => {\r\n                            store.melodyState.tableMouse.curChord = element;\r\n                            update();\r\n                            // dispatcher.melody.setState(store.melodyState);\r\n                        }, 0);\r\n                    }, cache.pastSecond - start - adjsut)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const chordList = store.scoreData.chordList;\r\n        const cacheList = store.scoreState.elementCacheList;\r\n        const cache = cacheList[3];\r\n        const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n        const init = chordList[0].detail as DetailInit;\r\n        const curChord = state.tableMouse.curChord;\r\n        const reserveTasks = store.reserveTasks;\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            // const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            // const onIndex = detail.on == null ? -1 : ((detail.on.index + init.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n            // const chordTime = 60 / init.bpm * len;\r\n            const minute = detail.minute.head + detail.minute.tail;\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                detail.beatLen,\r\n                minute,\r\n                init.bpm,\r\n                init.beatSignature\r\n            );\r\n\r\n            BackingUtil.playBacking(store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.melody.setState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.melody.setState(state);\r\n\r\n        }\r\n    }\r\n\r\n    export type Quantize = 32 | 16| 8 | 4;\r\n\r\n    export const isEnableQuantize = (quantize: Quantize, notes: MelodyLength) => {\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyUtil;","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n    tabRecordNum?: number;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const InputTextForm = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInput\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'right'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    return (\r\n                        <_Button\r\n                            key={i}\r\n                            isCenter={props.isCenter ?? false}\r\n                            isEnable={button.isEnable ?? true}\r\n                            onClick={button.callback}\r\n                        >{button.label}</_Button>\r\n                    );\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        return (<>\r\n            <_BorderText>{props.title}</_BorderText>\r\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #c3c3c3fc, #d8d8d8, #c3c3c3fc);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnCombobox = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 150px);\r\n    margin-top: 2px;\r\n    margin-left: 4px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #1f1f1f;\r\n    border: solid 1px #000;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;\r\n\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #cdcdcd, #ebebeb, #cdcdcd);\r\n    border: 1px solid #747474;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    margin-top: 2px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    background-color: #dcddce;\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const { dispatcher } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    dispatcher.system.closeDialog();\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport { LoginProps } from \"../../redux/store/userEnv\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst WIDTH = 750;\r\nconst HEIGHT = 600;\r\n/**\r\n * アカウントフレームのコンポーネント\r\n * @returns \r\n */\r\nconst AccountFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [oldPass, setOldPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPass, setNewPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPassConfirm, setNewPassConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n    const [emailList, setEmailList] = useState<string[]>([]);\r\n\r\n    const [isModify, setModify] = useState(false);\r\n    const loginProps = store.userEnv.login as LoginProps;\r\n\r\n    const reloadInfo = () => {\r\n        setUserId({ ...userId, value: loginProps.id });\r\n        setNewPass({ ...newPass, value: '' });\r\n        setNewPassConfirm({ ...newPassConfirm, value: '' });\r\n        setEmail({ ...email, value: loginProps.email });\r\n        setOldPass({ ...oldPass, value: loginProps.password });\r\n    }\r\n\r\n    useEffect(() => {\r\n        DataUtil.findUserInfoList().then(list => {\r\n\r\n            const userIdList: string[] = [];\r\n            const emailList: string[] = [];\r\n            list.forEach(info => {\r\n                if (info.id !== loginProps.id) userIdList.push(info.id);\r\n                if (info.email !== '') emailList.push(info.email);\r\n            });\r\n            setUserIdList(userIdList);\r\n            setEmailList(emailList);\r\n        });\r\n\r\n        const hash = DataUtil.getHashedFromUserSeq(loginProps.seq);\r\n\r\n        // ユーザページのURLに変更する。\r\n        window.history.replaceState('', '', `/#/user?v=${hash}`);\r\n\r\n        reloadInfo();\r\n\r\n        // 閉じる際にURLを元に戻す\r\n        return () => {\r\n            // alert('destroy');\r\n            window.history.replaceState('', '', `/#/`);\r\n        }\r\n    }, []);\r\n\r\n    const userTabJsx: JSX.Element = (\r\n        <_Wrap>\r\n\r\n            <FormUtil.InputTextForm\r\n                titleLabel={'user id'}\r\n                checkable={userId}\r\n                setCheckable={setUserId}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !userIdList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextForm\r\n                titleLabel={'new pass'}\r\n                isPassword\r\n                checkable={newPass}\r\n                setCheckable={setNewPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPassConfirm.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPassConfirm]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextForm\r\n                titleLabel={'new pass*'}\r\n                isPassword\r\n                checkable={newPassConfirm}\r\n                setCheckable={setNewPassConfirm}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPass.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPass]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextForm\r\n                titleLabel={'email'}\r\n                checkable={email}\r\n                setCheckable={setEmail}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => {\r\n                            return value.length === 0 || value.split('@').length === 2;\r\n                        },\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !emailList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                // width={500}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextForm\r\n                titleLabel={'old pass'}\r\n                isPassword\r\n                checkable={oldPass}\r\n                setCheckable={setOldPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => value === loginProps.password,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                // dependency={[passwordConfirm]}\r\n                width={300}\r\n                marginTop={55}\r\n                isReadOnly={!isModify}\r\n            />\r\n        </_Wrap>\r\n    );\r\n\r\n    // 登録ボタンの活性状態\r\n    const permitRegist = (\r\n        userId.errors.length === 0\r\n        && newPass.errors.length === 0\r\n        && newPassConfirm.errors.length === 0\r\n        && email.errors.length === 0\r\n        && oldPass.errors.length === 0\r\n    );\r\n\r\n    const updateUserInfo = () => {\r\n        const passwordStr = newPass.value.length === 0 ? '' : `,password = '${newPass.value}'`;\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE user_tbl SET id = '${userId.value}', email = '${email.value}'${passwordStr}\r\n            WHERE seq = ${loginProps?.seq}`\r\n        ).then(() => {\r\n            loginProps.id = userId.value;\r\n            if (newPass.value.length > 0) {\r\n                loginProps.password = newPass.value;\r\n            }\r\n            loginProps.email = email.value;\r\n            dispatcher.system.setUserEnv({ ...store.userEnv, login: { ...loginProps } });\r\n            dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Modify successful!\" />);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <FormUtil.Message\r\n                    message=\"If you bookmark this page, you can easily login by URL.\"\r\n                />\r\n            </_Header>\r\n            <_Body>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'User', disable: false, cont: userTabJsx },\r\n                        { name: 'Security', disable: false, cont: <></> },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_Body>\r\n            <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        {\r\n                            label: 'Close',\r\n                            callback: () => {\r\n                                dispatcher.system.closeDialog();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Cancel',\r\n                            isEnable: isModify,\r\n                            callback: () => {\r\n                                setModify(false);\r\n                                reloadInfo();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isModify ? 'Modify' : 'Regist',\r\n                            isEnable: !isModify || permitRegist,\r\n                            callback: () => {\r\n                                if (!isModify) {\r\n                                    setModify(true);\r\n                                    setOldPass({ ...oldPass, value: '' });\r\n                                }\r\n                                else {\r\n                                    updateUserInfo();\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\n\r\nexport default AccountFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7eb;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    /* text-align: center; */\r\n`;\r\nconst _Body = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    padding: 4px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n`;","import { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailAlter, DetailChord, DetailInit, DetailSection, Scale, ScoreData, MelodyNotes, VoicingProps, BackingPatternProps } from \"../store/score/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/score/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/score/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport MelodyUtil, { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\nimport { Invalidate } from \"../store/invalidate\";\r\nimport BackingState from \"../store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport CacheUtil from \"../../utils/score/cacheUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport ScoreCache from \"../store/score/scoreCache\";\r\nimport { UserEnv } from \"../store/userEnv\";\r\nimport { Instruments } from \"../store/instrument\";\r\nimport AccountFrame from \"../../contents/dialog/accountFrame\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n        setUserEnv: (userEnv: UserEnv) => {\r\n            this.dispatch(ActionType.SET_USER_ENV, { userEnv });\r\n        },\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setDialog: (jsx: JSX.Element) => {\r\n            this.store.systemState.dialog = jsx;\r\n            this.system.setState(this.store.systemState);\r\n        },\r\n\r\n        closeDialog: () => {\r\n            this.store.systemState.dialog = null;\r\n            this.system.setState(this.store.systemState);\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n\r\n            if(this.store.userEnv.login != null) {\r\n                this.system.setDialog(<AccountFrame />);\r\n            }\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        },\r\n\r\n        setInvalidate: (invalidate: Invalidate) => {\r\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        saveFile: () => {\r\n            // プレビュー時は保存できない\r\n            const isDirect = this.store.systemState.directScore != undefined;\r\n            if (isDirect) return;\r\n\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const options = {\r\n                types: [\r\n                    {\r\n                        accept: {\r\n                            'text/plain': ['.lcrs'],\r\n                        },\r\n                    },\r\n                ],\r\n            };\r\n            const fileHandle = state.fileHandle;\r\n            if (fileHandle != null) {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await fileHandle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(JSON.stringify(data));\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = fileHandle;\r\n                    this.score.setScoreState({ ...state });\r\n                    const file = await fileHandle.getFile();\r\n                    // alert('saved successfully!');\r\n                    console.log('saved successfully!');\r\n                })();\r\n            } else {\r\n                window.showSaveFilePicker(options).then((handle) => {\r\n                    (async () => {\r\n                        //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                        const writable = await handle.createWritable();\r\n                        //テキストデータの書き込み\r\n                        const text = DataUtil.gZip(JSON.stringify(data));\r\n                        await writable.write(text);\r\n                        //ファイルを閉じる\r\n                        await writable.close();\r\n                        state.fileHandle = handle;\r\n                        this.score.setScoreState({ ...state });\r\n                    })();\r\n                }).catch(() => {\r\n                    console.log('キャンセルされました');\r\n                });\r\n            }\r\n        },\r\n\r\n        setHarmonyFont: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, harmony: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setInstruments: (instruments: Instruments) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        clearCache: () => {\r\n            const scoreState = this.store.scoreState;\r\n            scoreState.focusIndex = -1;\r\n            scoreState.distIndex = -1;\r\n            scoreState.initialBeat = 4;\r\n            scoreState.elementCacheList = [];\r\n            scoreState.beatCacheList = [];\r\n            scoreState.chordCacheList = [];\r\n            scoreState.scaleCacheList = [];\r\n            scoreState.tempoCacheList = [];\r\n            scoreState.measureCacheList = [];\r\n            scoreState.sectionCacheList = [];\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                state.distIndex = state.focusIndex;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 選択範囲の終点を移動する\r\n         * @param isNext \r\n         */\r\n        moveDist: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.distIndex + sub].type !== 'fixed') {\r\n                state.distIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n            state.focusIndex = !isTail ? distHead : distTail;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        flashElement: (index: number) => {\r\n            // const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[index];\r\n\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n\r\n            // bodyRef.style.backgroundColor = '#ffef5f';\r\n            // setTimeout(() => {\r\n            //     bodyRef.style.backgroundColor = '';\r\n            // }, 10);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                if (isUp) {\r\n                    detail.root = { index: 0, isFlat: false };\r\n                    this.score.setScoreData(data);\r\n                    this.score.flashElement(state.focusIndex);\r\n                }\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            } else if (detail.root.index + sub === -1) {\r\n                detail.root = null;\r\n                detail.symbolKey = 'major';\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n            // キャッシュの更新\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            if (detail.root != null) {\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(detail.root, cache.keyIndex, detail.on, symbol);\r\n            } else {\r\n                chordCache.chordFullName = '';\r\n                chordCache.structList = [];\r\n            }\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                // setTimeout(() => {\r\n                CacheUtil.updateHarmonizeCache(this.store, this);\r\n                // }, 1);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -2 && target <= 2) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                CacheUtil.updateHarmonizeCache(this.store, this);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[state.focusIndex];\r\n\r\n            // 拍の初期値を取得\r\n            const beatSignature = state.elementCacheList[state.focusIndex].beatSignature;\r\n            const initialBeat = TheoryUtil.getBeatProps(beatSignature).barBeatCnt;\r\n            let curBeatLen = initialBeat;\r\n            if (cur.type === 'chord') {\r\n                const curChord = cur.detail as DetailChord;\r\n                // 後にシンコペーションが設定されている場合は追加できない\r\n                if (curChord.minute.tail != 0) return;\r\n\r\n                curBeatLen = curChord.beatLen;\r\n            }\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: curBeatLen,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null,\r\n                        hasError: false\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        addAlterElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'alter', detail: {\r\n                    alterType: null,\r\n                    modRel: null,\r\n                    dommVal: 0,\r\n                    keyAdj: 0,\r\n                    tempoRel: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbs: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailAlter\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        removeElement: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                const sectionNo = this.store.scoreState.elementCacheList[i].sectionNo;\r\n                // 先頭のセクション要素が含まれている場合削除しない\r\n                if (element.type === 'section' && sectionNo === 0) {\r\n                    return;\r\n                }\r\n            }\r\n            data.chordList.splice(distHead, (distTail - distHead) + 1);\r\n            this.score.setScoreData(data);\r\n            state.focusIndex = distHead - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // // reffer.style.width = '300px';\r\n            // wrapRef.style.opacity = '0';\r\n            // wrapRef.style.overflow = 'hidden';\r\n            // // wrapRef.style.padding = '0';\r\n            // wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '0';\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.opacity = '';\r\n            //     wrapRef.style.width = '';\r\n            //     wrapRef.style.overflow = '';\r\n            //     // wrapRef.style.padding = '';\r\n            //     const data = this.store.scoreData;\r\n            //     data.chordList.splice(state.focusIndex, 1);\r\n            //     this.score.setScoreData(data);\r\n            //     state.focusIndex--;\r\n            //     this.score.setScoreState(state);\r\n            //     // setTimeout(() => {\r\n            //     //     reffer.style.opacity = '';\r\n            //     //     reffer.style.width = '';\r\n            //     //     const data = this.store.scoreData;\r\n            //     //     data.chordList.splice(state.focusIndex, 1);\r\n            //     //     this.score.setScoreData(data);\r\n            //     // }, 200);\r\n            // }, 200);\r\n        },\r\n\r\n        removeBacking: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                // コード要素のみ処理\r\n                if (element.type === 'chord') {\r\n                    const chord = element.detail as DetailChord;\r\n                    chord.backing = { voicingList: [], pattern: null };\r\n                }\r\n            }\r\n            this.score.setScoreData(data);\r\n            this.score.setScoreState({ ...state });\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        copyElementList: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            const list: ChordElement[] = [];\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                list.push(JSON.parse(JSON.stringify(element)));\r\n            }\r\n            console.log(list.length);\r\n            state.copiedElementList = list;\r\n            state.cloneBacking = null;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        pasteElementList: () => {\r\n            const state = this.store.scoreState;\r\n\r\n            const data = this.store.scoreData;\r\n            const list = state.copiedElementList;\r\n            if (list == null) return;\r\n\r\n            console.log(list.length);\r\n            list.forEach((element, i) => {\r\n                data.chordList.splice(state.focusIndex + 1 + i, 0, element);\r\n            });\r\n            this.score.setScoreData(data);\r\n            state.focusIndex++;\r\n            state.distIndex = state.focusIndex + list.length - 1;\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        // incrementSymbol: (isUp: boolean) => {\r\n        //     const state = this.store.scoreState;\r\n        //     const data = this.store.scoreData;\r\n        //     const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n        //     const sub = isUp ? 1 : -1;\r\n        //     if (detail.root == null) {\r\n        //         detail.root = { index: 0, isFlat: false };\r\n        //         this.score.setScoreData(data);\r\n        //     } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n        //         detail.root.index += sub;\r\n        //         detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n        //         this.score.setScoreData(data);\r\n        //     }\r\n        // },\r\n\r\n        setDiatonicChord: (scale: Scale, diatonicIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const scaleList = scale === 'major' ? TheoryUtil.DIATONIC_MAJOR_SCALE_LIST : TheoryUtil.DIATONIC_MINOR_SCALE_LIST;\r\n            const chord = scaleList[diatonicIndex];\r\n            const root: TheoryUtil.DegreeProps = { ...chord.root };\r\n            detail.root = root;\r\n            detail.symbolKey = chord.symbolKey;\r\n            // オンコードの設定を解除\r\n            detail.on = null;\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n            [chordCache.chordFullName, chordCache.structList] =\r\n                BackingUtil.getChordDetails(root, cache.keyIndex, null, symbol);\r\n            chordCache.backingError =\r\n                BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        cloneBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n        },\r\n\r\n        pastBacking: () => {\r\n            const state = this.store.scoreState;\r\n            if (state.cloneBacking != null) {\r\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n                const data = this.store.scoreData;\r\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        openLibraryWnd: (isPreset: boolean) => {\r\n            const state = this.store.scoreState;\r\n            if (!isPreset) {\r\n                state.hideMenu = 'library';\r\n\r\n                // バッキングを作成\r\n                const chordList = this.store.scoreData.chordList;\r\n                const focusIndex = this.store.scoreState.focusIndex;\r\n                const chord = chordList[focusIndex].detail as DetailChord;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const structList = chordCache.structList;\r\n                const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\r\n                const chordInfo: BackingState.ChordInfo = {\r\n                    symbolAttr: symbol.attr,\r\n                    chordFullName: chordCache.chordFullName,\r\n                    structList,\r\n                    beatLen: chord.beatLen,\r\n                    minute: chord.minute,\r\n                    init: { ...cache }\r\n                };\r\n\r\n                // エラーチェックのためにテーブルからリストへ逆変換\r\n                // const voicingList = BackingUtil.getVoicingListFromTable([]);\r\n                // const hasError = BackingUtil.checkEditorError(chordInfo, voicingList, null);\r\n                this.backing.setState({\r\n                    chordInfo,\r\n                    tabIndex: 0,\r\n                    voicingTable: [],\r\n                    pattern: null,\r\n                    isPreview: false,\r\n                    hasError: false,\r\n                    closeAction: () => { }\r\n                });\r\n            }\r\n            else state.hideMenu = 'preset';\r\n\r\n            this.score.setScoreState(state);\r\n\r\n        },\r\n\r\n        closeLibraryWnd: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n        },\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreData(data);\r\n\r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n\r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                chordCache.backingError =\r\n                    BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n\r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                chordCache.backingError =\r\n                    BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    /**\r\n     * メロディ画面のディスパッチ\r\n     */\r\n    public melody = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        /**\r\n         * 全てのノーツを選択する\r\n         */\r\n        allSelect: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = notesList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n        },\r\n\r\n        setNotesList: (notesList: MelodyNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setMelodyFont: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * 選択中のノーツの音程を変更する\r\n         * @param isUpper\r\n         * @param mode \r\n         * @returns \r\n         */\r\n        incrementCurPitch: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n            const scoreState = this.store.scoreState;\r\n            const state = this.store.melodyState;\r\n            const focusIndex = state.focusIndex;\r\n            const distIndex = state.destIndex;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            // フォーカスされていない場合は処理しない\r\n            if (focusIndex === -1) return;\r\n\r\n            if (focusIndex !== distIndex) {\r\n\r\n                const targetList = notesList.filter(\r\n                    (notes, i) => i >= focusIndex && i <= distIndex\r\n                );\r\n\r\n                targetList.forEach(notes => {\r\n                    notes.pitchIndex += 1 * (isUpper ? -1 : 1);\r\n                });\r\n\r\n                // 履歴を作成\r\n                state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                this.melody.setNotesList(notesList.slice());\r\n            } else {\r\n                const cur = notesList[focusIndex];\r\n                // const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n                const normalLeft = getNormalizeLenFromNotes(cur.pos);\r\n                const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n                const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n                const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n\r\n                const prevPitchIndex = cur.pitchIndex;\r\n                const interval = mode !== 'octave' ? 1 : 12;\r\n                let tempPitchIndex = cur.pitchIndex;\r\n\r\n                while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                    tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                    if (mode !== 'scale' ||\r\n                        (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                    ) {\r\n                        cur.pitchIndex = tempPitchIndex;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // 値が変わっていた場合のみ処理する\r\n                if (prevPitchIndex !== cur.pitchIndex) {\r\n                    playSoundfont(cur.pitchIndex, this.store);\r\n                    // 履歴を作成\r\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                    this.melody.setNotesList(notesList.slice());\r\n\r\n                    this.melody.adjustScrollY();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * キースイッチを設定する\r\n         * @param keySwitch \r\n         */\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         */\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        /**\r\n         * 複数選択From～ToのToを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         * @returns \r\n         */\r\n        moveDestFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.destIndex > 0 : state.destIndex < notesList.length - 1) {\r\n                state.destIndex += (isNext ? 1 : -1);\r\n                this.melody.setState(state);\r\n            }\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツのエリアのコードを更新する\r\n         * @param focusIndex ノーツのフォーカス\r\n         */\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.tableMouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスの後ろに新しいノーツを追加する\r\n         * @returns \r\n         */\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const focus = state.focusIndex;\r\n            if (focus === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[focus];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = focus === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            // 新しい要素の位置\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(focus + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツを削除する\r\n         */\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            // 履歴を作成\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n            // 対象の開始と終了のインデックスを取得\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            // 削除する個数\r\n            const delNum = end - start + 1;\r\n            notesList.splice(start, delNum);\r\n            this.melody.setNotesList(notesList);\r\n            // 削除後は対象の開始インデックスの１つ前を選択\r\n            state.focusIndex = start - 1;\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * 複数選択を解除する\r\n         * @param isTail 解除時複数選択のどこにフォーカスを移すか（trueの場合終端を選択）\r\n         */\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            state.focusIndex = (!isTail ? start : end);\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            const distIndex = state.destIndex;\r\n            const focusIndex = state.focusIndex;\r\n\r\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\r\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n\r\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\r\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\r\n\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 移動可能かを判定\r\n            if (condition) {\r\n                for (let i = start; i <= end; i++) {\r\n                    const cur = notesList[i];\r\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                }\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        firstNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n                this.melody.adjustScrollX();\r\n                // this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.destIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            // if (state.focusIndex === -1) return;\r\n\r\n            MelodyUtil.previewStart(this.store, this);\r\n        },\r\n\r\n        copyNotes: () => {\r\n\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const num = focusEnd - focusStart + 1;\r\n\r\n            const cloneNotesList: MelodyNotes[] = [];\r\n            const base = notesList[focusStart].pos;\r\n            const baseUnit = getMinimumLenUnit(base);\r\n            for (let i = 0; i < num; i++) {\r\n                const notes = notesList[i + focusStart];\r\n                const unit = getMinimumLenUnit(notes.pos);\r\n                const useUnit = baseUnit > unit ? baseUnit : unit;\r\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\r\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\r\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\r\n                console.log(JSON.stringify(pos));\r\n                cloneNotesList.push({\r\n                    pitchIndex: notes.pitchIndex,\r\n                    pos,\r\n                    len: { ...notes.len }\r\n                });\r\n            }\r\n            state.cloneNotesList = cloneNotesList;\r\n            // notesList.splice(state.focusIndex, num);\r\n            // this.tune.setNotesList(notesList);\r\n            // state.focusIndex = focusStart - 1;\r\n            // state.distIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            // alert(JSON.stringify(state.cloneNotesList));\r\n        },\r\n\r\n        pasteNotes: () => {\r\n            // alert('pasteNotes');\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const pastList: MelodyNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\r\n            pastList.forEach(notes => {\r\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\r\n            });\r\n            // ペーストするノーツの最後（右端）の要素\r\n            const pastLast = pastList[pastList.length - 1];\r\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList = notesList.concat(pastList);\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                data.notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                this.score.setScoreData(data);\r\n\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex + pastList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            // this.tune.adjustScrollX();\r\n        },\r\n\r\n        undo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`undo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const prev = history.undo();\r\n            if (prev != null) {\r\n                if (history.cur === 0) {\r\n                    console.log('first undo');\r\n                    history.list.unshift(JSON.stringify(data.notesList));\r\n                    history.cur = 1;\r\n                }\r\n                data.notesList = JSON.parse(prev);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`undo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        },\r\n\r\n        redo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`redo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const next = history.redo();\r\n            if (next != null) {\r\n                data.notesList = JSON.parse(next);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`redo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            const chordBacking = detail.backing;\r\n            const structList = chordCache.structList;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n\r\n            const voicingTable = BackingUtil.getInitVoicingTable(detail.backing.voicingList, structList.length);\r\n            const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, chordBacking.pattern);\r\n\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n            const chordInfo: BackingState.ChordInfo = {\r\n                symbolAttr: symbol.attr,\r\n                chordFullName: chordCache.chordFullName,\r\n                structList,\r\n                beatLen: detail.beatLen,\r\n                minute: detail.minute,\r\n                init: { ...cache }\r\n            };\r\n            // エラーチェックのためにテーブルからリストへ逆変換\r\n            const voicingList = BackingUtil.getVoicingListFromTable(voicingTable);\r\n            const hasError = BackingUtil.checkEditorError(chordInfo, voicingList, pattern);\r\n\r\n            const updateAction = (editor: BackingState.Editor, isUpdate: boolean) => {\r\n                if (isUpdate) {\r\n                    this.backing.mappingEditorToScore(editor);\r\n                }\r\n                this.backing.closeBackingEditor();\r\n            }\r\n            // バッキングステートの初期化\r\n            this.backing.setState({\r\n                chordInfo,\r\n                tabIndex: 0,\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false,\r\n                hasError,\r\n                closeAction: updateAction\r\n                // editType: 'normal'\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n            setTimeout(() => {\r\n                this.backing.setState(null);\r\n            }, 50);\r\n        },\r\n\r\n        setState: (backingState: null | BackingState.Editor) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingState.Layer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingState.Layer;\r\n        },\r\n\r\n        /**\r\n         * エディタで設定したバッキング情報を譜面データに反映\r\n         */\r\n        mappingEditorToScore: (editor: BackingState.Editor) => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const focus = scoreState.focusIndex;\r\n            const detail = data.chordList[focus].detail as DetailChord;\r\n            // const editor = this.store.backingState as BackingState.Editor;\r\n            console.log(editor);\r\n            detail.backing = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                // hasError: editor.hasError\r\n            };\r\n            this.score.setScoreData(data);\r\n\r\n            // エラーの反映\r\n            const cache = scoreState.elementCacheList[focus];\r\n            const scoreCache = scoreState.chordCacheList[cache.chordBlockNo];\r\n            scoreCache.backingError = editor.hasError;\r\n            this.score.setScoreState(scoreState);\r\n        },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const curLen = lenList[pattern.lenIndex];\r\n            const newLen: BackingState.NoteDiv = { rate: curLen.rate, div3: curLen.div3, isDot: curLen.isDot };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.noteDivList = lenList.slice();\r\n\r\n            // テーブル追加\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n\r\n            // ベロシティ追加\r\n            layer.velocityList.splice(pattern.lenIndex + 1, 0, 5);\r\n\r\n            // ペダル追加\r\n            if (pattern.layerIndex === 0) {\r\n                pattern.pedalActs.splice(pattern.lenIndex + 1, 0, null);\r\n            }\r\n\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            cur.isDot = false;\r\n            cur.div3 = 0;\r\n            layer.noteDivList = layer.noteDivList.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            if (BackingUtil.isPermitDot(cur)) {\r\n                cur.isDot = !cur.isDot;\r\n                layer.noteDivList = layer.noteDivList.slice();\r\n                this.backing.setState(state);\r\n                this.backing.updateErrorState();\r\n            }\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: BackingState.NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            layer.table = layer.table.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        incrementVel: (value: number) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const after = layer.velocityList[pattern.lenIndex] + value;\r\n            if (after >= 1 && after <= 10) {\r\n                layer.velocityList[pattern.lenIndex] = after;\r\n                this.backing.setState(state);\r\n            }\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            // 2つ以上要素がないと消せない\r\n            if (layer.noteDivList.length >= 2) {\r\n                layer.noteDivList.splice(pattern.lenIndex, 1);\r\n                layer.table.forEach((column) => {\r\n                    column.splice(pattern.lenIndex, 1);\r\n                });\r\n                layer.velocityList.splice(pattern.lenIndex, 1);\r\n                // for(let i = 0; i < pattern.channels.length; i ++) {\r\n                //     layer.table[i].splice(pattern.lenIndex, 1);\r\n                // }\r\n                if (pattern.layerIndex === 0) {\r\n                    // 終端までnullで更新\r\n                    if (pattern.lenIndex < pattern.pedalActs.length - 1) {\r\n                        for (let j = pattern.lenIndex + 1; j < pattern.pedalActs.length; j++) {\r\n                            pattern.pedalActs[j] = null;\r\n                        }\r\n                    }\r\n                    pattern.pedalActs.splice(pattern.lenIndex, 1);\r\n                }\r\n\r\n                if (pattern.lenIndex > 0) {\r\n                    pattern.lenIndex--;\r\n                }\r\n                this.backing.setState(state);\r\n            }\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n        /**\r\n         * 左右レイヤーを切り替える\r\n         */\r\n        switchLayer: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        /**\r\n         * 音量orペダルのモードを切り替える\r\n         */\r\n        switchMode: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            if (pattern.mode === 'velocity') pattern.mode = 'pedal';\r\n            else if (pattern.mode === 'pedal') pattern.mode = 'velocity';\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        /**\r\n         * バッキングのプレビュー再生をする\r\n         */\r\n        testBacking: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const reserveTasks = this.store.reserveTasks;\r\n            const chordInfo = editor.chordInfo;\r\n            const init = chordInfo.init;\r\n\r\n            // const rootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n            // const onIndex = chordInfo.on == null ? -1 : ((chordInfo.on.index + chordInfo.init.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n            // const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\r\n            // const chordTime = 60 / init.bpm * len;\r\n\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                chordInfo.beatLen,\r\n                chordInfo.minute.head + chordInfo.minute.tail,\r\n                init.bpm,\r\n                init.beatSignature\r\n            );\r\n            const backing: ChordBacking = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern)\r\n            };\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordInfo.structList);\r\n\r\n            BackingUtil.playBacking(this.store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                editor.isPreview = false;\r\n                this.backing.setState(editor);\r\n            }, chordTime));\r\n\r\n            editor.isPreview = true;\r\n            this.backing.setState(editor);\r\n        },\r\n\r\n        updateErrorState: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const voicingList = BackingUtil.getVoicingListFromTable(editor.voicingTable);\r\n            editor.hasError = BackingUtil.checkEditorError(editor.chordInfo, voicingList, editor.pattern);\r\n            this.backing.setState(editor);\r\n        },\r\n    }\r\n\r\n    public thema = {\r\n        openBackingEditor: (\r\n            beatLen: number, head: number, tail: number,\r\n            symbolKey: TheoryUtil.SymbolKey, rootIndex: number, backing: ChordBacking,\r\n            update: (editor: BackingState.Editor) => void,\r\n            close: () => void\r\n        ) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(symbolKey) as TheoryUtil.SymbolParams;\r\n            const voicingTable = BackingUtil.getInitVoicingTable(backing.voicingList, symbol.structs.length);\r\n            const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, backing.pattern);\r\n\r\n            const [chordFullName, structList] = BackingUtil.getChordDetails(\r\n                { index: rootIndex, isFlat: false } as TheoryUtil.DegreeProps,\r\n                0,\r\n                null,\r\n                symbol\r\n            );\r\n            const chordInfo: BackingState.ChordInfo = {\r\n                symbolAttr: symbol.attr,\r\n                chordFullName: chordFullName,\r\n                structList,\r\n                beatLen,\r\n                minute: { head, tail },\r\n                init: {\r\n                    beatSignature: \"4/4\",\r\n                    bpm: 100,\r\n                    keyIndex: 0,\r\n                    scale: \"major\"\r\n                }\r\n            };\r\n            // エラーチェックのためにテーブルからリストへ逆変換\r\n            const voicingList = BackingUtil.getVoicingListFromTable(voicingTable);\r\n            const hasError = BackingUtil.checkEditorError(chordInfo, voicingList, pattern);\r\n\r\n            const closeAction = (editor: BackingState.Editor, isUpdate: boolean) => {\r\n                if (isUpdate) {\r\n                    update(editor);\r\n                }\r\n                close();\r\n                this.backing.setState(null);\r\n            }\r\n            // バッキングステートの初期化\r\n            this.backing.setState({\r\n                chordInfo,\r\n                tabIndex: 0,\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false,\r\n                hasError,\r\n                closeAction\r\n                // editType: 'thema-pattern'\r\n            });\r\n        },\r\n\r\n        mappingEditorToThema: (editor: BackingState.Editor) => {\r\n            console.log(editor);\r\n            if (editor.pattern != null) {\r\n                const pattern = BackingUtil.buildPatternProps(editor.pattern)\r\n            }\r\n        },\r\n\r\n        /**\r\n         * セレクタで選択したバッキング情報を譜面データに反映\r\n         */\r\n        mappingSelectorToScore: (voicingList: VoicingProps[], pattern: BackingPatternProps | null) => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const focus = scoreState.focusIndex;\r\n            const detail = data.chordList[focus].detail as DetailChord;\r\n\r\n            detail.backing = { voicingList, pattern };\r\n            this.score.setScoreData(data);\r\n\r\n            // エラーの反映\r\n            // const cache = scoreState.elementCacheList[focus];\r\n            // const scoreCache = scoreState.chordCacheList[cache.chordBlockNo];\r\n            // scoreCache.backingError = editor.hasError;\r\n            // this.score.setScoreState(scoreState);\r\n        },\r\n    }\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport Soundfont from 'soundfont-player';\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: TheoryUtil.SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null,\r\n        // hasError: false\r\n    };\r\n    return backing;\r\n}","\r\n\r\n/**\r\n * データの履歴を管理するクラス\r\n */\r\nclass DataHistory {\r\n\r\n    cur: number;\r\n    list: string[];\r\n\r\n    constructor() {\r\n        this.cur = -1;\r\n        this.list = [];\r\n    }\r\n\r\n\r\n    add(data: string) {\r\n        // console.log(`add start ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n        // if (this.list[this.cur] === data) {\r\n        //     console.log('same...');\r\n        //     return;\r\n        // }\r\n        if (this.cur > -1) {\r\n            this.list.splice(0, this.cur + 1);\r\n            this.cur = -1;\r\n            console.log('restert');\r\n        }\r\n        this.list.unshift(data);\r\n        // console.log(`add end ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n    }\r\n\r\n    undo(): null | string {\r\n        let ret = null;\r\n        if (this.cur < this.list.length - 1) {\r\n            this.cur++;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    redo(): null | string {\r\n        let ret = null;\r\n        if (this.cur > 0) {\r\n            this.cur--;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import ThemaUtil from \"../contents/custom/backing/themaUtil\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport { BackingPatternProps, ChordBacking, DetailChord, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n// import Sample from \"../assets/sample\";\r\n\r\n\r\nnamespace LibraryUtil {\r\n\r\n    export type EnableState = {\r\n        /** コード要素選択中 */\r\n        isChordElement: boolean;\r\n        /** ライブラリ利用有無 */\r\n        isUseLib: boolean;\r\n        /** 範囲選択有無 */\r\n        isRangeSelect: boolean;\r\n    }\r\n\r\n    export type Condition = {\r\n        beatLen: number;\r\n        head: number;\r\n        tail: number;\r\n        rootIndex: number;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n    }\r\n\r\n    export type PattItemProps = {\r\n        key: number;\r\n        dispName: string;\r\n        refer: number;\r\n        source: BackingPatternProps | null;\r\n    };\r\n\r\n    export type VoicItemProps = {\r\n        pattIdx: number;\r\n        dispName: string;\r\n        // soundFullNameList: string[];\r\n        source: VoicingProps[];\r\n    };\r\n\r\n    export type PresetDef = {\r\n\r\n    }\r\n\r\n    export type Apply = {\r\n        condition: Condition;\r\n        backing: null | ChordBacking;\r\n    };\r\n    export type PresetItemProps = {\r\n        method: ThemaUtil.Method;\r\n        dispName: string;\r\n        applyList: Apply[];\r\n    };\r\n\r\n    export const getEnableState = (store: Store): EnableState => {\r\n        const chordList = store.scoreData.chordList;\r\n        const state = store.scoreState;\r\n        const cur = chordList[state.focusIndex];\r\n\r\n        const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n        const isUseLib = store.systemState.activeThemaIndex !== -1;\r\n        const isRangeSelect = state.focusIndex !== state.distIndex;\r\n\r\n        return {\r\n            isChordElement: isBackingEnable, isUseLib, isRangeSelect\r\n        };\r\n    }\r\n\r\n    const attrsSearch = (\r\n        patts: ThemaUtil.LevelPatt[] | null,\r\n        patt: ThemaUtil.LevelPatt,\r\n        symbol: TheoryUtil.SymbolParams,\r\n        rootIndex: number,\r\n        preset: null | number,\r\n        voicCallback: (voic: ThemaUtil.LevelVoic) => void,\r\n        pattVoicCallback: (patt: ThemaUtil.LevelPatt, voic: ThemaUtil.LevelVoic) => void\r\n    ) => {\r\n        const getAttrs = () => {\r\n            if (preset == null || patts == null || patt.refer === -1) return patt.attrs;\r\n            else {\r\n                const master = patts.find(fPatt => patt.refer === fPatt.key);\r\n                return master == undefined ? [] : master.attrs;\r\n            }\r\n        }\r\n        getAttrs().forEach((attr) => {\r\n            const isMatchAttr = symbol.attr === attr.attr && attr.symbols.includes(symbol.key);\r\n            if (!isMatchAttr) return 1;\r\n            attr.roots.forEach(root => {\r\n                // console.log(`rootIndex: ${rootIndex}, minIdx:${root.minIdx}～maxIdx:${root.maxIdx}`);\r\n                const isMatchRoot = rootIndex >= root.minIdx && rootIndex <= root.maxIdx;\r\n                if (!isMatchRoot) return 1;\r\n                // console.log(`passed`);\r\n                root.voics.forEach(voic => {\r\n                    if (preset != null && !voic.preUsies.map(preUse => {\r\n                        return `${preUse.depPatt === -1 ? patt.key : preUse.depPatt},${preUse.presKey}`;\r\n                    }).includes(`${patt.key},${preset}`)) return 1;\r\n                    voicCallback(voic);\r\n                    pattVoicCallback(patt, voic);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    export const searchSustMeth = (\r\n        sustMet: ThemaUtil.LevelMethod,\r\n        condition: Condition,\r\n        preset: null | number,\r\n        callback: (voic: ThemaUtil.LevelVoic) => void\r\n    ) => {\r\n        // サスティンメソッドでない場合処理しない\r\n        if (sustMet.method !== 'sustain') return;\r\n\r\n        const symbol = TheoryUtil.getSymbolFromKey(condition.symbolKey) as TheoryUtil.SymbolParams;\r\n        const rootIndex = condition.rootIndex;\r\n\r\n        const attrs = sustMet.defs as ThemaUtil.LevelAttr[];\r\n        // attrs.forEach((attr) => {\r\n        //     const isMatchAttr = symbol.attr === attr.attr && attr.symbols.includes(symbol.key);\r\n        //     if (!isMatchAttr) return 1;\r\n        //     attr.roots.forEach(root => {\r\n        //         const isMatchRoot = rootIndex >= root.minIdx && rootIndex <= root.maxIdx;\r\n        //         if (!isMatchRoot) return 1;\r\n        //         root.voics.forEach(voic => {\r\n        //             callback(voic);\r\n        //         });\r\n        //     });\r\n        // });\r\n        const dummyPatt: ThemaUtil.LevelPatt = {\r\n            attrs, key: -1, refer: -1, pattName: '', source: { channelSize: 0, layers: [], pedals: [] }\r\n        }\r\n        attrsSearch(null, dummyPatt, symbol, rootIndex, preset, callback, () => { });\r\n    };\r\n\r\n    export const searchPattMeth = (\r\n        pattMet: ThemaUtil.LevelMethod,\r\n        condition: Condition,\r\n        preset: null | number,\r\n        pattCallback: (voic: ThemaUtil.LevelPatt) => void,\r\n        voicCallback: (voic: ThemaUtil.LevelVoic) => void,\r\n        pattVoicCallback: (patt: ThemaUtil.LevelPatt, voic: ThemaUtil.LevelVoic) => void\r\n    ) => {\r\n        // パターンメソッドでない場合処理しない\r\n        if (pattMet.method !== 'pattern') return;\r\n\r\n        const symbol = TheoryUtil.getSymbolFromKey(condition.symbolKey) as TheoryUtil.SymbolParams;\r\n        const rootIndex = condition.rootIndex;\r\n\r\n        const susts = pattMet.defs as ThemaUtil.LevelSust[];\r\n        susts.forEach(sust => {\r\n            const isMatchSust = condition.beatLen === sust.beat && condition.head === sust.head && condition.tail === sust.tail;\r\n            if (!isMatchSust) return 1;\r\n            sust.patts.forEach(patt => {\r\n                // patt.attrs.forEach((attr) => {\r\n                //     const isMatchAttr = symbol.attr === attr.attr && attr.symbols.includes(symbol.key);\r\n                //     if (!isMatchAttr) return 1;\r\n                //     attr.roots.forEach(root => {\r\n                //         const isMatchRoot = rootIndex >= root.minIdx && rootIndex <= root.maxIdx;\r\n                //         if (!isMatchRoot) return 1;\r\n                //         root.voics.forEach(voic => {\r\n                //             voicCallback(voic);\r\n                //         });\r\n                //     });\r\n                // });\r\n                attrsSearch(sust.patts, patt, symbol, rootIndex, preset, voicCallback, pattVoicCallback);\r\n                pattCallback(patt);\r\n            });\r\n        });\r\n    };\r\n\r\n    export const getDistinctionFromRelate = (struct: BackingState.StructInfo) => {\r\n        switch (struct.relation) {\r\n            case 'p1': return 1;\r\n            case 'M2':\r\n            case 'm2':\r\n                return 9;\r\n            case 'm3':\r\n            case 'M3':\r\n                return 3;\r\n            case 'p4':\r\n            case 'p5':\r\n            case 'a5':\r\n            case 'd5':\r\n                return 5;\r\n            case 'm7':\r\n            case 'M7':\r\n                return 7;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    /**\r\n     * ボイシングを許容するかどうか判定する\r\n     * @param voic ボイシング情報\r\n     * @param patternList パターン情報リスト\r\n     * @param pattIndex 選択中のパターン連番\r\n     * @returns 許容するかどうか\r\n     */\r\n    export const acceptVoic = (voic: VoicItemProps, patternList: PattItemProps[], pattIndex: number) => {\r\n        const curPatt = patternList[pattIndex];\r\n        const depend = curPatt.refer;\r\n        let masterIdx = -1;\r\n        patternList.some((patt, i) => {\r\n            if (depend !== -1 && patt.key === depend) {\r\n                masterIdx = i;\r\n                return;\r\n            }\r\n        });\r\n        const isBlank = voic.pattIdx === -1;\r\n        const isMatch = voic.pattIdx === pattIndex;\r\n        const isDepend = masterIdx === voic.pattIdx;\r\n        return isBlank || isMatch || isDepend;\r\n    }\r\n\r\n    export const getPresetList = (thema: ThemaUtil.LevelBase, conditionList: Condition[]): PresetItemProps[] => {\r\n        const list: PresetItemProps[] = [];\r\n        thema.meths.forEach(meth => {\r\n            meth.prenams.forEach(preset => {\r\n                const applyList = conditionList.map(con => {\r\n                    const backingList: ChordBacking[] = [];\r\n                    switch (meth.method) {\r\n                        case 'sustain': {\r\n                            searchSustMeth(meth, con, preset.seq, (voic: ThemaUtil.LevelVoic) => {\r\n                                backingList.push({\r\n                                    pattern: null,\r\n                                    voicingList: voic.source\r\n                                });\r\n                            });\r\n                        } break;\r\n                        case 'pattern': {\r\n                            searchPattMeth(meth, con, preset.seq, () => { }, () => { },\r\n                                (patt: ThemaUtil.LevelPatt, voic: ThemaUtil.LevelVoic) => {\r\n                                    backingList.push({\r\n                                        pattern: patt.source,\r\n                                        voicingList: voic.source\r\n                                    });\r\n                                });\r\n                        } break;\r\n                    }\r\n                    const backing = backingList.length === 0 ? null : backingList[0];\r\n                    const apply: Apply = {\r\n                        condition: con,\r\n                        backing\r\n                    };\r\n                    return apply;\r\n                });\r\n                list.push({\r\n                    method: meth.method,\r\n                    dispName: preset.name,\r\n                    applyList\r\n                });\r\n            });\r\n        });\r\n        return list;\r\n    }\r\n\r\n    export const matchCondition = (a: Condition, b: Condition) => {\r\n        return a.beatLen === b.beatLen && a.head === b.head && a.tail === b.tail &&\r\n            a.rootIndex === b.rootIndex && a.symbolKey === b.symbolKey;\r\n    }\r\n\r\n    export const getDefaultLibs = (): ThemaUtil.LevelBase[] => {\r\n        const list: ThemaUtil.LevelBase[] = [];\r\n        return list;\r\n    }\r\n}\r\n\r\nexport default LibraryUtil;","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./score/scoreData\"\r\nimport { ScoreState } from \"./score/scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./score/melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { Invalidate } from \"./invalidate\"\r\nimport DataHistory from \"./state/dataHistory\"\r\nimport BackingState from \"./score/backing/backingState\"\r\nimport LibraryUtil from \"../../utils/LibraryUtil\"\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState.Editor;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n    invalidate: Invalidate;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n        login: null\r\n    },\r\n    systemState: {\r\n        directScore: null,\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        editable: true,\r\n        dialog: null,\r\n        themaList: LibraryUtil.getDefaultLibs(),\r\n        activeThemaIndex: -1,\r\n        cache: null\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        fileHandle: null,\r\n        isMelody: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        elementCacheList: [],\r\n        chordCacheList: [],\r\n        sectionCacheList: [],\r\n        scaleCacheList: [],\r\n        tempoCacheList: [],\r\n        beatCacheList: [],\r\n        measureCacheList: [],\r\n        keySwitch: {\r\n            distMode: false,\r\n            sustainMode: false,\r\n            chordMode: false,\r\n            symbolMode: false,\r\n            control: false,\r\n            minHeadMode: false,\r\n            minTailMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneBacking: null,\r\n        copiedElementList: null,\r\n        backingDataHistory: new DataHistory(),\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        destIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 1,\r\n        beatWidth: 120,\r\n        tableMouse: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        timelineMouse: {\r\n            pos: -1,\r\n            isPut: false,\r\n            lock: -1,\r\n            width: 0,\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 9\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false,\r\n            control: false,\r\n        },\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneNotesList: [],\r\n\r\n        dataHistory: new DataHistory(),\r\n        notesCacheList: []\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        // sampler: getDefaultSampler(),\r\n        harmonyFont: null,\r\n        melodyFont: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: [],\r\n    invalidate: {\r\n        harmoniizeInvalidate: {},\r\n        harmonize: null,\r\n        melody: null\r\n    },\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    login: LoginProps | null;\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type LoginProps = {\r\n    seq: number;\r\n    id: string;\r\n    password: string;\r\n    email: string;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note: {\r\n        left: string;\r\n        right: string;\r\n        up: string;\r\n        down: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        distMode: string;\r\n        edit1: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        edit2: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = (): KeyConfig => {\r\n    return {\r\n        note: {\r\n            left: 'ArrowLeft',\r\n            right: 'ArrowRight',\r\n            up: 'ArrowUp',\r\n            down: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'm',\r\n            deleteCur: 'Delete',\r\n            distMode: 'Shift',\r\n            edit1: 'f',\r\n            edit2: 'c',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n        }\r\n    };\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const dialog = store.systemState.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.systemState.dialog = null;\r\n            dispatcher.system.setState(store.systemState);\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行のサンプルを検索するユーティリティ\r\n */\r\nnamespace ProgUnitSearcher {\r\n\r\n    export type ChordItemBean = {\r\n        root: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n        beatLen: number;\r\n    }\r\n\r\n    export type UnitBean = {\r\n        condition: UnitCondition;\r\n        chordList: ChordItemBean[];\r\n    }\r\n\r\n    /**\r\n     * ダイアトニックスケールの連番でコードを指定する\r\n     * @param scaleIndex スケールの連番\r\n     * @param beatLen 拍\r\n     */\r\n    const getDiatonicChord = (scaleIndex: number, beatLen: number): ChordItemBean => {\r\n        const chord = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        return { root: { index: chord.root.index, isFlat: false }, symbolKey: chord.symbolKey, beatLen };\r\n    }\r\n\r\n    export type UnitCondition = {\r\n        beat: BeatSignature;\r\n        step: number;\r\n        firstChord: ProgUtil.DegreeFilter;\r\n        secondChord: ProgUtil.DegreeFilter;\r\n    }\r\n\r\n    /**\r\n     * コード進行を検索する\r\n     * @param condition \r\n     * @returns フィルターしたリスト\r\n     */\r\n    export const search = (condition: UnitCondition) => {\r\n        return UNIT_LIST.filter((unit) => (\r\n            (unit.condition.beat === condition.beat) &&\r\n            (condition.step === 0 || unit.condition.step === condition.step) &&\r\n            (condition.firstChord === '' || unit.condition.firstChord === condition.firstChord) &&\r\n            (condition.secondChord === '' || unit.condition.secondChord === condition.secondChord)\r\n        ));\r\n    }\r\n\r\n    export const parseChord = (source: string): ChordItemBean[] => {\r\n        let baseBeat = -1;\r\n        const keyList = source.split(' ');\r\n        let hasError = false;\r\n        const chordList: ChordItemBean[] = [];\r\n        keyList.some((key, i) => {\r\n            const head = key.charAt(0);\r\n            if (head === '@') {\r\n                const newBeat = Number(key.charAt(1));\r\n                baseBeat = newBeat;\r\n            } else if (['1', '2', '3', '4', '5', '6', '7'].includes(head)) {\r\n                const diatonicNo = Number(head) - 1;\r\n\r\n                let chord: null | ProgUnitSearcher.ChordItemBean = null;\r\n                const diatonicProps = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[diatonicNo];\r\n                if (key.length === 1) {\r\n                    chord = {\r\n                        root: diatonicProps.root, symbolKey: diatonicProps.symbolKey, beatLen: baseBeat\r\n                    }\r\n                } else {\r\n                    const adjustKey = key.charAt(1);\r\n                    const adjust = adjustKey === '#' ? 1 : adjustKey === 'b' ? -1 : 0;\r\n                    const shortNameKey = key.substring(2);\r\n                    const symbol = getSymbolFromShortName(shortNameKey);\r\n                    if (symbol != undefined) {\r\n                        const root = { ...diatonicProps.root };\r\n                        root.index += adjust;\r\n                        root.isFlat = adjust === -1;\r\n                        chord = {\r\n                            root, symbolKey: symbol.key, beatLen: baseBeat\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (chord == null) {\r\n                    hasError = true;\r\n                    return true;\r\n                } else {\r\n                    chordList.push(chord);\r\n                }\r\n            } else {\r\n                hasError = true;\r\n                return true;\r\n            }\r\n\r\n        });\r\n        return chordList;\r\n    }\r\n\r\n    const getSymbolFromShortName = (shortName: string): undefined | TheoryUtil.SymbolParams => {\r\n        return TheoryUtil.SYMBOL_LIST.find(symbol => {\r\n            if ('*' + symbol.name === shortName) return symbol;\r\n        });\r\n    }\r\n\r\n    const UNIT_LIST: UnitBean[] = [\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 3 4 1 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 3 4 3 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 3 4 1 2 5 1')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 5 4 1 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@4 1 5 6 4 1 5 6 4')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 7b* 6n*7 2 1#*dim 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@4 1 4 5 6 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('@4 1 6 2 5 1 6 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('@4 1 6 4 5 1 6 4 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 4 5 3 6 4 5 3 6')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 4n*maj7 5 3n*m7 6 4n*maj7 5 3n*m7 6')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 4n*maj7 5 3n*m7 6 2n*m7 3n*7 6 6n*7')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 2n*m7 5 3n*m7 6 2n*m7 3n*7 6n*sus4 6')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@2 6 4 5 1 6 4 5 1')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@4 6 4 5 1 6 4 5 1')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@2 6 4 1 5 6 4 1 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@4 6 4 1 5 6 4 1 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 6 5 4 3n*m7 2n*m7 6 2#*dim 3n*7')\r\n        },\r\n    ];\r\n}\r\n\r\nexport default ProgUnitSearcher;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\n\r\nnamespace ProgStyle {\r\n\r\n\r\n    /** 実行ボタン */\r\n    export const _TitleLabel = styled.div<{\r\n    }>`\r\n        ${Styles.CSS_LABEL_MIDIUM};\r\n        background-color: #f0f0f049;\r\n        width: 120px;\r\n        text-align: center;\r\n        border-radius: 10px;\r\n        color: #2c2c2c;\r\n        border: solid 1px #ffffff79;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n\r\n    /** コンボボックス */\r\n    export const _Combobox = styled.select<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: black;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n\r\n    /** ラベル */\r\n    export const _Label = styled.div<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: #002bc5;\r\n        font-weight: 600;\r\n        background-color: #e1f9fa;\r\n        padding-left: 4px;\r\n        border-radius: 4px;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n}\r\n\r\nexport default ProgStyle;","import { ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport { ScoreState } from \"../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * コード進行生成のバッキング関連のユーティリティ\r\n */\r\n namespace progBackingUtil {\r\n\r\n    export type Props = {\r\n        name: string;\r\n        patternConditions: PatternCondition[];\r\n    }\r\n    export type VoicingCondition = {\r\n        attr: TheoryUtil.SymbolAttribute;\r\n        source: string;\r\n    }\r\n    export type PatternCondition = {\r\n        beatLen: number;\r\n        source: string;\r\n        voicingConditions: VoicingCondition[];\r\n    }\r\n\r\n    export const BACKING_SAMPLE_LIST: Props[] = [\r\n        {\r\n            name: 'none',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'barrade-01',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTwRKCIBD9Gu4FOnbVvDTTrS9ghIyGsJHNyb4+BCkxb416YWD3LW/fY0FJhjAuLlQpLk/ixc0JkTRGeG92d86o1C6E4gxZMBPNQTH+dOGNQ9ICRKV6JMZum+Qozl1e0pbXEzeNQzWFvoXIFQqdV+AiZ9MLd1FTSTx/YilG1btf3PR1f1d7haoCro9Cw0hR6FMbnDRQeHgLLFqLUlH58dHaaKEgbkKVQXXDZcquAxsGWnpWvArrNmDdzsXqnTe57xh1k9uNDunSg9ZmnLVo7mnBq7zbUqyhVrKK1qVYQ63R4j/D/wq7vgHgSWwr/AUAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqAW7wdQFAL14+prfAAAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYl1oTHG4wdQEAGcWLSt8AAAA='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA9WVwVLDIBCGn4a7XcB4bc3Fmd58AqbBioPECdtO69NLINGAdexBYLwwsOzPB7sskGZDAHbPwhipH9W7dCNC17cE7l3vTXZC22AifEO8c6eOD6aTp2C+CZ5ih6o3kydA6DYt4W2Y1+IshwsrpaZB4LQFFoTKtj0Gy5PbiwxWp6Qzv/GIRH333e/ychnU7Hc1Doc/QM/BNT1Ku1UWk2DGKTpHI4sCD3P0vbdVeyP0Zwp9Br0rqldl9pH6KPW6e1lkYHGWUxSFwtRVRF0VotIqVIiokIs63zI391Wt3NnGDI8nH/swui22mLG0ryivbKX9X9RXvgy0zA1K7i2vQo1fQVrlPSpFZVWocYRZlQiXokIVKqtCjfPKq0Q4G/XH341OPxwkP5xvPwCCCyaGNwsAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGuES60JCW7AohbsBlMXAA68b5wLAQAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGtEglpjXGpNcLjB1AUAqgEeTAsBAAA='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'barrade-02',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTXQ+CIBT9NbwbxPRV86Wtt34BUzIaYQty2a+PQFLMuT7tgQ3OPZdzOZcLwgRAmG2JEJSv2YXqE0AxBnChdweaEy4tBHACDDln1VLk9GzhwDJJplgpGiaEdhumAKc2zklNjwM39aEjUU0JkU1kMi2VRTa6FmpRnYmcfmgkhrO7vOHr/pzt/BGlonLFpOr54btceyepiDo5Aw1bskIQfu+CaYKhKrZnovCyK8rjfNcxsfOWRnXmqc4mUkWeKpxIFXqq6Feqrt861n7927S1C3vljc7I/IUZeeunTeV+8EX30TMS848koseHwfEGYxcM0ysSYVFzcwUAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqAWba+oCACBiEqvfAAAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqDUGqTV1AQCUaWUN3wAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2V0W7CIBSGn4b7eUrFW11vTHbnExCLjgWpEWbUp5dC2cA1y1YSuPGiLRzOz8dJfwCRFQLYvlMpmdjwGzM9VC3nCF5N68haKpQLoXqFbHLLz2vZsosLv7hMutW8k0MmgGuSBtWNGxf0yk4jMz2GTlQPS1g4IVdNp11kZ9bCXNQoK88nFjGuDvPGp3uqi6i9L2SnmXrjSj/4IHbXNeopTfWnN47NVnwvqfhynzWfTdX8wOU+Up+ZWLYfgXmCWgbqLKLOMlFxEWoVUSETtS5CJUWoEFGrTNR5Hqrfx2bs+yjv/65/cPDtH+glwXJ/vQNw0h2Ak06z/6gnnWa5nFDGf3GtOImKf1LhL7WmUafWWidRycS9hod9Zd93wUPW69YJAAA=',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqMXpBlMc5pq6AADXs/OfCwEAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqCXFXGOQWlMXACkdNMwLAQAA'\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: '8beat-01',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTSw7CIBQ8DXulJbht7cbEnScgLVYMUlOwsZ5e5BUtTeNGU1bAMMM83gfRHGFcnphSXB7Eg9sTSrIU4a3dXXnFpAYIkRw5ciW6nar4HeAVMFlpRKMGJsawpQUiBdxL1vN25qUp1DIzhLABodBFYwA52lg4oFaZeH/qLObVY978c5HVPj+qMVzvhTaTfIRZ7oOTNszcfAIdW4taMfmugiuCoxpxEaoO1B2XWXUeJXH0l8F1HcUVR3FNlnH19bZ3n9YnFnv5w0qC8L7OSPrTjKT/79OwY9YL1S6cDhxlOpZyDf+aROhT4gm0eAKCqPtePgYAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGsEUmvqAgBJsewgswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2V0Q6CIBSGn4b7Omp2W3nT1l1PwJSKRtiEXPb0IWhJc67N5bnpRuBwDh+w3x8SrwlAeqJSMrHnD2ZGJFiFBDamd2UZFcqFSLQmNjnj5VZm7O7CM5dJU81z2WQCuG6ckChx84JWrOhZ6TNUUN1sYekKuUpy7SIHsxfmoqYyaPmxRfRXd/P6l/tXo1S3upC5ZmrHlf7Qga+uyhspTfWtFY7NVvwoqXipz4rPpmp+4fLoVZdMrLJzRzydszTUOQoVUKgBCjVEoUYo1AUKNZ6G2v7HZu5t5fU917rqbyNvu4NvQDjqDQhHudl01V96oe9KcxR/mIrq+z6g+P5UVECh+jccoJz1Z9RBV4KOC9nvE4/6Z+UECwAA',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmuCww2mLgAeyOCMswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: '8beat-02',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTQQ6CMBB8Te9SJHgFuZh48wUNVKypxdCFiK+3dqlSwsXE0Attp7M7y26HpDmhtLwwpbg8iSc3JxJnW0L3ZnfnFZMaIZLkxJIr0R9UxR8Ib5DJShCNGpmU4jYtSFLgvWQDbxcyzaGWwVjCDgOFLhpA5Gxq4YiayNjpp1ZiOXrKW04XONr1RzXA9VFomPXD7/LgnTQw6FwDLVuLWjH5mYIdgqWCuAlVe9E9l1l1nTRx8i+jahRElQZRjddRdfM2d9+nnxjsrY9r4pX3o0eg7f5oEZttrTfuv7Zopbn7zqJBnLWWKg2i6nc4DuIs5yr7fQFCZXGQ9AYAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGsEUmvqAgBJsewgswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2VwU4DIRCGn4a7nQXx2roXE28+AelixSBrFtrYPn0ps+jSEBMTw8TEE+wwPx/L/jvD5IYBbF+Uc9o+mZOOT6xbcwb3cfauB2U9hpjYsJQ8mMODG/QHhm8wU22DGd2cCYBT2TPR47pVRz1VdroOTSrMR7hDofH9GDDyHM+iMRqVXebLhKirl3n17f7VJOrsCzcG7R+ND1c+KN11LJ58UGGfjZOyvdk5ZT/dl8yXUoN5M25XqA/arofXhXkW7zJTVyRUIKF2JFROQhUk1FsSqmxDzf9xXPsq5Zd7vviqPoriuD/sAWHa/2ILSLtVxfyP1NEmVbishyuSytSKKkioZZ8Dkj7XigokVE5CLb9rR3LDrai8DfXbjgPziHORBbI/A9v3xeToDAAA',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmuCww2mLgAeyOCMswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'arpeggio-01',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'arpeggio-02',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'rock-01',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: '16beat-01',\r\n            patternConditions: []\r\n        },\r\n    ];\r\n }\r\n\r\n export default progBackingUtil;","import { BackingPatternProps, BeatSignature, ChordElement, DetailChord, DetailFixed, DetailInit, DetailSection, FixedItem, ScoreData, VoicingProps } from \"../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport progBackingUtil from \"./progBackingUtil\";\r\n\r\n/**\r\n * コード進行生成のユーティリティ\r\n */\r\nnamespace ProgUtil {\r\n\r\n    /** 生成方法 */\r\n    export type BuildType = 'blank' | 'custom' | 'template';\r\n\r\n    export const STEP_LIST = [0, 2, 3, 4] as const;\r\n    export type Step = typeof STEP_LIST[number];\r\n\r\n    /**\r\n     * ブロックに設定するプロパティ\r\n     */\r\n    export type UnitProps = {\r\n        type: BlockType;\r\n        detail: SectionProps | FixedItem;\r\n    }\r\n\r\n    export type BlockType = 'fixed' | 'section';\r\n\r\n    export type SectionProps = {\r\n        sectionName: string;\r\n        sectionNo: string;\r\n        chordList: DetailChord[];\r\n        backingNo: number;\r\n    }\r\n\r\n    export const DEGREE_FILTER_LIST = [\r\n        '', 'Ⅰ', 'Ⅴ', 'Ⅳ', 'Ⅵm', 'Ⅱm', 'Ⅲm'\r\n    ] as const;\r\n    export type DegreeFilter = typeof DEGREE_FILTER_LIST[number];\r\n\r\n    /**\r\n     * 初期状態のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getInitialBlockList = (): UnitProps[] => {\r\n        return [\r\n            { type: 'fixed', detail: 'Start' },\r\n            { type: 'fixed', detail: 'End' },\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Blank選択時のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getBlankBlockList = (): UnitProps[] => {\r\n        return [\r\n            { type: 'fixed', detail: 'Start' },\r\n            {\r\n                type: 'section',\r\n                detail: {\r\n                    sectionName: 'Section',\r\n                    sectionNo: '',\r\n                    chordList: [\r\n                        getDefaultChord()\r\n                    ],\r\n                    backingNo: 0\r\n                }\r\n            },\r\n            { type: 'fixed', detail: 'End' },\r\n        ];\r\n    }\r\n\r\n    export const getDefaultChord = (): DetailChord => {\r\n        return {\r\n            beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n            backing: {\r\n                voicingList: [],\r\n                pattern: null,\r\n                // hasError: false\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拍子より選択可能なステップリストを絞り込む\r\n     * @param beat ステップの拍\r\n     * @returns 絞り込んだリスト\r\n     */\r\n    export const getFilteredStepList = (beat: BeatSignature) => {\r\n        return STEP_LIST.filter((item) => {\r\n            // 0は空白表示なので必ず加える\r\n            if (item === 0) return true;\r\n\r\n            switch (beat) {\r\n                case '4/4':\r\n                case '6/8': {\r\n                    if (item === 3) return false;\r\n                }\r\n                    break;\r\n                case '3/4':\r\n                case '9/8': {\r\n                    if (item !== 3) return false;\r\n                }\r\n                    break;\r\n                case '2/4':\r\n                case '6/8': {\r\n                    if (item !== 2) return false;\r\n                }\r\n                    break;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * ブロックリストより譜面データを生成する\r\n     * @param outputUnits ユニットリスト\r\n     * @returns 譜面データ\r\n     */\r\n    export const buildScoreData = (outputUnits: UnitProps[]): ScoreData => {\r\n        const elementList: ChordElement[] = [];\r\n        // イニシャル要素を設定\r\n        const initElement: DetailInit = {\r\n            keyIndex: 0,\r\n            bpm: 100,\r\n            scale: \"major\",\r\n            beatSignature: \"4/4\"\r\n        }\r\n        elementList.push({ type: 'init', detail: initElement });\r\n        outputUnits.forEach((block) => {\r\n            if (block.type === 'fixed') {\r\n                const fixed = block.detail as FixedItem;\r\n                // 固定ブロックの処理\r\n                elementList.push({ type: 'fixed', detail: { fixed } });\r\n            } else {\r\n                const blockDetail = block.detail as SectionProps;\r\n                const getSectionFullName = () => {\r\n                    return blockDetail.sectionName;\r\n                }\r\n                // セクションブロックの処理\r\n                elementList.push({ type: 'section', detail: {labelName: getSectionFullName()} });\r\n\r\n                // サンプルバッキングの適用\r\n                const sample = progBackingUtil.BACKING_SAMPLE_LIST[blockDetail.backingNo];\r\n                blockDetail.chordList.forEach((chord) => {\r\n                    const detail = chord;\r\n\r\n                    let voicingList: VoicingProps[] = [];\r\n                    let pattern: BackingPatternProps | null = null;\r\n                    sample.patternConditions.some(conPa => {\r\n                        if(conPa.beatLen === detail.beatLen) {\r\n                            // console.log(DataUtil.unZip(conPa.source));\r\n                            pattern = JSON.parse(DataUtil.unZip(conPa.source));\r\n\r\n                            conPa.voicingConditions.some(conVo => {\r\n                                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                                if(conVo.attr === symbol.attr) {\r\n                                    voicingList = JSON.parse(DataUtil.unZip(conVo.source));\r\n                                    return true;\r\n                                }\r\n                            });\r\n                            return true;\r\n                        }\r\n                    });\r\n                    detail.backing.voicingList = voicingList;\r\n                    detail.backing.pattern = pattern;\r\n\r\n                    elementList.push({ type: 'chord', detail });\r\n                });\r\n            }\r\n        });\r\n        return { chordList: elementList, notesList: [] };\r\n    }\r\n}\r\n\r\nexport default ProgUtil;","import { useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../utils/dummyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgUnitSearcher from \"./progUnitSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行を編集する画面\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ProgCustomFrame = (props: {\r\n    /** 拍子フィルターの値 */\r\n    beat: '' | BeatSignature;\r\n    /** ユニット数 */\r\n    unitNum: number;\r\n    /** 出力リストを初期化するコールバック関数 */\r\n    reset: () => void;\r\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\r\n    insertProgUnit: (sectionName: string, sectionNo: string, chordList: ProgUnitSearcher.ChordItemBean[]) => void;\r\n}) => {\r\n\r\n    const [step, setStep] = useState<ProgUtil.Step>(0);\r\n    const [degreeFilters, setDegreeFilters] = useState<(ProgUtil.DegreeFilter)[]>(['', '']);\r\n\r\n    /** ブロックの最後のコード */\r\n    const [lastChord, setLastChord] = useState<ProgUnitSearcher.ChordItemBean | null>(null);\r\n\r\n    // const [progUnitList, setProgUnitList] = useState<ProgSearcher.UnitBean[]>([]);\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n\r\n    const stepList = useMemo(() => {\r\n        return props.beat === '' ? [0] : ProgUtil.getFilteredStepList(props.beat);\r\n    }, [props.beat]);\r\n\r\n    /** 拍ステップ絞り込みのコンボボックス */\r\n    const stepOptionJsxList = useMemo(() => {\r\n        // console.log(stepList.length);\r\n        return stepList.map((val, i) => {\r\n            // 0の場合は表示しない制御\r\n            const disp = val === 0 ? '' : val;\r\n            return (\r\n                <option key={i} value={val}>{disp}</option>\r\n            );\r\n        });\r\n    }, [stepList]);\r\n\r\n    /** ディグリーネーム絞り込みのコンボボックス */\r\n    const degreeOptionJsxListArray: JSX.Element[][] = useMemo(() => {\r\n        return [ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 先頭のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        }), ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 2番目のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        })];\r\n    }, [degreeFilters]);\r\n\r\n    /** リストに表示する進行ユニットのJSX */\r\n    const [progUnitList, progJsxList] = useMemo(() => {\r\n        if (props.beat === '') return [[], []];\r\n        const beat = props.beat as BeatSignature;\r\n        // フィルタリングしたユニットリスト\r\n        const unitList = ProgUnitSearcher.search({\r\n            beat: props.beat,\r\n            step, firstChord: degreeFilters[0], secondChord: degreeFilters[1]\r\n        });\r\n        const jsx = unitList.map((unit, i) => {\r\n            const isActive = focusIndex === i;\r\n\r\n            /** 表示する進行ユニット */\r\n            const dispUnitJsx: JSX.Element[] = [];\r\n            /** 表示する進行ユニット */\r\n            let tootTipStr: string = '';\r\n            let totalBeat = 0;\r\n            const beatCycle = TheoryUtil.getBeatProps(beat).barBeatCnt;\r\n            unit.chordList.forEach((chord, j) => {\r\n                const degreeRoot = TheoryUtil.getDegreeRoot(chord.root);\r\n                const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\r\n                const symbolName = symbol.name;\r\n                const chordName = degreeRoot + symbolName;\r\n                if (j !== 0) {\r\n                    const divStr = totalBeat % beatCycle === 0 ? ' | ' : '・';\r\n                    dispUnitJsx.push(<_Span key={dispUnitJsx.length}>{divStr}</_Span>);\r\n                    tootTipStr += divStr;\r\n                }\r\n                let isMatch = false;\r\n                if (j === 0) {\r\n                    isMatch = degreeFilters[0] !== '';\r\n                } else if (j === 1) {\r\n                    isMatch = degreeFilters[1] !== '';\r\n                }\r\n                dispUnitJsx.push(<_ChordName key={dispUnitJsx.length} isMatch={isMatch}>{chordName}</_ChordName>);\r\n                tootTipStr += chordName;\r\n                totalBeat += chord.beatLen;\r\n                // console.log(totalBeat);\r\n            });\r\n            return (\r\n                <_ProgItem key={i} isActive={isActive} title={tootTipStr} onClick={() => {\r\n                    setFocusIndex(i);\r\n                }}>{dispUnitJsx}</_ProgItem>\r\n            )\r\n        });\r\n        return [unitList, jsx];\r\n    }, [props.beat, step, degreeFilters, focusIndex]);\r\n\r\n    /**\r\n     * 拍ステップ変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const stepChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setStep(Number(e.target.value) as ProgUtil.Step);\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n    /**\r\n     * ディグリーフィルター変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const degreeChangeAction = (e: React.ChangeEvent<HTMLSelectElement>, index: number) => {\r\n        const value = e.target.value as ProgUtil.DegreeFilter;\r\n        degreeFilters[index] = value;\r\n        if (index === 0 && value === '') {\r\n            degreeFilters[1] = '';\r\n        }\r\n        setDegreeFilters(degreeFilters.slice());\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n\r\n    /**\r\n     * リセットボタン押下時の処理\r\n     */\r\n    const resetAction = () => {\r\n        setStep(0);\r\n        setDegreeFilters(['', '']);\r\n        props.reset();\r\n    };\r\n\r\n    /**\r\n     * 追加ボタン押下時の処理\r\n     */\r\n    const insertAction = () => {\r\n        const progUnit = progUnitList[focusIndex];\r\n        props.insertProgUnit('Section', '', progUnit.chordList);\r\n        setFocusIndex(-1);\r\n        setStep(0);\r\n        setDegreeFilters(['', '']);\r\n\r\n        const chord = progUnit.chordList[progUnit.chordList.length - 1];\r\n        setLastChord(chord);\r\n    };\r\n\r\n    /**\r\n     * ユニットの最後のコードネームを取得\r\n     */\r\n    const getLastChordName = () => {\r\n        let name = '-';\r\n        if (lastChord != null) {\r\n            const rootName = TheoryUtil.getDegreeRoot(lastChord.root);\r\n            const symbol = TheoryUtil.getSymbolFromKey(lastChord.symbolKey) as TheoryUtil.SymbolParams;\r\n            name = rootName + symbol.name;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    return (\r\n        <_Frame isEnable={props.beat !== ''}>\r\n            {/* 拍ステップコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Step</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={80} value={step} onChange={(e) => {\r\n                    stepChangeAction(e);\r\n                }}>{stepOptionJsxList}</ProgStyle._Combobox>\r\n                <ProgStyle._TitleLabel>Last</ProgStyle._TitleLabel>\r\n                <ProgStyle._Label isEnable={true} width={80} >{getLastChordName()}</ProgStyle._Label>\r\n            </_Record>\r\n            {/* ディグリーネームフィルターコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Chord</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={80} value={degreeFilters[0]} onChange={(e) => {\r\n                    degreeChangeAction(e, 0);\r\n                }}>{degreeOptionJsxListArray[0]}</ProgStyle._Combobox>\r\n                <ProgStyle._Combobox isEnable={degreeFilters[0] !== ''} width={80} value={degreeFilters[1]} onChange={(e) => {\r\n                    degreeChangeAction(e, 1);\r\n                }}>{degreeOptionJsxListArray[1]}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* 進行ユニットリスト */}\r\n            <_ListDiv><div>{progJsxList}</div></_ListDiv>\r\n            {/* 実行ボタン */}\r\n            <_ButtonDiv>\r\n                <_ExecutableButton isEnable={props.unitNum > 0} onClick={resetAction}>Reset</_ExecutableButton>\r\n                <_ExecutableButton isEnable={focusIndex !== -1} onClick={insertAction}>Add</_ExecutableButton>\r\n            </_ButtonDiv>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgCustomFrame;\r\n\r\nconst BUTTON_DIV_HEIGHT = 40;\r\nconst RECORD_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 条件レコード\r\n */\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${RECORD_HEIGHT}px;\r\n    /* background-color: #d5eae4; */\r\n    /* margin: 2px 0 0 0; */\r\n    text-align: left;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 進行リスト\r\n */\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${RECORD_HEIGHT * 2 + BUTTON_DIV_HEIGHT}px);\r\n    /* background-color: #babaa8; */\r\n    text-align: left;\r\n    & >div{\r\n        display: inline-block;\r\n        width: calc(100% - 8px);\r\n        height: calc(100% - 8px);\r\n        margin: 4px 0 0 4px;\r\n        background-color: #dde0e7;\r\n        box-sizing: border-box;\r\n        border: 1px solid #797979;\r\n        overflow-y: auto;\r\n        \r\n        &::-webkit-scrollbar {\r\n            width: 10px;\r\n            height: 10px;\r\n        }\r\n        &::-webkit-scrollbar-thumb {\r\n            border-radius: 5px;\r\n            background: #1959A8;\r\n        }\r\n        &::-webkit-scrollbar-track {\r\n            border-radius: 5px;\r\n            box-shadow: 0 0 4px #aaa inset;\r\n        }\r\n    }\r\n`;\r\n\r\nconst _ProgItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #00000010;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f6ff0062;\r\n    `}\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordName = styled.span<{\r\n    isMatch: boolean;\r\n}>`\r\n    color: #000f59;\r\n    ${props => !props.isMatch ? '' : css`\r\n        color: #a0000d;\r\n        /* background-color: #5eff0061; */\r\n    `}\r\n`;\r\nconst _Span = styled.span<{\r\n}>`\r\n    color: #0000005d;\r\n`;\r\n\r\n/**\r\n * ボタンエリア（画面汎用）\r\n */\r\nconst _ButtonDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BUTTON_DIV_HEIGHT}px;\r\n    /* background-color: #94babd; */\r\n    text-align: center;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #737d94;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #505971;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #8da0b0;\r\n    }\r\n`;","namespace DummyUtil {\r\n\r\n    export const SECTION_CATEGORY = ['Section', 'Intro', 'A', 'B', 'C', 'D', 'Outro'];\r\n    export const SECTION_NO = ['', '1', '2', '3', '4', '5', '6'];\r\n}\r\n\r\nexport default DummyUtil;","import { useContext, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { DetailChord, DetailFixed, DetailSection, FixedItem } from \"../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../utils/dummyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport progBackingUtil from \"./progBackingUtil\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行の出力画面のコンポーネント\r\n * @param props ブロックリスト\r\n * @returns コンポーネント\r\n */\r\nconst ProgOutputFrame = (props: {\r\n    outputUnits: ProgUtil.UnitProps[];\r\n    updateOutputUnits: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [\r\n        /** セクションカテゴリのoptionリスト */\r\n        secCatOptionJsxList,\r\n        /** セクション連番のoptionリスト */\r\n        secNoOptionJsxList,\r\n    ] = useMemo(() => {\r\n        const catList = DummyUtil.SECTION_CATEGORY.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        const noList = DummyUtil.SECTION_NO.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        return [catList, noList];\r\n    }, []);\r\n\r\n    const backingSampleJsxList = progBackingUtil.BACKING_SAMPLE_LIST.map((sample, i) => {\r\n        return (\r\n            <option key={i} value={i}>{sample.name}</option>\r\n        );\r\n    });\r\n\r\n    const blockJsxList = props.outputUnits.map((block, i) => {\r\n        const isFixed = block.type === 'fixed';\r\n        const getInner = () => {\r\n            if (isFixed) {\r\n                return <_FixedItem>{(block.detail as FixedItem)}</_FixedItem>;\r\n            } else {\r\n                const detail = block.detail as ProgUtil.SectionProps;\r\n                const chordList = detail.chordList;\r\n                const getChordListJsx = () => {\r\n                    return chordList.map((chord, j) => {\r\n                        const getBeatTipsJsx = () => {\r\n                            const jsxList: JSX.Element[] = [];\r\n                            for (let k = 0; k < chord.beatLen; k++) {\r\n                                jsxList.push(<_BeatTip key={k} />);\r\n                            }\r\n                            return jsxList;\r\n                        }\r\n                        let chordName = 'none';\r\n                        if (chord.root !== null) {\r\n                            const degreeRoot = TheoryUtil.getDegreeRoot({\r\n                                index: chord.root.index,\r\n                                isFlat: chord.root.isFlat\r\n                            });\r\n                            const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey)?.name;\r\n                            chordName = degreeRoot + symbolName;\r\n                        }\r\n                        return (\r\n                            <_ChordItem key={j}>\r\n                                <_ChordNameLabel>{chordName}</_ChordNameLabel>\r\n                                <_ChordBeatDiv>{getBeatTipsJsx()}</_ChordBeatDiv>\r\n                            </_ChordItem>\r\n                        );\r\n                    });\r\n                }\r\n                return (<>\r\n                    <_Record>\r\n                        <_BackingLabel>Section</_BackingLabel>\r\n                        <_Combobox isEnable={true} width={180} value={detail.sectionName} onChange={(e) => {\r\n                            detail.sectionName = e.target.value;\r\n                            props.updateOutputUnits();\r\n                        }}>{secCatOptionJsxList}</_Combobox>\r\n                        <_Combobox isEnable={true} width={60} value={detail.sectionNo} onChange={(e) => {\r\n                            detail.sectionNo = e.target.value;\r\n                            props.updateOutputUnits();\r\n                        }}>{secNoOptionJsxList}</_Combobox>\r\n                    </_Record>\r\n                    <_Record>\r\n                        {/* <_SectionItem>{labelName}</_SectionItem> */}\r\n                        <_BackingLabel>Backing</_BackingLabel>\r\n                        <_Combobox\r\n                            isEnable={true} width={180}\r\n                            value={detail.backingNo}\r\n                            onChange={(e) => {\r\n                                detail.backingNo = Number(e.target.value);\r\n                                props.updateOutputUnits();\r\n                            }}>{backingSampleJsxList}</_Combobox>\r\n                    </_Record>\r\n                    <_ChordListDiv>{getChordListJsx()}</_ChordListDiv>\r\n                </>);\r\n            }\r\n        };\r\n        return (\r\n            <_Block key={i} isFixed={isFixed}>{getInner()}</_Block>\r\n        );\r\n    });\r\n    return (\r\n        <_Frame>\r\n            {blockJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgOutputFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Block = styled.div<{\r\n    isFixed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    background-color: #e8e4c5;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #7e7e7ee8; */\r\n    text-align: left;\r\n    ${props => !props.isFixed ? '' : css`\r\n        text-align: left;\r\n    `}\r\n`;\r\n\r\nconst _FixedItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 200px;\r\n    background-color: #b14272;\r\n    border-radius: 2px 15px 15px 2px;\r\n    color: white;\r\n    margin: 5px 0 5px 5px;\r\n`;\r\n\r\nconst _SectionItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 120px;\r\n    background-color: #4297b1;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 5px;\r\n`;\r\n\r\nconst RECORD_HEIGHT = 22;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${RECORD_HEIGHT}px;\r\n    /* background-color: #5b6e69; */\r\n    margin: 2px 0 0 0;\r\n    text-align: left;\r\n    /* padding: 5px 0 0 0; */\r\n`;\r\nconst _BackingLabel = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 90px;\r\n    background-color: #95b6d1;\r\n    color: white;\r\n    border-radius: 8px;\r\n    margin: 0 0 0 5px;\r\n`;\r\n\r\nexport const _Combobox = styled.select<{\r\n    isEnable: boolean;\r\n    width: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    font-weight: inherit;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    width: ${props => props.width}px;\r\n    margin: 0 0 0 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ChordListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    /* height: 100px; */\r\n    padding: 0 5px 5px 0;\r\n    background-color: #c2d6dd1e;\r\n    border: solid 2px #ab4343;\r\n    border-radius: 8px;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 5px 5px;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 45px;\r\n    background-color: #676767;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 5px;\r\n`;\r\n\r\nconst _ChordNameLabel = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    padding: 0 20px;\r\n    /* background-color: #b38282; */\r\n    color: white;\r\n`;\r\n\r\nconst _ChordBeatDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    height: 25px;\r\n    min-width: 100%;\r\n    /* background-color: #c5adad; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _BeatTip = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    height: calc(100% - 12px);\r\n    margin: 6px 2px 0 2px;\r\n    background-color: #ddd796;\r\n    border-radius: 2px;\r\n`;\r\n","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport ProgUnitSearcher from \"./progUnitSearcher\";\r\n\r\n/**\r\n * コード進行のテンプレートを検索するユーティリティ\r\n */\r\nnamespace ProgTemplateUtil {\r\n\r\n\r\n    export type TemplateBean = {\r\n        name: string;\r\n        condition: TemplateCondition;\r\n        unitList: UnitItemBean[];\r\n    }\r\n\r\n    export type UnitItemBean = {\r\n        sectionName: string;\r\n        chordList: ProgUnitSearcher.ChordItemBean[];\r\n    }\r\n\r\n    export type TemplateCondition = {\r\n        beat: BeatSignature;\r\n    }\r\n\r\n    /**\r\n     * テンプレートを検索する\r\n     * @param condition \r\n     * @returns フィルターしたリスト\r\n     */\r\n    export const search = (condition: TemplateCondition) => {\r\n        console.log(JSON.stringify(condition));\r\n        return TEMPLATE_LIST.filter((template) => (\r\n            (template.condition.beat === condition.beat)\r\n        ));\r\n    }\r\n    \r\n    const TEMPLATE_LIST: TemplateBean[] = [\r\n        {\r\n            name: 'major minimum 01 [Ⅰ→Ⅳ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 1 4 5 @2 1 5 @4 6 4 5 1')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'major minimum 02 [Ⅰ→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 1 5 6 3 4 1 2 5 1 5 3n*7 6 2 3 4n*m 1')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'minor minimum 01 [Ⅵ→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 6 5 4 3n*m7 2n*m7 6 7n*7 3n*7 6')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'minor minimum 02 [Ⅱm→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 2n*m7 5 1 6 2n*m7 3n*7 6 6n*7 2n*m7 5 3n*m7 6 2n*m7 3n*7 6n*sus4 6')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'major short 01 [Ⅰ→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 1 5 6 3n*m7 4 1 2n*m7 5 1 5 6 3 4 1 2n*7 3n*7')\r\n                },\r\n                {\r\n                    sectionName: 'B',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 4 5 1n*sus4 1')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'major short 02 [Ⅳ→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 2n*m7 5 1 @2 5n*m 1n*7 @4 4n*maj7 5 @2 1 5 @4 6 2n*m7 5 6n*sus4 6n*')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'major short 03 [Ⅰ→Ⅵm～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 1 1 6 6 4 4 5 5 1 1 6 6 4 4 5 5')\r\n                },\r\n                {\r\n                    sectionName: 'B',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 4 5 1n*sus4 1')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'minor short 01 [Ⅵ→Ⅳ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 6 4 5 1 6 4 5 1 6 4 5 1 2 3n*m7 4n*maj7 3n*7')\r\n                },\r\n                {\r\n                    sectionName: 'B',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 4 5 3 6 2 3 6n*sus4 6')\r\n                }\r\n            ]\r\n        },\r\n    ];\r\n}\r\n\r\nexport default ProgTemplateUtil;","import { useContext, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgTemplateUtil from \"./progTemplateUtil\";\r\nimport ProgUnitSearcher from \"./progUnitSearcher\";\r\n\r\nconst ProgTemplateFrame = (props: {\r\n    /** 拍子フィルターの値 */\r\n    beat: '' | BeatSignature;\r\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\r\n    applyProgTemplate: (template: ProgTemplateUtil.TemplateBean) => void;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n\r\n    const templateList = ProgTemplateUtil.search({\r\n        beat: props.beat as BeatSignature\r\n    });\r\n\r\n    const templateJsxList = useMemo(() => {\r\n        return templateList.map((template, i) => {\r\n            return (\r\n                <_Item key={i}\r\n                    isFocus={i === focusIndex}\r\n                    onClick={() => {\r\n                        setFocusIndex(i);\r\n                        props.applyProgTemplate(templateList[i]);\r\n                    }}\r\n                >{template.name}</_Item>\r\n            );\r\n        });\r\n    }, [templateList, focusIndex]);\r\n\r\n    return (\r\n        <_Frame>\r\n            {templateJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgTemplateFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #00000010;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #f6ff0062;\r\n    `}\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n    color: #eb0000;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgCustomFrame from \"./progCustomFrame\";\r\nimport ProgOutputFrame from \"./progOutputFrame\";\r\nimport ProgUnitSearcher from \"./progUnitSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgTemplateFrame from \"./progTemplateFrame\";\r\nimport ProgUtil from \"./progUtil\";\r\nimport ProgTemplateUtil from \"./progTemplateUtil\";\r\n\r\n/**\r\n * コード進行を構成して譜面のベースを作成するダイアログ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ChordProgDialog = (props: {\r\n    setScoreData: (scoreData: ScoreData) => void;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** 生成モード（ブランク、カスタム、テンプレート） */\r\n    const [buildMode, setBuildType] = useState<ProgUtil.BuildType>('blank');\r\n    /** 出力する進行ユニットのリスト */\r\n    const [outputUnits, setOutputUnits] = useState(ProgUtil.getBlankBlockList());\r\n    /** 拍子フィルター */\r\n    const [beatFilter, setBeatFilter] = useState<'' | BeatSignature>('');\r\n\r\n    /**\r\n     * Closeボタン押下時の処理\r\n     */\r\n    const closeAction = () => {\r\n        store.systemState.dialog = null;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    /**\r\n     * Startボタン押下時の処理\r\n     */\r\n    const startAction = () => {\r\n        const scoreData = ProgUtil.buildScoreData(outputUnits);\r\n        props.setScoreData(scoreData);\r\n        closeAction();\r\n        // Editタブに遷移\r\n        store.systemState.scoreTabIndex = 1;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    const getSwitchContJsx = () => {\r\n        switch (buildMode) {\r\n            case 'blank': return <></>;\r\n            case 'custom': return <ProgCustomFrame\r\n                beat={beatFilter}\r\n                unitNum={outputUnits.length - 2}\r\n                reset={() => { setOutputUnits(ProgUtil.getInitialBlockList()) }}\r\n                insertProgUnit={insertProgUnit}\r\n            />;\r\n            case 'template': return <ProgTemplateFrame\r\n                beat={beatFilter}\r\n                applyProgTemplate={applyProgTemplate}\r\n            />;\r\n        }\r\n    };\r\n\r\n    /** 拍フィルターのオプションリストJSX */\r\n    const beatOptionJsxList = useMemo(() => {\r\n        if (buildMode === 'blank') {\r\n            return [(\r\n                <option key={0} value={''}></option>\r\n            )];\r\n        } else {\r\n            return [''].concat(TheoryUtil.BEAT_DEF_LIST).map((val, i) => {\r\n                return (\r\n                    <option key={i} value={val}>{val}</option>\r\n                );\r\n            });\r\n        }\r\n    }, [buildMode]);\r\n\r\n    const beatChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setBeatFilter(e.target.value as BeatSignature);\r\n    }\r\n\r\n    /** リストから選択中のコード進行ブロックを出力に追加する */\r\n    const insertProgUnit = (sectionName: string, sectionNo: string, chordList: ProgUnitSearcher.ChordItemBean[]) => {\r\n        const detail: ProgUtil.SectionProps = {\r\n            sectionName, sectionNo,\r\n            chordList: chordList.map((chord) => {\r\n                const chordDetail = ProgUtil.getDefaultChord();\r\n                chordDetail.beatLen = chord.beatLen;\r\n                chordDetail.symbolKey = chord.symbolKey;\r\n                chordDetail.root = chord.root;\r\n                return chordDetail;\r\n            }),\r\n            backingNo: 1\r\n        }\r\n        const block: ProgUtil.UnitProps = { type: 'section', detail }\r\n        outputUnits.splice(outputUnits.length - 1, 0, block);\r\n        setOutputUnits(outputUnits.slice());\r\n    }\r\n\r\n    const applyProgTemplate = (templateBean: ProgTemplateUtil.TemplateBean) => {\r\n        outputUnits.splice(0);\r\n        ProgUtil.getInitialBlockList().forEach(progUnit => {\r\n            outputUnits.push(progUnit);\r\n        });\r\n        templateBean.unitList.forEach((unit) => {\r\n            insertProgUnit(unit.sectionName, '', unit.chordList);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 切り替え式ボタンのJSXを返すクロージャ\r\n     * @param labelName ラベル名\r\n     * @param clickEvent 押下時の処理\r\n     * @param isActive 選択中かどうか\r\n     * @returns JSX\r\n     */\r\n    const createSwitchableButton = (\r\n        labelName: string,\r\n        isActive: boolean,\r\n        clickEvent: () => void\r\n    ) => {\r\n        return (\r\n            <_SwitchableButton isActive={isActive}\r\n                onClick={clickEvent}\r\n            >{labelName}</_SwitchableButton>\r\n        );\r\n    }\r\n\r\n    const beatComboboxEnable = outputUnits.length <= 2;\r\n\r\n    // Blankモードの時は空白を表示\r\n    const distBeatFilter = buildMode === 'blank' ? '' : beatFilter;\r\n    return (\r\n        <_Frame >\r\n            <_Header>\r\n                {createSwitchableButton('Blank', buildMode === 'blank', () => {\r\n                    setOutputUnits(ProgUtil.getBlankBlockList());\r\n                    setBuildType('blank');\r\n                })}\r\n                {createSwitchableButton('Custom', buildMode === 'custom', () => {\r\n                    setOutputUnits(ProgUtil.getInitialBlockList());\r\n                    setBuildType('custom');\r\n                })}\r\n                {createSwitchableButton('Template', buildMode === 'template', () => {\r\n                    setOutputUnits(ProgUtil.getInitialBlockList());\r\n                    setBuildType('template');\r\n                })}\r\n            </_Header>\r\n            <_MainDiv>\r\n                <_LeftDiv isEnable={buildMode !== 'blank'}>\r\n                    <_BeatFormDiv>\r\n                        <ProgStyle._TitleLabel>Beat</ProgStyle._TitleLabel>\r\n                        <ProgStyle._Combobox value={distBeatFilter} isEnable={beatComboboxEnable} width={150}\r\n                            onChange={(e) => {\r\n                                beatChangeAction(e);\r\n                            }}>{beatOptionJsxList}</ProgStyle._Combobox>\r\n                    </_BeatFormDiv>\r\n                    {/* モードによって切り替えるコンテンツ（カスタムorテンプレート） */}\r\n                    <_SwitchDiv>{getSwitchContJsx()}</_SwitchDiv>\r\n                </_LeftDiv>\r\n                <_RightDiv>\r\n                    <ProgOutputFrame\r\n                        outputUnits={outputUnits}\r\n                        updateOutputUnits={() => { setOutputUnits(outputUnits.slice()) }}\r\n                    />\r\n                </_RightDiv>\r\n            </_MainDiv>\r\n            <_Footer>\r\n                {/* ダイアログを閉じる */}\r\n                <_ExecutableButton isEnable={true} onClick={closeAction}>Cancel</_ExecutableButton>\r\n                {/* 譜面を生成 */}\r\n                <_ExecutableButton isEnable={outputUnits.length >= 3} onClick={startAction}>Start</_ExecutableButton>\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ChordProgDialog;\r\n\r\nconst HEADER_HEIGHT = 50;\r\nconst FOOTER_HEIGHT = 50;\r\nconst BEAT_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 1024px;\r\n    height: 768px;\r\n    z-index: 11;\r\n    /* top: 100px;\r\n    left: 100px; */\r\n    /* width: calc(100% - 200px);\r\n    height: calc(100% - 200px); */\r\n    background-color: #929292;\r\n    border: solid 2px #404250;\r\n    border-radius: 8px;\r\n    /* border: 1px solid #dadada; */\r\n`;\r\n\r\n/**\r\n * ヘッダー\r\n */\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #7d8d97;\r\n    text-align: center;\r\n`;\r\n\r\n/**\r\n * メインコンポーネント\r\n */\r\nconst _MainDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_HEIGHT + FOOTER_HEIGHT}px);\r\n    /* background-color: #7d8d97; */\r\n    text-align: left;\r\n`;\r\n\r\n/**\r\n * 左側のコンポーネント\r\n */\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n   display: inline-block;\r\n   vertical-align: top;\r\n   width: calc(50% - 6px);\r\n   height: calc(100% - 8px);\r\n   background-color: #bdced8;\r\n   text-align: left;\r\n   margin: 4px 2px 4px 4px;\r\n   ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 拍選択\r\n */\r\nconst _BeatFormDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BEAT_HEIGHT}px;\r\n    /* background-color: #b4c7ba; */\r\n    padding: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _BeatSelect = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    text-align: left;\r\n    color: black;\r\n    vertical-align: top;\r\n    line-height: 24px;\r\n    width: 210px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 5px;\r\n`;\r\n\r\n\r\n/**\r\n * テンプレートとカスタムの切り替えコンテンツ表示\r\n */\r\nconst _SwitchDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    background-color: #cedbd7;\r\n    border: 1px solid #696969;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - ${BEAT_HEIGHT + 10}px);\r\n`;\r\n\r\n/**\r\n * 右側のコンポーネント\r\n */\r\nconst _RightDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    width: calc(50% - 6px);\r\n    height: calc(100% - 8px);\r\n    background-color: #bdced8;\r\n    text-align: left;\r\n    margin: 4px 4px 4px 2px;\r\n`;\r\n\r\n/**\r\n * フッター\r\n */\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n    & *{\r\n        margin: 10px 5px 0 0;\r\n    }\r\n`;\r\n\r\n/**\r\n * スイッチボタン\r\n */\r\nconst _SwitchableButton = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #5083c5;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c5b950;\r\n    `};\r\n    width: 200px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #375176;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #77a7e6;\r\n    ${props => !props.isActive ? '' : css`\r\n            background-color: #c5b950;\r\n    `};\r\n}\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #2d5625;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../utils/score/cacheUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../utils/score/harmonizeUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ChordProgDialog from \"./chordProg/chordProgDialog\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\ntype ShareType = '' | 'url' | 'free' | 'dl';\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [file, setFile] = useState<null | File>(null);\r\n\r\n    const fileHandle = store.scoreState.fileHandle;\r\n    const scoreData = store.scoreData;\r\n    const tabIndex = store.systemState.scoreTabIndex;\r\n\r\n    const loginProps = store.userEnv.login;\r\n\r\n    const [cloudScoreList, setCloudScoreList] = useState<null | {\r\n        seq: number, name: string, hash: string, url: string, share: string\r\n    }[]>(null);\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n    const [cloudScoreName, setCloudScoreName] = useState('-');\r\n    const [cloudScoreShare, setCloudScoreShare] = useState<ShareType>('');\r\n\r\n    useEffect(() => {\r\n        loadCloudScore();\r\n    }, [loginProps]);\r\n\r\n    const loadCloudScore = () => {\r\n        if (loginProps != undefined) {\r\n            DataUtil.findUserScoreList(loginProps.seq).then((resList) => {\r\n                setCloudScoreList(resList.map((res) => {\r\n                    const seq = res['seq'];\r\n                    const hash = DataUtil.getHashedFromScoreSeq(seq);\r\n                    const url = DataUtil.getPreviewURL(seq);\r\n                    return { seq, name: res['dispnam'], hash, url, share: res['share'] };\r\n                }));\r\n                console.log('load');\r\n            });\r\n        }\r\n    }\r\n\r\n    const [fileInfo, scoreInfo]: [{\r\n        name: string;\r\n        size: string;\r\n        modified: string;\r\n    }, {\r\n        key: string;\r\n        tempo: string;\r\n        rate: string;\r\n        section: string;\r\n        chord: string;\r\n        bar: string;\r\n        time: string;\r\n        notes: string;\r\n    }] = useMemo(() => {\r\n        let name = '-';\r\n        let size = '-';\r\n        let modified = '-';\r\n        let key = '-';\r\n        let tempo = '-';\r\n        let rate = '-';\r\n        let section = '-';\r\n        let chord = '-';\r\n        let bar = '-';\r\n        let time = '-';\r\n        let notes = '-';\r\n        if (tabIndex === 0) {\r\n            if (file != null) {\r\n                name = file.name;\r\n                size = `${file.size.toString()} byte`;\r\n                modified = DataUtil.getStringFromDate(new Date(file.lastModified));\r\n            }\r\n            if (scoreData.chordList.length > 0) {\r\n                const init = scoreData.chordList[0].detail as DetailInit;\r\n                key = `${TheoryUtil.KEY12_MAJOR_SCALE_LIST[init.keyIndex]} ${init.scale}`;\r\n                tempo = init.bpm.toString();\r\n                rate = init.beatSignature;\r\n                let sectionNum = 0;\r\n                let chordNum = 0;\r\n                scoreData.chordList.forEach(chord => {\r\n                    switch (chord.type) {\r\n                        case 'section': sectionNum++; break;\r\n                        case 'chord': chordNum++; break;\r\n                    }\r\n                });\r\n                section = sectionNum.toString();\r\n                chord = chordNum.toString();\r\n\r\n                const cacheList = store.scoreState.elementCacheList;\r\n                if (cacheList.length > 0) {\r\n                    const last = cacheList[cacheList.length - 1];\r\n                    time = `${last.pastSecond / 1000}s`;\r\n                    bar = `${last.bar} (${last.surplusBeat})`;\r\n                }\r\n                notes = scoreData.notesList.length.toString();\r\n            }\r\n        }\r\n        return [{\r\n            name, size, modified\r\n        }, {\r\n            key, tempo, rate, section, chord, bar, time, notes\r\n        }]\r\n    }, [tabIndex, scoreData, file]);\r\n\r\n    useEffect(() => {\r\n        if (tabIndex === 0 && fileHandle != null) {\r\n            fileHandle.getFile().then(file => {\r\n                setFile(file);\r\n            });\r\n        }\r\n    }, [tabIndex]);\r\n\r\n    const setScoreData = ((data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    });\r\n\r\n    /**\r\n     * ラベルアイテムを生成する\r\n     * @param labelName ラベル名\r\n     * @param labelValue 値\r\n     * @returns JSX\r\n     */\r\n    const createLabelRecord = (labelName: string, labelValue: string) => {\r\n        return (\r\n            <_Recored>\r\n                <_ItemnLabel>{labelName}</_ItemnLabel>\r\n                <_ItemnValue>{labelValue}</_ItemnValue>\r\n            </_Recored>\r\n        );\r\n    }\r\n    /**\r\n     * テキストアイテムを生成する\r\n     * @param labelName ラベル名\r\n     * @param textValue 値\r\n     * @returns JSX\r\n     */\r\n    const createTextRecord = (labelName: string, textValue: string, changeAction: (e: React.ChangeEvent<HTMLInputElement>) => void) => {\r\n        return (\r\n            <_Recored>\r\n                <_ItemnLabel>{labelName}</_ItemnLabel>\r\n                <_ItemnInput\r\n                    type=\"text\" value={textValue}\r\n                    isEnable={focusIndex !== -1}\r\n                    onChange={changeAction}\r\n                />\r\n            </_Recored>\r\n        );\r\n    }\r\n\r\n    const searchLocalFileAction = () => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            // console.log(fileContents);\r\n            store.scoreState.fileHandle = fileHandle;\r\n            setFile(file);\r\n            const text = DataUtil.unZip(fileContents);\r\n            // const text = fileContents;\r\n            console.log(text);\r\n            setScoreData(JSON.parse(text));\r\n        })();\r\n    }\r\n\r\n    const fileDisconnectAction = () => {\r\n        store.scoreState.fileHandle = null;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // キャッシュの更新\r\n        store.scoreData = scoreData;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n        setFile(null);\r\n    };\r\n\r\n    const isDataConnect = fileHandle != null;\r\n\r\n\r\n    const cloudScoreListJsx = loginProps == undefined ? <></> : cloudScoreList == null ? (\r\n        <_Message>Now loading your cloud score...</_Message>\r\n    ) : cloudScoreList.map((score, i) => {\r\n\r\n        return <_CloudItem key={i} isActive={i === focusIndex} onClick={() => {\r\n            setFocusIndex(i);\r\n            const cur = cloudScoreList[i];\r\n            if (cur != null) {\r\n                setCloudScoreName(cur.name);\r\n            }\r\n        }}><_CName>{score.name}</_CName><_CHash> [{score.hash}]</_CHash></_CloudItem>\r\n    });\r\n\r\n\r\n    const uploadActioon = () => {\r\n        setCloudScoreList(null);\r\n        if (loginProps != undefined && cloudScoreList != null) {\r\n            const newScoreName = `new [${loginProps.id}] score`;\r\n            DataUtil.sendQueryRequestToAPI('update', `INSERT INTO scoretbl(user_seq, dispnam, data)\r\n                VALUES(${loginProps.seq}, '${newScoreName}', '${DataUtil.gZip(JSON.stringify(scoreData))}')\r\n            `).then(() => {\r\n                setFocusIndex(cloudScoreList.length);\r\n                setCloudScoreName(newScoreName);\r\n                loadCloudScore();\r\n            });\r\n        }\r\n    }\r\n\r\n    const overwriteActioon = () => {\r\n        setCloudScoreList(null);\r\n        if (curCloudScore != null) {\r\n            DataUtil.sendQueryRequestToAPI('update', `\r\n                UPDATE scoretbl SET\r\n                dispnam = '${cloudScoreName}',\r\n                share = '${cloudScoreShare}',\r\n                lastmod = datetime('now', 'localtime'),\r\n                data = '${DataUtil.gZip(JSON.stringify(scoreData))}'\r\n                WHERE seq = ${curCloudScore.seq}\r\n            `).then(() => {\r\n                loadCloudScore();\r\n            })\r\n        }\r\n    }\r\n    const deleteActioon = () => {\r\n        setCloudScoreList(null);\r\n        if (curCloudScore != null) {\r\n            DataUtil.sendQueryRequestToAPI('update', `DELETE FROM scoretbl WHERE seq = ${curCloudScore.seq}\r\n            `).then(() => {\r\n                setFocusIndex(-1);\r\n                loadCloudScore();\r\n            })\r\n        }\r\n    }\r\n\r\n    const downloadAction = () => {\r\n        if (curCloudScore != undefined) {\r\n            DataUtil.findScore(curCloudScore.seq).then((resList) => {\r\n                if (resList.length > 0) {\r\n                    const source = resList[0]['data'];\r\n                    const text = DataUtil.unZip(source);\r\n                    setScoreData(JSON.parse(text));\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const curCloudScore = cloudScoreList == null ? null : cloudScoreList[focusIndex];\r\n    const uploadEnable = scoreData.chordList.length > 0 && focusIndex === -1;\r\n    const isExistEditingData = scoreData.chordList.length > 0;\r\n\r\n    const isSelectedScore = focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            <_ButtonsDiv>\r\n                <_Button isEnable={!isDataConnect && !isExistEditingData} onClick={() => {\r\n                    store.systemState.dialog = <ChordProgDialog setScoreData={setScoreData} />;\r\n                    dispatcher.system.setState(store.systemState);\r\n                    // window.history.replaceState('','','/');\r\n                }}>new score</_Button>\r\n            </_ButtonsDiv>\r\n            <_MainDiv>\r\n                <_Left>\r\n                    <_CloudDiv isEnable={true}>\r\n\r\n                        <_ButtonsDiv>\r\n                            <_Button isEnable={loginProps != undefined && uploadEnable} onClick={uploadActioon}>upload</_Button>\r\n                            <_Button isEnable={loginProps != undefined && isSelectedScore} onClick={() => {\r\n                                setFocusIndex(-1);\r\n                            }}>release</_Button>\r\n                        </_ButtonsDiv>\r\n                        <_ListFrame isEnable={loginProps != undefined}>\r\n                            {cloudScoreListJsx}\r\n                        </_ListFrame>\r\n                        <_ButtonsDiv>\r\n                            <_Button isEnable={loginProps != undefined && isSelectedScore && isExistEditingData} onClick={overwriteActioon}>overwrite</_Button>\r\n                            <_Button isEnable={loginProps != undefined && isSelectedScore && !isExistEditingData} onClick={downloadAction}>download</_Button>\r\n                            <_Button isEnable={loginProps != undefined && isSelectedScore} onClick={deleteActioon}>delete</_Button>\r\n                        </_ButtonsDiv>\r\n                    </_CloudDiv>\r\n                </_Left>\r\n                <_Right>\r\n                    {/* <_Source value={source} onChange={e => setSource(e.target.value)} /> */}\r\n\r\n                    <_ButtonsDiv>\r\n                        <_Button isEnable={!isDataConnect && !isExistEditingData} onClick={searchLocalFileAction}>load file</_Button>\r\n                        <_Button isEnable={isDataConnect} onClick={fileDisconnectAction}>disconnect</_Button>\r\n                        <_Button isEnable={isExistEditingData} onClick={() => {\r\n                            dispatcher.score.clearCache();\r\n                            if (isDataConnect) {\r\n                                fileDisconnectAction();\r\n                            }\r\n                            dispatcher.score.setScoreData({ notesList: [], chordList: [] });\r\n                        }}>clear</_Button>\r\n                    </_ButtonsDiv>\r\n                    <_DataInfoDiv isEnable={isDataConnect}>\r\n                        <_TitleLabel>Local</_TitleLabel>\r\n                        {createLabelRecord('file', fileInfo.name)}\r\n                        {createLabelRecord('size', fileInfo.size)}\r\n                        {createLabelRecord('last', fileInfo.modified)}\r\n                        {/* {createLabelRecord('size', fileInfo.size)}\r\n                        {createLabelRecord('modified', fileInfo.modified)} */}\r\n                    </_DataInfoDiv>\r\n                    <_DataInfoDiv isEnable={focusIndex !== -1}>\r\n                        <_TitleLabel>Cloud</_TitleLabel>\r\n                        {createTextRecord('name', curCloudScore == null ? '-' : cloudScoreName, (e) => {\r\n                            setCloudScoreName(e.target.value);\r\n                        })}\r\n                        <_Recored>\r\n                            <_ItemnLabel>url</_ItemnLabel>\r\n                            <_ItemnURL onContextMenu={() => {\r\n                                navigator.clipboard.writeText(curCloudScore == null ? '-' : curCloudScore.url).then(() => {\r\n                                    alert('Copied clipboad!');\r\n                                });\r\n                            }}>{curCloudScore == null ? '-' : curCloudScore.url}</_ItemnURL>\r\n                        </_Recored>\r\n                        {/* {createLabelRecord('url', curCloudScore == null ? '-' : curCloudScore.url)} */}\r\n                        <_Recored>\r\n                            <_ItemnLabel>share</_ItemnLabel>\r\n                            <_ItemnCombobox\r\n                                isEnable={focusIndex !== -1}\r\n                                value={cloudScoreShare}\r\n                                onChange={(e) => {\r\n                                    setCloudScoreShare(e.target.value as ShareType);\r\n                                }}\r\n                            >\r\n                                <option value={'url'}>URL only</option>\r\n                                <option value={'free'}>Home publish</option>\r\n                                <option value={'dl'}>Download OK</option>\r\n                            </_ItemnCombobox>\r\n                        </_Recored>\r\n                    </_DataInfoDiv>\r\n                    <_ScoreInfoDiv isEnable={isExistEditingData}>\r\n                        <_TitleLabel>SCORE</_TitleLabel>\r\n                        {createLabelRecord('key', scoreInfo.key)}\r\n                        {createLabelRecord('tempo', scoreInfo.tempo)}\r\n                        {createLabelRecord('rate', scoreInfo.rate)}\r\n                        {createLabelRecord('section', scoreInfo.section)}\r\n                        {createLabelRecord('chord', scoreInfo.chord)}\r\n                        {createLabelRecord('bar', scoreInfo.bar)}\r\n                        {createLabelRecord('time', scoreInfo.time)}\r\n                        {createLabelRecord('notes', scoreInfo.notes)}\r\n                    </_ScoreInfoDiv>\r\n                </_Right>\r\n            </_MainDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #8a6b6b; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #969696; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\n// const _Source = styled.textarea`\r\n//     display: inline-block;\r\n//     width: calc(100% - 8px);\r\n//     margin: 4px 0 0 4px;\r\n//     height: calc(100% - 44px);\r\n//     /* background-color: #7e7e7e; */\r\n//     text-align: left;\r\n//     font-size: 20px;\r\n//     resize: none;\r\n//     box-sizing: border-box;\r\n//     color: #060053;\r\n// `;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    height: calc(100% - 48px);\r\n    background-color: #ffffff;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst DATA_INFO_HEIGHT = 180;\r\n\r\nconst _DataInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${DATA_INFO_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #9da5af;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ScoreInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${DATA_INFO_HEIGHT * 2 + 40 + 20}px);\r\n    margin: 0 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _CloudDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n`;\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\nconst _ItemnURL = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 18px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #01f52a;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #1f1f1f;\r\n    border: solid 1px #000;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;\r\n\r\nconst _ItemnCombobox = styled.select<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #1f1f1f;\r\n    border: solid 1px #000;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\n\r\nconst _ListFrame = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 92px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    color: #d60000;\r\n    font-size: 24px;\r\n    /* font-weight: 600; */\r\n    /* background-color: white; */\r\n    margin: 0 0 0 4px;\r\n`;\r\n\r\nconst _CloudItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    border-bottom: 1px solid #888888;\r\n    /* background-color: white; */\r\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, transparent, #fdff8484);\r\n    `}\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    padding-left: 4px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n        ${props => !props.isActive ? '' : css`\r\n            background: linear-gradient(to bottom, transparent, #feffcd99);\r\n        `}\r\n    }\r\n`;\r\nconst _CName = styled.span` color: #00532c; `;\r\nconst _CHash = styled.span` color: #b9000042; `;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : TheoryUtil.getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: TheoryUtil.SymbolKey[] = [];\r\n        const parentLine: TheoryUtil.SymbolKey[] = [];\r\n        const childrenLine: TheoryUtil.SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = TheoryUtil.getSymbolDerives(baseSymbol.key);\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = TheoryUtil.getSymbolDerives(curSymbol.key);\r\n        TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\nimport { DetailChord } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = TheoryUtil.getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = TheoryUtil.getRootName({\r\n            index: props.detail.root.index,\r\n            isFlat: TheoryUtil.isFlat(cache.keyIndex, cache.scale)\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = TheoryUtil.getRootName({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        // 見た目上１から数えるため\r\n        bar = cache.bar + 1;\r\n    }\r\n    // 小節変更タイミングで、余りの拍がある（頭でない）場合エラー\r\n    const isError = bar !== -1 && cache.surplusBeat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n        if(chordOn != null) {\r\n            chordName += `/${chordOn}`;\r\n        }\r\n    }\r\n\r\n    let minuteStr = '';\r\n    if(cache.minute !== 0) {\r\n        switch(cache.minute) {\r\n            case 1: minuteStr = '→/16'; break;\r\n            case 2: minuteStr = '→/8'; break;\r\n            case -1: minuteStr = '←/16'; break;\r\n            case -2: minuteStr = '←/8'; break;\r\n        }\r\n    }\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.surplusBeat === 0 ? <>&nbsp;</> : cache.surplusBeat}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : minuteStr}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailAlter = (props: {\r\n    detail: DetailAlter;\r\n}) => {\r\n\r\n    const type = props.detail.alterType;\r\n\r\n    const getDetailInfo = (): string => {\r\n        let ret = '-';\r\n        if (type != null) {\r\n            switch (type) {\r\n                case 'modulate': {\r\n\r\n                    const modRel = props.detail.modRel;\r\n                    if (modRel != null) {\r\n                        switch (modRel) {\r\n                            case 'domm': {\r\n                                const val = props.detail.dommVal;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                            case 'relative':\r\n                            case 'parallel': {\r\n                                ret = modRel;\r\n                            } break;\r\n                            case 'key': {\r\n                                const val = props.detail.keyAdj;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                        }\r\n                    }\r\n                } break;\r\n                case 'tempo' : {\r\n                    const tempoRel = props.detail.tempoRel;\r\n                    switch(tempoRel) {\r\n                        case 'diff': {\r\n                            const val = props.detail.tempoDiff;\r\n                            const sign = val > 0 ? '+' : ''; \r\n                            ret = `${tempoRel}: ${sign}${val}`;\r\n                        } break;\r\n                        case 'rate': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoRate}%`;\r\n                        } break;\r\n                        case 'abs': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoAbs}`;\r\n                        } break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                {type == null ? 'alter' : type}\r\n            </_Type>\r\n            <_Detail>\r\n                {getDetailInfo()}\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailChord, Scale } from \"../../../../../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../../../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 2 | 1;\r\n\r\n/**\r\n * コードブロックのコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isSustainMode: boolean;\r\n    isCurrent: boolean;\r\n    cache: ScoreCache.Element;\r\n    chordCacheList: ScoreCache.Chord[];\r\n    keyIndex: number;\r\n    scale: Scale;\r\n}) => {\r\n\r\n    const minute = props.detail.minute;\r\n    const symbol = TheoryUtil.getSymbolFromKey(props.detail.symbolKey) as TheoryUtil.SymbolParams;\r\n    const symbolName = symbol.name;\r\n    const chordBacking = props.detail.backing;\r\n    const cache = props.cache;\r\n    const chordCache = props.chordCacheList[cache.chordBlockNo];\r\n\r\n    const backingError = chordCache != undefined ? chordCache.backingError : false;\r\n\r\n    return useMemo(() => {\r\n\r\n        // const keySwitch = store.scoreState.keySwitch;\r\n        let degreeRoot: null | string = null;\r\n        let degreeOn: null | string = null;\r\n        let chordRoot: null | string = null;\r\n        let chordOn: null | string = null;\r\n\r\n        if (props.detail.root != null) {\r\n            degreeRoot = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            });\r\n            chordRoot = TheoryUtil.getRootName({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, props.keyIndex);\r\n\r\n            if (props.detail.on != null) {\r\n                degreeOn = TheoryUtil.getDegreeRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.on.isFlat\r\n                });\r\n                chordOn = TheoryUtil.getRootName({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.root.isFlat\r\n                }, props.keyIndex);\r\n            }\r\n        }\r\n        const diatonicList = TheoryUtil.getDiatonicDegreeList(props.scale);\r\n        const isDiatonic = diatonicList.includes(degreeRoot + symbolName);\r\n\r\n        return <_Wrap>\r\n            <_Degree\r\n                // isSwitch={keySwitch.sustainMode && props.isCurrent}\r\n                isSwitch={props.isSustainMode}\r\n                scaleRelation={degreeRoot != null && isDiatonic ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}{symbolName}{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeRoot>\r\n                    {/* <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord> */}\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={props.isSustainMode}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n            <_Backing>\r\n                {backingError ? <_Error /> : <>\r\n                    {chordBacking.voicingList.length === 0 ? '' : <_Voicing />}\r\n                    {chordBacking.voicingList.length === 0 ? '' : chordBacking.pattern == null ? '' : <_Pattern />}\r\n                </>}\r\n            </_Backing>\r\n        </_Wrap>\r\n    }\r\n        , [\r\n            props.scale,\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            props.isSustainMode,\r\n            props.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail,\r\n            props.detail.backing,\r\n            backingError\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: TheoryUtil.ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 18px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #4e5163cc;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 2 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 1 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Backing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 6px;\r\n    /* background-color: #00a048; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _Error = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background-color: #af3838;\r\n`;\r\n\r\nconst _Voicing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 2px 0 0;\r\n    height: 4px;\r\n    border-radius: 4px 0 0 4px;\r\n    border: solid 1px #0000004e;\r\n    background-color: #acb6ca;\r\n`;\r\n\r\nconst _Pattern = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 0 0 2px;\r\n    height: 4px;\r\n    border-radius: 0 4px 4px 0;\r\n    border: solid 1px #0000004e;\r\n    background-color: #accab3;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    // const jsxList: JSX.Element[] = [];\r\n    // jsxList.push(<_Border key={0} />);\r\n    // jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    const value = props.detail.fixed;\r\n    return (\r\n        <_Wrap isStart={value === 'Start'}>\r\n            {/* {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()} */}\r\n            <_Label>{value}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div<{\r\n    isStart: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    border-left: 1px solid #00000083;\r\n    border-top: 1px solid #00000083;\r\n    border-right: 1px solid #00000083;\r\n    /* border: 1px solid #00000083; */\r\n    box-sizing: border-box;\r\n    background-color: #9b9b9b1f;\r\n    ${props => props.isStart ? css`\r\n        border-radius: 0 35px 0 0;\r\n    ` : css`\r\n        border-radius: 35px 0 0 0;\r\n    `}\r\n`;\r\n\r\n// const _Border = styled.div`\r\n//     display: inline-block;\r\n//     width: 10px;\r\n//     height: 100%;\r\n//     background-color: #b4b4b4;\r\n//     vertical-align: middle;\r\n// `;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    /* width: calc(100% - 10px); */\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #960000b0;\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    /* vertical-align: middle; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{TheoryUtil.KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.beatSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailSection } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailSection = (props: {\r\n    detail: DetailSection;\r\n}) => {\r\n    // const { store } = useContext(GlobalContext);\r\n\r\n    // const state = store.scoreState;\r\n    // const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    // const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Label>{curSection.labelName}</_Label> */}\r\n            <_Label>{props.detail.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcAlter = (props: {\r\n    detail: DetailAlter;\r\n    prevCache: ScoreCache.Element;\r\n    curCache: ScoreCache.Element;\r\n}) => {\r\n\r\n    const getType = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate': return 'Key';\r\n            case 'tempo': return 'Tempo';\r\n            case 'beat': return 'Beat';\r\n        }\r\n    }\r\n    const getDetail = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate':{\r\n                const prevKey = TheoryUtil.KEY12_SHARP_LIST[props.prevCache.keyIndex] + (props.prevCache.scale === 'major' ? '' : 'm');\r\n                const curKey = TheoryUtil.KEY12_SHARP_LIST[props.curCache.keyIndex] + (props.curCache.scale === 'major' ? '' : 'm');\r\n                return `${prevKey}→${curKey}`;\r\n            }\r\n            case 'tempo':{\r\n                const prevTempo = props.prevCache.bpm;\r\n                const curTempo = props.curCache.bpm;\r\n                return `${prevTempo}→${curTempo}`;\r\n            }\r\n            case 'beat':{\r\n                const prevBeat = props.prevCache.beatSignature;\r\n                const curBeat = props.curCache.beatSignature;\r\n                return `${prevBeat}→${curBeat}`;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Type>{getType()}</_Type>\r\n            <_Detail>{getDetail()}</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\ntype ChordDefBean = {\r\n    root: TheoryUtil.DegreeProps;\r\n    symbolKey: TheoryUtil.SymbolKey;\r\n}\r\n\r\nconst ChordEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n    }, [detail.root, detail.symbolKey]);\r\n\r\n    const getChord = (index: number, isFlat: boolean, symbolKey: TheoryUtil.SymbolKey): ChordDefBean => {\r\n        return { root: { index, isFlat }, symbolKey };\r\n    }\r\n\r\n    const createRow = (label: JSX.Element, chordList: ChordDefBean[]): JSX.Element => {\r\n        const listJsx: JSX.Element[] = [];\r\n        listJsx.push(<_Header key={listJsx.length}>{label}</_Header>);\r\n        chordList.forEach((chord) => {\r\n            const rootName = TheoryUtil.getDegreeRoot(chord.root);\r\n            const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\r\n            const symbolName = symbol.name;\r\n            listJsx.push(\r\n                <_Item isActive={false} key={listJsx.length}>\r\n                    {rootName + symbolName}\r\n                </_Item>);\r\n        });\r\n        return <_Row>{listJsx}</_Row>;\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {createRow(<>triad</>, [\r\n                getChord(0, false, 'major'),\r\n                getChord(2, false, 'minor'),\r\n                getChord(4, false, 'minor'),\r\n                getChord(5, false, 'major'),\r\n                getChord(7, false, 'major'),\r\n                getChord(9, false, 'minor'),\r\n                getChord(11, false, 'minor-minus5'),\r\n            ])}\r\n            {/* {createRow(<>Tetrad</>, [\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'minor-7th'),\r\n                getChord(4, false, 'minor-7th'),\r\n                getChord(5, false, 'major-maj7th'),\r\n                getChord(7, false, 'major-min7th'),\r\n                getChord(9, false, 'minor-7th'),\r\n                getChord(11, false, 'minor7-minus5'),\r\n            ])} */}\r\n            {createRow(<>domm</>, [\r\n                getChord(9, false, 'major-min7th'),\r\n                getChord(11, false, 'major-min7th'),\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'major-min7th'),\r\n                getChord(4, false, 'major-min7th'),\r\n            ])}\r\n            {createRow(<>domm*</>, [\r\n                getChord(1, false, 'diminish'),\r\n                getChord(3, false, 'diminish'),\r\n                getChord(4, false, 'diminish'),\r\n                getChord(6, false, 'diminish'),\r\n                getChord(8, false, 'diminish'),\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    /* height: 160px; */\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    /* height: 100%; */\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport SymbolEditor from \"../tool/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailAlter from \"./form/elementDetailAlter\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcAlter from \"./calc/calcAlter\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { ScoreState } from \"../../../../../redux/store/score/scoreState\";\r\nimport ChordEditor from \"../tool/chordEditor\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n    element: ChordElement;\r\n    state: ScoreState;\r\n    setState: (state: ScoreState) => void;\r\n}) => {\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = props.state;\r\n    const keySwitch = state.keySwitch;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    // const chordList = store.scoreData.chordList;\r\n    // const element = chordList[props.index];\r\n    const element = props.element;\r\n    const cache = state.elementCacheList[props.index];\r\n    const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n    const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n    const isFocus = props.index >= distHead && props.index <= distTail;\r\n    const isRange = isFocus && distHead != distTail;\r\n    const isSameSection = isFocus || state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        props.setState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    const elementJson = JSON.stringify(element);\r\n\r\n    const isError = () => {\r\n        let ret = false;\r\n        if (element.type === 'chord') {\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            ret = chordCache.backingError;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    return useMemo(() => {\r\n        // console.log(`pos: ${props.index}`);\r\n        const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n        const isInactive = !(isSameSection || element.type === 'init');\r\n        return (\r\n            <_Wrap\r\n                ref={wrapRef}\r\n                isSelectable={element.type !== 'fixed'}\r\n                isActive={isFocus}\r\n                isInactive={isInactive}\r\n                isAdditional={['chord', 'section', 'alter', 'init'].includes(element.type)}\r\n            >\r\n                <_Head>\r\n                    {element.type !== 'chord' ? <></> : (\r\n                        <_CurKey>{TheoryUtil.getDisplayKeyScaleName(cache.keyIndex, cache.scale)}</_CurKey>\r\n                    )}\r\n                </_Head>\r\n\r\n                {/* 要素の入力フォーム */}\r\n                {['init', 'chord', 'section', 'alter'].includes(element.type) ? (\r\n                    <_Form\r\n                        ref={bodyRef}\r\n                        isActive={isFocus}\r\n                        isRange={isRange}\r\n                        isInactive={isInactive}\r\n                        type={element.type}\r\n                        isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                        onClick={() => {\r\n                            if (element.type === 'fixed') {\r\n                                return;\r\n                            }\r\n                            if (!state.keySwitch.distMode) {\r\n                                state.focusIndex = state.distIndex = props.index;\r\n                            } else {\r\n                                state.distIndex = props.index;\r\n                            }\r\n                            props.setState(state);\r\n                        }}\r\n                    >{(() => {\r\n                        switch (element.type) {\r\n                            case 'init': {\r\n                                const detail = element.detail as DetailInit;\r\n                                return (<ElementDetailInit detail={detail} />);\r\n                            }\r\n                            case 'section': {\r\n                                const detail = element.detail as DetailSection;\r\n                                return (<ElementDetailSection detail={detail} />);\r\n                            }\r\n                            case 'chord': {\r\n                                const detail = element.detail as DetailChord;\r\n                                return (<ElementDetailChord\r\n                                    detail={detail}\r\n                                    isCurrent={isFocus}\r\n                                    cache={cache}\r\n                                    chordCacheList={state.chordCacheList}\r\n                                    keyIndex={cache.keyIndex}\r\n                                    isSustainMode={isFocus && state.keySwitch.sustainMode}\r\n                                    scale={cache.scale}\r\n                                />);\r\n                            }\r\n                            case 'alter': {\r\n                                const detail = element.detail as DetailAlter;\r\n                                return (<ElementDetailAlter detail={detail} />);\r\n                            }\r\n                        }\r\n                    })()}\r\n                    </_Form>\r\n                ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n                {/* 入力フォーム下部の計算によって出力される情報 */}\r\n                {\r\n                    element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                        element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                            element.type === 'alter' ? (\r\n                                <CalcAlter\r\n                                    detail={element.detail as DetailAlter}\r\n                                    prevCache={state.elementCacheList[props.index - 1]}\r\n                                    curCache={cache}\r\n                                />\r\n                            ) :\r\n                                <></>\r\n                }\r\n                <>{!(isCurrent && chordDetail != null && state.keySwitch.chordMode) ? '' :\r\n                    <ChordEditor />\r\n                }</>\r\n                <>{!(isCurrent && chordDetail != null && chordDetail.root != null && state.keySwitch.symbolMode) ? '' :\r\n                    <SymbolEditor />\r\n                }</>\r\n                {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                    <_Operations>\r\n                        <_OperationItem>-</_OperationItem>\r\n                        <_OperationItem\r\n                        // onClick={() => dispatcher.score.addChordElement()}\r\n                        >+</_OperationItem>\r\n                    </_Operations>\r\n                )}\r\n            </_Wrap>\r\n        );\r\n    }, [\r\n        elementJson, isSameSection, isRange, isFocus,\r\n        keySwitch.chordMode, keySwitch.symbolMode, keySwitch.sustainMode,\r\n        isError(), cache.keyIndex, cache.scale\r\n    ]);\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isRange: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    /* border: solid 1px #00000049; */\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #df8484;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #44b168;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'alter' ? '' : css`\r\n        border: solid 1px #604fc0;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 4px;\r\n    ${props => props.isInactive ? '' : css`\r\n        /* background-color: #ebf1e2; */\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4c9df;\r\n        border: solid 1px #00000049;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n    ${props => !props.isRange ? '' : css`\r\n        background-color: #80d4e2;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isAdditional: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isAdditional ? '' : css`\r\n        /* background-color: #e8ff9549; */\r\n        background: linear-gradient(to bottom, transparent,transparent,transparent, #ffffff9e);\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #ffffff9b;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (cacheList.length === chordList.length) {\r\n        for (let i = 0; i < cacheList.length; i++) {\r\n            list.push(\r\n                <ScoreElement key={list.length}\r\n                    index={i}\r\n                    element={chordList[i]}\r\n                    state={store.scoreState}\r\n                    setState={dispatcher.score.setScoreState}\r\n                />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {list}\r\n            {/* <_Frame> */}\r\n            {/* <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note> */}\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    /* overflow: auto; */\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #d8d8d8;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    state.distIndex = state.focusIndex;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 46px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #97cce0dd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #929292;\r\n    /* border-radius: 20px 20px 20px 20px; */\r\n    border-radius: 2px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 25px;\r\n        font-size: 18px;\r\n        /* font-weight: 600; */\r\n        color: #4d4d4d;\r\n        /* background-color: #0000003a; */\r\n        line-height: 22px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 21px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #adadad39; */\r\n        line-height: 20px;\r\n    }\r\n`;","import { on } from \"stream\";\r\nimport { Dispatcher } from \"../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../redux/store/store\";\r\nimport BackingUtil from \"../backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\nimport { getKeyIndexFromPitcher, getNormalizeLenFromNotes } from \"../melodyUtil\";\r\nimport TheoryUtil from \"../theoryUtil\";\r\n\r\nnamespace HarmonizeUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n        const state = store.scoreState;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        const reserveTasks = store.reserveTasks;\r\n        let firstTime = -1;\r\n        const update = () => {\r\n            // if (store.invalidate.harmonize) {\r\n            //     store.invalidate.harmonize();\r\n            // }\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = state.focusIndex; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n            const element = chordList[i];\r\n\r\n            /**\r\n             * 要素の切り替わり時の処理をタスクに追加する\r\n             * @param callback 実行する処理\r\n             */\r\n            const addProgAction = (callback: () => void) => {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        callback();\r\n                    }, cache.pastSecond - firstTime - adjsut)\r\n                );\r\n            }\r\n\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                // 開始時のノーツの位置（時間）を保存する。\r\n                if (firstTime === -1) {\r\n                    firstTime = cache.pastSecond;\r\n                }\r\n\r\n                // コードが指定されてい場合\r\n                if (detail.root == null) {\r\n                    addProgAction(()=> {\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        update();\r\n                    });\r\n                }\r\n\r\n                // バッキングエラーがない場合\r\n                if (!chordCache.backingError) {\r\n                    const backing = detail.backing;\r\n                    const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n\r\n                    // const chordTime = 60 / cache.bpm * len;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    const chordTime = TheoryUtil.calcSustainMsec(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        cache.bpm,\r\n                        cache.beatSignature\r\n                    );\r\n\r\n                    addProgAction(()=> {\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        setTimeout(() => {\r\n                            update();\r\n                        }, 0);\r\n                    });\r\n                } else {\r\n                    // バッキングエラーがある場合プレビューを止める\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                        }, (cache.pastSecond - firstTime - adjsut))\r\n                    );\r\n                }\r\n            }\r\n\r\n            // 終端の要素を処理\r\n            if (i === chordList.length - 1) {   \r\n                addProgAction(()=> {\r\n                    HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                });\r\n            }\r\n        }\r\n\r\n        // メロディを再生\r\n        if (!state.isSolo) {\r\n            previewMelody(firstTime / 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n        state.isPreview = true;\r\n        update();\r\n    }\r\n\r\n    const previewMelody = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const instrument = store.instruments.melodyFont;\r\n\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = 0; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n\r\n            if (posTime < start) continue;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    dispatcher.melody.adjustScrollX();\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                    }, 0);\r\n                }, (posTime - start) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            // if (i === data.notesList.length - 1) {\r\n            //     reserveTasks.push(\r\n            //         setTimeout(() => {\r\n            //             stopPreview(store, dispatcher, reserveTasks);\r\n            //         }, (posTime - start + lenTime) * 1000)\r\n            //     );\r\n            // }\r\n        }\r\n    }\r\n\r\n    // ハーモニーのプレビューを停止する。\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        state.isPreview = false;\r\n        // store.instruments.sampler.releaseAll();\r\n        // state.focusIndex = state.lastFocus;\r\n        reserveTasks.forEach(id => clearTimeout(id));\r\n        dispatcher.system.setReserveTasks([]);\r\n        dispatcher.score.setScoreState(state);\r\n\r\n        store.instruments.harmonyFont?.stop();\r\n    }\r\n\r\n    // 選択中の要素のバッキングパターンを鳴らす\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.scoreState;\r\n        const reserveTasks = store.reserveTasks;\r\n        const cache = state.elementCacheList[state.focusIndex];\r\n        const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n        const curChord = store.scoreData.chordList[state.focusIndex];\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n            // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n            // const chordTime = 60 / cache.bpm * len;\r\n\r\n            const minute = detail.minute.head + detail.minute.tail;\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                detail.beatLen,\r\n                minute,\r\n                cache.bpm,\r\n                cache.beatSignature\r\n            );\r\n\r\n            BackingUtil.playBacking(store, store.reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.score.setScoreState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n    }\r\n}\r\n\r\nexport default HarmonizeUtil;\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\nimport { ChordBacking } from \"../../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\nimport { NoteKeySwitch } from \"../../../../../redux/store/score/scoreState\";\r\n\r\nnamespace BackingEditorInput {\r\n\r\n    export const main = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const data = store.scoreData;\r\n        const state = store.backingState;\r\n\r\n        if (state == null || state.tabIndex === 1) return;\r\n\r\n        if (!state.isPreview) {\r\n            edit(e, state, keySwitch, dispatcher);\r\n        } else {\r\n\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const edit = (e: KeyboardEvent, state: BackingState.Editor, keySwitch: NoteKeySwitch, dispatcher: Dispatcher) => {\r\n\r\n        const pattern = state.pattern;\r\n\r\n        // 共通処理\r\n        common(e, state, dispatcher);\r\n\r\n        if (pattern != null) {\r\n            if (pattern.channelIndex === -1) {\r\n                patternNormalMode(e, state, pattern, dispatcher);\r\n            } else {\r\n                patternDetailMode(e, state, pattern, keySwitch.sustainMode, dispatcher);\r\n            }\r\n        }\r\n    }\r\n\r\n    const common = (e: KeyboardEvent, state: BackingState.Editor, dispatcher: Dispatcher) => {\r\n\r\n        switch (e.key) {\r\n            case 'b': {\r\n                // dispatcher.backing.closeBackingEditor();\r\n                state.closeAction(state, false);\r\n            } break;\r\n            case 'z': {\r\n                const voicingList = BackingUtil.getVoicingListFromTable(state.voicingTable);\r\n                const pattern = state.pattern == null ? null : BackingUtil.buildPatternProps(state.pattern);\r\n                const test: ChordBacking = { voicingList, pattern };\r\n                console.log('voicingList: ' + DataUtil.gZip(JSON.stringify(voicingList)));\r\n                console.log('pattern: ' + DataUtil.gZip(JSON.stringify(pattern)));\r\n                console.log('source: ' + DataUtil.gZip(JSON.stringify(test)));\r\n                console.log('source: ' + JSON.stringify(test));\r\n            } break;\r\n            case ' ': {\r\n                if (!state.hasError) {\r\n                    dispatcher.backing.testBacking();\r\n                }\r\n            } break;\r\n            case 'Enter': {\r\n                // dispatcher.backing.mappingEditorToScore();\r\n                // dispatcher.backing.closeBackingEditor();\r\n                state.closeAction(state, true);\r\n            } break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * パターン編集の通常モード\r\n     * @param e \r\n     * @param state \r\n     * @param pattern \r\n     * @param dispatcher \r\n     */\r\n    const patternNormalMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, dispatcher: Dispatcher) => {\r\n\r\n        const update = () => dispatcher.backing.setState(state);\r\n        switch (e.key) {\r\n            case 'ArrowLeft': {\r\n                dispatcher.backing.movePatternColumn(false);\r\n            } break;\r\n            case 'ArrowRight': {\r\n                dispatcher.backing.movePatternColumn(true);\r\n            } break;\r\n            case 'ArrowUp': {\r\n                dispatcher.backing.incrementVel(1);\r\n            } break;\r\n            case 'ArrowDown': {\r\n                dispatcher.backing.incrementVel(-1);\r\n            } break;\r\n            case 'a': {\r\n                dispatcher.backing.addPatternColumn();\r\n            } break;\r\n            case 'w': {\r\n                dispatcher.backing.switchLayer();\r\n            } break;\r\n            case 'e': {\r\n                dispatcher.backing.switchMode();\r\n            } break;\r\n            case '1': {\r\n                dispatcher.backing.setCurrentDivRate(16);\r\n            } break;\r\n            case '2': {\r\n                dispatcher.backing.setCurrentDivRate(8);\r\n            } break;\r\n            case '3': {\r\n                dispatcher.backing.setCurrentDivRate(4);\r\n            } break;\r\n            case '4': {\r\n                dispatcher.backing.setCurrentDivRate(2);\r\n            } break;\r\n            case '5': {\r\n                dispatcher.backing.setCurrentDivRate(1);\r\n            } break;\r\n            case '.': {\r\n                dispatcher.backing.toggleCurrentDivHalf();\r\n            } break;\r\n            case 'Delete': {\r\n                dispatcher.backing.deleteColumn();\r\n            } break;\r\n            case 's': {\r\n                pattern.channelIndex = 0;\r\n                update();\r\n            } break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * パターン編集の詳細モード\r\n     * @param e \r\n     * @param state \r\n     * @param pattern \r\n     * @param isEdit \r\n     * @param dispatcher \r\n     */\r\n    const patternDetailMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, isEdit: boolean, dispatcher: Dispatcher) => {\r\n\r\n        const update = () => dispatcher.backing.setState(state);\r\n        if (!isEdit) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft': {\r\n                    dispatcher.backing.movePatternColumn(false);\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    dispatcher.backing.movePatternColumn(true);\r\n                }\r\n                    break;\r\n                case 'ArrowUp': {\r\n                    dispatcher.backing.moveChannelIndex(false);\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.backing.moveChannelIndex(true);\r\n                }\r\n                    break;\r\n                case 's': {\r\n                    pattern.channelIndex = -1;\r\n                    update();\r\n                }\r\n                    break;\r\n                case 'a': {\r\n                    const curNotes = dispatcher.backing.getNotes();\r\n\r\n                    const hasStaccato = () => {\r\n                        const layer = pattern.layers[pattern.layerIndex];\r\n                        const search = layer.table.find((record) => {\r\n                            const cell = record[pattern.lenIndex];\r\n                            if (cell != null && cell.signal === 's') return cell;\r\n                        });\r\n                        return search != undefined;\r\n                    }\r\n                    // 同列にスタッカートがある場合、スタッカートを設定\r\n                    const signal = !hasStaccato() ? 'n' : 's';\r\n                    const notes: BackingState.NoteStatus | null = curNotes == null ? { signal, timing: 0, velAdj: 0 } : null;\r\n                    dispatcher.backing.setNotes(notes);\r\n                    dispatcher.backing.updateErrorState();\r\n                }\r\n                    break;\r\n            }\r\n        } else {\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const baseVel = layer.velocityList[pattern.lenIndex];\r\n            const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n            const cell = layer.table[channelIndex][pattern.lenIndex];\r\n\r\n            if (cell != null) {\r\n                let tempTiming = cell.timing == undefined ? 0 : cell.timing;\r\n                let tempVelAdj = cell.velAdj == undefined ? 0 : cell.velAdj;\r\n                const vel = baseVel + tempVelAdj;\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        if (vel < 10) {\r\n                            tempVelAdj++;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        if (vel > 1) {\r\n                            tempVelAdj--;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowLeft': {\r\n                        if (tempTiming > -10) {\r\n                            tempTiming--;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        if (tempTiming < 10) {\r\n                            tempTiming++;\r\n                        }\r\n                    }\r\n                        break;\r\n                }\r\n                if (tempVelAdj !== 0) {\r\n                    cell.velAdj = tempVelAdj;\r\n                } else {\r\n                    delete cell.velAdj;\r\n                }\r\n                if (tempTiming != 0) {\r\n                    cell.timing = tempTiming;\r\n                } else {\r\n                    delete cell.timing;\r\n                }\r\n                update();\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default BackingEditorInput;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport PresetSelectorFrame from \"../../../../thema/presetSelectorFrame\";\r\n\r\nnamespace PresetSelectorInput {\r\n\r\n    export const main = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(`[${e.key}]`);\r\n        // alert(config.nextElement);\r\n\r\n        const cache = store.systemState.cache as PresetSelectorFrame.CachePorps;\r\n        const update = () => {\r\n            // cache.updateBacking();\r\n            cache.invalidate();\r\n        }\r\n        const field = cache.field;\r\n\r\n        const moveList = (isDown: boolean) => {\r\n            if (!isDown && field.listIndex >= 1) {\r\n                field.listIndex--;\r\n                update();\r\n            } else if (isDown && field.listIndex < cache.presetList.length - 1) {\r\n                field.listIndex++;\r\n                update();\r\n            }\r\n        }\r\n\r\n        switch (e.key) {\r\n            case 'Enter': {\r\n                cache.applyAction();\r\n            } break;\r\n            case 'e': {\r\n                dispatcher.score.closeLibraryWnd();\r\n            } break;\r\n            case 'ArrowUp': {\r\n                moveList(false);\r\n            } break;\r\n            case 'ArrowDown': {\r\n                moveList(true);\r\n            } break;\r\n        }\r\n    }\r\n}\r\nexport default PresetSelectorInput;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport ThemaSelectorFrame from \"../../../../thema/themaSelectorFrame\";\r\nimport LibraryUtil from \"../../../../../utils/LibraryUtil\";\r\n\r\nnamespace ThemaSelectorInput {\r\n\r\n    export const main = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(`[${e.key}]`);\r\n        // alert(config.nextElement);\r\n\r\n        const cache = store.systemState.cache as ThemaSelectorFrame.CachePorps;\r\n        const update = () => {\r\n            // cache.updateBacking();\r\n            cache.invalidate();\r\n        }\r\n        const field = cache.field;\r\n\r\n        const moveList = (isDown: boolean) => {\r\n            if (field.focusSide === 0) {\r\n                // パターン\r\n                if (!isDown && field.pattIndex >= 1) {\r\n                    field.pattIndex--;\r\n                    field.voicIndex = 0;\r\n                    update();\r\n                } else if (isDown && field.pattIndex < cache.patternList.length - 1) {\r\n                    field.pattIndex++;\r\n                    field.voicIndex = 0;\r\n                    update();\r\n                }\r\n            } else {\r\n                // ボイシング\r\n                const patternList = cache.patternList;\r\n                const filteredList = cache.voicingList.filter((voic) => {\r\n                    return LibraryUtil.acceptVoic(voic, patternList, field.pattIndex);\r\n                });\r\n                if (!isDown && field.voicIndex >= 1) {\r\n                    field.voicIndex--;\r\n                    update();\r\n                } else if (isDown && field.voicIndex < filteredList.length - 1) {\r\n                    field.voicIndex++;\r\n                    update();\r\n                }\r\n            }\r\n        }\r\n\r\n        const moveSide = (isRight: boolean) => {\r\n            if (!isRight) {\r\n                if (field.focusSide === 1) {\r\n                    field.focusSide = 0;\r\n                    update();\r\n                }\r\n            } else {\r\n                if (field.focusSide === 0) {\r\n                    field.focusSide = 1;\r\n                    update();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!cache.isPreview) {\r\n            switch (e.key) {\r\n                case 'e': {\r\n                    dispatcher.score.closeLibraryWnd();\r\n                } break;\r\n                case 'Enter': {\r\n                    const pattern = cache.patternList[field.pattIndex];\r\n                    const voicing = cache.voicingList.filter(voic => {\r\n                        return LibraryUtil.acceptVoic(voic, cache.patternList, field.pattIndex);\r\n                    })[field.voicIndex];\r\n                    dispatcher.thema.mappingSelectorToScore(voicing.source, pattern.source);\r\n                    dispatcher.score.closeLibraryWnd();\r\n                } break;\r\n                case 'ArrowLeft': {\r\n                    moveSide(false);\r\n                } break;\r\n                case 'ArrowRight': {\r\n                    moveSide(true);\r\n                } break;\r\n                case 'ArrowUp': {\r\n                    moveList(false);\r\n                } break;\r\n                case 'ArrowDown': {\r\n                    moveList(true);\r\n                } break;\r\n            }\r\n        }\r\n        // プレビュー中か否かに影響されない\r\n        switch (e.key) {\r\n            case ' ': {\r\n                if (cache.isPermitTest()) {\r\n                    cache.testBacking();\r\n                }\r\n            } break;\r\n        }\r\n    }\r\n\r\n}\r\nexport default ThemaSelectorInput;","import styled, { css } from \"styled-components\";\r\n\r\nexport namespace SideFormStyles {\r\n\r\n    export const ___CSS_FORM = css`\r\n        display: inline-block;\r\n        /* width: 100px; */\r\n        height: 25px;\r\n        background-color: #bdbdbd;\r\n        border: 1px solid #000;\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        color: #303030;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        text-align: center;\r\n    `;\r\n\r\n    export const ___CSS_TITLE = css`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 26px;\r\n        /* background-color: #f0f0f0; */\r\n        background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n        border: 1px solid #222222;\r\n        font-size: 20px;\r\n        color: #ffffff;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        box-sizing: border-box;\r\n        /* border: 1px solid #c50000; */\r\n        text-align: center;\r\n    `;\r\n\r\n    export const createNumberForm = (value: number, isEnable: boolean,\r\n         onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n         min: number, max:number, step:number) => {\r\n\r\n        return (\r\n            <_NumberForm isEnable={isEnable}>\r\n                <input\r\n                    type=\"number\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"range\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </_NumberForm>\r\n        );\r\n    }\r\n\r\n    const _NumberForm = styled.div<{\r\n        isEnable: boolean;\r\n    }>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 55px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 5px;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n    `;\r\n}","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport HarmonizeUtil from \"../../../../../utils/score/harmonizeUtil\";\r\nimport BackingEditorInput from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\nimport PresetSelectorInput from \"./presetSelectorInput\";\r\nimport ThemaSelectorInput from \"./themaSelectorInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    // プレビュー再生時\r\n    if (state.isPreview) {\r\n        switch (e.key) {\r\n            case ' ': {\r\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n        return;\r\n    } else {\r\n        switch (store.scoreState.hideMenu) {\r\n            case 'none': {\r\n                if (isElement) {\r\n                    if (keySwitch.control) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                const element = data.chordList[state.focusIndex];\r\n                                if (element.type === \"chord\") {\r\n                                    const detail = element.detail as DetailChord;\r\n                                    if (detail.root != null) {\r\n                                        dispatcher.score.cloneBacking();\r\n                                    }\r\n                                }\r\n                            }\r\n                                break;\r\n                            case 'x': {\r\n                                dispatcher.score.copyElementList();\r\n                            }\r\n                                break;\r\n                            case 'v': {\r\n                                if (state.copiedElementList != null) {\r\n                                    dispatcher.score.pasteElementList();\r\n                                } else if (state.cloneBacking != null) {\r\n\r\n                                    const element = data.chordList[state.focusIndex];\r\n                                    if (element.type === \"chord\") {\r\n                                        const detail = element.detail as DetailChord;\r\n                                        if (detail.root != null) {\r\n                                            dispatcher.score.pastBacking();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                                break;\r\n                            case 's': {\r\n                                dispatcher.score.saveFile();\r\n                                // DataUtil.saveFile(JSON.stringify(data), state);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (keySwitch.distMode) {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                dispatcher.score.moveDist(false);\r\n                            }\r\n                                break;\r\n                            case 'ArrowRight': {\r\n                                dispatcher.score.moveDist(true);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (keySwitch.sustainMode) {\r\n                        switch (e.key) {\r\n                            case config.decRoot: {\r\n                                dispatcher.score.incrementDegreeRoot(false);\r\n                            }\r\n                                break;\r\n                            case config.incRoot: {\r\n                                dispatcher.score.incrementDegreeRoot(true);\r\n                            }\r\n                                break;\r\n                            case config.decBeat: {\r\n                                dispatcher.score.incrementBeatLen(false);\r\n                            }\r\n                                break;\r\n                            case config.incBeat: {\r\n                                dispatcher.score.incrementBeatLen(true);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (keySwitch.minHeadMode) {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                dispatcher.score.incrementMinuteValRelation(false, 1);\r\n                            }\r\n                                break;\r\n                            case 'ArrowRight': {\r\n                                dispatcher.score.incrementMinuteValRelation(false, -1);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (keySwitch.minTailMode) {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                dispatcher.score.incrementMinuteValRelation(true, -1);\r\n                            }\r\n                                break;\r\n                            case 'ArrowRight': {\r\n                                dispatcher.score.incrementMinuteValRelation(true, 1);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (keySwitch.chordMode) {\r\n                        // switch (e.key) {\r\n                        //     case 'ArrowUp': {\r\n                        //         dispatcher.symbol.toNext(false);\r\n                        //     }\r\n                        //         break;\r\n                        //     case 'ArrowDown': {\r\n                        //         dispatcher.symbol.toNext(true);\r\n                        //     }\r\n                        //         break;\r\n                        //     case 'ArrowLeft': {\r\n                        //         dispatcher.symbol.toBase();\r\n                        //     }\r\n                        //         break;\r\n                        //     case 'ArrowRight': {\r\n                        //         dispatcher.symbol.toDerive();\r\n                        //     }\r\n                        //         break;\r\n                        // }\r\n                    } else if (keySwitch.symbolMode) {\r\n                        switch (e.key) {\r\n                            case 'ArrowUp': {\r\n                                dispatcher.symbol.toNext(false);\r\n                            }\r\n                                break;\r\n                            case 'ArrowDown': {\r\n                                dispatcher.symbol.toNext(true);\r\n                            }\r\n                                break;\r\n                            case 'ArrowLeft': {\r\n                                dispatcher.symbol.toBase();\r\n                            }\r\n                                break;\r\n                            case 'ArrowRight': {\r\n                                dispatcher.symbol.toDerive();\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else {\r\n                        NoteBasicInput(e, store, dispatcher);\r\n                    }\r\n                }\r\n            } break;\r\n            case 'backing': {\r\n                BackingEditorInput.main(e, store, dispatcher);\r\n            } break;\r\n            case 'library': {\r\n                ThemaSelectorInput.main(e, store, dispatcher);\r\n            } break;\r\n            case 'preset': {\r\n                PresetSelectorInput.main(e, store, dispatcher);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const state = store.scoreState;\r\n    if (!state.isPreview) {\r\n        // if (state.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case 'Control': {\r\n                keySwitch.control = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.distMode: {\r\n                if (!keySwitch.control) {\r\n                    keySwitch.distMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.edit1: {\r\n                if (!(keySwitch.control || keySwitch.distMode)) {\r\n                    keySwitch.sustainMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'v': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode)) {\r\n                    keySwitch.chordMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.edit2: {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode)) {\r\n                    keySwitch.symbolMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'd': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode)) {\r\n                    keySwitch.minHeadMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'g': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode || keySwitch.minHeadMode)) {\r\n                    keySwitch.minTailMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n        }\r\n        // }\r\n    }\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport HarmonizeUtil from \"../../../../../utils/score/harmonizeUtil\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport LibraryUtil from \"../../../../../utils/LibraryUtil\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const element = data.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n    const curType = element.type;\r\n    const isElement = curType !== 'init'\r\n\r\n    const libEnables = LibraryUtil.getEnableState(store);\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                } break;\r\n                case 'e': {\r\n                    if (libEnables.isUseLib && libEnables.isChordElement && !libEnables.isRangeSelect) {\r\n                        dispatcher.score.openLibraryWnd(false);\r\n                    }\r\n                } break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                } break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(cache.scale, Number(e.key) - 1);\r\n                } break;\r\n            }\r\n        } break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.left: {\r\n            if (state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(false);\r\n            } else {\r\n                dispatcher.score.releaseRange(false);\r\n            }\r\n        } break;\r\n        case config.right: {\r\n            if (state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(true);\r\n            } else {\r\n                dispatcher.score.releaseRange(true);\r\n            }\r\n        } break;\r\n        // セクションの移動\r\n        case config.up: {\r\n            dispatcher.score.moveSection(false);\r\n        } break;\r\n        case config.down: {\r\n            dispatcher.score.moveSection(true);\r\n        } break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        } break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        } break;\r\n        case 'm': {\r\n            dispatcher.score.addAlterElement();\r\n        } break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeElement();\r\n        } break;\r\n        case 'e': {\r\n            if (libEnables.isUseLib && libEnables.isRangeSelect) {\r\n                dispatcher.score.openLibraryWnd(true);\r\n            }\r\n        } break;\r\n        case 'n': {\r\n            dispatcher.score.removeBacking();\r\n        } break;\r\n        case ' ': {\r\n            // if (!chordCache.backingError) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n            // }\r\n        } break;\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BeatSignature, DetailAlter as DetailAlter, AlterType, ModulateRelation, TempoRelation } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/score/cacheUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormAlter = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailAlter;\r\n\r\n    const type = detail.alterType;\r\n\r\n    const update = () => {\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const createAlertTypeItem = (value: AlterType | '-', isActive: boolean): JSX.Element => {\r\n        const type = value === '-' ? null : value;\r\n        return <_Form isActive={isActive}\r\n            onClick={() => {\r\n                //値が変わった時のみ処理を実行\r\n                if (detail.alterType !== type) {\r\n                    detail.alterType = type;\r\n                    // 全ての項目を初期化\r\n                    detail.modRel = null;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    detail.tempoRel = null;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    detail.beatSignature = '4/4';\r\n                    update();\r\n                }\r\n            }}> {value}</_Form >;\r\n    }\r\n\r\n    const createModulateRelationItem = (value: ModulateRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'modulate' && rel == detail.modRel}\r\n            onClick={() => {\r\n                if (detail.modRel !== rel) {\r\n                    detail.modRel = rel;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createTempoRelationItem = (value: TempoRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'tempo' && rel == detail.tempoRel}\r\n            onClick={() => {\r\n                if (detail.tempoRel !== rel) {\r\n                    detail.tempoRel = rel;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createBeatItem = (value: BeatSignature): JSX.Element => {\r\n        return <_Form isActive={detail.alterType === 'beat' && detail.beatSignature === value}\r\n            onClick={() => {\r\n                if (detail.beatSignature !== value) {\r\n                    detail.beatSignature = value;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const donmmItemJsxList = <_ParamDiv isEnable={detail.modRel === 'domm'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'domm' && value == detail.dommVal}\r\n            onClick={() => {\r\n                detail.dommVal = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>\r\n    })}</_ParamDiv>;\r\n\r\n    const keyAdjItemJsxList = <_ParamDiv isEnable={detail.modRel === 'key'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'key' && value == detail.keyAdj}\r\n            onClick={() => {\r\n                detail.keyAdj = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>;\r\n    })}</_ParamDiv>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Group isEnable={true}>\r\n                <_CategoryLabel>Type</_CategoryLabel>\r\n                {createAlertTypeItem('-', type == null)}\r\n                {createAlertTypeItem('modulate', type === 'modulate')}\r\n                {createAlertTypeItem('tempo', type === 'tempo')}\r\n                {createAlertTypeItem('beat', type === 'beat')}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'modulate'}>\r\n                <_CategoryLabel>Modulate</_CategoryLabel>\r\n                {createModulateRelationItem('-')}\r\n                {createModulateRelationItem('domm')}\r\n                {donmmItemJsxList}\r\n                {createModulateRelationItem('parallel')}\r\n                {createModulateRelationItem('relative')}\r\n                {createModulateRelationItem('key')}\r\n                {keyAdjItemJsxList}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'tempo'}>\r\n                <_CategoryLabel>Tempo</_CategoryLabel>\r\n                {createTempoRelationItem('-')}\r\n                {createTempoRelationItem('diff')}\r\n                {SideFormStyles.createNumberForm(detail.tempoDiff,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'diff',\r\n                    (e) => {\r\n                        detail.tempoDiff = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, -100, 100, 1)}\r\n                {createTempoRelationItem('rate')}\r\n                {SideFormStyles.createNumberForm(detail.tempoRate,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'rate',\r\n                    (e) => {\r\n                        detail.tempoRate = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n                {createTempoRelationItem('abs')}\r\n                {SideFormStyles.createNumberForm(detail.tempoAbs,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'abs',\r\n                    (e) => {\r\n                        detail.tempoAbs = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'beat'}>\r\n                <_CategoryLabel>Beat</_CategoryLabel>\r\n                {createBeatItem('2/4')}\r\n                {createBeatItem('4/4')}\r\n                {createBeatItem('3/4')}\r\n                {createBeatItem('6/8')}\r\n                {createBeatItem('9/8')}\r\n                {createBeatItem('12/8')}\r\n            </_Group>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormAlter;\r\n\r\nconst _Wrap = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        background-color: #b3b5c5;\r\n        `;\r\n\r\nconst _Group = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 0 0 0 4px;\r\n    ${props => props.isEnable ? '' : css`\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n`}\r\n        `;\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        margin-top: 1px;\r\n        width: 100%;\r\n        background-color: #c1cdd4;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\nconst _ParamDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n        margin: 1px;\r\n        background-color: #070707;\r\n        ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n        `;\r\nconst _ParamItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        width: 29px;\r\n        background-color: #dddddd;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\n\r\nconst _ValueForm = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 24px;\r\n        /* margin: 5px 0 0 0; */\r\n        text-align: left;\r\n        background-color: #ececec;\r\n\r\n        & * {\r\n            display: inline-block;\r\n            box-sizing: border-box;\r\n            vertical-align: top;\r\n    }\r\n        & input:nth-child(1) {\r\n            background-color: #dddddd;\r\n            width: 60px;\r\n            height: calc(100% - 4px);\r\n            margin: 2px 0 0 0;\r\n            border: 1px solid #9b9b9b;\r\n            border-radius: 4px;\r\n    }\r\n        & input:nth-child(2) {\r\n            margin-left: 5px;\r\n            background-color: #f00;\r\n            width: calc(100% - 70px);\r\n            height: 100%;\r\n    }\r\n        `;","import styled, { css } from \"styled-components\";\r\n\r\nconst JUDGE_INFO_LIST: {\r\n    value: number, label: string\r\n}[] = [\r\n        { value: -2, label: '-/8' },\r\n        { value: -1, label: '-/16' },\r\n        { value: 0, label: '±0' },\r\n        { value: 1, label: '+/16' },\r\n        { value: 2, label: '+/8' }\r\n    ];\r\n\r\nexport const MinuteForm = (props: {\r\n    isHead: boolean;\r\n    value: number;\r\n    setValue: (value: number) => void;\r\n}) => {\r\n\r\n    const rateMinus = props.value >= 0 ? 0 : Math.abs(props.value) * 50;\r\n    const ratePlus = props.value <= 0 ? 0 : Math.abs(props.value) * 50;\r\n\r\n    const createJudgeItem = (key: number, value: number, label: string) => {\r\n        const isActive = props.value === value;\r\n        return (\r\n            <_JudgeItem key={key} isActive={isActive} onClick={() => props.setValue(value)} >\r\n                {!isActive ? '' : label}\r\n            </_JudgeItem>\r\n        )\r\n    }\r\n    const isRed = Math.abs(props.value) === 1;\r\n\r\n    const JudgeJsxList = JUDGE_INFO_LIST.map((judge, i) => {\r\n        return createJudgeItem(i, judge.value, judge.label);\r\n    });\r\n\r\n    return (\r\n        <_Wrap isHead={props.isHead}>\r\n            <_View>\r\n                <_ViewFrame isLeft={true} isRed={isRed} rate={!props.isHead ? rateMinus : ratePlus}><div /></_ViewFrame>\r\n                <_ViewFrame isLeft={false} isRed={isRed} rate={!props.isHead ? ratePlus : rateMinus}><div /></_ViewFrame>\r\n            </_View>\r\n            <_Judge>{!props.isHead ? JudgeJsxList : JudgeJsxList.reverse()}</_Judge>\r\n        </_Wrap>\r\n    );\r\n};\r\n\r\nexport default MinuteForm;\r\n\r\nconst _Wrap = styled.div<{\r\n    isHead: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #bfd380;\r\n    text-align: left;\r\n`;\r\nconst _Judge = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 9;\r\n`;\r\n\r\nconst _JudgeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(20% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    background-color: #0000001a;\r\n    /* border: 1px solid #4d4d4d91; */\r\n    border-radius: 4px;\r\n    ${props => !props.isActive ? '' : css`\r\n        border: 1px solid #c00000c5;\r\n    `}\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    /* opacity: 0.15; */\r\n    &:hover {\r\n        background-color: #ffffff24;\r\n    }\r\n`;\r\nconst _View = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    /* position: absolute;\r\n    top: 0;\r\n    left: 0; */\r\n    z-index: 8;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ViewFrame = styled.div<{\r\n    isRed: boolean;\r\n    isLeft: boolean;\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 16px;\r\n    margin-top: 7px;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n\r\n    & div {\r\n        position: absolute;\r\n        top: 0;\r\n        height: 100%;\r\n        width: ${props => props.rate}%;\r\n        ${props => props.isRed ? css`\r\n            background: linear-gradient(to right, #0066ff, #7691a3);\r\n        ` : css`\r\n            background: linear-gradient(to left, #ff0000, #a37676);\r\n        `}\r\n        ${props => props.isLeft ? css`\r\n            right: 0;\r\n            border-radius: 10px 0 0 10px;\r\n        ` : css`\r\n            left: 0;\r\n            border-radius: 0 10px 10px 0;\r\n        `}\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\nimport MinuteForm from \"./minuteForm\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\n\r\n/**\r\n * コードブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i}\r\n                isExist={isExist}\r\n                isActive={detail.beatLen === i + 1}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    data.chordList = data.chordList.slice();\r\n                    detail.beatLen = (i + 1);\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.DEGREE_ALL.forEach((degree, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(degree);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(degree);\r\n        const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n        const isDiatonic = degree != null && scaleIndexies.includes(degree.index);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={isDiatonic}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || degree == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = degree == null ? null : { ...degree };\r\n                    if (degree == null) {\r\n                        detail.symbolKey = 'major';\r\n                    }\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n\r\n                    // キャッシュの更新\r\n                    const root = detail.root as TheoryUtil.DegreeProps;\r\n                    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                    [chordCache.chordFullName, chordCache.structList] =\r\n                        BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = degree == null ? null : { ...degree };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n\r\n                        // キャッシュの更新\r\n                        const root = detail.root as TheoryUtil.DegreeProps;\r\n                        const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                        [chordCache.chordFullName, chordCache.structList] =\r\n                            BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                        dispatcher.score.setScoreState(state);\r\n                    }\r\n                }}\r\n            >\r\n                {degree == null ? '-' : <>\r\n                    {TheoryUtil.getDegreeRoot(degree)} ({TheoryUtil.getRootName(degree, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n\r\n                    // キャッシュの更新\r\n                    const root = detail.root as TheoryUtil.DegreeProps;\r\n                    [chordCache.chordFullName, chordCache.structList] =\r\n                        BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    /**\r\n     * シンコペーションの入力フォームを生成するコールバック\r\n     * @param isHead 頭対象フラグ（falseの場合後ろが対象）\r\n     * @returns JSX\r\n     */\r\n    const createMinuteForm = (isHead: boolean): JSX.Element => {\r\n        const minute = detail.minute;\r\n        const [value, setValue]: [number, (value: number) => void] = isHead ? [\r\n            minute.head,\r\n            (value: number) => {\r\n                // minute.head = value;\r\n                // dispatcher.score.setScoreData(store.scoreData);\r\n                const adjust = value - minute.head;\r\n                dispatcher.score.incrementMinuteValRelation(false, adjust);\r\n            }\r\n        ] : [\r\n            minute.tail,\r\n            (value: number) => {\r\n                // minute.tail = value;\r\n                // dispatcher.score.setScoreData(store.scoreData);\r\n                const adjust = value - minute.tail;\r\n                dispatcher.score.incrementMinuteValRelation(true, adjust);\r\n            }\r\n        ];\r\n        return <MinuteForm value={value} setValue={setValue} isHead={isHead} />\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_CategoryLabel>{'Beat length'}</_CategoryLabel>\r\n                <_BeatDiv>\r\n                    {beatItemsJsx}\r\n                </_BeatDiv>\r\n                <_Minute>\r\n                    <_CategoryLabel>{'Minute head'}</_CategoryLabel>\r\n                    {createMinuteForm(true)}\r\n                    {/* <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                    <_CategoryLabel>{'Minute tail'}</_CategoryLabel>\r\n                    {createMinuteForm(false)}\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    {/* <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_RootDiv>\r\n                    {rootItemsJsx}\r\n                </_RootDiv>\r\n                <_SymbolDiv\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_SymbolDiv>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 100px; */\r\n    text-align: left;\r\n    background-color: #979797;\r\n`;\r\n\r\nconst _BeatDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 3px;\r\n        width: calc(100% - 6px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isActive ? '' : css`\r\n            /* border: solid 1px #fff; */\r\n        `}\r\n        box-sizing: border-box;\r\n        border-radius: 6px;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    margin-top: 5px;\r\n    width: 100%;\r\n    /* height: 360px; */\r\n    text-align: left;\r\n    /* background-color: #000000; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _RootDiv = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    margin: 0 0 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #e6e6e6; */\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #90bbcc;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #d1c521b8;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    color: #616161;\r\n    ${props => !props.isDiatonic ? '' : css`color: #ffffff;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #99999940;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #cc6363b8;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #6374ccb8;`}\r\n    }\r\n`;\r\n\r\nconst _SymbolDiv = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 93px);\r\n    margin: 0 1px 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    background-color: #a1cc90;\r\n    ${props => !props.isActive ? '' : css`background-color: #d1c521b8;`}\r\n    color: #fff;\r\n    ${props => !props.isDiatonic ? '' : css`color: #fff;`}\r\n    /* & span {\r\n        color: #f000;\r\n    } */\r\n    &:hover {\r\n        background-color: #dddddd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #cc6363b8;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/score/cacheUtil\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const update = () => {\r\n        data.chordList = data.chordList.slice();\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const scaleItemJsxList: JSX.Element[] = TheoryUtil.SCALE_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? TheoryUtil.KEY12_MAJOR_SCALE_LIST : TheoryUtil.KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n    const rateItemJsxList: JSX.Element[] = TheoryUtil.BEAT_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.beatSignature === item} onClick={() => {\r\n                detail.beatSignature = item as BeatSignature;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            {SideFormStyles.createNumberForm(detail.bpm, true, (e) => {\r\n                detail.bpm = e.currentTarget.valueAsNumber;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }, 30, 220, 1)}\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 50%;\r\n    margin: 1px 0 0 0;\r\n\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 100%;\r\n    margin: 1px 0 0 0;\r\n    \r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    margin: 1px 0 0 0;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../../utils/dummyUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        DummyUtil.SECTION_CATEGORY.forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        const splitList = detail.labelName.split(' ');\r\n        DummyUtil.SECTION_NO.forEach((item) => {\r\n            const isActive = splitList[splitList.length - 1] === item.toString();\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(`${splitList[0]} ${item}`);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_SelectDiv>\r\n                <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n                <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n            </_SelectDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #b89b9b; */\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _SelectDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    background-color: #acacac;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(60% - 4px);\r\n    margin: 0 2px 0 2px;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(40% - 2px);\r\n    margin: 0 2px 0 0;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #6182b4; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #61b4b0; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormAlter from \"./sideFormAlter\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst HarmSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'alter': return <SideFormAlter />;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useEffect, useMemo, useRef } from \"react\";\r\n\r\n/**\r\n * ピアノの鍵盤を描画するユーティリティ\r\n */\r\nnamespace PianoViewer {\r\n\r\n    export type UIParam = {\r\n        width: number;\r\n        height: number;\r\n        wKeyNum: number;\r\n        sideMargin?: number;\r\n        topMargin?: number;\r\n        bottomMargin?: number;\r\n        scaleColor?: string;\r\n        nonScaleColor?: string;\r\n    };\r\n\r\n    export const Component = (props: {\r\n        uiParam: UIParam;\r\n        uses: number[];\r\n        scaleList: number[];\r\n    }) => {\r\n        const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n        const SIDE_MARGIN = props.uiParam.sideMargin ?? 8;\r\n        const TOP_MARGIN = props.uiParam.topMargin ?? 4;\r\n        const BOTTOM_MARGIN = props.uiParam.bottomMargin ?? 4;\r\n        const SCALE_COLOR = props.uiParam.scaleColor ?? '#fc5e5e88';\r\n        const NON_SCALE_COLOR = props.uiParam.scaleColor ?? '#fcd75e87';\r\n\r\n        useEffect(() => {\r\n            // console.log(props.uses);\r\n            const ctx = (canvasRef.current as HTMLCanvasElement).getContext('2d') as CanvasRenderingContext2D;\r\n\r\n            /** 線形グラデーションを設定する */\r\n            const setLinierGradient = (x0: number, y0: number, x1: number, y1: number, stops: {\r\n                offset: number, color: string\r\n            }[]) => {\r\n                const gradColor = ctx.createLinearGradient(x0, y0, x1, y1);\r\n                stops.forEach(stop => {\r\n                    gradColor.addColorStop(stop.offset, stop.color);\r\n                });\r\n                ctx.fillStyle = gradColor;\r\n            };\r\n\r\n            // 背景\r\n            setLinierGradient(0, 0, 0, props.uiParam.height, [\r\n                {offset: 0, color: '#727272'},\r\n                {offset: 0.5, color: '#000000'},\r\n                {offset: 1, color: '#727272'},\r\n            ]);\r\n            ctx.fillRect(0, 0, props.uiParam.width, props.uiParam.height);\r\n\r\n            const FACT_WIDTH = props.uiParam.width - SIDE_MARGIN * 2;\r\n            const FACT_HEIGHT = props.uiParam.height - (TOP_MARGIN + BOTTOM_MARGIN);\r\n            const wMargin = 2;\r\n            const WHITE_KEY_INTERVAL = FACT_WIDTH / props.uiParam.wKeyNum;\r\n\r\n            /**\r\n             * 鍵盤を走査し白鍵ごとに処理を実行する\r\n             * @param doSomething 実行する処理\r\n             */\r\n            const runWhiteKeyCallback = (\r\n                doSomething: (i: number, keyIndex: number, wLeft: number, wTop: number, wWidth: number, wHeight: number) => void\r\n            ) => {\r\n                let keyIndex = 0;\r\n                for (let i = 0; i < props.uiParam.wKeyNum; i++) {\r\n                    const wLeft = SIDE_MARGIN + i * WHITE_KEY_INTERVAL;\r\n                    const wTop = TOP_MARGIN;\r\n                    const wWidth = WHITE_KEY_INTERVAL - wMargin;\r\n                    const wHeight = FACT_HEIGHT * 0.9;\r\n                    doSomething(i, keyIndex, wLeft, wTop, wWidth, wHeight);\r\n\r\n                    keyIndex++;\r\n                    if ([0, 1, 3, 4, 5].includes(i % 7)) keyIndex++;\r\n                }\r\n            }\r\n\r\n            // 白鍵の描画\r\n            runWhiteKeyCallback((i: number, keyIndex: number, wLeft: number, wTop: number, wWidth: number, wHeight: number) => {\r\n\r\n                // トップ\r\n                setLinierGradient(wLeft, wTop, wLeft, wTop + wHeight, [\r\n                    {offset: 0, color: '#c0c0c0'},\r\n                    {offset: 0.4, color: '#e2e2e2'},\r\n                    {offset: 1, color: '#ffffff'},\r\n                ]);\r\n                ctx.fillRect(wLeft, wTop, wWidth, wHeight);\r\n\r\n                // 正面\r\n                ctx.fillStyle = '#c7c7c7';\r\n                ctx.fillRect(wLeft, wTop + wHeight, wWidth, FACT_HEIGHT * 0.1);\r\n\r\n                // フォーカス\r\n                if (props.uses.includes(keyIndex)) {\r\n                    ctx.fillStyle = props.scaleList.includes(keyIndex % 12) ? SCALE_COLOR : NON_SCALE_COLOR;\r\n                    ctx.fillRect(wLeft, wTop, wWidth, wHeight + FACT_HEIGHT * 0.1);\r\n                }\r\n            });\r\n\r\n            // 黒鍵の描画\r\n            runWhiteKeyCallback((i: number, keyIndex: number, wLeft: number, wTop: number, wWidth: number, wHeight: number) => {\r\n                if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                    const bTop = wTop;\r\n                    const bWidth = WHITE_KEY_INTERVAL * 0.6;\r\n                    const bLeft = wLeft + WHITE_KEY_INTERVAL - wMargin / 2 - bWidth / 2;\r\n                    const bHeight = wHeight * 0.7;\r\n                    const bHeightT = bHeight * 0.9;\r\n                    const bHeightF = bHeight * 0.1;\r\n\r\n                    setLinierGradient(bLeft, bTop, bLeft + bWidth, bTop, [\r\n                        {offset: 0, color: '#030303'},\r\n                        {offset: 0.5, color: '#adadad'},\r\n                        {offset: 1, color: '#030303'},\r\n                    ]);\r\n                    ctx.fillRect(bLeft, bTop, bWidth, bHeightT);\r\n\r\n                    // 重ね塗り\r\n                    setLinierGradient(bLeft, bTop, bLeft, bTop + bHeightT, [\r\n                        {offset: 0, color: '#03030334'},\r\n                        {offset: 0.4, color: '#03030361'},\r\n                        {offset: 1, color: '#000000'},\r\n                    ]);\r\n                    ctx.fillRect(bLeft, bTop, bWidth, bHeightT);\r\n\r\n                    // 正面\r\n                    setLinierGradient(bLeft, bTop + bHeightT, bLeft, bTop + bHeight, [\r\n                        {offset: 0, color: '#727272'},\r\n                        {offset: 1, color: '#000000'},\r\n                    ]);\r\n                    ctx.fillRect(bLeft, bTop + bHeightT, bWidth, bHeightF);\r\n\r\n                    // フォーカス\r\n                    if (props.uses.includes(keyIndex + 1)) {\r\n                        ctx.fillStyle = props.scaleList.includes((keyIndex + 1) % 12) ? SCALE_COLOR : NON_SCALE_COLOR;\r\n                        ctx.fillRect(bLeft, bTop, bWidth, bHeight);\r\n                    }\r\n\r\n                    // 影\r\n                    setLinierGradient(bLeft, bTop + bHeight, bLeft, bTop + bHeight + bHeight * 0.2, [\r\n                        {offset: 0, color: '#0000004e'},\r\n                        {offset: 1, color: '#00000001'},\r\n                    ]);\r\n                    ctx.fillRect(bLeft, bTop + bHeight, bWidth, bHeight * 0.2);\r\n                }\r\n            });\r\n\r\n            ctx.save();\r\n        }, [props.uses]);\r\n\r\n        return (\r\n            <canvas ref={canvasRef} width={props.uiParam.width} height={props.uiParam.height} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default PianoViewer;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../../../../../redux/store/score/scoreCache\";\r\nimport PianoViewer from \"../../../../../utils/pianoViewer\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\n\r\nconst StructViewer = (props: {\r\n    cache: ScoreCache.Element;\r\n    structList: BackingState.StructInfo[];\r\n}) => {\r\n\r\n    const cache = props.cache;\r\n    const structList = props.structList;\r\n    const indexList = structList.map(struct => struct.soundIndex + struct.adjustOctave * 12);\r\n    const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n    const scaleList = scaleIndexies.map(value => (cache.keyIndex + value) % 12);\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap isUse={indexList.length > 0}>\r\n            <PianoViewer.Component\r\n                uiParam={{ width: 380, height: 80, wKeyNum: 14 }}\r\n                uses={indexList}\r\n                scaleList={scaleList}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default StructViewer;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternDetail = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    /** 基準となるベロシティ */\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cell = layer.table[channelIndex][pattern.lenIndex];\r\n    const baseVel = layer.velocityList[pattern.lenIndex];\r\n    const timing = (cell == null || cell.timing == undefined) ? 0 : cell.timing;\r\n    const velAdj = (cell == null || cell.velAdj == undefined) ? 0 : cell.velAdj;\r\n\r\n    return (<_Wrap>\r\n        {\r\n            // ノーツが設定されていない場合は何も表示しない\r\n            cell == null ? <></> : (<>\r\n                <_DelayDiv>\r\n                    <_Label>delay</_Label>\r\n                    <_TimingValue type=\"range\" min={-10} max={10} step={1} value={timing} onChange={e => {\r\n                        cell.timing = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_DelayDiv>\r\n                <_VelocityDiv>\r\n                    <_Label>velocity</_Label>\r\n                    <_VelFrame isFocus={false}>\r\n                        <_VelItem value={baseVel} isEdit={false}/>\r\n                    </_VelFrame>\r\n                    <_VelFrame isFocus={store.scoreState.keySwitch.sustainMode}>\r\n                        <_VelItem value={baseVel + velAdj} isEdit={velAdj != 0} />\r\n                    </_VelFrame>\r\n                    {/* <_Value type=\"range\" min={-10} max={10} step={1} value={velAdj} onChange={e => {\r\n                        cell.velAdj = Number(e.target.value);\r\n                        update();\r\n                    }} /> */}\r\n                </_VelocityDiv>\r\n            </>)\r\n        }\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternDetail;\r\n\r\nconst VEL_DIV_WIDTH = 180;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    line-height: 18px;\r\n    margin-top: 14px;\r\n    margin-left: 5px;\r\n    width: 80px;\r\n    background-color: #868686;\r\n    color: #e7e7e7;\r\n    border: 1px solid #616161;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DelayDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - ${VEL_DIV_WIDTH + 1}px);\r\n    height: 100%;\r\n    background-color: #9c9c9c;\r\n`;\r\n\r\nconst _TimingValue = styled.input<{\r\n}>`\r\n    display: inline-block;\r\n    outline: none;\r\n    margin: 20px 0 0 8px;\r\n    width: calc(100% - 100px);\r\n    height: 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VelocityDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${VEL_DIV_WIDTH}px;\r\n    height: 100%;\r\n    margin-left: 1px;\r\n    /* background-color: #9a2020; */\r\n`;\r\n\r\nconst _VelFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 46px;\r\n    height: 100%;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffffff17;\r\n    `}\r\n    /* background-color: #63a0a1;\r\n    border-radius: 20px; */\r\n`;\r\n\r\nconst _VelItem = styled.div<{\r\n    value: number;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 5px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #ddc35cae;\r\n    `}\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate * adjustRate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {itemJsxList}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternPedal = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    // 左手のレイヤー時のみ固定表示\r\n    const layer = pattern.layers[0];\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n\r\n    let cur: BackingState.PedalAction = 'off';\r\n    pattern.pedalActs.forEach((pedal, i) => {\r\n        const isActive = pattern.layerIndex === 0 && pattern.lenIndex === i;\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n        let isUse = false;\r\n        const prev = cur;\r\n        if (prev === 'change') {\r\n            cur = 'on';\r\n        }\r\n        if (pedal != null) {\r\n            isUse = true;\r\n            cur = pedal;\r\n        }\r\n        itemJsxList.push(\r\n            <_Column key={i} rate={rate} isActive={isActive} isUse={isUse} onClick={() => {\r\n                if (prev === 'off') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'on'; break;\r\n                        case 'on': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'on') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = 'change'; break;\r\n                        case 'change': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'change') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                }\r\n                // 終端までnullで更新\r\n                if (i < pattern.pedalActs.length - 1) {\r\n                    for (let j = i + 1; j < pattern.pedalActs.length; j++) {\r\n                        pattern.pedalActs[j] = null;\r\n                    }\r\n                }\r\n                update();\r\n            }}><div><_Item action={cur} /></div></_Column>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternPedal;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n    /* background-color: #4e4e4e; */\r\n`;\r\n\r\n\r\nconst _Column = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #00635eac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #179483ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    white-space: normal;\r\n\r\n    &>div {\r\n        display: inline-block;\r\n        width: 10px;\r\n        height: calc(100% - 2px);\r\n        background-color: #ffffffa0;\r\n        border-radius: 6px;\r\n        margin: 1px 0;\r\n        ${props => props.isUse ? '' : css`\r\n            background-color: #ffffff2f;\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    action: BackingState.PedalAction;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 14px;\r\n    border: 1px solid #9c9c9c;\r\n    ${props => {\r\n        switch (props.action) {\r\n            case 'off': return css`\r\n                margin-top: 0;\r\n                background-color: #271db8;\r\n            `;\r\n            case 'change': return css`\r\n                margin-top: 15px;\r\n                background-color: #f3d631;\r\n            `;\r\n            case 'on': return css`\r\n                margin-top: 30px;\r\n                background-color: #e03030;\r\n            `;\r\n        }\r\n    }}\r\n    box-sizing: border-box;\r\n    border-radius: 6px;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n    const curLayer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n    const layerJsxList = useMemo(() => {\r\n\r\n        const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n        pattern.layers.forEach((layer, j) => {\r\n\r\n            const jsxLsit: JSX.Element[] = [];\r\n            for (let i = 0; i < channelCount; i++) {\r\n                const notesJsxLsit: JSX.Element[] = [];\r\n\r\n                layer.noteDivList.forEach((note, k) => {\r\n                    // データ上は下から数えるため、表示のループは逆回転する\r\n                    const channelIndex = (channelCount - 1) - i;\r\n                    const isActive = pattern.layerIndex === j && pattern.lenIndex === k;\r\n                    const cell = layer.table[channelIndex][k];\r\n                    const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                    const isUse = cell != null;\r\n                    // 前面にあるレイヤーのみエラー判定をする\r\n                    const isError = pattern.layerIndex !== j ? false :\r\n                        isUse && BackingUtil.checkOverlapBackLayer(pattern.layers, j, channelIndex, k);\r\n                    const isEdit = isActive && pattern.channelIndex === i;\r\n                    let rate = note.rate * adjustRate;\r\n                    if (note.isDot) rate /= 1.5;\r\n                    if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n                    let viewSignal: BackingState.NoteSignal | null = null;\r\n                    if (cell != null) {\r\n                        viewSignal = cell.signal;\r\n                        if (k > 0) {\r\n                            const prevCell = layer.table[channelIndex][k - 1];\r\n                            if (prevCell != null && prevCell.signal === 't') {\r\n                                viewSignal = 't';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const hasStaccato = () => {\r\n                        const search = layer.table.find((record) => {\r\n                            const cell = record[k];\r\n                            if (cell != null && cell.signal === 's') return cell;\r\n                        });\r\n                        return search != undefined;\r\n                    }\r\n                    notesJsxLsit.push(\r\n                        <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                            <_State\r\n                                // isUse={isUse}\r\n                                isError={isError}\r\n                                signal={viewSignal}\r\n                                isBack={pattern.layerIndex !== j}\r\n                                // クリック\r\n                                onClick={() => {\r\n                                    if (cell == null) {\r\n                                        // 同列にスタッカートがある場合、スタッカートを設定\r\n                                        const signal = !hasStaccato() ? 'n' : 's';\r\n                                        setNotesStatus({ signal, timing: 0, velAdj: 0 });\r\n                                    } else {\r\n                                        setNotesStatus(null);\r\n                                    }\r\n                                    curLayer.table = curLayer.table.slice();\r\n                                    update();\r\n                                    dispatcher.backing.updateErrorState();\r\n                                }}\r\n                                // 右クリック\r\n                                onContextMenu={() => {\r\n                                    pattern.channelIndex = i;\r\n                                    pattern.lenIndex = k;\r\n                                    update();\r\n                                }}\r\n                            />\r\n                        </_Notes>\r\n                    );\r\n                });\r\n                jsxLsit.push(\r\n                    <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                        {notesJsxLsit}\r\n                    </_Record>\r\n                );\r\n            }\r\n            layerJsxList[j] = jsxLsit;\r\n        });\r\n        return layerJsxList;\r\n    }, [\r\n        pattern.channels, pattern.layerIndex, pattern.lenIndex,\r\n        curLayer.noteDivList, curLayer.table, pattern.channelIndex\r\n    ]);\r\n\r\n    // 選択中のレイヤーを表に表示する\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    // isUse: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => props.signal == null ? '' : css<{\r\n    isBack: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n}>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        ${props => props.signal !== 's' ? '' : css`\r\n            border-radius: 8px;\r\n            background: linear-gradient(to bottom, #009e0d, #02fc49, #009e0d);\r\n        `}\r\n        ${props => props.signal !== 't' ? '' : css`\r\n            height: calc(100% - 8px);\r\n            margin: 4px 0 0 1px;\r\n            background: linear-gradient(to bottom, #9e4c00, #fc6a02, #9e4c00);\r\n        `}\r\n        // エラーあり\r\n        ${props => !props.isError ? '' : css`\r\n            opacity: 0.5;\r\n        `}\r\n        // 裏面のレイヤー\r\n        ${props => !props.isBack ? '' : css`\r\n            background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.5;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => props.signal == null ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternVelocity = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.velocityList.forEach((vel, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} >\r\n                <_Value value={vel} />\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternVelocity;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #001763ac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #173494ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Value = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 6px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    /* background-color: #5cceddaf; */\r\n    background: linear-gradient(to right, #00949e, #26dcf4, #00949e);\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternDetail from \"./patternDetail\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternPedal from \"./patternPedal\";\r\nimport PatternTable from \"./patternTable\";\r\nimport PatternVelocity from \"./patternVelocity\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const divs = layer.noteDivList;\r\n    const limitLen = BackingUtil.getLimitLen(chordInfo.beatLen, chordInfo.minute, chordInfo.init.beatSignature);\r\n    const useTotalLen = BackingUtil.getUsingLenFromDivs(divs, chordInfo.init.beatSignature);\r\n    const isLenOverError = 0 <= limitLen - useTotalLen;\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const viewRate = NOTES_1BAR_WIDTH / 4;\r\n\r\n    // メモリの数を算出\r\n    let memoriCount = chordInfo.beatLen * beatProps.beatMemoriCount;\r\n    memoriCount += chordInfo.minute.head + chordInfo.minute.tail;\r\n\r\n    const barMemoriCount = beatProps.beatMemoriCount === 4 ? 16 : 24;\r\n    const memoriWidth = NOTES_1BAR_WIDTH / barMemoriCount;\r\n    // メモリJSXの生成\r\n    const memoriJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < memoriCount + 1; i++) {\r\n        const pos = i;\r\n        let bean: { thickness: number, height: number, color: string } = { thickness: 1, height: 10, color: '#555' };\r\n        if (beatProps.beatMemoriCount === 4) {\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        } else {\r\n            switch (true) {\r\n                case pos % 24 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 6 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        }\r\n        memoriJsxList.push(\r\n            <_Memori\r\n                key={memoriJsxList.length}\r\n                width={memoriWidth}\r\n                height={bean.height}\r\n                color={bean.color}\r\n                thickness={bean.thickness}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n                <_MemoriList>{memoriJsxList}</_MemoriList>\r\n                {isLenOverError ? (\r\n                    <_ChordLenLine pos={limitLen * viewRate} />\r\n                ) : (\r\n                    // 定義した拍を超えた場合のみ表示\r\n                    <_OverCover pos={limitLen * viewRate} width={(useTotalLen - limitLen) * viewRate} />\r\n                )}\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n            {pattern.channelIndex === -1 ?\r\n                // ベロシティorペダル情報を表示\r\n                (pattern.mode === 'velocity' ? <PatternVelocity /> : <PatternPedal />) :\r\n                // セルごとの詳細情報を表示\r\n                <PatternDetail />\r\n            }\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\nconst _MemoriList = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    thickness: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.thickness}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _OverCover = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: ${props => props.width}px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #f8000053;\r\n    pointer-events: none;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;\r\n\r\nconst _ChordLenLine = styled.div<{\r\n    pos: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: 4px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #ffffffc7;\r\n`;","import { useContext } from \"react\";\r\nimport { Player } from \"soundfont-player\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    soundfont: Player | null;\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n    const channelCount = pattern.channels.length;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildVoicsFromTable(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length + 1);\r\n        pattern.channelIndex = -1;\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildVoicsFromTable(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length - 1);\r\n        pattern.channelIndex = -1;\r\n        update();\r\n    }\r\n\r\n    const preview = () => {\r\n        if (props.soundfont != null) {\r\n            props.soundfont.play(props.soundFullName, 0, { duration: 1 });\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap isError={props.soundFullName === '-'}>\r\n            <_Struct onClick={preview}>{props.soundFullName}</_Struct>\r\n            <_Option isEnable={channelCount > 1} onClick={deleteRecord}>-</_Option>\r\n            <_Option isEnable={channelCount < BackingUtil.CHANNEL_MAX} onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ff0000c3;\r\n    `}\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)<{\r\n    isEnable: boolean;\r\n}>`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../../base/design/styles\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n    // const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    const layerJsxList: JSX.Element[] = [];\r\n\r\n    if (state.pattern == null) return <></>;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channels = pattern.channels;\r\n    channels.forEach((channel, i) => {\r\n        let name = '-';\r\n        if (channel.octave !== -1) {\r\n            const structInfo = chordInfo.structList[channel.structIndex];\r\n            const soundIndex = structInfo.soundIndex;\r\n            const octave = channel.octave + structInfo.adjustOctave;\r\n            const keyList = !structInfo.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\r\n            name = keyList[soundIndex % 12] + octave;\r\n        }\r\n        channelJsxList.push(\r\n            <ChannelItem key={i}\r\n                soundfont={store.instruments.harmonyFont}\r\n                index={i}\r\n                soundFullName={name}\r\n            />\r\n        );\r\n    });\r\n\r\n    pattern.layers.forEach((layer, i) => {\r\n        const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\r\n        layerJsxList.push(\r\n            <_LayerItem key={i} isActive={pattern.layerIndex === i}\r\n                onClick={() => {\r\n                    if (i !== pattern.layerIndex) {\r\n                        dispatcher.backing.switchLayer();\r\n                    }\r\n                }}\r\n            >{labelName}</_LayerItem>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        <_Header>\r\n            {layerJsxList}\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n            <_ModeItem isActive={pattern.mode === 'velocity'}\r\n                onClick={() => {\r\n                    pattern.mode = 'velocity';\r\n                    dispatcher.backing.setState(state);\r\n                }}\r\n            >Velocity</_ModeItem>\r\n            <_ModeItem isActive={pattern.mode === 'pedal'}\r\n                onClick={() => {\r\n                    pattern.mode = 'pedal';\r\n                    dispatcher.backing.setState(state);\r\n                }}\r\n            >Pedal</_ModeItem>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #929292;\r\n`;\r\n\r\nconst _LayerItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #dad600;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997;\r\n`;\r\n\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #4fe419;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternOptions = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        layer.noteDivList = layer.noteDivList.slice();\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, isEnable: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={isEnable} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, true, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const isPermit3ren = ['2/4', '4/4', '4/3'].includes(chordInfo.init.beatSignature);\r\n    const isPermitDot = BackingUtil.isPermitDot(cur);\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.buildVoicsFromTable(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot,\r\n            isPermitDot,\r\n            () => {\r\n                cur.isDot = !cur.isDot;\r\n                update();\r\n            })}\r\n        {createItem('1/3', cur.div3 === 1,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 1) cur.div3 = 0;\r\n                else cur.div3 = 1;\r\n                update();\r\n            })}\r\n        {createItem('2/3', cur.div3 === 2,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 2) cur.div3 = 0;\r\n                else cur.div3 = 2;\r\n                update();\r\n            })}\r\n    </_WrapLen>;\r\n\r\n    /** テーブルの行 */\r\n    const tableRecord = layer.table[channelIndex];\r\n    const curCell = pattern.channelIndex === -1 ? null :\r\n        tableRecord[pattern.lenIndex];\r\n\r\n    const isEnableTai = () => {\r\n        if(tableRecord == null) return false;\r\n\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 's') return cell;\r\n        });\r\n        const hasStaccato = search != undefined;\r\n        let isExistNext = false;\r\n        if(pattern.lenIndex < tableRecord.length - 1 && tableRecord[pattern.lenIndex + 1] != null) {\r\n            isExistNext = true;\r\n        }\r\n        return !hasStaccato && isExistNext;\r\n    };\r\n\r\n    const isNormalRow = () => {\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 't') return cell;\r\n        });\r\n        return search == undefined;\r\n    };\r\n\r\n    const setRowStaccato = (isSet: boolean) => {\r\n        layer.table.forEach((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null) {\r\n                cell.signal = isSet ? 's' : 'n';\r\n            }\r\n        });\r\n    }\r\n\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', curCell == null,\r\n            true,\r\n            () => {\r\n                tableRecord[pattern.lenIndex] = null;\r\n                update();\r\n            })}\r\n        {createItem('□', curCell != null && curCell.signal === 'n',\r\n            true,\r\n            () => {\r\n                if (curCell != null) {\r\n                    if(curCell.signal === 's') {\r\n                        setRowStaccato(false);\r\n                    } else {\r\n                        curCell.signal = 'n';\r\n                    }\r\n                } else {\r\n                    tableRecord[pattern.lenIndex] = { signal: 'n', timing: 0, velAdj: 0 };\r\n                }\r\n                update();\r\n            })}\r\n        {createItem('・', curCell != null && curCell.signal === 's',\r\n            curCell != null && isNormalRow(),\r\n            () => {\r\n                setRowStaccato(true);\r\n                update();\r\n            })}\r\n        {createItem('⁀', curCell != null && curCell.signal === 't',\r\n            isEnableTai(),\r\n            () => {\r\n                const status = curCell as BackingState.NoteStatus;\r\n                status.signal = 't'\r\n                update();\r\n            })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternOptions;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternOptions from \"./patternOptions\";\r\n\r\n/**\r\n * バッキングエディタ画面のパターン部分\r\n * @returns コンポーネント\r\n */\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    /**\r\n     * USEスイッチ押下時の処理\r\n     */\r\n    const useSwitchAction = () => {\r\n        if (!isUsePattern) {\r\n            const table = state.voicingTable as boolean[][];\r\n            const voicingStructs = BackingUtil.buildVoicsFromTable(table);\r\n            const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n            state.pattern = {\r\n                layerIndex: 0,\r\n                lenIndex: 0,\r\n                channelIndex: -1,\r\n                channels,\r\n                isUsePedal: false,\r\n                mode: \"velocity\",\r\n                pedalActs: [null],\r\n                layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n            } as BackingState.Pattern;\r\n            update();\r\n        } else {\r\n            state.pattern = null;\r\n            update();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* ヘッダー部分（パターン利用スイッチ） */}\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button\r\n                        isActive={isUsePattern}\r\n                        onClick={useSwitchAction}\r\n                    >Use</_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternOptions /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #e00000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #ff0000;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n    vertical-align: top;\r\n`;","\r\nimport { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\n/**\r\n * ボイシングを定義するテーブルのコンポーネント\r\n * @returns コンポーネント\r\n */\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const table = state.voicingTable;\r\n    const pattern = state.pattern;\r\n    // 選択可能なチャンネル数\r\n    const channelLimitNum = pattern == null ? BackingUtil.OCTAVE_NUM * BackingUtil.STRUCT_NUM : pattern.channels.length;\r\n\r\n    // return useMemo(() => {\r\n\r\n    const chordInfo = state.chordInfo;\r\n    const structList = chordInfo.structList;\r\n\r\n    const rowJsxList: JSX.Element[] = [];\r\n\r\n    /** 選択数 */\r\n    let selectCount = 0;\r\n    // オクターブ（テーブル横）のループ\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const cellJsxList: JSX.Element[] = [];\r\n        // 構成音（テーブル縦）のループ\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = structList.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n            if (isSelected) {\r\n                selectCount++;\r\n            }\r\n\r\n            /** セルに表示する音程 */\r\n            const getSoundFullName = (): string => {\r\n                if (!isEnable) return '';\r\n                // const relation = symbol.structs[j];\r\n                // const interval = TheoryUtil.IntervalRelationProps[relation];\r\n                // const structIndex = (chordRootIndex + interval) % 12;\r\n                const sound = structList[j];\r\n                const octave = i + sound.adjustOctave;\r\n\r\n                const key12List = !sound.isFlat ?\r\n                    TheoryUtil.KEY12_SHARP_LIST :\r\n                    TheoryUtil.KEY12_FLAT_LIST\r\n                    ;\r\n                return `${key12List[sound.soundIndex]}${octave}`;\r\n            }\r\n\r\n            const name = getSoundFullName();\r\n            cellJsxList.push(\r\n                <_Cell key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    isOver={isSelected && selectCount > channelLimitNum}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: BackingState.VoicParam[] = BackingUtil.buildVoicsFromTable(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                        dispatcher.backing.updateErrorState();\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.harmonyFont;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_Cell>\r\n            );\r\n        }\r\n        rowJsxList.push(\r\n            <_TableRow key={i}>\r\n                {cellJsxList}\r\n            </_TableRow>\r\n        );\r\n    }\r\n\r\n    /** 構成音リストのJSX */\r\n    const structJsxList = structList.map((sound, i) => {\r\n        const key12List = !sound.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\r\n\r\n        /** 表示する構成音の関係性 */\r\n        const getStructName = (): string => {\r\n            if (sound.relation == null) {\r\n                // オンコードの場合\r\n                return 'On';\r\n            } else if (sound.relation === 'p1') {\r\n                // ルート音の場合\r\n                return 'Root';\r\n            }\r\n            return sound.relation;\r\n        }\r\n        return (\r\n            <_StructItem key={i}\r\n                isOnChord={sound.relation == null}\r\n            >{getStructName()} [{key12List[sound.soundIndex]}]</_StructItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* コードの基本情報 */}\r\n            <_InfoDiv>\r\n                <_InfoItem>\r\n                    <_Label>Chord</_Label>\r\n                    <_Value>{chordInfo.chordFullName}</_Value>\r\n                </_InfoItem>\r\n                <_InfoItem>\r\n                    <_Label>Attr</_Label>\r\n                    {/* <_Value>{symbol.attr}</_Value> */}\r\n                    <_Value>{chordInfo.symbolAttr}</_Value>\r\n                </_InfoItem>\r\n            </_InfoDiv>\r\n            <_EditorDiv>\r\n                {/* 構成音の情報 */}\r\n                <_StructDiv>\r\n                    {structJsxList}\r\n                </_StructDiv>\r\n                {/* ボイシングのテーブル */}\r\n                <_TableDiv>{rowJsxList}</_TableDiv>\r\n            </_EditorDiv>\r\n        </_Wrap>\r\n    );\r\n    // }, [table, channelLimitNum]);\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _InfoItem = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #89dada; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 8px);\r\n    width: 80px;\r\n    background-color: #69bcdd;\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #026c86;\r\n    border: 1px solid #303030;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 6px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #cccccc; */\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst _EditorDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _StructDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _StructItem = styled.div<{\r\n    isOnChord: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    color: white;\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    ${props => !props.isOnChord ? '' : css`\r\n        /* color: #e00000; */\r\n        background: linear-gradient(to bottom, #104f8a, #7699db, #104f8a);\r\n    `}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _TableDiv = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _TableRow = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Cell = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n    isOver: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    border: 1px solid #215e53;\r\n    border-radius: 4px;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #e5e747;\r\n    `}\r\n    ${props => !props.isOver ? '' : css`\r\n        background-color: #c40000;\r\n        color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #b9bb3f;\r\n        `}\r\n        ${props => !props.isOver ? '' : css`\r\n            background-color: #bb3f3f;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport { ChordBacking } from \"../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\n/**\r\n * バッキングエディタ画面\r\n * @returns コンポーネント\r\n */\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    const [source, setSource] = useState('');\r\n\r\n    useEffect(() => {\r\n        console.log('backing start');\r\n    }, []);\r\n\r\n    const syncSource = () => {\r\n        const chordBacking = {\r\n            voicingList: BackingUtil.getVoicingListFromTable(state.voicingTable),\r\n            pattern: state.pattern == null ? null : BackingUtil.buildPatternProps(state.pattern)\r\n        }\r\n        setSource(JSON.stringify(chordBacking));\r\n    };\r\n\r\n    return (\r\n        <_Frame>\r\n            <_LabelFrame>\r\n                <_Label\r\n                    isActive={state.tabIndex === 0}\r\n                    onClick={() => {\r\n                        dispatcher.backing.setState({ ...state, tabIndex: 0 });\r\n                    }}\r\n                ><div>Editor</div></_Label>\r\n                <_Label\r\n                    isActive={state.tabIndex === 1}\r\n                    onClick={() => {\r\n                        syncSource();\r\n                        dispatcher.backing.setState({ ...state, tabIndex: 1 });\r\n                    }}\r\n                ><div>Source</div></_Label>\r\n            </_LabelFrame>\r\n            <_Wrap>\r\n                {state.tabIndex === 0 ? (<>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                    {/* ボイシングエディタ部分 */}\r\n                    <VoicingChooser />\r\n                    {/* パターンエディタ部分 */}\r\n                    <PatternFrame />\r\n                    {/* フッター部分 */}\r\n                    <_FooterDiv>\r\n                        {/* プレビュー再生 */}\r\n                        <_Button isEnable={!state.hasError} onClick={() => {\r\n\r\n                            if (!state.isPreview) {\r\n                                dispatcher.backing.testBacking();\r\n                            } else {\r\n                                BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                            }\r\n                        }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\r\n                        {/* 編集を取り消しして閉じる */}\r\n                        <_Button isEnable={!state.isPreview} onClick={() => {\r\n                            state.closeAction(state, false);\r\n                        }}>Cancel</_Button>\r\n                        {/* 編集を反映して閉じる */}\r\n                        <_Button isEnable={!state.isPreview} onClick={() => {\r\n                            state.closeAction(state, true);\r\n                        }}>Update</_Button>\r\n                    </_FooterDiv>\r\n                </>) : (<>\r\n                    <_SourceFrame>\r\n                        <_TextArea value={source} onChange={(e) => {\r\n                            setSource(e.target.value);\r\n                        }} />\r\n                    </_SourceFrame>\r\n                    {/* フッター部分 */}\r\n                    <_FooterDiv>\r\n                        <_Button isEnable={true} onClick={() => {\r\n                            syncSource();\r\n                        }}>Reset</_Button>\r\n                        <_Button isEnable={true} onClick={() => {\r\n                            try {\r\n                                const chordBacking = JSON.parse(source) as ChordBacking;\r\n                                const voicingTable = BackingUtil.getInitVoicingTable(chordBacking.voicingList, state.chordInfo.structList.length);\r\n                                const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, chordBacking.pattern);\r\n                                dispatcher.backing.setState({ ...state, voicingTable, pattern, tabIndex: 0 });\r\n                            } catch {\r\n                                alert('error');\r\n                                dispatcher.backing.setState({ ...state, tabIndex: 0 });\r\n                            }\r\n                        }}>Aplly</_Button>\r\n                    </_FooterDiv>\r\n                </>)}\r\n            </_Wrap>\r\n        </_Frame>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Frame = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 630px;\r\n    background-color: #a1a1a1;\r\n`;\r\n\r\nconst _LabelFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 30px;\r\n    padding: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n    /* background-color: #f17379; */\r\n`;\r\nconst _Label = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: block;\r\n    width: 25px;\r\n    height: 100px;\r\n    background-color: #99afb3;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b8dae0;\r\n    `}\r\n    border-left: 1px solid #5a5a5a;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    margin: 2px 0 0 2px;\r\n    border-radius: 8px 0 0 8px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    \r\n    & div {\r\n        width: 100px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #b2bcbe;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #b8dae0;\r\n        `}\r\n    }\r\n`;\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n    /* background-color: #bd4646; */\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;\r\n\r\nconst _SourceFrame = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n    height: 400px;\r\n    background-color: #b4aeae;\r\n`;\r\n\r\nconst _TextArea = styled.textarea`\r\n    display: inline-block;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: #0a0038;\r\n    background-color: #b7bcd3;\r\n    resize: none;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    box-sizing: border-box;\r\n    margin: 4px 0 0 4px;\r\n    outline: none;\r\n`;","import { useContext, useEffect, useMemo, useState, useCallback } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport { ChordBacking, DetailChord } from \"../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport LibraryUtil from \"../../utils/LibraryUtil\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nnamespace PresetSelectorFrame {\r\n\r\n    export type CachePorps = {\r\n        field: Field;\r\n        presetList: LibraryUtil.PresetItemProps[];\r\n        applyAction: () => void;\r\n        invalidate: () => void;\r\n    };\r\n\r\n    type TargetProps = {\r\n        index: number;\r\n        condition: LibraryUtil.Condition;\r\n    }\r\n\r\n    type Field = {\r\n        listIndex: number;\r\n    }\r\n    /**\r\n     * プリセットセレクタ画面\r\n     * @returns コンポーネント\r\n     */\r\n    export const Component = () => {\r\n\r\n        const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n        const backing = store.backingState as BackingState.Editor;\r\n\r\n        const [field, setField] = useState<Field>({\r\n            listIndex: 0,\r\n        });\r\n\r\n        const chordList = store.scoreData.chordList;\r\n        const state = store.scoreState;\r\n        const [minIndex, maxIndex] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n\r\n        const systemState = store.systemState;\r\n        const themaList = systemState.themaList;\r\n        const thema = themaList[systemState.activeThemaIndex];\r\n\r\n        useEffect(() => {\r\n            console.log('preset start');\r\n\r\n            return () => {\r\n                console.log('preset end');\r\n\r\n                // キャッシュを削除\r\n                dispatcher.system.setState({\r\n                    ...store.systemState,\r\n                    cache: null\r\n                });\r\n            }\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            // キーボード操作のためのキャッシュを作成\r\n            const inputCache: CachePorps = {\r\n                field,\r\n                presetList,\r\n                applyAction,\r\n                invalidate,\r\n            };\r\n            dispatcher.system.setState({\r\n                ...store.systemState,\r\n                cache: inputCache\r\n            });\r\n        }, []);\r\n\r\n        const invalidate = () => {\r\n            setField({ ...field });\r\n        };\r\n\r\n        /**\r\n         * プレビュー再生を行う\r\n         */\r\n        const testBacking = (index: number) => {\r\n            console.log(backing.isPreview);\r\n            if (!backing.isPreview) {\r\n                const applyItem = presetList[field.listIndex].applyList[index];\r\n                const chordBacking = applyItem.backing as ChordBacking;\r\n                const symbol = TheoryUtil.getSymbolFromKey(applyItem.condition.symbolKey) as TheoryUtil.SymbolParams;\r\n                backing.chordInfo = {\r\n                    ...backing.chordInfo,\r\n                    beatLen: applyItem.condition.beatLen,\r\n                    minute: {\r\n                        head: applyItem.condition.head,\r\n                        tail: applyItem.condition.tail,\r\n                    },\r\n                    // structList: symbol.structs,\r\n                    // init: {\r\n\r\n                    // }\r\n                }\r\n                const voicingTable = BackingUtil.getInitVoicingTable(chordBacking.voicingList, symbol.structs.length);\r\n                const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, chordBacking.pattern);\r\n                dispatcher.backing.setState({ ...backing, voicingTable, pattern });\r\n                dispatcher.backing.testBacking();\r\n            } else {\r\n                BackingUtil.stopPreview(store, backing, dispatcher, store.reserveTasks);\r\n            }\r\n        };\r\n\r\n        const [targetList, presetList]: [TargetProps[], LibraryUtil.PresetItemProps[]] = useMemo(() => {\r\n\r\n            const targetList: TargetProps[] = [];\r\n            const conditionList: LibraryUtil.Condition[] = [];\r\n            chordList.forEach((element, i) => {\r\n\r\n                if (i >= minIndex && i <= maxIndex && element.type === 'chord') {\r\n                    const chord = element.detail as DetailChord;\r\n                    if (chord.root == null) return 1;\r\n\r\n                    const cache = state.elementCacheList[i];\r\n                    // console.log(`degreeIndex: ${chord.root.index}, scaleIndex: ${cache.keyIndex}`);\r\n                    const rootIndex = (chord.root.index + cache.keyIndex) % 12;\r\n\r\n                    const condition: LibraryUtil.Condition = {\r\n                        beatLen: chord.beatLen,\r\n                        head: chord.minute.head,\r\n                        tail: chord.minute.tail,\r\n                        rootIndex,\r\n                        symbolKey: chord.symbolKey,\r\n                    };\r\n                    // 同じ条件がリストに存在しない場合のみ追加する\r\n                    if (conditionList.find(con => {\r\n                        return con.beatLen === condition.beatLen && con.head === condition.head && con.tail === condition.tail &&\r\n                            con.rootIndex === condition.rootIndex && con.symbolKey === condition.symbolKey;\r\n                    }) == undefined) {\r\n                        conditionList.push(condition);\r\n                    }\r\n                    targetList.push({\r\n                        index: i,\r\n                        condition\r\n                    });\r\n                }\r\n            });\r\n\r\n            return [targetList, LibraryUtil.getPresetList(thema, conditionList)];\r\n        }, []);\r\n\r\n\r\n        const [presetJsxList, applyJsxList, rate]: [JSX.Element[], JSX.Element[], number] = useMemo(() => {\r\n            if (presetList.length === 0) return [[], [], 0];\r\n            const focusPreset = presetList[field.listIndex];\r\n            return [\r\n                presetList.map((preset, i) => {\r\n\r\n                    return (\r\n                        <_PresetItem key={i}\r\n                            isFocus={field.listIndex === i}\r\n                            onClick={() => {\r\n                                field.listIndex = i;\r\n                                invalidate();\r\n                            }}\r\n                        ><_Preset>{preset.dispName}</_Preset> <_Method>[{preset.method}]</_Method></_PresetItem>\r\n                    );\r\n                }),\r\n                focusPreset.applyList.map((target, i) => {\r\n                    const con = target.condition;\r\n                    const sust = `[${con.beatLen}* ${con.tail},${con.tail}]`;\r\n                    const chordName = TheoryUtil.KEY12_SHARP_LIST[con.rootIndex] + TheoryUtil.getSymbolFromKey(con.symbolKey)?.name;\r\n                    const isMatch = target.backing != null;\r\n                    return (\r\n                        <_ApplyItem\r\n                            key={i}\r\n                            isMatch={isMatch}\r\n                            onClick={() => {\r\n                                if (isMatch) {\r\n                                    testBacking(i);\r\n                                }\r\n                            }}\r\n                        ><_Result isMatch={isMatch}>{isMatch ? 'OK' : 'NG'}</_Result> {sust} {chordName}</_ApplyItem>\r\n                    );\r\n                }),\r\n                focusPreset.applyList.filter(apply => {\r\n                    return apply.backing != null;\r\n                }).length / focusPreset.applyList.length\r\n            ];\r\n        }, [field.listIndex]);\r\n\r\n        const applyAction = useCallback(() => {\r\n\r\n            const applyList = presetList[field.listIndex].applyList;\r\n\r\n            targetList.forEach((target) => {\r\n                const chordElement = chordList[target.index].detail as DetailChord;\r\n                const apply = applyList.find(apply => {\r\n                    return LibraryUtil.matchCondition(apply.condition, target.condition);\r\n                });\r\n                if (apply != undefined && apply.backing != null) {\r\n                    chordElement.backing = apply.backing;\r\n                }\r\n            });\r\n\r\n            dispatcher.score.closeLibraryWnd();\r\n        }, [field.listIndex]);\r\n\r\n        return (\r\n            <_Wrap>\r\n                <_BodyDiv>\r\n                    {presetList.length === 0 ? (\r\n                        <_Message>Preset does not exist...</_Message>\r\n                    ) : (<>\r\n                        <_ListDiv>\r\n                            <_Header>Preset</_Header>\r\n                            {presetJsxList}\r\n                        </_ListDiv>\r\n                        <_ListDiv>\r\n                            <_Header>Apply</_Header>\r\n                            <_Sum>Matching Rate: <_Rate>{(rate * 100).toFixed(1)}%</_Rate></_Sum>\r\n                            {applyJsxList}\r\n                        </_ListDiv>\r\n                    </>)}\r\n                </_BodyDiv>\r\n                <_FooterDiv>\r\n                    {/* 選択を反映せずに閉じる */}\r\n                    <_Button isEnable={true} onClick={() => {\r\n                        dispatcher.score.closeLibraryWnd();\r\n                    }}>Cancel</_Button>\r\n                    {/* 選択を反映して閉じる */}\r\n                    <_Button\r\n                        isEnable={presetList.length > 0}\r\n                        onClick={applyAction}\r\n                    >Apply</_Button>\r\n                </_FooterDiv>\r\n            </_Wrap>\r\n        )\r\n    }\r\n}\r\nexport default PresetSelectorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 630px;\r\n    height: 400px;\r\n    background-color: #d4d5ca;\r\n    border: 1px solid #121212;\r\n    box-sizing: border-box;\r\n`;\r\nconst FOOTER_WIDTH = 30;\r\nconst _BodyDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${FOOTER_WIDTH}px);\r\n    /* background-color: #4d5e53; */\r\n`;\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${FOOTER_WIDTH}px;\r\n    background-color: #c7c7c7;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #4d5e53; */\r\n    /* border: 1px solid #121212; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    background-color: #3c4a99c3;\r\n    box-sizing: border-box;\r\n    border: 1px solid #f0f0f0;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    background-color: #d1dad4c8;\r\n    box-sizing: border-box;\r\n    border: 1px solid #676767;\r\n    color: #000786;\r\n    text-align: left;\r\n    padding-left: 4px;\r\n`;\r\n\r\nconst _PresetItem = styled(_Item) <{\r\n    isFocus: boolean;\r\n}>`\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #e6dd5bc5;\r\n    `}\r\n`;\r\n\r\nconst _Method = styled.span`\r\n    color: #00054b86;\r\n`;\r\nconst _Preset = styled.span`\r\n    color: #b90000;\r\n`;\r\n\r\nconst _ApplyItem = styled(_Item) <{\r\n    isMatch: boolean;\r\n}>`\r\n    background-color: #79b98f;\r\n    ${props => !props.isMatch ? '' : css`\r\n        background-color: #7eda5a;\r\n        &:hover {\r\n            background-color: #abeb92da;\r\n        }\r\n    `}\r\n\r\n    \r\n`;\r\nconst _Result = styled.span<{\r\n    isMatch: boolean;\r\n}>`\r\n    ${props => !props.isMatch ? '' : css`\r\n        color: #e61426;\r\n    `}\r\n`;\r\n\r\nconst _Sum = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 100%;\r\n    /* height: 32px; */\r\n    background-color: #eaecca;\r\n    box-sizing: border-box;\r\n    border: 1px solid #676767;\r\n    color: #6e6f91;\r\n    text-align: left;\r\n    padding-left: 4px;\r\n`;\r\nconst _Rate = styled.span<{\r\n}>`\r\n    color: #be003f;\r\n`;\r\n\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    /* background-color: #d1dad4c8; */\r\n    color: #a10000;\r\n    text-align: left;\r\n    padding-left: 4px;\r\n`;","import { useContext, useEffect, useMemo, useState, useCallback } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport { BackingPatternProps, DetailChord, VoicingProps } from \"../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport LibraryUtil from \"../../utils/LibraryUtil\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport ThemaUtil from \"../custom/backing/themaUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nnamespace ThemaSelectorFrame {\r\n\r\n    export type CachePorps = {\r\n        patternList: LibraryUtil.PattItemProps[];\r\n        voicingList: LibraryUtil.VoicItemProps[];\r\n        field: Field;\r\n        invalidate: () => void;\r\n        // updateBacking: () => void;\r\n        testBacking: () => void;\r\n        isPermitTest: () => boolean;\r\n        isPreview: boolean;\r\n    };\r\n\r\n    type Field = {\r\n        focusSide: number;\r\n        pattIndex: number;\r\n        voicIndex: number;\r\n    }\r\n\r\n    /**\r\n     * ライブラリセレクタ画面\r\n     * @returns コンポーネント\r\n     */\r\n    export const Component = () => {\r\n\r\n        const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n        const [field, setField] = useState<Field>({\r\n            focusSide: 0,\r\n            pattIndex: 0,\r\n            voicIndex: 0\r\n        });\r\n\r\n        const invalidate = () => {\r\n            setField({ ...field });\r\n        };\r\n\r\n        const chordList = store.scoreData.chordList;\r\n        const systemState = store.systemState;\r\n        const focusIndex = store.scoreState.focusIndex;\r\n        const chord = chordList[focusIndex].detail as DetailChord;\r\n        const state = store.scoreState;\r\n        const cache = state.elementCacheList[state.focusIndex];\r\n        const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n        const structList = chordCache.structList;\r\n\r\n        const degreeRootIndex = chord.root?.index as number;\r\n        const rootIndex = (degreeRootIndex + cache.keyIndex) % 12;\r\n\r\n        const backing = store.backingState as BackingState.Editor;\r\n        const themaList = systemState.themaList;\r\n        const thema = themaList[systemState.activeThemaIndex];\r\n\r\n        useEffect(() => {\r\n            console.log('thema start');\r\n            console.log(thema);\r\n\r\n            return () => {\r\n                console.log('thema end');\r\n\r\n                // キャッシュを削除\r\n                dispatcher.system.setState({\r\n                    ...store.systemState,\r\n                    cache: null\r\n                });\r\n            }\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            // キーボード操作のためのキャッシュを作成\r\n            const inputCache: CachePorps = {\r\n                patternList,\r\n                voicingList,\r\n                field,\r\n                invalidate,\r\n                // updateBacking,\r\n                testBacking,\r\n                isPermitTest,\r\n                isPreview: false\r\n            };\r\n            dispatcher.system.setState({\r\n                ...store.systemState,\r\n                cache: inputCache\r\n            });\r\n        }, []);\r\n\r\n\r\n        useEffect(() => {\r\n            updateBacking();\r\n            const cache = store.systemState.cache as CachePorps;\r\n            if (cache != null) {\r\n                // cache.updateBacking = updateBacking;\r\n                cache.testBacking = testBacking;\r\n                cache.isPermitTest = isPermitTest;\r\n                cache.isPreview = backing.isPreview;\r\n            }\r\n        }, [field, backing.isPreview]);\r\n\r\n        /**\r\n         * バッキングの状態を更新する\r\n         */\r\n        const updateBacking = () => {\r\n            if (isPermitTest()) {\r\n                const patternProps = patternList[field.pattIndex].source;\r\n                const voicingProps = voicingList.filter(voic=>{\r\n                    return LibraryUtil.acceptVoic(voic, patternList, field.pattIndex);\r\n                })[field.voicIndex].source;\r\n                const voicingTable = BackingUtil.getInitVoicingTable(voicingProps, structList.length);\r\n                const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, patternProps);\r\n                dispatcher.backing.setState({ ...backing, voicingTable, pattern });\r\n            } else {\r\n                dispatcher.backing.setState({ ...backing, voicingTable: [], pattern: null });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * プレビュー再生を行う\r\n         */\r\n        const testBacking = useCallback(() => {\r\n            console.log('test');\r\n            if (!backing.isPreview) {\r\n                dispatcher.backing.testBacking();\r\n            } else {\r\n                BackingUtil.stopPreview(store, backing, dispatcher, store.reserveTasks);\r\n            }\r\n        }, [store]);\r\n\r\n        /**\r\n         * プレビュー再生が可能な状態か判断する\r\n         * @returns プレビュー再生が可能か\r\n         */\r\n        const isPermitTest = () => {\r\n            return field.voicIndex > 0;\r\n        }\r\n\r\n        const [patternList, voicingList] = useMemo(() => {\r\n\r\n            const patternList: LibraryUtil.PattItemProps[] = [];\r\n            const voicingList: LibraryUtil.VoicItemProps[] = [];\r\n\r\n            // 空のボイシングを先頭に追加\r\n            voicingList.push({ pattIdx: -1, dispName: 'none', source: [] });\r\n\r\n            //検索条件\r\n            const condition: LibraryUtil.Condition = {\r\n                symbolKey: chord.symbolKey,\r\n                rootIndex,\r\n                beatLen: chord.beatLen,\r\n                head: chord.minute.head,\r\n                tail: chord.minute.tail\r\n            };\r\n\r\n            // シンプルバッキング\r\n            const sustMet = thema.meths[0];\r\n            LibraryUtil.searchSustMeth(sustMet, condition, null, (voic: ThemaUtil.LevelVoic) => {\r\n                const dispName = voic.source.map(v => `[${v.octave}-${v.struct}]`).join(',');\r\n                voicingList.push({\r\n                    pattIdx: patternList.length,\r\n                    dispName,\r\n                    source: voic.source\r\n                });\r\n            });\r\n            patternList.push({\r\n                dispName: 'none',\r\n                source: null,\r\n                key: -1,\r\n                refer: -1\r\n            });\r\n\r\n            // パターンバッキング\r\n            const pattMet = thema.meths[1];\r\n            LibraryUtil.searchPattMeth(pattMet, condition, null, (patt: ThemaUtil.LevelPatt) => {\r\n                patternList.push({\r\n                    dispName: patt.pattName,\r\n                    source: patt.source,\r\n                    key: patt.key,\r\n                    refer: patt.refer\r\n                });\r\n            }, (voic: ThemaUtil.LevelVoic) => {\r\n                // const dispName = voic.source.map(v => `[${v.octave}-${v.struct}]`).join(',');\r\n                const soundList = voic.source.map(v => {\r\n                    const struct = structList[v.struct];\r\n                    return TheoryUtil.KEY12_SHARP_LIST[struct.soundIndex] + (v.octave + struct.adjustOctave);\r\n                });\r\n                voicingList.push({\r\n                    pattIdx: patternList.length,\r\n                    dispName: soundList.join('-'),\r\n                    source: voic.source\r\n                });\r\n            }, () => { });\r\n            return [patternList, voicingList];\r\n        }, []);\r\n\r\n        const [pattJsxList, voicJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n            return [\r\n                // パターンのJSXリスト\r\n                patternList.map((patt, i) => {\r\n                    return (\r\n                        <_Item key={i}\r\n                            isFocus={field.pattIndex === i}\r\n                            isNone={i === 0}\r\n                            onClick={() => {\r\n                                field.focusSide = 0;\r\n                                field.pattIndex = i;\r\n                                // パターンが変わったらボイシングの選択をリセット\r\n                                if (field.pattIndex !== i) {\r\n                                    field.voicIndex = 0;\r\n                                }\r\n                                invalidate();\r\n                                updateBacking();\r\n                            }}\r\n                        >{patt.dispName}</_Item>\r\n                    )\r\n                }),\r\n                // ボイシングのJSXリスト\r\n                voicingList.filter((voic) => {\r\n                    return LibraryUtil.acceptVoic(voic, patternList, field.pattIndex);\r\n                }).map((voic, i): JSX.Element => {\r\n                    const soundList = voic.source.map((v, i) => {\r\n                        const struct = structList[v.struct];\r\n                        const fullName = TheoryUtil.KEY12_SHARP_LIST[struct.soundIndex] + (v.octave + struct.adjustOctave);\r\n                        return (<span key={i}>\r\n                            <_Struct\r\n                                interval={LibraryUtil.getDistinctionFromRelate(struct)}\r\n                            >{fullName}</_Struct>{i < voic.source.length - 1 ? '-' : ''}\r\n                        </span>);\r\n                    });\r\n                    const dispLabel: JSX.Element = i === 0 ? <>none</> : <>{soundList}</>;\r\n                    return (\r\n                        <_Item key={i}\r\n                            isFocus={field.voicIndex === i}\r\n                            isNone={i === 0}\r\n                            onClick={() => {\r\n                                field.focusSide = 1;\r\n                                field.voicIndex = i;\r\n                                invalidate();\r\n                                updateBacking();\r\n                            }}\r\n                        >{dispLabel}</_Item>\r\n                    )\r\n                })\r\n            ];\r\n        }, [field.pattIndex, field.voicIndex]);\r\n\r\n        return (\r\n            <_Wrap>\r\n                <_PrevireBrind isUse={backing.isPreview} />\r\n                <_BodyDiv>\r\n                    <_ListDiv isFocus={field.focusSide === 0}>\r\n                        <_Header>Pattern</_Header>\r\n                        {pattJsxList}\r\n                    </_ListDiv>\r\n                    <_ListDiv isFocus={field.focusSide === 1}>\r\n                        <_Header>Voicing</_Header>\r\n                        {voicJsxList}\r\n                    </_ListDiv>\r\n                </_BodyDiv>\r\n                <_FooterDiv>\r\n                    {/* プレビュー再生 */}\r\n                    <_Button isEnable={isPermitTest()} onClick={testBacking}>\r\n                        {!backing?.isPreview ? 'Test' : 'Stop'}\r\n                    </_Button>\r\n                    {/* 選択を反映せずに閉じる */}\r\n                    <_Button isEnable={!backing.isPreview} onClick={() => {\r\n                        dispatcher.score.closeLibraryWnd();\r\n                    }}>Cancel</_Button>\r\n                    {/* 選択を反映して閉じる */}\r\n                    <_Button isEnable={!backing.isPreview} onClick={() => {\r\n                        const pattern = patternList[field.pattIndex];\r\n                        const voicing = voicingList.filter(voic=>{\r\n                            return LibraryUtil.acceptVoic(voic, patternList, field.pattIndex);\r\n                        })[field.voicIndex];\r\n                        dispatcher.thema.mappingSelectorToScore(voicing.source, pattern.source);\r\n                        dispatcher.score.closeLibraryWnd();\r\n                    }}>Apply</_Button>\r\n                </_FooterDiv>\r\n            </_Wrap>\r\n        )\r\n    }\r\n}\r\nexport default ThemaSelectorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 630px;\r\n    height: 400px;\r\n    background-color: #d4d5ca;\r\n    border: 1px solid #121212;\r\n    box-sizing: border-box;\r\n`;\r\nconst FOOTER_WIDTH = 30;\r\nconst _BodyDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${FOOTER_WIDTH}px);\r\n    /* background-color: #4d5e53; */\r\n`;\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${FOOTER_WIDTH}px;\r\n    background-color: #c7c7c7;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _ListDiv = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #4d5e53; */\r\n    /* border: 1px solid #121212; */\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffffff45;\r\n        /* border: 1px solid #eb0000; */\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    background-color: #3c4a99c3;\r\n    box-sizing: border-box;\r\n    border: 1px solid #f0f0f0;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\nconst _Item = styled.div<{\r\n    isFocus: boolean;\r\n    isNone: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    background-color: #d1dad4c8;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #e6dd5bc5;\r\n    `}\r\n    box-sizing: border-box;\r\n    border: 1px solid #676767;\r\n    color: #000786;\r\n    ${props => !props.isNone ? '' : css`\r\n        color: #850000;\r\n    `}\r\n    text-align: left;\r\n    padding-left: 4px;\r\n`;\r\nconst _Struct = styled.span<{\r\n    interval: number;\r\n}>`\r\n    color: ${props => {\r\n        switch (props.interval) {\r\n            case 1: return '#960000';\r\n            case 3: return '#000877';\r\n            case 5: return '#007a06';\r\n            case 7: return '#742e00';\r\n            case 9: return '#005e5e';\r\n        }\r\n    }};\r\n`;\r\n\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/score/scoreData\";\r\nimport LibraryUtil from \"../../../../utils/LibraryUtil\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PresetSelectorFrame from \"../../../thema/presetSelectorFrame\";\r\nimport ThemaSelectorFrame from \"../../../thema/themaSelectorFrame\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu !== 'none';\r\n\r\n    const enableState = LibraryUtil.getEnableState(store);\r\n\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {(() => {\r\n                    switch (state.hideMenu) {\r\n                        case 'none': return <></>;\r\n                        case 'backing': return <BackingEditorFrame />\r\n                        case 'library': return <ThemaSelectorFrame.Component />\r\n                        case 'preset': return <PresetSelectorFrame.Component />\r\n                    }\r\n                })()}\r\n                {/* {store.backingState == null ? <></> : <BackingEditorFrame />} */}\r\n            </_Contents>\r\n            <_LabelFrame>\r\n                <_Label\r\n                    isEnable={enableState.isChordElement}\r\n                    isVisible={['backing', 'none'].includes(state.hideMenu)}\r\n                    onClick={() => {\r\n                        if (state.hideMenu === 'none') {\r\n                            dispatcher.backing.openBackingEditor();\r\n                        } else {\r\n                            dispatcher.backing.closeBackingEditor();\r\n                        }\r\n                    }}>\r\n                    <div>Backing</div>\r\n                </_Label>\r\n                <_Label\r\n                    // 複数選択していない場合\r\n                    isEnable={\r\n                        enableState.isUseLib &&\r\n                        enableState.isChordElement &&\r\n                        !enableState.isRangeSelect\r\n                    }\r\n                    isVisible={['library', 'none'].includes(state.hideMenu)}\r\n                    onClick={() => {\r\n                        if (state.hideMenu === 'none') {\r\n                            dispatcher.score.openLibraryWnd(false);\r\n                        } else {\r\n                            dispatcher.score.closeLibraryWnd();\r\n                        }\r\n                    }}>\r\n                    <div>Library</div>\r\n                </_Label>\r\n                <_Label\r\n                    // 複数選択している場合\r\n                    isEnable={enableState.isRangeSelect && enableState.isUseLib}\r\n                    isVisible={['preset', 'none'].includes(state.hideMenu)}\r\n                    onClick={() => {\r\n                        if (state.hideMenu === 'none') {\r\n                            dispatcher.score.openLibraryWnd(true);\r\n                        } else {\r\n                            dispatcher.score.closeLibraryWnd();\r\n                        }\r\n                    }}>\r\n                    <div>Preset</div>\r\n                </_Label>\r\n            </_LabelFrame>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 7;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 8;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '630px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _LabelFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n`;\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n}>`\r\n    display: block;\r\n    width: 25px;\r\n    height: 110px;\r\n    margin-top: 4px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    ${props => props.isVisible ? '' : css`\r\n        opacity: 0;\r\n    `}\r\n    \r\n    & div {\r\n        width: 110px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmClipboard = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    return (\r\n        <_Wrap>\r\n            <_Label>clipboard</_Label>\r\n            <_TypeDiv>\r\n                <_ModeItem isActive={state.cloneBacking != null}>Backing</_ModeItem>\r\n                <_ModeItem isActive={state.copiedElementList != null}>Elements</_ModeItem>\r\n            </_TypeDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmClipboard;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _TypeDiv = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #a8dbb3;\r\n    `}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #8f8f8f;\r\n    border-radius: 2px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst MEMORI_WIDTH = 12;\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        list.push(<_Margin key={list.length} />);\r\n        state.measureCacheList.forEach((cache) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {cache.barCount !== -1 ? <_Bar>{cache.barCount}</_Bar> : ''}\r\n                    {/* {<_Bar>{i}</_Bar>} */}\r\n                </_Memori>\r\n            );\r\n        });\r\n        list.push(<_Margin key={list.length} />);\r\n        return list;\r\n    }, [state.beatCacheList]);\r\n\r\n    const [beatJsxList, minuteJsxList] = useMemo(() => {\r\n        const beatJsxList: JSX.Element[] = [];\r\n        const minuteJsxList: JSX.Element[] = [];\r\n\r\n        const isChordFocus = dataList[focusIndex].type === 'chord';\r\n        const curChordIndex = cacheList[focusIndex].chordIndex;\r\n        // list.push(<_Start key={list.length}/>);\r\n        dataList.forEach((data, i) => {\r\n\r\n            const cache = state.elementCacheList[i];\r\n            if (data.type === 'chord' && Math.abs(cache.chordIndex - curChordIndex) <= 5) {\r\n\r\n                const detail = data.detail as DetailChord;\r\n                const sustain = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                let label = '';\r\n                let type: ItemType = 'ather';\r\n                if (!isChordFocus) {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                } else {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'cur';\r\n                        type = 'cur';\r\n                    } else if (cache.chordIndex === curChordIndex - 1) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                }\r\n\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatMemori = detail.beatLen * beatProps.beatMemoriCount;\r\n                const posMemori = 16 + cache.curTotalMemori;\r\n                beatJsxList.push(\r\n                    <_SustainItem key={beatJsxList.length}\r\n                        type={type}\r\n                        pos={posMemori} sustain={beatMemori + minute}\r\n                    >{label}</_SustainItem>\r\n                );\r\n                minuteJsxList.push(\r\n                    <_BeatItem key={beatJsxList.length}\r\n                        isActive={type === 'cur'}\r\n                        pos={posMemori + detail.minute.head} sustain={beatMemori}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        // list.push(<_Start key={list.length}/>);\r\n        return [beatJsxList, minuteJsxList];\r\n    }, [dataList.length, focusIndex, state.beatCacheList]);\r\n\r\n    const scrollPos = cacheList[focusIndex].curTotalMemori * MEMORI_WIDTH;\r\n    return (\r\n        <_Wrap>\r\n            <_ScrollFrame pos={scrollPos}>\r\n                <_Blocks>\r\n                    <_Beat>\r\n                        {beatJsxList}\r\n                    </_Beat>\r\n                    <_Minute>\r\n                        {minuteJsxList}\r\n                    </_Minute>\r\n                </_Blocks>\r\n                <_Measure>\r\n                    {memoriJsxList}\r\n                </_Measure>\r\n            </_ScrollFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _ScrollFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => -props.pos}px;\r\n    position: absolute;\r\n    height: 100%;\r\n    /* width: 100px;\r\n    background-color: #000; */\r\n    transition: left 0.5s;\r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n`;\r\n\r\ntype ItemType = 'cur' | 'prev' | 'next' | 'ather';\r\nconst _SustainItem = styled.div<{\r\n    pos: number;\r\n    sustain: number;\r\n    type: ItemType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(136, 163, 133);\r\n    ${props => {\r\n        switch (props.type) {\r\n            case 'cur': return css`\r\n                background-color: rgb(218, 107, 134);\r\n                /* color: #ffe551; */\r\n            `;\r\n            case 'prev': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 177, 221);\r\n            `;\r\n            case 'next': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 221, 171);\r\n            `;\r\n            case 'ather': return css`\r\n                background-color: rgb(192, 192, 192);\r\n            `;\r\n        }\r\n    }}\r\n    border-left: solid 1px #000;\r\n    border-top: solid 1px #000;\r\n    border-bottom: solid 1px #000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _BeatItem = styled.div<{\r\n    isActive: boolean;\r\n    pos: number;\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(224, 224, 224);\r\n    border-left: solid 1px #000;\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: rgb(233, 180, 228); */\r\n        /* color: #ffe551; */\r\n    `}\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Margin = styled.div`\r\n    display: inline-block;\r\n    width: ${MEMORI_WIDTH * 16}px;\r\n    height: 100%;\r\n    background-color: #d9ebe7;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${MEMORI_WIDTH}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useState, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmBackingLibrary = () => {\r\n\r\n    const { store,dispatcher } = useContext(GlobalContext);\r\n\r\n    const systemState = store.systemState;\r\n    const list = store.systemState.themaList;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>backing-library</_Label>\r\n            <_Combobox\r\n                value={systemState.activeThemaIndex}\r\n                onChange={(e) => {\r\n                    systemState.activeThemaIndex = Number(e.target.value);\r\n                    dispatcher.system.setState(systemState);\r\n                }}\r\n            >{[<option key={-1} value={-1}>{''}</option>].concat(list.map((thema, i) => {\r\n                const name = thema.themaName;\r\n                return <option key={i} value={i}>{name}</option>\r\n            }))}</_Combobox>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmBackingLibrary;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* vertical-align: top; */\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _Combobox = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    width: 320px;\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 8px;\r\n    font-size: 18px;\r\n    /* line-height: 32px; */\r\n    color: #1100d0;\r\n    border: solid 1px #000;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;\r\n\r\n","import styled from \"styled-components\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useRef, useState } from \"react\";\r\nimport { NoteKeySwitch } from \"./input/noteInput\";\r\nimport HarmSideForm from \"./side/harmSideForm\";\r\nimport StructViewer from \"./info/structViewer2\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport HarmClipboard from \"./initial/harmClipboard\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\nimport HarmBackingLibrary from \"./initial/harmBackingLibrary\";\r\n\r\n/**\r\n * ハーモナイズタブ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const state = store.scoreState;\r\n\r\n    const isMelody = store.scoreState.isMelody;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, harmonize: () => {\r\n                dispatcher.system.setInvalidate({\r\n                    ...store.invalidate, harmoniizeInvalidate: {}\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isMelody) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isMelody]);\r\n\r\n\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const element = store.scoreData.chordList[state.focusIndex];\r\n    \r\n    const timelineJsx = state.elementCacheList.length === 0 ? <></> : <HarmMeasure />;\r\n\r\n    let structViewerJsx = <></>;\r\n    if (state.elementCacheList.length > 0) {\r\n        const scoreCache = state.chordCacheList[cache.chordBlockNo];\r\n        const structList = element.type === 'chord' ? scoreCache.structList : [];\r\n        structViewerJsx = <StructViewer cache={cache} structList={structList} />;\r\n    }\r\n\r\n    /** サイドフォームの活性状態 */\r\n    const sideFormEnable = !state.isPreview && state.hideMenu === 'none';\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_SectionsDiv isEnable={sideFormEnable}><HarmSections /></_SectionsDiv>\r\n            <_Left>\r\n                <_Head isEnable={!state.isPreview}>\r\n                    <HarmClipboard />\r\n                    <HarmBackingLibrary />\r\n                </_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main>\r\n                        <HarmNote />\r\n                    </_Main>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP>{timelineJsx}</_TIMELINE_WRAP>\r\n                    <_INFO_WRAP>{structViewerJsx}</_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right isEnable={sideFormEnable}>\r\n                <HarmSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _SectionsDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH + HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Head = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    position: absolute;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    min-height: 100%;\r\n    vertical-align: top;\r\n    /* overflow: auto; */\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    /* background-color: #ddc2c2; */\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7a270028;\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyTimelineMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            mouse.lock = x;\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        // if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            if (mouse.pos !== x) {\r\n                // console.log(`★ move=== x: ${x}, pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n                mouse.pos = x;\r\n                update();\r\n            }\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            // update();\r\n\r\n            const lock = mouse.lock + refs.measure.scrollLeft;\r\n            const pos = mouse.pos + refs.measure.scrollLeft;\r\n            const notesList = store.scoreData.notesList;\r\n            let start = -1;\r\n            let end = -1;\r\n            for (let i = 0; i < notesList.length; i++) {\r\n                const notes = notesList[i];\r\n                const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                const [head, tail] = lock < pos ? [lock, pos] : [pos, lock];\r\n                if (head <= left && tail >= right) {\r\n                    if (start === -1) start = i;\r\n                } else {\r\n                    if (start !== -1) {\r\n                        end = i - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            if (start !== -1 && end === -1) {\r\n                end = notesList.length - 1;\r\n            }\r\n            state.focusIndex = start;\r\n            state.destIndex = end;\r\n            mouse.lock = -1;\r\n            // console.log(`★ up=== focus: ${state.focusIndex}, dist: ${state.distIndex}`);\r\n            dispatcher.melody.setState(state);\r\n            // const [head, tail] = mouse.lock < x ? [mouse.lock, x] : [x, mouse.lock];\r\n            // const width = tail - head;\r\n            // if (width > 5) {\r\n            //     mouse.width = width;\r\n            //     mouse.lock = -1;\r\n            //     mouse.pos = head;\r\n            //     update();\r\n            //     console.log(`★ up=== pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n            // }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyTimelineMouseOperation;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../redux/store/score/scoreCache\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport MelodyUtil, { getNormalizeLenFromNotes } from \"../../../../utils/melodyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimelineMouseOperation from \"./util/melodyTimelineMouseOperation\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n    update: () => void;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n    const update = props.update;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        state.measureCacheList.forEach(cache => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            // 表示する小節数\r\n            const barCount = cache.barCount;\r\n\r\n            jsxList.push(\r\n                <_Memori\r\n                    key={jsxList.length}\r\n                    beatWidth={beatWidth}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {barCount !== -1 ? <_Bar>{barCount}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [state.beatCacheList, barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        if (state.elementCacheList.length === 0) {\r\n            return jsxList;\r\n        }\r\n        let left = 0;\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                // console.log(state.elementCacheList.length);\r\n                const detail = element.detail as DetailChord;\r\n                const cache = state.elementCacheList[i];\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minuteLen = minute * 0.25;\r\n                const adjustRate = beatProps.beatMemoriCount / 4;\r\n                const width = beatWidth * (detail.beatLen * adjustRate + minuteLen);\r\n\r\n                if (chordRef.current != null) {\r\n                    const scroll = chordRef.current.scrollLeft;\r\n                    if (left + width - scroll >= 0 ||\r\n                        left - scroll <= chordRef.current.clientWidth) {\r\n                        const symbolNmae = TheoryUtil.getSymbolFromKey(detail.symbolKey)?.name;\r\n                        const degreeName = detail.root == null ? '-' :\r\n                            TheoryUtil.getDegreeRoot(detail.root) + symbolNmae;\r\n                        const chordName = detail.root == null ? '-' :\r\n                            TheoryUtil.getRootName(detail.root, init.keyIndex) + symbolNmae;\r\n                        jsxList.push(\r\n                            <_ChordItem key={jsxList.length}\r\n                                left={left}\r\n                                width={width}\r\n                                isActive={element == curChord}\r\n                                onClick={() => {\r\n                                    state.isMelody = false;\r\n                                    state.focusIndex = state.distIndex = i;\r\n                                    dispatcher.score.setScoreState(state);\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                                }}\r\n                            >\r\n                                <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                            </_ChordItem>\r\n                        );\r\n                    }\r\n                }\r\n                left += width;\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_MeasureWrap ref={measureRef}>\r\n            <_MeasureInner\r\n                onMouseDown={e => MelodyTimelineMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseMove={e => MelodyTimelineMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseUp={e => MelodyTimelineMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseLeave={() => {\r\n                    const mouse = store.melodyState.timelineMouse;\r\n                    mouse.pos = -1;\r\n                    mouse.lock = -1;\r\n                    update();\r\n                }}\r\n            >\r\n                {measureJsxList}\r\n                <_MousePos\r\n                    left={mouseMeasurePos * beatWidth * rate}\r\n                    width={beatWidth * rate}\r\n                />\r\n            </_MeasureInner>\r\n        </_MeasureWrap>\r\n    </>);\r\n}\r\n\r\nconst getExtendMeasure = (measureList: ScoreCache.Measure[]): ScoreCache.Measure[] => {\r\n    const list: ScoreCache.Measure[] = [];\r\n\r\n    return list;\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _MeasureWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _MeasureInner = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* width: 100%; */\r\n    left: 0;\r\n    top: 0;\r\n    width: 10000px;\r\n    height: 100%;\r\n    &:hover {\r\n        background-color: #ff00b347;\r\n    }\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.left}px;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    pointer-events: none;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.beatWidth / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + TheoryUtil.IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.melodyFont;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #8f8f8f;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #adadad;\r\n    ${props => !props.isStruct ? '' : css`background-color: #e25d5d;`}\r\n    ${props => !props.isActive ? '' : css<{\r\n        isStruct: boolean;\r\n    }>`\r\n        background-color: #cece60;\r\n        ${props => !props.isStruct ? '' : css`background-color: #e28c45;`}\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #3b3b3b;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/score/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                state.isPreview = true;\r\n                dispatcher.melody.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        const instruments = store.instruments;\r\n                        instruments.melodyFont = soundFontPlayer;\r\n                        dispatcher.score.setInstruments(instruments);\r\n                    }).then(() => {\r\n                        state.isPreview = false;\r\n                        dispatcher.melody.setState(state);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #cacacada;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f7f7f7da;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e4e4e4da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #f7f7f7da;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport { BsPerson } from 'react-icons/bs'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'32'} isDisable={false} isActive={state.quantize === 8} callback={() => {\r\n                    state.quantize = 8;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={![1, 2, 3, 6].includes(state.quantize)} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                        dispatcher.melody.setState(state);\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                        dispatcher.melody.setState(state);\r\n                    }\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                {/* <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} /> */}\r\n                {/* <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} /> */}\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 9 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"guitar\" soundfontInfo={{ name: 'overdriven_guitar', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<BsPerson />} labelName=\"choir\" soundfontInfo={{ name: 'choir_aahs', gain: 6 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, MelodyNotes } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.destIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    const newLen = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.len) !== getNormalizeLenFromNotes(newLen)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.len = newLen;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    const newPos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.pos) !== getNormalizeLenFromNotes(newPos)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.pos = newPos;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.tableMouse;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                //履歴を作成\r\n                state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.melody.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.melody.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/score/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport MelodyUtil, { } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n\r\n        // 選択しているノーツが1つである場合\r\n        const isSingle = state.focusIndex === state.destIndex;\r\n        const mouse = state.tableMouse;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.melody.copyNotes(); break;\r\n                    case 'v': dispatcher.melody.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.melody.allSelect();\r\n                    }\r\n                        break;\r\n                    case 's': dispatcher.score.saveFile(); break;\r\n                    case 'z': dispatcher.melody.undo(); break;\r\n                    case 'y': dispatcher.melody.redo(); break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.melody.incrementCurPitch(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.melody.incrementCurPitch(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveDestFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveDestFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.melody.incrementCurPitch(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.melody.incrementCurPitch(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(false);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(true);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.melody.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.melody.adjustScrollX(); break;\r\n                case 'e': dispatcher.melody.adjustScrollY(); break;\r\n                case 'z': {\r\n                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.melody.firstNotes();\r\n                }\r\n                    break;\r\n                case '0': {\r\n                    state.quantize = 8;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else if([2, 1].includes(state.quantize)) {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.melody.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.melody.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.melody.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.destIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/score/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport CacheUtil from \"../../../../utils/score/cacheUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const scoreState = store.scoreState;\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n    const [invalidate2, setInvalidate2] = useState<{}>({});\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.tableMouse;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n    const refs = store.refs.melody;\r\n\r\n    const barCount = 150;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n    const rate = 1 / store.melodyState.quantize;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isMelody;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, melody: update\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    /**\r\n     * 画面上部のメモリJSXリスト\r\n     * 拍子のキャッシュから作成する\r\n     */\r\n    const measureJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        scoreState.measureCacheList.forEach((cache, i) => {\r\n\r\n            list.push(\r\n                <_Scale key={i} isHead={cache.rate === 4} beatWidth={state.beatWidth} />\r\n            );\r\n        });\r\n        return list;\r\n    }, [scoreState.beatCacheList, barCount]);\r\n\r\n    // const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    /**\r\n     * スケール区間のJSXリスト\r\n     * 背景色のラインを表現\r\n     * 転調でキーが変わる度に追加される\r\n     */\r\n    const scaleDivJsxList = useMemo(() => {\r\n        const divList: JSX.Element[] = [];\r\n        // console.log('**' + scoreState.scaleCacheList.length);\r\n        scoreState.scaleCacheList.forEach((scaleInfo, i) => {\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const scaleJsxList: JSX.Element[] = [];\r\n            for (let j = 0; j < PITCH_MAX; j++) {\r\n                const keyIndex = getKeyIndexFromPitcher(j);\r\n                scaleJsxList.push(\r\n                    <_ScaleLine key={j}\r\n                        isScale={scaleIndexies.includes(keyIndex)}\r\n                        isBase={keyIndex === scaleIndexies[0]}\r\n                    />\r\n                );\r\n            }\r\n\r\n            divList.push(\r\n                <_ScaleList key={i} width={state.beatWidth / 4 * scaleInfo.memoriCnt} isEven={i % 2 === 0}>\r\n                    {scaleJsxList}\r\n                </_ScaleList>\r\n            );\r\n        });\r\n        return divList;\r\n    }, [scoreState.scaleCacheList]);\r\n\r\n    /**\r\n     * 配置するノーツのJSXリスト\r\n     */\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        // let count = 0;\r\n        if (scoreState.scaleCacheList.length === 0) return list;//\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            const normalLeft = getNormalizeLenFromNotes(notes.pos);\r\n            const normalWidth = getNormalizeLenFromNotes(notes.len);\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const notesLeft = normalLeft * state.beatWidth;\r\n                const notesRight = notesLeft + normalWidth * state.beatWidth;\r\n                if (\r\n                    // !state.isPreview &&\r\n                    (notesRight - scroll < 0 || notesLeft - scroll > tableRef.current.clientWidth)\r\n                ) {\r\n                    continue;\r\n                }\r\n            }\r\n            const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n            // count++;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n\r\n            // クオンタイズ\r\n            const unitPos = getMinimumLenUnit(notes.pos);\r\n            const unitLen = getMinimumLenUnit(notes.len);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={normalLeft * state.beatWidth}\r\n                    width={normalWidth * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.melody.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\r\n                        isScale={isScale}\r\n                        isActive={isActive}\r\n                        isPreview={state.isPreview}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // console.log('cnt: ' + count);\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.destIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move, refs.table?.scrollLeft]);\r\n\r\n    /**\r\n     * タイムラインを横にスクロールした際の処理\r\n     */\r\n    const sideScrollAction = () => {\r\n\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const scrollLeft = refs.table.scrollLeft;\r\n            const scrollTop = refs.table.scrollTop;\r\n            refs.measure.scrollTo({ left: scrollLeft });\r\n            refs.chord.scrollTo({ left: scrollLeft });\r\n            refs.pitch.scrollTo({ top: scrollTop });\r\n        }\r\n        update();\r\n    };\r\n\r\n    /**\r\n     * マウスポインタがエリア外に出た際の処理\r\n     */\r\n    const mouseLeaveAction = () => {\r\n        console.log('leave!');\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n        update();\r\n    };\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header isEnable={!state.isPreview}>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                {(() => {\r\n                    const mouse = state.timelineMouse;\r\n                    if (mouse.lock === -1) {\r\n                        return mouse.pos === -1 ? <></> :\r\n                            <_MouseLinePos left={mouse.pos} />\r\n                    } else {\r\n                        const [head, tail] = mouse.lock < mouse.pos ? [mouse.lock, mouse.pos] : [mouse.pos, mouse.lock];\r\n                        const width = tail - head;\r\n                        return <_MouseRange left={head} width={width} />\r\n                    }\r\n                })()}\r\n                {\r\n\r\n                }\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                        update={() => setInvalidate2({})}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef} onScroll={sideScrollAction} >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleDivJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseLeave={mouseLeaveAction}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _MouseLine = css`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    width: 3px;\r\n`;\r\nconst _MouseLinePos = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #15ff00;\r\n`;\r\nconst _MouseLineLock = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #fbff00;\r\n`;\r\n\r\nconst _MouseRange = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    width: ${props => props.width}px;\r\n    background-color: #ffffff8b;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #464545;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n    /* background-color: #70ff7058; */\r\n`;\r\n\r\nconst _ScaleList = styled.div<{\r\n    width: number;\r\n    isEven: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    /* pointer-events: none; */\r\n    background-color: #70ff7021;\r\n    ${props => !props.isEven ? '' : css`\r\n        background-color: #708aff20;\r\n    `}\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #2727275a;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #00a6cf52;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `}\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `}\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb0040;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isPreview: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    border-radius: 15px 0 0 15px;\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    opacity: 0.5;\r\n    ${props => props.isPreview && !props.isActive ? '' : css`    \r\n       opacity: 1;\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    ${props => !(props.isPreview && props.isActive) ? '' : css`\r\n        box-shadow: 0 0 32px 0 #ffffff92;\r\n    `}\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #7a270028;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport Styles, { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport MelodyUtil, { } from \"../../../utils/melodyUtil\";\r\nimport HarmonizeUtil from \"../../../utils/score/harmonizeUtil\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    const isDirect = store.systemState.directScore != undefined;\r\n\r\n    useEffect(() => {\r\n        const info = melody.soundfontInfo;\r\n        if (store.instruments.melodyFont == null && store.instruments.harmonyFont == null) {\r\n            const instruments = store.instruments;\r\n            Soundfont.instrument(new AudioContext(), info.name,\r\n                { gain: info.gain, release: 0.5 }).then((melodyFont) => {\r\n                    // dispatcher.melody.setMelodyFont(soundFontPlayer);\r\n\r\n                    instruments.melodyFont = melodyFont;\r\n                    // acoustic_guitar_steel\r\n                    //bright_acoustic_piano\r\n                    //electric_grand_piano\r\n                    Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\r\n                        { gain: 2, release: 0.5 }).then((harmonyFont) => {\r\n                            // dispatcher.score.setHarmonyFont(soundFontPlayer);\r\n\r\n                            instruments.harmonyFont = harmonyFont;\r\n                            dispatcher.score.setInstruments(instruments);\r\n                        });\r\n                });\r\n        }\r\n\r\n    }, []);\r\n\r\n    const switchMode = () => {\r\n        state.isMelody = !state.isMelody;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isMelody ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isMelody ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isMelody ? () => {\r\n\r\n        if (!state.isPreview) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        } else {\r\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    } : () => {\r\n\r\n        if (!melody.isPreview) {\r\n            dispatcher.melody.previewStart();\r\n        } else {\r\n            MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    }\r\n    /** アンサンブルの切替 */\r\n    const toggleEnsamble = !state.isMelody ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.melody.setState(melody);\r\n    }\r\n\r\n    const playJsx = <_SwitchInner isActive={isPreview}>Play</_SwitchInner>;\r\n    const stopJsx = <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner>;\r\n    const ensambleJsx = <_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner>;\r\n    const soloJsx = <_SwitchInner isActive={isSolo}>Solo</_SwitchInner>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header isEnable={state.hideMenu === 'none'}>\r\n                <_Mode isEnable={!isPreview}>\r\n                    <_ModeItem isActive={!state.isMelody} onClick={() => {\r\n                        if (state.isMelody) switchMode();\r\n                    }}>Harmony</_ModeItem>\r\n                    <_ModeItem isActive={state.isMelody} onClick={() => {\r\n                        if (!state.isMelody) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch isEnable={true} onClick={preview}>{playJsx} / {stopJsx}</_Switch>\r\n                    <_Switch isEnable={!state.isPreview} onClick={toggleEnsamble}>{ensambleJsx} / {soloJsx}</_Switch>\r\n                    <_Button isEnable={!isDirect} onClick={dispatcher.score.saveFile}>Save</_Button>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    const isPermit = !isPreview && state.hideMenu === 'none';\r\n                    if (isPermit) {\r\n                        switch (e.key) {\r\n                            case 'r': switchMode(); break;\r\n                        }\r\n                    }\r\n                }}>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isMelody} />\r\n                    <MelodyFrame isActive={state.isMelody} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _Mode = styled.div<{\r\n    isEnable: boolean\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 150px;\r\n    height: calc(100% - 8px);\r\n    background-color: #cae4e3;\r\n    margin: 4px 0 0 24px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    &:hover {\r\n        background-color: #dceceb\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #e1e4ca;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    &:hover {\r\n        background-color: #eff3cf\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    // { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    // { name: 'Preview', disable: !isAccept, cont: store.scoreData.chordList.length === 0 ? <></> : <PreviewTab data={store.scoreData} /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? TheoryUtil.DEGREE12_FLAT_LIST : TheoryUtil.DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey) as TheoryUtil.SymbolParams;\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    // sampler.releaseAll();\r\n\r\n                    const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = TheoryUtil.IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        // sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                // sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        fetch('assets/sample.lcrt')\r\n            .then(response => response.text()) // (2) レスポンスデータを取得\r\n            .then(data => { // (3)レスポンスデータを処理\r\n\r\n                const thema = JSON.parse(DataUtil.unZip(data));\r\n                const state = store.systemState;\r\n                state.themaList.push(thema);\r\n                dispatcher.system.setState(state);\r\n            });\r\n        fetch('assets/release_note.json')\r\n            .then(response => response.json()) // (2) レスポンスデータを取得\r\n            .then(json => { // (3)レスポンスデータを処理\r\n\r\n                const list = json as NotePorp[];\r\n\r\n                setJsx(list.map((item, i) => {\r\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n                    return (\r\n                        <_Item key={i}>\r\n                            <_Header>v{item.version} ({item.date})</_Header>\r\n                            <_Detail>{record}</_Detail>\r\n                        </_Item>\r\n                    );\r\n                }));\r\n            });\r\n    }, []);\r\n\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [userId, setUserId] = useState('-');\r\n    const [userCount, setUserCount] = useState(0);\r\n\r\n    const [scoreList, setScoreList] = useState<scoreProps[]>([]);\r\n\r\n    const loginProps = store.userEnv.login;\r\n\r\n    useEffect(() => {\r\n        if (store.systemState.directScore == null) {\r\n            countUsers().then(cnt => {\r\n                setUserCount(24 + cnt);\r\n                findAllScore().then((resList) => {\r\n                    setScoreList(resList as scoreProps[]);\r\n                });\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!loginProps) {\r\n            setUserId('');\r\n        } else {\r\n            setUserId(loginProps.id);\r\n        }\r\n    }, [loginProps]);\r\n\r\n    const scoreListJsx = scoreList.map((score, i) => {\r\n        return (\r\n            <_CloudItem key={i} onClick={() => {\r\n                window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n            }}>\r\n                <_Owner>{`${score.owner}`}</_Owner>\r\n                <_CName>{`${score.dispnam}`}</_CName><_CDate>{score.lastmod}</_CDate>\r\n            </_CloudItem>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{scoreList.length} licresia scores have been published.</_MessageRecord>\r\n            <_ListFrame>{scoreListJsx}</_ListFrame>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllScore = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = score.user_seq) as owner, dispnam, lastmod\r\n        FROM scoretbl score\r\n        WHERE share <> 'url'\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${HOME_USER_DIV_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\n\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 30px;\r\n    user-select: text;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ItemnForm = styled.input`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #1a1a1a;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #e9e9e9;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 42px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\nconst _CloudItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    /* height: 60px; */\r\n    border-bottom: 1px solid #888888;\r\n    /* background-color: white; */\r\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    }\r\n`;\r\n\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;","import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst ScoreInfoTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [userId, setUserId] = useState('-');\r\n\r\n    const directScore = store.systemState.directScore;\r\n\r\n    const [owner, name] = directScore == null ? ['-', '-'] : [directScore.owner, directScore.name];\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_Recored>\r\n                <_TitleLabel>Score Data</_TitleLabel>\r\n            </_Recored>\r\n            <_ListInfoDiv isEnable={true}>\r\n                <_Recored>\r\n                    <_ItemnLabel>owner</_ItemnLabel>\r\n                    <_ItemnValue>{owner}</_ItemnValue>\r\n                </_Recored>\r\n                <_Recored>\r\n                    <_ItemnLabel>name</_ItemnLabel>\r\n                    <_ItemnValue>{name}</_ItemnValue>\r\n                </_Recored>\r\n                <_Button isEnable={true} onClick={() => {\r\n                    saveFile(JSON.stringify(store.scoreData));\r\n                }}>Download</_Button>\r\n            </_ListInfoDiv>\r\n        </_Left>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default ScoreInfoTab;\r\n\r\nconst saveFile = (plainData: string) => {\r\n    const options = {\r\n        types: [\r\n            {\r\n                accept: {\r\n                    'text/plain': ['.lcrs'],\r\n                },\r\n            },\r\n        ],\r\n    };\r\n    window.showSaveFilePicker(options).then((handle) => {\r\n        (async () => {\r\n            //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n            const writable = await handle.createWritable();\r\n            //テキストデータの書き込み\r\n            const text = DataUtil.gZip(plainData);\r\n            await writable.write(text);\r\n            //ファイルを閉じる\r\n            await writable.close();\r\n        })();\r\n    }).catch(() => {\r\n        console.log('キャンセルされました');\r\n    });\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 400px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\n\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 30px;\r\n    user-select: text;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ItemnForm = styled.input`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #1a1a1a;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #e9e9e9;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #888888;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport EditTab from \"../score/edit/editTab\";\r\nimport ScoreInfoTab from \"./scoreInfoTab\";\r\n\r\nconst PreviewChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Info', disable: false, cont: <ScoreInfoTab /> },\r\n                    { name: 'View', disable: false, cont: <EditTab /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PreviewChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        isActive={(isDisable && isCurrent) || (!isDisable && isRelationNode())}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={()=>{\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #cecece;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #a58c8c;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: block;\r\n    /* position: relative; */\r\n    background-color: #ffffff47;\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #ff454546;\r\n    `}\r\n    ${props => props.isActive ? '' : css`\r\n        background-color: transparent;\r\n        opacity: 0.5;\r\n    `}\r\n    /* width: calc(100% - 10px); */\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\r\nimport { Dispatcher } from \"../../../../redux/dispatcher/dispatcher\";\r\nimport ThemaUtil from \"../themaUtil\";\r\nimport TreeUtil from \"../treeUtil\";\r\n\r\nnamespace ThemaEditTabUtil {\r\n\r\n    export type ComponentArgs = {\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        setThamaData: React.Dispatch<React.SetStateAction<ThemaUtil.LevelBase>>;\r\n        setBackingWnd: (flg: boolean) => void;\r\n        dispatcher: Dispatcher;\r\n        treeDisable: boolean;\r\n        setTreeDisable: (treeDisable: boolean) => void;\r\n    }\r\n\r\n    export const InputTextForm = (props: {\r\n        titleLabel: string;\r\n        value: string;\r\n        isEnable?: boolean;\r\n        setValue: (value: string) => void;\r\n    }) => {\r\n        return (\r\n            <_Record isEnable={props.isEnable ?? true}>\r\n                <_ItemnLabel>{props.titleLabel}</_ItemnLabel>\r\n                <_ItemnInput type=\"text\" value={props.value} onChange={(e) => {\r\n                    props.setValue(e.target.value);\r\n                }} />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string };\r\n    export const createBlankCatList = (list: ComboboxItemProps[]) => {\r\n        return [{ value: '', labelText: '' }].concat(list);\r\n    }\r\n    export const InputComboboxForm = (props: {\r\n        titleLabel: string;\r\n        value: string;\r\n        isEnable?: boolean;\r\n        setValue: (value: string) => void;\r\n        list: ComboboxItemProps[];\r\n    }) => {\r\n        return (\r\n            <_Record isEnable={props.isEnable ?? true}>\r\n                <_ItemnLabel>{props.titleLabel}</_ItemnLabel>\r\n                <_ItemnCombobox value={props.value} onChange={(e) => {\r\n                    props.setValue(e.target.value);\r\n                }} >{props.list.map((item, i) => {\r\n                    return <option key={i} value={item.value}>{item.labelText}</option>\r\n                })}</_ItemnCombobox>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const LabelTextItem = (props: {\r\n        titleLabel: string;\r\n        value: string;\r\n    }) => {\r\n        return (\r\n            <_Record isEnable={true}>\r\n                <_ItemnLabel>{props.titleLabel}</_ItemnLabel>\r\n                <_ItemnInput readOnly type=\"text\" value={props.value} />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const TextAreaView = (props: {\r\n        value: string;\r\n        height?: number;\r\n    }) => {\r\n        const height = props.height ?? 150;\r\n        return (\r\n            <_TextArea\r\n                readOnly\r\n                value={props.value}\r\n                height={height}\r\n            />\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        return (<>\r\n            <_BorderText>{props.title}</_BorderText>\r\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        name: string;\r\n        isEnable?: boolean;\r\n        callback: () => void;\r\n    }\r\n    export const ButtonDiv = (props: {\r\n        buttons: ButtonProps[]\r\n    }) => {\r\n        return (\r\n            <_Record isEnable={true}>\r\n                {props.buttons.map((button, i) => {\r\n                    return (\r\n                        <_Button\r\n                            key={i}\r\n                            isEnable={button.isEnable ?? true}\r\n                            onClick={button.callback}\r\n                        >{button.name}</_Button>\r\n                    );\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export type ListButtonProps = {\r\n        label: string;\r\n        width: number;\r\n        isEnable?: boolean;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ListManager = (props: {\r\n        height: number;\r\n        records: {\r\n            label: string;\r\n            buttons: ListButtonProps[];\r\n        }[]\r\n    }) => {\r\n        return (\r\n            <_ListRecordFrame height={props.height}>\r\n                {props.records.map((record, i) => {\r\n                    const dim = record.buttons.map(button => button.width).reduce((a, b) => a + b + 2);\r\n                    const buttonJsxList = record.buttons.map((button, i) => {\r\n                        return <_ListRecordButton\r\n                            key={i}\r\n                            width={button.width}\r\n                            isEnable={button.isEnable ?? true}\r\n                            onClick={button.callback}\r\n                        >{button.label}</_ListRecordButton>\r\n                    });\r\n                    return (\r\n                        <_ListRecordItem key={i}>\r\n                            <_ListRecordLabel dim={dim + 2}>{record.label}</_ListRecordLabel>{buttonJsxList}\r\n                        </_ListRecordItem>\r\n                    );\r\n                })}\r\n            </_ListRecordFrame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ThemaEditTabUtil;\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #b3b4c4; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin-left: 4px;\r\n    margin-top: 2px;\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 150px);\r\n    margin-top: 2px;\r\n    margin-left: 4px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #1f1f1f;\r\n    border: solid 1px #000;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        border: none;\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n`;\r\n\r\nconst _ItemnCombobox = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 150px);\r\n    margin-top: 2px;\r\n    margin-left: 4px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #1f1f1f;\r\n    border: solid 1px #000;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin-left: 4px;\r\n    margin-top: 2px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${_CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    background-color: #d4d6bc;\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _TextArea = styled.textarea<{\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: #0a0038;\r\n    background-color: #b7bcd3;\r\n    resize: none;\r\n    width: calc(100% - 8px);\r\n    height: ${props => props.height}px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 4px;\r\n    outline: none;\r\n`;\r\n\r\nconst _ListRecordFrame = styled.div<{\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${props => props.height}px;\r\n    margin: 4px 0 0 4px;\r\n    border: solid 2px #850000;\r\n    background-color: #bcbcbc;\r\n    box-sizing: border-box;\r\n    padding: 0 0 2px 0;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _ListRecordItem = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    ${Styles.CSS_LABEL_SMALL};\r\n    margin: 2px 0 0 0;\r\n    background-color: #fff7dc;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 4px;\r\n`;\r\n\r\nconst _ListRecordLabel = styled.div<{\r\n    dim: number;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - ${props => props.dim}px);\r\n    height: 100%;\r\n    color: #9c1e1e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ListRecordButton = styled.div<{\r\n    width: number;\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    color: #110549;\r\n    text-align: center;\r\n    background-color: #93bec3;\r\n    border-radius: 4px;\r\n    border: solid 1px #274154;\r\n    box-sizing: border-box;\r\n    margin: 0 1px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #b7d6d9;\r\n    }\r\n`;","import { useState, useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\r\nimport ThemaUtil from \"../themaUtil\";\r\nimport TreeUtil from \"../treeUtil\";\r\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\r\n\r\nconst AttrFormTab = (props: {\r\n    isPattern: boolean;\r\n}) => {\r\n    const { node, invalidate, setFocusNode, setTreeDisable } = useContext(ThemaTreeContext);\r\n\r\n    const parentNode = node.parent as TreeUtil.ElementNode;\r\n\r\n    const [attr, setAttr] = useState<'' | TheoryUtil.SymbolAttribute>('');\r\n    const [symbols, setSymbols] = useState<TheoryUtil.SymbolKey[]>([]);\r\n\r\n    const [errorList, setErrorList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (node.data == null) {\r\n            setAttr('');\r\n            setSymbols([]);\r\n        } else {\r\n            const data = node.data as ThemaUtil.LevelAttr;\r\n            setAttr(data.attr);\r\n            setSymbols(data.symbols.slice());\r\n        }\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (attr === '' || symbols.length === 0) {\r\n            list.push('target is none.');\r\n        }\r\n        setErrorList(list);\r\n    }, [attr, symbols]);\r\n\r\n    const targetSymbolList = attr === '' ? [] : TheoryUtil.getSymbolsFromAttr(attr);\r\n    return (<>\r\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"attribute\" value={attr} setValue={(value: string) => {\r\n            setAttr(value as TheoryUtil.SymbolAttribute);\r\n            setSymbols([]);\r\n        }} list={ThemaEditTabUtil.createBlankCatList(TheoryUtil.SymbolAttributeList.map(item => ({ value: item, labelText: item })))} />\r\n        <_ListDiv>\r\n            {targetSymbolList.map((symbol, i) => (\r\n                <_SymbolItem key={i}\r\n                    isActive={symbols.includes(symbol.key)}\r\n                    onClick={() => {\r\n                        if (!symbols.includes(symbol.key)) symbols.push(symbol.key);\r\n                        else symbols.splice(symbols.indexOf(symbol.key), 1);\r\n                        setSymbols(symbols.slice());\r\n                    }}\r\n                ><_SymbolKey>{symbol.key}</_SymbolKey> [{symbol.name}]</_SymbolItem>\r\n            ))}\r\n        </_ListDiv>\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"selft element\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Update',\r\n                        isEnable: errorList.length === 0,\r\n                        callback: () => {\r\n                            if (node.data == null) {\r\n                                const attrData: ThemaUtil.LevelAttr = {\r\n                                    attr: attr as TheoryUtil.SymbolAttribute,\r\n                                    symbols: symbols.slice(),\r\n                                    roots: []\r\n                                };\r\n                                node.data = attrData;\r\n                                if (!props.isPattern) {\r\n                                    const parentData = parentNode.data as ThemaUtil.LevelMethod;\r\n                                    (parentData.defs as ThemaUtil.LevelAttr[]).push(attrData);\r\n                                } else {\r\n                                    const parentData = parentNode.data as ThemaUtil.LevelPatt;\r\n                                    parentData.attrs.push(attrData);\r\n                                }\r\n                                setTreeDisable(false);\r\n                            } else {\r\n                                const data = node.data as ThemaUtil.LevelAttr;\r\n                                data.attr = attr as TheoryUtil.SymbolAttribute;\r\n                                data.symbols = symbols;\r\n                                invalidate();\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true, callback: () => {\r\n                            setFocusNode(parentNode);\r\n                            const selfIndex = TreeUtil.getChildIndex(node);\r\n                            parentNode.children.splice(selfIndex, 1);\r\n                            if (!props.isPattern) {\r\n                                const parentData = parentNode.data as ThemaUtil.LevelMethod;\r\n                                (parentData.defs as ThemaUtil.LevelAttr[]).splice(selfIndex, 1);\r\n                            } else {\r\n                                const parentData = parentNode.data as ThemaUtil.LevelPatt;\r\n                                parentData.attrs.splice(selfIndex, 1);\r\n                            }\r\n                            setTreeDisable(false);\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"children element\"\r\n            isEnable={node.data != null}\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.LabelTextItem titleLabel=\"Child\" value={'Root Element'} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Add',\r\n                        isEnable: true, callback: () => {\r\n                            // const rootData: ThemaUtil.LevelRoot = {\r\n                            //     minIdx: 0,\r\n                            //     maxIdx: 11,\r\n                            //     voics: []\r\n                            // };\r\n                            // data.roots.push(rootData);\r\n                            const newNode = TreeUtil.createNode(null, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            setTreeDisable(true);\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true, callback: () => {\r\n                            const data = node.data as ThemaUtil.LevelAttr;\r\n                            node.children = [];\r\n                            data.roots = [];\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default AttrFormTab;\r\n\r\n\r\nconst _ListDiv = styled.div`\r\n    display: inline-block;\r\n    background-color: #e3ecee;\r\n    width: calc(100% - 8px);\r\n    min-height: 50px;\r\n    margin: 4px 0 0 4px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #26242c;\r\n    padding: 0 4px 4px 0;\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    background-color: #a2bcc2;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #dee058;\r\n    `}\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #4f59b3;\r\n    padding: 0 10px;\r\n    margin: 4px 0 0 4px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #697ab3;\r\n    border-radius: 5px;\r\n    &:hover {\r\n        background-color: #c2d5da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color:#c2c461;\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _SymbolKey = styled.span`\r\n    color: #d65d5d;\r\n`;","import { useState, useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\r\nimport ThemaUtil from \"../themaUtil\";\r\nimport TreeUtil from \"../treeUtil\";\r\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\r\n\r\nconst BaseFormTab = (props: {\r\n    themaList: ThemaUtil.LevelBase[];\r\n    addThema: (thema: ThemaUtil.LevelBase) => void;\r\n}) => {\r\n    const { node, invalidate, setThamaData } = useContext(ThemaTreeContext);\r\n    const data = node.data as ThemaUtil.LevelBase;\r\n    const [themaName, setThemaName] = useState(data.themaName);\r\n\r\n    const [errorList, setErrorList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (themaName === '') {\r\n            list.push('name is empty.');\r\n        }\r\n        setErrorList(list);\r\n    }, [themaName]);\r\n\r\n    return (<>\r\n        <ThemaEditTabUtil.ButtonDiv buttons={[\r\n            {\r\n                name: 'Export',\r\n                isEnable: true, callback: () => {\r\n                    const options = {\r\n                        types: [\r\n                            {\r\n                                accept: {\r\n                                    'text/plain': ['.lcrt'],\r\n                                },\r\n                            },\r\n                        ],\r\n                    };\r\n\r\n                    window.showSaveFilePicker(options).then((handle) => {\r\n                        (async () => {\r\n                            //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                            const writable = await handle.createWritable();\r\n                            //テキストデータの書き込み\r\n                            const text = DataUtil.gZip(JSON.stringify(data));\r\n                            await writable.write(text);\r\n                            //ファイルを閉じる\r\n                            await writable.close();\r\n                        })();\r\n                    }).catch(() => {\r\n                        console.log('キャンセルされました');\r\n                    });\r\n\r\n                }\r\n            },\r\n            {\r\n                name: 'Import',\r\n                isEnable: true, callback: () => {\r\n                    (async () => {\r\n                        const [fileHandle] = await window.showOpenFilePicker();\r\n                        const file = await fileHandle.getFile();\r\n                        const fileContents = await file.text();\r\n                        const text = DataUtil.unZip(fileContents);\r\n                        const themaData = JSON.parse(text);\r\n                        setThamaData(themaData);\r\n                        node.data = themaData;\r\n                        console.log(JSON.stringify(node.data));\r\n                        invalidate();\r\n                    })();\r\n                }\r\n            }\r\n        ]} />\r\n        {/* <ThemaEditTabUtil.ButtonDiv buttons={[\r\n            {\r\n                name: 'Clear',\r\n                isEnable: true, callback: () => {\r\n                    data.meths[0].defs = [];\r\n                    data.meths[1].defs = [];\r\n                    invalidate();\r\n                }\r\n            }\r\n        ]} /> */}\r\n        <ThemaEditTabUtil.InputTextForm titleLabel=\"name\" value={themaName} setValue={(value: string) => {\r\n            setThemaName(value);\r\n        }} />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"selft operatioon\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Update',\r\n                        isEnable: errorList.length === 0,\r\n                        callback: () => {\r\n                            data.themaName = themaName;\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"install\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Install',\r\n                        isEnable: !props.themaList.map(thema => thema.themaName).includes(data.themaName),\r\n                        callback: () => {\r\n                            props.addThema(data);\r\n                        }\r\n                    }\r\n                ]} />\r\n                <ThemaEditTabUtil.ListManager\r\n                    height={140}\r\n                    records={props.themaList.map((thema, i) => {\r\n                        return {\r\n                            label: thema.themaName, buttons: [\r\n                                {\r\n                                    label: '↓', width: 30,\r\n                                    isEnable: i < props.themaList.length - 1,\r\n                                    callback: () => {\r\n                                        const cache = props.themaList[i];\r\n                                        props.themaList[i] = props.themaList[i + 1];\r\n                                        props.themaList[i + 1] = cache;\r\n                                        invalidate();\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: '↑', width: 30,\r\n                                    isEnable: i > 0,\r\n                                    callback: () => {\r\n                                        const cache = props.themaList[i];\r\n                                        props.themaList[i] = props.themaList[i - 1];\r\n                                        props.themaList[i - 1] = cache;\r\n                                        invalidate();\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: 'Load', width: 50, isEnable: false, callback: () => {\r\n\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: 'Delete', width: 60, callback: () => {\r\n                                        props.themaList.splice(i, 1);\r\n                                        invalidate();\r\n                                    },\r\n                                },\r\n                            ]\r\n                        };\r\n                    })}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default BaseFormTab;\r\n\r\n","import { useState, useContext, useEffect, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\r\nimport ThemaUtil from \"../themaUtil\";\r\nimport TreeUtil from \"../treeUtil\";\r\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\r\n\r\nconst MethFormTab = (props: {\r\n}) => {\r\n    const { node, setFocusNode, invalidate, setTreeDisable } = useContext(ThemaTreeContext);\r\n    const data = node.data as ThemaUtil.LevelMethod;\r\n\r\n    const [presetName, setPresetName] = useState<string>('');\r\n    const [prenams, setPrenams] = useState<ThemaUtil.Prenam[]>([]);\r\n\r\n    const [nextPresetSeq, setNextPresetSeq] = useState(-1);\r\n\r\n    const incrementNextPresetSeq = () => { setNextPresetSeq(nextPresetSeq + 1) };\r\n\r\n    const isSustMeth = node == node.parent?.children[0];\r\n\r\n    useEffect(() => {\r\n        setPrenams(data.prenams.slice());\r\n\r\n        setNextPresetSeq(data.prenams.length === 0 ? 0 : (\r\n            // 最大値 + 1を帰す\r\n            data.prenams.map(pre => pre.seq).reduce((prev, cur) => {\r\n                return prev < cur ? cur : prev;\r\n            }, -1) + 1\r\n        ));\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ThemaEditTabUtil.LabelTextItem titleLabel=\"Method\" value={isSustMeth ? 'Sustain' : 'Pattern'} />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"preset define\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.InputTextForm titleLabel=\"Preset\" value={presetName} setValue={(value: string) => {\r\n                    setPresetName(value);\r\n                }} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Add',\r\n                        isEnable: presetName !== '' && !prenams.map(p => p.name).includes(presetName),\r\n                        callback: () => {\r\n                            prenams.push({\r\n                                name: presetName,\r\n                                seq: nextPresetSeq\r\n                            });\r\n                            setPrenams(prenams.slice());\r\n                            setPresetName('');\r\n                            incrementNextPresetSeq();\r\n                        }\r\n                    },\r\n                ]} />\r\n                <ThemaEditTabUtil.ListManager\r\n                    height={140}\r\n                    records={prenams.map((prenam, i) => {\r\n                        return {\r\n                            label: `${prenam.seq}: ${prenam.name}`, buttons: [\r\n                                {\r\n                                    label: '↓', width: 30,\r\n                                    isEnable: i < prenams.length - 1,\r\n                                    callback: () => {\r\n                                        const cache = prenams[i];\r\n                                        prenams[i] = prenams[i + 1];\r\n                                        prenams[i + 1] = cache;\r\n                                        setPrenams(prenams.slice());\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: '↑', width: 30,\r\n                                    isEnable: i > 0,\r\n                                    callback: () => {\r\n                                        const cache = prenams[i];\r\n                                        prenams[i] = prenams[i - 1];\r\n                                        prenams[i - 1] = cache;\r\n                                        setPrenams(prenams.slice());\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: 'Delete', width: 60, callback: () => {\r\n                                        prenams.splice(i, 1);\r\n                                        setPrenams(prenams.slice());\r\n                                    },\r\n                                },\r\n                            ]\r\n                        };\r\n                    })} />\r\n            </>} />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"selft operatioon\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Update',\r\n                        isEnable: true, callback: () => {\r\n                            data.prenams = prenams.slice();\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"children operatioon\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.LabelTextItem titleLabel=\"Child\" value={(isSustMeth ? 'Sustain' : 'Pattern') + ' Element'} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Add',\r\n                        isEnable: true, callback: () => {\r\n                            // let newData: any = null;\r\n                            // if (isSustMeth) {\r\n                            //     const attrData: ThemaUtil.LevelAttr = {\r\n                            //         attr: 'triad',\r\n                            //         symbols: [],\r\n                            //         roots: []\r\n                            //     };\r\n                            //     (data.defs as ThemaUtil.LevelAttr[]).push(attrData);\r\n                            //     newData = attrData;\r\n                            // } else {\r\n                            //     const sustData: ThemaUtil.LevelSust = {\r\n                            //         beat: 4,\r\n                            //         head: 0,\r\n                            //         tail: 0,\r\n                            //         patts: []\r\n                            //     };\r\n                            //     (data.defs as ThemaUtil.LevelSust[]).push(sustData);\r\n                            //     newData = sustData;\r\n                            // }\r\n                            const newNode = TreeUtil.createNode(null, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            setTreeDisable(true);\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true, callback: () => {\r\n                            node.children = [];\r\n                            data.defs = [];\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default MethFormTab;\r\n\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { BackingPatternProps, ChordBacking } from \"../../../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\r\nimport ThemaUtil from \"../themaUtil\";\r\nimport TreeUtil from \"../treeUtil\";\r\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\r\n\r\nconst PattFormTab = () => {\r\n\r\n    const { node, invalidate, setFocusNode, dispatcher, setBackingWnd, setTreeDisable } = useContext(ThemaTreeContext);\r\n\r\n    const parentNode = node.parent as TreeUtil.ElementNode;\r\n    const parentData = parentNode.data as ThemaUtil.LevelSust;\r\n    const sustData = node.parent?.data as ThemaUtil.LevelSust;\r\n    const metData = node.parent?.parent?.data as ThemaUtil.LevelMethod;\r\n\r\n    const [pattName, setPattName] = useState('');\r\n    // const [key, setKey] = useState('');\r\n    const [refer, setRefer] = useState('');\r\n    const [rootIndex, setRootIndex] = useState(0);\r\n    const [symbolKey, setSymbolKsy] = useState<TheoryUtil.SymbolKey>('major');\r\n    const [source, setSource] = useState<string>('');\r\n\r\n    const [errorList, setErrorList] = useState<string[]>([]);\r\n\r\n    // ツリー選択時の初期化\r\n    useEffect(() => {\r\n        if (node.data == null) {\r\n            setPattName('');\r\n            // setKey('');\r\n            setRefer('');\r\n            setRootIndex(0);\r\n            setSymbolKsy('major');\r\n            setSource('');\r\n        } else {\r\n            const data = node.data as ThemaUtil.LevelPatt;\r\n            setPattName(data.pattName);\r\n            // setKey(data.key);\r\n            setRefer(data.refer === -1 ? '' : data.refer.toString());\r\n            setRootIndex(0);\r\n            setSymbolKsy('major');\r\n            setSource(JSON.stringify(data.source));\r\n        }\r\n    }, [node]);\r\n\r\n    const key = useMemo(() => {\r\n\r\n        if (node.data == null) {\r\n            return parentData.patts.map(patt => patt.key).reduce((prev, cur) => {\r\n                return prev < cur ? cur : prev;\r\n            }, -1) + 1;\r\n        } else {\r\n            const data = node.data as ThemaUtil.LevelPatt;\r\n            return data.key;\r\n        }\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (pattName === '') {\r\n            list.push('name is empty.');\r\n        }\r\n        if (source === '') {\r\n            list.push('source is empty.');\r\n        }\r\n        setErrorList(list);\r\n    }, [pattName, key, refer, source]);\r\n\r\n    /** ディペンドされているパターンの有無 */\r\n    const hasDepend = useMemo(()=> {\r\n        let result = false;\r\n        if(node.data != null) {\r\n            const data = node.data as ThemaUtil.LevelPatt;\r\n            return parentData.patts.find(patt=> {\r\n                return patt.refer === data.key;\r\n            }) != undefined;\r\n        }\r\n        return result;\r\n    }, [node]);\r\n\r\n    /** ディペンドを許可するパターンのキーリスト */\r\n    const permitDependKeys: number[] = useMemo(() => {\r\n        if (source === '') return [];\r\n        const channelSize = (JSON.parse(source) as BackingPatternProps).channelSize;\r\n        return sustData.patts.filter(patt => {\r\n            const useDepend = patt.refer !== -1;\r\n            const matchChannel = patt.source.channelSize === channelSize;\r\n            return patt.key !== key && matchChannel && !useDepend;\r\n        }).map(patt => {\r\n            return patt.key;\r\n        });\r\n    }, [node, source]);\r\n\r\n    /** チャンネルサイズを取得 */\r\n    const getChannelSize = () => {\r\n        if (source === '') return '-';\r\n        else {\r\n            const pattern = JSON.parse(source) as BackingPatternProps;\r\n            return pattern.channelSize;\r\n        }\r\n    }\r\n\r\n    const getInitialPattern = () => ({\r\n        channelSize: 1,\r\n        layers: [\r\n            {\r\n                divs: [{ rate: 4, div3: 0, isDot: false }],\r\n                notesList: [],\r\n                vels: [5]\r\n            },\r\n            {\r\n                divs: [{ rate: 4, div3: 0, isDot: false }],\r\n                notesList: [],\r\n                vels: [5]\r\n            }\r\n        ]\r\n    });\r\n\r\n    /** 子要素の有無 */\r\n    const hasChild = () => {\r\n        if (node.data != null) {\r\n            const data = node.data as ThemaUtil.LevelPatt;\r\n            return data.attrs.length >= 1;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (<>\r\n        <ThemaEditTabUtil.LabelTextItem\r\n            titleLabel=\"key\" value={key.toString()}\r\n        />\r\n        <ThemaEditTabUtil.InputTextForm titleLabel=\"name\" value={pattName} setValue={(value: string) => {\r\n            setPattName(value);\r\n        }} />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"source\"\r\n            isEnable={true}\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.InputComboboxForm titleLabel=\"root\" value={rootIndex.toString()} setValue={(value: string) => {\r\n                    setRootIndex(Number.parseInt(value));\r\n                }} list={TheoryUtil.KEY12_SHARP_LIST.map((key12, idx) => (\r\n                    { value: idx.toString(), labelText: key12 }\r\n                ))} />\r\n                <ThemaEditTabUtil.InputComboboxForm titleLabel=\"symbol\" value={symbolKey} setValue={(value: string) => {\r\n                    setSymbolKsy(value as TheoryUtil.SymbolKey);\r\n                }} list={TheoryUtil.SYMBOL_LIST.map((symbol) => (\r\n                    { value: symbol.key, labelText: `${symbol.key}: [${symbol.name}]` }\r\n                ))} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Edit',\r\n                        isEnable: true, callback: () => {\r\n                            const pattern = source === '' ? getInitialPattern() : JSON.parse(source);\r\n                            const chordBacking: ChordBacking = {\r\n                                pattern,\r\n                                voicingList: []\r\n                            }\r\n                            dispatcher.thema.openBackingEditor(\r\n                                sustData.beat, sustData.head, sustData.tail, symbolKey, rootIndex, chordBacking,\r\n                                (editor: BackingState.Editor) => {\r\n                                    if (editor.pattern != null) {\r\n                                        const chordPattern = BackingUtil.buildPatternProps(editor.pattern);\r\n                                        setSource(JSON.stringify(chordPattern));\r\n                                    }\r\n                                },\r\n                                () => {\r\n                                    setBackingWnd(false);\r\n                                }\r\n                            );\r\n                            setBackingWnd(true);\r\n                        }\r\n                    },\r\n                ]} />\r\n                <ThemaEditTabUtil.TextAreaView value={source} />\r\n                <ThemaEditTabUtil.LabelTextItem\r\n                    titleLabel=\"channel\"\r\n                    value={(() => {\r\n                        return getChannelSize()\r\n                    })().toString()}\r\n                />\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.InputComboboxForm\r\n            titleLabel=\"depend\" value={refer}\r\n            // ディペンドされていないかつ、子要素が存在しない場合のみ活性化\r\n            isEnable={!hasDepend && !hasChild()}\r\n            setValue={(value: string) => {\r\n                setRefer(value);\r\n            }} list={[''].concat(permitDependKeys.map(p => p.toString())).map(key => (\r\n                { value: key, labelText: key }\r\n            ))} />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"selft operatioon\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Update',\r\n                        isEnable: errorList.length === 0,\r\n                        callback: () => {\r\n                            if (node.data == null) {\r\n                                const pattData: ThemaUtil.LevelPatt = {\r\n                                    pattName,\r\n                                    source: JSON.parse(source),\r\n                                    key,\r\n                                    refer: refer === '' ? -1 : Number(refer),\r\n                                    attrs: []\r\n                                };\r\n                                node.data = pattData;\r\n                                parentData.patts.push(pattData);\r\n                                setTreeDisable(false);\r\n                            } else {\r\n                                const data = node.data as ThemaUtil.LevelPatt;\r\n                                data.pattName = pattName;\r\n                                data.source = JSON.parse(source);\r\n                                data.key = key;\r\n                                data.refer = refer === '' ? -1 : Number(refer);\r\n                                invalidate();\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true, callback: () => {\r\n                            setFocusNode(parentNode);\r\n                            const selfIndex = TreeUtil.getChildIndex(node);\r\n                            if(node.data != null) {\r\n                                const data = node.data as ThemaUtil.LevelPatt;\r\n                                // 他のパターンからディペンドされていた場合、解除する\r\n                                parentData.patts.forEach(patt=> {\r\n                                    if(patt.refer === data.key) patt.refer = -1;\r\n                                });\r\n                            }\r\n                            parentNode.children.splice(selfIndex, 1);\r\n                            parentData.patts.splice(selfIndex, 1);\r\n                            setTreeDisable(false);\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"children operatioon\"\r\n            isEnable={node.data != null && refer === ''}\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.LabelTextItem titleLabel=\"Child\" value={'Attribute Element'} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Add',\r\n                        isEnable: true,\r\n                        callback: () => {\r\n                            // const attrData: ThemaUtil.LevelAttr = {\r\n                            //     attr: 'triad',\r\n                            //     symbols: [],\r\n                            //     roots: []\r\n                            // };\r\n                            // data.attrs.push(attrData);\r\n                            const newNode = TreeUtil.createNode(null, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            setTreeDisable(true);\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true,\r\n                        callback: () => {\r\n                            const data = node.data as ThemaUtil.LevelPatt;\r\n                            node.children = [];\r\n                            data.attrs = [];\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default PattFormTab;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\r\nimport ThemaUtil from \"../themaUtil\";\r\nimport TreeUtil from \"../treeUtil\";\r\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\r\n\r\nconst RootFormTab = () => {\r\n    const { node, setFocusNode, invalidate, setTreeDisable } = useContext(ThemaTreeContext);\r\n\r\n    const parentNode = node.parent as TreeUtil.ElementNode;\r\n    const parentData = parentNode.data as ThemaUtil.LevelAttr;\r\n    // const data = node.data as ThemaUtil.LevelRoot;\r\n\r\n    const [minIdx, setMinIdx] = useState<string>('');\r\n    const [maxIdx, setMaxIdx] = useState<string>('');\r\n\r\n    const [errorList, setErrorList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (node.data == null) {\r\n            setMinIdx('');\r\n            setMaxIdx('');\r\n        } else{\r\n            const data = node.data as ThemaUtil.LevelRoot;\r\n            setMinIdx(data.minIdx.toString());\r\n            setMaxIdx(data.maxIdx.toString());\r\n        }\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (minIdx === '' || maxIdx === '') {\r\n            list.push('min or max form is null.');\r\n            // return;\r\n        } else if (Number(minIdx) > Number(maxIdx)) {\r\n            list.push('min is upper than max.');\r\n        }\r\n        setErrorList(list);\r\n    }, [minIdx, maxIdx]);\r\n\r\n    return (<>\r\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"minIdx\" value={minIdx.toString()} setValue={(value: string) => {\r\n            setMinIdx(value);\r\n        }} list={ThemaEditTabUtil.createBlankCatList(TheoryUtil.KEY12_SHARP_LIST.map((key12, idx) => (\r\n            { value: idx.toString(), labelText: key12 }\r\n        )))} />\r\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"maxIdx\" value={maxIdx.toString()} setValue={(value: string) => {\r\n            setMaxIdx(value);\r\n        }} list={ThemaEditTabUtil.createBlankCatList(TheoryUtil.KEY12_SHARP_LIST.map((key12, idx) => (\r\n            { value: idx.toString(), labelText: key12 }\r\n        )))} />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"selft operatioon\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Update',\r\n                        isEnable: errorList.length === 0,\r\n                        callback: () => {\r\n                            if (node.data == null) {\r\n                                const rootData: ThemaUtil.LevelRoot = {\r\n                                    minIdx: Number(minIdx),\r\n                                    maxIdx: Number(maxIdx),\r\n                                    voics: []\r\n                                };\r\n                                node.data = rootData;\r\n                                parentData.roots.push(rootData);\r\n                                setTreeDisable(false);\r\n                            } else {\r\n                                const data = node.data as ThemaUtil.LevelRoot;\r\n                                data.minIdx = Number(minIdx);\r\n                                data.maxIdx = Number(maxIdx);\r\n                                invalidate();\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true, callback: () => {\r\n                            setFocusNode(parentNode);\r\n                            const selfIndex = TreeUtil.getChildIndex(node);\r\n                            parentNode.children.splice(selfIndex, 1);\r\n                            parentData.roots.splice(selfIndex, 1);\r\n                            setTreeDisable(false);\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"children operatioon\"\r\n            isEnable={node.data != null}\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.LabelTextItem titleLabel=\"Child\" value={'Voicing Element'} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Add',\r\n                        isEnable: true,\r\n                        callback: () => {\r\n                            // const voicData: ThemaUtil.LevelVoic = {\r\n                            //     source: [],\r\n                            //     presets: []\r\n                            // };\r\n                            // data.voics.push(voicData);\r\n                            const newNode = TreeUtil.createNode(null, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            setTreeDisable(true);\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true,\r\n                        callback: () => {\r\n                            const data = node.data as ThemaUtil.LevelRoot;\r\n                            node.children = [];\r\n                            data.voics = [];\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default RootFormTab;\r\n","import { useState, useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChordBacking } from \"../../../../redux/store/score/scoreData\";\r\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\r\nimport ThemaUtil from \"../themaUtil\";\r\nimport TreeUtil from \"../treeUtil\";\r\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\r\n\r\nconst SustFormTab = (props: {\r\n}) => {\r\n    const { node, invalidate, setFocusNode, setTreeDisable } = useContext(ThemaTreeContext);\r\n    const data = node.data as ThemaUtil.LevelSust;\r\n\r\n    const parentNode = node.parent as TreeUtil.ElementNode;\r\n    const parentData = parentNode.data as ThemaUtil.LevelMethod;\r\n\r\n    const [beat, setBeat] = useState('');\r\n    const [head, setHead] = useState('');\r\n    const [tail, setTail] = useState('');\r\n\r\n    const [errorList, setErrorList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (node.data == null) {\r\n            setBeat('');\r\n            setHead('0');\r\n            setTail('0');\r\n        } else {\r\n            const data = node.data as ThemaUtil.LevelSust;\r\n            setBeat(data.beat.toString());\r\n            setHead(data.head.toString());\r\n            setTail(data.tail.toString());\r\n        }\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (beat === '') {\r\n            list.push('beat is empty.');\r\n        }\r\n        if (head === '') {\r\n            list.push('head is empty.');\r\n        }\r\n        if (tail === '') {\r\n            list.push('tail is empty.');\r\n        }\r\n        setErrorList(list);\r\n    }, [beat, head, tail]);\r\n\r\n    return (<>\r\n\r\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"beat\" value={beat.toString()}\r\n            list={['', 1, 2, 3, 4].map(v => ({ value: v.toString(), labelText: v.toString() }))}\r\n            setValue={(value: string) => {\r\n                setBeat(value);\r\n            }} />\r\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"head\" value={head.toString()}\r\n            list={['', -2, -1, 0, 1, 2].map(v => ({ value: v.toString(), labelText: v.toString() }))}\r\n            setValue={(value: string) => {\r\n                setHead(value);\r\n            }} />\r\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"tail\" value={tail.toString()}\r\n            list={['', -2, -1, 0, 1, 2].map(v => ({ value: v.toString(), labelText: v.toString() }))}\r\n            setValue={(value: string) => {\r\n                setTail(value);\r\n            }} />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"selft element\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Update',\r\n                        isEnable: errorList.length === 0,\r\n                        callback: () => {\r\n                            if (node.data == null) {\r\n                                const sustData: ThemaUtil.LevelSust = {\r\n                                    beat: Number(beat),\r\n                                    head: Number(head),\r\n                                    tail: Number(tail),\r\n                                    patts: []\r\n                                };\r\n                                node.data = sustData;\r\n                                (parentData.defs as ThemaUtil.LevelSust[]).push(sustData);\r\n                                setTreeDisable(false);\r\n                            } else {\r\n                                const data = node.data as ThemaUtil.LevelSust;\r\n                                data.beat = Number(beat);\r\n                                data.head = Number(head);\r\n                                data.tail = Number(tail);\r\n                                invalidate();\r\n                            }\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true, callback: () => {\r\n                            setFocusNode(parentNode);\r\n                            const selfIndex = TreeUtil.getChildIndex(node);\r\n                            parentNode.children.splice(selfIndex, 1);\r\n                            parentData.defs.splice(selfIndex, 1);\r\n                            setTreeDisable(false);\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"children element\"\r\n            isEnable={node.data != null}\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.LabelTextItem titleLabel=\"Child\" value={'Pattern Element'} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Add',\r\n                        isEnable: true, callback: () => {\r\n                            const newNode = TreeUtil.createNode(null, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            setTreeDisable(true);\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true, callback: () => {\r\n                            node.children = [];\r\n                            data.patts = [];\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default SustFormTab;\r\n\r\n","import { useContext, useState, useEffect, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { ChordBacking, VoicingProps } from \"../../../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\r\nimport ThemaUtil from \"../themaUtil\";\r\nimport TreeUtil from \"../treeUtil\";\r\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\r\n\r\nconst VoicFormTab = (props: {\r\n    isPattern: boolean;\r\n}) => {\r\n    const { node, invalidate, dispatcher, setBackingWnd, setFocusNode, setTreeDisable } = useContext(ThemaTreeContext);\r\n    // const data = node.data as ThemaUtil.LevelVoic;\r\n    const methData = !props.isPattern ?\r\n        // method sustain\r\n        node.parent?.parent?.parent?.data as ThemaUtil.LevelMethod :\r\n        // method pattern\r\n        node.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod;\r\n    const sustData = !props.isPattern ? null : node.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelSust;\r\n    const pattData = !props.isPattern ? null : node.parent?.parent?.parent?.data as ThemaUtil.LevelPatt;\r\n    const attrData = node.parent?.parent?.data as ThemaUtil.LevelAttr;\r\n    const rootData = node.parent?.data as ThemaUtil.LevelRoot;\r\n\r\n    // if(props.isPattern) console.log(data.source); \r\n    const [rootIndex, setRootIndex] = useState(0);\r\n    const [symbolKey, setSymbolKey] = useState<TheoryUtil.SymbolKey>('major');\r\n    const [source, setSource] = useState('');\r\n    const [depPattKey, setDepPattKey] = useState('');\r\n    const [preset, setPreset] = useState('');\r\n    const [preUsies, setPreUsies] = useState<ThemaUtil.PresetUse[]>([]);\r\n\r\n    const [errorList, setErrorList] = useState<string[]>([]);\r\n\r\n\r\n    /** 親要素の条件でフィルターしたシンボルリスト */\r\n    const symbolList = useMemo(() => {\r\n        return TheoryUtil.SYMBOL_LIST.filter(\r\n            (symbol) => attrData.symbols.includes(symbol.key)\r\n        );\r\n    }, []);\r\n    useEffect(() => {\r\n        if (node.data == null) {\r\n            setRootIndex(rootData.minIdx);\r\n            setSymbolKey(symbolList[0].key);\r\n            setSource('');\r\n            setDepPattKey('');\r\n            setPreset('');\r\n            setPreUsies([]);\r\n        } else {\r\n            const data = node.data as ThemaUtil.LevelVoic;\r\n            setRootIndex(rootData.minIdx);\r\n            setSymbolKey(symbolList[0].key);\r\n            setSource(JSON.stringify(data.source));\r\n            setDepPattKey('');\r\n            setPreset('');\r\n            setPreUsies(data.preUsies.slice());\r\n        }\r\n    }, [node]);\r\n\r\n    const depPatts = useMemo(() => {\r\n        if (sustData == null || pattData == null) {\r\n            return null;\r\n        } else {\r\n            const curPattKey = pattData.key;\r\n            return sustData.patts.filter(patt => {\r\n                return patt.key !== curPattKey && patt.refer === curPattKey;\r\n            });\r\n        }\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (source === '') {\r\n            list.push('source is null.');\r\n        }\r\n        setErrorList(list);\r\n    }, [source]);\r\n\r\n    const editorUpdate = (editor: BackingState.Editor) => {\r\n        const voicSrc = BackingUtil.getVoicingListFromTable(editor.voicingTable);\r\n        setSource(JSON.stringify(voicSrc));\r\n        setBackingWnd(false);\r\n    };\r\n    const editorClose = () => {\r\n        setBackingWnd(false);\r\n    };\r\n\r\n    const getPresetNameFromKey = (seq: number) => {\r\n        const target = methData.prenams.find(prenam => prenam.seq === seq) as ThemaUtil.Prenam;\r\n        return target.name;\r\n    }\r\n\r\n    return (<>\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"source\"\r\n            isEnable={true}\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.InputComboboxForm titleLabel=\"root\" value={rootIndex.toString()} setValue={(value: string) => {\r\n                    setRootIndex(Number.parseInt(value));\r\n                }} list={TheoryUtil.KEY12_SHARP_LIST.filter((key12, i) => {\r\n                    return i >= rootData.minIdx && i <= rootData.maxIdx;\r\n                }).map((key12, idx) => (\r\n                    // フィルターしたリストから連番を取得するため、ルートの最小値を加算\r\n                    { value: (idx + rootData.minIdx).toString(), labelText: key12 }\r\n                ))} />\r\n                <ThemaEditTabUtil.InputComboboxForm titleLabel=\"symbol\" value={symbolKey} setValue={(value: string) => {\r\n                    setSymbolKey(value as TheoryUtil.SymbolKey);\r\n                }} list={symbolList.map((symbol) => (\r\n                    { value: symbol.key, labelText: `${symbol.key}: [${symbol.name}]` }\r\n                ))} />\r\n                <ThemaEditTabUtil.LabelTextItem\r\n                    titleLabel=\"channel\"\r\n                    value={pattData == null ? '-' : pattData.source.channelSize.toString()}\r\n                />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Edit',\r\n                        isEnable: true,\r\n                        callback: () => {\r\n                            const voicingList = JSON.parse(source !== '' ? source : '[]') as VoicingProps[];\r\n                            if (pattData == null || sustData == null) {\r\n                                // サスティンバッキング\r\n                                const chordBacking: ChordBacking = {\r\n                                    pattern: null,\r\n                                    voicingList\r\n                                }\r\n                                dispatcher.thema.openBackingEditor(\r\n                                    4, 0, 0, symbolKey, rootIndex, chordBacking,\r\n                                    editorUpdate,\r\n                                    editorClose\r\n                                );\r\n                            } else {\r\n                                // パターンバッキング\r\n                                const chordBacking: ChordBacking = {\r\n                                    pattern: pattData.source,\r\n                                    voicingList\r\n                                }\r\n                                dispatcher.thema.openBackingEditor(\r\n                                    sustData.beat, sustData.head, sustData.tail, symbolKey, rootIndex, chordBacking,\r\n                                    editorUpdate,\r\n                                    editorClose\r\n                                );\r\n                            }\r\n                            setBackingWnd(true);\r\n                        }\r\n                    },\r\n                ]} />\r\n                <ThemaEditTabUtil.TextAreaView value={source} />\r\n                {/* <ThemaEditTabUtil.LabelTextItem\r\n                    titleLabel=\"List\"\r\n                    value={(() => {\r\n                        return source.map(v => {\r\n                            return `${v.octave}-${v.struct}`;\r\n                        }).join(', ');\r\n                    })()}\r\n                /> */}\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"preset use\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.InputComboboxForm\r\n                    titleLabel=\"Depend\"\r\n                    // パターンメソッドの時のみ活性化\r\n                    isEnable={pattData != null}\r\n                    value={depPattKey}\r\n                    setValue={(value: string) => {\r\n                        setDepPattKey(value);\r\n                    }}\r\n                    list={[{ value: '', labelText: '' }].concat((depPatts ?? []).map(patt => ({\r\n                        labelText: `${patt.key}: ${patt.pattName}`,\r\n                        value: patt.key.toString()\r\n                    })))}\r\n                />\r\n                <ThemaEditTabUtil.InputComboboxForm\r\n                    titleLabel=\"Preset\" value={preset}\r\n                    setValue={(value: string) => {\r\n                        setPreset(value);\r\n                    }}\r\n                    list={[{ value: '', labelText: '' }].concat(methData.prenams.filter(prenam => {\r\n                        // return !preUsies.map(preUse => `${preUse.depPatt},${preUse.presKey}`).includes(`${depPattKey === '' ? -1 : depPattKey},${prenam.seq}`);\r\n                        return !preUsies.map(preUse => preUse.presKey).includes(prenam.seq);\r\n                    }).map(preset => ({\r\n                        labelText: `${preset.seq}: ${preset.name}`,\r\n                        value: preset.seq.toString()\r\n                    })))}\r\n                />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Add',\r\n                        isEnable: preset !== '',\r\n                        callback: () => {\r\n                            preUsies.push({\r\n                                depPatt: depPattKey === '' ? -1 : Number(depPattKey),\r\n                                presKey: Number(preset)\r\n                            });\r\n                            setPreUsies(preUsies.slice());\r\n                            setDepPattKey('');\r\n                            setPreset('');\r\n                        }\r\n                    },\r\n                ]} />\r\n                <ThemaEditTabUtil.ListManager\r\n                    height={100}\r\n                    records={preUsies.map((preUse, i) => {\r\n                        return {\r\n                            label: `${preUse.depPatt === -1 ? '' : preUse.depPatt + '@'}[${getPresetNameFromKey(preUse.presKey)}]`,\r\n                            buttons: [\r\n                                {\r\n                                    label: '↓', width: 30,\r\n                                    isEnable: i < preUsies.length - 1,\r\n                                    callback: () => {\r\n                                        const cache = preUsies[i];\r\n                                        preUsies[i] = preUsies[i + 1];\r\n                                        preUsies[i + 1] = cache;\r\n                                        setPreUsies(preUsies.slice());\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: '↑', width: 30,\r\n                                    isEnable: i > 0,\r\n                                    callback: () => {\r\n                                        const cache = preUsies[i];\r\n                                        preUsies[i] = preUsies[i - 1];\r\n                                        preUsies[i - 1] = cache;\r\n                                        setPreUsies(preUsies.slice());\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: 'Delete', width: 60, callback: () => {\r\n                                        preUsies.splice(i, 1);\r\n                                        setPreUsies(preUsies.slice());\r\n                                    },\r\n                                },\r\n                            ]\r\n                        };\r\n                    })}\r\n                />\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"selft element\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Update',\r\n                        isEnable: errorList.length === 0,\r\n                        callback: () => {\r\n                            if (node.data == null) {\r\n                                const voicData: ThemaUtil.LevelVoic = {\r\n                                    source: JSON.parse(source),\r\n                                    preUsies: preUsies.slice()\r\n                                };\r\n                                node.data = voicData;\r\n                                rootData.voics.push(voicData);\r\n                                setTreeDisable(false);\r\n                            } else {\r\n                                const data = node.data as ThemaUtil.LevelVoic;\r\n                                data.source = JSON.parse(source);\r\n                                data.preUsies = preUsies.slice();\r\n                                invalidate();\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true, callback: () => {\r\n                            const parentNode = node.parent as TreeUtil.ElementNode;\r\n                            const parentData = parentNode.data as ThemaUtil.LevelRoot;\r\n                            setFocusNode(parentNode);\r\n                            const selfIndex = TreeUtil.getChildIndex(node);\r\n                            parentNode.children.splice(selfIndex, 1);\r\n                            parentData.voics.splice(selfIndex, 1);\r\n                            setTreeDisable(false);\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default VoicFormTab;","import { useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport ThemaUtil from \"./themaUtil\";\r\nimport TreeUtil from \"./treeUtil\";\r\n\r\nconst HierarchyNavi = (props: {\r\n    cur: TreeUtil.ElementNode | null;\r\n}) => {\r\n\r\n    const jsx = useMemo(() => {\r\n        if (props.cur == null) return <></>;\r\n        const list: JSX.Element[] = [];\r\n\r\n        const connect = (isCreaet: boolean, addInfo: () => void) => {\r\n            list.push(<span key={list.length}>{` > `}</span>);\r\n            if (isCreaet) list.push(<_Create key={list.length}>Create...</_Create>);\r\n            else {\r\n                addInfo();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 基本情報のJSXを追加する\r\n         * @param data データ\r\n         */\r\n        const addBaseInfo = (data: ThemaUtil.LevelBase) => {\r\n            list.push(<_Base key={list.length}>[{data.themaName}]</_Base>);\r\n        }\r\n        /**\r\n         * メソッド情報のJSXを追加する\r\n         * @param data データ\r\n         */\r\n        const addMethInfo = (data: ThemaUtil.LevelMethod) => {\r\n            connect(data == null, () => {\r\n                list.push(<_Meth key={list.length}>[{data.method}]</_Meth>);\r\n            });\r\n        }\r\n        /**\r\n         * 拍情報のJSXを追加する\r\n         * @param data データ\r\n         */\r\n        const addSustInfo = (data: ThemaUtil.LevelSust) => {\r\n            connect(data == null, () => {\r\n                list.push(<_Sust key={list.length}>[{data.beat}* ({data.head},{data.tail})]</_Sust>);\r\n            });\r\n\r\n        }\r\n        /**\r\n         * パターン情報のJSXを追加する\r\n         * @param data データ\r\n         */\r\n        const addPattInfo = (data: ThemaUtil.LevelPatt) => {\r\n            connect(data == null, () => {\r\n                list.push(<_Patt key={list.length}>{data.key}: [{data.pattName} channel: {data.source.channelSize}]</_Patt>);\r\n            });\r\n        }\r\n        /**\r\n         * 属性情報のJSXを追加する\r\n         * @param data データ\r\n         */\r\n        const addAttrInfo = (data: ThemaUtil.LevelAttr) => {\r\n            connect(data == null, () => {\r\n                const symbolNameList = data.symbols.map(symbol => (\r\n                    `[${TheoryUtil.getSymbolFromKey(symbol)?.name}]`\r\n                ));\r\n                list.push(<_Attr key={list.length}>@{data.attr}: {symbolNameList.join(', ')}</_Attr>);\r\n            });\r\n        }\r\n        /**\r\n         * ルート情報のJSXを追加する\r\n         * @param data データ\r\n         */\r\n        const addRootInfo = (data: ThemaUtil.LevelRoot) => {\r\n            connect(data ==null, () => {\r\n                const nameList = TheoryUtil.KEY12_SHARP_LIST;\r\n                list.push(<_Root key={list.length}>[{nameList[data.minIdx]}～{nameList[data.maxIdx]}]</_Root>);\r\n            });\r\n        }\r\n        /**\r\n         * ボイシング情報のJSXを追加する\r\n         * @param data データ\r\n         */\r\n        const addVoicInfo = (data: ThemaUtil.LevelVoic) => {\r\n            connect(data == null, () => {\r\n                list.push(<_Voic key={list.length}>[{data.source.map(v => {\r\n                    return `${v.octave}-${v.struct}`;\r\n                }).join(', ')}]</_Voic>);\r\n            });\r\n        }\r\n\r\n        // 選択されたノードに応じて、階層構造を表示する\r\n        switch (props.cur.depth) {\r\n            case 0: {\r\n                addBaseInfo(props.cur.data as ThemaUtil.LevelBase);\r\n            } break;\r\n            case 1: {\r\n                addBaseInfo(props.cur.parent?.data as ThemaUtil.LevelBase);\r\n                addMethInfo(props.cur.data as ThemaUtil.LevelMethod);\r\n            } break;\r\n            case 2: {\r\n                addBaseInfo(props.cur.parent?.parent?.data as ThemaUtil.LevelBase);\r\n\r\n                const methData = props.cur.parent?.data as ThemaUtil.LevelMethod;\r\n                addMethInfo(methData);\r\n                switch (methData.method) {\r\n                    case 'sustain': {\r\n                        addAttrInfo(props.cur.data as ThemaUtil.LevelAttr);\r\n                    } break;\r\n                    case 'pattern': {\r\n                        addSustInfo(props.cur.data as ThemaUtil.LevelSust);\r\n                    } break;\r\n                }\r\n            } break;\r\n            case 3: {\r\n                addBaseInfo(props.cur.parent?.parent?.parent?.data as ThemaUtil.LevelBase);\r\n\r\n                const methData = props.cur.parent?.parent?.data as ThemaUtil.LevelMethod;\r\n                addMethInfo(methData);\r\n                switch (methData.method) {\r\n                    case 'sustain': {\r\n                        addAttrInfo(props.cur.parent?.data as ThemaUtil.LevelAttr);\r\n                        addRootInfo(props.cur.data as ThemaUtil.LevelRoot);\r\n                    } break;\r\n                    case 'pattern': {\r\n                        addSustInfo(props.cur.parent?.data as ThemaUtil.LevelSust);\r\n                        addPattInfo(props.cur.data as ThemaUtil.LevelPatt);\r\n                    } break;\r\n                }\r\n            } break;\r\n            case 4: {\r\n                addBaseInfo(props.cur.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelBase);\r\n\r\n                const methData = props.cur.parent?.parent?.parent?.data as ThemaUtil.LevelMethod;\r\n                addMethInfo(methData);\r\n                switch (methData.method) {\r\n                    case 'sustain': {\r\n                        addAttrInfo(props.cur.parent?.parent?.data as ThemaUtil.LevelAttr);\r\n                        addRootInfo(props.cur.parent?.data as ThemaUtil.LevelRoot);\r\n                        addVoicInfo(props.cur.data as ThemaUtil.LevelVoic);\r\n                    } break;\r\n                    case 'pattern': {\r\n                        addSustInfo(props.cur.parent?.parent?.data as ThemaUtil.LevelSust);\r\n                        addPattInfo(props.cur.parent?.data as ThemaUtil.LevelPatt);\r\n                        addAttrInfo(props.cur.data as ThemaUtil.LevelAttr);\r\n                    } break;\r\n                }\r\n            } break;\r\n            case 5: {\r\n                addBaseInfo(props.cur.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelBase);\r\n\r\n                const methData = props.cur.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod;\r\n                addMethInfo(methData);\r\n                switch (methData.method) {\r\n                    case 'sustain': {\r\n\r\n                    } break;\r\n                    case 'pattern': {\r\n                        addSustInfo(props.cur.parent?.parent?.parent?.data as ThemaUtil.LevelSust);\r\n                        addPattInfo(props.cur.parent?.parent?.data as ThemaUtil.LevelPatt);\r\n                        addAttrInfo(props.cur.parent?.data as ThemaUtil.LevelAttr);\r\n                        addRootInfo(props.cur.data as ThemaUtil.LevelRoot);\r\n                    } break;\r\n                }\r\n            } break;\r\n            case 6: {\r\n                addBaseInfo(props.cur.parent?.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelBase);\r\n\r\n                const methData = props.cur.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod;\r\n                addMethInfo(methData);\r\n                switch (methData.method) {\r\n                    case 'sustain': {\r\n\r\n                    } break;\r\n                    case 'pattern': {\r\n                        addSustInfo(props.cur.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelSust);\r\n                        addPattInfo(props.cur.parent?.parent?.parent?.data as ThemaUtil.LevelPatt);\r\n                        addAttrInfo(props.cur.parent?.parent?.data as ThemaUtil.LevelAttr);\r\n                        addRootInfo(props.cur.parent?.data as ThemaUtil.LevelRoot);\r\n                        addVoicInfo(props.cur.data as ThemaUtil.LevelVoic);\r\n                    } break;\r\n                }\r\n            } break;\r\n        }\r\n        return list;\r\n    }, [props.cur]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_TextField>{jsx}</_TextField>\r\n        </_Wrap>\r\n    );\r\n};\r\n\r\nexport default HierarchyNavi;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #eeeeee3b;\r\n    border: 1px solid #402cad;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n    /* text-align: right; */\r\n`;\r\n\r\nconst _TextField = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    margin: 0 0 0 4px;\r\n    color: #0000005a;\r\n    font-weight: 400;\r\n`;\r\nconst _Create = styled.span`\r\n    color: #e69d00;\r\n`;\r\n\r\nconst _Base = styled.span`\r\n    color: #0c6900;\r\n`;\r\n\r\nconst _Meth = styled.span`\r\n    color: #23237e;\r\n`;\r\n\r\nconst _Sust = styled.span`\r\n    color: #7e5723;\r\n`;\r\nconst _Patt = styled.span`\r\n    color: #7e7223;\r\n`;\r\nconst _Attr = styled.span`\r\n    color: #7e2323;\r\n`;\r\nconst _Root = styled.span`\r\n    color: #79237e;\r\n`;\r\nconst _Voic = styled.span`\r\n    color: #237c7e;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport { BackingPatternProps, VoicingProps } from \"../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport TreeUtil from \"./treeUtil\";\r\n\r\nnamespace ThemaUtil {\r\n\r\n    export type Method = 'sustain' | 'pattern';\r\n\r\n    export type LevelAttr = {\r\n        attr: TheoryUtil.SymbolAttribute;\r\n        symbols: TheoryUtil.SymbolKey[];\r\n        roots: LevelRoot[];\r\n    }\r\n    export type LevelRoot = {\r\n        minIdx: number;\r\n        maxIdx: number;\r\n        voics: LevelVoic[];\r\n    }\r\n    export type PresetUse = {\r\n        presKey: number;\r\n        depPatt: number;\r\n    }\r\n    export type LevelVoic = {\r\n        source: VoicingProps[];\r\n        preUsies: PresetUse[];\r\n    }\r\n\r\n    export type LevelPatt = {\r\n        key: number;\r\n        pattName: string;\r\n        source: BackingPatternProps;\r\n        refer: number;\r\n        attrs: LevelAttr[];\r\n    }\r\n    export type LevelSust = {\r\n        beat: number;\r\n        head: number;\r\n        tail: number;\r\n        patts: LevelPatt[];\r\n    }\r\n\r\n    export type Prenam = {\r\n        seq: number;\r\n        name: string;\r\n    }\r\n    export type LevelMethod = {\r\n        method: Method;\r\n        prenams: Prenam[];\r\n        defs: LevelAttr[] | LevelSust[];\r\n    }\r\n\r\n    export type LevelBase = {\r\n        themaName: string;\r\n        meths: LevelMethod[];\r\n    }\r\n\r\n    export const getLabelJsx = (node: TreeUtil.ElementNode, isActive: boolean) => {\r\n        let innderJsx = <></>;\r\n\r\n        const setBaseJsx = () => {\r\n            const data = node.data as ThemaUtil.LevelBase;\r\n            innderJsx = (<>\r\n                <_TypeLabel type='base'>Base</_TypeLabel>\r\n                <_Label>{data.themaName}</_Label>\r\n            </>);\r\n        }\r\n        const setMethJsx = () => {\r\n            const data = node.data as ThemaUtil.LevelMethod;\r\n            innderJsx = (<>\r\n                <_TypeLabel type='method'>Method</_TypeLabel>\r\n                <_Label>{data.method}</_Label>\r\n            </>);\r\n        }\r\n        const setAttrJsx = () => {\r\n            const getMainLabel = () => {\r\n                if (node.data == null) {\r\n                    return <_Label><_Create>Create...</_Create></_Label>\r\n                } else {\r\n                    const data = node.data as ThemaUtil.LevelAttr;\r\n                    const list = data.symbols.map(symbol => (\r\n                        `[${TheoryUtil.getSymbolFromKey(symbol)?.name}]`\r\n                    ));\r\n                    return <_Label>@{data.attr}: <_C_Symbol>{list.join(', ')}</_C_Symbol></_Label>;\r\n                }\r\n            };\r\n            innderJsx = (<>\r\n                <_TypeLabel type='attr'>Attribute</_TypeLabel>\r\n                {getMainLabel()}\r\n            </>);\r\n        }\r\n        const setSustJsx = () => {\r\n            const getMainLabel = () => {\r\n                if (node.data == null) {\r\n                    return <_Label><_Create>Create...</_Create></_Label>\r\n                } else {\r\n                    const data = node.data as ThemaUtil.LevelSust;\r\n                    return <_Label>[{data.beat}* ({data.head},{data.tail})]</_Label>\r\n                }\r\n            };\r\n            innderJsx = (<>\r\n                <_TypeLabel type='sustain'>Sustain</_TypeLabel>\r\n                {getMainLabel()}\r\n            </>);\r\n        }\r\n        const setRootJsx = () => {\r\n            const getMainLabel = () => {\r\n                if (node.data == null) {\r\n                    return <_Label><_Create>Create...</_Create></_Label>\r\n                } else {\r\n                    const data = node.data as ThemaUtil.LevelRoot;\r\n                    const nameList = TheoryUtil.KEY12_SHARP_LIST;\r\n                    return <_Label>[{nameList[data.minIdx]}～{nameList[data.maxIdx]}]</_Label>;\r\n                }\r\n            };\r\n            innderJsx = (<>\r\n                <_TypeLabel type='root'>Root</_TypeLabel>\r\n                {getMainLabel()}\r\n            </>);\r\n        }\r\n        const setPattJsx = () => {\r\n            const getMainLabel = () => {\r\n                if (node.data == null) {\r\n                    return <_Label><_Create>Create...</_Create></_Label>\r\n                } else {\r\n                    const data = node.data as ThemaUtil.LevelPatt;\r\n                    const refers = (node.parent?.data as LevelSust).patts.map(patt => patt.refer);\r\n                    // 参照されていた場合masterを表示\r\n                    const master = !refers.includes(data.key) ? '' : ' master';\r\n                    const depend = data.refer === -1 ? '' : ` depend: ${data.refer}`;\r\n                    return (<_Label>\r\n                        <_P_Key>{data.key}</_P_Key>: [{data.pattName} <_P_Channel> channel: {data.source.channelSize}</_P_Channel>]\r\n                        <_P_Master>{master}</_P_Master>\r\n                        <_P_Depend>{depend}</_P_Depend>\r\n                    </_Label>);\r\n                }\r\n            };\r\n            innderJsx = (<>\r\n                <_TypeLabel type='pattern'>Pattern</_TypeLabel>\r\n                {getMainLabel()}\r\n            </>);\r\n        }\r\n        const setVoicJsx = () => {\r\n            const getMainLabel = () => {\r\n                if (node.data == null) {\r\n                    return <_Label><_Create>Create...</_Create></_Label>\r\n                } else {\r\n                    const data = node.data as ThemaUtil.LevelVoic;\r\n                    return <_Label>[{data.source.map(v => {\r\n                        return `${v.octave}-${v.struct}`;\r\n                    }).join(', ')}]</_Label>\r\n                }\r\n            };\r\n            innderJsx = (<>\r\n                <_TypeLabel type='voicing'>Voicing</_TypeLabel>\r\n                {getMainLabel()}\r\n            </>);\r\n        }\r\n        switch (node.depth) {\r\n            case 0: setBaseJsx(); break;\r\n            case 1: setMethJsx(); break;\r\n            case 2: {\r\n                const method = (node.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'sustain': setAttrJsx(); break;\r\n                    case 'pattern': setSustJsx(); break;\r\n                }\r\n            } break;\r\n            case 3: {\r\n                const method = (node.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'sustain': setRootJsx(); break;\r\n                    case 'pattern': setPattJsx(); break;\r\n                }\r\n            } break;\r\n            case 4: {\r\n                const method = (node.parent?.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'sustain': setVoicJsx(); break;\r\n                    case 'pattern': setAttrJsx(); break;\r\n                }\r\n            } break;\r\n            case 5: {\r\n                const method = (node.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'pattern': setRootJsx(); break;\r\n                }\r\n            } break;\r\n            case 6: {\r\n                const method = (node.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'pattern': setVoicJsx(); break;\r\n                }\r\n            } break;\r\n        }\r\n        return <_NodeFrame isActive={isActive}>{innderJsx}</_NodeFrame>\r\n    }\r\n\r\n    export const getInitialThema = (): LevelBase => {\r\n        return {\r\n            themaName: 'test',\r\n            meths: [\r\n                {\r\n                    method: 'sustain',\r\n                    prenams: [],\r\n                    defs: [\r\n                    ]\r\n                },\r\n                {\r\n                    method: 'pattern',\r\n                    prenams: [],\r\n                    defs: [\r\n                    ]\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\r\n\r\nexport default ThemaUtil;\r\n\r\n\r\nconst _CSS_FONT = css`\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    height: calc(100% - 8px);\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _TypeLabel = styled.div<{\r\n    type: 'base' | 'method' | 'pattern' | 'sustain' | 'attr' | 'root' | 'voicing'\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    ${_CSS_FONT}\r\n    color: #660000;\r\n    background-color: ${props => {\r\n        switch (props.type) {\r\n            case 'base': return '#6fa480';\r\n            case 'method': return '#7779a2';\r\n            case 'sustain': return '#c7a67e';\r\n            case 'pattern': return '#9b77a2';\r\n            case 'attr': return '#b67575';\r\n            case 'root': return '#a2a177';\r\n            case 'voicing': return '#779ea2';\r\n        }\r\n    }};\r\n    padding: 0 15px;\r\n    border-radius: 5px;\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    ${_CSS_FONT}\r\n    color: #6d1717;\r\n    background-color: #ffffff49;\r\n    padding: 0 10px;\r\n    margin-left: 5px;\r\n`;\r\nconst _C_Symbol = styled.span`\r\n    color: #959595;\r\n`;\r\nconst _P_Master = styled.span`\r\n    color: #d40101;\r\n`;\r\nconst _P_Depend = styled.span`\r\n    color: #0300cc;\r\n`;\r\nconst _Create = styled.span`\r\n    color: #fff9c2;\r\n`;\r\nconst _P_Channel = styled.span`\r\n    color: #d3701381;\r\n`;\r\nconst _P_Key = styled.span`\r\n    color: #868686;\r\n`;\r\n\r\nconst _NodeFrame = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    padding: 0 5px;\r\n    height: 100%;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fffb0077;\r\n    `}\r\n`;","import { useContext, useState, useEffect, useMemo, createContext, KeyboardEvent } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport BackingEditorFrame from \"../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport BackingEditorInput from \"../../score/edit/harmonize/input/backingEditorInput\";\r\nimport AttrFormTab from \"./form/attrFormTab\";\r\nimport BaseFormTab from \"./form/baseFormTab\";\r\nimport MethFormTab from \"./form/methFormTab\";\r\nimport PattFormTab from \"./form/pattFormTab\";\r\nimport RootFormTab from \"./form/rootFormTab\";\r\nimport SustFormTab from \"./form/sustFormTab\";\r\nimport ThemaEditTabUtil from \"./form/themaEditTabUtil\";\r\nimport VoicFormTab from \"./form/voicFormTab\";\r\nimport HierarchyNavi from \"./hierarchyNavi\";\r\nimport ThemaUtil from \"./themaUtil\";\r\nimport TreeUtil from \"./treeUtil\";\r\n\r\n\r\nexport const ThemaTreeContext = createContext({} as ThemaEditTabUtil.ComponentArgs);\r\n\r\nconst BackingLibraryTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [themaData, setThamaData] = useState(ThemaUtil.getInitialThema());\r\n    // const [isDispEditor, setDispEditor] = useState(true);\r\n\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    const [isBackingWnd, setBackingWnd] = useState(false);\r\n    const [treeDisable, setTreeDisable] = useState(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    // テーマファイルをデータノードに変換する\r\n    const rootDataNode = useMemo(() => {\r\n        const rootNode: TreeUtil.DataNode = {\r\n            data: themaData,\r\n            children: themaData.meths.map(type => {\r\n                const getDefsChildren = () => {\r\n                    switch (type.method) {\r\n                        case 'sustain': {\r\n                            return (type.defs as ThemaUtil.LevelAttr[]).map(attr => ({\r\n                                data: attr,\r\n                                children: attr.roots.map(root => ({\r\n                                    data: root,\r\n                                    children: root.voics.map(voic => ({\r\n                                        data: voic,\r\n                                        children: []\r\n                                    }))\r\n                                }))\r\n                            }));\r\n                        }\r\n                        case 'pattern': {\r\n                            return (type.defs as ThemaUtil.LevelSust[]).map(sust => ({\r\n                                data: sust,\r\n                                children: sust.patts.map(patt => ({\r\n                                    data: patt,\r\n                                    children: patt.attrs.map(attr => ({\r\n                                        data: attr,\r\n                                        children: attr.roots.map(roots => ({\r\n                                            data: roots,\r\n                                            children: roots.voics.map(voic => ({\r\n                                                data: voic,\r\n                                                children: []\r\n                                            }))\r\n                                        }))\r\n                                    }))\r\n                                }))\r\n                            }));\r\n                        }\r\n                    }\r\n                }\r\n                return {\r\n                    data: type,\r\n                    children: getDefsChildren()\r\n                }\r\n            })\r\n        }\r\n        return rootNode;\r\n    }, [themaData]);\r\n\r\n    const activeNo = useMemo<number>(() => {\r\n        if (focusNode != null) {\r\n            switch (focusNode.depth) {\r\n                case 0: {\r\n                    return 0;\r\n                }\r\n                case 1: {\r\n                    return 1;\r\n                }\r\n                case 2: {\r\n                    const method = (focusNode.parent?.data as ThemaUtil.LevelMethod).method;\r\n                    return method === 'sustain' ? 4 : 2;\r\n                }\r\n                case 3: {\r\n                    const method = (focusNode.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                    return method === 'sustain' ? 5 : 3;\r\n                }\r\n                case 4: {\r\n                    const method = (focusNode.parent?.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                    return method === 'sustain' ? 6 : 4;\r\n                }\r\n                case 5: {\r\n                    return 5;\r\n                }\r\n                case 6: {\r\n                    return 6;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }, [focusNode]);\r\n\r\n    const tabInner = (tabIndex: number, contJsx: JSX.Element) => {\r\n        return (\r\n            activeNo === tabIndex ? <_TabContWrap>{contJsx}</_TabContWrap> : <></>\r\n        )\r\n    }\r\n    // const tabProps: {\r\n\r\n    // }[] = [];\r\n    // const getTabContList = () => {\r\n    //     tabProps.map((props) => {\r\n\r\n    //         return {\r\n    //             name: 'base',\r\n    //             disable: true,\r\n    //             cont: tabInner(0, <BaseFormTab />\r\n    //             )\r\n    //         };\r\n    //     });\r\n    // };\r\n    // const tabContList = getTabContList();\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e: KeyboardEvent) => {\r\n                BackingEditorInput.main(e, store, dispatcher);\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <HierarchyNavi cur={focusNode}/>\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return ThemaUtil.getLabelJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={treeDisable}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <ThemaTreeContext.Provider value={{\r\n                    node: focusNode as TreeUtil.ElementNode,\r\n                    setFocusNode: setFocusNode,\r\n                    invalidate: () => { setInvalidate({}) },\r\n                    setBackingWnd,\r\n                    dispatcher,\r\n                    treeDisable,\r\n                    setThamaData,\r\n                    setTreeDisable\r\n                }}>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            {\r\n                                name: 'base', disable: true, cont: tabInner(0, <BaseFormTab\r\n                                    themaList={store.systemState.themaList}\r\n                                    addThema={(thema: ThemaUtil.LevelBase) => {\r\n                                        const themaList = store.systemState.themaList;\r\n                                        themaList.push(JSON.parse(JSON.stringify(thema)));\r\n                                        dispatcher.system.setState({ ...store.systemState, themaList });\r\n                                    }}\r\n                                />)\r\n                            },\r\n                            { name: 'Method', disable: true, cont: tabInner(1, <MethFormTab />) },\r\n                            { name: 'Sustain', disable: true, cont: tabInner(2, <SustFormTab />) },\r\n                            { name: 'Pattern', disable: true, cont: tabInner(3, <PattFormTab />) },\r\n                            { name: 'Attribute', disable: true, cont: tabInner(4, <AttrFormTab isPattern={focusNode?.depth === 4} />) },\r\n                            { name: 'Root', disable: true, cont: tabInner(5, <RootFormTab />) },\r\n                            { name: 'voicing', disable: true, cont: tabInner(6, <VoicFormTab isPattern={focusNode?.depth === 6} />) },\r\n                        ]}\r\n                        tabRecordNum={2}\r\n                        activeNo={activeNo}\r\n                        selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n                    />\r\n                </ThemaTreeContext.Provider>\r\n            </_PropsDiv>\r\n            <_Blind isVisible={isBackingWnd}>\r\n                <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n            </_Blind>\r\n        </_Wrap >\r\n    );\r\n}\r\nexport default BackingLibraryTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c3d8dd;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #532fc0; */\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n    padding: 6px 6px 6px 0;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;","import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport BackingLibraryTab from \"./backing/backingLibraryTab\";\r\n\r\n\r\nconst CustomChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Backing-Library', disable: true, cont: <BackingLibraryTab /> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={0}\r\n                // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CustomChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { Redirect } from \"react-router-dom\";\r\nimport CacheUtil from \"../../utils/score/cacheUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { ScoreData } from \"../../redux/store/score/scoreData\";\r\n\r\nconst DirectView = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const conteseq = DataUtil.getDecryptionedScoreSeq(props.hashKey);\r\n\r\n    const setScoreData = (owner: string, dispnam: string, data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n        store.systemState.mainChannelIndex = 5;\r\n        store.systemState.scoreTabIndex = 0;\r\n        store.systemState.directScore = {\r\n            owner, name: dispnam\r\n        };\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    useEffect(() => {\r\n        DataUtil.findScore(conteseq).then(resList => {\r\n            if (resList.length > 0) {\r\n                const source = resList[0]['data'];\r\n                const owner = resList[0]['owner'];\r\n                const dispnam = resList[0]['dispnam'];\r\n                const text = DataUtil.unZip(source);\r\n                setScoreData(owner, dispnam, JSON.parse(text));\r\n            }\r\n        });\r\n    }, []);\r\n    if (store.systemState.directScore == null) {\r\n        return <></>;\r\n    } else {\r\n        return <Redirect to=\"/\" />;\r\n        // return <MainFrame />;\r\n    }\r\n}\r\n\r\nexport default DirectView;","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectLogin = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        const seq = DataUtil.getDecryptionedUserSeq(props.hashKey);\r\n        console.log(seq);\r\n        DataUtil.findUserInfoFromSeq(seq).then(resList => {\r\n            console.log(resList);\r\n            if (resList.length > 0) {\r\n                const loginProps = resList[0];\r\n                store.userEnv.login = loginProps;\r\n                dispatcher.system.setUserEnv(store.userEnv);\r\n            }\r\n        });\r\n    }, []);\r\n    if (store.userEnv.login == null) {\r\n        return <></>;\r\n    } else {\r\n        return <Redirect to=\"/\" />;\r\n        // return <MainFrame />;\r\n    }\r\n}\r\n\r\nexport default DirectLogin;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { CgOptions, CgPiano } from 'react-icons/cg';\r\nimport { GiMusicalScore } from 'react-icons/gi';\r\nimport { ImPlay } from 'react-icons/im';\r\nimport { VscSettingsGear } from 'react-icons/vsc';\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\nimport PreviewChannel from \"../preview/previewChannel\";\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { ScoreData } from \"../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../utils/score/cacheUtil\";\r\nimport CustomChannel from \"../custom/customChannel\";\r\nimport DirectView from \"./directView\";\r\nimport DirectLogin from \"./directLogin\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    const isDirect = store.systemState.directScore != null;\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <_Wrap>\r\n                    {/* <DraggableDialog /> */}\r\n                    {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n                    <ChannelPane\r\n                        tabElements={[\r\n                            { name: 'Home', icon: <AiFillHome />, isEnable: !isDirect, cont: <HomeChannel /> },\r\n                            { name: 'Perform', icon: <CgPiano />, isEnable: false, cont: <PerformChannel /> },\r\n                            { name: 'Score', icon: <GiMusicalScore />, isEnable: !isDirect, cont: <ScoreChannel /> },\r\n                            { name: 'Custom', icon: <VscSettingsGear />, isEnable: !isDirect, cont: <CustomChannel /> },\r\n                            { name: 'Setting', icon: <CgOptions />, isEnable: false, cont: <SettingChannel /> },\r\n                            { name: 'Preview', icon: <ImPlay />, isEnable: isDirect, cont: !isDirect ? <></> : <PreviewChannel /> }\r\n                        ]}\r\n                        activeNo={store.systemState.mainChannelIndex}\r\n                        selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n                    />\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/test\" exact >\r\n                <_Wrap>\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/preview\" exact >\r\n                <DirectView hashKey={str} />\r\n            </Route>\r\n            <Route path=\"/user\" exact >\r\n                <DirectLogin hashKey={str} />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(350, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = '55pt Arial';\r\n            ctx.fillStyle = '#db0000';\r\n            ctx.fillText('L', 30, 70);\r\n            const adjust = ctx.measureText('L').width;\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.fillText('iCreSia', 30 + adjust, 70);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport AccountFrame from \"../accountFrame\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginCreateAccount = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isRegist, setRegist] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [passwordConfirm, setPasswordConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n\r\n    const createAuthText = () => {\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n        const list = '0123456789';\r\n        let text = '';\r\n        for (let i = 0; i < 6; i++) {\r\n            text += list.charAt(Math.random() * list.length);\r\n        }\r\n        return text;\r\n    };\r\n\r\n    /** 既存のユーザIDリストを格納 */\r\n    useEffect(() => {\r\n        DataUtil.findUserIdList().then(list => {\r\n            setUserIdList(list);\r\n        });\r\n\r\n        // fetch('https://api.ipify.org/?format=json').then(res => {\r\n        //     res.json().then(data => {\r\n        //         alert(data['ip']);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    const [authCollation, setAuthCollation] = useState<string>(createAuthText());\r\n    const [authInput, setAuthInput] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    /** キャッシュした認証画像 */\r\n    const authPicture = useMemo(() => {\r\n        return CanvasUtil.getAuthTextURL(authCollation);\r\n\r\n    }, [authCollation]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n                case 'relation': list.push('[password] does not match confirm.'); break;\r\n            }\r\n        }\r\n        if (passwordConfirm.errors.length > 0) {\r\n            switch (passwordConfirm.errors[0]) {\r\n                case 'length': list.push('[password *] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    const registAction = () => {\r\n\r\n        (async () => {\r\n            let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n            let results = await response.json();\r\n            console.log(JSON.stringify(results[0].cnt));\r\n            const isExist = results[0].cnt > 0;\r\n            if (isExist) {\r\n                setMessageList(['That user id has already been recorded.']);\r\n            } else {\r\n                const nextSeq = await DataUtil.getNextUserSeq();\r\n                console.log(nextSeq);\r\n                await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(seq, id, password) VALUES(${nextSeq}, '${userId.value}', '${password.value}')`)\r\n                dispatcher.system.setDialog(<ConfirmDialog.Component\r\n                    message='You have successfully created an account!'\r\n                    buttons={[\r\n                        {\r\n                            label: 'OK',\r\n                            callback: () => {\r\n                                store.userEnv.login = {\r\n                                    seq: nextSeq,\r\n                                    id: userId.value,\r\n                                    password: password.value,\r\n                                    email: '',\r\n                                };\r\n                                dispatcher.system.setUserEnv(store.userEnv);\r\n                                dispatcher.system.setDialog(<AccountFrame />);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />);\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0 && passwordConfirm.errors.length === 0;\r\n    }\r\n    const isAuthOK = () => {\r\n        return authInput.errors.length === 0 && authCollation === authInput.value;\r\n    }\r\n\r\n    return (<>\r\n\r\n        <_Frame isVisible={!isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass (Confirm).'}\r\n                    />\r\n                    <FormUtil.InputTextForm\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            },\r\n                            {\r\n                                checker: (value) => !userIdList.includes(value),\r\n                                errorType: \"relation\"\r\n                            },\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextForm\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === passwordConfirm.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[passwordConfirm]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextForm\r\n                        placeholder={'password*'}\r\n                        isPassword\r\n                        checkable={passwordConfirm}\r\n                        setCheckable={setPasswordConfirm}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === password.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[password]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Enter', isEnable: isLoginInfoOK(), callback: () => {\r\n                                    setRegist(true);\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Proof not a robot\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, input the same 6 number as the picture.'}\r\n                    />\r\n                    <_AuthText src={authPicture} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Change', callback: () => {\r\n                                    setAuthCollation(createAuthText());\r\n                                    setAuthInput({ value: '', errors: [] });\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                    {/* 照合する文字列 */}\r\n                    <FormUtil.InputTextForm\r\n                        placeholder={'6 numbers'}\r\n                        checkable={authInput}\r\n                        setCheckable={setAuthInput}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Regist', isEnable: isAuthOK(), callback: registAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setRegist(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginCreateAccount;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst _AuthText = styled.img<{\r\n}>`\r\n    display: block;\r\n    text-align: center;\r\n    margin: 4px auto;\r\n    background-color: #f7f0f0;\r\n    border: 1px solid #888888;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginLogin = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isForget, setForget] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        // alert(`Confirmation passwords don't match.`);\r\n        (async () => {\r\n            const results = await DataUtil.findUserInfoLogin(userId.value, password.value);\r\n            console.log(JSON.stringify(results));\r\n            if (results.length > 0) {\r\n                store.userEnv.login = {\r\n                    seq: results[0].seq,\r\n                    id: results[0].id,\r\n                    password: results[0].password,\r\n                    email: results[0].email,\r\n                };\r\n                dispatcher.system.setUserEnv(store.userEnv);\r\n                dispatcher.system.setDialog(<ConfirmDialog.Component\r\n                    message=\"Login successful!\"\r\n                />);\r\n            } else {\r\n                setMessageList(['Incorrect user id or password.']);\r\n                // setPassword({ ...password, value: '' });\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0;\r\n    }\r\n\r\n    return (<>\r\n        <_Frame isVisible={!isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass.'}\r\n                    />\r\n                    <FormUtil.InputTextForm\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextForm\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Enter', isEnable: isLoginInfoOK(), callback: enterAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Forgot your login information?\"\r\n                clickAction={() => {\r\n                    setForget(true);\r\n                }}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Email\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Submit login information to account address.'}\r\n                    />\r\n                    <FormUtil.InputTextForm\r\n                        placeholder={'email'}\r\n                        checkable={email}\r\n                        setCheckable={setEmail}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => {\r\n                                    return value.length === 0 || value.split('@').length === 2;\r\n                                },\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={500}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Send', isEnable: email.errors.length === 0, callback: () => {\r\n                                    DataUtil.findUserInfoFromEmail(email.value).then((list) => {\r\n                                        if (list.length > 0) {\r\n                                            const info = list[0];\r\n                                            const hash = DataUtil.getHashedFromUserSeq(info.seq);\r\n                                            const url = `https://demo-app.licresia.com/#/user?v=${hash}`;\r\n                                            DataUtil.sendQueryRequestToMailAPI({\r\n                                                from: 'info@licresia.com',\r\n                                                to: email.value,\r\n                                                subject: '【LiCreSia】support',\r\n                                                text: `Your login information is as follows.\\n\\nURL: ${url}\\nUSR ID: ${info.id}`\r\n                                            });\r\n                                            dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Your login information has been sent!\" />);\r\n                                        } else {\r\n                                            dispatcher.system.setDialog(<ConfirmDialog.Component message=\"This email address is not registered.\" />);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setForget(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginLogin;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LoginCreateAccount from \"./loginCreateAccount\";\r\nimport LoginLogin from \"./loginLogin\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 500;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_LogoDiv>\r\n                <img src={logo} />\r\n            </_LogoDiv>\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {!isCreate ? <LoginLogin /> : <LoginCreateAccount />}\r\n            {/* <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        { name: 'Close', callback: closeAction },\r\n                        { name: 'Enter', callback: enterAction },\r\n                    ]}\r\n                />\r\n            </_Footer> */}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #bf808075;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n    background-color: #bf8080a2;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #c7a73e;\r\n        `}\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const loginProps = store.userEnv.login;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    useEffect(() => {\r\n        console.log(loginProps);\r\n        if (loginProps != undefined) {\r\n            setUserId('@' + loginProps.id);\r\n        }\r\n    }, [loginProps]);\r\n\r\n    const authButtonJsx = loginProps == undefined ? (\r\n        <_LoginButton onClick={() => {\r\n            store.systemState.dialog = <LoginFrame />;\r\n            dispatcher.system.setState(store.systemState);\r\n            console.log(window.location.origin);\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName\r\n            isEntry={store.userEnv.login != null}\r\n            onClick={() => {\r\n                dispatcher.system.setDialog(<AccountFrame />);\r\n            }}\r\n        >{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            store.userEnv.login = null;\r\n            dispatcher.system.setUserEnv(store.userEnv);\r\n\r\n            dispatcher.system.setDialog(<ConfirmDialog.Component\r\n                message={'Logout.\\nSee you next time!'}\r\n            />);\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #003a86;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #96000057;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useCallback, useEffect, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    const callback = useCallback(dispatcher.system.switchSplashToMain, []);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={callback} /\r\n                    >}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\n\nconst REACT_APP_AUTH0_DOMAIN = 'dev-a0p0m4lr.us.auth0.com';\nconst REACT_APP_AUTH0_CLIENT_ID = 'ABaWpYVBZwTr3tkyxhq1kWh2YwT4epew';\n\nReactDOM.render(\n  <Auth0Provider\n    domain={REACT_APP_AUTH0_DOMAIN}\n    clientId={REACT_APP_AUTH0_CLIENT_ID}\n    redirectUri={window.location.origin}\n    // redirectUri={window.location.origin}\n  >\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Auth0Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}