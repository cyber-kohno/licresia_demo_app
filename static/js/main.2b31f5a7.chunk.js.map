{"version":3,"sources":["system/redux/reducer.tsx","system/utils/theoryUtil.tsx","system/utils/backingUtil.tsx","system/utils/cacheUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/utils/instrumentsUtil.tsx","system/redux/store/state/dataHistory.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/globalDialog.tsx","system/base/design/styles.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/contents/score/manage/chordProg/progUnitSearcher.tsx","system/contents/score/manage/chordProg/progStyle.tsx","system/contents/score/manage/chordProg/progBackingUtil.tsx","system/contents/score/manage/chordProg/progUtil.tsx","system/contents/score/manage/chordProg/progCustomFrame.tsx","system/utils/dummyUtil.tsx","system/contents/score/manage/chordProg/progOutputFrame.tsx","system/contents/score/manage/chordProg/progTemplateUtil.tsx","system/contents/score/manage/chordProg/progTemplateFrame.tsx","system/contents/score/manage/chordProg/chordProgDialog.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/tool/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailAlter.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcAlter.tsx","system/contents/score/edit/harmonize/tool/chordEditor.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFromStyles.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/side/sideFormAlter.tsx","system/contents/score/edit/harmonize/side/minuteForm.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/harmSideForm.tsx","system/contents/score/edit/harmonize/info/structViewer.tsx","system/contents/backing/pattern/builder/patternDetail.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternPedal.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternVelocity.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternOptions.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/initial/harmClipboard.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/melody/util/melodyTimelineMouseOperation.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/home/homeChannel.tsx","system/contents/preview/scoreInfoTab.tsx","system/contents/preview/previewChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx","system/utils/dataUtil.tsx"],"names":["ActionType","reducer","store","action","type","payload","SET_USER_ENV","userEnv","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","getBeatProps","keyIndex","scale","relation","beatSignature","beatMemoriCount","barBeatCnt","SYMBOL_LIST","beatLen","minute","bpm","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","root","index","isFlat","symbolKey","props","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","baseKeyIndex","TheoryUtil","KEY12_FLAT_LIST","KEY12_SHARP_LIST","find","symbol","list","forEach","push","rootIndex","map","on","chordRootIndex","chordFullName","getRootName","chordOnIndex","onName","structList","struct","interval","soundIndex","adjustOctave","Math","floor","isFlatFromRelation","sameIndex","some","info","i","splice","unshift","sort","a","b","onIndex","sound","onChordIndex","tempList","length","divCount","Array","fill","table","channels","j","octave","structIndex","voicingList","editorPattern","channelSize","layers","layer","divs","noteDivList","signals","record","cell","x","y","status","notesList","vels","velocityList","slice","pedals","pedalActs","pedal","divIndex","voicingStructs","size","channel","reverse","scoreLayers","console","log","JSON","stringify","scoreLayer","notes","item","baseInfo","backing","pitchIndexList","chordTime","pattern","soundName","playHarmony","adjustRate","pedalRangeList","total","timeList","div","start","normal","rate","isDot","div3","sustain","undefined","divTime","pedalInfo","end","ignoreList","ig","timeInfo","timingAdj","timing","startTime","sustainTime","signal","inc","isNext","nextNotes","next","k","notesTail","velAdj","gain","setTimeout","state","dispatcher","harmonyFont","stop","isPreview","id","clearInterval","setState","memoriCount","head","tail","getUsingLenFromDivs","reduce","prev","cur","len","checkOverlapBackLayer","structCnt","col","isExist","voicing","voicingTable","patternProps","BackingUtil","buildChannels","getChannels","convertEditorLayerFromScore","channelIndex","lenIndex","mode","layerIndex","detail","chordBacking","hasError","limitLen","getLimitLen","totalLen","chordInfo","init","baseLayer","backLayer","getDivRange","left","right","isOverlap","backLeft","backRight","note","includes","chordList","elementCacheList","sectionCacheList","beatCacheList","scaleCacheList","tempoCacheList","measureCacheList","totalMinute","sectionNo","sectionBeatSum","pastSecond","curSecond","chordIndex","curMemoriCount","totalBarCount","totalMemoriCount","beatRangeMemoriCount","totalBeat","totalMemoriBarCount","chordBlockNo","scaleMemoriCount","tempoMemoriCount","addTempoRange","beatRate","beatProps","memoriCnt","element","prevBeat","prevMemoriCount","prevBarCount","prevMinute","fixed","labelName","beatSum","rangeIndexStart","rangeIndexEnd","prevBar","calcSustainMsec","barMemoriCount","dispBarCount","barCount","alterType","modRel","dommVal","keyAdj","tempoRel","tempoDiff","tempoRate","tempoAbs","bar","surplusBeat","curTotalMemori","reffers","chordCacheList","createChordCacheList","score","setScoreState","cache","getSymbolFromKey","getChordDetails","backingError","hasBackingError","pos","curMemori","range","posTime","pastLen","last","CacheUtil","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len32","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","ml","getSortetdNotesLen","len32Cnt2","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","instrument","melodyFont","play","duration","soundFullName","stopPreview","melody","adjustScrollX","previewHarmony","data","focusIndex","lastFocus","update","firstTime","getTimeInfoFromNotesPos","lenTime","pitch","pitchIndex","destIndex","isSolo","system","setReserveTasks","cacheList","chordCache","pitchList","getPitchListFromVoicing","playBacking","tableMouse","curChord","MelodyUtil","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","PATTERN_HEADER_HEIGHT","PATTERN_BODY_HEIGHT","NOTES_1BAR_WIDTH","Dispatcher","dispatch","setUserEnv","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setInvalidate","saveFile","directScore","fileHandle","createWritable","writable","text","DataUtil","gZip","write","close","getFile","window","showSaveFilePicker","types","accept","then","handle","catch","setHarmonyFont","soundfontPlayer","harmony","setInstruments","setScoreTabIndex","scoreTabIndex","clearCache","distIndex","initialBeat","setKeySwitch","keySwitch","setScoreData","moveElement","sub","moveDist","releaseRange","isTail","distHead","distTail","moveSection","curSectionIndex","curSectionInfo","curElementType","flashElement","incrementDegreeRoot","isUp","incrementBeatLen","updateHarmonizeCache","incrementMinuteVal","value","target","incrementMinuteValRelation","nearIndex","addChordElement","curBeatLen","addSectionElement","addAlterElement","removeCurElement","copyElementList","parse","copiedElementList","cloneBacking","pasteElementList","setDiatonicChord","diatonicIndex","chord","DIATONIC_MAJOR_SCALE_LIST","DIATONIC_MINOR_SCALE_LIST","setDefaultBacking","getDefaultBacking","pastBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setMelodyFont","incrementCurPitch","isUpper","filter","dataHistory","add","normalLeft","scaleInfo","getKeyScaleFromNotesPos","scaleIndexies","MAJOR_SCALE_INTERVALS","MINOR_SCALE_INTERVALS","prevPitchIndex","tempPitchIndex","adjustScrollY","moveFocus","updateCurChord","moveDestFocus","beatWidth","searchedChord","width","addNotes","focus","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","posA","posB","undo","history","redo","openBackingEditor","hideMenu","getInitVoicingTable","getEditorPatternFromChordBacking","symbolAttr","getVoicingListFromTable","checkEditorError","closeBackingEditor","getInitialLayer","mappingEditorToScore","editor","buildPatternProps","addPatternColumn","lenList","curLen","newLen","column","updateErrorState","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","isPermitDot","getNotes","setNotes","incrementVel","after","deleteColumn","switchLayer","switchMode","testBacking","this","DataHistory","ret","initialStore","keyConfig","up","down","addChord","addSection","addChange","deleteCur","distMode","edit1","edit2","incRoot","decRoot","incBeat","decBeat","colorProps","entryBackground","editable","dialog","isMelody","sustainMode","chordMode","symbolMode","control","minHeadMode","minTailMode","backingDataHistory","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","timelineMouse","soundfontInfo","scaleMode","resize","move","shift","notesCacheList","harmonize","measure","harmoniizeInvalidate","GloballDialog","useContext","GlobalContext","_Blind","onClick","styled","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isEnable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","ChannelContents","_Contents","CSS_BUTTON_DISABLE","_Label","TabbedPane","isDisable","disable","TabLabel","_TabLabel","TabContents","condition","UNIT_LIST","beat","step","firstChord","secondChord","parseChord","source","baseBeat","keyList","split","charAt","newBeat","Number","diatonicNo","diatonicProps","adjustKey","adjust","shortNameKey","substring","getSymbolFromShortName","shortName","ProgUnitSearcher","ProgStyle","CSS_LABEL_MIDIUM","select","progBackingUtil","patternConditions","voicingConditions","STEP_LIST","getDefaultChord","sectionName","backingNo","outputUnits","elementList","block","blockDetail","sample","BACKING_SAMPLE_LIST","conPa","unZip","conVo","ProgUtil","ProgCustomFrame","setStep","degreeFilters","setDegreeFilters","lastChord","setLastChord","setFocusIndex","stepList","useMemo","getFilteredStepList","stepOptionJsxList","val","disp","degreeOptionJsxListArray","DEGREE_FILTER_LIST","unitList","search","jsx","dispUnitJsx","tootTipStr","beatCycle","chordName","getDegreeRoot","divStr","_Span","isMatch","_ChordName","_ProgItem","title","progUnitList","progJsxList","degreeChangeAction","e","_Frame","_TitleLabel","_Combobox","onChange","stepChangeAction","getLastChordName","_ListDiv","_ButtonDiv","_ExecutableButton","unitNum","reset","progUnit","insertProgUnit","_Record","RECORD_HEIGHT","span","DummyUtil","ProgOutputFrame","SECTION_CATEGORY","SECTION_NO","secCatOptionJsxList","secNoOptionJsxList","backingSampleJsxList","blockJsxList","isFixed","_Block","_FixedItem","_BackingLabel","updateOutputUnits","_ChordListDiv","_ChordItem","_ChordNameLabel","_ChordBeatDiv","jsxList","_BeatTip","getBeatTipsJsx","getInner","CSS_LABEL_SMALL","TEMPLATE_LIST","template","ProgTemplateUtil","ProgTemplateFrame","templateList","templateJsxList","isFocus","applyProgTemplate","ChordProgDialog","buildMode","setBuildType","getBlankBlockList","setOutputUnits","beatFilter","setBeatFilter","closeAction","beatOptionJsxList","BEAT_DEF_LIST","chordDetail","templateBean","getInitialBlockList","createSwitchableButton","clickEvent","_SwitchableButton","beatComboboxEnable","distBeatFilter","_Header","_MainDiv","_LeftDiv","_BeatFormDiv","beatChangeAction","_SwitchDiv","getSwitchContJsx","_RightDiv","_Footer","buildScoreData","HEADER_HEIGHT","BEAT_HEIGHT","ManageTab","file","setFile","tabIndex","loginProps","login","cloudScoreList","setCloudScoreList","cloudScoreName","setCloudScoreName","cloudScoreShare","setCloudScoreShare","loadCloudScore","findUserScoreList","seq","resList","res","hash","getHashedFromScoreSeq","url","getPreviewURL","share","modified","tempo","section","time","toString","getStringFromDate","Date","lastModified","sectionNum","chordNum","fileInfo","scoreInfo","textValue","changeAction","createLabelRecord","labelValue","_Recored","_ItemnLabel","_ItemnValue","fileDisconnectAction","isDataConnect","cloudScoreListJsx","_Message","_CloudItem","_CName","_CHash","curCloudScore","uploadEnable","isExistEditingData","isSelectedScore","_Wrap","_ButtonsDiv","_Button","_Left","_CloudDiv","newScoreName","sendQueryRequestToAPI","_ListFrame","findScore","_Right","showOpenFilePicker","fileContents","_DataInfoDiv","_ItemnInput","_ItemnURL","onContextMenu","navigator","clipboard","writeText","alert","_ItemnCombobox","_ScoreInfoDiv","DATA_INFO_HEIGHT","input","SymbolEditor","curSymbol","baseSymbol","derives","getSymbolDerives","parentJsx","curJsx","childrenJsx","_Row","CalcChord","symbolName","chordRoot","chordOn","prevCache","isError","minuteStr","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","barRem","_Len","_Border","ElementDetailAlter","_Type","sign","getDetailInfo","ElementDetailChord","degreeRoot","degreeOn","isDiatonic","getDiatonicDegreeList","_Degree","isSwitch","isSustainMode","scaleRelation","isOnChordScale","_DegreeRoot","_Tip","lenType","valueType","abs","_TipItem","_Error","_Voicing","_Pattern","isCurrent","_DegreeSymbol","_DegreeOnChord","_Backing","ElementFixedBorder","isStart","ElementDetailInit","_Title","_Value","ElementDetailSection","CalcAlter","getType","prevKey","curKey","curCache","prevTempo","curTempo","curBeat","getDetail","ChordEditor","getChord","createRow","label","listJsx","rootName","ScoreElement","wrapRef","useRef","bodyRef","isRange","isSameSection","wrap","current","body","elementJson","isInactive","ref","isSelectable","isAdditional","_Head","_CurKey","getDisplayKeyScaleName","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","HarmSections","sections","curSectionNo","_Total","addProgAction","callback","HarmonizeUtil","previewMelody","clearTimeout","edit","common","patternNormalMode","patternDetailMode","test","isEdit","baseVel","tempTiming","tempVelAdj","vel","curNotes","BackingEditorInput","NoteKeyDown","config","isElement","previewCurHarmony","NoteBasicInput","main","NoteKeySwitch","isPress","min","max","_NumberForm","SideFormStyles","SideFormAlter","createAlertTypeItem","createModulateRelationItem","rel","createTempoRelationItem","createBeatItem","donmmItemJsxList","_ParamDiv","_ParamItem","keyAdjItemJsxList","_Group","_CategoryLabel","createNumberForm","currentTarget","valueAsNumber","___CSS_TITLE","___CSS_FORM","JUDGE_INFO_LIST","MinuteForm","rateMinus","ratePlus","isRed","JudgeJsxList","judge","_JudgeItem","setValue","createJudgeItem","isHead","_View","_ViewFrame","isLeft","_Judge","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","DEGREE_ALL","degree","isRootActive","isOnActive","_RootItem","symbolItemsJsx","_SymbolItem","createMinuteForm","_Timing","_BeatDiv","_Minute","_RootDiv","_SymbolDiv","SideFormInit","scaleItemJsxList","SCALE_DEF_LIST","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","splitList","_NumberItem","_DirectText","_SelectDiv","_TemplateFrame","_NumberFrame","_ItemBase","HarmSideForm","StructViewer","indexList","scaleList","structJsxList","curIndex","isScale","isUse","isBlack","_Struct","WIDTH","PatternDetail","_DelayDiv","_TimingValue","_VelocityDiv","_VelFrame","_VelItem","VEL_DIV_WIDTH","PatternLength","itemJsxList","PatternPedal","_Column","PatternTable","channelCount","curLayer","layerJsxList","jsxLsit","notesJsxLsit","setNotesStatus","viewSignal","prevCell","_Notes","isBack","_State","isEven","isFront","_Layer","zIndex","PatternVelocity","PatternBuilder","useTotalLen","isLenOverError","memoriWidth","memoriJsxList","bean","thickness","height","color","_Memori","_LengthDiv","_MeasureDiv","_MemoriList","_ChordLenLine","_OverCover","_Body","ChannelItem","soundfont","_Option","CHANNEL_MAX","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","structInfo","_LayerItem","_ModeItem","proops","PatternOptions","createItem","createRateItem","String","setRate","sizeJsxList","_ListItem","isPermit3ren","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","tableRecord","curCell","setRowStaccato","isSet","editModeJsx","_WrapEdit","hasStaccato","isExistNext","isEnableTai","option","PatternFrame","isUsePattern","_UseSwitch","isUsePedal","_Main","_StatusDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","channelLimitNum","OCTAVE_NUM","STRUCT_NUM","rowJsxList","selectCount","cellJsxList","isSelected","key12List","getSoundFullName","_Cell","isOver","_TableRow","_StructItem","isOnChord","_InfoItem","_EditorDiv","_StructDiv","_TableDiv","_InfoDiv","TIP_WIDTH","BackingEditorFrame","_PrevireBrind","_FooterDiv","HarmHideFrame","isOpen","isBackingEnable","HarmClipboard","_TypeDiv","MEMORI_WIDTH","HarmMeasure","dataList","_Margin","_Bar","beatJsxList","minuteJsxList","isChordFocus","curChordIndex","beatMemori","posMemori","_SustainItem","scrollPos","_ScrollFrame","_Blocks","_Measure","HarmonizeTab","timelineJsx","structViewerJsx","scoreCache","sideFormEnable","onKeyDown","onKeyUp","_SectionsDiv","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_RIGHT_WIDTH","HARMONIZE_HEAD_WIDTH","MelodyTimelineMouseOperation","mouseDownEvent","timelineLength","button","rect","getBoundingClientRect","clientX","mouseMoveEvent","mouse","mouseUpEvent","scrollLeft","MelodyTimeline","measureRef","chordRef","barLength","measureJsxList","chordJsxList","minuteLen","scroll","clientWidth","symbolNmae","degreeName","_DegreeName","_ChordWrap","_MeasureWrap","_MeasureInner","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_MousePos","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","Soundfont","AudioContext","release","soundFontPlayer","QuantizeSwitch","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","getNextLeft","clientY","scrollTop","curPos","posX","lenWidth","newPos","prevFocus","MelodyInput","keyDownEvent","isSingle","keySwitchEvent","MelodyFrame","tableRef","pitchRef","setInvalidate2","isTune","scaleDivJsxList","divList","scaleJsxList","_ScaleLine","isBase","_ScaleList","notesJsxList","normalWidth","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_MouseLinePos","_MouseRange","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","_Test","editAnimation","keyframes","_MouseLine","TUNE_TIMELINE_WIDTH","_Scale","EditTab","isDirect","preview","toggleEnsamble","playJsx","_SwitchInner","stopJsx","ensambleJsx","soloJsx","_Mode","_Buttons","_Switch","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","items","degreeRootName","chordRootName","_Lane","_Box","HomeManage","useAuth0","isAuthenticated","user","isLoading","userId","setUserId","userCount","setUserCount","scoreList","setScoreList","email","countUsers","cnt","findAllScore","registerLabel","registerAction","location","reload","scoreListJsx","open","_Owner","owner","dispnam","_CDate","lastmod","_MessageRecord","_ListInfoDiv","_ItemnForm","response","json","results","ScoreInfoTab","PreviewChannel","MainFrame","basename","process","RouterManage","str","URLSearchParams","useLocation","get","path","exact","hashKey","DirectView","conteseq","getDecryptionedScoreSeq","to","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","remove","_NowLoading","_Copylight","fadeIn","TotalHeader","loginWithRedirect","logout","origin","findUserInfo","userList","userProps","authButtonJsx","_UserName","isEntry","_LoginButton","_ACCENT","_NORMAL","_Menu","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","useCallback","Provider","App","document","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","StrictMode","getElementById","DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getHashBuilder","Hashids","scoreSeq","encode","Base64","hashedScoreSeq","hashids","decode","hashedKey","queryType","sql","fetch","method","headers","Accept","createQueryRequestInit","userSeq","content","encodeURIComponent","zlib","gzipSync","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","plainData"],"mappings":"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","file":"static/js/main.2b31f5a7.chunk.js","sourcesContent":["import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_USER_ENV,\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n    SET_INVALIDATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_USER_ENV:\r\n            store.userEnv = payload.userEnv;\r\n            break;\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n        case ActionType.SET_INVALIDATE:\r\n            store.invalidate = payload.invalidate;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature, Scale } from \"../redux/store/score/scoreData\";\r\n\r\nnamespace TheoryUtil {\r\n\r\n    export const MAJOR_SCALE_INTERVALS = [0, 2, 4, 5, 7, 9, 11];\r\n    export const MINOR_SCALE_INTERVALS = [0, 2, 3, 5, 7, 8, 10];\r\n\r\n    export const KEY12_FLAT_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n    export const KEY12_SHARP_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n    ];\r\n\r\n    export const DEGREE12_FLAT_LIST = [\r\n        'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n    ];\r\n    // export const DEGREE12_FLAT_LIST = [\r\n    //     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n    // ];\r\n    export const DEGREE12_SHARP_LIST = [\r\n        'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n    ];\r\n\r\n    export const KEY12_MAJOR_SCALE_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const KEY12_MINOR_SCALE_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const getDisplayKeyScaleName = (keyIndex: number, scale: Scale) => {\r\n        return scale === 'major' ? KEY12_MAJOR_SCALE_LIST[keyIndex] :\r\n            KEY12_MINOR_SCALE_LIST[keyIndex] + 'm';\r\n    }\r\n\r\n    export const SCALE_DEF_LIST = ['major', 'minor'] as const;\r\n    export const BEAT_DEF_LIST = ['2/4', '4/4', '3/4', '6/8', '9/8', '12/8'] as const;\r\n\r\n    export type IntervalRelation =\r\n        'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n        'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n        'd7' | 'm7' | 'M7'\r\n        ;\r\n\r\n    export const isFlatFromRelation = (relation: IntervalRelation) => {\r\n        // 以下の場合#（シャープ）とする\r\n        switch (relation) {\r\n            case 'M2':\r\n            case 'M3':\r\n            case 'M6':\r\n            case 'M7':\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    export type SymbolAttribute =\r\n        'triad' |\r\n        'seventh' |\r\n        'add9th'\r\n        ;\r\n\r\n    export type SymbolParams = {\r\n        key: SymbolKey;\r\n        name: string;\r\n        base: null | SymbolKey;\r\n        attr?: SymbolAttribute;\r\n        structs: IntervalRelation[];\r\n    }\r\n\r\n    export type BeatProps = {\r\n        // mol: number;\r\n        // den: number;\r\n        // 1拍のメモリ（16分音符）の数\r\n        beatMemoriCount: number;\r\n        // 1小節の拍数\r\n        barBeatCnt: number;\r\n    }\r\n\r\n    /**\r\n     * 拍子より拍情報を取得する\r\n     * @param beatSignature 拍子\r\n     * @returns 拍情報\r\n     */\r\n    export const getBeatProps = (beatSignature: BeatSignature): BeatProps => {\r\n        switch (beatSignature) {\r\n            case '4/4': return { beatMemoriCount: 4, barBeatCnt: 4 };\r\n            case '2/4': return { beatMemoriCount: 4, barBeatCnt: 2 };\r\n            case '3/4': return { beatMemoriCount: 4, barBeatCnt: 3 };\r\n            case '6/8': return { beatMemoriCount: 6, barBeatCnt: 2 };\r\n            case '9/8': return { beatMemoriCount: 6, barBeatCnt: 3 };\r\n            case '12/8': return { beatMemoriCount: 6, barBeatCnt: 4 };\r\n        };\r\n        // return {} as BeatProps;\r\n    }\r\n\r\n    /**\r\n     * 拍の長さからコードの持続時間をミリ秒で算出する\r\n     * @param beatLen \r\n     * @param minute \r\n     * @param bpm \r\n     * @param beatSignature \r\n     * @returns \r\n     */\r\n    export const calcSustainMsec = (beatLen: number, minute: number, bpm: number, beatSignature: BeatSignature): number => {\r\n        const beatMemoriCount = getBeatProps(beatSignature).beatMemoriCount;\r\n        const minuteLen = minute * (1 / beatMemoriCount);\r\n        return 60000 / bpm * (beatLen + minuteLen);\r\n    }\r\n\r\n\r\n    export type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\n    export type SymbolKey =\r\n        'major' |\r\n        'minor' |\r\n        'suspend4th' |\r\n        'diminish' |\r\n        'augument' |\r\n        'major-maj7th' |\r\n        'major-min7th' |\r\n        'minor-7th' |\r\n        'minor-maj7th' |\r\n        'sus4-7th' |\r\n        'diminish-7th' |\r\n        'augument-7th' |\r\n        'major-add9th' |\r\n        'minor-add9th' |\r\n        'sixth-9th' |\r\n        'minor-minus5' |\r\n        'major-minus5' |\r\n        'minor7-minus5' |\r\n        'major-maj9th' |\r\n        'major-9th'\r\n        ;\r\n\r\n    export type DegreeProps = {\r\n        index: number;\r\n        isFlat: boolean;\r\n    };\r\n\r\n    export type ChordProps = {\r\n        root: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    };\r\n\r\n    export const SYMBOL_LIST: readonly SymbolParams[] = [\r\n        {\r\n            key: 'major', name: '',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor', name: 'm',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'suspend4th', name: 'sus4',\r\n            base: null,\r\n            structs: ['p1', 'p4', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish', name: 'dim',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish-7th', name: 'dim7',\r\n            base: 'diminish',\r\n            structs: ['p1', 'm3', 'd5', 'd7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'augument', name: 'aug',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'a5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'augument-7th', name: 'aug7',\r\n            base: 'augument',\r\n            structs: ['p1', 'M3', 'a5', 'm7']\r\n        },\r\n        {\r\n            key: 'minor-minus5', name: 'm(-5)',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'major-minus5', name: '-5',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor7-minus5', name: 'm7(-5)',\r\n            base: 'minor-minus5',\r\n            structs: ['p1', 'm3', 'd5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-maj7th', name: 'maj7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-min7th', name: '7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'minor-7th', name: 'm7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'sus4-7th', name: '7sus4',\r\n            base: 'suspend4th',\r\n            structs: ['p1', 'p4', 'p5', 'm7']\r\n        },\r\n        {\r\n            key: 'minor-maj7th', name: 'mmaj7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-add9th', name: 'add9',\r\n            base: 'major',\r\n            structs: ['p1', 'M2', 'M3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'minor-add9th', name: 'madd9',\r\n            base: 'minor',\r\n            structs: ['p1', 'M2', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-maj9th', name: 'maj9',\r\n            base: 'major-maj7th',\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-9th', name: '9',\r\n            base: 'major-min7th',\r\n            structs: ['p1', 'm3', 'p5']\r\n        },\r\n    ];\r\n\r\n    /** インターバルの関係性 */\r\n    export const IntervalRelationProps = {\r\n        'p1': 0,\r\n        'm2': 1,\r\n        'M2': 2,\r\n        'm3': 3,\r\n        'M3': 4,\r\n        'p4': 5,\r\n        'd5': 6,\r\n        'p5': 7,\r\n        'a5': 8,\r\n        'm6': 8,\r\n        'M6': 9,\r\n        'd7': 9,\r\n        'm7': 10,\r\n        'M7': 11\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n    ];\r\n\r\n    export const DIATONIC_MINOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor-minus5' },\r\n        { root: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n    ];\r\n\r\n\r\n\r\n    export const DEGREE_ALL: readonly (DegreeProps | null)[] = [\r\n        null,\r\n        { index: 0, isFlat: false },\r\n        { index: 1, isFlat: false },\r\n        { index: 1, isFlat: true },\r\n        { index: 2, isFlat: false },\r\n        { index: 3, isFlat: false },\r\n        { index: 3, isFlat: true },\r\n        { index: 4, isFlat: false },\r\n        { index: 5, isFlat: false },\r\n        { index: 6, isFlat: false },\r\n        { index: 6, isFlat: true },\r\n        { index: 7, isFlat: false },\r\n        { index: 8, isFlat: false },\r\n        { index: 8, isFlat: true },\r\n        { index: 9, isFlat: false },\r\n        { index: 10, isFlat: false },\r\n        { index: 10, isFlat: true },\r\n        { index: 11, isFlat: false }\r\n    ];\r\n\r\n    export const getDegreeRoot = (props: DegreeProps) => {\r\n        const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n        return list[props.index];\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰ', 'Ⅰmaj7',\r\n        'Ⅱm', 'Ⅱm7',\r\n        'Ⅲm', 'Ⅲm7',\r\n        'Ⅳ', 'Ⅳmaj7',\r\n        'Ⅴ', 'Ⅴ7',\r\n        'Ⅵm', 'Ⅵm7',\r\n        'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n    ];\r\n\r\n    export const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰm', 'Ⅰm7',\r\n        'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n        'bⅢ', 'bⅢM7',\r\n        'Ⅳm', 'Ⅳm7',\r\n        'Ⅴm', 'Ⅴm7',\r\n        'bⅥ', 'bⅥM7',\r\n        'bⅦ', 'bⅦ7'\r\n    ];\r\n\r\n    export const getDiatonicDegreeList = (scale: Scale) => {\r\n        return scale === 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES :\r\n            DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\r\n    }\r\n\r\n    export const getRootName = (\r\n        props: DegreeProps,\r\n        baseKeyIndex: number\r\n    ): string => {\r\n        const list = props.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST;\r\n        return list[(baseKeyIndex + props.index) % 12];\r\n    }\r\n\r\n\r\n\r\n    export const getSymbolFromKey = (key: string): SymbolParams | undefined => {\r\n        return SYMBOL_LIST.find((symbol) => {\r\n            if (key === symbol.key) {\r\n                return symbol;\r\n            }\r\n        });\r\n        // return ret != undefined ? ret : SYMBOL_LIST[0];\r\n    }\r\n\r\n    export const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n        let list: SymbolKey[] = [];\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (key === symbol.base) {\r\n                list.push(symbol.key);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n\r\n    export const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n        return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n    }\r\n}\r\n\r\nexport default TheoryUtil;\r\n\r\n","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { BackingLayerData, BackingPatternProps, BackingSignalProps, BeatSignature, ChordBacking, DetailChord, DetailInit, PedalInfo, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { playHarmony } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nexport namespace BackingUtil {\r\n\r\n    // オクターブの数\r\n    export const OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    export const STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    export const CHANNEL_MAX = 12;\r\n\r\n    export const getChordDetails = (\r\n        root: TheoryUtil.DegreeProps,\r\n        keyIndex: number,\r\n        on: null | TheoryUtil.DegreeProps,\r\n        symbol: TheoryUtil.SymbolParams\r\n    ): [\r\n            string, BackingState.StructInfo[]\r\n        ] => {\r\n\r\n        // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n        const chordRootIndex = (root.index + keyIndex) % 12;\r\n        const rootName = TheoryUtil.getRootName(root, keyIndex);\r\n        let chordFullName = rootName + symbol.name;\r\n\r\n        let chordOnIndex = -1;\r\n        // オンコードが設定されている場合\r\n        if (on != null) {\r\n            const onName = TheoryUtil.getRootName(on, keyIndex);\r\n            chordFullName = `${chordFullName}/${onName}`;\r\n\r\n            chordOnIndex = (on.index + keyIndex) % 12;\r\n        }\r\n\r\n        // 構成音情報を算出\r\n        let structList: BackingState.StructInfo[] = symbol.structs.map(struct => {\r\n            const relation = struct;\r\n            const interval = TheoryUtil.IntervalRelationProps[relation];\r\n            const soundIndex = (chordRootIndex + interval) % 12;\r\n            const adjustOctave = Math.floor((chordRootIndex + interval) / 12);\r\n            const isFlat = TheoryUtil.isFlatFromRelation(relation);\r\n            return {\r\n                relation, soundIndex, isFlat, adjustOctave\r\n            }\r\n        });\r\n        // オンコードを考慮\r\n        if (chordOnIndex !== -1) {\r\n            let sameIndex = -1;\r\n            structList.some((info, i) => {\r\n                if (info.soundIndex === chordOnIndex) {\r\n                    sameIndex = i;\r\n                    return;\r\n                }\r\n            });\r\n            // オンコードが構成音と被っている場合リストから削除\r\n            if (sameIndex !== -1) {\r\n                structList.splice(sameIndex, 1);\r\n            }\r\n            // オンコードをリストに追加\r\n            structList.unshift({\r\n                relation: null,\r\n                soundIndex: chordOnIndex,\r\n                isFlat: false,\r\n                adjustOctave: 0\r\n            });\r\n            // 音程の昇順でソート\r\n            structList.sort((a, b) => {\r\n                return a.soundIndex - b.soundIndex;\r\n            });\r\n\r\n            /** ソート後のオンコードの場所 */\r\n            let onIndex = -1;\r\n            structList.some((sound, i) => {\r\n                if (sound.relation == null) {\r\n                    onIndex = i;\r\n                    return;\r\n                }\r\n            });\r\n            const onChordIndex = structList[onIndex].soundIndex;\r\n            const tempList: BackingState.StructInfo[] = [];\r\n            for (let i = onIndex; i < structList.length; i++) {\r\n                const sound = structList[i];\r\n                tempList.push(sound);\r\n            }\r\n            for (let i = 0; i < onIndex; i++) {\r\n                const sound = structList[i];\r\n                tempList.push(sound);\r\n            }\r\n            tempList.forEach(sound => {\r\n                sound.adjustOctave = 0;\r\n                if (sound.soundIndex < onChordIndex) {\r\n                    sound.adjustOctave = 1;\r\n                }\r\n            });\r\n            structList = tempList;\r\n        }\r\n        return [chordFullName, structList];\r\n    }\r\n\r\n    export const getInitialRecord = (divCount: number) => {\r\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    export const buildChannels = (table: boolean[][]): BackingState.ChannelParam[] => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    export const getVoicingListFromTable = (table: boolean[][]) => {\r\n\r\n        const voicingList: VoicingProps[] = [];\r\n        // ボイシングを設定\r\n        if (table != null) {\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        voicingList.push({ octave: i, struct: j });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return voicingList;\r\n    }\r\n\r\n    export const buildPatternProps = (editorPattern: BackingState.Pattern): BackingPatternProps => {\r\n        const channelSize = editorPattern.channels.length;\r\n        const layers: BackingLayerData[] = [];\r\n        editorPattern.layers.forEach(layer => {\r\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\r\n            const signals: BackingSignalProps[] = [];\r\n            layer.table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        signals.push({ x: j, y: i, status: cell });\r\n                    }\r\n                });\r\n            });\r\n            layers.push({ divs, notesList: signals, vels: layer.velocityList.slice() });\r\n        });\r\n        const pedals: PedalInfo[] = [];\r\n        editorPattern.pedalActs.forEach((pedal, i) => {\r\n            if (pedal != null) pedals.push({\r\n                divIndex: i, action: pedal\r\n            });\r\n        });\r\n        return { channelSize, pedals, layers };\r\n    }\r\n\r\n    export const getChannels = (voicingStructs: BackingState.ChannelParam[], size: number) => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: BackingState.ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n\r\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\r\n\r\n        const layers: BackingState.Layer[] = [];\r\n        console.log(JSON.stringify(scoreLayers));\r\n        scoreLayers.forEach(scoreLayer => {\r\n            const table: (BackingState.NoteStatus | null)[][] = [];\r\n            for (let i = 0; i < channelSize; i++) {\r\n                const record: (BackingState.NoteStatus | null)[] = [];\r\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\r\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\r\n                    record.push(notes == null ? null : notes.status);\r\n                }\r\n                table.push(record);\r\n            }\r\n            layers.push({\r\n                noteDivList: scoreLayer.divs,\r\n                table,\r\n                velocityList: scoreLayer.vels\r\n            });\r\n        });\r\n        console.log(JSON.stringify(layers));\r\n        return layers;\r\n    }\r\n\r\n    export const getPitchListFromVoicing = (\r\n        voicingList: VoicingProps[],\r\n        structList: BackingState.StructInfo[]\r\n    ) => {\r\n        // return voicingList.map((item) => {\r\n        //     const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        //     return 12 * item.octave + rootIndex + interval;\r\n        // });\r\n        return voicingList.map((item) => {\r\n            // const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n            // return 12 * item.octave + rootIndex + interval;\r\n            const struct = structList[item.struct];\r\n            const octave = item.octave + struct.adjustOctave;\r\n            return 12 * octave + struct.soundIndex;\r\n        });\r\n    }\r\n\r\n    export const playBacking = (\r\n        store: Store,\r\n        reserveTasks: NodeJS.Timeout[],\r\n        baseInfo: DetailInit,\r\n        backing: ChordBacking,\r\n        pitchIndexList: number[],\r\n        chordTime: number\r\n    ) => {\r\n        if (backing.pattern == null) {\r\n            pitchIndexList.forEach((index) => {\r\n                const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                const octave = Math.floor(index / 12);\r\n                const soundFullName = soundName + octave;\r\n                playHarmony(soundFullName, store, chordTime / 1000, 5);\r\n            });\r\n        } else {\r\n\r\n            const bpm = baseInfo.bpm;\r\n            const beatProps = TheoryUtil.getBeatProps(baseInfo.beatSignature);\r\n            const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (2 / 3);\r\n\r\n            const pattern = backing.pattern;\r\n            // const pedalIndexes = pattern.pedals === undefined ? null : pattern.pedals.map(pedal => pedal.divIndex);\r\n\r\n            /** ペダルの有効範囲を定義したリスト */\r\n            const pedalRangeList: { start: number, end: number, action: BackingState.PedalAction }[] = [];\r\n            pattern.layers.forEach((layer, i) => {\r\n                /** バッキング内で経過した時間（ノーツごとの開始時間） */\r\n                let total = 0;\r\n                const timeList: {\r\n                    start: number, sustain: number\r\n                }[] = layer.divs.map(div => {\r\n                    /** 開始時間 */\r\n                    const start = 60000 / bpm * total;\r\n                    let normal = 4 / div.rate * adjustRate;\r\n                    if (div.isDot) normal *= 1.5;\r\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                    total += normal;\r\n                    return { start, sustain: 60000 / bpm * normal };\r\n                });\r\n\r\n                // ペダル状態のキャッシュを作成\r\n                if (i === 0 && pattern.pedals != undefined) {\r\n                    timeList.forEach((divTime, j) => {\r\n                        const pedalInfo = pattern.pedals?.find((pedal) => {\r\n                            if (j === pedal.divIndex) return pedal;\r\n                        });\r\n                        if (pedalInfo != undefined) {\r\n\r\n                            if (pedalRangeList.length > 0) {\r\n                                pedalRangeList[pedalRangeList.length - 1].end = divTime.start;\r\n                            }\r\n                            pedalRangeList.push({\r\n                                start: divTime.start,\r\n                                end: chordTime,\r\n                                action: pedalInfo.action\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /** 除外リスト（タイで吸収されるノーツ） */\r\n                const ignoreList: { x: number, y: number }[] = [];\r\n                layer.notesList.forEach((notes) => {\r\n\r\n                    // 除外リストに含まれている場合、以降の処理をしない\r\n                    if (ignoreList.find(ig => {\r\n                        if (ig.x === notes.x && ig.y === notes.y) return ig;\r\n                    }) !== undefined) return;\r\n\r\n                    const timeInfo = timeList[notes.x];\r\n                    const timing = notes.status.timing == undefined ? 0 : notes.status.timing;\r\n                    const timingAdj = timing * (60000 / bpm * 1 / 32);\r\n                    const startTime = timeInfo.start + timingAdj;\r\n\r\n                    /** 持続時間 */\r\n                    let sustainTime = timeInfo.sustain;\r\n                    if (notes.status.signal === 's') {\r\n                        // スタッカートの場合半分の音価にする\r\n                        sustainTime *= 0.5;\r\n                    } else if (notes.status.signal === 't') {\r\n\r\n                        let inc = notes.x;\r\n                        let isNext = true;\r\n                        while (isNext) {\r\n                            inc++;\r\n                            // 次のノーツを探す\r\n                            const nextNotes = layer.notesList.find(next => {\r\n                                if (next.x === inc && next.y === notes.y) {\r\n                                    return next;\r\n                                }\r\n                            });\r\n                            if (nextNotes != undefined) {\r\n                                sustainTime += timeList[inc].sustain;\r\n                                // 次の要素を除外する\r\n                                ignoreList.push({ x: inc, y: notes.y });\r\n                                // 次のノーツがタイだったらループを継続\r\n                                isNext = nextNotes.status.signal === 't';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //ペダルを検出\r\n                    for (let k = 0; k < pedalRangeList.length; k++) {\r\n                        const pedal = pedalRangeList[k];\r\n                        const notesTail = startTime + timeInfo.sustain;\r\n                        if (pedal.action !== 'off' && notesTail > pedal.start &&\r\n                            notesTail <= pedal.end\r\n                        ) {\r\n                            // ペダルの持続時間で更新\r\n                            sustainTime = pedal.end - startTime;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    /** 音量 */\r\n                    const velAdj = notes.status.velAdj == undefined ? 0 : notes.status.velAdj;\r\n                    let gain = layer.vels[notes.x] + velAdj;\r\n                    if (gain < 1) gain = 1;\r\n                    if (gain > 10) gain = 10;\r\n                    gain *= 0.6;\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            const index = pitchIndexList[notes.y];\r\n                            const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                            const octave = Math.floor(index / 12);\r\n                            const soundFullName = soundName + octave;\r\n                            playHarmony(soundFullName, store, sustainTime / 1000, gain);\r\n                        }, startTime)\r\n                    );\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    export const stopPreview = (store: Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        store.instruments.harmonyFont?.stop();\r\n        state.isPreview = false;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    export const getLimitLen = (beatLen: number, minute: BackingState.MinuteProps, beatSignature: BeatSignature) => {\r\n        // 16分音符の長さで割る\r\n        const memoriCount = TheoryUtil.getBeatProps(beatSignature).beatMemoriCount;\r\n        const minuteLen = minute.head / memoriCount + minute.tail / memoriCount;\r\n        return (beatLen + minuteLen);\r\n    }\r\n\r\n    export const getUsingLenFromDivs = (divs: BackingState.NoteDiv[], beatSignature: BeatSignature) => {\r\n        const beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        const adjustRate = 4 / beatProps.beatMemoriCount;\r\n        return divs.reduce((prev, cur) => {\r\n            let len = 1 / cur.rate * adjustRate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            return prev + len * 4;\r\n        }, 0);\r\n    }\r\n\r\n    export const getInitVoicingTable = (voicingList: VoicingProps[], structCnt: number): boolean[][] => {\r\n        const table = new Array<boolean[]>(8);\r\n        for (let i = 0; i < table.length; i++) {\r\n            table[i] = new Array<boolean>(6);\r\n            const col = table[i];\r\n            for (let j = 0; j < col.length; j++) {\r\n                // 構成音をオーバーしていた場合セットしない\r\n                if (j >= structCnt) continue;\r\n\r\n                const isExist = voicingList.find(voicing => {\r\n                    if (voicing.octave === i && voicing.struct === j) {\r\n                        return voicing;\r\n                    }\r\n                });\r\n                table[i][j] = isExist != null;\r\n            }\r\n        }\r\n        return table;\r\n    };\r\n\r\n    export const getEditorPatternFromChordBacking = (voicingTable: boolean[][], patternProps: BackingPatternProps | null) => {\r\n        let pattern: BackingState.Pattern | null = null;\r\n        if (patternProps != null) {\r\n            const voicingStructs = BackingUtil.buildChannels(voicingTable);\r\n            const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\r\n            const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);\r\n            let pedalActs: (null | BackingState.PedalAction)[] = [];\r\n            if (patternProps.pedals != undefined) {\r\n                for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\r\n                    const pedal = patternProps.pedals.find(pedal => {\r\n                        if (pedal.divIndex === i) return pedal;\r\n                    });\r\n                    if (pedal == undefined) pedalActs.push(null);\r\n                    else pedalActs.push(pedal.action);\r\n                }\r\n            } else {\r\n                for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\r\n                    if (i === 0) pedalActs.push('on');\r\n                    else pedalActs.push(null);\r\n                }\r\n            }\r\n            pattern = {\r\n                channelIndex: -1,\r\n                lenIndex: 0,\r\n                mode: 'velocity',\r\n                layerIndex: 0,\r\n                channels,\r\n                layers,\r\n                pedalActs\r\n            };\r\n        }\r\n        return pattern;\r\n    }\r\n\r\n    export const hasBackingError = (detail: DetailChord, beatSignature: BeatSignature, structCnt: number) => {\r\n        const chordBacking = detail.backing;\r\n        const voicingList = detail.backing.voicingList;\r\n        const pattern = chordBacking.pattern;\r\n        \r\n        let hasError = false;\r\n\r\n        // ボイシングが構成音に収まっているかチェック\r\n        voicingList.some(voicing => {\r\n            if(voicing.struct > structCnt - 1) {\r\n                hasError = true;\r\n                return true; // ループから脱出\r\n            }\r\n        });\r\n        if (pattern != null) {\r\n\r\n            const limitLen = BackingUtil.getLimitLen(detail.beatLen, detail.minute, beatSignature);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getUsingLenFromDivs(layer.divs, beatSignature);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkEditorError = (\r\n        chordInfo: BackingState.ChordInfo,\r\n        voicingList: VoicingProps[],\r\n        pattern: null | BackingState.Pattern\r\n    ): boolean => {\r\n        let hasError = false;\r\n        if (pattern != null) {\r\n\r\n            // 選択しているボイシングがチャンネル数に満たない場合\r\n            if (voicingList.length < pattern.channels.length) hasError = true;\r\n\r\n            const limitLen = BackingUtil.getLimitLen(chordInfo.beatLen, chordInfo.minute, chordInfo.init.beatSignature);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getUsingLenFromDivs(layer.noteDivList, chordInfo.init.beatSignature);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n\r\n            // 裏レイヤーのノーツと重なっている場合\r\n            pattern.layers[0].table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        if (checkOverlapBackLayer(pattern.layers, 0, i, j)) {\r\n                            hasError = true;\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkOverlapBackLayer = (layers: BackingState.Layer[], layerIndex: number, channelIndex: number, divIndex: number): boolean => {\r\n        const baseLayer = layers[layerIndex];\r\n        const backLayer = layers[layerIndex === 0 ? 1 : 0];\r\n        const [left, right] = getDivRange(baseLayer.noteDivList, divIndex);\r\n        // console.log(`left=${left}, right=${right}`);\r\n        let isOverlap = false;\r\n        for (let i = 0; i < backLayer.noteDivList.length; i++) {\r\n            if (backLayer.table[channelIndex][i] != null) {\r\n                const [backLeft, backRight] = getDivRange(backLayer.noteDivList, i);\r\n                if (right > backLeft && left < backRight) {\r\n                    isOverlap = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return isOverlap;\r\n    }\r\n\r\n    export const getDivRange = (divs: BackingState.NoteDiv[], divIndex: number): [number, number] => {\r\n        let [left, right] = [0, 0];\r\n\r\n        divs.slice(0, divIndex + 1).forEach((cur, i) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            left = right;\r\n            right += len * 4;\r\n        });\r\n        return [left, right];\r\n    }\r\n\r\n    export const isPermitDot = (note: BackingState.NoteDiv) => {\r\n        return [8, 4, 2].includes(note.rate) && note.div3 === 0;\r\n    }\r\n\r\n    export const isPermit3ren = (note: BackingState.NoteDiv) => {\r\n        return [8, 4].includes(note.rate) && !note.isDot;\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { symbolName } from \"typescript\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n/**\r\n * データを高速で参照するために、\r\n * 事前に計算したデータを保持するためのユーティリティを提供する\r\n */\r\nnamespace CacheUtil {\r\n\r\n    /**\r\n     * ハーモナイズのキャッシュを生成する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const updateHarmonizeCache = (store: Store, dispatcher: Dispatcher) => {\r\n        const chordList = store.scoreData.chordList;\r\n        const scoreState = store.scoreState;\r\n        const init = (chordList[0].detail as DetailInit);\r\n\r\n        const elementCacheList: ScoreCache.Element[] = [];\r\n        const sectionCacheList: ScoreCache.Section[] = [];\r\n        const beatCacheList: ScoreCache.BeatRange[] = [];\r\n        const scaleCacheList: ScoreCache.KeyScaleRange[] = [];\r\n        const tempoCacheList: ScoreCache.TempoRange[] = [];\r\n        const measureCacheList: ScoreCache.Measure[] = [];\r\n\r\n        // 初期値情報\r\n        let keyIndex = init.keyIndex;\r\n        let scale = init.scale;\r\n        let bpm = init.bpm;\r\n\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let sectionBeatSum = 0;\r\n        let pastSecond = 0;\r\n        let curSecond = 0;\r\n        let chordIndex = -1;\r\n        // let curTotalBeat = 0;\r\n        let curMemoriCount = 0;\r\n        let totalBarCount = 0;\r\n\r\n        // 経過した16分音符のカウント\r\n        let totalMemoriCount = 0;\r\n        let beatRangeMemoriCount = 0;\r\n        let totalBeat = 0;\r\n        let totalMemoriBarCount = 0;\r\n\r\n        let chordBlockNo = -1;\r\n\r\n        //拍キャッシュの産出に使う変数\r\n        let beatSignature = init.beatSignature;\r\n\r\n        let scaleMemoriCount = 0;\r\n        let tempoMemoriCount = 0;\r\n\r\n        const addScaleRange = () => {\r\n            scaleCacheList.push({\r\n                keyIndex,\r\n                scale,\r\n                memoriCnt: scaleMemoriCount\r\n            });\r\n            scaleMemoriCount = 0;\r\n        }\r\n        const addTempoRange = () => {\r\n            tempoCacheList.push({\r\n                bpm,\r\n                beatRate: beatProps.beatMemoriCount / 4,\r\n                memoriCnt: tempoMemoriCount\r\n            });\r\n            tempoMemoriCount = 0;\r\n        }\r\n\r\n\r\n        let beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        chordList.forEach((element, i) => {\r\n\r\n            const prevBeat = totalBeat;\r\n            // ブロック頭のメモリ\r\n            const prevMemoriCount = totalMemoriCount;\r\n            // ブロック頭の小節\r\n            const prevBarCount = totalBarCount;\r\n            const prevMinute = totalMinute;\r\n            const type = element.type;\r\n\r\n            switch (type) {\r\n                // 固定要素ブロック\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        pastSecond += curSecond;\r\n                    }\r\n                } break;\r\n\r\n                // セクション要素ブロック\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                } break;\r\n\r\n                // コード要素ブロック\r\n                case 'chord': {\r\n                    pastSecond += curSecond;\r\n                    // curTotalBeat += curSustain;\r\n\r\n                    const detail = element.detail as DetailChord;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    totalMinute += minute;\r\n                    chordIndex++;\r\n\r\n                    curMemoriCount = detail.beatLen * beatProps.beatMemoriCount + minute;\r\n\r\n                    const prevBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    totalBeat += detail.beatLen;\r\n                    const curBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    // 小節が変わった場合、合計小節をインクリメント\r\n                    if (prevBar !== curBar) {\r\n                        totalBarCount++\r\n                    }\r\n\r\n                    // スケールキャッシュの長さを加算\r\n                    scaleMemoriCount += curMemoriCount;\r\n                    tempoMemoriCount += curMemoriCount;\r\n\r\n                    // 時間の計算\r\n                    curSecond = TheoryUtil.calcSustainMsec(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        bpm,\r\n                        beatSignature\r\n                    );\r\n\r\n                    // メモリの加算\r\n                    for (let j = 0; j < curMemoriCount; j++) {\r\n                        let rate: ScoreCache.MeasureRate = 16;\r\n                        if (beatRangeMemoriCount % beatProps.beatMemoriCount === 0) rate = 4;\r\n                        else if (beatRangeMemoriCount % (beatProps.beatMemoriCount / (beatProps.beatMemoriCount / 2)) === 0) rate = 8;\r\n\r\n                        const barMemoriCount = beatProps.barBeatCnt * beatProps.beatMemoriCount;\r\n\r\n                        let dispBarCount = -1;\r\n                        if (beatRangeMemoriCount % barMemoriCount === 0) {\r\n                            // 拍子セクションの合計メモリ数が小節のメモリ数で割り切れる場合、小節数を表示する\r\n                            totalMemoriBarCount++;\r\n                            dispBarCount = totalMemoriBarCount;\r\n                        }\r\n                        measureCacheList.push({ rate, barCount: dispBarCount });\r\n                        totalMemoriCount++;\r\n                        beatRangeMemoriCount++;\r\n                    }\r\n\r\n                    // コードブロック連番の設定\r\n                    chordBlockNo++;\r\n                } break;\r\n\r\n                // アルター要素ブロックする\r\n                case 'alter': {\r\n                    const detail = element.detail as DetailAlter;\r\n                    switch (detail.alterType) {\r\n                        // 音階が変わる\r\n                        case 'modulate': {\r\n                            addScaleRange();\r\n                            switch (detail.modRel) {\r\n                                case 'domm': {\r\n                                    keyIndex = (keyIndex + 24 + 7 * detail.dommVal) % 12;\r\n                                } break;\r\n                                case 'key': {\r\n                                    keyIndex = (keyIndex + 12 + detail.keyAdj) % 12;\r\n                                } break;\r\n                                case 'parallel': {\r\n                                    keyIndex = (keyIndex + 12 + (scale === 'major' ? -1 : 1) * 3) % 12;\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                                case 'relative': {\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // テンポが変わる\r\n                        case 'tempo': {\r\n                            addTempoRange();\r\n                            switch (detail.tempoRel) {\r\n                                case 'diff': {\r\n                                    bpm += detail.tempoDiff;\r\n                                } break;\r\n                                case 'rate': {\r\n                                    bpm = Math.floor(bpm * 1 * (detail.tempoRate / 100));\r\n                                } break;\r\n                                case 'abs': {\r\n                                    bpm = detail.tempoAbs;\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // 拍子が変わる\r\n                        case 'beat': {\r\n                            addTempoRange();\r\n                            // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n                            beatCacheList.push({\r\n                                beatSignature,\r\n                                memoriCnt: beatRangeMemoriCount\r\n                            });\r\n\r\n                            beatSignature = detail.beatSignature;\r\n                            // 拍を初期化する（拍変更後はいかなる場合も0から数える）\r\n                            totalBeat = 0;\r\n                            beatRangeMemoriCount = 0;\r\n\r\n                            beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n                        } break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n\r\n            elementCacheList.push({\r\n                bar: prevBarCount,\r\n                surplusBeat: prevBeat % beatProps.barBeatCnt,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                scale,\r\n                bpm,\r\n                beatSignature,\r\n                sectionNo,\r\n                pastSecond,\r\n                chordIndex,\r\n                curTotalMemori: prevMemoriCount,\r\n                // chordFullName,\r\n                // structList,\r\n                chordBlockNo,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n        scaleCacheList.push({\r\n            keyIndex,\r\n            scale,\r\n            memoriCnt: scaleMemoriCount\r\n        });\r\n\r\n        beatCacheList.push({\r\n            beatSignature,\r\n            memoriCnt: beatRangeMemoriCount\r\n        });\r\n        addTempoRange();\r\n\r\n        scoreState.elementCacheList = elementCacheList;\r\n        scoreState.sectionCacheList = sectionCacheList;\r\n        scoreState.beatCacheList = beatCacheList;\r\n        scoreState.tempoCacheList = tempoCacheList;\r\n        scoreState.scaleCacheList = scaleCacheList;\r\n        scoreState.measureCacheList = measureCacheList;\r\n\r\n        scoreState.chordCacheList = createChordCacheList(chordList, elementCacheList);\r\n\r\n        dispatcher.score.setScoreState(scoreState);\r\n    }\r\n\r\n    export const createChordCacheList = (chordList: ChordElement[], elementCacheList: ScoreCache.Element[]) => {\r\n\r\n        const chordCacheList: ScoreCache.Chord[] = [];\r\n\r\n        chordList.forEach((element, i) => {\r\n\r\n            const type = element.type;\r\n            if (type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const cache = elementCacheList[i];\r\n\r\n\r\n                const keyIndex = cache.keyIndex;\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                const [chordFullName, structList] = detail.root != null ? BackingUtil.getChordDetails(\r\n                    detail.root,\r\n                    keyIndex,\r\n                    detail.on,\r\n                    symbol\r\n                ) : ['', []];\r\n\r\n                const backingError = BackingUtil.hasBackingError(detail, cache.beatSignature, structList.length);\r\n\r\n                chordCacheList.push({\r\n                    structList,\r\n                    chordFullName,\r\n                    backingError\r\n                });\r\n\r\n            }\r\n        });\r\n        return chordCacheList;\r\n    }\r\n\r\n    // export const getChordCache = (focusIndex: number, ) => {\r\n\r\n    // }\r\n\r\n\r\n    // export const updateMelodyCache = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    //     const notesList = store.scoreData.notesList;\r\n    //     const state = store.melodyState;\r\n\r\n    //     const notesCacheList: ScoreCache.NotesCache[] = [];\r\n\r\n    //     notesList.forEach((notes) => {\r\n    //         const startTime = 0;\r\n    //         const duration = 0;\r\n    //         notesCacheList.push({\r\n    //             startTime,\r\n    //             duration\r\n    //         });\r\n    //     });\r\n    // }\r\n\r\n    export const getKeyScaleFromNotesPos = (pos: number, scaleCacheList: ScoreCache.KeyScaleRange[]) => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let range: ScoreCache.KeyScaleRange | null = null;\r\n        // console.log(`count: ${scaleCacheList.length}`);\r\n        for (let i = 0; i < scaleCacheList.length; i++) {\r\n            const info = scaleCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                range = scaleCacheList[i - 1];\r\n                break;\r\n            }\r\n            tail += info.memoriCnt;\r\n            // console.log(`curPos: ${tail}`);\r\n        }\r\n        // console.log(`curMemori: ${curMemori}`);\r\n        return range === null ? scaleCacheList[scaleCacheList.length - 1] : range;\r\n    }\r\n\r\n    /**\r\n     * ノーツを再生する開始時間と持続時間を産出して返す\r\n     * @param pos ノーツの位置\r\n     * @param len ノーツの長さ\r\n     * @param tempoCacheList テンポのキャッシュリスト\r\n     * @returns \r\n     */\r\n    export const getTimeInfoFromNotesPos = (pos: number, len: number, tempoCacheList: ScoreCache.TempoRange[]): [number, number] => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let posTime = 0;\r\n        let pastLen = 0;\r\n        let last: ScoreCache.TempoRange | null = null;\r\n        for (let i = 0; i < tempoCacheList.length; i++) {\r\n            const info = tempoCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                last = tempoCacheList[i - 1];\r\n                break;\r\n            }\r\n            const beatLen = info.memoriCnt / 4;\r\n            posTime += 60 / info.bpm * beatLen;\r\n            pastLen += beatLen;\r\n            tail += info.memoriCnt;\r\n        }\r\n        if (last === null) {\r\n            last = tempoCacheList[tempoCacheList.length - 1];\r\n        }\r\n\r\n        const beatLen = (pos - pastLen) * last.beatRate;\r\n        posTime += 60 / last.bpm * beatLen;\r\n\r\n        const lenTime = 60 / last.bpm * len * last.beatRate;\r\n\r\n        return [posTime, lenTime];\r\n    }\r\n}\r\n\r\nexport default CacheUtil;\r\n","import { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += (notes.len4 ?? 0);\r\n    total += (notes.len8 ?? 0) / 2;\r\n    total += (notes.len16 ?? 0) / 4;\r\n    total += (notes.len32 ?? 0) / 8;\r\n    total += (notes.len4div3 ?? 0) / 3;\r\n    total += (notes.len8div3 ?? 0) / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    const ml: MelodyLength = {};\r\n    const len4 = (notes1.len4 ?? 0) + (notes2.len4 ?? 0);\r\n    if (len4 > 0) ml.len4 = len4;\r\n    const len8 = (notes1.len8 ?? 0) + (notes2.len8 ?? 0);\r\n    if (len8 > 0) ml.len8 = len8;\r\n    const len16 = (notes1.len16 ?? 0) + (notes2.len16 ?? 0);\r\n    if (len16 > 0) ml.len16 = len16;\r\n    const len32 = (notes1.len32 ?? 0) + (notes2.len32 ?? 0);\r\n    if (len32 > 0) ml.len32 = len32;\r\n    const len4div3 = (notes1.len4div3 ?? 0) + (notes2.len4div3 ?? 0);\r\n    if (len4div3 > 0) ml.len4 = len4div3;\r\n    const len8div3 = (notes1.len8div3 ?? 0) + (notes2.len8div3 ?? 0);\r\n    if (len8div3 > 0) ml.len8div3 = len8div3;\r\n    return getSortetdNotesLen(ml);\r\n}\r\n\r\nconst getSortetdNotesLen = (base: MelodyLength) => {\r\n    let len4 = base.len4 ?? 0;\r\n    let len8 = base.len8 ?? 0;\r\n    let len16 = base.len16 ?? 0;\r\n    let len32 = base.len32 ?? 0;\r\n    let len4div3 = base.len4div3 ?? 0;\r\n    let len8div3 = base.len8div3 ?? 0;\r\n\r\n    const ml: MelodyLength = {};\r\n\r\n    const len32Cnt2 = Math.floor(len32 / 2);\r\n    len32 -= len32Cnt2 * 2;\r\n    len16 += len32Cnt2;\r\n\r\n    const len8div3Cnt3 = Math.floor(len8div3 / 3);\r\n    len8div3 -= len8div3Cnt3 * 3;\r\n    len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(len8div3 / 2);\r\n    len8div3 -= len8div3Cnt2 * 2;\r\n    len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(len4div3 / 3);\r\n    len4div3 -= len4div3Cnt3 * 3;\r\n    len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(len16 / 2);\r\n    len16 -= len16Cnt2 * 2;\r\n    len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(len8 / 2);\r\n    len8 -= len8Cnt2 * 2;\r\n    len4 += len8Cnt2;\r\n\r\n    if (len4 > 0) ml.len4 = len4;\r\n    if (len8 > 0) ml.len8 = len8;\r\n    if (len16 > 0) ml.len16 = len16;\r\n    if (len32 > 0) ml.len32 = len32;\r\n    if (len4div3 > 0) ml.len4div3 = len4div3;\r\n    if (len8div3 > 0) ml.len8div3 = len8div3;\r\n\r\n    return ml;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len32 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 8: len32 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n\r\n    const ml: MelodyLength = {};\r\n    if (len4 > 0) ml.len4 = len4;\r\n    if (len8 > 0) ml.len8 = len8;\r\n    if (len16 > 0) ml.len16 = len16;\r\n    if (len32 > 0) ml.len32 = len32;\r\n    if (len4div3 > 0) ml.len4div3 = len4div3;\r\n    if (len8div3 > 0) ml.len8div3 = len8div3;\r\n    return getSortetdNotesLen(ml);\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if ((notes.len32 ?? 0) > 0) return 8;\r\n    else if ((notes.len8div3 ?? 0) > 0) return 6;\r\n    else if ((notes.len16 ?? 0) > 0) return 4;\r\n    else if ((notes.len4div3 ?? 0) > 0) return 3;\r\n    else if ((notes.len8 ?? 0) > 0) return 2;\r\n    else if ((notes.len4 ?? 0) > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.melodyFont;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playHarmony = (soundFullName: string, store: Store, duration: number, gain: number) => {\r\n    const instrument = store.instruments.harmonyFont;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, { gain, duration });\r\n    } else {\r\n        // alert('null');\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.harmonyFont;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nnamespace MelodyUtil {\r\n\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        state.isPreview = false;\r\n        // state.focusIndex = state.lastFocus;\r\n        // state.distIndex = state.focusIndex;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        // store.instruments.sampler.releaseAll();\r\n        dispatcher.melody.setState(state);\r\n        dispatcher.melody.adjustScrollX();\r\n    }\r\n\r\n    /**\r\n     * プレビュー再生を開始する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const reserveTasks: NodeJS.Timeout[] = [];\r\n        const instrument = store.instruments.melodyFont;\r\n\r\n        // 開始するフォーカス（非選択時は最初から）\r\n        const start = state.focusIndex === -1 ? 0 : state.focusIndex;\r\n\r\n        // プレビュー開始時のフォーカスを保持する\r\n        state.lastFocus = state.focusIndex;\r\n        state.isPreview = true;\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = start; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                        dispatcher.melody.adjustScrollX();\r\n                        // dispatcher.melody.setState(state);\r\n                    }, 0);\r\n                }, (posTime - firstTime) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (posTime - firstTime + lenTime) * 1000)\r\n                );\r\n            }\r\n        }\r\n\r\n        // ハーモニーを再生\r\n        if (!state.isSolo) {\r\n            previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n\r\n        dispatcher.system.setReserveTasks(reserveTasks);\r\n        dispatcher.melody.setState(state);\r\n    }\r\n\r\n    const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        const update = store.invalidate.melody as () => void;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = 3; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                if (cache.pastSecond < start) continue;\r\n\r\n                const detail = element.detail as DetailChord;\r\n\r\n                if (detail.root == null) return;\r\n\r\n                // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\r\n                // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n\r\n                // const chordTime = 60 / cache.bpm * len;\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const chordTime = TheoryUtil.calcSustainMsec(\r\n                    detail.beatLen,\r\n                    minute,\r\n                    cache.bpm,\r\n                    cache.beatSignature\r\n                );\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // sampler.releaseAll();\r\n                        // stopPiano(store);\r\n\r\n                        // const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                        // const div = pickingDelay / pitchList.length;\r\n\r\n                        // pitchList.forEach((index, j) => {\r\n                        //     const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        //     const octave = Math.floor(index / 12);\r\n                        //     const soundFullName = soundName + octave;\r\n                        //     playPiano(soundFullName, store, chordTime);\r\n                        // });\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n                        setTimeout(() => {\r\n                            store.melodyState.tableMouse.curChord = element;\r\n                            update();\r\n                            // dispatcher.melody.setState(store.melodyState);\r\n                        }, 0);\r\n                    }, cache.pastSecond - start - adjsut)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const chordList = store.scoreData.chordList;\r\n        const cacheList = store.scoreState.elementCacheList;\r\n        const cache = cacheList[3];\r\n        const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n        const init = chordList[0].detail as DetailInit;\r\n        const curChord = state.tableMouse.curChord;\r\n        const reserveTasks = store.reserveTasks;\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            // const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            // const onIndex = detail.on == null ? -1 : ((detail.on.index + init.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n            // const chordTime = 60 / init.bpm * len;\r\n            const minute = detail.minute.head + detail.minute.tail;\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                detail.beatLen,\r\n                minute,\r\n                init.bpm,\r\n                init.beatSignature\r\n            );\r\n\r\n            BackingUtil.playBacking(store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.melody.setState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.melody.setState(state);\r\n\r\n        }\r\n    }\r\n\r\n    export type Quantize = 32 | 16| 8 | 4;\r\n\r\n    export const isEnableQuantize = (quantize: Quantize, notes: MelodyLength) => {\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyUtil;","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailAlter, DetailChord, DetailInit, DetailSection, Scale, ScoreData, MelodyNotes, VoicingProps } from \"../store/score/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/score/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/score/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport MelodyUtil, { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\nimport { Invalidate } from \"../store/invalidate\";\r\nimport BackingState from \"../store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport CacheUtil from \"../../utils/cacheUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport ScoreCache from \"../store/score/scoreCache\";\r\nimport { UserEnv } from \"../store/userEnv\";\r\nimport { Instruments } from \"../store/instrument\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n        setUserEnv: (userEnv: UserEnv) => {\r\n            this.dispatch(ActionType.SET_USER_ENV, { userEnv });\r\n        },\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        },\r\n\r\n        setInvalidate: (invalidate: Invalidate) => {\r\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        saveFile: () => {\r\n            // プレビュー時は保存できない\r\n            const isDirect = this.store.systemState.directScore != undefined;\r\n            if (isDirect) return;\r\n\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const options = {\r\n                types: [\r\n                    {\r\n                        accept: {\r\n                            'text/plain': ['.lcrs'],\r\n                        },\r\n                    },\r\n                ],\r\n            };\r\n            const fileHandle = state.fileHandle;\r\n            if (fileHandle != null) {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await fileHandle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(JSON.stringify(data));\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = fileHandle;\r\n                    this.score.setScoreState({ ...state });\r\n                    const file = await fileHandle.getFile();\r\n                    // alert('saved successfully!');\r\n                    console.log('saved successfully!');\r\n                })();\r\n            } else {\r\n                window.showSaveFilePicker(options).then((handle) => {\r\n                    (async () => {\r\n                        //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                        const writable = await handle.createWritable();\r\n                        //テキストデータの書き込み\r\n                        const text = DataUtil.gZip(JSON.stringify(data));\r\n                        await writable.write(text);\r\n                        //ファイルを閉じる\r\n                        await writable.close();\r\n                        state.fileHandle = handle;\r\n                        this.score.setScoreState({ ...state });\r\n                    })();\r\n                }).catch(() => {\r\n                    console.log('キャンセルされました');\r\n                });\r\n            }\r\n        },\r\n\r\n        setHarmonyFont: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, harmony: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n        \r\n        setInstruments: (instruments: Instruments) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        clearCache: () => {\r\n            const scoreState = this.store.scoreState;\r\n            scoreState.focusIndex = -1;\r\n            scoreState.distIndex = -1;\r\n            scoreState.initialBeat = 4;\r\n            scoreState.elementCacheList = [];\r\n            scoreState.beatCacheList = [];\r\n            scoreState.chordCacheList = [];\r\n            scoreState.scaleCacheList = [];\r\n            scoreState.tempoCacheList = [];\r\n            scoreState.measureCacheList = [];\r\n            scoreState.sectionCacheList = [];\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                state.distIndex = state.focusIndex;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 選択範囲の終点を移動する\r\n         * @param isNext \r\n         */\r\n        moveDist: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.distIndex + sub].type !== 'fixed') {\r\n                state.distIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n            state.focusIndex = !isTail ? distHead : distTail;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        flashElement: (index: number) => {\r\n            // const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[index];\r\n\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n\r\n            // bodyRef.style.backgroundColor = '#ffef5f';\r\n            // setTimeout(() => {\r\n            //     bodyRef.style.backgroundColor = '';\r\n            // }, 10);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                if (isUp) {\r\n                    detail.root = { index: 0, isFlat: false };\r\n                    this.score.setScoreData(data);\r\n                    this.score.flashElement(state.focusIndex);\r\n                }\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            } else if (detail.root.index + sub === -1) {\r\n                detail.root = null;\r\n                detail.symbolKey = 'major';\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n            // キャッシュの更新\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            if (detail.root != null) {\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(detail.root, cache.keyIndex, detail.on, symbol);\r\n            } else {\r\n                chordCache.chordFullName = '';\r\n                chordCache.structList = [];\r\n            }\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                // setTimeout(() => {\r\n                CacheUtil.updateHarmonizeCache(this.store, this);\r\n                // }, 1);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -2 && target <= 2) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                CacheUtil.updateHarmonizeCache(this.store, this);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[state.focusIndex];\r\n\r\n            // 拍の初期値を取得\r\n            const beatSignature = state.elementCacheList[state.focusIndex].beatSignature;\r\n            const initialBeat = TheoryUtil.getBeatProps(beatSignature).barBeatCnt;\r\n            let curBeatLen = initialBeat;\r\n            if (cur.type === 'chord') {\r\n                const curChord = cur.detail as DetailChord;\r\n                // 後にシンコペーションが設定されている場合は追加できない\r\n                if (curChord.minute.tail != 0) return;\r\n\r\n                curBeatLen = curChord.beatLen;\r\n            }\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: curBeatLen,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null,\r\n                        hasError: false\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        addAlterElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'alter', detail: {\r\n                    alterType: null,\r\n                    modRel: null,\r\n                    dommVal: 0,\r\n                    keyAdj: 0,\r\n                    tempoRel: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbs: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailAlter\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                const sectionNo = this.store.scoreState.elementCacheList[i].sectionNo;\r\n                // 先頭のセクション要素が含まれている場合削除しない\r\n                if (element.type === 'section' && sectionNo === 0) {\r\n                    return;\r\n                }\r\n            }\r\n            data.chordList.splice(distHead, (distTail - distHead) + 1);\r\n            this.score.setScoreData(data);\r\n            state.focusIndex = distHead - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // // reffer.style.width = '300px';\r\n            // wrapRef.style.opacity = '0';\r\n            // wrapRef.style.overflow = 'hidden';\r\n            // // wrapRef.style.padding = '0';\r\n            // wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '0';\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.opacity = '';\r\n            //     wrapRef.style.width = '';\r\n            //     wrapRef.style.overflow = '';\r\n            //     // wrapRef.style.padding = '';\r\n            //     const data = this.store.scoreData;\r\n            //     data.chordList.splice(state.focusIndex, 1);\r\n            //     this.score.setScoreData(data);\r\n            //     state.focusIndex--;\r\n            //     this.score.setScoreState(state);\r\n            //     // setTimeout(() => {\r\n            //     //     reffer.style.opacity = '';\r\n            //     //     reffer.style.width = '';\r\n            //     //     const data = this.store.scoreData;\r\n            //     //     data.chordList.splice(state.focusIndex, 1);\r\n            //     //     this.score.setScoreData(data);\r\n            //     // }, 200);\r\n            // }, 200);\r\n        },\r\n\r\n        copyElementList: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            const list: ChordElement[] = [];\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                list.push(JSON.parse(JSON.stringify(element)));\r\n            }\r\n            console.log(list.length);\r\n            state.copiedElementList = list;\r\n            state.cloneBacking = null;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        pasteElementList: () => {\r\n            const state = this.store.scoreState;\r\n\r\n            const data = this.store.scoreData;\r\n            const list = state.copiedElementList;\r\n            if (list == null) return;\r\n\r\n            console.log(list.length);\r\n            list.forEach((element, i) => {\r\n                data.chordList.splice(state.focusIndex + 1 + i, 0, element);\r\n            });\r\n            this.score.setScoreData(data);\r\n            state.focusIndex++;\r\n            state.distIndex = state.focusIndex + list.length - 1;\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        // incrementSymbol: (isUp: boolean) => {\r\n        //     const state = this.store.scoreState;\r\n        //     const data = this.store.scoreData;\r\n        //     const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n        //     const sub = isUp ? 1 : -1;\r\n        //     if (detail.root == null) {\r\n        //         detail.root = { index: 0, isFlat: false };\r\n        //         this.score.setScoreData(data);\r\n        //     } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n        //         detail.root.index += sub;\r\n        //         detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n        //         this.score.setScoreData(data);\r\n        //     }\r\n        // },\r\n\r\n        setDiatonicChord: (scale: Scale, diatonicIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const scaleList = scale === 'major' ? TheoryUtil.DIATONIC_MAJOR_SCALE_LIST : TheoryUtil.DIATONIC_MINOR_SCALE_LIST;\r\n            const chord = scaleList[diatonicIndex];\r\n            const root: TheoryUtil.DegreeProps = { ...chord.root };\r\n            detail.root = root;\r\n            detail.symbolKey = chord.symbolKey;\r\n            // オンコードの設定を解除\r\n            detail.on = null;\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n            [chordCache.chordFullName, chordCache.structList] =\r\n                BackingUtil.getChordDetails(root, cache.keyIndex, null, symbol);\r\n            chordCache.backingError =\r\n                BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        cloneBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n        },\r\n\r\n        pastBacking: () => {\r\n            const state = this.store.scoreState;\r\n            if (state.cloneBacking != null) {\r\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n                const data = this.store.scoreData;\r\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreData(data);\r\n\r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n\r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                chordCache.backingError =\r\n                    BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n\r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                chordCache.backingError =\r\n                    BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    /**\r\n     * メロディ画面のディスパッチ\r\n     */\r\n    public melody = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        /**\r\n         * 全てのノーツを選択する\r\n         */\r\n        allSelect: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = notesList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n        },\r\n\r\n        setNotesList: (notesList: MelodyNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setMelodyFont: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * 選択中のノーツの音程を変更する\r\n         * @param isUpper\r\n         * @param mode \r\n         * @returns \r\n         */\r\n        incrementCurPitch: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n            const scoreState = this.store.scoreState;\r\n            const state = this.store.melodyState;\r\n            const focusIndex = state.focusIndex;\r\n            const distIndex = state.destIndex;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            // フォーカスされていない場合は処理しない\r\n            if (focusIndex === -1) return;\r\n\r\n            if (focusIndex !== distIndex) {\r\n\r\n                const targetList = notesList.filter(\r\n                    (notes, i) => i >= focusIndex && i <= distIndex\r\n                );\r\n\r\n                targetList.forEach(notes => {\r\n                    notes.pitchIndex += 1 * (isUpper ? -1 : 1);\r\n                });\r\n\r\n                // 履歴を作成\r\n                state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                this.melody.setNotesList(notesList.slice());\r\n            } else {\r\n                const cur = notesList[focusIndex];\r\n                // const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n                const normalLeft = getNormalizeLenFromNotes(cur.pos);\r\n                const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n                const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n                const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n\r\n                const prevPitchIndex = cur.pitchIndex;\r\n                const interval = mode !== 'octave' ? 1 : 12;\r\n                let tempPitchIndex = cur.pitchIndex;\r\n\r\n                while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                    tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                    if (mode !== 'scale' ||\r\n                        (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                    ) {\r\n                        cur.pitchIndex = tempPitchIndex;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // 値が変わっていた場合のみ処理する\r\n                if (prevPitchIndex !== cur.pitchIndex) {\r\n                    playSoundfont(cur.pitchIndex, this.store);\r\n                    // 履歴を作成\r\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                    this.melody.setNotesList(notesList.slice());\r\n\r\n                    this.melody.adjustScrollY();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * キースイッチを設定する\r\n         * @param keySwitch \r\n         */\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         */\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        /**\r\n         * 複数選択From～ToのToを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         * @returns \r\n         */\r\n        moveDestFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.destIndex > 0 : state.destIndex < notesList.length - 1) {\r\n                state.destIndex += (isNext ? 1 : -1);\r\n                this.melody.setState(state);\r\n            }\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツのエリアのコードを更新する\r\n         * @param focusIndex ノーツのフォーカス\r\n         */\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.tableMouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスの後ろに新しいノーツを追加する\r\n         * @returns \r\n         */\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const focus = state.focusIndex;\r\n            if (focus === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[focus];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = focus === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            // 新しい要素の位置\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(focus + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツを削除する\r\n         */\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            // 履歴を作成\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n            // 対象の開始と終了のインデックスを取得\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            // 削除する個数\r\n            const delNum = end - start + 1;\r\n            notesList.splice(start, delNum);\r\n            this.melody.setNotesList(notesList);\r\n            // 削除後は対象の開始インデックスの１つ前を選択\r\n            state.focusIndex = start - 1;\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * 複数選択を解除する\r\n         * @param isTail 解除時複数選択のどこにフォーカスを移すか（trueの場合終端を選択）\r\n         */\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            state.focusIndex = (!isTail ? start : end);\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            const distIndex = state.destIndex;\r\n            const focusIndex = state.focusIndex;\r\n\r\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\r\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n\r\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\r\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\r\n\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 移動可能かを判定\r\n            if (condition) {\r\n                for (let i = start; i <= end; i++) {\r\n                    const cur = notesList[i];\r\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                }\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        firstNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n                this.melody.adjustScrollX();\r\n                // this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.destIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            // if (state.focusIndex === -1) return;\r\n\r\n            MelodyUtil.previewStart(this.store, this);\r\n        },\r\n\r\n        copyNotes: () => {\r\n\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const num = focusEnd - focusStart + 1;\r\n\r\n            const cloneNotesList: MelodyNotes[] = [];\r\n            const base = notesList[focusStart].pos;\r\n            const baseUnit = getMinimumLenUnit(base);\r\n            for (let i = 0; i < num; i++) {\r\n                const notes = notesList[i + focusStart];\r\n                const unit = getMinimumLenUnit(notes.pos);\r\n                const useUnit = baseUnit > unit ? baseUnit : unit;\r\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\r\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\r\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\r\n                console.log(JSON.stringify(pos));\r\n                cloneNotesList.push({\r\n                    pitchIndex: notes.pitchIndex,\r\n                    pos,\r\n                    len: { ...notes.len }\r\n                });\r\n            }\r\n            state.cloneNotesList = cloneNotesList;\r\n            // notesList.splice(state.focusIndex, num);\r\n            // this.tune.setNotesList(notesList);\r\n            // state.focusIndex = focusStart - 1;\r\n            // state.distIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            // alert(JSON.stringify(state.cloneNotesList));\r\n        },\r\n\r\n        pasteNotes: () => {\r\n            // alert('pasteNotes');\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const pastList: MelodyNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\r\n            pastList.forEach(notes => {\r\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\r\n            });\r\n            // ペーストするノーツの最後（右端）の要素\r\n            const pastLast = pastList[pastList.length - 1];\r\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList = notesList.concat(pastList);\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                data.notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                this.score.setScoreData(data);\r\n\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex + pastList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            // this.tune.adjustScrollX();\r\n        },\r\n\r\n        undo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`undo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const prev = history.undo();\r\n            if (prev != null) {\r\n                if (history.cur === 0) {\r\n                    console.log('first undo');\r\n                    history.list.unshift(JSON.stringify(data.notesList));\r\n                    history.cur = 1;\r\n                }\r\n                data.notesList = JSON.parse(prev);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`undo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        },\r\n\r\n        redo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`redo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const next = history.redo();\r\n            if (next != null) {\r\n                data.notesList = JSON.parse(next);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`redo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            const chordBacking = detail.backing;\r\n            const structList = chordCache.structList;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n\r\n            const voicingTable = BackingUtil.getInitVoicingTable(detail.backing.voicingList, structList.length);\r\n            const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, chordBacking.pattern);\r\n\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n            const chordInfo = {\r\n                symbolAttr: symbol.attr,\r\n                chordFullName: chordCache.chordFullName,\r\n                structList,\r\n                beatLen: detail.beatLen,\r\n                minute: detail.minute,\r\n                init: { ...cache }\r\n            };\r\n            // エラーチェックのためにテーブルからリストへ逆変換\r\n            const voicingList = BackingUtil.getVoicingListFromTable(voicingTable);\r\n            const hasError = BackingUtil.checkEditorError(chordInfo, voicingList, pattern);\r\n            // バッキングステートの初期化\r\n            this.backing.setState({\r\n                chordInfo,\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false,\r\n                hasError\r\n            });\r\n\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n            setTimeout(() => {\r\n                this.backing.setState(null);\r\n            }, 50);\r\n        },\r\n\r\n        setState: (backingState: null | BackingState.Editor) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingState.Layer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingState.Layer;\r\n        },\r\n\r\n        /**\r\n         * エディタで設定したバッキング情報を譜面データに反映\r\n         */\r\n        mappingEditorToScore: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const focus = scoreState.focusIndex;\r\n            const detail = data.chordList[focus].detail as DetailChord;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n\r\n            detail.backing = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                // hasError: editor.hasError\r\n            };\r\n            this.score.setScoreData(data);\r\n\r\n            // エラーの反映\r\n            const cache = scoreState.elementCacheList[focus];\r\n            const scoreCache = scoreState.chordCacheList[cache.chordBlockNo];\r\n            scoreCache.backingError = editor.hasError;\r\n            this.score.setScoreState(scoreState);\r\n        },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const curLen = lenList[pattern.lenIndex];\r\n            const newLen: BackingState.NoteDiv = { rate: curLen.rate, div3: curLen.div3, isDot: curLen.isDot };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.noteDivList = lenList.slice();\r\n\r\n            // テーブル追加\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n\r\n            // ベロシティ追加\r\n            layer.velocityList.splice(pattern.lenIndex + 1, 0, 5);\r\n\r\n            // ペダル追加\r\n            if (pattern.layerIndex === 0) {\r\n                pattern.pedalActs.splice(pattern.lenIndex + 1, 0, null);\r\n            }\r\n\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            cur.isDot = false;\r\n            cur.div3 = 0;\r\n            layer.noteDivList = layer.noteDivList.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            if (BackingUtil.isPermitDot(cur)) {\r\n                cur.isDot = !cur.isDot;\r\n                layer.noteDivList = layer.noteDivList.slice();\r\n                this.backing.setState(state);\r\n                this.backing.updateErrorState();\r\n            }\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: BackingState.NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            layer.table = layer.table.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        incrementVel: (value: number) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const after = layer.velocityList[pattern.lenIndex] + value;\r\n            if (after >= 1 && after <= 10) {\r\n                layer.velocityList[pattern.lenIndex] = after;\r\n                this.backing.setState(state);\r\n            }\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            // 2つ以上要素がないと消せない\r\n            if (layer.noteDivList.length >= 2) {\r\n                layer.noteDivList.splice(pattern.lenIndex, 1);\r\n                layer.table.forEach((column) => {\r\n                    column.splice(pattern.lenIndex, 1);\r\n                });\r\n                layer.velocityList.splice(pattern.lenIndex, 1);\r\n                // for(let i = 0; i < pattern.channels.length; i ++) {\r\n                //     layer.table[i].splice(pattern.lenIndex, 1);\r\n                // }\r\n                if (pattern.layerIndex === 0) {\r\n                    // 終端までnullで更新\r\n                    if (pattern.lenIndex < pattern.pedalActs.length - 1) {\r\n                        for (let j = pattern.lenIndex + 1; j < pattern.pedalActs.length; j++) {\r\n                            pattern.pedalActs[j] = null;\r\n                        }\r\n                    }\r\n                    pattern.pedalActs.splice(pattern.lenIndex, 1);\r\n                }\r\n\r\n                if (pattern.lenIndex > 0) {\r\n                    pattern.lenIndex--;\r\n                }\r\n                this.backing.setState(state);\r\n            }\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n        /**\r\n         * 左右レイヤーを切り替える\r\n         */\r\n        switchLayer: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        /**\r\n         * 音量orペダルのモードを切り替える\r\n         */\r\n        switchMode: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            if (pattern.mode === 'velocity') pattern.mode = 'pedal';\r\n            else if (pattern.mode === 'pedal') pattern.mode = 'velocity';\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        /**\r\n         * バッキングのプレビュー再生をする\r\n         */\r\n        testBacking: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const reserveTasks = this.store.reserveTasks;\r\n            const chordInfo = editor.chordInfo;\r\n            const init = chordInfo.init;\r\n\r\n            // const rootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n            // const onIndex = chordInfo.on == null ? -1 : ((chordInfo.on.index + chordInfo.init.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n            // const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\r\n            // const chordTime = 60 / init.bpm * len;\r\n\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                chordInfo.beatLen,\r\n                chordInfo.minute.head + chordInfo.minute.tail,\r\n                init.bpm,\r\n                init.beatSignature\r\n            );\r\n            const backing: ChordBacking = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern)\r\n            };\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordInfo.structList);\r\n\r\n            BackingUtil.playBacking(this.store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                editor.isPreview = false;\r\n                this.backing.setState(editor);\r\n            }, chordTime));\r\n\r\n            editor.isPreview = true;\r\n            this.backing.setState(editor);\r\n        },\r\n\r\n        updateErrorState: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const voicingList = BackingUtil.getVoicingListFromTable(editor.voicingTable);\r\n            editor.hasError = BackingUtil.checkEditorError(editor.chordInfo, voicingList, editor.pattern);\r\n            this.backing.setState(editor);\r\n        },\r\n    }\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport Soundfont from 'soundfont-player';\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: TheoryUtil.SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null,\r\n        // hasError: false\r\n    };\r\n    return backing;\r\n}","\r\n\r\n/**\r\n * データの履歴を管理するクラス\r\n */\r\nclass DataHistory {\r\n\r\n    cur: number;\r\n    list: string[];\r\n\r\n    constructor() {\r\n        this.cur = -1;\r\n        this.list = [];\r\n    }\r\n\r\n\r\n    add(data: string) {\r\n        // console.log(`add start ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n        // if (this.list[this.cur] === data) {\r\n        //     console.log('same...');\r\n        //     return;\r\n        // }\r\n        if (this.cur > -1) {\r\n            this.list.splice(0, this.cur + 1);\r\n            this.cur = -1;\r\n            console.log('restert');\r\n        }\r\n        this.list.unshift(data);\r\n        // console.log(`add end ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n    }\r\n\r\n    undo(): null | string {\r\n        let ret = null;\r\n        if (this.cur < this.list.length - 1) {\r\n            this.cur++;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    redo(): null | string {\r\n        let ret = null;\r\n        if (this.cur > 0) {\r\n            this.cur--;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./score/scoreData\"\r\nimport { ScoreState } from \"./score/scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./score/melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { Invalidate } from \"./invalidate\"\r\nimport DataHistory from \"./state/dataHistory\"\r\nimport BackingState from \"./score/backing/backingState\"\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState.Editor;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n\r\n    invalidate: Invalidate;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        directScore: null,\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        editable: true,\r\n        dialog: null\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        fileHandle: null,\r\n        isMelody: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        elementCacheList: [],\r\n        chordCacheList: [],\r\n        sectionCacheList: [],\r\n        scaleCacheList: [],\r\n        tempoCacheList: [],\r\n        beatCacheList: [],\r\n        measureCacheList: [],\r\n        keySwitch: {\r\n            distMode: false,\r\n            sustainMode: false,\r\n            chordMode: false,\r\n            symbolMode: false,\r\n            control: false,\r\n            minHeadMode: false,\r\n            minTailMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneBacking: null,\r\n        copiedElementList: null,\r\n        backingDataHistory: new DataHistory(),\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        destIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 1,\r\n        beatWidth: 120,\r\n        tableMouse: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        timelineMouse: {\r\n            pos: -1,\r\n            isPut: false,\r\n            lock: -1,\r\n            width: 0,\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 9\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false,\r\n            control: false,\r\n        },\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneNotesList: [],\r\n\r\n        dataHistory: new DataHistory(),\r\n        notesCacheList: []\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        // sampler: getDefaultSampler(),\r\n        harmonyFont: null,\r\n        melodyFont: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: [],\r\n    invalidate: {\r\n        harmoniizeInvalidate: {},\r\n        harmonize: null,\r\n        melody: null\r\n    },\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    login?: LoginProps;\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type LoginProps = {\r\n    seq: number;\r\n    id: string;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note: {\r\n        left: string;\r\n        right: string;\r\n        up: string;\r\n        down: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        distMode: string;\r\n        edit1: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        edit2: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = (): KeyConfig => {\r\n    return {\r\n        note: {\r\n            left: 'ArrowLeft',\r\n            right: 'ArrowRight',\r\n            up: 'ArrowUp',\r\n            down: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'm',\r\n            deleteCur: 'Delete',\r\n            distMode: 'Shift',\r\n            edit1: 'f',\r\n            edit2: 'c',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n        }\r\n    };\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const dialog = store.systemState.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.systemState.dialog = null;\r\n            dispatcher.system.setState(store.systemState);\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n    \r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 22px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行のサンプルを検索するユーティリティ\r\n */\r\nnamespace ProgUnitSearcher {\r\n\r\n    export type ChordItemBean = {\r\n        root: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n        beatLen: number;\r\n    }\r\n\r\n    export type UnitBean = {\r\n        condition: UnitCondition;\r\n        chordList: ChordItemBean[];\r\n    }\r\n\r\n    /**\r\n     * ダイアトニックスケールの連番でコードを指定する\r\n     * @param scaleIndex スケールの連番\r\n     * @param beatLen 拍\r\n     */\r\n    const getDiatonicChord = (scaleIndex: number, beatLen: number): ChordItemBean => {\r\n        const chord = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        return { root: { index: chord.root.index, isFlat: false }, symbolKey: chord.symbolKey, beatLen };\r\n    }\r\n\r\n    export type UnitCondition = {\r\n        beat: BeatSignature;\r\n        step: number;\r\n        firstChord: ProgUtil.DegreeFilter;\r\n        secondChord: ProgUtil.DegreeFilter;\r\n    }\r\n\r\n    /**\r\n     * コード進行を検索する\r\n     * @param condition \r\n     * @returns フィルターしたリスト\r\n     */\r\n    export const search = (condition: UnitCondition) => {\r\n        return UNIT_LIST.filter((unit) => (\r\n            (unit.condition.beat === condition.beat) &&\r\n            (condition.step === 0 || unit.condition.step === condition.step) &&\r\n            (condition.firstChord === '' || unit.condition.firstChord === condition.firstChord) &&\r\n            (condition.secondChord === '' || unit.condition.secondChord === condition.secondChord)\r\n        ));\r\n    }\r\n\r\n    export const parseChord = (source: string): ChordItemBean[] => {\r\n        let baseBeat = -1;\r\n        const keyList = source.split(' ');\r\n        let hasError = false;\r\n        const chordList: ChordItemBean[] = [];\r\n        keyList.some((key, i) => {\r\n            const head = key.charAt(0);\r\n            if (head === '@') {\r\n                const newBeat = Number(key.charAt(1));\r\n                baseBeat = newBeat;\r\n            } else if (['1', '2', '3', '4', '5', '6', '7'].includes(head)) {\r\n                const diatonicNo = Number(head) - 1;\r\n\r\n                let chord: null | ProgUnitSearcher.ChordItemBean = null;\r\n                const diatonicProps = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[diatonicNo];\r\n                if (key.length === 1) {\r\n                    chord = {\r\n                        root: diatonicProps.root, symbolKey: diatonicProps.symbolKey, beatLen: baseBeat\r\n                    }\r\n                } else {\r\n                    const adjustKey = key.charAt(1);\r\n                    const adjust = adjustKey === '#' ? 1 : adjustKey === 'b' ? -1 : 0;\r\n                    const shortNameKey = key.substring(2);\r\n                    const symbol = getSymbolFromShortName(shortNameKey);\r\n                    if (symbol != undefined) {\r\n                        const root = { ...diatonicProps.root };\r\n                        root.index += adjust;\r\n                        root.isFlat = adjust === -1;\r\n                        chord = {\r\n                            root, symbolKey: symbol.key, beatLen: baseBeat\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (chord == null) {\r\n                    hasError = true;\r\n                    return true;\r\n                } else {\r\n                    chordList.push(chord);\r\n                }\r\n            } else {\r\n                hasError = true;\r\n                return true;\r\n            }\r\n\r\n        });\r\n        return chordList;\r\n    }\r\n\r\n    const getSymbolFromShortName = (shortName: string): undefined | TheoryUtil.SymbolParams => {\r\n        return TheoryUtil.SYMBOL_LIST.find(symbol => {\r\n            if ('*' + symbol.name === shortName) return symbol;\r\n        });\r\n    }\r\n\r\n    const UNIT_LIST: UnitBean[] = [\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 3 4 1 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 3 4 3 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 3 4 1 2 5 1')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 5 4 1 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@4 1 5 6 4 1 5 6 4')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 7b* 6n*7 2 1#*dim 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@4 1 4 5 6 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('@4 1 6 2 5 1 6 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('@4 1 6 4 5 1 6 4 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 4 5 3 6 4 5 3 6')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 4n*maj7 5 3n*m7 6 4n*maj7 5 3n*m7 6')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 4n*maj7 5 3n*m7 6 2n*m7 3n*7 6 6n*7')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 2n*m7 5 3n*m7 6 2n*m7 3n*7 6n*sus4 6')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@2 6 4 5 1 6 4 5 1')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@4 6 4 5 1 6 4 5 1')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@2 6 4 1 5 6 4 1 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@4 6 4 1 5 6 4 1 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 6 5 4 3n*m7 2n*m7 6 2#*dim 3n*7')\r\n        },\r\n    ];\r\n}\r\n\r\nexport default ProgUnitSearcher;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\n\r\nnamespace ProgStyle {\r\n\r\n\r\n    /** 実行ボタン */\r\n    export const _TitleLabel = styled.div<{\r\n    }>`\r\n        ${Styles.CSS_LABEL_MIDIUM};\r\n        background-color: #f0f0f049;\r\n        width: 120px;\r\n        text-align: center;\r\n        border-radius: 10px;\r\n        color: #2c2c2c;\r\n        border: solid 1px #ffffff79;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n\r\n    /** コンボボックス */\r\n    export const _Combobox = styled.select<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: black;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n\r\n    /** ラベル */\r\n    export const _Label = styled.div<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: #002bc5;\r\n        font-weight: 600;\r\n        background-color: #e1f9fa;\r\n        padding-left: 4px;\r\n        border-radius: 4px;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n}\r\n\r\nexport default ProgStyle;","import { ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport { ScoreState } from \"../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * コード進行生成のバッキング関連のユーティリティ\r\n */\r\n namespace progBackingUtil {\r\n\r\n    export type Props = {\r\n        name: string;\r\n        patternConditions: PatternCondition[];\r\n    }\r\n    export type VoicingCondition = {\r\n        attr: TheoryUtil.SymbolAttribute;\r\n        source: string;\r\n    }\r\n    export type PatternCondition = {\r\n        beatLen: number;\r\n        source: string;\r\n        voicingConditions: VoicingCondition[];\r\n    }\r\n\r\n    export const BACKING_SAMPLE_LIST: Props[] = [\r\n        {\r\n            name: 'none',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'barrade-01',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTwRKCIBD9Gu4FOnbVvDTTrS9ghIyGsJHNyb4+BCkxb416YWD3LW/fY0FJhjAuLlQpLk/ixc0JkTRGeG92d86o1C6E4gxZMBPNQTH+dOGNQ9ICRKV6JMZum+Qozl1e0pbXEzeNQzWFvoXIFQqdV+AiZ9MLd1FTSTx/YilG1btf3PR1f1d7haoCro9Cw0hR6FMbnDRQeHgLLFqLUlH58dHaaKEgbkKVQXXDZcquAxsGWnpWvArrNmDdzsXqnTe57xh1k9uNDunSg9ZmnLVo7mnBq7zbUqyhVrKK1qVYQ63R4j/D/wq7vgHgSWwr/AUAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqAW7wdQFAL14+prfAAAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYl1oTHG4wdQEAGcWLSt8AAAA='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA9WVwVLDIBCGn4a7XcB4bc3Fmd58AqbBioPECdtO69NLINGAdexBYLwwsOzPB7sskGZDAHbPwhipH9W7dCNC17cE7l3vTXZC22AifEO8c6eOD6aTp2C+CZ5ih6o3kydA6DYt4W2Y1+IshwsrpaZB4LQFFoTKtj0Gy5PbiwxWp6Qzv/GIRH333e/ychnU7Hc1Doc/QM/BNT1Ku1UWk2DGKTpHI4sCD3P0vbdVeyP0Zwp9Br0rqldl9pH6KPW6e1lkYHGWUxSFwtRVRF0VotIqVIiokIs63zI391Wt3NnGDI8nH/swui22mLG0ryivbKX9X9RXvgy0zA1K7i2vQo1fQVrlPSpFZVWocYRZlQiXokIVKqtCjfPKq0Q4G/XH341OPxwkP5xvPwCCCyaGNwsAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGuES60JCW7AohbsBlMXAA68b5wLAQAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGtEglpjXGpNcLjB1AUAqgEeTAsBAAA='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'barrade-02',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTXQ+CIBT9NbwbxPRV86Wtt34BUzIaYQty2a+PQFLMuT7tgQ3OPZdzOZcLwgRAmG2JEJSv2YXqE0AxBnChdweaEy4tBHACDDln1VLk9GzhwDJJplgpGiaEdhumAKc2zklNjwM39aEjUU0JkU1kMi2VRTa6FmpRnYmcfmgkhrO7vOHr/pzt/BGlonLFpOr54btceyepiDo5Aw1bskIQfu+CaYKhKrZnovCyK8rjfNcxsfOWRnXmqc4mUkWeKpxIFXqq6Feqrt861n7927S1C3vljc7I/IUZeeunTeV+8EX30TMS848koseHwfEGYxcM0ysSYVFzcwUAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqAWba+oCACBiEqvfAAAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqDUGqTV1AQCUaWUN3wAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2V0W7CIBSGn4b7eUrFW11vTHbnExCLjgWpEWbUp5dC2cA1y1YSuPGiLRzOz8dJfwCRFQLYvlMpmdjwGzM9VC3nCF5N68haKpQLoXqFbHLLz2vZsosLv7hMutW8k0MmgGuSBtWNGxf0yk4jMz2GTlQPS1g4IVdNp11kZ9bCXNQoK88nFjGuDvPGp3uqi6i9L2SnmXrjSj/4IHbXNeopTfWnN47NVnwvqfhynzWfTdX8wOU+Up+ZWLYfgXmCWgbqLKLOMlFxEWoVUSETtS5CJUWoEFGrTNR5Hqrfx2bs+yjv/65/cPDtH+glwXJ/vQNw0h2Ak06z/6gnnWa5nFDGf3GtOImKf1LhL7WmUafWWidRycS9hod9Zd93wUPW69YJAAA=',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqMXpBlMc5pq6AADXs/OfCwEAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqCXFXGOQWlMXACkdNMwLAQAA'\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: '8beat-01',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTSw7CIBQ8DXulJbht7cbEnScgLVYMUlOwsZ5e5BUtTeNGU1bAMMM83gfRHGFcnphSXB7Eg9sTSrIU4a3dXXnFpAYIkRw5ciW6nar4HeAVMFlpRKMGJsawpQUiBdxL1vN25qUp1DIzhLABodBFYwA52lg4oFaZeH/qLObVY978c5HVPj+qMVzvhTaTfIRZ7oOTNszcfAIdW4taMfmugiuCoxpxEaoO1B2XWXUeJXH0l8F1HcUVR3FNlnH19bZ3n9YnFnv5w0qC8L7OSPrTjKT/79OwY9YL1S6cDhxlOpZyDf+aROhT4gm0eAKCqPtePgYAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGsEUmvqAgBJsewgswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2V0Q6CIBSGn4b7Omp2W3nT1l1PwJSKRtiEXPb0IWhJc67N5bnpRuBwDh+w3x8SrwlAeqJSMrHnD2ZGJFiFBDamd2UZFcqFSLQmNjnj5VZm7O7CM5dJU81z2WQCuG6ckChx84JWrOhZ6TNUUN1sYekKuUpy7SIHsxfmoqYyaPmxRfRXd/P6l/tXo1S3upC5ZmrHlf7Qga+uyhspTfWtFY7NVvwoqXipz4rPpmp+4fLoVZdMrLJzRzydszTUOQoVUKgBCjVEoUYo1AUKNZ6G2v7HZu5t5fU917rqbyNvu4NvQDjqDQhHudl01V96oe9KcxR/mIrq+z6g+P5UVECh+jccoJz1Z9RBV4KOC9nvE4/6Z+UECwAA',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmuCww2mLgAeyOCMswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: '8beat-02',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTQQ6CMBB8Te9SJHgFuZh48wUNVKypxdCFiK+3dqlSwsXE0Attp7M7y26HpDmhtLwwpbg8iSc3JxJnW0L3ZnfnFZMaIZLkxJIr0R9UxR8Ib5DJShCNGpmU4jYtSFLgvWQDbxcyzaGWwVjCDgOFLhpA5Gxq4YiayNjpp1ZiOXrKW04XONr1RzXA9VFomPXD7/LgnTQw6FwDLVuLWjH5mYIdgqWCuAlVe9E9l1l1nTRx8i+jahRElQZRjddRdfM2d9+nnxjsrY9r4pX3o0eg7f5oEZttrTfuv7Zopbn7zqJBnLWWKg2i6nc4DuIs5yr7fQFCZXGQ9AYAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGsEUmvqAgBJsewgswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2VwU4DIRCGn4a7nQXx2roXE28+AelixSBrFtrYPn0ps+jSEBMTw8TEE+wwPx/L/jvD5IYBbF+Uc9o+mZOOT6xbcwb3cfauB2U9hpjYsJQ8mMODG/QHhm8wU22DGd2cCYBT2TPR47pVRz1VdroOTSrMR7hDofH9GDDyHM+iMRqVXebLhKirl3n17f7VJOrsCzcG7R+ND1c+KN11LJ58UGGfjZOyvdk5ZT/dl8yXUoN5M25XqA/arofXhXkW7zJTVyRUIKF2JFROQhUk1FsSqmxDzf9xXPsq5Zd7vviqPoriuD/sAWHa/2ILSLtVxfyP1NEmVbishyuSytSKKkioZZ8Dkj7XigokVE5CLb9rR3LDrai8DfXbjgPziHORBbI/A9v3xeToDAAA',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmuCww2mLgAeyOCMswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'arpeggio-01',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'arpeggio-02',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'rock-01',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: '16beat-01',\r\n            patternConditions: []\r\n        },\r\n    ];\r\n }\r\n\r\n export default progBackingUtil;","import { BackingPatternProps, BeatSignature, ChordElement, DetailChord, DetailFixed, DetailInit, DetailSection, FixedItem, ScoreData, VoicingProps } from \"../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport progBackingUtil from \"./progBackingUtil\";\r\n\r\n/**\r\n * コード進行生成のユーティリティ\r\n */\r\nnamespace ProgUtil {\r\n\r\n    /** 生成方法 */\r\n    export type BuildType = 'blank' | 'custom' | 'template';\r\n\r\n    export const STEP_LIST = [0, 2, 3, 4] as const;\r\n    export type Step = typeof STEP_LIST[number];\r\n\r\n    /**\r\n     * ブロックに設定するプロパティ\r\n     */\r\n    export type UnitProps = {\r\n        type: BlockType;\r\n        detail: SectionProps | FixedItem;\r\n    }\r\n\r\n    export type BlockType = 'fixed' | 'section';\r\n\r\n    export type SectionProps = {\r\n        sectionName: string;\r\n        sectionNo: string;\r\n        chordList: DetailChord[];\r\n        backingNo: number;\r\n    }\r\n\r\n    export const DEGREE_FILTER_LIST = [\r\n        '', 'Ⅰ', 'Ⅴ', 'Ⅳ', 'Ⅵm', 'Ⅱm', 'Ⅲm'\r\n    ] as const;\r\n    export type DegreeFilter = typeof DEGREE_FILTER_LIST[number];\r\n\r\n    /**\r\n     * 初期状態のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getInitialBlockList = (): UnitProps[] => {\r\n        return [\r\n            { type: 'fixed', detail: 'Start' },\r\n            { type: 'fixed', detail: 'End' },\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Blank選択時のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getBlankBlockList = (): UnitProps[] => {\r\n        return [\r\n            { type: 'fixed', detail: 'Start' },\r\n            {\r\n                type: 'section',\r\n                detail: {\r\n                    sectionName: 'Section',\r\n                    sectionNo: '',\r\n                    chordList: [\r\n                        getDefaultChord()\r\n                    ],\r\n                    backingNo: 0\r\n                }\r\n            },\r\n            { type: 'fixed', detail: 'End' },\r\n        ];\r\n    }\r\n\r\n    export const getDefaultChord = (): DetailChord => {\r\n        return {\r\n            beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n            backing: {\r\n                voicingList: [],\r\n                pattern: null,\r\n                // hasError: false\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拍子より選択可能なステップリストを絞り込む\r\n     * @param beat ステップの拍\r\n     * @returns 絞り込んだリスト\r\n     */\r\n    export const getFilteredStepList = (beat: BeatSignature) => {\r\n        return STEP_LIST.filter((item) => {\r\n            // 0は空白表示なので必ず加える\r\n            if (item === 0) return true;\r\n\r\n            switch (beat) {\r\n                case '4/4':\r\n                case '6/8': {\r\n                    if (item === 3) return false;\r\n                }\r\n                    break;\r\n                case '3/4':\r\n                case '9/8': {\r\n                    if (item !== 3) return false;\r\n                }\r\n                    break;\r\n                case '2/4':\r\n                case '6/8': {\r\n                    if (item !== 2) return false;\r\n                }\r\n                    break;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * ブロックリストより譜面データを生成する\r\n     * @param outputUnits ユニットリスト\r\n     * @returns 譜面データ\r\n     */\r\n    export const buildScoreData = (outputUnits: UnitProps[]): ScoreData => {\r\n        const elementList: ChordElement[] = [];\r\n        // イニシャル要素を設定\r\n        const initElement: DetailInit = {\r\n            keyIndex: 0,\r\n            bpm: 100,\r\n            scale: \"major\",\r\n            beatSignature: \"4/4\"\r\n        }\r\n        elementList.push({ type: 'init', detail: initElement });\r\n        outputUnits.forEach((block) => {\r\n            if (block.type === 'fixed') {\r\n                const fixed = block.detail as FixedItem;\r\n                // 固定ブロックの処理\r\n                elementList.push({ type: 'fixed', detail: { fixed } });\r\n            } else {\r\n                const blockDetail = block.detail as SectionProps;\r\n                const getSectionFullName = () => {\r\n                    return blockDetail.sectionName;\r\n                }\r\n                // セクションブロックの処理\r\n                elementList.push({ type: 'section', detail: {labelName: getSectionFullName()} });\r\n\r\n                // サンプルバッキングの適用\r\n                const sample = progBackingUtil.BACKING_SAMPLE_LIST[blockDetail.backingNo];\r\n                blockDetail.chordList.forEach((chord) => {\r\n                    const detail = chord;\r\n\r\n                    let voicingList: VoicingProps[] = [];\r\n                    let pattern: BackingPatternProps | null = null;\r\n                    sample.patternConditions.some(conPa => {\r\n                        if(conPa.beatLen === detail.beatLen) {\r\n                            // console.log(DataUtil.unZip(conPa.source));\r\n                            pattern = JSON.parse(DataUtil.unZip(conPa.source));\r\n\r\n                            conPa.voicingConditions.some(conVo => {\r\n                                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                                if(conVo.attr === symbol.attr) {\r\n                                    voicingList = JSON.parse(DataUtil.unZip(conVo.source));\r\n                                    return true;\r\n                                }\r\n                            });\r\n                            return true;\r\n                        }\r\n                    });\r\n                    detail.backing.voicingList = voicingList;\r\n                    detail.backing.pattern = pattern;\r\n\r\n                    elementList.push({ type: 'chord', detail });\r\n                });\r\n            }\r\n        });\r\n        return { chordList: elementList, notesList: [] };\r\n    }\r\n}\r\n\r\nexport default ProgUtil;","import { useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../utils/dummyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgUnitSearcher from \"./progUnitSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行を編集する画面\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ProgCustomFrame = (props: {\r\n    /** 拍子フィルターの値 */\r\n    beat: '' | BeatSignature;\r\n    /** ユニット数 */\r\n    unitNum: number;\r\n    /** 出力リストを初期化するコールバック関数 */\r\n    reset: () => void;\r\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\r\n    insertProgUnit: (sectionName: string, sectionNo: string, chordList: ProgUnitSearcher.ChordItemBean[]) => void;\r\n}) => {\r\n\r\n    const [step, setStep] = useState<ProgUtil.Step>(0);\r\n    const [degreeFilters, setDegreeFilters] = useState<(ProgUtil.DegreeFilter)[]>(['', '']);\r\n\r\n    /** ブロックの最後のコード */\r\n    const [lastChord, setLastChord] = useState<ProgUnitSearcher.ChordItemBean | null>(null);\r\n\r\n    // const [progUnitList, setProgUnitList] = useState<ProgSearcher.UnitBean[]>([]);\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n\r\n    const stepList = useMemo(() => {\r\n        return props.beat === '' ? [0] : ProgUtil.getFilteredStepList(props.beat);\r\n    }, [props.beat]);\r\n\r\n    /** 拍ステップ絞り込みのコンボボックス */\r\n    const stepOptionJsxList = useMemo(() => {\r\n        // console.log(stepList.length);\r\n        return stepList.map((val, i) => {\r\n            // 0の場合は表示しない制御\r\n            const disp = val === 0 ? '' : val;\r\n            return (\r\n                <option key={i} value={val}>{disp}</option>\r\n            );\r\n        });\r\n    }, [stepList]);\r\n\r\n    /** ディグリーネーム絞り込みのコンボボックス */\r\n    const degreeOptionJsxListArray: JSX.Element[][] = useMemo(() => {\r\n        return [ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 先頭のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        }), ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 2番目のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        })];\r\n    }, [degreeFilters]);\r\n\r\n    /** リストに表示する進行ユニットのJSX */\r\n    const [progUnitList, progJsxList] = useMemo(() => {\r\n        if (props.beat === '') return [[], []];\r\n        const beat = props.beat as BeatSignature;\r\n        // フィルタリングしたユニットリスト\r\n        const unitList = ProgUnitSearcher.search({\r\n            beat: props.beat,\r\n            step, firstChord: degreeFilters[0], secondChord: degreeFilters[1]\r\n        });\r\n        const jsx = unitList.map((unit, i) => {\r\n            const isActive = focusIndex === i;\r\n\r\n            /** 表示する進行ユニット */\r\n            const dispUnitJsx: JSX.Element[] = [];\r\n            /** 表示する進行ユニット */\r\n            let tootTipStr: string = '';\r\n            let totalBeat = 0;\r\n            const beatCycle = TheoryUtil.getBeatProps(beat).barBeatCnt;\r\n            unit.chordList.forEach((chord, j) => {\r\n                const degreeRoot = TheoryUtil.getDegreeRoot(chord.root);\r\n                const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\r\n                const symbolName = symbol.name;\r\n                const chordName = degreeRoot + symbolName;\r\n                if (j !== 0) {\r\n                    const divStr = totalBeat % beatCycle === 0 ? ' | ' : '・';\r\n                    dispUnitJsx.push(<_Span key={dispUnitJsx.length}>{divStr}</_Span>);\r\n                    tootTipStr += divStr;\r\n                }\r\n                let isMatch = false;\r\n                if (j === 0) {\r\n                    isMatch = degreeFilters[0] !== '';\r\n                } else if (j === 1) {\r\n                    isMatch = degreeFilters[1] !== '';\r\n                }\r\n                dispUnitJsx.push(<_ChordName key={dispUnitJsx.length} isMatch={isMatch}>{chordName}</_ChordName>);\r\n                tootTipStr += chordName;\r\n                totalBeat += chord.beatLen;\r\n                // console.log(totalBeat);\r\n            });\r\n            return (\r\n                <_ProgItem key={i} isActive={isActive} title={tootTipStr} onClick={() => {\r\n                    setFocusIndex(i);\r\n                }}>{dispUnitJsx}</_ProgItem>\r\n            )\r\n        });\r\n        return [unitList, jsx];\r\n    }, [props.beat, step, degreeFilters, focusIndex]);\r\n\r\n    /**\r\n     * 拍ステップ変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const stepChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setStep(Number(e.target.value) as ProgUtil.Step);\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n    /**\r\n     * ディグリーフィルター変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const degreeChangeAction = (e: React.ChangeEvent<HTMLSelectElement>, index: number) => {\r\n        const value = e.target.value as ProgUtil.DegreeFilter;\r\n        degreeFilters[index] = value;\r\n        if (index === 0 && value === '') {\r\n            degreeFilters[1] = '';\r\n        }\r\n        setDegreeFilters(degreeFilters.slice());\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n\r\n    /**\r\n     * リセットボタン押下時の処理\r\n     */\r\n    const resetAction = () => {\r\n        setStep(0);\r\n        setDegreeFilters(['', '']);\r\n        props.reset();\r\n    };\r\n\r\n    /**\r\n     * 追加ボタン押下時の処理\r\n     */\r\n    const insertAction = () => {\r\n        const progUnit = progUnitList[focusIndex];\r\n        props.insertProgUnit('Section', '', progUnit.chordList);\r\n        setFocusIndex(-1);\r\n        setStep(0);\r\n        setDegreeFilters(['', '']);\r\n\r\n        const chord = progUnit.chordList[progUnit.chordList.length - 1];\r\n        setLastChord(chord);\r\n    };\r\n\r\n    /**\r\n     * ユニットの最後のコードネームを取得\r\n     */\r\n    const getLastChordName = () => {\r\n        let name = '-';\r\n        if (lastChord != null) {\r\n            const rootName = TheoryUtil.getDegreeRoot(lastChord.root);\r\n            const symbol = TheoryUtil.getSymbolFromKey(lastChord.symbolKey) as TheoryUtil.SymbolParams;\r\n            name = rootName + symbol.name;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    return (\r\n        <_Frame isEnable={props.beat !== ''}>\r\n            {/* 拍ステップコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Step</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={80} value={step} onChange={(e) => {\r\n                    stepChangeAction(e);\r\n                }}>{stepOptionJsxList}</ProgStyle._Combobox>\r\n                <ProgStyle._TitleLabel>Last</ProgStyle._TitleLabel>\r\n                <ProgStyle._Label isEnable={true} width={80} >{getLastChordName()}</ProgStyle._Label>\r\n            </_Record>\r\n            {/* ディグリーネームフィルターコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Chord</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={80} value={degreeFilters[0]} onChange={(e) => {\r\n                    degreeChangeAction(e, 0);\r\n                }}>{degreeOptionJsxListArray[0]}</ProgStyle._Combobox>\r\n                <ProgStyle._Combobox isEnable={degreeFilters[0] !== ''} width={80} value={degreeFilters[1]} onChange={(e) => {\r\n                    degreeChangeAction(e, 1);\r\n                }}>{degreeOptionJsxListArray[1]}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* 進行ユニットリスト */}\r\n            <_ListDiv><div>{progJsxList}</div></_ListDiv>\r\n            {/* 実行ボタン */}\r\n            <_ButtonDiv>\r\n                <_ExecutableButton isEnable={props.unitNum > 0} onClick={resetAction}>Reset</_ExecutableButton>\r\n                <_ExecutableButton isEnable={focusIndex !== -1} onClick={insertAction}>Add</_ExecutableButton>\r\n            </_ButtonDiv>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgCustomFrame;\r\n\r\nconst BUTTON_DIV_HEIGHT = 40;\r\nconst RECORD_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 条件レコード\r\n */\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${RECORD_HEIGHT}px;\r\n    /* background-color: #d5eae4; */\r\n    /* margin: 2px 0 0 0; */\r\n    text-align: left;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 進行リスト\r\n */\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${RECORD_HEIGHT * 2 + BUTTON_DIV_HEIGHT}px);\r\n    /* background-color: #babaa8; */\r\n    text-align: left;\r\n    & >div{\r\n        display: inline-block;\r\n        width: calc(100% - 8px);\r\n        height: calc(100% - 8px);\r\n        margin: 4px 0 0 4px;\r\n        background-color: #dde0e7;\r\n        box-sizing: border-box;\r\n        border: 1px solid #797979;\r\n        overflow-y: auto;\r\n        \r\n        &::-webkit-scrollbar {\r\n            width: 10px;\r\n            height: 10px;\r\n        }\r\n        &::-webkit-scrollbar-thumb {\r\n            border-radius: 5px;\r\n            background: #1959A8;\r\n        }\r\n        &::-webkit-scrollbar-track {\r\n            border-radius: 5px;\r\n            box-shadow: 0 0 4px #aaa inset;\r\n        }\r\n    }\r\n`;\r\n\r\nconst _ProgItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #00000010;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f6ff0062;\r\n    `}\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordName = styled.span<{\r\n    isMatch: boolean;\r\n}>`\r\n    color: #000f59;\r\n    ${props => !props.isMatch ? '' : css`\r\n        color: #a0000d;\r\n        /* background-color: #5eff0061; */\r\n    `}\r\n`;\r\nconst _Span = styled.span<{\r\n}>`\r\n    color: #0000005d;\r\n`;\r\n\r\n/**\r\n * ボタンエリア（画面汎用）\r\n */\r\nconst _ButtonDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BUTTON_DIV_HEIGHT}px;\r\n    /* background-color: #94babd; */\r\n    text-align: center;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #737d94;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #505971;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #8da0b0;\r\n    }\r\n`;","namespace DummyUtil {\r\n\r\n    export const SECTION_CATEGORY = ['Section', 'Intro', 'A', 'B', 'C', 'D', 'Outro'];\r\n    export const SECTION_NO = ['', '1', '2', '3', '4', '5', '6'];\r\n}\r\n\r\nexport default DummyUtil;","import { useContext, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { DetailChord, DetailFixed, DetailSection, FixedItem } from \"../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../utils/dummyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport progBackingUtil from \"./progBackingUtil\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行の出力画面のコンポーネント\r\n * @param props ブロックリスト\r\n * @returns コンポーネント\r\n */\r\nconst ProgOutputFrame = (props: {\r\n    outputUnits: ProgUtil.UnitProps[];\r\n    updateOutputUnits: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [\r\n        /** セクションカテゴリのoptionリスト */\r\n        secCatOptionJsxList,\r\n        /** セクション連番のoptionリスト */\r\n        secNoOptionJsxList,\r\n    ] = useMemo(() => {\r\n        const catList = DummyUtil.SECTION_CATEGORY.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        const noList = DummyUtil.SECTION_NO.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        return [catList, noList];\r\n    }, []);\r\n\r\n    const backingSampleJsxList = progBackingUtil.BACKING_SAMPLE_LIST.map((sample, i) => {\r\n        return (\r\n            <option key={i} value={i}>{sample.name}</option>\r\n        );\r\n    });\r\n\r\n    const blockJsxList = props.outputUnits.map((block, i) => {\r\n        const isFixed = block.type === 'fixed';\r\n        const getInner = () => {\r\n            if (isFixed) {\r\n                return <_FixedItem>{(block.detail as FixedItem)}</_FixedItem>;\r\n            } else {\r\n                const detail = block.detail as ProgUtil.SectionProps;\r\n                const chordList = detail.chordList;\r\n                const getChordListJsx = () => {\r\n                    return chordList.map((chord, j) => {\r\n                        const getBeatTipsJsx = () => {\r\n                            const jsxList: JSX.Element[] = [];\r\n                            for (let k = 0; k < chord.beatLen; k++) {\r\n                                jsxList.push(<_BeatTip key={k} />);\r\n                            }\r\n                            return jsxList;\r\n                        }\r\n                        let chordName = 'none';\r\n                        if (chord.root !== null) {\r\n                            const degreeRoot = TheoryUtil.getDegreeRoot({\r\n                                index: chord.root.index,\r\n                                isFlat: chord.root.isFlat\r\n                            });\r\n                            const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey)?.name;\r\n                            chordName = degreeRoot + symbolName;\r\n                        }\r\n                        return (\r\n                            <_ChordItem key={j}>\r\n                                <_ChordNameLabel>{chordName}</_ChordNameLabel>\r\n                                <_ChordBeatDiv>{getBeatTipsJsx()}</_ChordBeatDiv>\r\n                            </_ChordItem>\r\n                        );\r\n                    });\r\n                }\r\n                return (<>\r\n                    <_Record>\r\n                        <_BackingLabel>Section</_BackingLabel>\r\n                        <_Combobox isEnable={true} width={180} value={detail.sectionName} onChange={(e) => {\r\n                            detail.sectionName = e.target.value;\r\n                            props.updateOutputUnits();\r\n                        }}>{secCatOptionJsxList}</_Combobox>\r\n                        <_Combobox isEnable={true} width={60} value={detail.sectionNo} onChange={(e) => {\r\n                            detail.sectionNo = e.target.value;\r\n                            props.updateOutputUnits();\r\n                        }}>{secNoOptionJsxList}</_Combobox>\r\n                    </_Record>\r\n                    <_Record>\r\n                        {/* <_SectionItem>{labelName}</_SectionItem> */}\r\n                        <_BackingLabel>Backing</_BackingLabel>\r\n                        <_Combobox\r\n                            isEnable={true} width={180}\r\n                            value={detail.backingNo}\r\n                            onChange={(e) => {\r\n                                detail.backingNo = Number(e.target.value);\r\n                                props.updateOutputUnits();\r\n                            }}>{backingSampleJsxList}</_Combobox>\r\n                    </_Record>\r\n                    <_ChordListDiv>{getChordListJsx()}</_ChordListDiv>\r\n                </>);\r\n            }\r\n        };\r\n        return (\r\n            <_Block key={i} isFixed={isFixed}>{getInner()}</_Block>\r\n        );\r\n    });\r\n    return (\r\n        <_Frame>\r\n            {blockJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgOutputFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Block = styled.div<{\r\n    isFixed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    background-color: #e8e4c5;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #7e7e7ee8; */\r\n    text-align: left;\r\n    ${props => !props.isFixed ? '' : css`\r\n        text-align: left;\r\n    `}\r\n`;\r\n\r\nconst _FixedItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 200px;\r\n    background-color: #b14272;\r\n    border-radius: 2px 15px 15px 2px;\r\n    color: white;\r\n    margin: 5px 0 5px 5px;\r\n`;\r\n\r\nconst _SectionItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 120px;\r\n    background-color: #4297b1;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 5px;\r\n`;\r\n\r\nconst RECORD_HEIGHT = 22;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${RECORD_HEIGHT}px;\r\n    /* background-color: #5b6e69; */\r\n    margin: 2px 0 0 0;\r\n    text-align: left;\r\n    /* padding: 5px 0 0 0; */\r\n`;\r\nconst _BackingLabel = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 90px;\r\n    background-color: #95b6d1;\r\n    color: white;\r\n    border-radius: 8px;\r\n    margin: 0 0 0 5px;\r\n`;\r\n\r\nexport const _Combobox = styled.select<{\r\n    isEnable: boolean;\r\n    width: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    font-weight: inherit;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    width: ${props => props.width}px;\r\n    margin: 0 0 0 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ChordListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    /* height: 100px; */\r\n    padding: 0 5px 5px 0;\r\n    background-color: #c2d6dd1e;\r\n    border: solid 2px #ab4343;\r\n    border-radius: 8px;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 5px 5px;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 45px;\r\n    background-color: #676767;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 5px;\r\n`;\r\n\r\nconst _ChordNameLabel = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    padding: 0 20px;\r\n    /* background-color: #b38282; */\r\n    color: white;\r\n`;\r\n\r\nconst _ChordBeatDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    height: 25px;\r\n    min-width: 100%;\r\n    /* background-color: #c5adad; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _BeatTip = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    height: calc(100% - 12px);\r\n    margin: 6px 2px 0 2px;\r\n    background-color: #ddd796;\r\n    border-radius: 2px;\r\n`;\r\n","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport ProgUnitSearcher from \"./progUnitSearcher\";\r\n\r\n/**\r\n * コード進行のテンプレートを検索するユーティリティ\r\n */\r\nnamespace ProgTemplateUtil {\r\n\r\n\r\n    export type TemplateBean = {\r\n        name: string;\r\n        condition: TemplateCondition;\r\n        unitList: UnitItemBean[];\r\n    }\r\n\r\n    export type UnitItemBean = {\r\n        sectionName: string;\r\n        chordList: ProgUnitSearcher.ChordItemBean[];\r\n    }\r\n\r\n    export type TemplateCondition = {\r\n        beat: BeatSignature;\r\n    }\r\n\r\n    /**\r\n     * テンプレートを検索する\r\n     * @param condition \r\n     * @returns フィルターしたリスト\r\n     */\r\n    export const search = (condition: TemplateCondition) => {\r\n        console.log(JSON.stringify(condition));\r\n        return TEMPLATE_LIST.filter((template) => (\r\n            (template.condition.beat === condition.beat)\r\n        ));\r\n    }\r\n    \r\n    const TEMPLATE_LIST: TemplateBean[] = [\r\n        {\r\n            name: 'major minimum 01 [Ⅰ→Ⅳ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 1 4 5 @2 1 5 @4 6 4 5 1')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'major minimum 02 [Ⅰ→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 1 5 6 3 4 1 2 5 1 5 3n*7 6 2 3 4n*m 1')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'minor minimum 01 [Ⅵ→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 6 5 4 3n*m7 2n*m7 6 7n*7 3n*7 6')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'minor minimum 02 [Ⅱm→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 2n*m7 5 1 6 2n*m7 3n*7 6 6n*7 2n*m7 5 3n*m7 6 2n*m7 3n*7 6n*sus4 6')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'major short 01 [Ⅰ→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 1 5 6 3n*m7 4 1 2n*m7 5 1 5 6 3 4 1 2n*7 3n*7')\r\n                },\r\n                {\r\n                    sectionName: 'B',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 4 5 1n*sus4 1')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'major short 02 [Ⅳ→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 2n*m7 5 1 @2 5n*m 1n*7 @4 4n*maj7 5 @2 1 5 @4 6 2n*m7 5 6n*sus4 6n*')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'major short 03 [Ⅰ→Ⅵm～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 1 1 6 6 4 4 5 5 1 1 6 6 4 4 5 5')\r\n                },\r\n                {\r\n                    sectionName: 'B',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 4 5 1n*sus4 1')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'minor short 01 [Ⅵ→Ⅳ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 6 4 5 1 6 4 5 1 6 4 5 1 2 3n*m7 4n*maj7 3n*7')\r\n                },\r\n                {\r\n                    sectionName: 'B',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 4 5 3 6 2 3 6n*sus4 6')\r\n                }\r\n            ]\r\n        },\r\n    ];\r\n}\r\n\r\nexport default ProgTemplateUtil;","import { useContext, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgTemplateUtil from \"./progTemplateUtil\";\r\nimport ProgUnitSearcher from \"./progUnitSearcher\";\r\n\r\nconst ProgTemplateFrame = (props: {\r\n    /** 拍子フィルターの値 */\r\n    beat: '' | BeatSignature;\r\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\r\n    applyProgTemplate: (template: ProgTemplateUtil.TemplateBean) => void;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n\r\n    const templateList = ProgTemplateUtil.search({\r\n        beat: props.beat as BeatSignature\r\n    });\r\n\r\n    const templateJsxList = useMemo(() => {\r\n        return templateList.map((template, i) => {\r\n            return (\r\n                <_Item key={i}\r\n                    isFocus={i === focusIndex}\r\n                    onClick={() => {\r\n                        setFocusIndex(i);\r\n                        props.applyProgTemplate(templateList[i]);\r\n                    }}\r\n                >{template.name}</_Item>\r\n            );\r\n        });\r\n    }, [templateList, focusIndex]);\r\n\r\n    return (\r\n        <_Frame>\r\n            {templateJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgTemplateFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #00000010;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #f6ff0062;\r\n    `}\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n    color: #eb0000;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgCustomFrame from \"./progCustomFrame\";\r\nimport ProgOutputFrame from \"./progOutputFrame\";\r\nimport ProgUnitSearcher from \"./progUnitSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgTemplateFrame from \"./progTemplateFrame\";\r\nimport ProgUtil from \"./progUtil\";\r\nimport ProgTemplateUtil from \"./progTemplateUtil\";\r\n\r\n/**\r\n * コード進行を構成して譜面のベースを作成するダイアログ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ChordProgDialog = (props: {\r\n    setScoreData: (scoreData: ScoreData) => void;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** 生成モード（ブランク、カスタム、テンプレート） */\r\n    const [buildMode, setBuildType] = useState<ProgUtil.BuildType>('blank');\r\n    /** 出力する進行ユニットのリスト */\r\n    const [outputUnits, setOutputUnits] = useState(ProgUtil.getBlankBlockList());\r\n    /** 拍子フィルター */\r\n    const [beatFilter, setBeatFilter] = useState<'' | BeatSignature>('');\r\n\r\n    /**\r\n     * Closeボタン押下時の処理\r\n     */\r\n    const closeAction = () => {\r\n        store.systemState.dialog = null;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    /**\r\n     * Startボタン押下時の処理\r\n     */\r\n    const startAction = () => {\r\n        const scoreData = ProgUtil.buildScoreData(outputUnits);\r\n        props.setScoreData(scoreData);\r\n        closeAction();\r\n        // Editタブに遷移\r\n        store.systemState.scoreTabIndex = 1;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    const getSwitchContJsx = () => {\r\n        switch (buildMode) {\r\n            case 'blank': return <></>;\r\n            case 'custom': return <ProgCustomFrame\r\n                beat={beatFilter}\r\n                unitNum={outputUnits.length - 2}\r\n                reset={() => { setOutputUnits(ProgUtil.getInitialBlockList()) }}\r\n                insertProgUnit={insertProgUnit}\r\n            />;\r\n            case 'template': return <ProgTemplateFrame\r\n                beat={beatFilter}\r\n                applyProgTemplate={applyProgTemplate}\r\n            />;\r\n        }\r\n    };\r\n\r\n    /** 拍フィルターのオプションリストJSX */\r\n    const beatOptionJsxList = useMemo(() => {\r\n        if (buildMode === 'blank') {\r\n            return [(\r\n                <option key={0} value={''}></option>\r\n            )];\r\n        } else {\r\n            return [''].concat(TheoryUtil.BEAT_DEF_LIST).map((val, i) => {\r\n                return (\r\n                    <option key={i} value={val}>{val}</option>\r\n                );\r\n            });\r\n        }\r\n    }, [buildMode]);\r\n\r\n    const beatChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setBeatFilter(e.target.value as BeatSignature);\r\n    }\r\n\r\n    /** リストから選択中のコード進行ブロックを出力に追加する */\r\n    const insertProgUnit = (sectionName: string, sectionNo: string, chordList: ProgUnitSearcher.ChordItemBean[]) => {\r\n        const detail: ProgUtil.SectionProps = {\r\n            sectionName, sectionNo,\r\n            chordList: chordList.map((chord) => {\r\n                const chordDetail = ProgUtil.getDefaultChord();\r\n                chordDetail.beatLen = chord.beatLen;\r\n                chordDetail.symbolKey = chord.symbolKey;\r\n                chordDetail.root = chord.root;\r\n                return chordDetail;\r\n            }),\r\n            backingNo: 1\r\n        }\r\n        const block: ProgUtil.UnitProps = { type: 'section', detail }\r\n        outputUnits.splice(outputUnits.length - 1, 0, block);\r\n        setOutputUnits(outputUnits.slice());\r\n    }\r\n\r\n    const applyProgTemplate = (templateBean: ProgTemplateUtil.TemplateBean) => {\r\n        outputUnits.splice(0);\r\n        ProgUtil.getInitialBlockList().forEach(progUnit => {\r\n            outputUnits.push(progUnit);\r\n        });\r\n        templateBean.unitList.forEach((unit) => {\r\n            insertProgUnit(unit.sectionName, '', unit.chordList);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 切り替え式ボタンのJSXを返すクロージャ\r\n     * @param labelName ラベル名\r\n     * @param clickEvent 押下時の処理\r\n     * @param isActive 選択中かどうか\r\n     * @returns JSX\r\n     */\r\n    const createSwitchableButton = (\r\n        labelName: string,\r\n        isActive: boolean,\r\n        clickEvent: () => void\r\n    ) => {\r\n        return (\r\n            <_SwitchableButton isActive={isActive}\r\n                onClick={clickEvent}\r\n            >{labelName}</_SwitchableButton>\r\n        );\r\n    }\r\n\r\n    const beatComboboxEnable = outputUnits.length <= 2;\r\n\r\n    // Blankモードの時は空白を表示\r\n    const distBeatFilter = buildMode === 'blank' ? '' : beatFilter;\r\n    return (\r\n        <_Frame >\r\n            <_Header>\r\n                {createSwitchableButton('Blank', buildMode === 'blank', () => {\r\n                    setOutputUnits(ProgUtil.getBlankBlockList());\r\n                    setBuildType('blank');\r\n                })}\r\n                {createSwitchableButton('Custom', buildMode === 'custom', () => {\r\n                    setOutputUnits(ProgUtil.getInitialBlockList());\r\n                    setBuildType('custom');\r\n                })}\r\n                {createSwitchableButton('Template', buildMode === 'template', () => {\r\n                    setOutputUnits(ProgUtil.getInitialBlockList());\r\n                    setBuildType('template');\r\n                })}\r\n            </_Header>\r\n            <_MainDiv>\r\n                <_LeftDiv isEnable={buildMode !== 'blank'}>\r\n                    <_BeatFormDiv>\r\n                        <ProgStyle._TitleLabel>Beat</ProgStyle._TitleLabel>\r\n                        <ProgStyle._Combobox value={distBeatFilter} isEnable={beatComboboxEnable} width={150}\r\n                            onChange={(e) => {\r\n                                beatChangeAction(e);\r\n                            }}>{beatOptionJsxList}</ProgStyle._Combobox>\r\n                    </_BeatFormDiv>\r\n                    {/* モードによって切り替えるコンテンツ（カスタムorテンプレート） */}\r\n                    <_SwitchDiv>{getSwitchContJsx()}</_SwitchDiv>\r\n                </_LeftDiv>\r\n                <_RightDiv>\r\n                    <ProgOutputFrame\r\n                        outputUnits={outputUnits}\r\n                        updateOutputUnits={() => { setOutputUnits(outputUnits.slice()) }}\r\n                    />\r\n                </_RightDiv>\r\n            </_MainDiv>\r\n            <_Footer>\r\n                {/* ダイアログを閉じる */}\r\n                <_ExecutableButton isEnable={true} onClick={closeAction}>Cancel</_ExecutableButton>\r\n                {/* 譜面を生成 */}\r\n                <_ExecutableButton isEnable={outputUnits.length >= 3} onClick={startAction}>Start</_ExecutableButton>\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ChordProgDialog;\r\n\r\nconst HEADER_HEIGHT = 50;\r\nconst FOOTER_HEIGHT = 50;\r\nconst BEAT_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 1024px;\r\n    height: 768px;\r\n    z-index: 11;\r\n    /* top: 100px;\r\n    left: 100px; */\r\n    /* width: calc(100% - 200px);\r\n    height: calc(100% - 200px); */\r\n    background-color: #929292;\r\n    border: solid 2px #404250;\r\n    border-radius: 8px;\r\n    /* border: 1px solid #dadada; */\r\n`;\r\n\r\n/**\r\n * ヘッダー\r\n */\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #7d8d97;\r\n    text-align: center;\r\n`;\r\n\r\n/**\r\n * メインコンポーネント\r\n */\r\nconst _MainDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_HEIGHT + FOOTER_HEIGHT}px);\r\n    /* background-color: #7d8d97; */\r\n    text-align: left;\r\n`;\r\n\r\n/**\r\n * 左側のコンポーネント\r\n */\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n   display: inline-block;\r\n   vertical-align: top;\r\n   width: calc(50% - 6px);\r\n   height: calc(100% - 8px);\r\n   background-color: #bdced8;\r\n   text-align: left;\r\n   margin: 4px 2px 4px 4px;\r\n   ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 拍選択\r\n */\r\nconst _BeatFormDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BEAT_HEIGHT}px;\r\n    /* background-color: #b4c7ba; */\r\n    padding: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _BeatSelect = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    text-align: left;\r\n    color: black;\r\n    vertical-align: top;\r\n    line-height: 24px;\r\n    width: 210px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 5px;\r\n`;\r\n\r\n\r\n/**\r\n * テンプレートとカスタムの切り替えコンテンツ表示\r\n */\r\nconst _SwitchDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    background-color: #cedbd7;\r\n    border: 1px solid #696969;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - ${BEAT_HEIGHT + 10}px);\r\n`;\r\n\r\n/**\r\n * 右側のコンポーネント\r\n */\r\nconst _RightDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    width: calc(50% - 6px);\r\n    height: calc(100% - 8px);\r\n    background-color: #bdced8;\r\n    text-align: left;\r\n    margin: 4px 4px 4px 2px;\r\n`;\r\n\r\n/**\r\n * フッター\r\n */\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n    & *{\r\n        margin: 10px 5px 0 0;\r\n    }\r\n`;\r\n\r\n/**\r\n * スイッチボタン\r\n */\r\nconst _SwitchableButton = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #5083c5;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c5b950;\r\n    `};\r\n    width: 200px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #375176;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #77a7e6;\r\n    ${props => !props.isActive ? '' : css`\r\n            background-color: #c5b950;\r\n    `};\r\n}\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #2d5625;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../utils/cacheUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ChordProgDialog from \"./chordProg/chordProgDialog\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\ntype ShareType = '' | 'url' | 'free' | 'dl';\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [file, setFile] = useState<null | File>(null);\r\n\r\n    const fileHandle = store.scoreState.fileHandle;\r\n    const scoreData = store.scoreData;\r\n    const tabIndex = store.systemState.scoreTabIndex;\r\n\r\n    const loginProps = store.userEnv.login;\r\n\r\n    const [cloudScoreList, setCloudScoreList] = useState<null | {\r\n        seq: number, name: string, hash: string, url: string, share: string\r\n    }[]>(null);\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n    const [cloudScoreName, setCloudScoreName] = useState('-');\r\n    const [cloudScoreShare, setCloudScoreShare] = useState<ShareType>('');\r\n\r\n    useEffect(() => {\r\n        loadCloudScore();\r\n    }, [loginProps]);\r\n\r\n    const loadCloudScore = () => {\r\n        if (loginProps != undefined) {\r\n            DataUtil.findUserScoreList(loginProps.seq).then((resList) => {\r\n                setCloudScoreList(resList.map((res) => {\r\n                    const seq = res['seq'];\r\n                    const hash = DataUtil.getHashedFromScoreSeq(seq);\r\n                    const url = DataUtil.getPreviewURL(seq);\r\n                    return { seq, name: res['dispnam'], hash, url, share: res['share'] };\r\n                }));\r\n                console.log('load');\r\n            });\r\n        }\r\n    }\r\n\r\n    const [fileInfo, scoreInfo]: [{\r\n        name: string;\r\n        size: string;\r\n        modified: string;\r\n    }, {\r\n        key: string;\r\n        tempo: string;\r\n        rate: string;\r\n        section: string;\r\n        chord: string;\r\n        bar: string;\r\n        time: string;\r\n        notes: string;\r\n    }] = useMemo(() => {\r\n        let name = '-';\r\n        let size = '-';\r\n        let modified = '-';\r\n        let key = '-';\r\n        let tempo = '-';\r\n        let rate = '-';\r\n        let section = '-';\r\n        let chord = '-';\r\n        let bar = '-';\r\n        let time = '-';\r\n        let notes = '-';\r\n        if (tabIndex === 0) {\r\n            if (file != null) {\r\n                name = file.name;\r\n                size = `${file.size.toString()} byte`;\r\n                modified = DataUtil.getStringFromDate(new Date(file.lastModified));\r\n            }\r\n            if (scoreData.chordList.length > 0) {\r\n                const init = scoreData.chordList[0].detail as DetailInit;\r\n                key = `${TheoryUtil.KEY12_MAJOR_SCALE_LIST[init.keyIndex]} ${init.scale}`;\r\n                tempo = init.bpm.toString();\r\n                rate = init.beatSignature;\r\n                let sectionNum = 0;\r\n                let chordNum = 0;\r\n                scoreData.chordList.forEach(chord => {\r\n                    switch (chord.type) {\r\n                        case 'section': sectionNum++; break;\r\n                        case 'chord': chordNum++; break;\r\n                    }\r\n                });\r\n                section = sectionNum.toString();\r\n                chord = chordNum.toString();\r\n\r\n                const cacheList = store.scoreState.elementCacheList;\r\n                if (cacheList.length > 0) {\r\n                    const last = cacheList[cacheList.length - 1];\r\n                    time = `${last.pastSecond / 1000}s`;\r\n                    bar = `${last.bar} (${last.surplusBeat})`;\r\n                }\r\n                notes = scoreData.notesList.length.toString();\r\n            }\r\n        }\r\n        return [{\r\n            name, size, modified\r\n        }, {\r\n            key, tempo, rate, section, chord, bar, time, notes\r\n        }]\r\n    }, [tabIndex, scoreData, file]);\r\n\r\n    useEffect(() => {\r\n        if (tabIndex === 0 && fileHandle != null) {\r\n            fileHandle.getFile().then(file => {\r\n                setFile(file);\r\n            });\r\n        }\r\n    }, [tabIndex]);\r\n\r\n    const setScoreData = ((data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    });\r\n\r\n    /**\r\n     * ラベルアイテムを生成する\r\n     * @param labelName ラベル名\r\n     * @param labelValue 値\r\n     * @returns JSX\r\n     */\r\n    const createLabelRecord = (labelName: string, labelValue: string) => {\r\n        return (\r\n            <_Recored>\r\n                <_ItemnLabel>{labelName}</_ItemnLabel>\r\n                <_ItemnValue>{labelValue}</_ItemnValue>\r\n            </_Recored>\r\n        );\r\n    }\r\n    /**\r\n     * テキストアイテムを生成する\r\n     * @param labelName ラベル名\r\n     * @param textValue 値\r\n     * @returns JSX\r\n     */\r\n    const createTextRecord = (labelName: string, textValue: string, changeAction: (e: React.ChangeEvent<HTMLInputElement>) => void) => {\r\n        return (\r\n            <_Recored>\r\n                <_ItemnLabel>{labelName}</_ItemnLabel>\r\n                <_ItemnInput\r\n                    type=\"text\" value={textValue}\r\n                    isEnable={focusIndex !== -1}\r\n                    onChange={changeAction}\r\n                />\r\n            </_Recored>\r\n        );\r\n    }\r\n\r\n    const searchLocalFileAction = () => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            // console.log(fileContents);\r\n            store.scoreState.fileHandle = fileHandle;\r\n            setFile(file);\r\n            const text = DataUtil.unZip(fileContents);\r\n            // const text = fileContents;\r\n            console.log(text);\r\n            setScoreData(JSON.parse(text));\r\n        })();\r\n    }\r\n\r\n    const fileDisconnectAction = () => {\r\n        store.scoreState.fileHandle = null;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // キャッシュの更新\r\n        store.scoreData = scoreData;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n        setFile(null);\r\n    };\r\n\r\n    const isDataConnect = fileHandle != null;\r\n\r\n\r\n    const cloudScoreListJsx = loginProps == undefined ? <></> : cloudScoreList == null ? (\r\n        <_Message>Now loading your cloud score...</_Message>\r\n    ) : cloudScoreList.map((score, i) => {\r\n\r\n        return <_CloudItem key={i} isActive={i === focusIndex} onClick={() => {\r\n            setFocusIndex(i);\r\n            const cur = cloudScoreList[i];\r\n            if (cur != null) {\r\n                setCloudScoreName(cur.name);\r\n            }\r\n        }}><_CName>{score.name}</_CName><_CHash> [{score.hash}]</_CHash></_CloudItem>\r\n    });\r\n\r\n\r\n    const uploadActioon = () => {\r\n        setCloudScoreList(null);\r\n        if (loginProps != undefined && cloudScoreList != null) {\r\n            const newScoreName = `new [${loginProps.id}] score`;\r\n            DataUtil.sendQueryRequestToAPI('update', `INSERT INTO scoretbl(user_seq, dispnam, data)\r\n                VALUES(${loginProps.seq}, '${newScoreName}', '${DataUtil.gZip(JSON.stringify(scoreData))}')\r\n            `).then(() => {\r\n                setFocusIndex(cloudScoreList.length);\r\n                setCloudScoreName(newScoreName);\r\n                loadCloudScore();\r\n            })\r\n        }\r\n    }\r\n\r\n    const overwriteActioon = () => {\r\n        setCloudScoreList(null);\r\n        if (curCloudScore != null) {\r\n            DataUtil.sendQueryRequestToAPI('update', `\r\n                UPDATE scoretbl SET\r\n                dispnam = '${cloudScoreName}',\r\n                share = '${cloudScoreShare}',\r\n                lastmod = datetime('now', 'localtime'),\r\n                data = '${DataUtil.gZip(JSON.stringify(scoreData))}'\r\n                WHERE seq = ${curCloudScore.seq}\r\n            `).then(() => {\r\n                loadCloudScore();\r\n            })\r\n        }\r\n    }\r\n    const deleteActioon = () => {\r\n        setCloudScoreList(null);\r\n        if (curCloudScore != null) {\r\n            DataUtil.sendQueryRequestToAPI('update', `DELETE FROM scoretbl WHERE seq = ${curCloudScore.seq}\r\n            `).then(() => {\r\n                setFocusIndex(-1);\r\n                loadCloudScore();\r\n            })\r\n        }\r\n    }\r\n\r\n    const downloadAction = () => {\r\n        if (curCloudScore != undefined) {\r\n            DataUtil.findScore(curCloudScore.seq).then((resList) => {\r\n                if (resList.length > 0) {\r\n                    const source = resList[0]['data'];\r\n                    const text = DataUtil.unZip(source);\r\n                    setScoreData(JSON.parse(text));\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const curCloudScore = cloudScoreList == null ? null : cloudScoreList[focusIndex];\r\n    const uploadEnable = scoreData.chordList.length > 0 && focusIndex === -1;\r\n    const isExistEditingData = scoreData.chordList.length > 0;\r\n\r\n    const isSelectedScore = focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            <_ButtonsDiv>\r\n                <_Button isEnable={!isDataConnect && !isExistEditingData} onClick={() => {\r\n                    store.systemState.dialog = <ChordProgDialog setScoreData={setScoreData} />;\r\n                    dispatcher.system.setState(store.systemState);\r\n                }}>new score</_Button>\r\n            </_ButtonsDiv>\r\n            <_MainDiv>\r\n                <_Left>\r\n                    <_CloudDiv isEnable={true}>\r\n\r\n                        <_ButtonsDiv>\r\n                            <_Button isEnable={loginProps != undefined && uploadEnable} onClick={uploadActioon}>upload</_Button>\r\n                            <_Button isEnable={loginProps != undefined && isSelectedScore} onClick={() => {\r\n                                setFocusIndex(-1);\r\n                            }}>release</_Button>\r\n                        </_ButtonsDiv>\r\n                        <_ListFrame isEnable={loginProps != undefined}>\r\n                            {cloudScoreListJsx}\r\n                        </_ListFrame>\r\n                        <_ButtonsDiv>\r\n                            <_Button isEnable={loginProps != undefined && isSelectedScore && isExistEditingData} onClick={overwriteActioon}>overwrite</_Button>\r\n                            <_Button isEnable={loginProps != undefined && isSelectedScore && !isExistEditingData} onClick={downloadAction}>download</_Button>\r\n                            <_Button isEnable={loginProps != undefined && isSelectedScore} onClick={deleteActioon}>delete</_Button>\r\n                        </_ButtonsDiv>\r\n                    </_CloudDiv>\r\n                </_Left>\r\n                <_Right>\r\n                    {/* <_Source value={source} onChange={e => setSource(e.target.value)} /> */}\r\n\r\n                    <_ButtonsDiv>\r\n                        <_Button isEnable={!isDataConnect && !isExistEditingData} onClick={searchLocalFileAction}>load file</_Button>\r\n                        <_Button isEnable={isDataConnect} onClick={fileDisconnectAction}>disconnect</_Button>\r\n                        <_Button isEnable={isExistEditingData} onClick={() => {\r\n                            dispatcher.score.clearCache();\r\n                            if (isDataConnect) {\r\n                                fileDisconnectAction();\r\n                            }\r\n                            dispatcher.score.setScoreData({ notesList: [], chordList: [] });\r\n                        }}>clear</_Button>\r\n                    </_ButtonsDiv>\r\n                    <_DataInfoDiv isEnable={isDataConnect}>\r\n                        <_TitleLabel>Local</_TitleLabel>\r\n                        {createLabelRecord('file', fileInfo.name)}\r\n                        {createLabelRecord('size', fileInfo.size)}\r\n                        {createLabelRecord('last', fileInfo.modified)}\r\n                        {/* {createLabelRecord('size', fileInfo.size)}\r\n                        {createLabelRecord('modified', fileInfo.modified)} */}\r\n                    </_DataInfoDiv>\r\n                    <_DataInfoDiv isEnable={focusIndex !== -1}>\r\n                        <_TitleLabel>Cloud</_TitleLabel>\r\n                        {createTextRecord('name', curCloudScore == null ? '-' : cloudScoreName, (e) => {\r\n                            setCloudScoreName(e.target.value);\r\n                        })}\r\n                        <_Recored>\r\n                            <_ItemnLabel>url</_ItemnLabel>\r\n                            <_ItemnURL onContextMenu={() => {\r\n                                navigator.clipboard.writeText(curCloudScore == null ? '-' : curCloudScore.url).then(() => {\r\n                                    alert('Copied clipboad!');\r\n                                });\r\n                            }}>{curCloudScore == null ? '-' : curCloudScore.url}</_ItemnURL>\r\n                        </_Recored>\r\n                        {/* {createLabelRecord('url', curCloudScore == null ? '-' : curCloudScore.url)} */}\r\n                        <_Recored>\r\n                            <_ItemnLabel>share</_ItemnLabel>\r\n                            <_ItemnCombobox\r\n                                isEnable={focusIndex !== -1}\r\n                                value={cloudScoreShare}\r\n                                onChange={(e) => {\r\n                                    setCloudScoreShare(e.target.value as ShareType);\r\n                                }}\r\n                            >\r\n                                <option value={'url'}>URL only</option>\r\n                                <option value={'free'}>Home publish</option>\r\n                                <option value={'dl'}>Download OK</option>\r\n                            </_ItemnCombobox>\r\n                        </_Recored>\r\n                    </_DataInfoDiv>\r\n                    <_ScoreInfoDiv isEnable={isExistEditingData}>\r\n                        <_TitleLabel>SCORE</_TitleLabel>\r\n                        {createLabelRecord('key', scoreInfo.key)}\r\n                        {createLabelRecord('tempo', scoreInfo.tempo)}\r\n                        {createLabelRecord('rate', scoreInfo.rate)}\r\n                        {createLabelRecord('section', scoreInfo.section)}\r\n                        {createLabelRecord('chord', scoreInfo.chord)}\r\n                        {createLabelRecord('bar', scoreInfo.bar)}\r\n                        {createLabelRecord('time', scoreInfo.time)}\r\n                        {createLabelRecord('notes', scoreInfo.notes)}\r\n                    </_ScoreInfoDiv>\r\n                </_Right>\r\n            </_MainDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #8a6b6b; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #969696; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\n// const _Source = styled.textarea`\r\n//     display: inline-block;\r\n//     width: calc(100% - 8px);\r\n//     margin: 4px 0 0 4px;\r\n//     height: calc(100% - 44px);\r\n//     /* background-color: #7e7e7e; */\r\n//     text-align: left;\r\n//     font-size: 20px;\r\n//     resize: none;\r\n//     box-sizing: border-box;\r\n//     color: #060053;\r\n// `;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    height: calc(100% - 48px);\r\n    background-color: #ffffff;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst DATA_INFO_HEIGHT = 180;\r\n\r\nconst _DataInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${DATA_INFO_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #9da5af;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ScoreInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${DATA_INFO_HEIGHT * 2 + 40 + 20}px);\r\n    margin: 0 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _CloudDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n`;\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\nconst _ItemnURL = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 18px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #01f52a;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #1f1f1f;\r\n    border: solid 1px #000;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;\r\n\r\nconst _ItemnCombobox = styled.select<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #1f1f1f;\r\n    border: solid 1px #000;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\n\r\nconst _ListFrame = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 92px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    color: #d60000;\r\n    font-size: 24px;\r\n    /* font-weight: 600; */\r\n    /* background-color: white; */\r\n    margin: 0 0 0 4px;\r\n`;\r\n\r\nconst _CloudItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    border-bottom: 1px solid #888888;\r\n    /* background-color: white; */\r\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, transparent, #fdff8484);\r\n    `}\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    padding-left: 4px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n        ${props => !props.isActive ? '' : css`\r\n            background: linear-gradient(to bottom, transparent, #feffcd99);\r\n        `}\r\n    }\r\n`;\r\nconst _CName = styled.span` color: #00532c; `;\r\nconst _CHash = styled.span` color: #b9000042; `;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : TheoryUtil.getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: TheoryUtil.SymbolKey[] = [];\r\n        const parentLine: TheoryUtil.SymbolKey[] = [];\r\n        const childrenLine: TheoryUtil.SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = TheoryUtil.getSymbolDerives(baseSymbol.key);\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = TheoryUtil.getSymbolDerives(curSymbol.key);\r\n        TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\nimport { DetailChord } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = TheoryUtil.getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = TheoryUtil.getRootName({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = TheoryUtil.getRootName({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        // 見た目上１から数えるため\r\n        bar = cache.bar + 1;\r\n    }\r\n    // 小節変更タイミングで、余りの拍がある（頭でない）場合エラー\r\n    const isError = bar !== -1 && cache.surplusBeat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n        if(chordOn != null) {\r\n            chordName += `/${chordOn}`;\r\n        }\r\n    }\r\n\r\n    let minuteStr = '';\r\n    if(cache.minute !== 0) {\r\n        switch(cache.minute) {\r\n            case 1: minuteStr = '→/16'; break;\r\n            case 2: minuteStr = '→/8'; break;\r\n            case -1: minuteStr = '←/16'; break;\r\n            case -2: minuteStr = '←/8'; break;\r\n        }\r\n    }\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.surplusBeat === 0 ? <>&nbsp;</> : cache.surplusBeat}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : minuteStr}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailAlter = (props: {\r\n    detail: DetailAlter;\r\n}) => {\r\n\r\n    const type = props.detail.alterType;\r\n\r\n    const getDetailInfo = (): string => {\r\n        let ret = '-';\r\n        if (type != null) {\r\n            switch (type) {\r\n                case 'modulate': {\r\n\r\n                    const modRel = props.detail.modRel;\r\n                    if (modRel != null) {\r\n                        switch (modRel) {\r\n                            case 'domm': {\r\n                                const val = props.detail.dommVal;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                            case 'relative':\r\n                            case 'parallel': {\r\n                                ret = modRel;\r\n                            } break;\r\n                            case 'key': {\r\n                                const val = props.detail.keyAdj;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                        }\r\n                    }\r\n                } break;\r\n                case 'tempo' : {\r\n                    const tempoRel = props.detail.tempoRel;\r\n                    switch(tempoRel) {\r\n                        case 'diff': {\r\n                            const val = props.detail.tempoDiff;\r\n                            const sign = val > 0 ? '+' : ''; \r\n                            ret = `${tempoRel}: ${sign}${val}`;\r\n                        } break;\r\n                        case 'rate': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoRate}%`;\r\n                        } break;\r\n                        case 'abs': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoAbs}`;\r\n                        } break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                {type == null ? 'alter' : type}\r\n            </_Type>\r\n            <_Detail>\r\n                {getDetailInfo()}\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailChord, Scale } from \"../../../../../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../../../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 2 | 1;\r\n\r\n/**\r\n * コードブロックのコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isSustainMode: boolean;\r\n    isCurrent: boolean;\r\n    cache: ScoreCache.Element;\r\n    chordCacheList: ScoreCache.Chord[];\r\n    keyIndex: number;\r\n    scale: Scale;\r\n}) => {\r\n\r\n    const minute = props.detail.minute;\r\n    const symbol = TheoryUtil.getSymbolFromKey(props.detail.symbolKey) as TheoryUtil.SymbolParams;\r\n    const symbolName = symbol.name;\r\n    const chordBacking = props.detail.backing;\r\n    const cache = props.cache;\r\n    const chordCache = props.chordCacheList[cache.chordBlockNo];\r\n\r\n    const backingError = chordCache != undefined ? chordCache.backingError : false;\r\n    \r\n    return useMemo(() => {\r\n\r\n        // const keySwitch = store.scoreState.keySwitch;\r\n        let degreeRoot: null | string = null;\r\n        let degreeOn: null | string = null;\r\n        let chordRoot: null | string = null;\r\n        let chordOn: null | string = null;\r\n\r\n        if (props.detail.root != null) {\r\n            degreeRoot = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            });\r\n            chordRoot = TheoryUtil.getRootName({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, props.keyIndex);\r\n\r\n            if (props.detail.on != null) {\r\n                degreeOn = TheoryUtil.getDegreeRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.on.isFlat\r\n                });\r\n                chordOn = TheoryUtil.getRootName({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.root.isFlat\r\n                }, props.keyIndex);\r\n            }\r\n        }\r\n\r\n        const diatonicList = TheoryUtil.getDiatonicDegreeList(props.scale);\r\n        const isDiatonic = diatonicList.includes(degreeRoot + symbolName);\r\n\r\n        return <_Wrap>\r\n            <_Degree\r\n                // isSwitch={keySwitch.sustainMode && props.isCurrent}\r\n                isSwitch={props.isSustainMode}\r\n                scaleRelation={degreeRoot != null && isDiatonic ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}{symbolName}{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeRoot>\r\n                    {/* <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord> */}\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={props.isSustainMode}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n            <_Backing>\r\n                {backingError ? <_Error /> : <>\r\n                    {chordBacking.voicingList.length === 0 ? '' : <_Voicing />}\r\n                    {chordBacking.voicingList.length === 0 ? '' : chordBacking.pattern == null ? '' : <_Pattern />}\r\n                </>}\r\n            </_Backing>\r\n        </_Wrap>\r\n    }\r\n        , [\r\n            props.scale,\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            props.isSustainMode,\r\n            props.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail,\r\n            props.detail.backing,\r\n            backingError\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: TheoryUtil.ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 18px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #4e5163cc;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 2 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 1 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Backing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 6px;\r\n    /* background-color: #00a048; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _Error = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background-color: #af3838;\r\n`;\r\n\r\nconst _Voicing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 2px 0 0;\r\n    height: 4px;\r\n    border-radius: 4px 0 0 4px;\r\n    border: solid 1px #0000004e;\r\n    background-color: #acb6ca;\r\n`;\r\n\r\nconst _Pattern = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 0 0 2px;\r\n    height: 4px;\r\n    border-radius: 0 4px 4px 0;\r\n    border: solid 1px #0000004e;\r\n    background-color: #accab3;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    // const jsxList: JSX.Element[] = [];\r\n    // jsxList.push(<_Border key={0} />);\r\n    // jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    const value = props.detail.fixed;\r\n    return (\r\n        <_Wrap isStart={value === 'Start'}>\r\n            {/* {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()} */}\r\n            <_Label>{value}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div<{\r\n    isStart: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    border-left: 1px solid #00000083;\r\n    border-top: 1px solid #00000083;\r\n    border-right: 1px solid #00000083;\r\n    /* border: 1px solid #00000083; */\r\n    box-sizing: border-box;\r\n    background-color: #9b9b9b1f;\r\n    ${props => props.isStart ? css`\r\n        border-radius: 0 35px 0 0;\r\n    ` : css`\r\n        border-radius: 35px 0 0 0;\r\n    `}\r\n`;\r\n\r\n// const _Border = styled.div`\r\n//     display: inline-block;\r\n//     width: 10px;\r\n//     height: 100%;\r\n//     background-color: #b4b4b4;\r\n//     vertical-align: middle;\r\n// `;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    /* width: calc(100% - 10px); */\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #960000b0;\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    /* vertical-align: middle; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{TheoryUtil.KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.beatSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailSection } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailSection = (props: {\r\n    detail: DetailSection;\r\n}) => {\r\n    // const { store } = useContext(GlobalContext);\r\n\r\n    // const state = store.scoreState;\r\n    // const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    // const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Label>{curSection.labelName}</_Label> */}\r\n            <_Label>{props.detail.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcAlter = (props: {\r\n    detail: DetailAlter;\r\n    prevCache: ScoreCache.Element;\r\n    curCache: ScoreCache.Element;\r\n}) => {\r\n\r\n    const getType = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate': return 'Key';\r\n            case 'tempo': return 'Tempo';\r\n            case 'beat': return 'Beat';\r\n        }\r\n    }\r\n    const getDetail = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate':{\r\n                const prevKey = TheoryUtil.KEY12_SHARP_LIST[props.prevCache.keyIndex] + (props.prevCache.scale === 'major' ? '' : 'm');\r\n                const curKey = TheoryUtil.KEY12_SHARP_LIST[props.curCache.keyIndex] + (props.curCache.scale === 'major' ? '' : 'm');\r\n                return `${prevKey}→${curKey}`;\r\n            }\r\n            case 'tempo':{\r\n                const prevTempo = props.prevCache.bpm;\r\n                const curTempo = props.curCache.bpm;\r\n                return `${prevTempo}→${curTempo}`;\r\n            }\r\n            case 'beat':{\r\n                const prevBeat = props.prevCache.beatSignature;\r\n                const curBeat = props.curCache.beatSignature;\r\n                return `${prevBeat}→${curBeat}`;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Type>{getType()}</_Type>\r\n            <_Detail>{getDetail()}</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\ntype ChordDefBean = {\r\n    root: TheoryUtil.DegreeProps;\r\n    symbolKey: TheoryUtil.SymbolKey;\r\n}\r\n\r\nconst ChordEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n    }, [detail.root, detail.symbolKey]);\r\n\r\n    const getChord = (index: number, isFlat: boolean, symbolKey: TheoryUtil.SymbolKey): ChordDefBean => {\r\n        return { root: { index, isFlat }, symbolKey };\r\n    }\r\n\r\n    const createRow = (label: JSX.Element, chordList: ChordDefBean[]): JSX.Element => {\r\n        const listJsx: JSX.Element[] = [];\r\n        listJsx.push(<_Header key={listJsx.length}>{label}</_Header>);\r\n        chordList.forEach((chord) => {\r\n            const rootName = TheoryUtil.getDegreeRoot(chord.root);\r\n            const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\r\n            const symbolName = symbol.name;\r\n            listJsx.push(\r\n                <_Item isActive={false} key={listJsx.length}>\r\n                    {rootName + symbolName}\r\n                </_Item>);\r\n        });\r\n        return <_Row>{listJsx}</_Row>;\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {createRow(<>triad</>, [\r\n                getChord(0, false, 'major'),\r\n                getChord(2, false, 'minor'),\r\n                getChord(4, false, 'minor'),\r\n                getChord(5, false, 'major'),\r\n                getChord(7, false, 'major'),\r\n                getChord(9, false, 'minor'),\r\n                getChord(11, false, 'minor-minus5'),\r\n            ])}\r\n            {/* {createRow(<>Tetrad</>, [\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'minor-7th'),\r\n                getChord(4, false, 'minor-7th'),\r\n                getChord(5, false, 'major-maj7th'),\r\n                getChord(7, false, 'major-min7th'),\r\n                getChord(9, false, 'minor-7th'),\r\n                getChord(11, false, 'minor7-minus5'),\r\n            ])} */}\r\n            {createRow(<>domm</>, [\r\n                getChord(9, false, 'major-min7th'),\r\n                getChord(11, false, 'major-min7th'),\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'major-min7th'),\r\n                getChord(4, false, 'major-min7th'),\r\n            ])}\r\n            {createRow(<>domm*</>, [\r\n                getChord(1, false, 'diminish'),\r\n                getChord(3, false, 'diminish'),\r\n                getChord(4, false, 'diminish'),\r\n                getChord(6, false, 'diminish'),\r\n                getChord(8, false, 'diminish'),\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    /* height: 160px; */\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    /* height: 100%; */\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport SymbolEditor from \"../tool/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailAlter from \"./form/elementDetailAlter\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcAlter from \"./calc/calcAlter\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { ScoreState } from \"../../../../../redux/store/score/scoreState\";\r\nimport ChordEditor from \"../tool/chordEditor\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n    element: ChordElement;\r\n    state: ScoreState;\r\n    setState: (state: ScoreState) => void;\r\n}) => {\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = props.state;\r\n    const keySwitch = state.keySwitch;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    // const chordList = store.scoreData.chordList;\r\n    // const element = chordList[props.index];\r\n    const element = props.element;\r\n    const cache = state.elementCacheList[props.index];\r\n    const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n    const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n    const isFocus = props.index >= distHead && props.index <= distTail;\r\n    const isRange = isFocus && distHead != distTail;\r\n    const isSameSection = isFocus || state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        props.setState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    const elementJson = JSON.stringify(element);\r\n\r\n    const isError = () => {\r\n        let ret = false;\r\n        if(element.type === 'chord') {\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            ret = chordCache.backingError;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    return useMemo(() => {\r\n        // console.log(`pos: ${props.index}`);\r\n        const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n        const isInactive = !(isSameSection || element.type === 'init');\r\n        return (\r\n            <_Wrap\r\n                ref={wrapRef}\r\n                isSelectable={element.type !== 'fixed'}\r\n                isActive={isFocus}\r\n                isInactive={isInactive}\r\n                isAdditional={['chord', 'section', 'alter', 'init'].includes(element.type)}\r\n            >\r\n                <_Head>\r\n                    {element.type !== 'chord' ? <></> : (\r\n                        <_CurKey>{TheoryUtil.getDisplayKeyScaleName(cache.keyIndex, cache.scale)}</_CurKey>\r\n                    )}\r\n                </_Head>\r\n\r\n                {/* 要素の入力フォーム */}\r\n                {['init', 'chord', 'section', 'alter'].includes(element.type) ? (\r\n                    <_Form\r\n                        ref={bodyRef}\r\n                        isActive={isFocus}\r\n                        isRange={isRange}\r\n                        isInactive={isInactive}\r\n                        type={element.type}\r\n                        isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                        onClick={() => {\r\n                            if (element.type === 'fixed') {\r\n                                return;\r\n                            }\r\n                            if (!state.keySwitch.distMode) {\r\n                                state.focusIndex = props.index;\r\n                                state.distIndex = state.focusIndex;\r\n                            } else {\r\n                                state.distIndex = props.index;\r\n                            }\r\n                            props.setState(state);\r\n                        }}\r\n                    >{(() => {\r\n                        switch (element.type) {\r\n                            case 'init': {\r\n                                const detail = element.detail as DetailInit;\r\n                                return (<ElementDetailInit detail={detail} />);\r\n                            }\r\n                            case 'section': {\r\n                                const detail = element.detail as DetailSection;\r\n                                return (<ElementDetailSection detail={detail} />);\r\n                            }\r\n                            case 'chord': {\r\n                                const detail = element.detail as DetailChord;\r\n                                return (<ElementDetailChord\r\n                                    detail={detail}\r\n                                    isCurrent={isFocus}\r\n                                    cache={cache}\r\n                                    chordCacheList={state.chordCacheList}\r\n                                    keyIndex={cache.keyIndex}\r\n                                    isSustainMode={isFocus && state.keySwitch.sustainMode}\r\n                                    scale={cache.scale}\r\n                                />);\r\n                            }\r\n                            case 'alter': {\r\n                                const detail = element.detail as DetailAlter;\r\n                                return (<ElementDetailAlter detail={detail} />);\r\n                            }\r\n                        }\r\n                    })()}\r\n                    </_Form>\r\n                ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n                {/* 入力フォーム下部の計算によって出力される情報 */}\r\n                {\r\n                    element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                        element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                            element.type === 'alter' ? (\r\n                                <CalcAlter\r\n                                    detail={element.detail as DetailAlter}\r\n                                    prevCache={state.elementCacheList[props.index - 1]}\r\n                                    curCache={cache}\r\n                                />\r\n                            ) :\r\n                                <></>\r\n                }\r\n                <>{!(isCurrent && chordDetail != null && state.keySwitch.chordMode) ? '' :\r\n                    <ChordEditor />\r\n                }</>\r\n                <>{!(isCurrent && chordDetail != null && chordDetail.root != null && state.keySwitch.symbolMode) ? '' :\r\n                    <SymbolEditor />\r\n                }</>\r\n                {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                    <_Operations>\r\n                        <_OperationItem>-</_OperationItem>\r\n                        <_OperationItem\r\n                        // onClick={() => dispatcher.score.addChordElement()}\r\n                        >+</_OperationItem>\r\n                    </_Operations>\r\n                )}\r\n            </_Wrap>\r\n        );\r\n    }, [\r\n        elementJson, isSameSection, isRange, isFocus,\r\n        keySwitch.chordMode, keySwitch.symbolMode, keySwitch.sustainMode,\r\n        isError(), cache.keyIndex, cache.scale\r\n    ]);\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isRange: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    /* border: solid 1px #00000049; */\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #df8484;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #44b168;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'alter' ? '' : css`\r\n        border: solid 1px #604fc0;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 4px;\r\n    ${props => props.isInactive ? '' : css`\r\n        /* background-color: #ebf1e2; */\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4c9df;\r\n        border: solid 1px #00000049;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n    ${props => !props.isRange ? '' : css`\r\n        background-color: #80d4e2;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isAdditional: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isAdditional ? '' : css`\r\n        /* background-color: #e8ff9549; */\r\n        background: linear-gradient(to bottom, transparent,transparent,transparent, #ffffff9e);\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #ffffff9b;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (cacheList.length === chordList.length) {\r\n        for (let i = 0; i < cacheList.length; i++) {\r\n            list.push(\r\n                <ScoreElement key={list.length}\r\n                    index={i}\r\n                    element={chordList[i]}\r\n                    state={store.scoreState}\r\n                    setState={dispatcher.score.setScoreState}\r\n                />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {list}\r\n            {/* <_Frame> */}\r\n            {/* <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note> */}\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    /* overflow: auto; */\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #d8d8d8;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    state.distIndex = state.focusIndex;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 46px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #97cce0dd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #929292;\r\n    /* border-radius: 20px 20px 20px 20px; */\r\n    border-radius: 2px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 25px;\r\n        font-size: 18px;\r\n        /* font-weight: 600; */\r\n        color: #4d4d4d;\r\n        /* background-color: #0000003a; */\r\n        line-height: 22px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 21px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #adadad39; */\r\n        line-height: 20px;\r\n    }\r\n`;","import { on } from \"stream\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\nimport { getKeyIndexFromPitcher, getNormalizeLenFromNotes } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nnamespace HarmonizeUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n        const state = store.scoreState;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        const reserveTasks = store.reserveTasks;\r\n        let firstTime = -1;\r\n        const update = () => {\r\n            // if (store.invalidate.harmonize) {\r\n            //     store.invalidate.harmonize();\r\n            // }\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = state.focusIndex; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n            const element = chordList[i];\r\n\r\n            /**\r\n             * 要素の切り替わり時の処理をタスクに追加する\r\n             * @param callback 実行する処理\r\n             */\r\n            const addProgAction = (callback: () => void) => {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        callback();\r\n                    }, cache.pastSecond - firstTime - adjsut)\r\n                );\r\n            }\r\n\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                // 開始時のノーツの位置（時間）を保存する。\r\n                if (firstTime === -1) {\r\n                    firstTime = cache.pastSecond;\r\n                }\r\n\r\n                // コードが指定されてい場合\r\n                if (detail.root == null) {\r\n                    addProgAction(()=> {\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        update();\r\n                    });\r\n                }\r\n\r\n                // バッキングエラーがない場合\r\n                if (!chordCache.backingError) {\r\n                    const backing = detail.backing;\r\n                    const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n\r\n                    // const chordTime = 60 / cache.bpm * len;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    const chordTime = TheoryUtil.calcSustainMsec(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        cache.bpm,\r\n                        cache.beatSignature\r\n                    );\r\n\r\n                    addProgAction(()=> {\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        setTimeout(() => {\r\n                            update();\r\n                        }, 0);\r\n                    });\r\n                } else {\r\n                    // バッキングエラーがある場合プレビューを止める\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                        }, (cache.pastSecond - firstTime - adjsut))\r\n                    );\r\n                }\r\n            }\r\n\r\n            // 終端の要素を処理\r\n            if (i === chordList.length - 1) {   \r\n                addProgAction(()=> {\r\n                    HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                });\r\n            }\r\n        }\r\n\r\n        // メロディを再生\r\n        if (!state.isSolo) {\r\n            previewMelody(firstTime / 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n        state.isPreview = true;\r\n        update();\r\n    }\r\n\r\n    const previewMelody = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const instrument = store.instruments.melodyFont;\r\n\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = 0; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n\r\n            if (posTime < start) continue;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    dispatcher.melody.adjustScrollX();\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                    }, 0);\r\n                }, (posTime - start) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            // if (i === data.notesList.length - 1) {\r\n            //     reserveTasks.push(\r\n            //         setTimeout(() => {\r\n            //             stopPreview(store, dispatcher, reserveTasks);\r\n            //         }, (posTime - start + lenTime) * 1000)\r\n            //     );\r\n            // }\r\n        }\r\n    }\r\n\r\n    // ハーモニーのプレビューを停止する。\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        state.isPreview = false;\r\n        // store.instruments.sampler.releaseAll();\r\n        // state.focusIndex = state.lastFocus;\r\n        reserveTasks.forEach(id => clearTimeout(id));\r\n        dispatcher.system.setReserveTasks([]);\r\n        dispatcher.score.setScoreState(state);\r\n\r\n        store.instruments.harmonyFont?.stop();\r\n    }\r\n\r\n    // 選択中の要素のバッキングパターンを鳴らす\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.scoreState;\r\n        const reserveTasks = store.reserveTasks;\r\n        const cache = state.elementCacheList[state.focusIndex];\r\n        const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n        const curChord = store.scoreData.chordList[state.focusIndex];\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n            // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n            // const chordTime = 60 / cache.bpm * len;\r\n\r\n            const minute = detail.minute.head + detail.minute.tail;\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                detail.beatLen,\r\n                minute,\r\n                cache.bpm,\r\n                cache.beatSignature\r\n            );\r\n\r\n            BackingUtil.playBacking(store, store.reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.score.setScoreState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n    }\r\n}\r\n\r\nexport default HarmonizeUtil;\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\nimport { ChordBacking } from \"../../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\nimport { NoteKeySwitch } from \"../../../../../redux/store/score/scoreState\";\r\n\r\nnamespace BackingEditorInput {\r\n\r\n    export const main = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const data = store.scoreData;\r\n        const state = store.backingState;\r\n\r\n        if (state == null) return;\r\n\r\n        if (!state.isPreview) {\r\n            edit(e, state, keySwitch, dispatcher);\r\n        } else {\r\n\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const edit = (e: KeyboardEvent, state: BackingState.Editor, keySwitch: NoteKeySwitch, dispatcher: Dispatcher) => {\r\n\r\n        const pattern = state.pattern;\r\n\r\n        // 共通処理\r\n        common(e, state, dispatcher);\r\n\r\n        if (pattern != null) {\r\n            if (pattern.channelIndex === -1) {\r\n                patternNormalMode(e, state, pattern, dispatcher);\r\n            } else {\r\n                patternDetailMode(e, state, pattern, keySwitch.sustainMode, dispatcher);\r\n            }\r\n        }\r\n    }\r\n\r\n    const common = (e: KeyboardEvent, state: BackingState.Editor, dispatcher: Dispatcher) => {\r\n\r\n        switch (e.key) {\r\n            case 'b': {\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n            case 'z': {\r\n                const voicingList = BackingUtil.getVoicingListFromTable(state.voicingTable);\r\n                const pattern = state.pattern == null ? null : BackingUtil.buildPatternProps(state.pattern);\r\n                const test: ChordBacking = { voicingList, pattern };\r\n                console.log('voicingList: ' + DataUtil.gZip(JSON.stringify(voicingList)));\r\n                console.log('pattern: ' + DataUtil.gZip(JSON.stringify(pattern)));\r\n                console.log('source: ' + DataUtil.gZip(JSON.stringify(test)));\r\n                console.log('source: ' + JSON.stringify(test));\r\n            }\r\n                break;\r\n            case ' ': {\r\n                if (!state.hasError) {\r\n                    dispatcher.backing.testBacking();\r\n                }\r\n            }\r\n                break;\r\n            case 'Enter': {\r\n                dispatcher.backing.mappingEditorToScore();\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * パターン編集の通常モード\r\n     * @param e \r\n     * @param state \r\n     * @param pattern \r\n     * @param dispatcher \r\n     */\r\n    const patternNormalMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, dispatcher: Dispatcher) => {\r\n\r\n        const update = () => dispatcher.backing.setState(state);\r\n        switch (e.key) {\r\n            case 'ArrowLeft': {\r\n                dispatcher.backing.movePatternColumn(false);\r\n            }\r\n                break;\r\n            case 'ArrowRight': {\r\n                dispatcher.backing.movePatternColumn(true);\r\n            }\r\n                break;\r\n            case 'ArrowUp': {\r\n                dispatcher.backing.incrementVel(1);\r\n            }\r\n                break;\r\n            case 'ArrowDown': {\r\n                dispatcher.backing.incrementVel(-1);\r\n            }\r\n                break;\r\n            case 'a': {\r\n                dispatcher.backing.addPatternColumn();\r\n            }\r\n                break;\r\n            case 'w': {\r\n                dispatcher.backing.switchLayer();\r\n            }\r\n                break;\r\n            case 'e': {\r\n                dispatcher.backing.switchMode();\r\n            }\r\n                break;\r\n            case '1': {\r\n                dispatcher.backing.setCurrentDivRate(16);\r\n            }\r\n                break;\r\n            case '2': {\r\n                dispatcher.backing.setCurrentDivRate(8);\r\n            }\r\n                break;\r\n            case '3': {\r\n                dispatcher.backing.setCurrentDivRate(4);\r\n            }\r\n                break;\r\n            case '4': {\r\n                dispatcher.backing.setCurrentDivRate(2);\r\n            }\r\n                break;\r\n            case '5': {\r\n                dispatcher.backing.setCurrentDivRate(1);\r\n            }\r\n                break;\r\n            case '.': {\r\n                dispatcher.backing.toggleCurrentDivHalf();\r\n            }\r\n                break;\r\n            case 'Delete': {\r\n                dispatcher.backing.deleteColumn();\r\n            }\r\n                break;\r\n            case 's': {\r\n                pattern.channelIndex = 0;\r\n                update();\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * パターン編集の詳細モード\r\n     * @param e \r\n     * @param state \r\n     * @param pattern \r\n     * @param isEdit \r\n     * @param dispatcher \r\n     */\r\n    const patternDetailMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, isEdit: boolean, dispatcher: Dispatcher) => {\r\n\r\n        const update = () => dispatcher.backing.setState(state);\r\n        if (!isEdit) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft': {\r\n                    dispatcher.backing.movePatternColumn(false);\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    dispatcher.backing.movePatternColumn(true);\r\n                }\r\n                    break;\r\n                case 'ArrowUp': {\r\n                    dispatcher.backing.moveChannelIndex(false);\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.backing.moveChannelIndex(true);\r\n                }\r\n                    break;\r\n                case 's': {\r\n                    pattern.channelIndex = -1;\r\n                    update();\r\n                }\r\n                    break;\r\n                case 'a': {\r\n                    const curNotes = dispatcher.backing.getNotes();\r\n\r\n                    const hasStaccato = () => {\r\n                        const layer = pattern.layers[pattern.layerIndex];\r\n                        const search = layer.table.find((record) => {\r\n                            const cell = record[pattern.lenIndex];\r\n                            if (cell != null && cell.signal === 's') return cell;\r\n                        });\r\n                        return search != undefined;\r\n                    }\r\n                    // 同列にスタッカートがある場合、スタッカートを設定\r\n                    const signal = !hasStaccato() ? 'n' : 's';\r\n                    const notes: BackingState.NoteStatus | null = curNotes == null ? { signal, timing: 0, velAdj: 0 } : null;\r\n                    dispatcher.backing.setNotes(notes);\r\n                    dispatcher.backing.updateErrorState();\r\n                }\r\n                    break;\r\n            }\r\n        } else {\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const baseVel = layer.velocityList[pattern.lenIndex];\r\n            const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n            const cell = layer.table[channelIndex][pattern.lenIndex];\r\n\r\n            if (cell != null) {\r\n                let tempTiming = cell.timing == undefined ? 0 : cell.timing;\r\n                let tempVelAdj = cell.velAdj == undefined ? 0 : cell.velAdj;\r\n                const vel = baseVel + tempVelAdj;\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        if (vel < 10) {\r\n                            tempVelAdj++;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        if (vel > 1) {\r\n                            tempVelAdj--;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowLeft': {\r\n                        if (tempTiming > -10) {\r\n                            tempTiming--;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        if (tempTiming < 10) {\r\n                            tempTiming++;\r\n                        }\r\n                    }\r\n                        break;\r\n                }\r\n                if (tempVelAdj !== 0) {\r\n                    cell.velAdj = tempVelAdj;\r\n                } else {\r\n                    delete cell.velAdj;\r\n                }\r\n                if (tempTiming != 0) {\r\n                    cell.timing = tempTiming;\r\n                } else {\r\n                    delete cell.timing;\r\n                }\r\n                update();\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default BackingEditorInput;","import styled, { css } from \"styled-components\";\r\n\r\nexport namespace SideFormStyles {\r\n\r\n    export const ___CSS_FORM = css`\r\n        display: inline-block;\r\n        /* width: 100px; */\r\n        height: 25px;\r\n        background-color: #bdbdbd;\r\n        border: 1px solid #000;\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        color: #303030;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        text-align: center;\r\n    `;\r\n\r\n    export const ___CSS_TITLE = css`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 26px;\r\n        /* background-color: #f0f0f0; */\r\n        background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n        border: 1px solid #222222;\r\n        font-size: 20px;\r\n        color: #ffffff;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        box-sizing: border-box;\r\n        /* border: 1px solid #c50000; */\r\n        text-align: center;\r\n    `;\r\n\r\n    export const createNumberForm = (value: number, isEnable: boolean,\r\n         onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n         min: number, max:number, step:number) => {\r\n\r\n        return (\r\n            <_NumberForm isEnable={isEnable}>\r\n                <input\r\n                    type=\"number\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"range\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </_NumberForm>\r\n        );\r\n    }\r\n\r\n    const _NumberForm = styled.div<{\r\n        isEnable: boolean;\r\n    }>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 55px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 5px;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n    `;\r\n}","import { stat } from \"fs\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport BackingEditorInput from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    // プレビュー再生時\r\n    if (state.isPreview) {\r\n        switch (e.key) {\r\n            case ' ': {\r\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n        return;\r\n    } else {\r\n        if (store.scoreState.hideMenu === 'none') {\r\n            if (isElement) {\r\n                if (keySwitch.control) {\r\n                    switch (e.key) {\r\n                        case 'c': {\r\n                            const element = data.chordList[state.focusIndex];\r\n                            if (element.type === \"chord\") {\r\n                                const detail = element.detail as DetailChord;\r\n                                if (detail.root != null) {\r\n                                    dispatcher.score.cloneBacking();\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'x': {\r\n                            dispatcher.score.copyElementList();\r\n                        }\r\n                            break;\r\n                        case 'v': {\r\n                            if (state.copiedElementList != null) {\r\n                                dispatcher.score.pasteElementList();\r\n                            } else if (state.cloneBacking != null) {\r\n\r\n                                const element = data.chordList[state.focusIndex];\r\n                                if (element.type === \"chord\") {\r\n                                    const detail = element.detail as DetailChord;\r\n                                    if (detail.root != null) {\r\n                                        dispatcher.score.pastBacking();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 's': {\r\n                            dispatcher.score.saveFile();\r\n                            // DataUtil.saveFile(JSON.stringify(data), state);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.distMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.moveDist(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.moveDist(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.sustainMode) {\r\n                    switch (e.key) {\r\n                        case config.decRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(false);\r\n                        }\r\n                            break;\r\n                        case config.incRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(true);\r\n                        }\r\n                            break;\r\n                        case config.decBeat: {\r\n                            dispatcher.score.incrementBeatLen(false);\r\n                        }\r\n                            break;\r\n                        case config.incBeat: {\r\n                            dispatcher.score.incrementBeatLen(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minHeadMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, 1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, -1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minTailMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, -1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, 1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.chordMode) {\r\n                    // switch (e.key) {\r\n                    //     case 'ArrowUp': {\r\n                    //         dispatcher.symbol.toNext(false);\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowDown': {\r\n                    //         dispatcher.symbol.toNext(true);\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowLeft': {\r\n                    //         dispatcher.symbol.toBase();\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowRight': {\r\n                    //         dispatcher.symbol.toDerive();\r\n                    //     }\r\n                    //         break;\r\n                    // }\r\n                } else if (keySwitch.symbolMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.symbol.toNext(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.symbol.toNext(true);\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.symbol.toBase();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.symbol.toDerive();\r\n                        }\r\n                            break;\r\n                    }\r\n                } else {\r\n                    NoteBasicInput(e, store, dispatcher);\r\n                }\r\n            }\r\n        } else if (store.scoreState.hideMenu === 'backing') {\r\n            BackingEditorInput.main(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const state = store.scoreState;\r\n    if (!state.isPreview) {\r\n        // if (state.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case 'Control': {\r\n                keySwitch.control = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.distMode: {\r\n                if (!keySwitch.control) {\r\n                    keySwitch.distMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.edit1: {\r\n                if (!(keySwitch.control || keySwitch.distMode)) {\r\n                    keySwitch.sustainMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'v': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode)) {\r\n                    keySwitch.chordMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.edit2: {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode)) {\r\n                    keySwitch.symbolMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'd': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode)) {\r\n                    keySwitch.minHeadMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'g': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode || keySwitch.minHeadMode)) {\r\n                    keySwitch.minTailMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n        }\r\n        // }\r\n    }\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const element = data.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n    const curType = element.type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                }\r\n                    break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(cache.scale, Number(e.key) - 1);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.left: {\r\n            if (state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(false);\r\n            } else {\r\n                dispatcher.score.releaseRange(false);\r\n            }\r\n        }\r\n            break;\r\n        case config.right: {\r\n            if (state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(true);\r\n            } else {\r\n                dispatcher.score.releaseRange(true);\r\n            }\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.up: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.down: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'm': {\r\n            dispatcher.score.addAlterElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case ' ': {\r\n            // if (!chordCache.backingError) {\r\n                HarmonizeUtil.previewStart(store, dispatcher);\r\n            // }\r\n        }\r\n            break;\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BeatSignature, DetailAlter as DetailAlter, AlterType, ModulateRelation, TempoRelation } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormAlter = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailAlter;\r\n\r\n    const type = detail.alterType;\r\n\r\n    const update = () => {\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const createAlertTypeItem = (value: AlterType | '-', isActive: boolean): JSX.Element => {\r\n        const type = value === '-' ? null : value;\r\n        return <_Form isActive={isActive}\r\n            onClick={() => {\r\n                //値が変わった時のみ処理を実行\r\n                if (detail.alterType !== type) {\r\n                    detail.alterType = type;\r\n                    // 全ての項目を初期化\r\n                    detail.modRel = null;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    detail.tempoRel = null;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    detail.beatSignature = '4/4';\r\n                    update();\r\n                }\r\n            }}> {value}</_Form >;\r\n    }\r\n\r\n    const createModulateRelationItem = (value: ModulateRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'modulate' && rel == detail.modRel}\r\n            onClick={() => {\r\n                if (detail.modRel !== rel) {\r\n                    detail.modRel = rel;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createTempoRelationItem = (value: TempoRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'tempo' && rel == detail.tempoRel}\r\n            onClick={() => {\r\n                if (detail.tempoRel !== rel) {\r\n                    detail.tempoRel = rel;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createBeatItem = (value: BeatSignature): JSX.Element => {\r\n        return <_Form isActive={detail.alterType === 'beat' && detail.beatSignature === value}\r\n            onClick={() => {\r\n                if (detail.beatSignature !== value) {\r\n                    detail.beatSignature = value;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const donmmItemJsxList = <_ParamDiv isEnable={detail.modRel === 'domm'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'domm' && value == detail.dommVal}\r\n            onClick={() => {\r\n                detail.dommVal = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>\r\n    })}</_ParamDiv>;\r\n\r\n    const keyAdjItemJsxList = <_ParamDiv isEnable={detail.modRel === 'key'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'key' && value == detail.keyAdj}\r\n            onClick={() => {\r\n                detail.keyAdj = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>;\r\n    })}</_ParamDiv>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Group isEnable={true}>\r\n                <_CategoryLabel>Type</_CategoryLabel>\r\n                {createAlertTypeItem('-', type == null)}\r\n                {createAlertTypeItem('modulate', type === 'modulate')}\r\n                {createAlertTypeItem('tempo', type === 'tempo')}\r\n                {createAlertTypeItem('beat', type === 'beat')}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'modulate'}>\r\n                <_CategoryLabel>Modulate</_CategoryLabel>\r\n                {createModulateRelationItem('-')}\r\n                {createModulateRelationItem('domm')}\r\n                {donmmItemJsxList}\r\n                {createModulateRelationItem('parallel')}\r\n                {createModulateRelationItem('relative')}\r\n                {createModulateRelationItem('key')}\r\n                {keyAdjItemJsxList}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'tempo'}>\r\n                <_CategoryLabel>Tempo</_CategoryLabel>\r\n                {createTempoRelationItem('-')}\r\n                {createTempoRelationItem('diff')}\r\n                {SideFormStyles.createNumberForm(detail.tempoDiff,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'diff',\r\n                    (e) => {\r\n                        detail.tempoDiff = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, -100, 100, 1)}\r\n                {createTempoRelationItem('rate')}\r\n                {SideFormStyles.createNumberForm(detail.tempoRate,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'rate',\r\n                    (e) => {\r\n                        detail.tempoRate = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n                {createTempoRelationItem('abs')}\r\n                {SideFormStyles.createNumberForm(detail.tempoAbs,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'abs',\r\n                    (e) => {\r\n                        detail.tempoAbs = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'beat'}>\r\n                <_CategoryLabel>Beat</_CategoryLabel>\r\n                {createBeatItem('2/4')}\r\n                {createBeatItem('4/4')}\r\n                {createBeatItem('3/4')}\r\n                {createBeatItem('6/8')}\r\n                {createBeatItem('9/8')}\r\n                {createBeatItem('12/8')}\r\n            </_Group>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormAlter;\r\n\r\nconst _Wrap = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        background-color: #b3b5c5;\r\n        `;\r\n\r\nconst _Group = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 0 0 0 4px;\r\n    ${props => props.isEnable ? '' : css`\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n`}\r\n        `;\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        margin-top: 1px;\r\n        width: 100%;\r\n        background-color: #c1cdd4;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\nconst _ParamDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n        margin: 1px;\r\n        background-color: #070707;\r\n        ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n        `;\r\nconst _ParamItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        width: 29px;\r\n        background-color: #dddddd;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\n\r\nconst _ValueForm = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 24px;\r\n        /* margin: 5px 0 0 0; */\r\n        text-align: left;\r\n        background-color: #ececec;\r\n\r\n        & * {\r\n            display: inline-block;\r\n            box-sizing: border-box;\r\n            vertical-align: top;\r\n    }\r\n        & input:nth-child(1) {\r\n            background-color: #dddddd;\r\n            width: 60px;\r\n            height: calc(100% - 4px);\r\n            margin: 2px 0 0 0;\r\n            border: 1px solid #9b9b9b;\r\n            border-radius: 4px;\r\n    }\r\n        & input:nth-child(2) {\r\n            margin-left: 5px;\r\n            background-color: #f00;\r\n            width: calc(100% - 70px);\r\n            height: 100%;\r\n    }\r\n        `;","import styled, { css } from \"styled-components\";\r\n\r\nconst JUDGE_INFO_LIST: {\r\n    value: number, label: string\r\n}[] = [\r\n        { value: -2, label: '-/8' },\r\n        { value: -1, label: '-/16' },\r\n        { value: 0, label: '±0' },\r\n        { value: 1, label: '+/16' },\r\n        { value: 2, label: '+/8' }\r\n    ];\r\n\r\nexport const MinuteForm = (props: {\r\n    isHead: boolean;\r\n    value: number;\r\n    setValue: (value: number) => void;\r\n}) => {\r\n\r\n    const rateMinus = props.value >= 0 ? 0 : Math.abs(props.value) * 50;\r\n    const ratePlus = props.value <= 0 ? 0 : Math.abs(props.value) * 50;\r\n\r\n    const createJudgeItem = (key: number, value: number, label: string) => {\r\n        const isActive = props.value === value;\r\n        return (\r\n            <_JudgeItem key={key} isActive={isActive} onClick={() => props.setValue(value)} >\r\n                {!isActive ? '' : label}\r\n            </_JudgeItem>\r\n        )\r\n    }\r\n    const isRed = Math.abs(props.value) === 1;\r\n\r\n    const JudgeJsxList = JUDGE_INFO_LIST.map((judge, i) => {\r\n        return createJudgeItem(i, judge.value, judge.label);\r\n    });\r\n\r\n    return (\r\n        <_Wrap isHead={props.isHead}>\r\n            <_View>\r\n                <_ViewFrame isLeft={true} isRed={isRed} rate={!props.isHead ? rateMinus : ratePlus}><div /></_ViewFrame>\r\n                <_ViewFrame isLeft={false} isRed={isRed} rate={!props.isHead ? ratePlus : rateMinus}><div /></_ViewFrame>\r\n            </_View>\r\n            <_Judge>{!props.isHead ? JudgeJsxList : JudgeJsxList.reverse()}</_Judge>\r\n        </_Wrap>\r\n    );\r\n};\r\n\r\nexport default MinuteForm;\r\n\r\nconst _Wrap = styled.div<{\r\n    isHead: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #bfd380;\r\n    text-align: left;\r\n`;\r\nconst _Judge = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 9;\r\n`;\r\n\r\nconst _JudgeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(20% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    background-color: #0000001a;\r\n    /* border: 1px solid #4d4d4d91; */\r\n    border-radius: 4px;\r\n    ${props => !props.isActive ? '' : css`\r\n        border: 1px solid #c00000c5;\r\n    `}\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    /* opacity: 0.15; */\r\n    &:hover {\r\n        background-color: #ffffff24;\r\n    }\r\n`;\r\nconst _View = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    /* position: absolute;\r\n    top: 0;\r\n    left: 0; */\r\n    z-index: 8;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ViewFrame = styled.div<{\r\n    isRed: boolean;\r\n    isLeft: boolean;\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 16px;\r\n    margin-top: 7px;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n\r\n    & div {\r\n        position: absolute;\r\n        top: 0;\r\n        height: 100%;\r\n        width: ${props => props.rate}%;\r\n        ${props => props.isRed ? css`\r\n            background: linear-gradient(to right, #0066ff, #7691a3);\r\n        ` : css`\r\n            background: linear-gradient(to left, #ff0000, #a37676);\r\n        `}\r\n        ${props => props.isLeft ? css`\r\n            right: 0;\r\n            border-radius: 10px 0 0 10px;\r\n        ` : css`\r\n            left: 0;\r\n            border-radius: 0 10px 10px 0;\r\n        `}\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\nimport MinuteForm from \"./minuteForm\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\n\r\n/**\r\n * コードブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i}\r\n                isExist={isExist}\r\n                isActive={detail.beatLen === i + 1}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    data.chordList = data.chordList.slice();\r\n                    detail.beatLen = (i + 1);\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.DEGREE_ALL.forEach((degree, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(degree);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(degree);\r\n        const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n        const isDiatonic = degree != null && scaleIndexies.includes(degree.index);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={isDiatonic}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || degree == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = degree == null ? null : { ...degree };\r\n                    if (degree == null) {\r\n                        detail.symbolKey = 'major';\r\n                    }\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n\r\n                    // キャッシュの更新\r\n                    const root = detail.root as TheoryUtil.DegreeProps;\r\n                    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                    [chordCache.chordFullName, chordCache.structList] =\r\n                        BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = degree == null ? null : { ...degree };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n\r\n                        // キャッシュの更新\r\n                        const root = detail.root as TheoryUtil.DegreeProps;\r\n                        const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                        [chordCache.chordFullName, chordCache.structList] =\r\n                            BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                        dispatcher.score.setScoreState(state);\r\n                    }\r\n                }}\r\n            >\r\n                {degree == null ? '-' : <>\r\n                    {TheoryUtil.getDegreeRoot(degree)} ({TheoryUtil.getRootName(degree, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    /**\r\n     * シンコペーションの入力フォームを生成するコールバック\r\n     * @param isHead 頭対象フラグ（falseの場合後ろが対象）\r\n     * @returns JSX\r\n     */\r\n    const createMinuteForm = (isHead: boolean): JSX.Element => {\r\n        const minute = detail.minute;\r\n        const [value, setValue]: [number, (value: number) => void] = isHead ? [\r\n            minute.head,\r\n            (value: number) => {\r\n                // minute.head = value;\r\n                // dispatcher.score.setScoreData(store.scoreData);\r\n                const adjust = value - minute.head;\r\n                dispatcher.score.incrementMinuteValRelation(false, adjust);\r\n            }\r\n        ] : [\r\n            minute.tail,\r\n            (value: number) => {\r\n                // minute.tail = value;\r\n                // dispatcher.score.setScoreData(store.scoreData);\r\n                const adjust = value - minute.tail;\r\n                dispatcher.score.incrementMinuteValRelation(true, adjust);\r\n            }\r\n        ];\r\n        return <MinuteForm value={value} setValue={setValue} isHead={isHead} />\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_CategoryLabel>{'Beat length'}</_CategoryLabel>\r\n                <_BeatDiv>\r\n                    {beatItemsJsx}\r\n                </_BeatDiv>\r\n                <_Minute>\r\n                    <_CategoryLabel>{'Minute head'}</_CategoryLabel>\r\n                    {createMinuteForm(true)}\r\n                    {/* <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                    <_CategoryLabel>{'Minute tail'}</_CategoryLabel>\r\n                    {createMinuteForm(false)}\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    {/* <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_RootDiv>\r\n                    {rootItemsJsx}\r\n                </_RootDiv>\r\n                <_SymbolDiv\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_SymbolDiv>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 100px; */\r\n    text-align: left;\r\n    background-color: #979797;\r\n`;\r\n\r\nconst _BeatDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 3px;\r\n        width: calc(100% - 6px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isActive ? '' : css`\r\n            /* border: solid 1px #fff; */\r\n        `}\r\n        box-sizing: border-box;\r\n        border-radius: 6px;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    margin-top: 5px;\r\n    width: 100%;\r\n    /* height: 360px; */\r\n    text-align: left;\r\n    /* background-color: #000000; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _RootDiv = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    margin: 0 0 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #e6e6e6; */\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #90bbcc;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #d1c521b8;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    color: #616161;\r\n    ${props => !props.isDiatonic ? '' : css`color: #ffffff;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #99999940;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #cc6363b8;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #6374ccb8;`}\r\n    }\r\n`;\r\n\r\nconst _SymbolDiv = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 93px);\r\n    margin: 0 1px 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    background-color: #a1cc90;\r\n    ${props => !props.isActive ? '' : css`background-color: #d1c521b8;`}\r\n    color: #fff;\r\n    ${props => !props.isDiatonic ? '' : css`color: #fff;`}\r\n    /* & span {\r\n        color: #f000;\r\n    } */\r\n    &:hover {\r\n        background-color: #dddddd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #cc6363b8;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const update = () => {\r\n        data.chordList = data.chordList.slice();\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const scaleItemJsxList: JSX.Element[] = TheoryUtil.SCALE_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? TheoryUtil.KEY12_MAJOR_SCALE_LIST : TheoryUtil.KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n    const rateItemJsxList: JSX.Element[] = TheoryUtil.BEAT_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.beatSignature === item} onClick={() => {\r\n                detail.beatSignature = item as BeatSignature;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            {SideFormStyles.createNumberForm(detail.bpm, true, (e) => {\r\n                detail.bpm = e.currentTarget.valueAsNumber;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }, 30, 220, 1)}\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 50%;\r\n    margin: 1px 0 0 0;\r\n\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 100%;\r\n    margin: 1px 0 0 0;\r\n    \r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    margin: 1px 0 0 0;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../../utils/dummyUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        DummyUtil.SECTION_CATEGORY.forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        const splitList = detail.labelName.split(' ');\r\n        DummyUtil.SECTION_NO.forEach((item) => {\r\n            const isActive = splitList[splitList.length - 1] === item.toString();\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(`${splitList[0]} ${item}`);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_SelectDiv>\r\n                <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n                <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n            </_SelectDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #b89b9b; */\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _SelectDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    background-color: #acacac;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(60% - 4px);\r\n    margin: 0 2px 0 2px;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(40% - 2px);\r\n    margin: 0 2px 0 0;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #6182b4; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #61b4b0; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormAlter from \"./sideFormAlter\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst HarmSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'alter': return <SideFormAlter />;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../../../../../redux/store/score/scoreCache\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\n\r\nconst TIP_COUNT = 14;\r\n\r\nconst StructViewer = (props: {\r\n    cache: ScoreCache.Element;\r\n    structList: BackingState.StructInfo[];\r\n}) => {\r\n    const cache = props.cache;\r\n    const structList = props.structList;\r\n    const indexList = structList.map(struct => struct.soundIndex + struct.adjustOctave * 12);\r\n    const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n    const scaleList = scaleIndexies.map(value => (cache.keyIndex + value) % 12);\r\n\r\n    const structJsxList: JSX.Element[] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n\r\n        // 2オクターブ分表示\r\n        for (let i = 0; i < TIP_COUNT; i++) {\r\n            // 下の段（白鍵のチップ）\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = indexList.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            // 上の段（黒鍵のチップ）\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = indexList.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return structJsxList;\r\n    }, [indexList]);\r\n\r\n    return (\r\n        <_Wrap isUse={indexList.length > 0}>\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default StructViewer;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    /* border: 1px solid #ffffffda; */\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    ` : css`\r\n    background: radial-gradient(#d6cec3, #a89889);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    ` : css`\r\n        background: radial-gradient(#e7a144, #72552a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternDetail = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    /** 基準となるベロシティ */\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cell = layer.table[channelIndex][pattern.lenIndex];\r\n    const baseVel = layer.velocityList[pattern.lenIndex];\r\n    const timing = (cell == null || cell.timing == undefined) ? 0 : cell.timing;\r\n    const velAdj = (cell == null || cell.velAdj == undefined) ? 0 : cell.velAdj;\r\n\r\n    return (<_Wrap>\r\n        {\r\n            // ノーツが設定されていない場合は何も表示しない\r\n            cell == null ? <></> : (<>\r\n                <_DelayDiv>\r\n                    <_Label>delay</_Label>\r\n                    <_TimingValue type=\"range\" min={-10} max={10} step={1} value={timing} onChange={e => {\r\n                        cell.timing = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_DelayDiv>\r\n                <_VelocityDiv>\r\n                    <_Label>velocity</_Label>\r\n                    <_VelFrame isFocus={false}>\r\n                        <_VelItem value={baseVel} isEdit={false}/>\r\n                    </_VelFrame>\r\n                    <_VelFrame isFocus={store.scoreState.keySwitch.sustainMode}>\r\n                        <_VelItem value={baseVel + velAdj} isEdit={velAdj != 0} />\r\n                    </_VelFrame>\r\n                    {/* <_Value type=\"range\" min={-10} max={10} step={1} value={velAdj} onChange={e => {\r\n                        cell.velAdj = Number(e.target.value);\r\n                        update();\r\n                    }} /> */}\r\n                </_VelocityDiv>\r\n            </>)\r\n        }\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternDetail;\r\n\r\nconst VEL_DIV_WIDTH = 180;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    line-height: 18px;\r\n    margin-top: 14px;\r\n    margin-left: 5px;\r\n    width: 80px;\r\n    background-color: #868686;\r\n    color: #e7e7e7;\r\n    border: 1px solid #616161;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DelayDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - ${VEL_DIV_WIDTH + 1}px);\r\n    height: 100%;\r\n    background-color: #9c9c9c;\r\n`;\r\n\r\nconst _TimingValue = styled.input<{\r\n}>`\r\n    display: inline-block;\r\n    outline: none;\r\n    margin: 20px 0 0 8px;\r\n    width: calc(100% - 100px);\r\n    height: 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VelocityDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${VEL_DIV_WIDTH}px;\r\n    height: 100%;\r\n    margin-left: 1px;\r\n    /* background-color: #9a2020; */\r\n`;\r\n\r\nconst _VelFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 46px;\r\n    height: 100%;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffffff17;\r\n    `}\r\n    /* background-color: #63a0a1;\r\n    border-radius: 20px; */\r\n`;\r\n\r\nconst _VelItem = styled.div<{\r\n    value: number;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 5px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #ddc35cae;\r\n    `}\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate * adjustRate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {itemJsxList}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternPedal = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    // 左手のレイヤー時のみ固定表示\r\n    const layer = pattern.layers[0];\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n\r\n    let cur: BackingState.PedalAction = 'off';\r\n    pattern.pedalActs.forEach((pedal, i) => {\r\n        const isActive = pattern.layerIndex === 0 && pattern.lenIndex === i;\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n        let isUse = false;\r\n        const prev = cur;\r\n        if (prev === 'change') {\r\n            cur = 'on';\r\n        }\r\n        if (pedal != null) {\r\n            isUse = true;\r\n            cur = pedal;\r\n        }\r\n        itemJsxList.push(\r\n            <_Column key={i} rate={rate} isActive={isActive} isUse={isUse} onClick={() => {\r\n                if (prev === 'off') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'on'; break;\r\n                        case 'on': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'on') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = 'change'; break;\r\n                        case 'change': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'change') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                }\r\n                // 終端までnullで更新\r\n                if (i < pattern.pedalActs.length - 1) {\r\n                    for (let j = i + 1; j < pattern.pedalActs.length; j++) {\r\n                        pattern.pedalActs[j] = null;\r\n                    }\r\n                }\r\n                update();\r\n            }}><div><_Item action={cur} /></div></_Column>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternPedal;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n    /* background-color: #4e4e4e; */\r\n`;\r\n\r\n\r\nconst _Column = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #00635eac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #179483ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    white-space: normal;\r\n\r\n    &>div {\r\n        display: inline-block;\r\n        width: 10px;\r\n        height: calc(100% - 2px);\r\n        background-color: #ffffffa0;\r\n        border-radius: 6px;\r\n        margin: 1px 0;\r\n        ${props => props.isUse ? '' : css`\r\n            background-color: #ffffff2f;\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    action: BackingState.PedalAction;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 14px;\r\n    border: 1px solid #9c9c9c;\r\n    ${props => {\r\n        switch (props.action) {\r\n            case 'off': return css`\r\n                margin-top: 0;\r\n                background-color: #271db8;\r\n            `;\r\n            case 'change': return css`\r\n                margin-top: 15px;\r\n                background-color: #f3d631;\r\n            `;\r\n            case 'on': return css`\r\n                margin-top: 30px;\r\n                background-color: #e03030;\r\n            `;\r\n        }\r\n    }}\r\n    box-sizing: border-box;\r\n    border-radius: 6px;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n    const curLayer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n    const layerJsxList = useMemo(() => {\r\n\r\n        const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n        pattern.layers.forEach((layer, j) => {\r\n\r\n            const jsxLsit: JSX.Element[] = [];\r\n            for (let i = 0; i < channelCount; i++) {\r\n                const notesJsxLsit: JSX.Element[] = [];\r\n\r\n                layer.noteDivList.forEach((note, k) => {\r\n                    // データ上は下から数えるため、表示のループは逆回転する\r\n                    const channelIndex = (channelCount - 1) - i;\r\n                    const isActive = pattern.layerIndex === j && pattern.lenIndex === k;\r\n                    const cell = layer.table[channelIndex][k];\r\n                    const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                    const isUse = cell != null;\r\n                    // 前面にあるレイヤーのみエラー判定をする\r\n                    const isError = pattern.layerIndex !== j ? false :\r\n                        isUse && BackingUtil.checkOverlapBackLayer(pattern.layers, j, channelIndex, k);\r\n                    const isEdit = isActive && pattern.channelIndex === i;\r\n                    let rate = note.rate * adjustRate;\r\n                    if (note.isDot) rate /= 1.5;\r\n                    if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n                    let viewSignal: BackingState.NoteSignal | null = null;\r\n                    if (cell != null) {\r\n                        viewSignal = cell.signal;\r\n                        if (k > 0) {\r\n                            const prevCell = layer.table[channelIndex][k - 1];\r\n                            if (prevCell != null && prevCell.signal === 't') {\r\n                                viewSignal = 't';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const hasStaccato = () => {\r\n                        const search = layer.table.find((record) => {\r\n                            const cell = record[k];\r\n                            if (cell != null && cell.signal === 's') return cell;\r\n                        });\r\n                        return search != undefined;\r\n                    }\r\n                    notesJsxLsit.push(\r\n                        <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                            <_State\r\n                                // isUse={isUse}\r\n                                isError={isError}\r\n                                signal={viewSignal}\r\n                                isBack={pattern.layerIndex !== j}\r\n                                // クリック\r\n                                onClick={() => {\r\n                                    if (cell == null) {\r\n                                        // 同列にスタッカートがある場合、スタッカートを設定\r\n                                        const signal = !hasStaccato() ? 'n' : 's';\r\n                                        setNotesStatus({ signal, timing: 0, velAdj: 0 });\r\n                                    } else {\r\n                                        setNotesStatus(null);\r\n                                    }\r\n                                    curLayer.table = curLayer.table.slice();\r\n                                    update();\r\n                                    dispatcher.backing.updateErrorState();\r\n                                }}\r\n                                // 右クリック\r\n                                onContextMenu={() => {\r\n                                    pattern.channelIndex = i;\r\n                                    pattern.lenIndex = k;\r\n                                    update();\r\n                                }}\r\n                            />\r\n                        </_Notes>\r\n                    );\r\n                });\r\n                jsxLsit.push(\r\n                    <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                        {notesJsxLsit}\r\n                    </_Record>\r\n                );\r\n            }\r\n            layerJsxList[j] = jsxLsit;\r\n        });\r\n        return layerJsxList;\r\n    }, [\r\n        pattern.channels, pattern.layerIndex, pattern.lenIndex,\r\n        curLayer.noteDivList, curLayer.table, pattern.channelIndex\r\n    ]);\r\n\r\n    // 選択中のレイヤーを表に表示する\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    // isUse: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => props.signal == null ? '' : css<{\r\n    isBack: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n}>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        ${props => props.signal !== 's' ? '' : css`\r\n            border-radius: 8px;\r\n            background: linear-gradient(to bottom, #009e0d, #02fc49, #009e0d);\r\n        `}\r\n        ${props => props.signal !== 't' ? '' : css`\r\n            height: calc(100% - 8px);\r\n            margin: 4px 0 0 1px;\r\n            background: linear-gradient(to bottom, #9e4c00, #fc6a02, #9e4c00);\r\n        `}\r\n        // エラーあり\r\n        ${props => !props.isError ? '' : css`\r\n            opacity: 0.5;\r\n        `}\r\n        // 裏面のレイヤー\r\n        ${props => !props.isBack ? '' : css`\r\n            background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.5;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => props.signal == null ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternVelocity = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.velocityList.forEach((vel, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} >\r\n                <_Value value={vel} />\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternVelocity;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #001763ac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #173494ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Value = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 6px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    /* background-color: #5cceddaf; */\r\n    background: linear-gradient(to right, #00949e, #26dcf4, #00949e);\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternDetail from \"./patternDetail\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternPedal from \"./patternPedal\";\r\nimport PatternTable from \"./patternTable\";\r\nimport PatternVelocity from \"./patternVelocity\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const divs = layer.noteDivList;\r\n    const limitLen = BackingUtil.getLimitLen(chordInfo.beatLen, chordInfo.minute, chordInfo.init.beatSignature);\r\n    const useTotalLen = BackingUtil.getUsingLenFromDivs(divs, chordInfo.init.beatSignature);\r\n    const isLenOverError = 0 <= limitLen - useTotalLen;\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const viewRate = NOTES_1BAR_WIDTH / 4;\r\n\r\n    // メモリの数を算出\r\n    let memoriCount = chordInfo.beatLen * beatProps.beatMemoriCount;\r\n    memoriCount += chordInfo.minute.head + chordInfo.minute.tail;\r\n\r\n    const barMemoriCount = beatProps.beatMemoriCount === 4 ? 16 : 24;\r\n    const memoriWidth = NOTES_1BAR_WIDTH / barMemoriCount;\r\n    // メモリJSXの生成\r\n    const memoriJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < memoriCount + 1; i++) {\r\n        const pos = i;\r\n        let bean: { thickness: number, height: number, color: string } = { thickness: 1, height: 10, color: '#555' };\r\n        if (beatProps.beatMemoriCount === 4) {\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        } else {\r\n            switch (true) {\r\n                case pos % 24 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 6 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        }\r\n        memoriJsxList.push(\r\n            <_Memori\r\n                key={memoriJsxList.length}\r\n                width={memoriWidth}\r\n                height={bean.height}\r\n                color={bean.color}\r\n                thickness={bean.thickness}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n                <_MemoriList>{memoriJsxList}</_MemoriList>\r\n                {isLenOverError ? (\r\n                    <_ChordLenLine pos={limitLen * viewRate} />\r\n                ) : (\r\n                    // 定義した拍を超えた場合のみ表示\r\n                    <_OverCover pos={limitLen * viewRate} width={(useTotalLen - limitLen) * viewRate} />\r\n                )}\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n            {pattern.channelIndex === -1 ?\r\n                // ベロシティorペダル情報を表示\r\n                (pattern.mode === 'velocity' ? <PatternVelocity /> : <PatternPedal />) :\r\n                // セルごとの詳細情報を表示\r\n                <PatternDetail />\r\n            }\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\nconst _MemoriList = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    thickness: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.thickness}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _OverCover = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: ${props => props.width}px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #f8000053;\r\n    pointer-events: none;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;\r\n\r\nconst _ChordLenLine = styled.div<{\r\n    pos: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: 4px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #ffffffc7;\r\n`;","import { useContext } from \"react\";\r\nimport { Player } from \"soundfont-player\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    soundfont: Player | null;\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n    const channelCount = pattern.channels.length;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length + 1);\r\n        pattern.channelIndex = -1;\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length - 1);\r\n        pattern.channelIndex = -1;\r\n        update();\r\n    }\r\n\r\n    const preview = () => {\r\n        if (props.soundfont != null) {\r\n            props.soundfont.play(props.soundFullName, 0, { duration: 1 });\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap isError={props.soundFullName === '-'}>\r\n            <_Struct onClick={preview}>{props.soundFullName}</_Struct>\r\n            <_Option isEnable={channelCount > 1} onClick={deleteRecord}>-</_Option>\r\n            <_Option isEnable={channelCount < BackingUtil.CHANNEL_MAX} onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ff0000c3;\r\n    `}\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)<{\r\n    isEnable: boolean;\r\n}>`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n    // const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    const layerJsxList: JSX.Element[] = [];\r\n\r\n    if (state.pattern == null) return <></>;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channels = pattern.channels;\r\n    channels.forEach((channel, i) => {\r\n        let name = '-';\r\n        if (channel.octave !== -1) {\r\n            const structInfo = chordInfo.structList[channel.structIndex];\r\n            const soundIndex = structInfo.soundIndex;\r\n            const octave = channel.octave + structInfo.adjustOctave;\r\n            const keyList = !structInfo.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\r\n            name = keyList[soundIndex % 12] + octave;\r\n        }\r\n        channelJsxList.push(\r\n            <ChannelItem key={i}\r\n                soundfont={store.instruments.harmonyFont}\r\n                index={i}\r\n                soundFullName={name}\r\n            />\r\n        );\r\n    });\r\n\r\n    pattern.layers.forEach((layer, i) => {\r\n        const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\r\n        layerJsxList.push(\r\n            <_LayerItem key={i} isActive={pattern.layerIndex === i}\r\n                onClick={() => {\r\n                    if (i !== pattern.layerIndex) {\r\n                        dispatcher.backing.switchLayer();\r\n                    }\r\n                }}\r\n            >{labelName}</_LayerItem>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        <_Header>\r\n            {layerJsxList}\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n            <_ModeItem isActive={pattern.mode === 'velocity'}\r\n                onClick={() => {\r\n                    pattern.mode = 'velocity';\r\n                    dispatcher.backing.setState(state);\r\n                }}\r\n            >Velocity</_ModeItem>\r\n            <_ModeItem isActive={pattern.mode === 'pedal'}\r\n                onClick={() => {\r\n                    pattern.mode = 'pedal';\r\n                    dispatcher.backing.setState(state);\r\n                }}\r\n            >Pedal</_ModeItem>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #929292;\r\n`;\r\n\r\nconst _LayerItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #dad600;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997;\r\n`;\r\n\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #4fe419;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternOptions = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        layer.noteDivList = layer.noteDivList.slice();\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, isEnable: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={isEnable} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, true, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const isPermit3ren = ['2/4', '4/4', '4/3'].includes(chordInfo.init.beatSignature);\r\n    const isPermitDot = BackingUtil.isPermitDot(cur);\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot,\r\n            isPermitDot,\r\n            () => {\r\n                cur.isDot = !cur.isDot;\r\n                update();\r\n            })}\r\n        {createItem('1/3', cur.div3 === 1,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 1) cur.div3 = 0;\r\n                else cur.div3 = 1;\r\n                update();\r\n            })}\r\n        {createItem('2/3', cur.div3 === 2,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 2) cur.div3 = 0;\r\n                else cur.div3 = 2;\r\n                update();\r\n            })}\r\n    </_WrapLen>;\r\n\r\n    /** テーブルの行 */\r\n    const tableRecord = layer.table[channelIndex];\r\n    const curCell = pattern.channelIndex === -1 ? null :\r\n        tableRecord[pattern.lenIndex];\r\n\r\n    const isEnableTai = () => {\r\n        if(tableRecord == null) return false;\r\n\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 's') return cell;\r\n        });\r\n        const hasStaccato = search != undefined;\r\n        let isExistNext = false;\r\n        if(pattern.lenIndex < tableRecord.length - 1 && tableRecord[pattern.lenIndex + 1] != null) {\r\n            isExistNext = true;\r\n        }\r\n        return !hasStaccato && isExistNext;\r\n    };\r\n\r\n    const isNormalRow = () => {\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 't') return cell;\r\n        });\r\n        return search == undefined;\r\n    };\r\n\r\n    const setRowStaccato = (isSet: boolean) => {\r\n        layer.table.forEach((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null) {\r\n                cell.signal = isSet ? 's' : 'n';\r\n            }\r\n        });\r\n    }\r\n\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', curCell == null,\r\n            true,\r\n            () => {\r\n                tableRecord[pattern.lenIndex] = null;\r\n                update();\r\n            })}\r\n        {createItem('□', curCell != null && curCell.signal === 'n',\r\n            true,\r\n            () => {\r\n                if (curCell != null) {\r\n                    if(curCell.signal === 's') {\r\n                        setRowStaccato(false);\r\n                    } else {\r\n                        curCell.signal = 'n';\r\n                    }\r\n                } else {\r\n                    tableRecord[pattern.lenIndex] = { signal: 'n', timing: 0, velAdj: 0 };\r\n                }\r\n                update();\r\n            })}\r\n        {createItem('・', curCell != null && curCell.signal === 's',\r\n            curCell != null && isNormalRow(),\r\n            () => {\r\n                setRowStaccato(true);\r\n                update();\r\n            })}\r\n        {createItem('⁀', curCell != null && curCell.signal === 't',\r\n            isEnableTai(),\r\n            () => {\r\n                const status = curCell as BackingState.NoteStatus;\r\n                status.signal = 't'\r\n                update();\r\n            })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternOptions;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternOptions from \"./patternOptions\";\r\n\r\n/**\r\n * バッキングエディタ画面のパターン部分\r\n * @returns コンポーネント\r\n */\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    /**\r\n     * USEスイッチ押下時の処理\r\n     */\r\n    const useSwitchAction = () => {\r\n        if (!isUsePattern) {\r\n            const table = state.voicingTable as boolean[][];\r\n            const voicingStructs = BackingUtil.buildChannels(table);\r\n            const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n            state.pattern = {\r\n                layerIndex: 0,\r\n                lenIndex: 0,\r\n                channelIndex: -1,\r\n                channels,\r\n                isUsePedal: false,\r\n                mode: \"velocity\",\r\n                pedalActs: [null],\r\n                layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n            } as BackingState.Pattern;\r\n            update();\r\n        } else {\r\n            state.pattern = null;\r\n            update();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* ヘッダー部分（パターン利用スイッチ） */}\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button\r\n                        isActive={isUsePattern}\r\n                        onClick={useSwitchAction}\r\n                    >Use</_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternOptions /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #e00000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #ff0000;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\n/**\r\n * ボイシングを定義するテーブルのコンポーネント\r\n * @returns コンポーネント\r\n */\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const table = state.voicingTable;\r\n    const pattern = state.pattern;\r\n    // 選択可能なチャンネル数\r\n    const channelLimitNum = pattern == null ? BackingUtil.OCTAVE_NUM * BackingUtil.STRUCT_NUM : pattern.channels.length;\r\n\r\n    // return useMemo(() => {\r\n\r\n    const chordInfo = state.chordInfo;\r\n    const structList = chordInfo.structList;\r\n\r\n    const rowJsxList: JSX.Element[] = [];\r\n\r\n    /** 選択数 */\r\n    let selectCount = 0;\r\n    // オクターブ（テーブル横）のループ\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const cellJsxList: JSX.Element[] = [];\r\n        // 構成音（テーブル縦）のループ\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = structList.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n            if (isSelected) {\r\n                selectCount++;\r\n            }\r\n\r\n            /** セルに表示する音程 */\r\n            const getSoundFullName = (): string => {\r\n                if (!isEnable) return '';\r\n                // const relation = symbol.structs[j];\r\n                // const interval = TheoryUtil.IntervalRelationProps[relation];\r\n                // const structIndex = (chordRootIndex + interval) % 12;\r\n                const sound = structList[j];\r\n                const octave = i + sound.adjustOctave;\r\n\r\n                const key12List = !sound.isFlat ?\r\n                    TheoryUtil.KEY12_SHARP_LIST :\r\n                    TheoryUtil.KEY12_FLAT_LIST\r\n                    ;\r\n                return `${key12List[sound.soundIndex]}${octave}`;\r\n            }\r\n\r\n            const name = getSoundFullName();\r\n            cellJsxList.push(\r\n                <_Cell key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    isOver={isSelected && selectCount > channelLimitNum}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: BackingState.ChannelParam[] = BackingUtil.buildChannels(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                        dispatcher.backing.updateErrorState();\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.harmonyFont;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_Cell>\r\n            );\r\n        }\r\n        rowJsxList.push(\r\n            <_TableRow key={i}>\r\n                {cellJsxList}\r\n            </_TableRow>\r\n        );\r\n    }\r\n\r\n    /** 構成音リストのJSX */\r\n    const structJsxList = structList.map((sound, i) => {\r\n        const key12List = !sound.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\r\n\r\n        /** 表示する構成音の関係性 */\r\n        const getStructName = (): string => {\r\n            if (sound.relation == null) {\r\n                // オンコードの場合\r\n                return 'On';\r\n            } else if (sound.relation === 'p1') {\r\n                // ルート音の場合\r\n                return 'Root';\r\n            }\r\n            return sound.relation;\r\n        }\r\n        return (\r\n            <_StructItem key={i}\r\n                isOnChord={sound.relation == null}\r\n            >{getStructName()} [{key12List[sound.soundIndex]}]</_StructItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* コードの基本情報 */}\r\n            <_InfoDiv>\r\n                <_InfoItem>\r\n                    <_Label>Chord</_Label>\r\n                    <_Value>{chordInfo.chordFullName}</_Value>\r\n                </_InfoItem>\r\n                <_InfoItem>\r\n                    <_Label>Type</_Label>\r\n                    {/* <_Value>{symbol.attr}</_Value> */}\r\n                    <_Value>{chordInfo.symbolAttr}</_Value>\r\n                </_InfoItem>\r\n            </_InfoDiv>\r\n            <_EditorDiv>\r\n                {/* 構成音の情報 */}\r\n                <_StructDiv>\r\n                    {structJsxList}\r\n                </_StructDiv>\r\n                {/* ボイシングのテーブル */}\r\n                <_TableDiv>{rowJsxList}</_TableDiv>\r\n            </_EditorDiv>\r\n        </_Wrap>\r\n    );\r\n    // }, [table, channelLimitNum]);\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _InfoItem = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #89dada; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 8px);\r\n    width: 80px;\r\n    background-color: #69bcdd;\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #026c86;\r\n    border: 1px solid #303030;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 6px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #cccccc; */\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst _EditorDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _StructDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _StructItem = styled.div<{\r\n    isOnChord: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    color: white;\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    ${props => !props.isOnChord ? '' : css`\r\n        /* color: #e00000; */\r\n        background: linear-gradient(to bottom, #104f8a, #7699db, #104f8a);\r\n    `}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _TableDiv = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _TableRow = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Cell = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n    isOver: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    border: 1px solid #215e53;\r\n    border-radius: 4px;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #e5e747;\r\n    `}\r\n    ${props => !props.isOver ? '' : css`\r\n        background-color: #c40000;\r\n        color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #b9bb3f;\r\n        `}\r\n        ${props => !props.isOver ? '' : css`\r\n            background-color: #bb3f3f;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\n/**\r\n * バッキングエディタ画面\r\n * @returns コンポーネント\r\n */\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    useEffect(()=> {\r\n        console.log('backing start');\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_PrevireBrind isUse={state.isPreview} />\r\n            {/* ボイシングエディタ部分 */}\r\n            <VoicingChooser />\r\n            {/* パターンエディタ部分 */}\r\n            <PatternFrame />\r\n            {/* フッター部分 */}\r\n            <_FooterDiv>\r\n                {/* プレビュー再生 */}\r\n                <_Button isEnable={!state.hasError} onClick={() => {\r\n\r\n                    if (!state.isPreview) {\r\n                        dispatcher.backing.testBacking();\r\n                    } else {\r\n                        BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                    }\r\n                }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\r\n                {/* 編集を取り消しして閉じる */}\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Cancel</_Button>\r\n                {/* 編集を反映して閉じる */}\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.mappingEditorToScore();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/score/scoreData\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const cur = chordList[focusIndex];\r\n    const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={isBackingEnable}\r\n                onClick={() => {\r\n                    if (state.hideMenu === 'none') {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    } else if (state.hideMenu === 'backing') {\r\n                        dispatcher.backing.closeBackingEditor();\r\n                    }\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 7;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 8;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmClipboard = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    return (\r\n        <_Wrap>\r\n            <_Label>clipboard</_Label>\r\n            <_TypeDiv>\r\n                <_ModeItem isActive={state.cloneBacking != null}>Backing</_ModeItem>\r\n                <_ModeItem isActive={state.copiedElementList != null}>Elements</_ModeItem>\r\n            </_TypeDiv>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default HarmClipboard;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _TypeDiv = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #a8dbb3;\r\n    `}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #8f8f8f;\r\n    border-radius: 2px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst MEMORI_WIDTH = 12;\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        list.push(<_Margin key={list.length} />);\r\n        state.measureCacheList.forEach((cache) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {cache.barCount !== -1 ? <_Bar>{cache.barCount}</_Bar> : ''}\r\n                    {/* {<_Bar>{i}</_Bar>} */}\r\n                </_Memori>\r\n            );\r\n        });\r\n        list.push(<_Margin key={list.length} />);\r\n        return list;\r\n    }, [state.beatCacheList]);\r\n\r\n    const [beatJsxList, minuteJsxList] = useMemo(() => {\r\n        const beatJsxList: JSX.Element[] = [];\r\n        const minuteJsxList: JSX.Element[] = [];\r\n\r\n        const isChordFocus = dataList[focusIndex].type === 'chord';\r\n        const curChordIndex = cacheList[focusIndex].chordIndex;\r\n        // list.push(<_Start key={list.length}/>);\r\n        dataList.forEach((data, i) => {\r\n\r\n            const cache = state.elementCacheList[i];\r\n            if (data.type === 'chord' && Math.abs(cache.chordIndex - curChordIndex) <= 5) {\r\n\r\n                const detail = data.detail as DetailChord;\r\n                const sustain = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                let label = '';\r\n                let type: ItemType = 'ather';\r\n                if (!isChordFocus) {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                } else {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'cur';\r\n                        type = 'cur';\r\n                    } else if (cache.chordIndex === curChordIndex - 1) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                }\r\n\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatMemori = detail.beatLen * beatProps.beatMemoriCount;\r\n                const posMemori = 16 + cache.curTotalMemori;\r\n                beatJsxList.push(\r\n                    <_SustainItem key={beatJsxList.length}\r\n                        type={type}\r\n                        pos={posMemori} sustain={beatMemori + minute}\r\n                    >{label}</_SustainItem>\r\n                );\r\n                minuteJsxList.push(\r\n                    <_BeatItem key={beatJsxList.length}\r\n                        isActive={type === 'cur'}\r\n                        pos={posMemori + detail.minute.head} sustain={beatMemori}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        // list.push(<_Start key={list.length}/>);\r\n        return [beatJsxList, minuteJsxList];\r\n    }, [dataList.length, focusIndex, state.beatCacheList]);\r\n\r\n    const scrollPos = cacheList[focusIndex].curTotalMemori * MEMORI_WIDTH;\r\n    return (\r\n        <_Wrap>\r\n            <_ScrollFrame pos={scrollPos}>\r\n                <_Blocks>\r\n                    <_Beat>\r\n                        {beatJsxList}\r\n                    </_Beat>\r\n                    <_Minute>\r\n                        {minuteJsxList}\r\n                    </_Minute>\r\n                </_Blocks>\r\n                <_Measure>\r\n                    {memoriJsxList}\r\n                </_Measure>\r\n            </_ScrollFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _ScrollFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => -props.pos}px;\r\n    position: absolute;\r\n    height: 100%;\r\n    /* width: 100px;\r\n    background-color: #000; */\r\n    transition: left 0.5s;\r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n`;\r\n\r\ntype ItemType = 'cur' | 'prev' | 'next' | 'ather';\r\nconst _SustainItem = styled.div<{\r\n    pos: number;\r\n    sustain: number;\r\n    type: ItemType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(136, 163, 133);\r\n    ${props => {\r\n        switch (props.type) {\r\n            case 'cur': return css`\r\n                background-color: rgb(218, 107, 134);\r\n                /* color: #ffe551; */\r\n            `;\r\n            case 'prev': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 177, 221);\r\n            `;\r\n            case 'next': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 221, 171);\r\n            `;\r\n            case 'ather': return css`\r\n                background-color: rgb(192, 192, 192);\r\n            `;\r\n        }\r\n    }}\r\n    border-left: solid 1px #000;\r\n    border-top: solid 1px #000;\r\n    border-bottom: solid 1px #000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _BeatItem = styled.div<{\r\n    isActive: boolean;\r\n    pos: number;\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(224, 224, 224);\r\n    border-left: solid 1px #000;\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: rgb(233, 180, 228); */\r\n        /* color: #ffe551; */\r\n    `}\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Margin = styled.div`\r\n    display: inline-block;\r\n    width: ${MEMORI_WIDTH * 16}px;\r\n    height: 100%;\r\n    background-color: #d9ebe7;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${MEMORI_WIDTH}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection } from \"../../../../redux/store/score/scoreData\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport HarmSideForm from \"./side/harmSideForm\";\r\nimport { Timeline } from \"tone\";\r\nimport StructViewer from \"./info/structViewer\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport HarmClipboard from \"./initial/harmClipboard\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\n\r\n/**\r\n * ハーモナイズタブ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const state = store.scoreState;\r\n\r\n    const isMelody = store.scoreState.isMelody;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, harmonize: () => {\r\n                dispatcher.system.setInvalidate({\r\n                    ...store.invalidate, harmoniizeInvalidate: {}\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isMelody) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isMelody]);\r\n\r\n\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const element = store.scoreData.chordList[state.focusIndex];\r\n    \r\n    const timelineJsx = state.elementCacheList.length === 0 ? <></> : <HarmMeasure />;\r\n\r\n    let structViewerJsx = <></>;\r\n    if (state.elementCacheList.length > 0) {\r\n        const scoreCache = state.chordCacheList[cache.chordBlockNo];\r\n        const structList = element.type === 'chord' ? scoreCache.structList : [];\r\n        structViewerJsx = <StructViewer cache={cache} structList={structList} />;\r\n    }\r\n\r\n    /** サイドフォームの活性状態 */\r\n    const sideFormEnable = !state.isPreview && state.hideMenu === 'none';\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_SectionsDiv isEnable={sideFormEnable}><HarmSections /></_SectionsDiv>\r\n            <_Left>\r\n                <_Head isEnable={!state.isPreview}>\r\n                    <HarmClipboard />\r\n                </_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main>\r\n                        <HarmNote />\r\n                    </_Main>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP>{timelineJsx}</_TIMELINE_WRAP>\r\n                    <_INFO_WRAP>{structViewerJsx}</_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right isEnable={sideFormEnable}>\r\n                <HarmSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _SectionsDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH + HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Head = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    position: absolute;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    min-height: 100%;\r\n    vertical-align: top;\r\n    /* overflow: auto; */\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    /* background-color: #ddc2c2; */\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7a270028;\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyTimelineMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            mouse.lock = x;\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        // if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            if (mouse.pos !== x) {\r\n                // console.log(`★ move=== x: ${x}, pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n                mouse.pos = x;\r\n                update();\r\n            }\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            // update();\r\n\r\n            const lock = mouse.lock + refs.measure.scrollLeft;\r\n            const pos = mouse.pos + refs.measure.scrollLeft;\r\n            const notesList = store.scoreData.notesList;\r\n            let start = -1;\r\n            let end = -1;\r\n            for (let i = 0; i < notesList.length; i++) {\r\n                const notes = notesList[i];\r\n                const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                const [head, tail] = lock < pos ? [lock, pos] : [pos, lock];\r\n                if (head <= left && tail >= right) {\r\n                    if (start === -1) start = i;\r\n                } else {\r\n                    if (start !== -1) {\r\n                        end = i - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            if (start !== -1 && end === -1) {\r\n                end = notesList.length - 1;\r\n            }\r\n            state.focusIndex = start;\r\n            state.destIndex = end;\r\n            mouse.lock = -1;\r\n            // console.log(`★ up=== focus: ${state.focusIndex}, dist: ${state.distIndex}`);\r\n            dispatcher.melody.setState(state);\r\n            // const [head, tail] = mouse.lock < x ? [mouse.lock, x] : [x, mouse.lock];\r\n            // const width = tail - head;\r\n            // if (width > 5) {\r\n            //     mouse.width = width;\r\n            //     mouse.lock = -1;\r\n            //     mouse.pos = head;\r\n            //     update();\r\n            //     console.log(`★ up=== pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n            // }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyTimelineMouseOperation;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../redux/store/score/scoreCache\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport MelodyUtil, { getNormalizeLenFromNotes } from \"../../../../utils/melodyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimelineMouseOperation from \"./util/melodyTimelineMouseOperation\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n    update: () => void;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n    const update = props.update;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        state.measureCacheList.forEach(cache => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            // 表示する小節数\r\n            const barCount = cache.barCount;\r\n\r\n            jsxList.push(\r\n                <_Memori\r\n                    key={jsxList.length}\r\n                    beatWidth={beatWidth}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {barCount !== -1 ? <_Bar>{barCount}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [state.beatCacheList, barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        if (state.elementCacheList.length === 0) {\r\n            return jsxList;\r\n        }\r\n        let left = 0;\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                // console.log(state.elementCacheList.length);\r\n                const detail = element.detail as DetailChord;\r\n                const cache = state.elementCacheList[i];\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minuteLen = minute * 0.25;\r\n                const adjustRate = beatProps.beatMemoriCount / 4;\r\n                const width = beatWidth * (detail.beatLen * adjustRate + minuteLen);\r\n\r\n                if (chordRef.current != null) {\r\n                    const scroll = chordRef.current.scrollLeft;\r\n                    if (left + width - scroll >= 0 ||\r\n                        left - scroll <= chordRef.current.clientWidth) {\r\n                        const symbolNmae = TheoryUtil.getSymbolFromKey(detail.symbolKey)?.name;\r\n                        const degreeName = detail.root == null ? '-' :\r\n                            TheoryUtil.getDegreeRoot(detail.root) + symbolNmae;\r\n                        const chordName = detail.root == null ? '-' :\r\n                            TheoryUtil.getRootName(detail.root, init.keyIndex) + symbolNmae;\r\n                        jsxList.push(\r\n                            <_ChordItem key={jsxList.length}\r\n                                left={left}\r\n                                width={width}\r\n                                isActive={element == curChord}\r\n                                onClick={() => {\r\n                                    state.isMelody = false;\r\n                                    state.focusIndex = i;\r\n                                    dispatcher.score.setScoreState(state);\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                                }}\r\n                            >\r\n                                <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                            </_ChordItem>\r\n                        );\r\n                    }\r\n                }\r\n                left += width;\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_MeasureWrap ref={measureRef}>\r\n            <_MeasureInner\r\n                onMouseDown={e => MelodyTimelineMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseMove={e => MelodyTimelineMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseUp={e => MelodyTimelineMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseLeave={() => {\r\n                    const mouse = store.melodyState.timelineMouse;\r\n                    mouse.pos = -1;\r\n                    mouse.lock = -1;\r\n                    update();\r\n                }}\r\n            >\r\n                {measureJsxList}\r\n                <_MousePos\r\n                    left={mouseMeasurePos * beatWidth * rate}\r\n                    width={beatWidth * rate}\r\n                />\r\n            </_MeasureInner>\r\n        </_MeasureWrap>\r\n    </>);\r\n}\r\n\r\nconst getExtendMeasure = (measureList: ScoreCache.Measure[]): ScoreCache.Measure[] => {\r\n    const list:ScoreCache.Measure[] = [];\r\n\r\n    return list;\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _MeasureWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _MeasureInner = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* width: 100%; */\r\n    left: 0;\r\n    top: 0;\r\n    width: 10000px;\r\n    height: 100%;\r\n    &:hover {\r\n        background-color: #ff00b347;\r\n    }\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.left}px;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    pointer-events: none;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.beatWidth / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + TheoryUtil.IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.melodyFont;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #8f8f8f;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #adadad;\r\n    ${props => !props.isStruct ? '' : css`background-color: #ce6565;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #3b3b3b;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/score/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                state.isPreview = true;\r\n                dispatcher.melody.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.melody.setMelodyFont(soundFontPlayer);\r\n                    }).then(() => {\r\n                        state.isPreview = false;\r\n                        dispatcher.melody.setState(state);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #cacacada;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f7f7f7da;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e4e4e4da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #f7f7f7da;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'32'} isDisable={false} isActive={state.quantize === 8} callback={() => {\r\n                    state.quantize = 8;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={![1, 2, 3, 6].includes(state.quantize)} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                        dispatcher.melody.setState(state);\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                        dispatcher.melody.setState(state);\r\n                    }\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                {/* <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} /> */}\r\n                {/* <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} /> */}\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 9 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, MelodyNotes } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.destIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    const newLen = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.len) !== getNormalizeLenFromNotes(newLen)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.len = newLen;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    const newPos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.pos) !== getNormalizeLenFromNotes(newPos)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.pos = newPos;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.tableMouse;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                //履歴を作成\r\n                state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.melody.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.melody.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/score/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport MelodyUtil, { } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n\r\n        // 選択しているノーツが1つである場合\r\n        const isSingle = state.focusIndex === state.destIndex;\r\n        const mouse = state.tableMouse;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.melody.copyNotes(); break;\r\n                    case 'v': dispatcher.melody.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.melody.allSelect();\r\n                    }\r\n                        break;\r\n                    case 's': dispatcher.score.saveFile(); break;\r\n                    case 'z': dispatcher.melody.undo(); break;\r\n                    case 'y': dispatcher.melody.redo(); break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.melody.incrementCurPitch(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.melody.incrementCurPitch(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveDestFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveDestFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.melody.incrementCurPitch(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.melody.incrementCurPitch(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(false);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(true);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.melody.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.melody.adjustScrollX(); break;\r\n                case 'e': dispatcher.melody.adjustScrollY(); break;\r\n                case 'z': {\r\n                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.melody.firstNotes();\r\n                }\r\n                    break;\r\n                case '0': {\r\n                    state.quantize = 8;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else if([2, 1].includes(state.quantize)) {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.melody.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.melody.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.melody.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.destIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/score/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport CacheUtil from \"../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const scoreState = store.scoreState;\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n    const [invalidate2, setInvalidate2] = useState<{}>({});\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.tableMouse;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n    const refs = store.refs.melody;\r\n\r\n    const barCount = 150;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n    const rate = 1 / store.melodyState.quantize;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isMelody;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, melody: update\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    /**\r\n     * 画面上部のメモリJSXリスト\r\n     * 拍子のキャッシュから作成する\r\n     */\r\n    const measureJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        scoreState.measureCacheList.forEach((cache, i) => {\r\n\r\n            list.push(\r\n                <_Scale key={i} isHead={cache.rate === 4} beatWidth={state.beatWidth} />\r\n            );\r\n        });\r\n        return list;\r\n    }, [scoreState.beatCacheList, barCount]);\r\n\r\n    // const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    /**\r\n     * スケール区間のJSXリスト\r\n     * 背景色のラインを表現\r\n     * 転調でキーが変わる度に追加される\r\n     */\r\n    const scaleDivJsxList = useMemo(() => {\r\n        const divList: JSX.Element[] = [];\r\n        // console.log('**' + scoreState.scaleCacheList.length);\r\n        scoreState.scaleCacheList.forEach((scaleInfo, i) => {\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const scaleJsxList: JSX.Element[] = [];\r\n            for (let j = 0; j < PITCH_MAX; j++) {\r\n                const keyIndex = getKeyIndexFromPitcher(j);\r\n                scaleJsxList.push(\r\n                    <_ScaleLine key={j}\r\n                        isScale={scaleIndexies.includes(keyIndex)}\r\n                        isBase={keyIndex === scaleIndexies[0]}\r\n                    />\r\n                );\r\n            }\r\n\r\n            divList.push(\r\n                <_ScaleList key={i} width={state.beatWidth / 4 * scaleInfo.memoriCnt} isEven={i % 2 === 0}>\r\n                    {scaleJsxList}\r\n                </_ScaleList>\r\n            );\r\n        });\r\n        return divList;\r\n    }, [scoreState.scaleCacheList]);\r\n\r\n    /**\r\n     * 配置するノーツのJSXリスト\r\n     */\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        // let count = 0;\r\n        if (scoreState.scaleCacheList.length === 0) return list;//\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            const normalLeft = getNormalizeLenFromNotes(notes.pos);\r\n            const normalWidth = getNormalizeLenFromNotes(notes.len);\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const notesLeft = normalLeft * state.beatWidth;\r\n                const notesRight = notesLeft + normalWidth * state.beatWidth;\r\n                if (\r\n                    // !state.isPreview &&\r\n                    (notesRight - scroll < 0 || notesLeft - scroll > tableRef.current.clientWidth)\r\n                ) {\r\n                    continue;\r\n                }\r\n            }\r\n            const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n            // count++;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n\r\n            // クオンタイズ\r\n            const unitPos = getMinimumLenUnit(notes.pos);\r\n            const unitLen = getMinimumLenUnit(notes.len);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={normalLeft * state.beatWidth}\r\n                    width={normalWidth * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.melody.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\r\n                        isScale={isScale}\r\n                        isActive={isActive}\r\n                        isPreview={state.isPreview}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // console.log('cnt: ' + count);\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.destIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move, refs.table?.scrollLeft]);\r\n\r\n    /**\r\n     * タイムラインを横にスクロールした際の処理\r\n     */\r\n    const sideScrollAction = () => {\r\n\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const scrollLeft = refs.table.scrollLeft;\r\n            const scrollTop = refs.table.scrollTop;\r\n            refs.measure.scrollTo({ left: scrollLeft });\r\n            refs.chord.scrollTo({ left: scrollLeft });\r\n            refs.pitch.scrollTo({ top: scrollTop });\r\n        }\r\n        update();\r\n    };\r\n\r\n    /**\r\n     * マウスポインタがエリア外に出た際の処理\r\n     */\r\n    const mouseLeaveAction = () => {\r\n        console.log('leave!');\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n        update();\r\n    };\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header isEnable={!state.isPreview}>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                {(() => {\r\n                    const mouse = state.timelineMouse;\r\n                    if (mouse.lock === -1) {\r\n                        return mouse.pos === -1 ? <></> :\r\n                            <_MouseLinePos left={mouse.pos} />\r\n                    } else {\r\n                        const [head, tail] = mouse.lock < mouse.pos ? [mouse.lock, mouse.pos] : [mouse.pos, mouse.lock];\r\n                        const width = tail - head;\r\n                        return <_MouseRange left={head} width={width} />\r\n                    }\r\n                })()}\r\n                {\r\n\r\n                }\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                        update={() => setInvalidate2({})}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef} onScroll={sideScrollAction} >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleDivJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseLeave={mouseLeaveAction}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _MouseLine = css`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    width: 3px;\r\n`;\r\nconst _MouseLinePos = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #15ff00;\r\n`;\r\nconst _MouseLineLock = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #fbff00;\r\n`;\r\n\r\nconst _MouseRange = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    width: ${props => props.width}px;\r\n    background-color: #ffffff8b;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #464545;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n    /* background-color: #70ff7058; */\r\n`;\r\n\r\nconst _ScaleList = styled.div<{\r\n    width: number;\r\n    isEven: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    /* pointer-events: none; */\r\n    background-color: #70ff7021;\r\n    ${props => !props.isEven ? '' : css`\r\n        background-color: #708aff20;\r\n    `}\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #2727275a;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #00a6cf52;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `}\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `}\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb0040;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isPreview: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    opacity: 0.5;\r\n    ${props => props.isPreview && !props.isActive ? '' : css`    \r\n       opacity: 1;\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    ${props => !(props.isPreview && props.isActive) ? '' : css`\r\n        box-shadow: 0 0 32px 0 #ffffff92;\r\n    `}\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #7a270028;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport Styles, { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport MelodyUtil, { } from \"../../../utils/melodyUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    const isDirect = store.systemState.directScore != undefined;\r\n\r\n    useEffect(() => {\r\n        const info = melody.soundfontInfo;\r\n        if (store.instruments.melodyFont == null && store.instruments.harmonyFont == null) {\r\n            const instruments = store.instruments;\r\n            Soundfont.instrument(new AudioContext(), info.name,\r\n                { gain: info.gain, release: 0.5 }).then((melodyFont) => {\r\n                    // dispatcher.melody.setMelodyFont(soundFontPlayer);\r\n\r\n                    instruments.melodyFont = melodyFont;\r\n                    // acoustic_guitar_steel\r\n                    //bright_acoustic_piano\r\n                    //electric_grand_piano\r\n                    Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\r\n                        { gain: 2, release: 0.5 }).then((harmonyFont) => {\r\n                            // dispatcher.score.setHarmonyFont(soundFontPlayer);\r\n\r\n                            instruments.harmonyFont = harmonyFont;\r\n                            dispatcher.score.setInstruments(instruments);\r\n                        });\r\n                });\r\n        }\r\n\r\n    }, []);\r\n\r\n    const switchMode = () => {\r\n        state.isMelody = !state.isMelody;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isMelody ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isMelody ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isMelody ? () => {\r\n\r\n        if (!state.isPreview) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        } else {\r\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    } : () => {\r\n\r\n        if (!melody.isPreview) {\r\n            dispatcher.melody.previewStart();\r\n        } else {\r\n            MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    }\r\n    /** アンサンブルの切替 */\r\n    const toggleEnsamble = !state.isMelody ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.melody.setState(melody);\r\n    }\r\n\r\n    const playJsx = <_SwitchInner isActive={isPreview}>Play</_SwitchInner>;\r\n    const stopJsx = <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner>;\r\n    const ensambleJsx = <_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner>;\r\n    const soloJsx = <_SwitchInner isActive={isSolo}>Solo</_SwitchInner>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header isEnable={state.hideMenu === 'none'}>\r\n                <_Mode isEnable={!isPreview}>\r\n                    <_ModeItem isActive={!state.isMelody} onClick={() => {\r\n                        if (state.isMelody) switchMode();\r\n                    }}>Harmony</_ModeItem>\r\n                    <_ModeItem isActive={state.isMelody} onClick={() => {\r\n                        if (!state.isMelody) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch isEnable={true} onClick={preview}>{playJsx} / {stopJsx}</_Switch>\r\n                    <_Switch isEnable={!state.isPreview} onClick={toggleEnsamble}>{ensambleJsx} / {soloJsx}</_Switch>\r\n                    <_Button isEnable={!isDirect} onClick={dispatcher.score.saveFile}>Save</_Button>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    const isPermit = !isPreview && state.hideMenu === 'none';\r\n                    if (isPermit) {\r\n                        switch (e.key) {\r\n                            case 'r': switchMode(); break;\r\n                        }\r\n                    }\r\n                }}>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isMelody} />\r\n                    <MelodyFrame isActive={state.isMelody} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _Mode = styled.div<{\r\n    isEnable: boolean\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 150px;\r\n    height: calc(100% - 8px);\r\n    background-color: #cae4e3;\r\n    margin: 4px 0 0 24px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    &:hover {\r\n        background-color: #dceceb\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #e1e4ca;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    &:hover {\r\n        background-color: #eff3cf\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\nimport PreviewTab from \"./preview/previewTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    // { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    // { name: 'Preview', disable: !isAccept, cont: store.scoreData.chordList.length === 0 ? <></> : <PreviewTab data={store.scoreData} /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? TheoryUtil.DEGREE12_FLAT_LIST : TheoryUtil.DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey) as TheoryUtil.SymbolParams;\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    // sampler.releaseAll();\r\n\r\n                    const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = TheoryUtil.IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        // sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                // sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeManage = () => {\r\n\r\n    const { isAuthenticated, user, isLoading } = useAuth0();\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [userId, setUserId] = useState('-');\r\n    const [userCount, setUserCount] = useState(0);\r\n\r\n    const [scoreList, setScoreList] = useState<scoreProps[]>([]);\r\n\r\n    const loginProps = store.userEnv.login;\r\n\r\n    let email = '-';\r\n    if (isAuthenticated && user != undefined) {\r\n        email = user.email ?? '-';\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.systemState.directScore == null) {\r\n            countUsers().then(cnt => {\r\n                setUserCount(22 + cnt);\r\n                findAllScore().then((resList) => {\r\n                    setScoreList(resList as scoreProps[]);\r\n                });\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log('check');\r\n        if (!loginProps) {\r\n            setUserId('');\r\n        } else {\r\n            console.log('new');\r\n            setUserId(loginProps.id);\r\n        }\r\n    }, [loginProps, isAuthenticated]);\r\n\r\n    const createUser = () => {\r\n        if (user != undefined) {\r\n            DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(email, id) VALUES('${user.email}', '${userId}')`).then(() => {\r\n                window.location.reload();\r\n            });\r\n        }\r\n    }\r\n\r\n    const updateUser = () => {\r\n        DataUtil.sendQueryRequestToAPI('update', `UPDATE user_tbl SET id = '${userId}' WHERE seq = ${loginProps?.seq}`).then(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    const registerLabel = loginProps == undefined ? 'create' : 'update';\r\n    const registerAction = loginProps == undefined ? createUser : updateUser;\r\n\r\n    const scoreListJsx = scoreList.map((score, i) => {\r\n        return (\r\n            <_CloudItem key={i} onClick={() => {\r\n                window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n            }}>\r\n                <_Owner>{`${score.owner}`}</_Owner>\r\n                <_CName>{`${score.dispnam}`}</_CName><_CDate>{score.lastmod}</_CDate>\r\n            </_CloudItem>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <_Recored>\r\n                <_TitleLabel>User Data</_TitleLabel>\r\n            </_Recored>\r\n            <_ListInfoDiv isEnable={isAuthenticated && !isLoading}>\r\n                <_Recored>\r\n                    <_ItemnLabel>e-mail</_ItemnLabel>\r\n                    <_ItemnValue>{email}</_ItemnValue>\r\n                </_Recored>\r\n                <_Recored>\r\n                    <_ItemnLabel>user id</_ItemnLabel>\r\n                    <_ItemnForm type=\"text\" value={userId} onChange={(e) => {\r\n                        setUserId(e.target.value);\r\n                    }} />\r\n                </_Recored>\r\n                <_ButtonsDiv>\r\n                    <_Button isEnable={true} onClick={registerAction}>{registerLabel}</_Button>\r\n                </_ButtonsDiv>\r\n            </_ListInfoDiv>\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{scoreList.length} licresia scores have been published.</_MessageRecord>\r\n            <_ListFrame>{scoreListJsx}</_ListFrame>\r\n\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeManage;\r\n\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllScore = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = score.user_seq) as owner, dispnam, lastmod\r\n        FROM scoretbl score\r\n        WHERE share <> 'url'\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 400px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\n\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 30px;\r\n    user-select: text;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ItemnForm = styled.input`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #1a1a1a;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #e9e9e9;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 42px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\nconst _CloudItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    /* height: 60px; */\r\n    border-bottom: 1px solid #888888;\r\n    /* background-color: white; */\r\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    }\r\n`;\r\n\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;","import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst ScoreInfoTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [userId, setUserId] = useState('-');\r\n\r\n    const directScore = store.systemState.directScore;\r\n\r\n    const [owner, name] = directScore == null ? ['-', '-'] : [directScore.owner, directScore.name];\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_Recored>\r\n                <_TitleLabel>Score Data</_TitleLabel>\r\n            </_Recored>\r\n            <_ListInfoDiv isEnable={true}>\r\n                <_Recored>\r\n                    <_ItemnLabel>owner</_ItemnLabel>\r\n                    <_ItemnValue>{owner}</_ItemnValue>\r\n                </_Recored>\r\n                <_Recored>\r\n                    <_ItemnLabel>name</_ItemnLabel>\r\n                    <_ItemnValue>{name}</_ItemnValue>\r\n                </_Recored>\r\n            </_ListInfoDiv>\r\n        </_Left>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default ScoreInfoTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 400px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\n\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 30px;\r\n    user-select: text;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ItemnForm = styled.input`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #1a1a1a;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #e9e9e9;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #888888;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport EditTab from \"../score/edit/editTab\";\r\nimport ScoreInfoTab from \"./scoreInfoTab\";\r\n\r\nconst PreviewChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Info', disable: false, cont: <ScoreInfoTab /> },\r\n                    { name: 'View', disable: false, cont: <EditTab /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PreviewChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { CgOptions, CgPiano } from 'react-icons/cg';\r\nimport { GiMusicalScore } from 'react-icons/gi';\r\nimport { ImPlay } from 'react-icons/im';\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\nimport PreviewChannel from \"../preview/previewChannel\";\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { ScoreData } from \"../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../utils/cacheUtil\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    const isDirect = store.systemState.directScore != null;\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <_Wrap>\r\n                    {/* <DraggableDialog /> */}\r\n                    {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n                    <ChannelPane\r\n                        tabElements={[\r\n                            { name: 'Home', icon: <AiFillHome />, isEnable: !isDirect, cont: <HomeChannel /> },\r\n                            { name: 'Perform', icon: <CgPiano />, isEnable: false, cont: <PerformChannel /> },\r\n                            { name: 'Score', icon: <GiMusicalScore />, isEnable: !isDirect, cont: <ScoreChannel /> },\r\n                            { name: 'Option', icon: <CgOptions />, isEnable: false, cont: <SettingChannel /> },\r\n                            { name: 'Preview', icon: <ImPlay />, isEnable: isDirect, cont: !isDirect ? <></> : <PreviewChannel /> }\r\n                        ]}\r\n                        activeNo={store.systemState.mainChannelIndex}\r\n                        selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n                    />\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/test\" exact >\r\n                <_Wrap>\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/preview\" exact >\r\n                <DirectView hashKey={str} />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nconst DirectView = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const conteseq = DataUtil.getDecryptionedScoreSeq(props.hashKey);\r\n\r\n    const setScoreData = (owner: string, dispnam: string, data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n        store.systemState.mainChannelIndex = 4;\r\n        store.systemState.scoreTabIndex = 0;\r\n        store.systemState.directScore = {\r\n            owner, name: dispnam\r\n        };\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    useEffect(() => {\r\n        DataUtil.findScore(conteseq).then(resList => {\r\n            if (resList.length > 0) {\r\n                const source = resList[0]['data'];\r\n                const owner = resList[0]['owner'];\r\n                const dispnam = resList[0]['dispnam'];\r\n                const text = DataUtil.unZip(source);\r\n                setScoreData(owner, dispnam, JSON.parse(text));\r\n            }\r\n        });\r\n    }, []);\r\n    if (store.systemState.directScore == null) {\r\n        return <></>;\r\n    } else {\r\n        return <Redirect to=\"/\" />;\r\n        // return <MainFrame />;\r\n    }\r\n}\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport LoginFrame from \"../login/loginFrame\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport PatternOptions from \"../backing/pattern/patternOptions\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { loginWithRedirect, isAuthenticated, logout, user } = useAuth0();\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    useEffect(() => {\r\n        console.log(window.location.origin);\r\n        if (user != undefined && user.email != undefined) {\r\n            DataUtil.findUserInfo(user.email).then(userList => {\r\n                console.log(userList);\r\n                if (userList.length > 0) {\r\n                    const userProps = userList[0];\r\n                    store.userEnv.login = {\r\n                        seq: userProps.seq,\r\n                        id: userProps.id\r\n                    }\r\n                    dispatcher.system.setUserEnv(store.userEnv);\r\n                    setUserId('@' + userProps.id);\r\n                } else {\r\n                    setUserId('unregistered');\r\n                }\r\n            });\r\n        }\r\n        console.log(user);\r\n    }, [user]);\r\n\r\n    const authButtonJsx = !isAuthenticated ? (\r\n        <_LoginButton onClick={() => {\r\n            // store.systemState.dialog = <LoginFrame />;\r\n            // dispatcher.system.setState(store.systemState);\r\n            console.log(window.location.origin);\r\n            loginWithRedirect();\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName isEntry={store.userEnv.login != undefined}>{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            logout();\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #003a86;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #96000057;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useCallback, useEffect, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    const callback = useCallback(dispatcher.system.switchSplashToMain, []);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={callback} /\r\n                    >}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\n\nconst REACT_APP_AUTH0_DOMAIN = 'dev-a0p0m4lr.us.auth0.com';\nconst REACT_APP_AUTH0_CLIENT_ID = 'ABaWpYVBZwTr3tkyxhq1kWh2YwT4epew';\n\nReactDOM.render(\n  <Auth0Provider\n    domain={REACT_APP_AUTH0_DOMAIN}\n    clientId={REACT_APP_AUTH0_CLIENT_ID}\n    redirectUri={window.location.origin}\n    // redirectUri={window.location.origin}\n  >\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Auth0Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import zlib from \"zlib\";\r\nimport { ScoreState } from \"../redux/store/score/scoreState\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport Hashids from 'hashids';\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n    \r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5000';\r\n    export const DB_SERVER_DOMAIN = 'https://licresia-demo01-server.glitch.me';\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4000';\r\n    // export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/licresia_demo_app';\r\n    export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         // sampleテーブルから全カラムのデータをid順に取得\r\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\r\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\r\n\r\n    //         if (error) {\r\n    //             throw error;\r\n    //         }\r\n    //         if (data) {\r\n    //             console.log(data);\r\n    //         }\r\n    //     } catch (error: any) {\r\n    //         alert(error.message);\r\n    //     } finally {\r\n\r\n    //     }\r\n    // };\r\n\r\n    const getHashBuilder = () => {\r\n        return new Hashids('licresia-demo', 8);\r\n    }\r\n\r\n    export const getHashedFromScoreSeq = (scoreSeq: number) => {\r\n        const hashids = getHashBuilder();\r\n        const hash = hashids.encode(scoreSeq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedScoreSeq = (hashedScoreSeq: string) => {\r\n        const hashids = getHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedScoreSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromScoreSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id FROM user_tbl`);\r\n        const results = await response.json();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfo = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findScore = async (scoreSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    export const saveFile = (plainData: string, state: ScoreState) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.lcrs'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        const fileHandle = state.fileHandle;\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                state.fileHandle = fileHandle;\r\n                // this.score.setScoreState({ ...state });\r\n                const file = await fileHandle.getFile();\r\n                alert('saved successfully!');\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = handle;\r\n                    // this.score.setScoreState({ ...state });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataUtil;"],"sourceRoot":""}