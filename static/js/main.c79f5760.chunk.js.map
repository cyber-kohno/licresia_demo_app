{"version":3,"sources":["system/redux/reducer.tsx","system/utils/theoryUtil.tsx","system/utils/backingUtil.tsx","system/utils/cacheUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/utils/instrumentsUtil.tsx","system/redux/store/state/dataHistory.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/globalDialog.tsx","system/base/design/styles.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/contents/score/manage/chordProg/progUnitSearcher.tsx","system/contents/score/manage/chordProg/progStyle.tsx","system/contents/score/manage/chordProg/progBackingUtil.tsx","system/contents/score/manage/chordProg/progUtil.tsx","system/contents/score/manage/chordProg/progCustomFrame.tsx","system/utils/dummyUtil.tsx","system/contents/score/manage/chordProg/progOutputFrame.tsx","system/contents/score/manage/chordProg/progTemplateUtil.tsx","system/contents/score/manage/chordProg/progTemplateFrame.tsx","system/contents/score/manage/chordProg/chordProgDialog.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/tool/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailAlter.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcAlter.tsx","system/contents/score/edit/harmonize/tool/chordEditor.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFromStyles.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/side/sideFormAlter.tsx","system/contents/score/edit/harmonize/side/minuteForm.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/harmSideForm.tsx","system/contents/score/edit/harmonize/info/structViewer.tsx","system/contents/backing/pattern/builder/patternDetail.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternPedal.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternVelocity.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternOptions.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/initial/harmClipboard.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/melody/util/melodyTimelineMouseOperation.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/home/homeChannel.tsx","system/contents/preview/scoreInfoTab.tsx","system/contents/preview/previewChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx","system/utils/dataUtil.tsx"],"names":["ActionType","reducer","store","action","type","payload","SET_USER_ENV","userEnv","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","getBeatProps","keyIndex","scale","relation","beatSignature","beatMemoriCount","barBeatCnt","SYMBOL_LIST","beatLen","minute","bpm","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","root","index","isFlat","symbolKey","props","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","baseKeyIndex","TheoryUtil","KEY12_FLAT_LIST","KEY12_SHARP_LIST","find","symbol","list","forEach","push","rootIndex","map","on","chordRootIndex","chordFullName","getRootName","chordOnIndex","onName","structList","struct","interval","soundIndex","adjustOctave","Math","floor","isFlatFromRelation","sameIndex","some","info","i","splice","unshift","sort","a","b","onIndex","sound","onChordIndex","tempList","length","divCount","Array","fill","table","channels","j","octave","structIndex","voicingList","editorPattern","channelSize","layers","layer","divs","noteDivList","signals","record","cell","x","y","status","notesList","vels","velocityList","slice","pedals","pedalActs","pedal","divIndex","voicingStructs","size","channel","reverse","scoreLayers","console","log","JSON","stringify","scoreLayer","notes","item","baseInfo","backing","pitchIndexList","chordTime","pattern","soundName","playHarmony","adjustRate","pedalRangeList","total","timeList","div","start","normal","rate","isDot","div3","sustain","undefined","divTime","pedalInfo","end","ignoreList","ig","timeInfo","timingAdj","timing","startTime","sustainTime","signal","inc","isNext","nextNotes","next","k","notesTail","velAdj","gain","setTimeout","state","dispatcher","harmony","stop","isPreview","id","clearInterval","setState","memoriCount","head","tail","getUsingLenFromDivs","reduce","prev","cur","len","checkOverlapBackLayer","structCnt","col","isExist","voicing","voicingTable","patternProps","BackingUtil","buildChannels","getChannels","convertEditorLayerFromScore","channelIndex","lenIndex","mode","layerIndex","detail","chordBacking","hasError","limitLen","getLimitLen","totalLen","chordInfo","init","baseLayer","backLayer","getDivRange","left","right","isOverlap","backLeft","backRight","note","includes","chordList","elementCacheList","sectionCacheList","beatCacheList","scaleCacheList","tempoCacheList","measureCacheList","totalMinute","sectionNo","sectionBeatSum","pastSecond","curSecond","chordIndex","curMemoriCount","totalBarCount","totalMemoriCount","beatRangeMemoriCount","totalBeat","totalMemoriBarCount","chordBlockNo","scaleMemoriCount","tempoMemoriCount","addTempoRange","beatRate","beatProps","memoriCnt","element","prevBeat","prevMemoriCount","prevBarCount","prevMinute","fixed","labelName","beatSum","rangeIndexStart","rangeIndexEnd","prevBar","calcSustainMsec","barMemoriCount","dispBarCount","barCount","alterType","modRel","dommVal","keyAdj","tempoRel","tempoDiff","tempoRate","tempoAbs","bar","surplusBeat","curTotalMemori","reffers","chordCacheList","createChordCacheList","score","setScoreState","cache","getSymbolFromKey","getChordDetails","backingError","hasBackingError","pos","curMemori","range","posTime","pastLen","last","CacheUtil","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len32","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","ml","getSortetdNotesLen","len32Cnt2","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","instrument","soundfontPlayer","play","duration","soundFullName","alert","stopPreview","melody","adjustScrollX","previewHarmony","data","focusIndex","lastFocus","update","firstTime","getTimeInfoFromNotesPos","lenTime","pitch","pitchIndex","destIndex","isSolo","system","setReserveTasks","cacheList","chordCache","pitchList","getPitchListFromVoicing","playBacking","tableMouse","curChord","MelodyUtil","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","PATTERN_HEADER_HEIGHT","PATTERN_BODY_HEIGHT","NOTES_1BAR_WIDTH","Dispatcher","dispatch","setUserEnv","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setInvalidate","saveFile","fileHandle","createWritable","writable","text","DataUtil","gZip","write","close","getFile","window","showSaveFilePicker","types","accept","then","handle","catch","setPiano","setScoreTabIndex","scoreTabIndex","clearCache","distIndex","initialBeat","setKeySwitch","keySwitch","setScoreData","moveElement","sub","moveDist","releaseRange","isTail","distHead","distTail","moveSection","curSectionIndex","curSectionInfo","curElementType","flashElement","incrementDegreeRoot","isUp","incrementBeatLen","updateHarmonizeCache","incrementMinuteVal","value","target","incrementMinuteValRelation","nearIndex","addChordElement","curBeatLen","addSectionElement","addAlterElement","removeCurElement","copyElementList","parse","copiedElementList","cloneBacking","pasteElementList","setDiatonicChord","diatonicIndex","chord","DIATONIC_MAJOR_SCALE_LIST","DIATONIC_MINOR_SCALE_LIST","setDefaultBacking","getDefaultBacking","pastBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setInstrument","incrementCurPitch","isUpper","filter","dataHistory","add","normalLeft","scaleInfo","getKeyScaleFromNotesPos","scaleIndexies","MAJOR_SCALE_INTERVALS","MINOR_SCALE_INTERVALS","prevPitchIndex","tempPitchIndex","adjustScrollY","moveFocus","updateCurChord","moveDestFocus","beatWidth","searchedChord","width","addNotes","focus","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","posA","posB","undo","history","redo","openBackingEditor","hideMenu","getInitVoicingTable","getEditorPatternFromChordBacking","symbolAttr","getVoicingListFromTable","checkEditorError","closeBackingEditor","getInitialLayer","mappingEditorToScore","editor","buildPatternProps","addPatternColumn","lenList","curLen","newLen","column","updateErrorState","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","isPermitDot","getNotes","setNotes","incrementVel","after","deleteColumn","switchLayer","switchMode","testBacking","this","DataHistory","ret","initialStore","keyConfig","up","down","addChord","addSection","addChange","deleteCur","distMode","edit1","edit2","incRoot","decRoot","incBeat","decBeat","colorProps","entryBackground","directScore","editable","dialog","isMelody","sustainMode","chordMode","symbolMode","control","minHeadMode","minTailMode","backingDataHistory","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","timelineMouse","soundfontInfo","scaleMode","resize","move","shift","notesCacheList","harmonize","measure","harmoniizeInvalidate","GloballDialog","useContext","GlobalContext","_Blind","onClick","styled","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isEnable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","ChannelContents","_Contents","CSS_BUTTON_DISABLE","_Label","TabbedPane","isDisable","disable","TabLabel","_TabLabel","TabContents","condition","UNIT_LIST","beat","step","firstChord","secondChord","parseChord","source","baseBeat","keyList","split","charAt","newBeat","Number","diatonicNo","diatonicProps","adjustKey","adjust","shortNameKey","substring","getSymbolFromShortName","shortName","ProgUnitSearcher","ProgStyle","CSS_LABEL_MIDIUM","select","progBackingUtil","patternConditions","voicingConditions","STEP_LIST","getDefaultChord","sectionName","backingNo","outputUnits","elementList","block","blockDetail","sample","BACKING_SAMPLE_LIST","conPa","unZip","conVo","ProgUtil","ProgCustomFrame","setStep","degreeFilters","setDegreeFilters","lastChord","setLastChord","setFocusIndex","stepList","useMemo","getFilteredStepList","stepOptionJsxList","val","disp","degreeOptionJsxListArray","DEGREE_FILTER_LIST","unitList","search","jsx","dispUnitJsx","tootTipStr","beatCycle","chordName","getDegreeRoot","divStr","_Span","isMatch","_ChordName","_ProgItem","title","progUnitList","progJsxList","degreeChangeAction","e","_Frame","_TitleLabel","_Combobox","onChange","stepChangeAction","getLastChordName","_ListDiv","_ButtonDiv","_ExecutableButton","unitNum","reset","progUnit","insertProgUnit","_Record","RECORD_HEIGHT","span","DummyUtil","ProgOutputFrame","SECTION_CATEGORY","SECTION_NO","secCatOptionJsxList","secNoOptionJsxList","backingSampleJsxList","blockJsxList","isFixed","_Block","_FixedItem","_BackingLabel","updateOutputUnits","_ChordListDiv","_ChordItem","_ChordNameLabel","_ChordBeatDiv","jsxList","_BeatTip","getBeatTipsJsx","getInner","CSS_LABEL_SMALL","TEMPLATE_LIST","template","ProgTemplateUtil","ProgTemplateFrame","templateList","templateJsxList","isFocus","applyProgTemplate","ChordProgDialog","buildMode","setBuildType","getBlankBlockList","setOutputUnits","beatFilter","setBeatFilter","closeAction","beatOptionJsxList","BEAT_DEF_LIST","chordDetail","templateBean","getInitialBlockList","createSwitchableButton","clickEvent","_SwitchableButton","beatComboboxEnable","distBeatFilter","_Header","_MainDiv","_LeftDiv","_BeatFormDiv","beatChangeAction","_SwitchDiv","getSwitchContJsx","_RightDiv","_Footer","buildScoreData","HEADER_HEIGHT","BEAT_HEIGHT","ManageTab","file","setFile","tabIndex","loginProps","login","cloudScoreList","setCloudScoreList","cloudScoreName","setCloudScoreName","loadCloudScore","findUserScoreList","seq","resList","res","hash","getHashedFromScoreSeq","url","getPreviewURL","modified","tempo","section","time","toString","getStringFromDate","Date","lastModified","sectionNum","chordNum","fileInfo","scoreInfo","textValue","changeAction","createLabelRecord","labelValue","_Recored","_ItemnLabel","_ItemnValue","fileDisconnectAction","isDataConnect","cloudScoreListJsx","_Message","_CloudItem","_CName","_CHash","curCloudScore","uploadEnable","isExistEditingData","isSelectedScore","_Wrap","_ButtonsDiv","_Button","_Left","_CloudDiv","newScoreName","sendQueryRequestToAPI","_ListFrame","findScore","_Right","showOpenFilePicker","fileContents","_DataInfoDiv","_ItemnInput","_ScoreInfoDiv","DATA_INFO_HEIGHT","input","SymbolEditor","curSymbol","baseSymbol","derives","getSymbolDerives","parentJsx","curJsx","childrenJsx","_Row","CalcChord","symbolName","chordRoot","chordOn","prevCache","isError","minuteStr","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","barRem","_Len","_Border","ElementDetailAlter","_Type","sign","getDetailInfo","ElementDetailChord","degreeRoot","degreeOn","isDiatonic","getDiatonicDegreeList","_Degree","isSwitch","isSustainMode","scaleRelation","isOnChordScale","_DegreeRoot","_Tip","lenType","valueType","abs","_TipItem","_Error","_Voicing","_Pattern","isCurrent","_DegreeSymbol","_DegreeOnChord","_Backing","ElementFixedBorder","isStart","ElementDetailInit","_Title","_Value","ElementDetailSection","CalcAlter","getType","prevKey","curKey","curCache","prevTempo","curTempo","curBeat","getDetail","ChordEditor","getChord","createRow","label","listJsx","rootName","ScoreElement","wrapRef","useRef","bodyRef","isRange","isSameSection","wrap","current","body","elementJson","isInactive","ref","isSelectable","isAdditional","_Head","_CurKey","getDisplayKeyScaleName","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","HarmSections","sections","curSectionNo","_Total","addProgAction","callback","HarmonizeUtil","previewMelody","clearTimeout","edit","common","patternNormalMode","patternDetailMode","test","isEdit","baseVel","tempTiming","tempVelAdj","vel","curNotes","BackingEditorInput","NoteKeyDown","config","isElement","previewCurHarmony","NoteBasicInput","main","NoteKeySwitch","isPress","min","max","_NumberForm","SideFormStyles","SideFormAlter","createAlertTypeItem","createModulateRelationItem","rel","createTempoRelationItem","createBeatItem","donmmItemJsxList","_ParamDiv","_ParamItem","keyAdjItemJsxList","_Group","_CategoryLabel","createNumberForm","currentTarget","valueAsNumber","___CSS_TITLE","___CSS_FORM","JUDGE_INFO_LIST","MinuteForm","rateMinus","ratePlus","isRed","JudgeJsxList","judge","_JudgeItem","setValue","createJudgeItem","isHead","_View","_ViewFrame","isLeft","_Judge","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","DEGREE_ALL","degree","isRootActive","isOnActive","_RootItem","onContextMenu","symbolItemsJsx","_SymbolItem","createMinuteForm","_Timing","_BeatDiv","_Minute","_RootDiv","_SymbolDiv","SideFormInit","scaleItemJsxList","SCALE_DEF_LIST","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","splitList","_NumberItem","_DirectText","_SelectDiv","_TemplateFrame","_NumberFrame","_ItemBase","HarmSideForm","StructViewer","indexList","scaleList","structJsxList","curIndex","isScale","isUse","isBlack","_Struct","WIDTH","PatternDetail","_DelayDiv","_TimingValue","_VelocityDiv","_VelFrame","_VelItem","VEL_DIV_WIDTH","PatternLength","itemJsxList","PatternPedal","_Column","PatternTable","channelCount","curLayer","layerJsxList","jsxLsit","notesJsxLsit","setNotesStatus","viewSignal","prevCell","_Notes","isBack","_State","isEven","isFront","_Layer","zIndex","PatternVelocity","PatternBuilder","useTotalLen","isLenOverError","memoriWidth","memoriJsxList","bean","thickness","height","color","_Memori","_LengthDiv","_MeasureDiv","_MemoriList","_ChordLenLine","_OverCover","_Body","ChannelItem","soundfont","_Option","CHANNEL_MAX","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","structInfo","_LayerItem","_ModeItem","proops","PatternOptions","createItem","createRateItem","String","setRate","sizeJsxList","_ListItem","isPermit3ren","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","tableRecord","curCell","setRowStaccato","isSet","editModeJsx","_WrapEdit","hasStaccato","isExistNext","isEnableTai","option","PatternFrame","isUsePattern","_UseSwitch","isUsePedal","_Main","_StatusDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","channelLimitNum","OCTAVE_NUM","STRUCT_NUM","rowJsxList","selectCount","cellJsxList","isSelected","key12List","getSoundFullName","_Cell","isOver","_TableRow","_StructItem","isOnChord","_InfoItem","_EditorDiv","_StructDiv","_TableDiv","_InfoDiv","TIP_WIDTH","BackingEditorFrame","_PrevireBrind","_FooterDiv","HarmHideFrame","isOpen","isBackingEnable","HarmClipboard","_TypeDiv","MEMORI_WIDTH","HarmMeasure","dataList","_Margin","_Bar","beatJsxList","minuteJsxList","isChordFocus","curChordIndex","beatMemori","posMemori","_SustainItem","scrollPos","_ScrollFrame","_Blocks","_Measure","HarmonizeTab","timelineJsx","structViewerJsx","scoreCache","sideFormEnable","onKeyDown","onKeyUp","_SectionsDiv","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_RIGHT_WIDTH","HARMONIZE_HEAD_WIDTH","MelodyTimelineMouseOperation","mouseDownEvent","timelineLength","button","rect","getBoundingClientRect","clientX","mouseMoveEvent","mouse","mouseUpEvent","scrollLeft","MelodyTimeline","measureRef","chordRef","barLength","measureJsxList","chordJsxList","minuteLen","scroll","clientWidth","symbolNmae","degreeName","_DegreeName","_ChordWrap","_MeasureWrap","_MeasureInner","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_MousePos","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","Soundfont","AudioContext","release","soundFontPlayer","QuantizeSwitch","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","getNextLeft","clientY","scrollTop","curPos","posX","lenWidth","newPos","prevFocus","MelodyInput","keyDownEvent","isSingle","keySwitchEvent","MelodyFrame","tableRef","pitchRef","setInvalidate2","isTune","scaleDivJsxList","divList","scaleJsxList","_ScaleLine","isBase","_ScaleList","notesJsxList","normalWidth","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_MouseLinePos","_MouseRange","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","_Test","editAnimation","keyframes","_MouseLine","TUNE_TIMELINE_WIDTH","_Scale","EditTab","preview","toggleEnsamble","playJsx","_SwitchInner","stopJsx","ensambleJsx","soloJsx","_Mode","_Buttons","_Switch","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","items","degreeRootName","chordRootName","_Lane","_Box","HomeManage","useAuth0","isAuthenticated","user","isLoading","userId","setUserId","email","registerLabel","registerAction","location","reload","_ListInfoDiv","_ItemnForm","ScoreInfoTab","owner","PreviewChannel","MainFrame","basename","process","RouterManage","str","URLSearchParams","useLocation","get","isDirect","path","exact","hashKey","DirectView","conteseq","getDecryptionedScoreSeq","dispnam","to","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","remove","_NowLoading","_Copylight","fadeIn","TotalHeader","loginWithRedirect","logout","origin","findUserInfo","userList","userProps","authButtonJsx","_UserName","isEntry","_LoginButton","_ACCENT","_NORMAL","_Menu","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","useCallback","Provider","App","document","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","StrictMode","getElementById","DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","scoreSeq","Hashids","encode","Base64","hashedScoreSeq","hashids","decode","hashedKey","queryType","sql","fetch","method","headers","Accept","createQueryRequestInit","response","json","results","userSeq","content","encodeURIComponent","zlib","gzipSync","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","plainData"],"mappings":"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","file":"static/js/main.c79f5760.chunk.js","sourcesContent":["import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_USER_ENV,\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n    SET_INVALIDATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_USER_ENV:\r\n            store.userEnv = payload.userEnv;\r\n            break;\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n        case ActionType.SET_INVALIDATE:\r\n            store.invalidate = payload.invalidate;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature, Scale } from \"../redux/store/score/scoreData\";\r\n\r\nnamespace TheoryUtil {\r\n\r\n    export const MAJOR_SCALE_INTERVALS = [0, 2, 4, 5, 7, 9, 11];\r\n    export const MINOR_SCALE_INTERVALS = [0, 2, 3, 5, 7, 8, 10];\r\n\r\n    export const KEY12_FLAT_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n    export const KEY12_SHARP_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n    ];\r\n\r\n    export const DEGREE12_FLAT_LIST = [\r\n        'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n    ];\r\n    // export const DEGREE12_FLAT_LIST = [\r\n    //     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n    // ];\r\n    export const DEGREE12_SHARP_LIST = [\r\n        'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n    ];\r\n\r\n    export const KEY12_MAJOR_SCALE_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const KEY12_MINOR_SCALE_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const getDisplayKeyScaleName = (keyIndex: number, scale: Scale) => {\r\n        return scale === 'major' ? KEY12_MAJOR_SCALE_LIST[keyIndex] :\r\n            KEY12_MINOR_SCALE_LIST[keyIndex] + 'm';\r\n    }\r\n\r\n    export const SCALE_DEF_LIST = ['major', 'minor'] as const;\r\n    export const BEAT_DEF_LIST = ['2/4', '4/4', '3/4', '6/8', '9/8', '12/8'] as const;\r\n\r\n    export type IntervalRelation =\r\n        'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n        'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n        'd7' | 'm7' | 'M7'\r\n        ;\r\n\r\n    export const isFlatFromRelation = (relation: IntervalRelation) => {\r\n        // 以下の場合#（シャープ）とする\r\n        switch (relation) {\r\n            case 'M2':\r\n            case 'M3':\r\n            case 'M6':\r\n            case 'M7':\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    export type SymbolAttribute =\r\n        'triad' |\r\n        'seventh' |\r\n        'add9th'\r\n        ;\r\n\r\n    export type SymbolParams = {\r\n        key: SymbolKey;\r\n        name: string;\r\n        base: null | SymbolKey;\r\n        attr?: SymbolAttribute;\r\n        structs: IntervalRelation[];\r\n    }\r\n\r\n    export type BeatProps = {\r\n        // mol: number;\r\n        // den: number;\r\n        // 1拍のメモリ（16分音符）の数\r\n        beatMemoriCount: number;\r\n        // 1小節の拍数\r\n        barBeatCnt: number;\r\n    }\r\n\r\n    /**\r\n     * 拍子より拍情報を取得する\r\n     * @param beatSignature 拍子\r\n     * @returns 拍情報\r\n     */\r\n    export const getBeatProps = (beatSignature: BeatSignature): BeatProps => {\r\n        switch (beatSignature) {\r\n            case '4/4': return { beatMemoriCount: 4, barBeatCnt: 4 };\r\n            case '2/4': return { beatMemoriCount: 4, barBeatCnt: 2 };\r\n            case '3/4': return { beatMemoriCount: 4, barBeatCnt: 3 };\r\n            case '6/8': return { beatMemoriCount: 6, barBeatCnt: 2 };\r\n            case '9/8': return { beatMemoriCount: 6, barBeatCnt: 3 };\r\n            case '12/8': return { beatMemoriCount: 6, barBeatCnt: 4 };\r\n        };\r\n        // return {} as BeatProps;\r\n    }\r\n\r\n    /**\r\n     * 拍の長さからコードの持続時間をミリ秒で算出する\r\n     * @param beatLen \r\n     * @param minute \r\n     * @param bpm \r\n     * @param beatSignature \r\n     * @returns \r\n     */\r\n    export const calcSustainMsec = (beatLen: number, minute: number, bpm: number, beatSignature: BeatSignature): number => {\r\n        const beatMemoriCount = getBeatProps(beatSignature).beatMemoriCount;\r\n        const minuteLen = minute * (1 / beatMemoriCount);\r\n        return 60000 / bpm * (beatLen + minuteLen);\r\n    }\r\n\r\n\r\n    export type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\n    export type SymbolKey =\r\n        'major' |\r\n        'minor' |\r\n        'suspend4th' |\r\n        'diminish' |\r\n        'augument' |\r\n        'major-maj7th' |\r\n        'major-min7th' |\r\n        'minor-7th' |\r\n        'minor-maj7th' |\r\n        'sus4-7th' |\r\n        'diminish-7th' |\r\n        'augument-7th' |\r\n        'major-add9th' |\r\n        'minor-add9th' |\r\n        'sixth-9th' |\r\n        'minor-minus5' |\r\n        'major-minus5' |\r\n        'minor7-minus5' |\r\n        'major-maj9th' |\r\n        'major-9th'\r\n        ;\r\n\r\n    export type DegreeProps = {\r\n        index: number;\r\n        isFlat: boolean;\r\n    };\r\n\r\n    export type ChordProps = {\r\n        root: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    };\r\n\r\n    export const SYMBOL_LIST: readonly SymbolParams[] = [\r\n        {\r\n            key: 'major', name: '',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor', name: 'm',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'suspend4th', name: 'sus4',\r\n            base: null,\r\n            structs: ['p1', 'p4', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish', name: 'dim',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish-7th', name: 'dim7',\r\n            base: 'diminish',\r\n            structs: ['p1', 'm3', 'd5', 'd7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'augument', name: 'aug',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'a5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'augument-7th', name: 'aug7',\r\n            base: 'augument',\r\n            structs: ['p1', 'M3', 'a5', 'm7']\r\n        },\r\n        {\r\n            key: 'minor-minus5', name: 'm(-5)',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'major-minus5', name: '-5',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor7-minus5', name: 'm7(-5)',\r\n            base: 'minor-minus5',\r\n            structs: ['p1', 'm3', 'd5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-maj7th', name: 'maj7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-min7th', name: '7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'minor-7th', name: 'm7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'sus4-7th', name: '7sus4',\r\n            base: 'suspend4th',\r\n            structs: ['p1', 'p4', 'p5', 'm7']\r\n        },\r\n        {\r\n            key: 'minor-maj7th', name: 'mmaj7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-add9th', name: 'add9',\r\n            base: 'major',\r\n            structs: ['p1', 'M2', 'M3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'minor-add9th', name: 'madd9',\r\n            base: 'minor',\r\n            structs: ['p1', 'M2', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-maj9th', name: 'maj9',\r\n            base: 'major-maj7th',\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-9th', name: '9',\r\n            base: 'major-min7th',\r\n            structs: ['p1', 'm3', 'p5']\r\n        },\r\n    ];\r\n\r\n    /** インターバルの関係性 */\r\n    export const IntervalRelationProps = {\r\n        'p1': 0,\r\n        'm2': 1,\r\n        'M2': 2,\r\n        'm3': 3,\r\n        'M3': 4,\r\n        'p4': 5,\r\n        'd5': 6,\r\n        'p5': 7,\r\n        'a5': 8,\r\n        'm6': 8,\r\n        'M6': 9,\r\n        'd7': 9,\r\n        'm7': 10,\r\n        'M7': 11\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n    ];\r\n\r\n    export const DIATONIC_MINOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor-minus5' },\r\n        { root: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n    ];\r\n\r\n\r\n\r\n    export const DEGREE_ALL: readonly (DegreeProps | null)[] = [\r\n        null,\r\n        { index: 0, isFlat: false },\r\n        { index: 1, isFlat: false },\r\n        { index: 1, isFlat: true },\r\n        { index: 2, isFlat: false },\r\n        { index: 3, isFlat: false },\r\n        { index: 3, isFlat: true },\r\n        { index: 4, isFlat: false },\r\n        { index: 5, isFlat: false },\r\n        { index: 6, isFlat: false },\r\n        { index: 6, isFlat: true },\r\n        { index: 7, isFlat: false },\r\n        { index: 8, isFlat: false },\r\n        { index: 8, isFlat: true },\r\n        { index: 9, isFlat: false },\r\n        { index: 10, isFlat: false },\r\n        { index: 10, isFlat: true },\r\n        { index: 11, isFlat: false }\r\n    ];\r\n\r\n    export const getDegreeRoot = (props: DegreeProps) => {\r\n        const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n        return list[props.index];\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰ', 'Ⅰmaj7',\r\n        'Ⅱm', 'Ⅱm7',\r\n        'Ⅲm', 'Ⅲm7',\r\n        'Ⅳ', 'Ⅳmaj7',\r\n        'Ⅴ', 'Ⅴ7',\r\n        'Ⅵm', 'Ⅵm7',\r\n        'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n    ];\r\n\r\n    export const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰm', 'Ⅰm7',\r\n        'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n        'bⅢ', 'bⅢM7',\r\n        'Ⅳm', 'Ⅳm7',\r\n        'Ⅴm', 'Ⅴm7',\r\n        'bⅥ', 'bⅥM7',\r\n        'bⅦ', 'bⅦ7'\r\n    ];\r\n\r\n    export const getDiatonicDegreeList = (scale: Scale) => {\r\n        return scale === 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES :\r\n            DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\r\n    }\r\n\r\n    export const getRootName = (\r\n        props: DegreeProps,\r\n        baseKeyIndex: number\r\n    ): string => {\r\n        const list = props.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST;\r\n        return list[(baseKeyIndex + props.index) % 12];\r\n    }\r\n\r\n\r\n\r\n    export const getSymbolFromKey = (key: string): SymbolParams | undefined => {\r\n        return SYMBOL_LIST.find((symbol) => {\r\n            if (key === symbol.key) {\r\n                return symbol;\r\n            }\r\n        });\r\n        // return ret != undefined ? ret : SYMBOL_LIST[0];\r\n    }\r\n\r\n    export const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n        let list: SymbolKey[] = [];\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (key === symbol.base) {\r\n                list.push(symbol.key);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n\r\n    export const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n        return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n    }\r\n}\r\n\r\nexport default TheoryUtil;\r\n\r\n","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { BackingLayerData, BackingPatternProps, BackingSignalProps, BeatSignature, ChordBacking, DetailChord, DetailInit, PedalInfo, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { playHarmony } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nexport namespace BackingUtil {\r\n\r\n    // オクターブの数\r\n    export const OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    export const STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    export const CHANNEL_MAX = 12;\r\n\r\n    export const getChordDetails = (\r\n        root: TheoryUtil.DegreeProps,\r\n        keyIndex: number,\r\n        on: null | TheoryUtil.DegreeProps,\r\n        symbol: TheoryUtil.SymbolParams\r\n    ): [\r\n            string, BackingState.StructInfo[]\r\n        ] => {\r\n\r\n        // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n        const chordRootIndex = (root.index + keyIndex) % 12;\r\n        const rootName = TheoryUtil.getRootName(root, keyIndex);\r\n        let chordFullName = rootName + symbol.name;\r\n\r\n        let chordOnIndex = -1;\r\n        // オンコードが設定されている場合\r\n        if (on != null) {\r\n            const onName = TheoryUtil.getRootName(on, keyIndex);\r\n            chordFullName = `${chordFullName}/${onName}`;\r\n\r\n            chordOnIndex = (on.index + keyIndex) % 12;\r\n        }\r\n\r\n        // 構成音情報を算出\r\n        let structList: BackingState.StructInfo[] = symbol.structs.map(struct => {\r\n            const relation = struct;\r\n            const interval = TheoryUtil.IntervalRelationProps[relation];\r\n            const soundIndex = (chordRootIndex + interval) % 12;\r\n            const adjustOctave = Math.floor((chordRootIndex + interval) / 12);\r\n            const isFlat = TheoryUtil.isFlatFromRelation(relation);\r\n            return {\r\n                relation, soundIndex, isFlat, adjustOctave\r\n            }\r\n        });\r\n        // オンコードを考慮\r\n        if (chordOnIndex !== -1) {\r\n            let sameIndex = -1;\r\n            structList.some((info, i) => {\r\n                if (info.soundIndex === chordOnIndex) {\r\n                    sameIndex = i;\r\n                    return;\r\n                }\r\n            });\r\n            // オンコードが構成音と被っている場合リストから削除\r\n            if (sameIndex !== -1) {\r\n                structList.splice(sameIndex, 1);\r\n            }\r\n            // オンコードをリストに追加\r\n            structList.unshift({\r\n                relation: null,\r\n                soundIndex: chordOnIndex,\r\n                isFlat: false,\r\n                adjustOctave: 0\r\n            });\r\n            // 音程の昇順でソート\r\n            structList.sort((a, b) => {\r\n                return a.soundIndex - b.soundIndex;\r\n            });\r\n\r\n            /** ソート後のオンコードの場所 */\r\n            let onIndex = -1;\r\n            structList.some((sound, i) => {\r\n                if (sound.relation == null) {\r\n                    onIndex = i;\r\n                    return;\r\n                }\r\n            });\r\n            const onChordIndex = structList[onIndex].soundIndex;\r\n            const tempList: BackingState.StructInfo[] = [];\r\n            for (let i = onIndex; i < structList.length; i++) {\r\n                const sound = structList[i];\r\n                tempList.push(sound);\r\n            }\r\n            for (let i = 0; i < onIndex; i++) {\r\n                const sound = structList[i];\r\n                tempList.push(sound);\r\n            }\r\n            tempList.forEach(sound => {\r\n                sound.adjustOctave = 0;\r\n                if (sound.soundIndex < onChordIndex) {\r\n                    sound.adjustOctave = 1;\r\n                }\r\n            });\r\n            structList = tempList;\r\n        }\r\n        return [chordFullName, structList];\r\n    }\r\n\r\n    export const getInitialRecord = (divCount: number) => {\r\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    export const buildChannels = (table: boolean[][]): BackingState.ChannelParam[] => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    export const getVoicingListFromTable = (table: boolean[][]) => {\r\n\r\n        const voicingList: VoicingProps[] = [];\r\n        // ボイシングを設定\r\n        if (table != null) {\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        voicingList.push({ octave: i, struct: j });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return voicingList;\r\n    }\r\n\r\n    export const buildPatternProps = (editorPattern: BackingState.Pattern): BackingPatternProps => {\r\n        const channelSize = editorPattern.channels.length;\r\n        const layers: BackingLayerData[] = [];\r\n        editorPattern.layers.forEach(layer => {\r\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\r\n            const signals: BackingSignalProps[] = [];\r\n            layer.table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        signals.push({ x: j, y: i, status: cell });\r\n                    }\r\n                });\r\n            });\r\n            layers.push({ divs, notesList: signals, vels: layer.velocityList.slice() });\r\n        });\r\n        const pedals: PedalInfo[] = [];\r\n        editorPattern.pedalActs.forEach((pedal, i) => {\r\n            if (pedal != null) pedals.push({\r\n                divIndex: i, action: pedal\r\n            });\r\n        });\r\n        return { channelSize, pedals, layers };\r\n    }\r\n\r\n    export const getChannels = (voicingStructs: BackingState.ChannelParam[], size: number) => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: BackingState.ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n\r\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\r\n\r\n        const layers: BackingState.Layer[] = [];\r\n        console.log(JSON.stringify(scoreLayers));\r\n        scoreLayers.forEach(scoreLayer => {\r\n            const table: (BackingState.NoteStatus | null)[][] = [];\r\n            for (let i = 0; i < channelSize; i++) {\r\n                const record: (BackingState.NoteStatus | null)[] = [];\r\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\r\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\r\n                    record.push(notes == null ? null : notes.status);\r\n                }\r\n                table.push(record);\r\n            }\r\n            layers.push({\r\n                noteDivList: scoreLayer.divs,\r\n                table,\r\n                velocityList: scoreLayer.vels\r\n            });\r\n        });\r\n        console.log(JSON.stringify(layers));\r\n        return layers;\r\n    }\r\n\r\n    export const getPitchListFromVoicing = (\r\n        voicingList: VoicingProps[],\r\n        structList: BackingState.StructInfo[]\r\n    ) => {\r\n        // return voicingList.map((item) => {\r\n        //     const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        //     return 12 * item.octave + rootIndex + interval;\r\n        // });\r\n        return voicingList.map((item) => {\r\n            // const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n            // return 12 * item.octave + rootIndex + interval;\r\n            const struct = structList[item.struct];\r\n            const octave = item.octave + struct.adjustOctave;\r\n            return 12 * octave + struct.soundIndex;\r\n        });\r\n    }\r\n\r\n    export const playBacking = (\r\n        store: Store,\r\n        reserveTasks: NodeJS.Timeout[],\r\n        baseInfo: DetailInit,\r\n        backing: ChordBacking,\r\n        pitchIndexList: number[],\r\n        chordTime: number\r\n    ) => {\r\n        if (backing.pattern == null) {\r\n            pitchIndexList.forEach((index) => {\r\n                const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                const octave = Math.floor(index / 12);\r\n                const soundFullName = soundName + octave;\r\n                playHarmony(soundFullName, store, chordTime / 1000, 5);\r\n            });\r\n        } else {\r\n\r\n            const bpm = baseInfo.bpm;\r\n            const beatProps = TheoryUtil.getBeatProps(baseInfo.beatSignature);\r\n            const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (2 / 3);\r\n\r\n            const pattern = backing.pattern;\r\n            // const pedalIndexes = pattern.pedals === undefined ? null : pattern.pedals.map(pedal => pedal.divIndex);\r\n\r\n            /** ペダルの有効範囲を定義したリスト */\r\n            const pedalRangeList: { start: number, end: number, action: BackingState.PedalAction }[] = [];\r\n            pattern.layers.forEach((layer, i) => {\r\n                /** バッキング内で経過した時間（ノーツごとの開始時間） */\r\n                let total = 0;\r\n                const timeList: {\r\n                    start: number, sustain: number\r\n                }[] = layer.divs.map(div => {\r\n                    /** 開始時間 */\r\n                    const start = 60000 / bpm * total;\r\n                    let normal = 4 / div.rate * adjustRate;\r\n                    if (div.isDot) normal *= 1.5;\r\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                    total += normal;\r\n                    return { start, sustain: 60000 / bpm * normal };\r\n                });\r\n\r\n                // ペダル状態のキャッシュを作成\r\n                if (i === 0 && pattern.pedals != undefined) {\r\n                    timeList.forEach((divTime, j) => {\r\n                        const pedalInfo = pattern.pedals?.find((pedal) => {\r\n                            if (j === pedal.divIndex) return pedal;\r\n                        });\r\n                        if (pedalInfo != undefined) {\r\n\r\n                            if (pedalRangeList.length > 0) {\r\n                                pedalRangeList[pedalRangeList.length - 1].end = divTime.start;\r\n                            }\r\n                            pedalRangeList.push({\r\n                                start: divTime.start,\r\n                                end: chordTime,\r\n                                action: pedalInfo.action\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /** 除外リスト（タイで吸収されるノーツ） */\r\n                const ignoreList: { x: number, y: number }[] = [];\r\n                layer.notesList.forEach((notes) => {\r\n\r\n                    // 除外リストに含まれている場合、以降の処理をしない\r\n                    if (ignoreList.find(ig => {\r\n                        if (ig.x === notes.x && ig.y === notes.y) return ig;\r\n                    }) !== undefined) return;\r\n\r\n                    const timeInfo = timeList[notes.x];\r\n                    const timing = notes.status.timing == undefined ? 0 : notes.status.timing;\r\n                    const timingAdj = timing * (60000 / bpm * 1 / 32);\r\n                    const startTime = timeInfo.start + timingAdj;\r\n\r\n                    /** 持続時間 */\r\n                    let sustainTime = timeInfo.sustain;\r\n                    if (notes.status.signal === 's') {\r\n                        // スタッカートの場合半分の音価にする\r\n                        sustainTime *= 0.5;\r\n                    } else if (notes.status.signal === 't') {\r\n\r\n                        let inc = notes.x;\r\n                        let isNext = true;\r\n                        while (isNext) {\r\n                            inc++;\r\n                            // 次のノーツを探す\r\n                            const nextNotes = layer.notesList.find(next => {\r\n                                if (next.x === inc && next.y === notes.y) {\r\n                                    return next;\r\n                                }\r\n                            });\r\n                            if (nextNotes != undefined) {\r\n                                sustainTime += timeList[inc].sustain;\r\n                                // 次の要素を除外する\r\n                                ignoreList.push({ x: inc, y: notes.y });\r\n                                // 次のノーツがタイだったらループを継続\r\n                                isNext = nextNotes.status.signal === 't';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //ペダルを検出\r\n                    for (let k = 0; k < pedalRangeList.length; k++) {\r\n                        const pedal = pedalRangeList[k];\r\n                        const notesTail = startTime + timeInfo.sustain;\r\n                        if (pedal.action !== 'off' && notesTail > pedal.start &&\r\n                            notesTail <= pedal.end\r\n                        ) {\r\n                            // ペダルの持続時間で更新\r\n                            sustainTime = pedal.end - startTime;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    /** 音量 */\r\n                    const velAdj = notes.status.velAdj == undefined ? 0 : notes.status.velAdj;\r\n                    let gain = layer.vels[notes.x] + velAdj;\r\n                    if (gain < 1) gain = 1;\r\n                    if (gain > 10) gain = 10;\r\n                    gain *= 0.6;\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            const index = pitchIndexList[notes.y];\r\n                            const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                            const octave = Math.floor(index / 12);\r\n                            const soundFullName = soundName + octave;\r\n                            playHarmony(soundFullName, store, sustainTime / 1000, gain);\r\n                        }, startTime)\r\n                    );\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    export const stopPreview = (store: Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        store.instruments.harmony?.stop();\r\n        state.isPreview = false;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    export const getLimitLen = (beatLen: number, minute: BackingState.MinuteProps, beatSignature: BeatSignature) => {\r\n        // 16分音符の長さで割る\r\n        const memoriCount = TheoryUtil.getBeatProps(beatSignature).beatMemoriCount;\r\n        const minuteLen = minute.head / memoriCount + minute.tail / memoriCount;\r\n        return (beatLen + minuteLen);\r\n    }\r\n\r\n    export const getUsingLenFromDivs = (divs: BackingState.NoteDiv[], beatSignature: BeatSignature) => {\r\n        const beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        const adjustRate = 4 / beatProps.beatMemoriCount;\r\n        return divs.reduce((prev, cur) => {\r\n            let len = 1 / cur.rate * adjustRate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            return prev + len * 4;\r\n        }, 0);\r\n    }\r\n\r\n    export const getInitVoicingTable = (voicingList: VoicingProps[], structCnt: number): boolean[][] => {\r\n        const table = new Array<boolean[]>(8);\r\n        for (let i = 0; i < table.length; i++) {\r\n            table[i] = new Array<boolean>(6);\r\n            const col = table[i];\r\n            for (let j = 0; j < col.length; j++) {\r\n                // 構成音をオーバーしていた場合セットしない\r\n                if (j >= structCnt) continue;\r\n\r\n                const isExist = voicingList.find(voicing => {\r\n                    if (voicing.octave === i && voicing.struct === j) {\r\n                        return voicing;\r\n                    }\r\n                });\r\n                table[i][j] = isExist != null;\r\n            }\r\n        }\r\n        return table;\r\n    };\r\n\r\n    export const getEditorPatternFromChordBacking = (voicingTable: boolean[][], patternProps: BackingPatternProps | null) => {\r\n        let pattern: BackingState.Pattern | null = null;\r\n        if (patternProps != null) {\r\n            const voicingStructs = BackingUtil.buildChannels(voicingTable);\r\n            const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\r\n            const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);\r\n            let pedalActs: (null | BackingState.PedalAction)[] = [];\r\n            if (patternProps.pedals != undefined) {\r\n                for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\r\n                    const pedal = patternProps.pedals.find(pedal => {\r\n                        if (pedal.divIndex === i) return pedal;\r\n                    });\r\n                    if (pedal == undefined) pedalActs.push(null);\r\n                    else pedalActs.push(pedal.action);\r\n                }\r\n            } else {\r\n                for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\r\n                    if (i === 0) pedalActs.push('on');\r\n                    else pedalActs.push(null);\r\n                }\r\n            }\r\n            pattern = {\r\n                channelIndex: -1,\r\n                lenIndex: 0,\r\n                mode: 'velocity',\r\n                layerIndex: 0,\r\n                channels,\r\n                layers,\r\n                pedalActs\r\n            };\r\n        }\r\n        return pattern;\r\n    }\r\n\r\n    export const hasBackingError = (detail: DetailChord, beatSignature: BeatSignature, structCnt: number) => {\r\n        const chordBacking = detail.backing;\r\n        const voicingList = detail.backing.voicingList;\r\n        const pattern = chordBacking.pattern;\r\n        \r\n        let hasError = false;\r\n\r\n        // ボイシングが構成音に収まっているかチェック\r\n        voicingList.some(voicing => {\r\n            if(voicing.struct > structCnt - 1) {\r\n                hasError = true;\r\n                return true; // ループから脱出\r\n            }\r\n        });\r\n        if (pattern != null) {\r\n\r\n            const limitLen = BackingUtil.getLimitLen(detail.beatLen, detail.minute, beatSignature);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getUsingLenFromDivs(layer.divs, beatSignature);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkEditorError = (\r\n        chordInfo: BackingState.ChordInfo,\r\n        voicingList: VoicingProps[],\r\n        pattern: null | BackingState.Pattern\r\n    ): boolean => {\r\n        let hasError = false;\r\n        if (pattern != null) {\r\n\r\n            // 選択しているボイシングがチャンネル数に満たない場合\r\n            if (voicingList.length < pattern.channels.length) hasError = true;\r\n\r\n            const limitLen = BackingUtil.getLimitLen(chordInfo.beatLen, chordInfo.minute, chordInfo.init.beatSignature);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getUsingLenFromDivs(layer.noteDivList, chordInfo.init.beatSignature);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n\r\n            // 裏レイヤーのノーツと重なっている場合\r\n            pattern.layers[0].table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        if (checkOverlapBackLayer(pattern.layers, 0, i, j)) {\r\n                            hasError = true;\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkOverlapBackLayer = (layers: BackingState.Layer[], layerIndex: number, channelIndex: number, divIndex: number): boolean => {\r\n        const baseLayer = layers[layerIndex];\r\n        const backLayer = layers[layerIndex === 0 ? 1 : 0];\r\n        const [left, right] = getDivRange(baseLayer.noteDivList, divIndex);\r\n        // console.log(`left=${left}, right=${right}`);\r\n        let isOverlap = false;\r\n        for (let i = 0; i < backLayer.noteDivList.length; i++) {\r\n            if (backLayer.table[channelIndex][i] != null) {\r\n                const [backLeft, backRight] = getDivRange(backLayer.noteDivList, i);\r\n                if (right > backLeft && left < backRight) {\r\n                    isOverlap = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return isOverlap;\r\n    }\r\n\r\n    export const getDivRange = (divs: BackingState.NoteDiv[], divIndex: number): [number, number] => {\r\n        let [left, right] = [0, 0];\r\n\r\n        divs.slice(0, divIndex + 1).forEach((cur, i) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            left = right;\r\n            right += len * 4;\r\n        });\r\n        return [left, right];\r\n    }\r\n\r\n    export const isPermitDot = (note: BackingState.NoteDiv) => {\r\n        return [8, 4, 2].includes(note.rate) && note.div3 === 0;\r\n    }\r\n\r\n    export const isPermit3ren = (note: BackingState.NoteDiv) => {\r\n        return [8, 4].includes(note.rate) && !note.isDot;\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { symbolName } from \"typescript\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n/**\r\n * データを高速で参照するために、\r\n * 事前に計算したデータを保持するためのユーティリティを提供する\r\n */\r\nnamespace CacheUtil {\r\n\r\n    /**\r\n     * ハーモナイズのキャッシュを生成する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const updateHarmonizeCache = (store: Store, dispatcher: Dispatcher) => {\r\n        const chordList = store.scoreData.chordList;\r\n        const scoreState = store.scoreState;\r\n        const init = (chordList[0].detail as DetailInit);\r\n\r\n        const elementCacheList: ScoreCache.Element[] = [];\r\n        const sectionCacheList: ScoreCache.Section[] = [];\r\n        const beatCacheList: ScoreCache.BeatRange[] = [];\r\n        const scaleCacheList: ScoreCache.KeyScaleRange[] = [];\r\n        const tempoCacheList: ScoreCache.TempoRange[] = [];\r\n        const measureCacheList: ScoreCache.Measure[] = [];\r\n\r\n        // 初期値情報\r\n        let keyIndex = init.keyIndex;\r\n        let scale = init.scale;\r\n        let bpm = init.bpm;\r\n\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let sectionBeatSum = 0;\r\n        let pastSecond = 0;\r\n        let curSecond = 0;\r\n        let chordIndex = -1;\r\n        // let curTotalBeat = 0;\r\n        let curMemoriCount = 0;\r\n        let totalBarCount = 0;\r\n\r\n        // 経過した16分音符のカウント\r\n        let totalMemoriCount = 0;\r\n        let beatRangeMemoriCount = 0;\r\n        let totalBeat = 0;\r\n        let totalMemoriBarCount = 0;\r\n\r\n        let chordBlockNo = -1;\r\n\r\n        //拍キャッシュの産出に使う変数\r\n        let beatSignature = init.beatSignature;\r\n\r\n        let scaleMemoriCount = 0;\r\n        let tempoMemoriCount = 0;\r\n\r\n        const addScaleRange = () => {\r\n            scaleCacheList.push({\r\n                keyIndex,\r\n                scale,\r\n                memoriCnt: scaleMemoriCount\r\n            });\r\n            scaleMemoriCount = 0;\r\n        }\r\n        const addTempoRange = () => {\r\n            tempoCacheList.push({\r\n                bpm,\r\n                beatRate: beatProps.beatMemoriCount / 4,\r\n                memoriCnt: tempoMemoriCount\r\n            });\r\n            tempoMemoriCount = 0;\r\n        }\r\n\r\n\r\n        let beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        chordList.forEach((element, i) => {\r\n\r\n            const prevBeat = totalBeat;\r\n            // ブロック頭のメモリ\r\n            const prevMemoriCount = totalMemoriCount;\r\n            // ブロック頭の小節\r\n            const prevBarCount = totalBarCount;\r\n            const prevMinute = totalMinute;\r\n            const type = element.type;\r\n\r\n            switch (type) {\r\n                // 固定要素ブロック\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        pastSecond += curSecond;\r\n                    }\r\n                } break;\r\n\r\n                // セクション要素ブロック\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                } break;\r\n\r\n                // コード要素ブロック\r\n                case 'chord': {\r\n                    pastSecond += curSecond;\r\n                    // curTotalBeat += curSustain;\r\n\r\n                    const detail = element.detail as DetailChord;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    totalMinute += minute;\r\n                    chordIndex++;\r\n\r\n                    curMemoriCount = detail.beatLen * beatProps.beatMemoriCount + minute;\r\n\r\n                    const prevBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    totalBeat += detail.beatLen;\r\n                    const curBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    // 小節が変わった場合、合計小節をインクリメント\r\n                    if (prevBar !== curBar) {\r\n                        totalBarCount++\r\n                    }\r\n\r\n                    // スケールキャッシュの長さを加算\r\n                    scaleMemoriCount += curMemoriCount;\r\n                    tempoMemoriCount += curMemoriCount;\r\n\r\n                    // 時間の計算\r\n                    curSecond = TheoryUtil.calcSustainMsec(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        bpm,\r\n                        beatSignature\r\n                    );\r\n\r\n                    // メモリの加算\r\n                    for (let j = 0; j < curMemoriCount; j++) {\r\n                        let rate: ScoreCache.MeasureRate = 16;\r\n                        if (beatRangeMemoriCount % beatProps.beatMemoriCount === 0) rate = 4;\r\n                        else if (beatRangeMemoriCount % (beatProps.beatMemoriCount / (beatProps.beatMemoriCount / 2)) === 0) rate = 8;\r\n\r\n                        const barMemoriCount = beatProps.barBeatCnt * beatProps.beatMemoriCount;\r\n\r\n                        let dispBarCount = -1;\r\n                        if (beatRangeMemoriCount % barMemoriCount === 0) {\r\n                            // 拍子セクションの合計メモリ数が小節のメモリ数で割り切れる場合、小節数を表示する\r\n                            totalMemoriBarCount++;\r\n                            dispBarCount = totalMemoriBarCount;\r\n                        }\r\n                        measureCacheList.push({ rate, barCount: dispBarCount });\r\n                        totalMemoriCount++;\r\n                        beatRangeMemoriCount++;\r\n                    }\r\n\r\n                    // コードブロック連番の設定\r\n                    chordBlockNo++;\r\n                } break;\r\n\r\n                // アルター要素ブロックする\r\n                case 'alter': {\r\n                    const detail = element.detail as DetailAlter;\r\n                    switch (detail.alterType) {\r\n                        // 音階が変わる\r\n                        case 'modulate': {\r\n                            addScaleRange();\r\n                            switch (detail.modRel) {\r\n                                case 'domm': {\r\n                                    keyIndex = (keyIndex + 24 + 7 * detail.dommVal) % 12;\r\n                                } break;\r\n                                case 'key': {\r\n                                    keyIndex = (keyIndex + 12 + detail.keyAdj) % 12;\r\n                                } break;\r\n                                case 'parallel': {\r\n                                    keyIndex = (keyIndex + 12 + (scale === 'major' ? -1 : 1) * 3) % 12;\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                                case 'relative': {\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // テンポが変わる\r\n                        case 'tempo': {\r\n                            addTempoRange();\r\n                            switch (detail.tempoRel) {\r\n                                case 'diff': {\r\n                                    bpm += detail.tempoDiff;\r\n                                } break;\r\n                                case 'rate': {\r\n                                    bpm = Math.floor(bpm * 1 * (detail.tempoRate / 100));\r\n                                } break;\r\n                                case 'abs': {\r\n                                    bpm = detail.tempoAbs;\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // 拍子が変わる\r\n                        case 'beat': {\r\n                            addTempoRange();\r\n                            // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n                            beatCacheList.push({\r\n                                beatSignature,\r\n                                memoriCnt: beatRangeMemoriCount\r\n                            });\r\n\r\n                            beatSignature = detail.beatSignature;\r\n                            // 拍を初期化する（拍変更後はいかなる場合も0から数える）\r\n                            totalBeat = 0;\r\n                            beatRangeMemoriCount = 0;\r\n\r\n                            beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n                        } break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n\r\n            elementCacheList.push({\r\n                bar: prevBarCount,\r\n                surplusBeat: prevBeat % beatProps.barBeatCnt,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                scale,\r\n                bpm,\r\n                beatSignature,\r\n                sectionNo,\r\n                pastSecond,\r\n                chordIndex,\r\n                curTotalMemori: prevMemoriCount,\r\n                // chordFullName,\r\n                // structList,\r\n                chordBlockNo,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n        scaleCacheList.push({\r\n            keyIndex,\r\n            scale,\r\n            memoriCnt: scaleMemoriCount\r\n        });\r\n\r\n        beatCacheList.push({\r\n            beatSignature,\r\n            memoriCnt: beatRangeMemoriCount\r\n        });\r\n        addTempoRange();\r\n\r\n        scoreState.elementCacheList = elementCacheList;\r\n        scoreState.sectionCacheList = sectionCacheList;\r\n        scoreState.beatCacheList = beatCacheList;\r\n        scoreState.tempoCacheList = tempoCacheList;\r\n        scoreState.scaleCacheList = scaleCacheList;\r\n        scoreState.measureCacheList = measureCacheList;\r\n\r\n        scoreState.chordCacheList = createChordCacheList(chordList, elementCacheList);\r\n\r\n        dispatcher.score.setScoreState(scoreState);\r\n    }\r\n\r\n    export const createChordCacheList = (chordList: ChordElement[], elementCacheList: ScoreCache.Element[]) => {\r\n\r\n        const chordCacheList: ScoreCache.Chord[] = [];\r\n\r\n        chordList.forEach((element, i) => {\r\n\r\n            const type = element.type;\r\n            if (type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const cache = elementCacheList[i];\r\n\r\n\r\n                const keyIndex = cache.keyIndex;\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                const [chordFullName, structList] = detail.root != null ? BackingUtil.getChordDetails(\r\n                    detail.root,\r\n                    keyIndex,\r\n                    detail.on,\r\n                    symbol\r\n                ) : ['', []];\r\n\r\n                const backingError = BackingUtil.hasBackingError(detail, cache.beatSignature, structList.length);\r\n\r\n                chordCacheList.push({\r\n                    structList,\r\n                    chordFullName,\r\n                    backingError\r\n                });\r\n\r\n            }\r\n        });\r\n        return chordCacheList;\r\n    }\r\n\r\n    // export const getChordCache = (focusIndex: number, ) => {\r\n\r\n    // }\r\n\r\n\r\n    // export const updateMelodyCache = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    //     const notesList = store.scoreData.notesList;\r\n    //     const state = store.melodyState;\r\n\r\n    //     const notesCacheList: ScoreCache.NotesCache[] = [];\r\n\r\n    //     notesList.forEach((notes) => {\r\n    //         const startTime = 0;\r\n    //         const duration = 0;\r\n    //         notesCacheList.push({\r\n    //             startTime,\r\n    //             duration\r\n    //         });\r\n    //     });\r\n    // }\r\n\r\n    export const getKeyScaleFromNotesPos = (pos: number, scaleCacheList: ScoreCache.KeyScaleRange[]) => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let range: ScoreCache.KeyScaleRange | null = null;\r\n        // console.log(`count: ${scaleCacheList.length}`);\r\n        for (let i = 0; i < scaleCacheList.length; i++) {\r\n            const info = scaleCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                range = scaleCacheList[i - 1];\r\n                break;\r\n            }\r\n            tail += info.memoriCnt;\r\n            // console.log(`curPos: ${tail}`);\r\n        }\r\n        // console.log(`curMemori: ${curMemori}`);\r\n        return range === null ? scaleCacheList[scaleCacheList.length - 1] : range;\r\n    }\r\n\r\n    /**\r\n     * ノーツを再生する開始時間と持続時間を産出して返す\r\n     * @param pos ノーツの位置\r\n     * @param len ノーツの長さ\r\n     * @param tempoCacheList テンポのキャッシュリスト\r\n     * @returns \r\n     */\r\n    export const getTimeInfoFromNotesPos = (pos: number, len: number, tempoCacheList: ScoreCache.TempoRange[]): [number, number] => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let posTime = 0;\r\n        let pastLen = 0;\r\n        let last: ScoreCache.TempoRange | null = null;\r\n        for (let i = 0; i < tempoCacheList.length; i++) {\r\n            const info = tempoCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                last = tempoCacheList[i - 1];\r\n                break;\r\n            }\r\n            const beatLen = info.memoriCnt / 4;\r\n            posTime += 60 / info.bpm * beatLen;\r\n            pastLen += beatLen;\r\n            tail += info.memoriCnt;\r\n        }\r\n        if (last === null) {\r\n            last = tempoCacheList[tempoCacheList.length - 1];\r\n        }\r\n\r\n        const beatLen = (pos - pastLen) * last.beatRate;\r\n        posTime += 60 / last.bpm * beatLen;\r\n\r\n        const lenTime = 60 / last.bpm * len * last.beatRate;\r\n\r\n        return [posTime, lenTime];\r\n    }\r\n}\r\n\r\nexport default CacheUtil;\r\n","import { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += (notes.len4 ?? 0);\r\n    total += (notes.len8 ?? 0) / 2;\r\n    total += (notes.len16 ?? 0) / 4;\r\n    total += (notes.len32 ?? 0) / 8;\r\n    total += (notes.len4div3 ?? 0) / 3;\r\n    total += (notes.len8div3 ?? 0) / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    const ml: MelodyLength = {};\r\n    const len4 = (notes1.len4 ?? 0) + (notes2.len4 ?? 0);\r\n    if (len4 > 0) ml.len4 = len4;\r\n    const len8 = (notes1.len8 ?? 0) + (notes2.len8 ?? 0);\r\n    if (len8 > 0) ml.len8 = len8;\r\n    const len16 = (notes1.len16 ?? 0) + (notes2.len16 ?? 0);\r\n    if (len16 > 0) ml.len16 = len16;\r\n    const len32 = (notes1.len32 ?? 0) + (notes2.len32 ?? 0);\r\n    if (len32 > 0) ml.len32 = len32;\r\n    const len4div3 = (notes1.len4div3 ?? 0) + (notes2.len4div3 ?? 0);\r\n    if (len4div3 > 0) ml.len4 = len4div3;\r\n    const len8div3 = (notes1.len8div3 ?? 0) + (notes2.len8div3 ?? 0);\r\n    if (len8div3 > 0) ml.len8div3 = len8div3;\r\n    return getSortetdNotesLen(ml);\r\n}\r\n\r\nconst getSortetdNotesLen = (base: MelodyLength) => {\r\n    let len4 = base.len4 ?? 0;\r\n    let len8 = base.len8 ?? 0;\r\n    let len16 = base.len16 ?? 0;\r\n    let len32 = base.len32 ?? 0;\r\n    let len4div3 = base.len4div3 ?? 0;\r\n    let len8div3 = base.len8div3 ?? 0;\r\n\r\n    const ml: MelodyLength = {};\r\n\r\n    const len32Cnt2 = Math.floor(len32 / 2);\r\n    len32 -= len32Cnt2 * 2;\r\n    len16 += len32Cnt2;\r\n\r\n    const len8div3Cnt3 = Math.floor(len8div3 / 3);\r\n    len8div3 -= len8div3Cnt3 * 3;\r\n    len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(len8div3 / 2);\r\n    len8div3 -= len8div3Cnt2 * 2;\r\n    len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(len4div3 / 3);\r\n    len4div3 -= len4div3Cnt3 * 3;\r\n    len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(len16 / 2);\r\n    len16 -= len16Cnt2 * 2;\r\n    len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(len8 / 2);\r\n    len8 -= len8Cnt2 * 2;\r\n    len4 += len8Cnt2;\r\n\r\n    if (len4 > 0) ml.len4 = len4;\r\n    if (len8 > 0) ml.len8 = len8;\r\n    if (len16 > 0) ml.len16 = len16;\r\n    if (len32 > 0) ml.len32 = len32;\r\n    if (len4div3 > 0) ml.len4div3 = len4div3;\r\n    if (len8div3 > 0) ml.len8div3 = len8div3;\r\n\r\n    return ml;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len32 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 8: len32 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n\r\n    const ml: MelodyLength = {};\r\n    if (len4 > 0) ml.len4 = len4;\r\n    if (len8 > 0) ml.len8 = len8;\r\n    if (len16 > 0) ml.len16 = len16;\r\n    if (len32 > 0) ml.len32 = len32;\r\n    if (len4div3 > 0) ml.len4div3 = len4div3;\r\n    if (len8div3 > 0) ml.len8div3 = len8div3;\r\n    return getSortetdNotesLen(ml);\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if ((notes.len32 ?? 0) > 0) return 8;\r\n    else if ((notes.len8div3 ?? 0) > 0) return 6;\r\n    else if ((notes.len16 ?? 0) > 0) return 4;\r\n    else if ((notes.len4div3 ?? 0) > 0) return 3;\r\n    else if ((notes.len8 ?? 0) > 0) return 2;\r\n    else if ((notes.len4 ?? 0) > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playHarmony = (soundFullName: string, store: Store, duration: number, gain: number) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, { gain, duration });\r\n    } else {\r\n        alert('null');\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nnamespace MelodyUtil {\r\n\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        state.isPreview = false;\r\n        // state.focusIndex = state.lastFocus;\r\n        // state.distIndex = state.focusIndex;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        // store.instruments.sampler.releaseAll();\r\n        dispatcher.melody.setState(state);\r\n        dispatcher.melody.adjustScrollX();\r\n    }\r\n\r\n    /**\r\n     * プレビュー再生を開始する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const reserveTasks: NodeJS.Timeout[] = [];\r\n        const instrument = store.instruments.soundfontPlayer;\r\n\r\n        // 開始するフォーカス（非選択時は最初から）\r\n        const start = state.focusIndex === -1 ? 0 : state.focusIndex;\r\n\r\n        // プレビュー開始時のフォーカスを保持する\r\n        state.lastFocus = state.focusIndex;\r\n        state.isPreview = true;\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = start; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                        dispatcher.melody.adjustScrollX();\r\n                        // dispatcher.melody.setState(state);\r\n                    }, 0);\r\n                }, (posTime - firstTime) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (posTime - firstTime + lenTime) * 1000)\r\n                );\r\n            }\r\n        }\r\n\r\n        // ハーモニーを再生\r\n        if (!state.isSolo) {\r\n            previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n\r\n        dispatcher.system.setReserveTasks(reserveTasks);\r\n        dispatcher.melody.setState(state);\r\n    }\r\n\r\n    const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        const update = store.invalidate.melody as () => void;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = 3; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                if (cache.pastSecond < start) continue;\r\n\r\n                const detail = element.detail as DetailChord;\r\n\r\n                if (detail.root == null) return;\r\n\r\n                // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\r\n                // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n\r\n                // const chordTime = 60 / cache.bpm * len;\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const chordTime = TheoryUtil.calcSustainMsec(\r\n                    detail.beatLen,\r\n                    minute,\r\n                    cache.bpm,\r\n                    cache.beatSignature\r\n                );\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // sampler.releaseAll();\r\n                        // stopPiano(store);\r\n\r\n                        // const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                        // const div = pickingDelay / pitchList.length;\r\n\r\n                        // pitchList.forEach((index, j) => {\r\n                        //     const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        //     const octave = Math.floor(index / 12);\r\n                        //     const soundFullName = soundName + octave;\r\n                        //     playPiano(soundFullName, store, chordTime);\r\n                        // });\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n                        setTimeout(() => {\r\n                            store.melodyState.tableMouse.curChord = element;\r\n                            update();\r\n                            // dispatcher.melody.setState(store.melodyState);\r\n                        }, 0);\r\n                    }, cache.pastSecond - start - adjsut)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const chordList = store.scoreData.chordList;\r\n        const cacheList = store.scoreState.elementCacheList;\r\n        const cache = cacheList[3];\r\n        const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n        const init = chordList[0].detail as DetailInit;\r\n        const curChord = state.tableMouse.curChord;\r\n        const reserveTasks = store.reserveTasks;\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            // const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            // const onIndex = detail.on == null ? -1 : ((detail.on.index + init.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n            // const chordTime = 60 / init.bpm * len;\r\n            const minute = detail.minute.head + detail.minute.tail;\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                detail.beatLen,\r\n                minute,\r\n                init.bpm,\r\n                init.beatSignature\r\n            );\r\n\r\n            BackingUtil.playBacking(store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.melody.setState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.melody.setState(state);\r\n\r\n        }\r\n    }\r\n\r\n    export type Quantize = 32 | 16| 8 | 4;\r\n\r\n    export const isEnableQuantize = (quantize: Quantize, notes: MelodyLength) => {\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyUtil;","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailAlter, DetailChord, DetailInit, DetailSection, Scale, ScoreData, MelodyNotes, VoicingProps } from \"../store/score/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/score/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/score/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport MelodyUtil, { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\nimport { Invalidate } from \"../store/invalidate\";\r\nimport BackingState from \"../store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport CacheUtil from \"../../utils/cacheUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport ScoreCache from \"../store/score/scoreCache\";\r\nimport { UserEnv } from \"../store/userEnv\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n        setUserEnv: (userEnv: UserEnv) => {\r\n            this.dispatch(ActionType.SET_USER_ENV, { userEnv });\r\n        },\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        },\r\n\r\n        setInvalidate: (invalidate: Invalidate) => {\r\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        saveFile: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const options = {\r\n                types: [\r\n                    {\r\n                        accept: {\r\n                            'text/plain': ['.lcrs'],\r\n                        },\r\n                    },\r\n                ],\r\n            };\r\n            const fileHandle = state.fileHandle;\r\n            if (fileHandle != null) {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await fileHandle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(JSON.stringify(data));\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = fileHandle;\r\n                    this.score.setScoreState({ ...state });\r\n                    const file = await fileHandle.getFile();\r\n                    // alert('saved successfully!');\r\n                    console.log('saved successfully!');\r\n                })();\r\n            } else {\r\n                window.showSaveFilePicker(options).then((handle) => {\r\n                    (async () => {\r\n                        //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                        const writable = await handle.createWritable();\r\n                        //テキストデータの書き込み\r\n                        const text = DataUtil.gZip(JSON.stringify(data));\r\n                        await writable.write(text);\r\n                        //ファイルを閉じる\r\n                        await writable.close();\r\n                        state.fileHandle = handle;\r\n                        this.score.setScoreState({ ...state });\r\n                    })();\r\n                }).catch(() => {\r\n                    console.log('キャンセルされました');\r\n                });\r\n            }\r\n        },\r\n\r\n        setPiano: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, harmony: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        clearCache: () => {\r\n            const scoreState = this.store.scoreState;\r\n            scoreState.focusIndex = -1;\r\n            scoreState.distIndex = -1;\r\n            scoreState.initialBeat = 4;\r\n            scoreState.elementCacheList = [];\r\n            scoreState.beatCacheList = [];\r\n            scoreState.chordCacheList = [];\r\n            scoreState.scaleCacheList = [];\r\n            scoreState.tempoCacheList = [];\r\n            scoreState.measureCacheList = [];\r\n            scoreState.sectionCacheList = [];\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                state.distIndex = state.focusIndex;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 選択範囲の終点を移動する\r\n         * @param isNext \r\n         */\r\n        moveDist: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.distIndex + sub].type !== 'fixed') {\r\n                state.distIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n            state.focusIndex = !isTail ? distHead : distTail;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        flashElement: (index: number) => {\r\n            // const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[index];\r\n\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n\r\n            // bodyRef.style.backgroundColor = '#ffef5f';\r\n            // setTimeout(() => {\r\n            //     bodyRef.style.backgroundColor = '';\r\n            // }, 10);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                if (isUp) {\r\n                    detail.root = { index: 0, isFlat: false };\r\n                    this.score.setScoreData(data);\r\n                    this.score.flashElement(state.focusIndex);\r\n                }\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            } else if (detail.root.index + sub === -1) {\r\n                detail.root = null;\r\n                detail.symbolKey = 'major';\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n            // キャッシュの更新\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            if (detail.root != null) {\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(detail.root, cache.keyIndex, detail.on, symbol);\r\n            } else {\r\n                chordCache.chordFullName = '';\r\n                chordCache.structList = [];\r\n            }\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                // setTimeout(() => {\r\n                CacheUtil.updateHarmonizeCache(this.store, this);\r\n                // }, 1);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -2 && target <= 2) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                CacheUtil.updateHarmonizeCache(this.store, this);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[state.focusIndex];\r\n\r\n            // 拍の初期値を取得\r\n            const beatSignature = state.elementCacheList[state.focusIndex].beatSignature;\r\n            const initialBeat = TheoryUtil.getBeatProps(beatSignature).barBeatCnt;\r\n            let curBeatLen = initialBeat;\r\n            if (cur.type === 'chord') {\r\n                const curChord = cur.detail as DetailChord;\r\n                // 後にシンコペーションが設定されている場合は追加できない\r\n                if (curChord.minute.tail != 0) return;\r\n\r\n                curBeatLen = curChord.beatLen;\r\n            }\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: curBeatLen,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null,\r\n                        hasError: false\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        addAlterElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'alter', detail: {\r\n                    alterType: null,\r\n                    modRel: null,\r\n                    dommVal: 0,\r\n                    keyAdj: 0,\r\n                    tempoRel: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbs: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailAlter\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                const sectionNo = this.store.scoreState.elementCacheList[i].sectionNo;\r\n                // 先頭のセクション要素が含まれている場合削除しない\r\n                if (element.type === 'section' && sectionNo === 0) {\r\n                    return;\r\n                }\r\n            }\r\n            data.chordList.splice(distHead, (distTail - distHead) + 1);\r\n            this.score.setScoreData(data);\r\n            state.focusIndex = distHead - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // // reffer.style.width = '300px';\r\n            // wrapRef.style.opacity = '0';\r\n            // wrapRef.style.overflow = 'hidden';\r\n            // // wrapRef.style.padding = '0';\r\n            // wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '0';\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.opacity = '';\r\n            //     wrapRef.style.width = '';\r\n            //     wrapRef.style.overflow = '';\r\n            //     // wrapRef.style.padding = '';\r\n            //     const data = this.store.scoreData;\r\n            //     data.chordList.splice(state.focusIndex, 1);\r\n            //     this.score.setScoreData(data);\r\n            //     state.focusIndex--;\r\n            //     this.score.setScoreState(state);\r\n            //     // setTimeout(() => {\r\n            //     //     reffer.style.opacity = '';\r\n            //     //     reffer.style.width = '';\r\n            //     //     const data = this.store.scoreData;\r\n            //     //     data.chordList.splice(state.focusIndex, 1);\r\n            //     //     this.score.setScoreData(data);\r\n            //     // }, 200);\r\n            // }, 200);\r\n        },\r\n\r\n        copyElementList: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            const list: ChordElement[] = [];\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                list.push(JSON.parse(JSON.stringify(element)));\r\n            }\r\n            console.log(list.length);\r\n            state.copiedElementList = list;\r\n            state.cloneBacking = null;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        pasteElementList: () => {\r\n            const state = this.store.scoreState;\r\n\r\n            const data = this.store.scoreData;\r\n            const list = state.copiedElementList;\r\n            if (list == null) return;\r\n\r\n            console.log(list.length);\r\n            list.forEach((element, i) => {\r\n                data.chordList.splice(state.focusIndex + 1 + i, 0, element);\r\n            });\r\n            this.score.setScoreData(data);\r\n            state.focusIndex++;\r\n            state.distIndex = state.focusIndex + list.length - 1;\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        // incrementSymbol: (isUp: boolean) => {\r\n        //     const state = this.store.scoreState;\r\n        //     const data = this.store.scoreData;\r\n        //     const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n        //     const sub = isUp ? 1 : -1;\r\n        //     if (detail.root == null) {\r\n        //         detail.root = { index: 0, isFlat: false };\r\n        //         this.score.setScoreData(data);\r\n        //     } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n        //         detail.root.index += sub;\r\n        //         detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n        //         this.score.setScoreData(data);\r\n        //     }\r\n        // },\r\n\r\n        setDiatonicChord: (scale: Scale, diatonicIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const scaleList = scale === 'major' ? TheoryUtil.DIATONIC_MAJOR_SCALE_LIST : TheoryUtil.DIATONIC_MINOR_SCALE_LIST;\r\n            const chord = scaleList[diatonicIndex];\r\n            const root: TheoryUtil.DegreeProps = { ...chord.root };\r\n            detail.root = root;\r\n            detail.symbolKey = chord.symbolKey;\r\n            // オンコードの設定を解除\r\n            detail.on = null;\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n            [chordCache.chordFullName, chordCache.structList] =\r\n                BackingUtil.getChordDetails(root, cache.keyIndex, null, symbol);\r\n            chordCache.backingError =\r\n                BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        cloneBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n        },\r\n\r\n        pastBacking: () => {\r\n            const state = this.store.scoreState;\r\n            if (state.cloneBacking != null) {\r\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n                const data = this.store.scoreData;\r\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreData(data);\r\n\r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n\r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                chordCache.backingError =\r\n                    BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n\r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                chordCache.backingError =\r\n                    BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    /**\r\n     * メロディ画面のディスパッチ\r\n     */\r\n    public melody = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        /**\r\n         * 全てのノーツを選択する\r\n         */\r\n        allSelect: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = notesList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n        },\r\n\r\n        setNotesList: (notesList: MelodyNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * 選択中のノーツの音程を変更する\r\n         * @param isUpper\r\n         * @param mode \r\n         * @returns \r\n         */\r\n        incrementCurPitch: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n            const scoreState = this.store.scoreState;\r\n            const state = this.store.melodyState;\r\n            const focusIndex = state.focusIndex;\r\n            const distIndex = state.destIndex;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            // フォーカスされていない場合は処理しない\r\n            if (focusIndex === -1) return;\r\n\r\n            if (focusIndex !== distIndex) {\r\n\r\n                const targetList = notesList.filter(\r\n                    (notes, i) => i >= focusIndex && i <= distIndex\r\n                );\r\n\r\n                targetList.forEach(notes => {\r\n                    notes.pitchIndex += 1 * (isUpper ? -1 : 1);\r\n                });\r\n\r\n                // 履歴を作成\r\n                state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                this.melody.setNotesList(notesList.slice());\r\n            } else {\r\n                const cur = notesList[focusIndex];\r\n                // const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n                const normalLeft = getNormalizeLenFromNotes(cur.pos);\r\n                const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n                const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n                const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n\r\n                const prevPitchIndex = cur.pitchIndex;\r\n                const interval = mode !== 'octave' ? 1 : 12;\r\n                let tempPitchIndex = cur.pitchIndex;\r\n\r\n                while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                    tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                    if (mode !== 'scale' ||\r\n                        (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                    ) {\r\n                        cur.pitchIndex = tempPitchIndex;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // 値が変わっていた場合のみ処理する\r\n                if (prevPitchIndex !== cur.pitchIndex) {\r\n                    playSoundfont(cur.pitchIndex, this.store);\r\n                    // 履歴を作成\r\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                    this.melody.setNotesList(notesList.slice());\r\n\r\n                    this.melody.adjustScrollY();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * キースイッチを設定する\r\n         * @param keySwitch \r\n         */\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         */\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        /**\r\n         * 複数選択From～ToのToを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         * @returns \r\n         */\r\n        moveDestFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.destIndex > 0 : state.destIndex < notesList.length - 1) {\r\n                state.destIndex += (isNext ? 1 : -1);\r\n                this.melody.setState(state);\r\n            }\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツのエリアのコードを更新する\r\n         * @param focusIndex ノーツのフォーカス\r\n         */\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.tableMouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスの後ろに新しいノーツを追加する\r\n         * @returns \r\n         */\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const focus = state.focusIndex;\r\n            if (focus === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[focus];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = focus === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            // 新しい要素の位置\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(focus + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツを削除する\r\n         */\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            // 履歴を作成\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n            // 対象の開始と終了のインデックスを取得\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            // 削除する個数\r\n            const delNum = end - start + 1;\r\n            notesList.splice(start, delNum);\r\n            this.melody.setNotesList(notesList);\r\n            // 削除後は対象の開始インデックスの１つ前を選択\r\n            state.focusIndex = start - 1;\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * 複数選択を解除する\r\n         * @param isTail 解除時複数選択のどこにフォーカスを移すか（trueの場合終端を選択）\r\n         */\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            state.focusIndex = (!isTail ? start : end);\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            const distIndex = state.destIndex;\r\n            const focusIndex = state.focusIndex;\r\n\r\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\r\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n\r\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\r\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\r\n\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 移動可能かを判定\r\n            if (condition) {\r\n                for (let i = start; i <= end; i++) {\r\n                    const cur = notesList[i];\r\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                }\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        firstNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n                this.melody.adjustScrollX();\r\n                // this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.destIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            // if (state.focusIndex === -1) return;\r\n\r\n            MelodyUtil.previewStart(this.store, this);\r\n        },\r\n\r\n        copyNotes: () => {\r\n\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const num = focusEnd - focusStart + 1;\r\n\r\n            const cloneNotesList: MelodyNotes[] = [];\r\n            const base = notesList[focusStart].pos;\r\n            const baseUnit = getMinimumLenUnit(base);\r\n            for (let i = 0; i < num; i++) {\r\n                const notes = notesList[i + focusStart];\r\n                const unit = getMinimumLenUnit(notes.pos);\r\n                const useUnit = baseUnit > unit ? baseUnit : unit;\r\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\r\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\r\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\r\n                console.log(JSON.stringify(pos));\r\n                cloneNotesList.push({\r\n                    pitchIndex: notes.pitchIndex,\r\n                    pos,\r\n                    len: { ...notes.len }\r\n                });\r\n            }\r\n            state.cloneNotesList = cloneNotesList;\r\n            // notesList.splice(state.focusIndex, num);\r\n            // this.tune.setNotesList(notesList);\r\n            // state.focusIndex = focusStart - 1;\r\n            // state.distIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            // alert(JSON.stringify(state.cloneNotesList));\r\n        },\r\n\r\n        pasteNotes: () => {\r\n            // alert('pasteNotes');\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const pastList: MelodyNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\r\n            pastList.forEach(notes => {\r\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\r\n            });\r\n            // ペーストするノーツの最後（右端）の要素\r\n            const pastLast = pastList[pastList.length - 1];\r\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList = notesList.concat(pastList);\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                data.notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                this.score.setScoreData(data);\r\n\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex + pastList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            // this.tune.adjustScrollX();\r\n        },\r\n\r\n        undo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`undo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const prev = history.undo();\r\n            if (prev != null) {\r\n                if (history.cur === 0) {\r\n                    console.log('first undo');\r\n                    history.list.unshift(JSON.stringify(data.notesList));\r\n                    history.cur = 1;\r\n                }\r\n                data.notesList = JSON.parse(prev);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`undo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        },\r\n\r\n        redo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`redo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const next = history.redo();\r\n            if (next != null) {\r\n                data.notesList = JSON.parse(next);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`redo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            const chordBacking = detail.backing;\r\n            const structList = chordCache.structList;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n\r\n            const voicingTable = BackingUtil.getInitVoicingTable(detail.backing.voicingList, structList.length);\r\n            const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, chordBacking.pattern);\r\n\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n            const chordInfo = {\r\n                symbolAttr: symbol.attr,\r\n                chordFullName: chordCache.chordFullName,\r\n                structList,\r\n                beatLen: detail.beatLen,\r\n                minute: detail.minute,\r\n                init: { ...cache }\r\n            };\r\n            // エラーチェックのためにテーブルからリストへ逆変換\r\n            const voicingList = BackingUtil.getVoicingListFromTable(voicingTable);\r\n            const hasError = BackingUtil.checkEditorError(chordInfo, voicingList, pattern);\r\n            // バッキングステートの初期化\r\n            this.backing.setState({\r\n                chordInfo,\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false,\r\n                hasError\r\n            });\r\n\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n            setTimeout(() => {\r\n                this.backing.setState(null);\r\n            }, 50);\r\n        },\r\n\r\n        setState: (backingState: null | BackingState.Editor) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingState.Layer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingState.Layer;\r\n        },\r\n\r\n        /**\r\n         * エディタで設定したバッキング情報を譜面データに反映\r\n         */\r\n        mappingEditorToScore: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const focus = scoreState.focusIndex;\r\n            const detail = data.chordList[focus].detail as DetailChord;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n\r\n            detail.backing = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                // hasError: editor.hasError\r\n            };\r\n            this.score.setScoreData(data);\r\n\r\n            // エラーの反映\r\n            const cache = scoreState.elementCacheList[focus];\r\n            const scoreCache = scoreState.chordCacheList[cache.chordBlockNo];\r\n            scoreCache.backingError = editor.hasError;\r\n            this.score.setScoreState(scoreState);\r\n        },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const curLen = lenList[pattern.lenIndex];\r\n            const newLen: BackingState.NoteDiv = { rate: curLen.rate, div3: curLen.div3, isDot: curLen.isDot };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.noteDivList = lenList.slice();\r\n\r\n            // テーブル追加\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n\r\n            // ベロシティ追加\r\n            layer.velocityList.splice(pattern.lenIndex + 1, 0, 5);\r\n\r\n            // ペダル追加\r\n            if (pattern.layerIndex === 0) {\r\n                pattern.pedalActs.splice(pattern.lenIndex + 1, 0, null);\r\n            }\r\n\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            cur.isDot = false;\r\n            cur.div3 = 0;\r\n            layer.noteDivList = layer.noteDivList.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            if (BackingUtil.isPermitDot(cur)) {\r\n                cur.isDot = !cur.isDot;\r\n                layer.noteDivList = layer.noteDivList.slice();\r\n                this.backing.setState(state);\r\n                this.backing.updateErrorState();\r\n            }\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: BackingState.NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            layer.table = layer.table.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        incrementVel: (value: number) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const after = layer.velocityList[pattern.lenIndex] + value;\r\n            if (after >= 1 && after <= 10) {\r\n                layer.velocityList[pattern.lenIndex] = after;\r\n                this.backing.setState(state);\r\n            }\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            // 2つ以上要素がないと消せない\r\n            if (layer.noteDivList.length >= 2) {\r\n                layer.noteDivList.splice(pattern.lenIndex, 1);\r\n                layer.table.forEach((column) => {\r\n                    column.splice(pattern.lenIndex, 1);\r\n                });\r\n                layer.velocityList.splice(pattern.lenIndex, 1);\r\n                // for(let i = 0; i < pattern.channels.length; i ++) {\r\n                //     layer.table[i].splice(pattern.lenIndex, 1);\r\n                // }\r\n                if (pattern.layerIndex === 0) {\r\n                    // 終端までnullで更新\r\n                    if (pattern.lenIndex < pattern.pedalActs.length - 1) {\r\n                        for (let j = pattern.lenIndex + 1; j < pattern.pedalActs.length; j++) {\r\n                            pattern.pedalActs[j] = null;\r\n                        }\r\n                    }\r\n                    pattern.pedalActs.splice(pattern.lenIndex, 1);\r\n                }\r\n\r\n                if (pattern.lenIndex > 0) {\r\n                    pattern.lenIndex--;\r\n                }\r\n                this.backing.setState(state);\r\n            }\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n        /**\r\n         * 左右レイヤーを切り替える\r\n         */\r\n        switchLayer: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        /**\r\n         * 音量orペダルのモードを切り替える\r\n         */\r\n        switchMode: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            if (pattern.mode === 'velocity') pattern.mode = 'pedal';\r\n            else if (pattern.mode === 'pedal') pattern.mode = 'velocity';\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        /**\r\n         * バッキングのプレビュー再生をする\r\n         */\r\n        testBacking: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const reserveTasks = this.store.reserveTasks;\r\n            const chordInfo = editor.chordInfo;\r\n            const init = chordInfo.init;\r\n\r\n            // const rootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n            // const onIndex = chordInfo.on == null ? -1 : ((chordInfo.on.index + chordInfo.init.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n            // const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\r\n            // const chordTime = 60 / init.bpm * len;\r\n\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                chordInfo.beatLen,\r\n                chordInfo.minute.head + chordInfo.minute.tail,\r\n                init.bpm,\r\n                init.beatSignature\r\n            );\r\n            const backing: ChordBacking = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern)\r\n            };\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordInfo.structList);\r\n\r\n            BackingUtil.playBacking(this.store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                editor.isPreview = false;\r\n                this.backing.setState(editor);\r\n            }, chordTime));\r\n\r\n            editor.isPreview = true;\r\n            this.backing.setState(editor);\r\n        },\r\n\r\n        updateErrorState: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const voicingList = BackingUtil.getVoicingListFromTable(editor.voicingTable);\r\n            editor.hasError = BackingUtil.checkEditorError(editor.chordInfo, voicingList, editor.pattern);\r\n            this.backing.setState(editor);\r\n        },\r\n    }\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport Soundfont from 'soundfont-player';\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: TheoryUtil.SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null,\r\n        // hasError: false\r\n    };\r\n    return backing;\r\n}","\r\n\r\n/**\r\n * データの履歴を管理するクラス\r\n */\r\nclass DataHistory {\r\n\r\n    cur: number;\r\n    list: string[];\r\n\r\n    constructor() {\r\n        this.cur = -1;\r\n        this.list = [];\r\n    }\r\n\r\n\r\n    add(data: string) {\r\n        // console.log(`add start ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n        // if (this.list[this.cur] === data) {\r\n        //     console.log('same...');\r\n        //     return;\r\n        // }\r\n        if (this.cur > -1) {\r\n            this.list.splice(0, this.cur + 1);\r\n            this.cur = -1;\r\n            console.log('restert');\r\n        }\r\n        this.list.unshift(data);\r\n        // console.log(`add end ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n    }\r\n\r\n    undo(): null | string {\r\n        let ret = null;\r\n        if (this.cur < this.list.length - 1) {\r\n            this.cur++;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    redo(): null | string {\r\n        let ret = null;\r\n        if (this.cur > 0) {\r\n            this.cur--;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./score/scoreData\"\r\nimport { ScoreState } from \"./score/scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./score/melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { Invalidate } from \"./invalidate\"\r\nimport DataHistory from \"./state/dataHistory\"\r\nimport BackingState from \"./score/backing/backingState\"\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState.Editor;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n\r\n    invalidate: Invalidate;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        directScore: null,\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        editable: true,\r\n        dialog: null\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        fileHandle: null,\r\n        isMelody: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        elementCacheList: [],\r\n        chordCacheList: [],\r\n        sectionCacheList: [],\r\n        scaleCacheList: [],\r\n        tempoCacheList: [],\r\n        beatCacheList: [],\r\n        measureCacheList: [],\r\n        keySwitch: {\r\n            distMode: false,\r\n            sustainMode: false,\r\n            chordMode: false,\r\n            symbolMode: false,\r\n            control: false,\r\n            minHeadMode: false,\r\n            minTailMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneBacking: null,\r\n        copiedElementList: null,\r\n        backingDataHistory: new DataHistory(),\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        destIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 1,\r\n        beatWidth: 120,\r\n        tableMouse: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        timelineMouse: {\r\n            pos: -1,\r\n            isPut: false,\r\n            lock: -1,\r\n            width: 0,\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 9\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false,\r\n            control: false,\r\n        },\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneNotesList: [],\r\n\r\n        dataHistory: new DataHistory(),\r\n        notesCacheList: []\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        // sampler: getDefaultSampler(),\r\n        harmony: null,\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: [],\r\n    invalidate: {\r\n        harmoniizeInvalidate: {},\r\n        harmonize: null,\r\n        melody: null\r\n    },\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    login?: LoginProps;\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type LoginProps = {\r\n    seq: number;\r\n    id: string;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note: {\r\n        left: string;\r\n        right: string;\r\n        up: string;\r\n        down: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        distMode: string;\r\n        edit1: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        edit2: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = (): KeyConfig => {\r\n    return {\r\n        note: {\r\n            left: 'ArrowLeft',\r\n            right: 'ArrowRight',\r\n            up: 'ArrowUp',\r\n            down: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'm',\r\n            deleteCur: 'Delete',\r\n            distMode: 'Shift',\r\n            edit1: 'f',\r\n            edit2: 'c',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n        }\r\n    };\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const dialog = store.systemState.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.systemState.dialog = null;\r\n            dispatcher.system.setState(store.systemState);\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n    \r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 22px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行のサンプルを検索するユーティリティ\r\n */\r\nnamespace ProgUnitSearcher {\r\n\r\n    export type ChordItemBean = {\r\n        root: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n        beatLen: number;\r\n    }\r\n\r\n    export type UnitBean = {\r\n        condition: UnitCondition;\r\n        chordList: ChordItemBean[];\r\n    }\r\n\r\n    /**\r\n     * ダイアトニックスケールの連番でコードを指定する\r\n     * @param scaleIndex スケールの連番\r\n     * @param beatLen 拍\r\n     */\r\n    const getDiatonicChord = (scaleIndex: number, beatLen: number): ChordItemBean => {\r\n        const chord = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        return { root: { index: chord.root.index, isFlat: false }, symbolKey: chord.symbolKey, beatLen };\r\n    }\r\n\r\n    export type UnitCondition = {\r\n        beat: BeatSignature;\r\n        step: number;\r\n        firstChord: ProgUtil.DegreeFilter;\r\n        secondChord: ProgUtil.DegreeFilter;\r\n    }\r\n\r\n    /**\r\n     * コード進行を検索する\r\n     * @param condition \r\n     * @returns フィルターしたリスト\r\n     */\r\n    export const search = (condition: UnitCondition) => {\r\n        console.log(JSON.stringify(condition));\r\n        return UNIT_LIST.filter((unit) => (\r\n            (unit.condition.beat === condition.beat) &&\r\n            (condition.step === 0 || unit.condition.step === condition.step) &&\r\n            (condition.firstChord === '' || unit.condition.firstChord === condition.firstChord) &&\r\n            (condition.secondChord === '' || unit.condition.secondChord === condition.secondChord)\r\n        ));\r\n    }\r\n\r\n    export const parseChord = (source: string): ChordItemBean[] => {\r\n        let baseBeat = -1;\r\n        const keyList = source.split(' ');\r\n        let hasError = false;\r\n        const chordList: ChordItemBean[] = [];\r\n        keyList.some((key, i) => {\r\n            const head = key.charAt(0);\r\n            if (head === '@') {\r\n                const newBeat = Number(key.charAt(1));\r\n                baseBeat = newBeat;\r\n            } else if (['1', '2', '3', '4', '5', '6', '7'].includes(head)) {\r\n                const diatonicNo = Number(head) - 1;\r\n\r\n                let chord: null | ProgUnitSearcher.ChordItemBean = null;\r\n                const diatonicProps = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[diatonicNo];\r\n                if (key.length === 1) {\r\n                    chord = {\r\n                        root: diatonicProps.root, symbolKey: diatonicProps.symbolKey, beatLen: baseBeat\r\n                    }\r\n                } else {\r\n                    const adjustKey = key.charAt(1);\r\n                    const adjust = adjustKey === '#' ? 1 : adjustKey === 'b' ? -1 : 0;\r\n                    const shortNameKey = key.substring(2);\r\n                    const symbol = getSymbolFromShortName(shortNameKey);\r\n                    if (symbol != undefined) {\r\n                        const root = { ...diatonicProps.root };\r\n                        root.index += adjust;\r\n                        root.isFlat = adjust === -1;\r\n                        chord = {\r\n                            root, symbolKey: symbol.key, beatLen: baseBeat\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (chord == null) {\r\n                    hasError = true;\r\n                    return true;\r\n                } else {\r\n                    chordList.push(chord);\r\n                }\r\n            } else {\r\n                hasError = true;\r\n                return true;\r\n            }\r\n\r\n        });\r\n        console.log(chordList);\r\n        return chordList;\r\n    }\r\n\r\n    const getSymbolFromShortName = (shortName: string): undefined | TheoryUtil.SymbolParams => {\r\n        return TheoryUtil.SYMBOL_LIST.find(symbol => {\r\n            if ('*' + symbol.name === shortName) return symbol;\r\n        });\r\n    }\r\n\r\n    const UNIT_LIST: UnitBean[] = [\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 3 4 1 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 3 4 3 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 3 4 1 2 5 1')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 5 4 1 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@4 1 5 6 4 1 5 6 4')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 7b* 6n*7 2 1#*dim 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@4 1 4 5 6 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('@4 1 6 2 5 1 6 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('@4 1 6 4 5 1 6 4 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 4 5 3 6 4 5 3 6')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 4n*maj7 5 3n*m7 6 4n*maj7 5 3n*m7 6')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 4n*maj7 5 3n*m7 6 2n*m7 3n*7 6 6n*7')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 2n*m7 5 3n*m7 6 2n*m7 3n*7 6n*sus4 6')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@2 6 4 5 1 6 4 5 1')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@4 6 4 5 1 6 4 5 1')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@2 6 4 1 5 6 4 1 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@4 6 4 1 5 6 4 1 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 6 5 4 3n*m7 2n*m7 6 2#*dim 3n*7')\r\n        },\r\n    ];\r\n}\r\n\r\nexport default ProgUnitSearcher;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\n\r\nnamespace ProgStyle {\r\n\r\n\r\n    /** 実行ボタン */\r\n    export const _TitleLabel = styled.div<{\r\n    }>`\r\n        ${Styles.CSS_LABEL_MIDIUM};\r\n        background-color: #f0f0f049;\r\n        width: 120px;\r\n        text-align: center;\r\n        border-radius: 10px;\r\n        color: #2c2c2c;\r\n        border: solid 1px #ffffff79;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n\r\n    /** コンボボックス */\r\n    export const _Combobox = styled.select<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: black;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n\r\n    /** ラベル */\r\n    export const _Label = styled.div<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: #002bc5;\r\n        font-weight: 600;\r\n        background-color: #e1f9fa;\r\n        padding-left: 4px;\r\n        border-radius: 4px;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n}\r\n\r\nexport default ProgStyle;","import { ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport { ScoreState } from \"../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * コード進行生成のバッキング関連のユーティリティ\r\n */\r\n namespace progBackingUtil {\r\n\r\n    export type Props = {\r\n        name: string;\r\n        patternConditions: PatternCondition[];\r\n    }\r\n    export type VoicingCondition = {\r\n        attr: TheoryUtil.SymbolAttribute;\r\n        source: string;\r\n    }\r\n    export type PatternCondition = {\r\n        beatLen: number;\r\n        source: string;\r\n        voicingConditions: VoicingCondition[];\r\n    }\r\n\r\n    export const BACKING_SAMPLE_LIST: Props[] = [\r\n        {\r\n            name: 'none',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'barrade-01',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTwRKCIBD9Gu4FOnbVvDTTrS9ghIyGsJHNyb4+BCkxb416YWD3LW/fY0FJhjAuLlQpLk/ixc0JkTRGeG92d86o1C6E4gxZMBPNQTH+dOGNQ9ICRKV6JMZum+Qozl1e0pbXEzeNQzWFvoXIFQqdV+AiZ9MLd1FTSTx/YilG1btf3PR1f1d7haoCro9Cw0hR6FMbnDRQeHgLLFqLUlH58dHaaKEgbkKVQXXDZcquAxsGWnpWvArrNmDdzsXqnTe57xh1k9uNDunSg9ZmnLVo7mnBq7zbUqyhVrKK1qVYQ63R4j/D/wq7vgHgSWwr/AUAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqAW7wdQFAL14+prfAAAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYl1oTHG4wdQEAGcWLSt8AAAA='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA9WVwVLDIBCGn4a7XcB4bc3Fmd58AqbBioPECdtO69NLINGAdexBYLwwsOzPB7sskGZDAHbPwhipH9W7dCNC17cE7l3vTXZC22AifEO8c6eOD6aTp2C+CZ5ih6o3kydA6DYt4W2Y1+IshwsrpaZB4LQFFoTKtj0Gy5PbiwxWp6Qzv/GIRH333e/ychnU7Hc1Doc/QM/BNT1Ku1UWk2DGKTpHI4sCD3P0vbdVeyP0Zwp9Br0rqldl9pH6KPW6e1lkYHGWUxSFwtRVRF0VotIqVIiokIs63zI391Wt3NnGDI8nH/swui22mLG0ryivbKX9X9RXvgy0zA1K7i2vQo1fQVrlPSpFZVWocYRZlQiXokIVKqtCjfPKq0Q4G/XH341OPxwkP5xvPwCCCyaGNwsAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGuES60JCW7AohbsBlMXAA68b5wLAQAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGtEglpjXGpNcLjB1AUAqgEeTAsBAAA='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'barrade-02',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTXQ+CIBT9NbwbxPRV86Wtt34BUzIaYQty2a+PQFLMuT7tgQ3OPZdzOZcLwgRAmG2JEJSv2YXqE0AxBnChdweaEy4tBHACDDln1VLk9GzhwDJJplgpGiaEdhumAKc2zklNjwM39aEjUU0JkU1kMi2VRTa6FmpRnYmcfmgkhrO7vOHr/pzt/BGlonLFpOr54btceyepiDo5Aw1bskIQfu+CaYKhKrZnovCyK8rjfNcxsfOWRnXmqc4mUkWeKpxIFXqq6Feqrt861n7927S1C3vljc7I/IUZeeunTeV+8EX30TMS848koseHwfEGYxcM0ysSYVFzcwUAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqAWba+oCACBiEqvfAAAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqDUGqTV1AQCUaWUN3wAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2V0W7CIBSGn4b7eUrFW11vTHbnExCLjgWpEWbUp5dC2cA1y1YSuPGiLRzOz8dJfwCRFQLYvlMpmdjwGzM9VC3nCF5N68haKpQLoXqFbHLLz2vZsosLv7hMutW8k0MmgGuSBtWNGxf0yk4jMz2GTlQPS1g4IVdNp11kZ9bCXNQoK88nFjGuDvPGp3uqi6i9L2SnmXrjSj/4IHbXNeopTfWnN47NVnwvqfhynzWfTdX8wOU+Up+ZWLYfgXmCWgbqLKLOMlFxEWoVUSETtS5CJUWoEFGrTNR5Hqrfx2bs+yjv/65/cPDtH+glwXJ/vQNw0h2Ak06z/6gnnWa5nFDGf3GtOImKf1LhL7WmUafWWidRycS9hod9Zd93wUPW69YJAAA=',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqMXpBlMc5pq6AADXs/OfCwEAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqCXFXGOQWlMXACkdNMwLAQAA'\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: '8beat-01',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTSw7CIBQ8DXulJbht7cbEnScgLVYMUlOwsZ5e5BUtTeNGU1bAMMM83gfRHGFcnphSXB7Eg9sTSrIU4a3dXXnFpAYIkRw5ciW6nar4HeAVMFlpRKMGJsawpQUiBdxL1vN25qUp1DIzhLABodBFYwA52lg4oFaZeH/qLObVY978c5HVPj+qMVzvhTaTfIRZ7oOTNszcfAIdW4taMfmugiuCoxpxEaoO1B2XWXUeJXH0l8F1HcUVR3FNlnH19bZ3n9YnFnv5w0qC8L7OSPrTjKT/79OwY9YL1S6cDhxlOpZyDf+aROhT4gm0eAKCqPtePgYAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGsEUmvqAgBJsewgswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2V0Q6CIBSGn4b7Omp2W3nT1l1PwJSKRtiEXPb0IWhJc67N5bnpRuBwDh+w3x8SrwlAeqJSMrHnD2ZGJFiFBDamd2UZFcqFSLQmNjnj5VZm7O7CM5dJU81z2WQCuG6ckChx84JWrOhZ6TNUUN1sYekKuUpy7SIHsxfmoqYyaPmxRfRXd/P6l/tXo1S3upC5ZmrHlf7Qga+uyhspTfWtFY7NVvwoqXipz4rPpmp+4fLoVZdMrLJzRzydszTUOQoVUKgBCjVEoUYo1AUKNZ6G2v7HZu5t5fU917rqbyNvu4NvQDjqDQhHudl01V96oe9KcxR/mIrq+z6g+P5UVECh+jccoJz1Z9RBV4KOC9nvE4/6Z+UECwAA',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmuCww2mLgAeyOCMswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: '8beat-02',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTQQ6CMBB8Te9SJHgFuZh48wUNVKypxdCFiK+3dqlSwsXE0Attp7M7y26HpDmhtLwwpbg8iSc3JxJnW0L3ZnfnFZMaIZLkxJIr0R9UxR8Ib5DJShCNGpmU4jYtSFLgvWQDbxcyzaGWwVjCDgOFLhpA5Gxq4YiayNjpp1ZiOXrKW04XONr1RzXA9VFomPXD7/LgnTQw6FwDLVuLWjH5mYIdgqWCuAlVe9E9l1l1nTRx8i+jahRElQZRjddRdfM2d9+nnxjsrY9r4pX3o0eg7f5oEZttrTfuv7Zopbn7zqJBnLWWKg2i6nc4DuIs5yr7fQFCZXGQ9AYAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGsEUmvqAgBJsewgswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2VwU4DIRCGn4a7nQXx2roXE28+AelixSBrFtrYPn0ps+jSEBMTw8TEE+wwPx/L/jvD5IYBbF+Uc9o+mZOOT6xbcwb3cfauB2U9hpjYsJQ8mMODG/QHhm8wU22DGd2cCYBT2TPR47pVRz1VdroOTSrMR7hDofH9GDDyHM+iMRqVXebLhKirl3n17f7VJOrsCzcG7R+ND1c+KN11LJ58UGGfjZOyvdk5ZT/dl8yXUoN5M25XqA/arofXhXkW7zJTVyRUIKF2JFROQhUk1FsSqmxDzf9xXPsq5Zd7vviqPoriuD/sAWHa/2ILSLtVxfyP1NEmVbishyuSytSKKkioZZ8Dkj7XigokVE5CLb9rR3LDrai8DfXbjgPziHORBbI/A9v3xeToDAAA',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmuCww2mLgAeyOCMswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'arpeggio-01',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'arpeggio-02',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'rock-01',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: '16beat-01',\r\n            patternConditions: []\r\n        },\r\n    ];\r\n }\r\n\r\n export default progBackingUtil;","import { BackingPatternProps, BeatSignature, ChordElement, DetailChord, DetailFixed, DetailInit, DetailSection, FixedItem, ScoreData, VoicingProps } from \"../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport progBackingUtil from \"./progBackingUtil\";\r\n\r\n/**\r\n * コード進行生成のユーティリティ\r\n */\r\nnamespace ProgUtil {\r\n\r\n    /** 生成方法 */\r\n    export type BuildType = 'blank' | 'custom' | 'template';\r\n\r\n    export const STEP_LIST = [0, 2, 3, 4] as const;\r\n    export type Step = typeof STEP_LIST[number];\r\n\r\n    /**\r\n     * ブロックに設定するプロパティ\r\n     */\r\n    export type UnitProps = {\r\n        type: BlockType;\r\n        detail: SectionProps | FixedItem;\r\n    }\r\n\r\n    export type BlockType = 'fixed' | 'section';\r\n\r\n    export type SectionProps = {\r\n        sectionName: string;\r\n        sectionNo: string;\r\n        chordList: DetailChord[];\r\n        backingNo: number;\r\n    }\r\n\r\n    export const DEGREE_FILTER_LIST = [\r\n        '', 'Ⅰ', 'Ⅴ', 'Ⅳ', 'Ⅵm', 'Ⅱm', 'Ⅲm'\r\n    ] as const;\r\n    export type DegreeFilter = typeof DEGREE_FILTER_LIST[number];\r\n\r\n    /**\r\n     * 初期状態のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getInitialBlockList = (): UnitProps[] => {\r\n        return [\r\n            { type: 'fixed', detail: 'Start' },\r\n            { type: 'fixed', detail: 'End' },\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Blank選択時のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getBlankBlockList = (): UnitProps[] => {\r\n        return [\r\n            { type: 'fixed', detail: 'Start' },\r\n            {\r\n                type: 'section',\r\n                detail: {\r\n                    sectionName: 'Section',\r\n                    sectionNo: '',\r\n                    chordList: [\r\n                        getDefaultChord()\r\n                    ],\r\n                    backingNo: 0\r\n                }\r\n            },\r\n            { type: 'fixed', detail: 'End' },\r\n        ];\r\n    }\r\n\r\n    export const getDefaultChord = (): DetailChord => {\r\n        return {\r\n            beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n            backing: {\r\n                voicingList: [],\r\n                pattern: null,\r\n                // hasError: false\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拍子より選択可能なステップリストを絞り込む\r\n     * @param beat ステップの拍\r\n     * @returns 絞り込んだリスト\r\n     */\r\n    export const getFilteredStepList = (beat: BeatSignature) => {\r\n        return STEP_LIST.filter((item) => {\r\n            // 0は空白表示なので必ず加える\r\n            if (item === 0) return true;\r\n\r\n            switch (beat) {\r\n                case '4/4':\r\n                case '6/8': {\r\n                    if (item === 3) return false;\r\n                }\r\n                    break;\r\n                case '3/4':\r\n                case '9/8': {\r\n                    if (item !== 3) return false;\r\n                }\r\n                    break;\r\n                case '2/4':\r\n                case '6/8': {\r\n                    if (item !== 2) return false;\r\n                }\r\n                    break;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * ブロックリストより譜面データを生成する\r\n     * @param outputUnits ユニットリスト\r\n     * @returns 譜面データ\r\n     */\r\n    export const buildScoreData = (outputUnits: UnitProps[]): ScoreData => {\r\n        const elementList: ChordElement[] = [];\r\n        // イニシャル要素を設定\r\n        const initElement: DetailInit = {\r\n            keyIndex: 0,\r\n            bpm: 100,\r\n            scale: \"major\",\r\n            beatSignature: \"4/4\"\r\n        }\r\n        elementList.push({ type: 'init', detail: initElement });\r\n        outputUnits.forEach((block) => {\r\n            if (block.type === 'fixed') {\r\n                const fixed = block.detail as FixedItem;\r\n                // 固定ブロックの処理\r\n                elementList.push({ type: 'fixed', detail: { fixed } });\r\n            } else {\r\n                const blockDetail = block.detail as SectionProps;\r\n                const getSectionFullName = () => {\r\n                    return blockDetail.sectionName;\r\n                }\r\n                // セクションブロックの処理\r\n                elementList.push({ type: 'section', detail: {labelName: getSectionFullName()} });\r\n\r\n                // サンプルバッキングの適用\r\n                const sample = progBackingUtil.BACKING_SAMPLE_LIST[blockDetail.backingNo];\r\n                blockDetail.chordList.forEach((chord) => {\r\n                    const detail = chord;\r\n\r\n                    let voicingList: VoicingProps[] = [];\r\n                    let pattern: BackingPatternProps | null = null;\r\n                    sample.patternConditions.some(conPa => {\r\n                        if(conPa.beatLen === detail.beatLen) {\r\n                            // console.log(DataUtil.unZip(conPa.source));\r\n                            pattern = JSON.parse(DataUtil.unZip(conPa.source));\r\n\r\n                            conPa.voicingConditions.some(conVo => {\r\n                                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                                if(conVo.attr === symbol.attr) {\r\n                                    voicingList = JSON.parse(DataUtil.unZip(conVo.source));\r\n                                    return true;\r\n                                }\r\n                            });\r\n                            return true;\r\n                        }\r\n                    });\r\n                    detail.backing.voicingList = voicingList;\r\n                    detail.backing.pattern = pattern;\r\n\r\n                    elementList.push({ type: 'chord', detail });\r\n                });\r\n            }\r\n        });\r\n        return { chordList: elementList, notesList: [] };\r\n    }\r\n}\r\n\r\nexport default ProgUtil;","import { useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../utils/dummyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgUnitSearcher from \"./progUnitSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行を編集する画面\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ProgCustomFrame = (props: {\r\n    /** 拍子フィルターの値 */\r\n    beat: '' | BeatSignature;\r\n    /** ユニット数 */\r\n    unitNum: number;\r\n    /** 出力リストを初期化するコールバック関数 */\r\n    reset: () => void;\r\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\r\n    insertProgUnit: (sectionName: string, sectionNo: string, chordList: ProgUnitSearcher.ChordItemBean[]) => void;\r\n}) => {\r\n\r\n    const [step, setStep] = useState<ProgUtil.Step>(0);\r\n    const [degreeFilters, setDegreeFilters] = useState<(ProgUtil.DegreeFilter)[]>(['', '']);\r\n\r\n    /** ブロックの最後のコード */\r\n    const [lastChord, setLastChord] = useState<ProgUnitSearcher.ChordItemBean | null>(null);\r\n\r\n    // const [progUnitList, setProgUnitList] = useState<ProgSearcher.UnitBean[]>([]);\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n\r\n    const stepList = useMemo(() => {\r\n        return props.beat === '' ? [0] : ProgUtil.getFilteredStepList(props.beat);\r\n    }, [props.beat]);\r\n\r\n    /** 拍ステップ絞り込みのコンボボックス */\r\n    const stepOptionJsxList = useMemo(() => {\r\n        // console.log(stepList.length);\r\n        return stepList.map((val, i) => {\r\n            // 0の場合は表示しない制御\r\n            const disp = val === 0 ? '' : val;\r\n            return (\r\n                <option key={i} value={val}>{disp}</option>\r\n            );\r\n        });\r\n    }, [stepList]);\r\n\r\n    /** ディグリーネーム絞り込みのコンボボックス */\r\n    const degreeOptionJsxListArray: JSX.Element[][] = useMemo(() => {\r\n        return [ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 先頭のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        }), ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 2番目のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        })];\r\n    }, [degreeFilters]);\r\n\r\n    /** リストに表示する進行ユニットのJSX */\r\n    const [progUnitList, progJsxList] = useMemo(() => {\r\n        if (props.beat === '') return [[], []];\r\n        const beat = props.beat as BeatSignature;\r\n        // フィルタリングしたユニットリスト\r\n        const unitList = ProgUnitSearcher.search({\r\n            beat: props.beat,\r\n            step, firstChord: degreeFilters[0], secondChord: degreeFilters[1]\r\n        });\r\n        const jsx = unitList.map((unit, i) => {\r\n            const isActive = focusIndex === i;\r\n\r\n            /** 表示する進行ユニット */\r\n            const dispUnitJsx: JSX.Element[] = [];\r\n            /** 表示する進行ユニット */\r\n            let tootTipStr: string = '';\r\n            let totalBeat = 0;\r\n            const beatCycle = TheoryUtil.getBeatProps(beat).barBeatCnt;\r\n            unit.chordList.forEach((chord, j) => {\r\n                const degreeRoot = TheoryUtil.getDegreeRoot(chord.root);\r\n                const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\r\n                const symbolName = symbol.name;\r\n                const chordName = degreeRoot + symbolName;\r\n                if (j !== 0) {\r\n                    const divStr = totalBeat % beatCycle === 0 ? ' | ' : '・';\r\n                    dispUnitJsx.push(<_Span key={dispUnitJsx.length}>{divStr}</_Span>);\r\n                    tootTipStr += divStr;\r\n                }\r\n                let isMatch = false;\r\n                if (j === 0) {\r\n                    isMatch = degreeFilters[0] !== '';\r\n                } else if (j === 1) {\r\n                    isMatch = degreeFilters[1] !== '';\r\n                }\r\n                dispUnitJsx.push(<_ChordName key={dispUnitJsx.length} isMatch={isMatch}>{chordName}</_ChordName>);\r\n                tootTipStr += chordName;\r\n                totalBeat += chord.beatLen;\r\n                // console.log(totalBeat);\r\n            });\r\n            return (\r\n                <_ProgItem key={i} isActive={isActive} title={tootTipStr} onClick={() => {\r\n                    setFocusIndex(i);\r\n                }}>{dispUnitJsx}</_ProgItem>\r\n            )\r\n        });\r\n        return [unitList, jsx];\r\n    }, [props.beat, step, degreeFilters, focusIndex]);\r\n\r\n    /**\r\n     * 拍ステップ変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const stepChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setStep(Number(e.target.value) as ProgUtil.Step);\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n    /**\r\n     * ディグリーフィルター変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const degreeChangeAction = (e: React.ChangeEvent<HTMLSelectElement>, index: number) => {\r\n        const value = e.target.value as ProgUtil.DegreeFilter;\r\n        degreeFilters[index] = value;\r\n        if (index === 0 && value === '') {\r\n            degreeFilters[1] = '';\r\n        }\r\n        setDegreeFilters(degreeFilters.slice());\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n\r\n    /**\r\n     * リセットボタン押下時の処理\r\n     */\r\n    const resetAction = () => {\r\n        setStep(0);\r\n        setDegreeFilters(['', '']);\r\n        props.reset();\r\n    };\r\n\r\n    /**\r\n     * 追加ボタン押下時の処理\r\n     */\r\n    const insertAction = () => {\r\n        const progUnit = progUnitList[focusIndex];\r\n        props.insertProgUnit('Section', '', progUnit.chordList);\r\n        setFocusIndex(-1);\r\n        setStep(0);\r\n        setDegreeFilters(['', '']);\r\n\r\n        const chord = progUnit.chordList[progUnit.chordList.length - 1];\r\n        setLastChord(chord);\r\n    };\r\n\r\n    /**\r\n     * ユニットの最後のコードネームを取得\r\n     */\r\n    const getLastChordName = () => {\r\n        let name = '-';\r\n        if (lastChord != null) {\r\n            const rootName = TheoryUtil.getDegreeRoot(lastChord.root);\r\n            const symbol = TheoryUtil.getSymbolFromKey(lastChord.symbolKey) as TheoryUtil.SymbolParams;\r\n            name = rootName + symbol.name;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    return (\r\n        <_Frame isEnable={props.beat !== ''}>\r\n            {/* 拍ステップコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Step</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={80} value={step} onChange={(e) => {\r\n                    stepChangeAction(e);\r\n                }}>{stepOptionJsxList}</ProgStyle._Combobox>\r\n                <ProgStyle._TitleLabel>Last</ProgStyle._TitleLabel>\r\n                <ProgStyle._Label isEnable={true} width={80} >{getLastChordName()}</ProgStyle._Label>\r\n            </_Record>\r\n            {/* ディグリーネームフィルターコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Chord</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={80} value={degreeFilters[0]} onChange={(e) => {\r\n                    degreeChangeAction(e, 0);\r\n                }}>{degreeOptionJsxListArray[0]}</ProgStyle._Combobox>\r\n                <ProgStyle._Combobox isEnable={degreeFilters[0] !== ''} width={80} value={degreeFilters[1]} onChange={(e) => {\r\n                    degreeChangeAction(e, 1);\r\n                }}>{degreeOptionJsxListArray[1]}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* 進行ユニットリスト */}\r\n            <_ListDiv><div>{progJsxList}</div></_ListDiv>\r\n            {/* 実行ボタン */}\r\n            <_ButtonDiv>\r\n                <_ExecutableButton isEnable={props.unitNum > 0} onClick={resetAction}>Reset</_ExecutableButton>\r\n                <_ExecutableButton isEnable={focusIndex !== -1} onClick={insertAction}>Add</_ExecutableButton>\r\n            </_ButtonDiv>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgCustomFrame;\r\n\r\nconst BUTTON_DIV_HEIGHT = 40;\r\nconst RECORD_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 条件レコード\r\n */\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${RECORD_HEIGHT}px;\r\n    /* background-color: #d5eae4; */\r\n    /* margin: 2px 0 0 0; */\r\n    text-align: left;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 進行リスト\r\n */\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${RECORD_HEIGHT * 2 + BUTTON_DIV_HEIGHT}px);\r\n    /* background-color: #babaa8; */\r\n    text-align: left;\r\n    & >div{\r\n        display: inline-block;\r\n        width: calc(100% - 8px);\r\n        height: calc(100% - 8px);\r\n        margin: 4px 0 0 4px;\r\n        background-color: #dde0e7;\r\n        box-sizing: border-box;\r\n        border: 1px solid #797979;\r\n        overflow-y: auto;\r\n        \r\n        &::-webkit-scrollbar {\r\n            width: 10px;\r\n            height: 10px;\r\n        }\r\n        &::-webkit-scrollbar-thumb {\r\n            border-radius: 5px;\r\n            background: #1959A8;\r\n        }\r\n        &::-webkit-scrollbar-track {\r\n            border-radius: 5px;\r\n            box-shadow: 0 0 4px #aaa inset;\r\n        }\r\n    }\r\n`;\r\n\r\nconst _ProgItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #00000010;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f6ff0062;\r\n    `}\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordName = styled.span<{\r\n    isMatch: boolean;\r\n}>`\r\n    color: #000f59;\r\n    ${props => !props.isMatch ? '' : css`\r\n        color: #a0000d;\r\n        /* background-color: #5eff0061; */\r\n    `}\r\n`;\r\nconst _Span = styled.span<{\r\n}>`\r\n    color: #0000005d;\r\n`;\r\n\r\n/**\r\n * ボタンエリア（画面汎用）\r\n */\r\nconst _ButtonDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BUTTON_DIV_HEIGHT}px;\r\n    /* background-color: #94babd; */\r\n    text-align: center;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #737d94;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #505971;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #8da0b0;\r\n    }\r\n`;","namespace DummyUtil {\r\n\r\n    export const SECTION_CATEGORY = ['Section', 'Intro', 'A', 'B', 'C', 'D', 'Outro'];\r\n    export const SECTION_NO = ['', '1', '2', '3', '4', '5', '6'];\r\n}\r\n\r\nexport default DummyUtil;","import { useContext, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { DetailChord, DetailFixed, DetailSection, FixedItem } from \"../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../utils/dummyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport progBackingUtil from \"./progBackingUtil\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行の出力画面のコンポーネント\r\n * @param props ブロックリスト\r\n * @returns コンポーネント\r\n */\r\nconst ProgOutputFrame = (props: {\r\n    outputUnits: ProgUtil.UnitProps[];\r\n    updateOutputUnits: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [\r\n        /** セクションカテゴリのoptionリスト */\r\n        secCatOptionJsxList,\r\n        /** セクション連番のoptionリスト */\r\n        secNoOptionJsxList,\r\n    ] = useMemo(() => {\r\n        const catList = DummyUtil.SECTION_CATEGORY.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        const noList = DummyUtil.SECTION_NO.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        return [catList, noList];\r\n    }, []);\r\n\r\n    const backingSampleJsxList = progBackingUtil.BACKING_SAMPLE_LIST.map((sample, i) => {\r\n        return (\r\n            <option key={i} value={i}>{sample.name}</option>\r\n        );\r\n    });\r\n\r\n    const blockJsxList = props.outputUnits.map((block, i) => {\r\n        const isFixed = block.type === 'fixed';\r\n        const getInner = () => {\r\n            if (isFixed) {\r\n                return <_FixedItem>{(block.detail as FixedItem)}</_FixedItem>;\r\n            } else {\r\n                const detail = block.detail as ProgUtil.SectionProps;\r\n                const chordList = detail.chordList;\r\n                const getChordListJsx = () => {\r\n                    return chordList.map((chord, j) => {\r\n                        const getBeatTipsJsx = () => {\r\n                            const jsxList: JSX.Element[] = [];\r\n                            for (let k = 0; k < chord.beatLen; k++) {\r\n                                jsxList.push(<_BeatTip key={k} />);\r\n                            }\r\n                            return jsxList;\r\n                        }\r\n                        let chordName = 'none';\r\n                        if (chord.root !== null) {\r\n                            const degreeRoot = TheoryUtil.getDegreeRoot({\r\n                                index: chord.root.index,\r\n                                isFlat: chord.root.isFlat\r\n                            });\r\n                            const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey)?.name;\r\n                            chordName = degreeRoot + symbolName;\r\n                        }\r\n                        return (\r\n                            <_ChordItem key={j}>\r\n                                <_ChordNameLabel>{chordName}</_ChordNameLabel>\r\n                                <_ChordBeatDiv>{getBeatTipsJsx()}</_ChordBeatDiv>\r\n                            </_ChordItem>\r\n                        );\r\n                    });\r\n                }\r\n                return (<>\r\n                    <_Record>\r\n                        <_BackingLabel>Section</_BackingLabel>\r\n                        <_Combobox isEnable={true} width={180} value={detail.sectionName} onChange={(e) => {\r\n                            detail.sectionName = e.target.value;\r\n                            props.updateOutputUnits();\r\n                        }}>{secCatOptionJsxList}</_Combobox>\r\n                        <_Combobox isEnable={true} width={60} value={detail.sectionNo} onChange={(e) => {\r\n                            detail.sectionNo = e.target.value;\r\n                            props.updateOutputUnits();\r\n                        }}>{secNoOptionJsxList}</_Combobox>\r\n                    </_Record>\r\n                    <_Record>\r\n                        {/* <_SectionItem>{labelName}</_SectionItem> */}\r\n                        <_BackingLabel>Backing</_BackingLabel>\r\n                        <_Combobox\r\n                            isEnable={true} width={180}\r\n                            value={detail.backingNo}\r\n                            onChange={(e) => {\r\n                                detail.backingNo = Number(e.target.value);\r\n                                props.updateOutputUnits();\r\n                            }}>{backingSampleJsxList}</_Combobox>\r\n                    </_Record>\r\n                    <_ChordListDiv>{getChordListJsx()}</_ChordListDiv>\r\n                </>);\r\n            }\r\n        };\r\n        return (\r\n            <_Block key={i} isFixed={isFixed}>{getInner()}</_Block>\r\n        );\r\n    });\r\n    return (\r\n        <_Frame>\r\n            {blockJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgOutputFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Block = styled.div<{\r\n    isFixed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    background-color: #e8e4c5;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #7e7e7ee8; */\r\n    text-align: left;\r\n    ${props => !props.isFixed ? '' : css`\r\n        text-align: left;\r\n    `}\r\n`;\r\n\r\nconst _FixedItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 200px;\r\n    background-color: #b14272;\r\n    border-radius: 2px 15px 15px 2px;\r\n    color: white;\r\n    margin: 5px 0 5px 5px;\r\n`;\r\n\r\nconst _SectionItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 120px;\r\n    background-color: #4297b1;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 5px;\r\n`;\r\n\r\nconst RECORD_HEIGHT = 22;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${RECORD_HEIGHT}px;\r\n    /* background-color: #5b6e69; */\r\n    margin: 2px 0 0 0;\r\n    text-align: left;\r\n    /* padding: 5px 0 0 0; */\r\n`;\r\nconst _BackingLabel = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 90px;\r\n    background-color: #95b6d1;\r\n    color: white;\r\n    border-radius: 8px;\r\n    margin: 0 0 0 5px;\r\n`;\r\n\r\nexport const _Combobox = styled.select<{\r\n    isEnable: boolean;\r\n    width: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    font-weight: inherit;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    width: ${props => props.width}px;\r\n    margin: 0 0 0 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ChordListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    /* height: 100px; */\r\n    padding: 0 5px 5px 0;\r\n    background-color: #c2d6dd1e;\r\n    border: solid 2px #ab4343;\r\n    border-radius: 8px;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 5px 5px;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 45px;\r\n    background-color: #676767;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 5px;\r\n`;\r\n\r\nconst _ChordNameLabel = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    padding: 0 20px;\r\n    /* background-color: #b38282; */\r\n    color: white;\r\n`;\r\n\r\nconst _ChordBeatDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    height: 25px;\r\n    min-width: 100%;\r\n    /* background-color: #c5adad; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _BeatTip = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    height: calc(100% - 12px);\r\n    margin: 6px 2px 0 2px;\r\n    background-color: #ddd796;\r\n    border-radius: 2px;\r\n`;\r\n","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport ProgUnitSearcher from \"./progUnitSearcher\";\r\n\r\n/**\r\n * コード進行のテンプレートを検索するユーティリティ\r\n */\r\nnamespace ProgTemplateUtil {\r\n\r\n\r\n    export type TemplateBean = {\r\n        name: string;\r\n        condition: TemplateCondition;\r\n        unitList: UnitItemBean[];\r\n    }\r\n\r\n    export type UnitItemBean = {\r\n        sectionName: string;\r\n        chordList: ProgUnitSearcher.ChordItemBean[];\r\n    }\r\n\r\n    export type TemplateCondition = {\r\n        beat: BeatSignature;\r\n    }\r\n\r\n    /**\r\n     * テンプレートを検索する\r\n     * @param condition \r\n     * @returns フィルターしたリスト\r\n     */\r\n    export const search = (condition: TemplateCondition) => {\r\n        console.log(JSON.stringify(condition));\r\n        return TEMPLATE_LIST.filter((template) => (\r\n            (template.condition.beat === condition.beat)\r\n        ));\r\n    }\r\n    \r\n    const TEMPLATE_LIST: TemplateBean[] = [\r\n        {\r\n            name: 'major minimum 01 [Ⅰ→Ⅳ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 1 4 5 @2 1 5 @4 6 4 5 1')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'major minimum 02 [Ⅰ→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 1 5 6 3 4 1 2 5 1 5 3n*7 6 2 3 4n*m 1')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'minor minimum 01 [Ⅵ→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 6 5 4 3n*m7 2n*m7 6 7n*7 3n*7 6')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'minor minimum 02 [Ⅱm→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 2n*m7 5 1 6 2n*m7 3n*7 6 6n*7 2n*m7 5 3n*m7 6 2n*m7 3n*7 6n*sus4 6')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'major short 01 [Ⅰ→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 1 5 6 3n*m7 4 1 2n*m7 5 1 5 6 3 4 1 2n*7 3n*7')\r\n                },\r\n                {\r\n                    sectionName: 'B',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 4 5 1n*sus4 1')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'major short 02 [Ⅳ→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 2n*m7 5 1 @2 5n*m 1n*7 @4 4n*maj7 5 @2 1 5 @4 6 2n*m7 5 6n*sus4 6n*')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'major short 03 [Ⅰ→Ⅵm～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 1 1 6 6 4 4 5 5 1 1 6 6 4 4 5 5')\r\n                },\r\n                {\r\n                    sectionName: 'B',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 4 5 1n*sus4 1')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'minor short 01 [Ⅵ→Ⅳ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 6 4 5 1 6 4 5 1 6 4 5 1 2 3n*m7 4n*maj7 3n*7')\r\n                },\r\n                {\r\n                    sectionName: 'B',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 4 5 3 6 2 3 6n*sus4 6')\r\n                }\r\n            ]\r\n        },\r\n    ];\r\n}\r\n\r\nexport default ProgTemplateUtil;","import { useContext, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgTemplateUtil from \"./progTemplateUtil\";\r\nimport ProgUnitSearcher from \"./progUnitSearcher\";\r\n\r\nconst ProgTemplateFrame = (props: {\r\n    /** 拍子フィルターの値 */\r\n    beat: '' | BeatSignature;\r\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\r\n    applyProgTemplate: (template: ProgTemplateUtil.TemplateBean) => void;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n\r\n    const templateList = ProgTemplateUtil.search({\r\n        beat: props.beat as BeatSignature\r\n    });\r\n\r\n    const templateJsxList = useMemo(() => {\r\n        return templateList.map((template, i) => {\r\n            return (\r\n                <_Item key={i}\r\n                    isFocus={i === focusIndex}\r\n                    onClick={() => {\r\n                        setFocusIndex(i);\r\n                        props.applyProgTemplate(templateList[i]);\r\n                    }}\r\n                >{template.name}</_Item>\r\n            );\r\n        });\r\n    }, [templateList, focusIndex]);\r\n\r\n    return (\r\n        <_Frame>\r\n            {templateJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgTemplateFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #00000010;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #f6ff0062;\r\n    `}\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n    color: #eb0000;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgCustomFrame from \"./progCustomFrame\";\r\nimport ProgOutputFrame from \"./progOutputFrame\";\r\nimport ProgUnitSearcher from \"./progUnitSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgTemplateFrame from \"./progTemplateFrame\";\r\nimport ProgUtil from \"./progUtil\";\r\nimport ProgTemplateUtil from \"./progTemplateUtil\";\r\n\r\n/**\r\n * コード進行を構成して譜面のベースを作成するダイアログ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ChordProgDialog = (props: {\r\n    setScoreData: (scoreData: ScoreData) => void;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** 生成モード（ブランク、カスタム、テンプレート） */\r\n    const [buildMode, setBuildType] = useState<ProgUtil.BuildType>('blank');\r\n    /** 出力する進行ユニットのリスト */\r\n    const [outputUnits, setOutputUnits] = useState(ProgUtil.getBlankBlockList());\r\n    /** 拍子フィルター */\r\n    const [beatFilter, setBeatFilter] = useState<'' | BeatSignature>('');\r\n\r\n    /**\r\n     * Closeボタン押下時の処理\r\n     */\r\n    const closeAction = () => {\r\n        store.systemState.dialog = null;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    /**\r\n     * Startボタン押下時の処理\r\n     */\r\n    const startAction = () => {\r\n        const scoreData = ProgUtil.buildScoreData(outputUnits);\r\n        props.setScoreData(scoreData);\r\n        closeAction();\r\n        // Editタブに遷移\r\n        store.systemState.scoreTabIndex = 1;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    const getSwitchContJsx = () => {\r\n        switch (buildMode) {\r\n            case 'blank': return <></>;\r\n            case 'custom': return <ProgCustomFrame\r\n                beat={beatFilter}\r\n                unitNum={outputUnits.length - 2}\r\n                reset={() => { setOutputUnits(ProgUtil.getInitialBlockList()) }}\r\n                insertProgUnit={insertProgUnit}\r\n            />;\r\n            case 'template': return <ProgTemplateFrame\r\n                beat={beatFilter}\r\n                applyProgTemplate={applyProgTemplate}\r\n            />;\r\n        }\r\n    };\r\n\r\n    /** 拍フィルターのオプションリストJSX */\r\n    const beatOptionJsxList = useMemo(() => {\r\n        if (buildMode === 'blank') {\r\n            return [(\r\n                <option key={0} value={''}></option>\r\n            )];\r\n        } else {\r\n            return [''].concat(TheoryUtil.BEAT_DEF_LIST).map((val, i) => {\r\n                return (\r\n                    <option key={i} value={val}>{val}</option>\r\n                );\r\n            });\r\n        }\r\n    }, [buildMode]);\r\n\r\n    const beatChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setBeatFilter(e.target.value as BeatSignature);\r\n    }\r\n\r\n    /** リストから選択中のコード進行ブロックを出力に追加する */\r\n    const insertProgUnit = (sectionName: string, sectionNo: string, chordList: ProgUnitSearcher.ChordItemBean[]) => {\r\n        const detail: ProgUtil.SectionProps = {\r\n            sectionName, sectionNo,\r\n            chordList: chordList.map((chord) => {\r\n                const chordDetail = ProgUtil.getDefaultChord();\r\n                chordDetail.beatLen = chord.beatLen;\r\n                chordDetail.symbolKey = chord.symbolKey;\r\n                chordDetail.root = chord.root;\r\n                return chordDetail;\r\n            }),\r\n            backingNo: 1\r\n        }\r\n        const block: ProgUtil.UnitProps = { type: 'section', detail }\r\n        outputUnits.splice(outputUnits.length - 1, 0, block);\r\n        setOutputUnits(outputUnits.slice());\r\n    }\r\n\r\n    const applyProgTemplate = (templateBean: ProgTemplateUtil.TemplateBean) => {\r\n        outputUnits.splice(0);\r\n        ProgUtil.getInitialBlockList().forEach(progUnit => {\r\n            outputUnits.push(progUnit);\r\n        });\r\n        templateBean.unitList.forEach((unit) => {\r\n            insertProgUnit(unit.sectionName, '', unit.chordList);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 切り替え式ボタンのJSXを返すクロージャ\r\n     * @param labelName ラベル名\r\n     * @param clickEvent 押下時の処理\r\n     * @param isActive 選択中かどうか\r\n     * @returns JSX\r\n     */\r\n    const createSwitchableButton = (\r\n        labelName: string,\r\n        isActive: boolean,\r\n        clickEvent: () => void\r\n    ) => {\r\n        return (\r\n            <_SwitchableButton isActive={isActive}\r\n                onClick={clickEvent}\r\n            >{labelName}</_SwitchableButton>\r\n        );\r\n    }\r\n\r\n    const beatComboboxEnable = outputUnits.length <= 2;\r\n\r\n    // Blankモードの時は空白を表示\r\n    const distBeatFilter = buildMode === 'blank' ? '' : beatFilter;\r\n    return (\r\n        <_Frame >\r\n            <_Header>\r\n                {createSwitchableButton('Blank', buildMode === 'blank', () => {\r\n                    setOutputUnits(ProgUtil.getBlankBlockList());\r\n                    setBuildType('blank');\r\n                })}\r\n                {createSwitchableButton('Custom', buildMode === 'custom', () => {\r\n                    setOutputUnits(ProgUtil.getInitialBlockList());\r\n                    setBuildType('custom');\r\n                })}\r\n                {createSwitchableButton('Template', buildMode === 'template', () => {\r\n                    setOutputUnits(ProgUtil.getInitialBlockList());\r\n                    setBuildType('template');\r\n                })}\r\n            </_Header>\r\n            <_MainDiv>\r\n                <_LeftDiv isEnable={buildMode !== 'blank'}>\r\n                    <_BeatFormDiv>\r\n                        <ProgStyle._TitleLabel>Beat</ProgStyle._TitleLabel>\r\n                        <ProgStyle._Combobox value={distBeatFilter} isEnable={beatComboboxEnable} width={150}\r\n                            onChange={(e) => {\r\n                                beatChangeAction(e);\r\n                            }}>{beatOptionJsxList}</ProgStyle._Combobox>\r\n                    </_BeatFormDiv>\r\n                    {/* モードによって切り替えるコンテンツ（カスタムorテンプレート） */}\r\n                    <_SwitchDiv>{getSwitchContJsx()}</_SwitchDiv>\r\n                </_LeftDiv>\r\n                <_RightDiv>\r\n                    <ProgOutputFrame\r\n                        outputUnits={outputUnits}\r\n                        updateOutputUnits={() => { setOutputUnits(outputUnits.slice()) }}\r\n                    />\r\n                </_RightDiv>\r\n            </_MainDiv>\r\n            <_Footer>\r\n                {/* ダイアログを閉じる */}\r\n                <_ExecutableButton isEnable={true} onClick={closeAction}>Cancel</_ExecutableButton>\r\n                {/* 譜面を生成 */}\r\n                <_ExecutableButton isEnable={outputUnits.length >= 3} onClick={startAction}>Start</_ExecutableButton>\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ChordProgDialog;\r\n\r\nconst HEADER_HEIGHT = 50;\r\nconst FOOTER_HEIGHT = 50;\r\nconst BEAT_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 1024px;\r\n    height: 768px;\r\n    z-index: 11;\r\n    /* top: 100px;\r\n    left: 100px; */\r\n    /* width: calc(100% - 200px);\r\n    height: calc(100% - 200px); */\r\n    background-color: #929292;\r\n    border: solid 2px #404250;\r\n    border-radius: 8px;\r\n    /* border: 1px solid #dadada; */\r\n`;\r\n\r\n/**\r\n * ヘッダー\r\n */\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #7d8d97;\r\n    text-align: center;\r\n`;\r\n\r\n/**\r\n * メインコンポーネント\r\n */\r\nconst _MainDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_HEIGHT + FOOTER_HEIGHT}px);\r\n    /* background-color: #7d8d97; */\r\n    text-align: left;\r\n`;\r\n\r\n/**\r\n * 左側のコンポーネント\r\n */\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n   display: inline-block;\r\n   vertical-align: top;\r\n   width: calc(50% - 6px);\r\n   height: calc(100% - 8px);\r\n   background-color: #bdced8;\r\n   text-align: left;\r\n   margin: 4px 2px 4px 4px;\r\n   ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 拍選択\r\n */\r\nconst _BeatFormDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BEAT_HEIGHT}px;\r\n    /* background-color: #b4c7ba; */\r\n    padding: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _BeatSelect = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    text-align: left;\r\n    color: black;\r\n    vertical-align: top;\r\n    line-height: 24px;\r\n    width: 210px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 5px;\r\n`;\r\n\r\n\r\n/**\r\n * テンプレートとカスタムの切り替えコンテンツ表示\r\n */\r\nconst _SwitchDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    background-color: #cedbd7;\r\n    border: 1px solid #696969;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - ${BEAT_HEIGHT + 10}px);\r\n`;\r\n\r\n/**\r\n * 右側のコンポーネント\r\n */\r\nconst _RightDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    width: calc(50% - 6px);\r\n    height: calc(100% - 8px);\r\n    background-color: #bdced8;\r\n    text-align: left;\r\n    margin: 4px 4px 4px 2px;\r\n`;\r\n\r\n/**\r\n * フッター\r\n */\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n    & *{\r\n        margin: 10px 5px 0 0;\r\n    }\r\n`;\r\n\r\n/**\r\n * スイッチボタン\r\n */\r\nconst _SwitchableButton = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #5083c5;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c5b950;\r\n    `};\r\n    width: 200px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #375176;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #77a7e6;\r\n    ${props => !props.isActive ? '' : css`\r\n            background-color: #c5b950;\r\n    `};\r\n}\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #2d5625;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../utils/cacheUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ChordProgDialog from \"./chordProg/chordProgDialog\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [file, setFile] = useState<null | File>(null);\r\n\r\n    const fileHandle = store.scoreState.fileHandle;\r\n    const scoreData = store.scoreData;\r\n    const tabIndex = store.systemState.scoreTabIndex;\r\n\r\n    const loginProps = store.userEnv.login;\r\n\r\n    const [cloudScoreList, setCloudScoreList] = useState<null | { seq: number, name: string, hash: string, url: string }[]>(null);\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n    const [cloudScoreName, setCloudScoreName] = useState('-');\r\n\r\n    useEffect(() => {\r\n        loadCloudScore();\r\n    }, [loginProps]);\r\n\r\n    const loadCloudScore = () => {\r\n        if (loginProps != undefined) {\r\n            DataUtil.findUserScoreList(loginProps.seq).then((resList) => {\r\n                setCloudScoreList(resList.map((res) => {\r\n                    const seq = res['seq'];\r\n                    const hash = DataUtil.getHashedFromScoreSeq(seq);\r\n                    const url = DataUtil.getPreviewURL(seq);\r\n                    return { seq, name: res['dispnam'], hash, url };\r\n                }));\r\n                console.log('load');\r\n            });\r\n        }\r\n    }\r\n\r\n    const [fileInfo, scoreInfo]: [{\r\n        name: string;\r\n        size: string;\r\n        modified: string;\r\n    }, {\r\n        key: string;\r\n        tempo: string;\r\n        rate: string;\r\n        section: string;\r\n        chord: string;\r\n        bar: string;\r\n        time: string;\r\n        notes: string;\r\n    }] = useMemo(() => {\r\n        let name = '-';\r\n        let size = '-';\r\n        let modified = '-';\r\n        let key = '-';\r\n        let tempo = '-';\r\n        let rate = '-';\r\n        let section = '-';\r\n        let chord = '-';\r\n        let bar = '-';\r\n        let time = '-';\r\n        let notes = '-';\r\n        if (tabIndex === 0) {\r\n            if (file != null) {\r\n                name = file.name;\r\n                size = `${file.size.toString()} byte`;\r\n                modified = DataUtil.getStringFromDate(new Date(file.lastModified));\r\n            }\r\n            if (scoreData.chordList.length > 0) {\r\n                const init = scoreData.chordList[0].detail as DetailInit;\r\n                key = `${TheoryUtil.KEY12_MAJOR_SCALE_LIST[init.keyIndex]} ${init.scale}`;\r\n                tempo = init.bpm.toString();\r\n                rate = init.beatSignature;\r\n                let sectionNum = 0;\r\n                let chordNum = 0;\r\n                scoreData.chordList.forEach(chord => {\r\n                    switch (chord.type) {\r\n                        case 'section': sectionNum++; break;\r\n                        case 'chord': chordNum++; break;\r\n                    }\r\n                });\r\n                section = sectionNum.toString();\r\n                chord = chordNum.toString();\r\n\r\n                const cacheList = store.scoreState.elementCacheList;\r\n                if (cacheList.length > 0) {\r\n                    const last = cacheList[cacheList.length - 1];\r\n                    time = `${last.pastSecond / 1000}s`;\r\n                    bar = `${last.bar} (${last.surplusBeat})`;\r\n                }\r\n                notes = scoreData.notesList.length.toString();\r\n            }\r\n        }\r\n        return [{\r\n            name, size, modified\r\n        }, {\r\n            key, tempo, rate, section, chord, bar, time, notes\r\n        }]\r\n    }, [tabIndex, scoreData, file]);\r\n\r\n    useEffect(() => {\r\n        if (tabIndex === 0 && fileHandle != null) {\r\n            fileHandle.getFile().then(file => {\r\n                setFile(file);\r\n            });\r\n        }\r\n    }, [tabIndex]);\r\n\r\n    const setScoreData = ((data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    });\r\n\r\n    /**\r\n     * ラベルアイテムを生成する\r\n     * @param labelName ラベル名\r\n     * @param labelValue 値\r\n     * @returns JSX\r\n     */\r\n    const createLabelRecord = (labelName: string, labelValue: string) => {\r\n        return (\r\n            <_Recored>\r\n                <_ItemnLabel>{labelName}</_ItemnLabel>\r\n                <_ItemnValue>{labelValue}</_ItemnValue>\r\n            </_Recored>\r\n        );\r\n    }\r\n    /**\r\n     * テキストアイテムを生成する\r\n     * @param labelName ラベル名\r\n     * @param textValue 値\r\n     * @returns JSX\r\n     */\r\n    const createTextRecord = (labelName: string, textValue: string, changeAction: (e: React.ChangeEvent<HTMLInputElement>) => void) => {\r\n        return (\r\n            <_Recored>\r\n                <_ItemnLabel>{labelName}</_ItemnLabel>\r\n                <_ItemnInput\r\n                    type=\"text\" value={textValue}\r\n                    isEnable={focusIndex !== -1}\r\n                    onChange={changeAction}\r\n                />\r\n            </_Recored>\r\n        );\r\n    }\r\n\r\n    const searchLocalFileAction = () => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            // console.log(fileContents);\r\n            store.scoreState.fileHandle = fileHandle;\r\n            setFile(file);\r\n            const text = DataUtil.unZip(fileContents);\r\n            // const text = fileContents;\r\n            console.log(text);\r\n            setScoreData(JSON.parse(text));\r\n        })();\r\n    }\r\n\r\n    const fileDisconnectAction = () => {\r\n        store.scoreState.fileHandle = null;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // キャッシュの更新\r\n        store.scoreData = scoreData;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n        setFile(null);\r\n    };\r\n\r\n    const isDataConnect = fileHandle != null;\r\n\r\n\r\n    const cloudScoreListJsx = loginProps == undefined ? <></> : cloudScoreList == null ? (\r\n        <_Message>Now loading your cloud score...</_Message>\r\n    ) : cloudScoreList.map((score, i) => {\r\n\r\n        return <_CloudItem key={i} isActive={i === focusIndex} onClick={() => {\r\n            setFocusIndex(i);\r\n            const cur = cloudScoreList[i];\r\n            if (cur != null) {\r\n                setCloudScoreName(cur.name);\r\n            }\r\n        }}><_CName>{score.name}</_CName><_CHash> [{score.hash}]</_CHash></_CloudItem>\r\n    });\r\n\r\n\r\n    const uploadActioon = () => {\r\n        setCloudScoreList(null);\r\n        if (loginProps != undefined && cloudScoreList != null) {\r\n            const newScoreName = `new [${loginProps.id}] score`;\r\n            DataUtil.sendQueryRequestToAPI('update', `INSERT INTO scoretbl(user_seq, dispnam, data)\r\n                VALUES(${loginProps.seq}, '${newScoreName}', '${DataUtil.gZip(JSON.stringify(scoreData))}')\r\n            `).then(() => {\r\n                setFocusIndex(cloudScoreList.length);\r\n                setCloudScoreName(newScoreName);\r\n                loadCloudScore();\r\n            })\r\n        }\r\n    }\r\n\r\n    const overriteActioon = () => {\r\n        setCloudScoreList(null);\r\n        if (curCloudScore != null) {\r\n            DataUtil.sendQueryRequestToAPI('update', `UPDATE scoretbl SET dispnam = '${cloudScoreName}', data = '${DataUtil.gZip(JSON.stringify(scoreData))}'\r\n                WHERE seq = ${curCloudScore.seq}\r\n            `).then(() => {\r\n                loadCloudScore();\r\n            })\r\n        }\r\n    }\r\n    const deleteActioon = () => {\r\n        setCloudScoreList(null);\r\n        if (curCloudScore != null) {\r\n            DataUtil.sendQueryRequestToAPI('update', `DELETE FROM scoretbl WHERE seq = ${curCloudScore.seq}\r\n            `).then(() => {\r\n                setFocusIndex(-1);\r\n                loadCloudScore();\r\n            })\r\n        }\r\n    }\r\n\r\n    const downloadAction = () => {\r\n        if (curCloudScore != undefined) {\r\n            DataUtil.findScore(curCloudScore.seq).then((resList) => {\r\n                if (resList.length > 0) {\r\n                    const source = resList[0]['data'];\r\n                    const text = DataUtil.unZip(source);\r\n                    setScoreData(JSON.parse(text));\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const curCloudScore = cloudScoreList == null ? null : cloudScoreList[focusIndex];\r\n    const uploadEnable = scoreData.chordList.length > 0 && focusIndex === -1;\r\n    const isExistEditingData = scoreData.chordList.length > 0;\r\n\r\n    const isSelectedScore = focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            <_ButtonsDiv>\r\n                <_Button isEnable={true} onClick={() => {\r\n                    store.systemState.dialog = <ChordProgDialog setScoreData={setScoreData} />;\r\n                    dispatcher.system.setState(store.systemState);\r\n                }}>new score</_Button>\r\n            </_ButtonsDiv>\r\n            <_MainDiv>\r\n                <_Left>\r\n                    <_CloudDiv isEnable={true}>\r\n\r\n                        <_ButtonsDiv>\r\n                            <_Button isEnable={loginProps != undefined && uploadEnable} onClick={uploadActioon}>upload</_Button>\r\n                            <_Button isEnable={loginProps != undefined && isSelectedScore} onClick={() => {\r\n                                setFocusIndex(-1);\r\n                            }}>release</_Button>\r\n                        </_ButtonsDiv>\r\n                        <_ListFrame isEnable={loginProps != undefined}>\r\n                            {cloudScoreListJsx}\r\n                        </_ListFrame>\r\n                        <_ButtonsDiv>\r\n                            <_Button isEnable={loginProps != undefined && isSelectedScore && isExistEditingData} onClick={overriteActioon}>overrite</_Button>\r\n                            <_Button isEnable={loginProps != undefined && isSelectedScore && !isExistEditingData} onClick={downloadAction}>download</_Button>\r\n                            <_Button isEnable={loginProps != undefined && isSelectedScore} onClick={deleteActioon}>delete</_Button>\r\n                        </_ButtonsDiv>\r\n                    </_CloudDiv>\r\n                </_Left>\r\n                <_Right>\r\n                    {/* <_Source value={source} onChange={e => setSource(e.target.value)} /> */}\r\n\r\n                    <_ButtonsDiv>\r\n                        <_Button isEnable={!isDataConnect && !isExistEditingData} onClick={searchLocalFileAction}>load file</_Button>\r\n                        <_Button isEnable={isDataConnect} onClick={fileDisconnectAction}>disconnect</_Button>\r\n                        <_Button isEnable={isExistEditingData} onClick={() => {\r\n                            dispatcher.score.clearCache();\r\n                            if (isDataConnect) {\r\n                                fileDisconnectAction();\r\n                            }\r\n                            dispatcher.score.setScoreData({ notesList: [], chordList: [] });\r\n                        }}>clear</_Button>\r\n                    </_ButtonsDiv>\r\n                    <_DataInfoDiv isEnable={isDataConnect}>\r\n                        <_TitleLabel>Local</_TitleLabel>\r\n                        {createLabelRecord('file', fileInfo.name)}\r\n                        {createLabelRecord('size', fileInfo.size)}\r\n                        {createLabelRecord('last', fileInfo.modified)}\r\n                        {/* {createLabelRecord('size', fileInfo.size)}\r\n                        {createLabelRecord('modified', fileInfo.modified)} */}\r\n                    </_DataInfoDiv>\r\n                    <_DataInfoDiv isEnable={focusIndex !== -1}>\r\n                        <_TitleLabel>Cloud</_TitleLabel>\r\n                        {createTextRecord('name', curCloudScore == null ? '-' : cloudScoreName, (e) => {\r\n                            setCloudScoreName(e.target.value);\r\n                        })}\r\n                        {createLabelRecord('url', curCloudScore == null ? '-' : curCloudScore.url)}\r\n                        {createLabelRecord('share', curCloudScore == null ? '-' : 'full')}\r\n                    </_DataInfoDiv>\r\n                    <_ScoreInfoDiv isEnable={isExistEditingData}>\r\n                        <_TitleLabel>SCORE</_TitleLabel>\r\n                        {createLabelRecord('key', scoreInfo.key)}\r\n                        {createLabelRecord('tempo', scoreInfo.tempo)}\r\n                        {createLabelRecord('rate', scoreInfo.rate)}\r\n                        {createLabelRecord('section', scoreInfo.section)}\r\n                        {createLabelRecord('chord', scoreInfo.chord)}\r\n                        {createLabelRecord('bar', scoreInfo.bar)}\r\n                        {createLabelRecord('time', scoreInfo.time)}\r\n                        {createLabelRecord('notes', scoreInfo.notes)}\r\n                    </_ScoreInfoDiv>\r\n                </_Right>\r\n            </_MainDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #8a6b6b; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #969696; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\n// const _Source = styled.textarea`\r\n//     display: inline-block;\r\n//     width: calc(100% - 8px);\r\n//     margin: 4px 0 0 4px;\r\n//     height: calc(100% - 44px);\r\n//     /* background-color: #7e7e7e; */\r\n//     text-align: left;\r\n//     font-size: 20px;\r\n//     resize: none;\r\n//     box-sizing: border-box;\r\n//     color: #060053;\r\n// `;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    height: calc(100% - 48px);\r\n    background-color: #ffffff;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst DATA_INFO_HEIGHT = 180;\r\n\r\nconst _DataInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${DATA_INFO_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #9da5af;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ScoreInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${DATA_INFO_HEIGHT * 2 + 40 + 20}px);\r\n    margin: 0 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _CloudDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n`;\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #1f1f1f;\r\n    border: solid 1px #000;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\n\r\nconst _ListFrame = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 92px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    color: #d60000;\r\n    font-size: 24px;\r\n    /* font-weight: 600; */\r\n    /* background-color: white; */\r\n    margin: 0 0 0 4px;\r\n`;\r\n\r\nconst _CloudItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    border-bottom: 1px solid #888888;\r\n    /* background-color: white; */\r\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, transparent, #fdff8484);\r\n    `}\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    padding-left: 4px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n        ${props => !props.isActive ? '' : css`\r\n            background: linear-gradient(to bottom, transparent, #feffcd99);\r\n        `}\r\n    }\r\n`;\r\nconst _CName = styled.span` color: #00532c; `;\r\nconst _CHash = styled.span` color: #b9000042; `;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : TheoryUtil.getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: TheoryUtil.SymbolKey[] = [];\r\n        const parentLine: TheoryUtil.SymbolKey[] = [];\r\n        const childrenLine: TheoryUtil.SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = TheoryUtil.getSymbolDerives(baseSymbol.key);\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = TheoryUtil.getSymbolDerives(curSymbol.key);\r\n        TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\nimport { DetailChord } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = TheoryUtil.getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = TheoryUtil.getRootName({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = TheoryUtil.getRootName({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        // 見た目上１から数えるため\r\n        bar = cache.bar + 1;\r\n    }\r\n    // 小節変更タイミングで、余りの拍がある（頭でない）場合エラー\r\n    const isError = bar !== -1 && cache.surplusBeat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n        if(chordOn != null) {\r\n            chordName += `/${chordOn}`;\r\n        }\r\n    }\r\n\r\n    let minuteStr = '';\r\n    if(cache.minute !== 0) {\r\n        switch(cache.minute) {\r\n            case 1: minuteStr = '→/16'; break;\r\n            case 2: minuteStr = '→/8'; break;\r\n            case -1: minuteStr = '←/16'; break;\r\n            case -2: minuteStr = '←/8'; break;\r\n        }\r\n    }\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.surplusBeat === 0 ? <>&nbsp;</> : cache.surplusBeat}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : minuteStr}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailAlter = (props: {\r\n    detail: DetailAlter;\r\n}) => {\r\n\r\n    const type = props.detail.alterType;\r\n\r\n    const getDetailInfo = (): string => {\r\n        let ret = '-';\r\n        if (type != null) {\r\n            switch (type) {\r\n                case 'modulate': {\r\n\r\n                    const modRel = props.detail.modRel;\r\n                    if (modRel != null) {\r\n                        switch (modRel) {\r\n                            case 'domm': {\r\n                                const val = props.detail.dommVal;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                            case 'relative':\r\n                            case 'parallel': {\r\n                                ret = modRel;\r\n                            } break;\r\n                            case 'key': {\r\n                                const val = props.detail.keyAdj;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                        }\r\n                    }\r\n                } break;\r\n                case 'tempo' : {\r\n                    const tempoRel = props.detail.tempoRel;\r\n                    switch(tempoRel) {\r\n                        case 'diff': {\r\n                            const val = props.detail.tempoDiff;\r\n                            const sign = val > 0 ? '+' : ''; \r\n                            ret = `${tempoRel}: ${sign}${val}`;\r\n                        } break;\r\n                        case 'rate': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoRate}%`;\r\n                        } break;\r\n                        case 'abs': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoAbs}`;\r\n                        } break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                {type == null ? 'alter' : type}\r\n            </_Type>\r\n            <_Detail>\r\n                {getDetailInfo()}\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailChord, Scale } from \"../../../../../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../../../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 2 | 1;\r\n\r\n/**\r\n * コードブロックのコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isSustainMode: boolean;\r\n    isCurrent: boolean;\r\n    cache: ScoreCache.Element;\r\n    chordCacheList: ScoreCache.Chord[];\r\n    keyIndex: number;\r\n    scale: Scale;\r\n}) => {\r\n\r\n    const minute = props.detail.minute;\r\n    const symbol = TheoryUtil.getSymbolFromKey(props.detail.symbolKey) as TheoryUtil.SymbolParams;\r\n    const symbolName = symbol.name;\r\n    const chordBacking = props.detail.backing;\r\n    const cache = props.cache;\r\n    const chordCache = props.chordCacheList[cache.chordBlockNo];\r\n\r\n    const backingError = chordCache != undefined ? chordCache.backingError : false;\r\n    \r\n    return useMemo(() => {\r\n\r\n        // const keySwitch = store.scoreState.keySwitch;\r\n        let degreeRoot: null | string = null;\r\n        let degreeOn: null | string = null;\r\n        let chordRoot: null | string = null;\r\n        let chordOn: null | string = null;\r\n\r\n        if (props.detail.root != null) {\r\n            degreeRoot = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            });\r\n            chordRoot = TheoryUtil.getRootName({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, props.keyIndex);\r\n\r\n            if (props.detail.on != null) {\r\n                degreeOn = TheoryUtil.getDegreeRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.on.isFlat\r\n                });\r\n                chordOn = TheoryUtil.getRootName({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.root.isFlat\r\n                }, props.keyIndex);\r\n            }\r\n        }\r\n\r\n        const diatonicList = TheoryUtil.getDiatonicDegreeList(props.scale);\r\n        const isDiatonic = diatonicList.includes(degreeRoot + symbolName);\r\n\r\n        return <_Wrap>\r\n            <_Degree\r\n                // isSwitch={keySwitch.sustainMode && props.isCurrent}\r\n                isSwitch={props.isSustainMode}\r\n                scaleRelation={degreeRoot != null && isDiatonic ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}{symbolName}{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeRoot>\r\n                    {/* <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord> */}\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={props.isSustainMode}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n            <_Backing>\r\n                {backingError ? <_Error /> : <>\r\n                    {chordBacking.voicingList.length === 0 ? '' : <_Voicing />}\r\n                    {chordBacking.voicingList.length === 0 ? '' : chordBacking.pattern == null ? '' : <_Pattern />}\r\n                </>}\r\n            </_Backing>\r\n        </_Wrap>\r\n    }\r\n        , [\r\n            props.scale,\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            props.isSustainMode,\r\n            props.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail,\r\n            props.detail.backing,\r\n            backingError\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: TheoryUtil.ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 18px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #4e5163cc;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 2 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 1 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Backing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 6px;\r\n    /* background-color: #00a048; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _Error = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background-color: #af3838;\r\n`;\r\n\r\nconst _Voicing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 2px 0 0;\r\n    height: 4px;\r\n    border-radius: 4px 0 0 4px;\r\n    border: solid 1px #0000004e;\r\n    background-color: #acb6ca;\r\n`;\r\n\r\nconst _Pattern = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 0 0 2px;\r\n    height: 4px;\r\n    border-radius: 0 4px 4px 0;\r\n    border: solid 1px #0000004e;\r\n    background-color: #accab3;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    // const jsxList: JSX.Element[] = [];\r\n    // jsxList.push(<_Border key={0} />);\r\n    // jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    const value = props.detail.fixed;\r\n    return (\r\n        <_Wrap isStart={value === 'Start'}>\r\n            {/* {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()} */}\r\n            <_Label>{value}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div<{\r\n    isStart: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    border-left: 1px solid #00000083;\r\n    border-top: 1px solid #00000083;\r\n    border-right: 1px solid #00000083;\r\n    /* border: 1px solid #00000083; */\r\n    box-sizing: border-box;\r\n    background-color: #9b9b9b1f;\r\n    ${props => props.isStart ? css`\r\n        border-radius: 0 35px 0 0;\r\n    ` : css`\r\n        border-radius: 35px 0 0 0;\r\n    `}\r\n`;\r\n\r\n// const _Border = styled.div`\r\n//     display: inline-block;\r\n//     width: 10px;\r\n//     height: 100%;\r\n//     background-color: #b4b4b4;\r\n//     vertical-align: middle;\r\n// `;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    /* width: calc(100% - 10px); */\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #960000b0;\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    /* vertical-align: middle; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{TheoryUtil.KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.beatSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailSection } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailSection = (props: {\r\n    detail: DetailSection;\r\n}) => {\r\n    // const { store } = useContext(GlobalContext);\r\n\r\n    // const state = store.scoreState;\r\n    // const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    // const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Label>{curSection.labelName}</_Label> */}\r\n            <_Label>{props.detail.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcAlter = (props: {\r\n    detail: DetailAlter;\r\n    prevCache: ScoreCache.Element;\r\n    curCache: ScoreCache.Element;\r\n}) => {\r\n\r\n    const getType = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate': return 'Key';\r\n            case 'tempo': return 'Tempo';\r\n            case 'beat': return 'Beat';\r\n        }\r\n    }\r\n    const getDetail = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate':{\r\n                const prevKey = TheoryUtil.KEY12_SHARP_LIST[props.prevCache.keyIndex] + (props.prevCache.scale === 'major' ? '' : 'm');\r\n                const curKey = TheoryUtil.KEY12_SHARP_LIST[props.curCache.keyIndex] + (props.curCache.scale === 'major' ? '' : 'm');\r\n                return `${prevKey}→${curKey}`;\r\n            }\r\n            case 'tempo':{\r\n                const prevTempo = props.prevCache.bpm;\r\n                const curTempo = props.curCache.bpm;\r\n                return `${prevTempo}→${curTempo}`;\r\n            }\r\n            case 'beat':{\r\n                const prevBeat = props.prevCache.beatSignature;\r\n                const curBeat = props.curCache.beatSignature;\r\n                return `${prevBeat}→${curBeat}`;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Type>{getType()}</_Type>\r\n            <_Detail>{getDetail()}</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\ntype ChordDefBean = {\r\n    root: TheoryUtil.DegreeProps;\r\n    symbolKey: TheoryUtil.SymbolKey;\r\n}\r\n\r\nconst ChordEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n    }, [detail.root, detail.symbolKey]);\r\n\r\n    const getChord = (index: number, isFlat: boolean, symbolKey: TheoryUtil.SymbolKey): ChordDefBean => {\r\n        return { root: { index, isFlat }, symbolKey };\r\n    }\r\n\r\n    const createRow = (label: JSX.Element, chordList: ChordDefBean[]): JSX.Element => {\r\n        const listJsx: JSX.Element[] = [];\r\n        listJsx.push(<_Header key={listJsx.length}>{label}</_Header>);\r\n        chordList.forEach((chord) => {\r\n            const rootName = TheoryUtil.getDegreeRoot(chord.root);\r\n            const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\r\n            const symbolName = symbol.name;\r\n            listJsx.push(\r\n                <_Item isActive={false} key={listJsx.length}>\r\n                    {rootName + symbolName}\r\n                </_Item>);\r\n        });\r\n        return <_Row>{listJsx}</_Row>;\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {createRow(<>triad</>, [\r\n                getChord(0, false, 'major'),\r\n                getChord(2, false, 'minor'),\r\n                getChord(4, false, 'minor'),\r\n                getChord(5, false, 'major'),\r\n                getChord(7, false, 'major'),\r\n                getChord(9, false, 'minor'),\r\n                getChord(11, false, 'minor-minus5'),\r\n            ])}\r\n            {/* {createRow(<>Tetrad</>, [\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'minor-7th'),\r\n                getChord(4, false, 'minor-7th'),\r\n                getChord(5, false, 'major-maj7th'),\r\n                getChord(7, false, 'major-min7th'),\r\n                getChord(9, false, 'minor-7th'),\r\n                getChord(11, false, 'minor7-minus5'),\r\n            ])} */}\r\n            {createRow(<>domm</>, [\r\n                getChord(9, false, 'major-min7th'),\r\n                getChord(11, false, 'major-min7th'),\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'major-min7th'),\r\n                getChord(4, false, 'major-min7th'),\r\n            ])}\r\n            {createRow(<>domm*</>, [\r\n                getChord(1, false, 'diminish'),\r\n                getChord(3, false, 'diminish'),\r\n                getChord(4, false, 'diminish'),\r\n                getChord(6, false, 'diminish'),\r\n                getChord(8, false, 'diminish'),\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    /* height: 160px; */\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    /* height: 100%; */\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport SymbolEditor from \"../tool/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailAlter from \"./form/elementDetailAlter\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcAlter from \"./calc/calcAlter\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { ScoreState } from \"../../../../../redux/store/score/scoreState\";\r\nimport ChordEditor from \"../tool/chordEditor\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n    element: ChordElement;\r\n    state: ScoreState;\r\n    setState: (state: ScoreState) => void;\r\n}) => {\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = props.state;\r\n    const keySwitch = state.keySwitch;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    // const chordList = store.scoreData.chordList;\r\n    // const element = chordList[props.index];\r\n    const element = props.element;\r\n    const cache = state.elementCacheList[props.index];\r\n    const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n    const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n    const isFocus = props.index >= distHead && props.index <= distTail;\r\n    const isRange = isFocus && distHead != distTail;\r\n    const isSameSection = isFocus || state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        props.setState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    const elementJson = JSON.stringify(element);\r\n\r\n    const isError = () => {\r\n        let ret = false;\r\n        if(element.type === 'chord') {\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            ret = chordCache.backingError;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    return useMemo(() => {\r\n        // console.log(`pos: ${props.index}`);\r\n        const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n        const isInactive = !(isSameSection || element.type === 'init');\r\n        return (\r\n            <_Wrap\r\n                ref={wrapRef}\r\n                isSelectable={element.type !== 'fixed'}\r\n                isActive={isFocus}\r\n                isInactive={isInactive}\r\n                isAdditional={['chord', 'section', 'alter', 'init'].includes(element.type)}\r\n            >\r\n                <_Head>\r\n                    {element.type !== 'chord' ? <></> : (\r\n                        <_CurKey>{TheoryUtil.getDisplayKeyScaleName(cache.keyIndex, cache.scale)}</_CurKey>\r\n                    )}\r\n                </_Head>\r\n\r\n                {/* 要素の入力フォーム */}\r\n                {['init', 'chord', 'section', 'alter'].includes(element.type) ? (\r\n                    <_Form\r\n                        ref={bodyRef}\r\n                        isActive={isFocus}\r\n                        isRange={isRange}\r\n                        isInactive={isInactive}\r\n                        type={element.type}\r\n                        isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                        onClick={() => {\r\n                            if (element.type === 'fixed') {\r\n                                return;\r\n                            }\r\n                            if (!state.keySwitch.distMode) {\r\n                                state.focusIndex = props.index;\r\n                                state.distIndex = state.focusIndex;\r\n                            } else {\r\n                                state.distIndex = props.index;\r\n                            }\r\n                            props.setState(state);\r\n                        }}\r\n                    >{(() => {\r\n                        switch (element.type) {\r\n                            case 'init': {\r\n                                const detail = element.detail as DetailInit;\r\n                                return (<ElementDetailInit detail={detail} />);\r\n                            }\r\n                            case 'section': {\r\n                                const detail = element.detail as DetailSection;\r\n                                return (<ElementDetailSection detail={detail} />);\r\n                            }\r\n                            case 'chord': {\r\n                                const detail = element.detail as DetailChord;\r\n                                return (<ElementDetailChord\r\n                                    detail={detail}\r\n                                    isCurrent={isFocus}\r\n                                    cache={cache}\r\n                                    chordCacheList={state.chordCacheList}\r\n                                    keyIndex={cache.keyIndex}\r\n                                    isSustainMode={isFocus && state.keySwitch.sustainMode}\r\n                                    scale={cache.scale}\r\n                                />);\r\n                            }\r\n                            case 'alter': {\r\n                                const detail = element.detail as DetailAlter;\r\n                                return (<ElementDetailAlter detail={detail} />);\r\n                            }\r\n                        }\r\n                    })()}\r\n                    </_Form>\r\n                ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n                {/* 入力フォーム下部の計算によって出力される情報 */}\r\n                {\r\n                    element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                        element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                            element.type === 'alter' ? (\r\n                                <CalcAlter\r\n                                    detail={element.detail as DetailAlter}\r\n                                    prevCache={state.elementCacheList[props.index - 1]}\r\n                                    curCache={cache}\r\n                                />\r\n                            ) :\r\n                                <></>\r\n                }\r\n                <>{!(isCurrent && chordDetail != null && state.keySwitch.chordMode) ? '' :\r\n                    <ChordEditor />\r\n                }</>\r\n                <>{!(isCurrent && chordDetail != null && chordDetail.root != null && state.keySwitch.symbolMode) ? '' :\r\n                    <SymbolEditor />\r\n                }</>\r\n                {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                    <_Operations>\r\n                        <_OperationItem>-</_OperationItem>\r\n                        <_OperationItem\r\n                        // onClick={() => dispatcher.score.addChordElement()}\r\n                        >+</_OperationItem>\r\n                    </_Operations>\r\n                )}\r\n            </_Wrap>\r\n        );\r\n    }, [\r\n        elementJson, isSameSection, isRange, isFocus,\r\n        keySwitch.chordMode, keySwitch.symbolMode, keySwitch.sustainMode,\r\n        isError(), cache.keyIndex, cache.scale\r\n    ]);\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isRange: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    /* border: solid 1px #00000049; */\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #df8484;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #44b168;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'alter' ? '' : css`\r\n        border: solid 1px #604fc0;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 4px;\r\n    ${props => props.isInactive ? '' : css`\r\n        /* background-color: #ebf1e2; */\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4c9df;\r\n        border: solid 1px #00000049;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n    ${props => !props.isRange ? '' : css`\r\n        background-color: #80d4e2;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isAdditional: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isAdditional ? '' : css`\r\n        /* background-color: #e8ff9549; */\r\n        background: linear-gradient(to bottom, transparent,transparent,transparent, #ffffff9e);\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #ffffff9b;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (cacheList.length === chordList.length) {\r\n        for (let i = 0; i < cacheList.length; i++) {\r\n            list.push(\r\n                <ScoreElement key={list.length}\r\n                    index={i}\r\n                    element={chordList[i]}\r\n                    state={store.scoreState}\r\n                    setState={dispatcher.score.setScoreState}\r\n                />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {list}\r\n            {/* <_Frame> */}\r\n            {/* <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note> */}\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    /* overflow: auto; */\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #d8d8d8;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    state.distIndex = state.focusIndex;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 46px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #97cce0dd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #929292;\r\n    /* border-radius: 20px 20px 20px 20px; */\r\n    border-radius: 2px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 25px;\r\n        font-size: 18px;\r\n        /* font-weight: 600; */\r\n        color: #4d4d4d;\r\n        /* background-color: #0000003a; */\r\n        line-height: 22px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 21px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #adadad39; */\r\n        line-height: 20px;\r\n    }\r\n`;","import { on } from \"stream\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\nimport { getKeyIndexFromPitcher, getNormalizeLenFromNotes } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nnamespace HarmonizeUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n        const state = store.scoreState;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        const reserveTasks = store.reserveTasks;\r\n        let firstTime = -1;\r\n        const update = () => {\r\n            // if (store.invalidate.harmonize) {\r\n            //     store.invalidate.harmonize();\r\n            // }\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = state.focusIndex; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n            const element = chordList[i];\r\n\r\n            /**\r\n             * 要素の切り替わり時の処理をタスクに追加する\r\n             * @param callback 実行する処理\r\n             */\r\n            const addProgAction = (callback: () => void) => {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        callback();\r\n                    }, cache.pastSecond - firstTime - adjsut)\r\n                );\r\n            }\r\n\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                // 開始時のノーツの位置（時間）を保存する。\r\n                if (firstTime === -1) {\r\n                    firstTime = cache.pastSecond;\r\n                }\r\n\r\n                // コードが指定されてい場合\r\n                if (detail.root == null) {\r\n                    addProgAction(()=> {\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        update();\r\n                    });\r\n                }\r\n\r\n                // バッキングエラーがない場合\r\n                if (!chordCache.backingError) {\r\n                    const backing = detail.backing;\r\n                    const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n\r\n                    // const chordTime = 60 / cache.bpm * len;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    const chordTime = TheoryUtil.calcSustainMsec(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        cache.bpm,\r\n                        cache.beatSignature\r\n                    );\r\n\r\n                    addProgAction(()=> {\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        setTimeout(() => {\r\n                            update();\r\n                        }, 0);\r\n                    });\r\n                } else {\r\n                    // バッキングエラーがある場合プレビューを止める\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                        }, (cache.pastSecond - firstTime - adjsut))\r\n                    );\r\n                }\r\n            }\r\n\r\n            // 終端の要素を処理\r\n            if (i === chordList.length - 1) {   \r\n                addProgAction(()=> {\r\n                    HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                });\r\n            }\r\n        }\r\n\r\n        // メロディを再生\r\n        if (!state.isSolo) {\r\n            previewMelody(firstTime / 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n        state.isPreview = true;\r\n        update();\r\n    }\r\n\r\n    const previewMelody = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const instrument = store.instruments.soundfontPlayer;\r\n\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = 0; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n\r\n            if (posTime < start) continue;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    dispatcher.melody.adjustScrollX();\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                    }, 0);\r\n                }, (posTime - start) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            // if (i === data.notesList.length - 1) {\r\n            //     reserveTasks.push(\r\n            //         setTimeout(() => {\r\n            //             stopPreview(store, dispatcher, reserveTasks);\r\n            //         }, (posTime - start + lenTime) * 1000)\r\n            //     );\r\n            // }\r\n        }\r\n    }\r\n\r\n    // ハーモニーのプレビューを停止する。\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        state.isPreview = false;\r\n        // store.instruments.sampler.releaseAll();\r\n        // state.focusIndex = state.lastFocus;\r\n        reserveTasks.forEach(id => clearTimeout(id));\r\n        dispatcher.system.setReserveTasks([]);\r\n        dispatcher.score.setScoreState(state);\r\n\r\n        store.instruments.harmony?.stop();\r\n    }\r\n\r\n    // 選択中の要素のバッキングパターンを鳴らす\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.scoreState;\r\n        const reserveTasks = store.reserveTasks;\r\n        const cache = state.elementCacheList[state.focusIndex];\r\n        const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n        const curChord = store.scoreData.chordList[state.focusIndex];\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n            // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n            // const chordTime = 60 / cache.bpm * len;\r\n\r\n            const minute = detail.minute.head + detail.minute.tail;\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                detail.beatLen,\r\n                minute,\r\n                cache.bpm,\r\n                cache.beatSignature\r\n            );\r\n\r\n            BackingUtil.playBacking(store, store.reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.score.setScoreState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n    }\r\n}\r\n\r\nexport default HarmonizeUtil;\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\nimport { ChordBacking } from \"../../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\nimport { NoteKeySwitch } from \"../../../../../redux/store/score/scoreState\";\r\n\r\nnamespace BackingEditorInput {\r\n\r\n    export const main = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const data = store.scoreData;\r\n        const state = store.backingState;\r\n\r\n        if (state == null) return;\r\n\r\n        if (!state.isPreview) {\r\n            edit(e, state, keySwitch, dispatcher);\r\n        } else {\r\n\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const edit = (e: KeyboardEvent, state: BackingState.Editor, keySwitch: NoteKeySwitch, dispatcher: Dispatcher) => {\r\n\r\n        const pattern = state.pattern;\r\n\r\n        // 共通処理\r\n        common(e, state, dispatcher);\r\n\r\n        if (pattern != null) {\r\n            if (pattern.channelIndex === -1) {\r\n                patternNormalMode(e, state, pattern, dispatcher);\r\n            } else {\r\n                patternDetailMode(e, state, pattern, keySwitch.sustainMode, dispatcher);\r\n            }\r\n        }\r\n    }\r\n\r\n    const common = (e: KeyboardEvent, state: BackingState.Editor, dispatcher: Dispatcher) => {\r\n\r\n        switch (e.key) {\r\n            case 'b': {\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n            case 'z': {\r\n                const voicingList = BackingUtil.getVoicingListFromTable(state.voicingTable);\r\n                const pattern = state.pattern == null ? null : BackingUtil.buildPatternProps(state.pattern);\r\n                const test: ChordBacking = { voicingList, pattern };\r\n                console.log('voicingList: ' + DataUtil.gZip(JSON.stringify(voicingList)));\r\n                console.log('pattern: ' + DataUtil.gZip(JSON.stringify(pattern)));\r\n                console.log('source: ' + DataUtil.gZip(JSON.stringify(test)));\r\n                console.log('source: ' + JSON.stringify(test));\r\n            }\r\n                break;\r\n            case ' ': {\r\n                if (!state.hasError) {\r\n                    dispatcher.backing.testBacking();\r\n                }\r\n            }\r\n                break;\r\n            case 'Enter': {\r\n                dispatcher.backing.mappingEditorToScore();\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * パターン編集の通常モード\r\n     * @param e \r\n     * @param state \r\n     * @param pattern \r\n     * @param dispatcher \r\n     */\r\n    const patternNormalMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, dispatcher: Dispatcher) => {\r\n\r\n        const update = () => dispatcher.backing.setState(state);\r\n        switch (e.key) {\r\n            case 'ArrowLeft': {\r\n                dispatcher.backing.movePatternColumn(false);\r\n            }\r\n                break;\r\n            case 'ArrowRight': {\r\n                dispatcher.backing.movePatternColumn(true);\r\n            }\r\n                break;\r\n            case 'ArrowUp': {\r\n                dispatcher.backing.incrementVel(1);\r\n            }\r\n                break;\r\n            case 'ArrowDown': {\r\n                dispatcher.backing.incrementVel(-1);\r\n            }\r\n                break;\r\n            case 'a': {\r\n                dispatcher.backing.addPatternColumn();\r\n            }\r\n                break;\r\n            case 'w': {\r\n                dispatcher.backing.switchLayer();\r\n            }\r\n                break;\r\n            case 'e': {\r\n                dispatcher.backing.switchMode();\r\n            }\r\n                break;\r\n            case '1': {\r\n                dispatcher.backing.setCurrentDivRate(16);\r\n            }\r\n                break;\r\n            case '2': {\r\n                dispatcher.backing.setCurrentDivRate(8);\r\n            }\r\n                break;\r\n            case '3': {\r\n                dispatcher.backing.setCurrentDivRate(4);\r\n            }\r\n                break;\r\n            case '4': {\r\n                dispatcher.backing.setCurrentDivRate(2);\r\n            }\r\n                break;\r\n            case '5': {\r\n                dispatcher.backing.setCurrentDivRate(1);\r\n            }\r\n                break;\r\n            case '.': {\r\n                dispatcher.backing.toggleCurrentDivHalf();\r\n            }\r\n                break;\r\n            case 'Delete': {\r\n                dispatcher.backing.deleteColumn();\r\n            }\r\n                break;\r\n            case 's': {\r\n                pattern.channelIndex = 0;\r\n                update();\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * パターン編集の詳細モード\r\n     * @param e \r\n     * @param state \r\n     * @param pattern \r\n     * @param isEdit \r\n     * @param dispatcher \r\n     */\r\n    const patternDetailMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, isEdit: boolean, dispatcher: Dispatcher) => {\r\n\r\n        const update = () => dispatcher.backing.setState(state);\r\n        if (!isEdit) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft': {\r\n                    dispatcher.backing.movePatternColumn(false);\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    dispatcher.backing.movePatternColumn(true);\r\n                }\r\n                    break;\r\n                case 'ArrowUp': {\r\n                    dispatcher.backing.moveChannelIndex(false);\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.backing.moveChannelIndex(true);\r\n                }\r\n                    break;\r\n                case 's': {\r\n                    pattern.channelIndex = -1;\r\n                    update();\r\n                }\r\n                    break;\r\n                case 'a': {\r\n                    const curNotes = dispatcher.backing.getNotes();\r\n\r\n                    const hasStaccato = () => {\r\n                        const layer = pattern.layers[pattern.layerIndex];\r\n                        const search = layer.table.find((record) => {\r\n                            const cell = record[pattern.lenIndex];\r\n                            if (cell != null && cell.signal === 's') return cell;\r\n                        });\r\n                        return search != undefined;\r\n                    }\r\n                    // 同列にスタッカートがある場合、スタッカートを設定\r\n                    const signal = !hasStaccato() ? 'n' : 's';\r\n                    const notes: BackingState.NoteStatus | null = curNotes == null ? { signal, timing: 0, velAdj: 0 } : null;\r\n                    dispatcher.backing.setNotes(notes);\r\n                    dispatcher.backing.updateErrorState();\r\n                }\r\n                    break;\r\n            }\r\n        } else {\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const baseVel = layer.velocityList[pattern.lenIndex];\r\n            const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n            const cell = layer.table[channelIndex][pattern.lenIndex];\r\n\r\n            if (cell != null) {\r\n                let tempTiming = cell.timing == undefined ? 0 : cell.timing;\r\n                let tempVelAdj = cell.velAdj == undefined ? 0 : cell.velAdj;\r\n                const vel = baseVel + tempVelAdj;\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        if (vel < 10) {\r\n                            tempVelAdj++;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        if (vel > 1) {\r\n                            tempVelAdj--;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowLeft': {\r\n                        if (tempTiming > -10) {\r\n                            tempTiming--;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        if (tempTiming < 10) {\r\n                            tempTiming++;\r\n                        }\r\n                    }\r\n                        break;\r\n                }\r\n                if (tempVelAdj !== 0) {\r\n                    cell.velAdj = tempVelAdj;\r\n                } else {\r\n                    delete cell.velAdj;\r\n                }\r\n                if (tempTiming != 0) {\r\n                    cell.timing = tempTiming;\r\n                } else {\r\n                    delete cell.timing;\r\n                }\r\n                update();\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default BackingEditorInput;","import styled, { css } from \"styled-components\";\r\n\r\nexport namespace SideFormStyles {\r\n\r\n    export const ___CSS_FORM = css`\r\n        display: inline-block;\r\n        /* width: 100px; */\r\n        height: 25px;\r\n        background-color: #bdbdbd;\r\n        border: 1px solid #000;\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        color: #303030;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        text-align: center;\r\n    `;\r\n\r\n    export const ___CSS_TITLE = css`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 26px;\r\n        /* background-color: #f0f0f0; */\r\n        background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n        border: 1px solid #222222;\r\n        font-size: 20px;\r\n        color: #ffffff;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        box-sizing: border-box;\r\n        /* border: 1px solid #c50000; */\r\n        text-align: center;\r\n    `;\r\n\r\n    export const createNumberForm = (value: number, isEnable: boolean,\r\n         onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n         min: number, max:number, step:number) => {\r\n\r\n        return (\r\n            <_NumberForm isEnable={isEnable}>\r\n                <input\r\n                    type=\"number\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"range\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </_NumberForm>\r\n        );\r\n    }\r\n\r\n    const _NumberForm = styled.div<{\r\n        isEnable: boolean;\r\n    }>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 55px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 5px;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n    `;\r\n}","import { stat } from \"fs\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport BackingEditorInput from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    // プレビュー再生時\r\n    if (state.isPreview) {\r\n        switch (e.key) {\r\n            case ' ': {\r\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n        return;\r\n    } else {\r\n        if (store.scoreState.hideMenu === 'none') {\r\n            if (isElement) {\r\n                if (keySwitch.control) {\r\n                    switch (e.key) {\r\n                        case 'c': {\r\n                            const element = data.chordList[state.focusIndex];\r\n                            if (element.type === \"chord\") {\r\n                                const detail = element.detail as DetailChord;\r\n                                if (detail.root != null) {\r\n                                    dispatcher.score.cloneBacking();\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'x': {\r\n                            dispatcher.score.copyElementList();\r\n                        }\r\n                            break;\r\n                        case 'v': {\r\n                            if (state.copiedElementList != null) {\r\n                                dispatcher.score.pasteElementList();\r\n                            } else if (state.cloneBacking != null) {\r\n\r\n                                const element = data.chordList[state.focusIndex];\r\n                                if (element.type === \"chord\") {\r\n                                    const detail = element.detail as DetailChord;\r\n                                    if (detail.root != null) {\r\n                                        dispatcher.score.pastBacking();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 's': {\r\n                            // dispatcher.score.saveFile();\r\n                            DataUtil.saveFile(JSON.stringify(data), state);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.distMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.moveDist(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.moveDist(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.sustainMode) {\r\n                    switch (e.key) {\r\n                        case config.decRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(false);\r\n                        }\r\n                            break;\r\n                        case config.incRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(true);\r\n                        }\r\n                            break;\r\n                        case config.decBeat: {\r\n                            dispatcher.score.incrementBeatLen(false);\r\n                        }\r\n                            break;\r\n                        case config.incBeat: {\r\n                            dispatcher.score.incrementBeatLen(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minHeadMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, 1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, -1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minTailMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, -1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, 1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.chordMode) {\r\n                    // switch (e.key) {\r\n                    //     case 'ArrowUp': {\r\n                    //         dispatcher.symbol.toNext(false);\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowDown': {\r\n                    //         dispatcher.symbol.toNext(true);\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowLeft': {\r\n                    //         dispatcher.symbol.toBase();\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowRight': {\r\n                    //         dispatcher.symbol.toDerive();\r\n                    //     }\r\n                    //         break;\r\n                    // }\r\n                } else if (keySwitch.symbolMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.symbol.toNext(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.symbol.toNext(true);\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.symbol.toBase();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.symbol.toDerive();\r\n                        }\r\n                            break;\r\n                    }\r\n                } else {\r\n                    NoteBasicInput(e, store, dispatcher);\r\n                }\r\n            }\r\n        } else if (store.scoreState.hideMenu === 'backing') {\r\n            BackingEditorInput.main(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const state = store.scoreState;\r\n    if (!state.isPreview) {\r\n        // if (state.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case 'Control': {\r\n                keySwitch.control = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.distMode: {\r\n                if (!keySwitch.control) {\r\n                    keySwitch.distMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.edit1: {\r\n                if (!(keySwitch.control || keySwitch.distMode)) {\r\n                    keySwitch.sustainMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'v': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode)) {\r\n                    keySwitch.chordMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.edit2: {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode)) {\r\n                    keySwitch.symbolMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'd': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode)) {\r\n                    keySwitch.minHeadMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'g': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode || keySwitch.minHeadMode)) {\r\n                    keySwitch.minTailMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n        }\r\n        // }\r\n    }\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const element = data.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n    const curType = element.type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                }\r\n                    break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(cache.scale, Number(e.key) - 1);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.left: {\r\n            if (state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(false);\r\n            } else {\r\n                dispatcher.score.releaseRange(false);\r\n            }\r\n        }\r\n            break;\r\n        case config.right: {\r\n            if (state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(true);\r\n            } else {\r\n                dispatcher.score.releaseRange(true);\r\n            }\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.up: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.down: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'm': {\r\n            dispatcher.score.addAlterElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case ' ': {\r\n            // if (!chordCache.backingError) {\r\n                HarmonizeUtil.previewStart(store, dispatcher);\r\n            // }\r\n        }\r\n            break;\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BeatSignature, DetailAlter as DetailAlter, AlterType, ModulateRelation, TempoRelation } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormAlter = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailAlter;\r\n\r\n    const type = detail.alterType;\r\n\r\n    const update = () => {\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const createAlertTypeItem = (value: AlterType | '-', isActive: boolean): JSX.Element => {\r\n        const type = value === '-' ? null : value;\r\n        return <_Form isActive={isActive}\r\n            onClick={() => {\r\n                //値が変わった時のみ処理を実行\r\n                if (detail.alterType !== type) {\r\n                    detail.alterType = type;\r\n                    // 全ての項目を初期化\r\n                    detail.modRel = null;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    detail.tempoRel = null;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    detail.beatSignature = '4/4';\r\n                    update();\r\n                }\r\n            }}> {value}</_Form >;\r\n    }\r\n\r\n    const createModulateRelationItem = (value: ModulateRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'modulate' && rel == detail.modRel}\r\n            onClick={() => {\r\n                if (detail.modRel !== rel) {\r\n                    detail.modRel = rel;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createTempoRelationItem = (value: TempoRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'tempo' && rel == detail.tempoRel}\r\n            onClick={() => {\r\n                if (detail.tempoRel !== rel) {\r\n                    detail.tempoRel = rel;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createBeatItem = (value: BeatSignature): JSX.Element => {\r\n        return <_Form isActive={detail.alterType === 'beat' && detail.beatSignature === value}\r\n            onClick={() => {\r\n                if (detail.beatSignature !== value) {\r\n                    detail.beatSignature = value;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const donmmItemJsxList = <_ParamDiv isEnable={detail.modRel === 'domm'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'domm' && value == detail.dommVal}\r\n            onClick={() => {\r\n                detail.dommVal = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>\r\n    })}</_ParamDiv>;\r\n\r\n    const keyAdjItemJsxList = <_ParamDiv isEnable={detail.modRel === 'key'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'key' && value == detail.keyAdj}\r\n            onClick={() => {\r\n                detail.keyAdj = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>;\r\n    })}</_ParamDiv>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Group isEnable={true}>\r\n                <_CategoryLabel>Type</_CategoryLabel>\r\n                {createAlertTypeItem('-', type == null)}\r\n                {createAlertTypeItem('modulate', type === 'modulate')}\r\n                {createAlertTypeItem('tempo', type === 'tempo')}\r\n                {createAlertTypeItem('beat', type === 'beat')}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'modulate'}>\r\n                <_CategoryLabel>Modulate</_CategoryLabel>\r\n                {createModulateRelationItem('-')}\r\n                {createModulateRelationItem('domm')}\r\n                {donmmItemJsxList}\r\n                {createModulateRelationItem('parallel')}\r\n                {createModulateRelationItem('relative')}\r\n                {createModulateRelationItem('key')}\r\n                {keyAdjItemJsxList}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'tempo'}>\r\n                <_CategoryLabel>Tempo</_CategoryLabel>\r\n                {createTempoRelationItem('-')}\r\n                {createTempoRelationItem('diff')}\r\n                {SideFormStyles.createNumberForm(detail.tempoDiff,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'diff',\r\n                    (e) => {\r\n                        detail.tempoDiff = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, -100, 100, 1)}\r\n                {createTempoRelationItem('rate')}\r\n                {SideFormStyles.createNumberForm(detail.tempoRate,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'rate',\r\n                    (e) => {\r\n                        detail.tempoRate = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n                {createTempoRelationItem('abs')}\r\n                {SideFormStyles.createNumberForm(detail.tempoAbs,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'abs',\r\n                    (e) => {\r\n                        detail.tempoAbs = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'beat'}>\r\n                <_CategoryLabel>Beat</_CategoryLabel>\r\n                {createBeatItem('2/4')}\r\n                {createBeatItem('4/4')}\r\n                {createBeatItem('3/4')}\r\n                {createBeatItem('6/8')}\r\n                {createBeatItem('9/8')}\r\n                {createBeatItem('12/8')}\r\n            </_Group>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormAlter;\r\n\r\nconst _Wrap = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        background-color: #b3b5c5;\r\n        `;\r\n\r\nconst _Group = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 0 0 0 4px;\r\n    ${props => props.isEnable ? '' : css`\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n`}\r\n        `;\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        margin-top: 1px;\r\n        width: 100%;\r\n        background-color: #c1cdd4;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\nconst _ParamDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n        margin: 1px;\r\n        background-color: #070707;\r\n        ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n        `;\r\nconst _ParamItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        width: 29px;\r\n        background-color: #dddddd;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\n\r\nconst _ValueForm = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 24px;\r\n        /* margin: 5px 0 0 0; */\r\n        text-align: left;\r\n        background-color: #ececec;\r\n\r\n        & * {\r\n            display: inline-block;\r\n            box-sizing: border-box;\r\n            vertical-align: top;\r\n    }\r\n        & input:nth-child(1) {\r\n            background-color: #dddddd;\r\n            width: 60px;\r\n            height: calc(100% - 4px);\r\n            margin: 2px 0 0 0;\r\n            border: 1px solid #9b9b9b;\r\n            border-radius: 4px;\r\n    }\r\n        & input:nth-child(2) {\r\n            margin-left: 5px;\r\n            background-color: #f00;\r\n            width: calc(100% - 70px);\r\n            height: 100%;\r\n    }\r\n        `;","import styled, { css } from \"styled-components\";\r\n\r\nconst JUDGE_INFO_LIST: {\r\n    value: number, label: string\r\n}[] = [\r\n        { value: -2, label: '-/8' },\r\n        { value: -1, label: '-/16' },\r\n        { value: 0, label: '±0' },\r\n        { value: 1, label: '+/16' },\r\n        { value: 2, label: '+/8' }\r\n    ];\r\n\r\nexport const MinuteForm = (props: {\r\n    isHead: boolean;\r\n    value: number;\r\n    setValue: (value: number) => void;\r\n}) => {\r\n\r\n    const rateMinus = props.value >= 0 ? 0 : Math.abs(props.value) * 50;\r\n    const ratePlus = props.value <= 0 ? 0 : Math.abs(props.value) * 50;\r\n\r\n    const createJudgeItem = (key: number, value: number, label: string) => {\r\n        const isActive = props.value === value;\r\n        return (\r\n            <_JudgeItem key={key} isActive={isActive} onClick={() => props.setValue(value)} >\r\n                {!isActive ? '' : label}\r\n            </_JudgeItem>\r\n        )\r\n    }\r\n    const isRed = Math.abs(props.value) === 1;\r\n\r\n    const JudgeJsxList = JUDGE_INFO_LIST.map((judge, i) => {\r\n        return createJudgeItem(i, judge.value, judge.label);\r\n    });\r\n\r\n    return (\r\n        <_Wrap isHead={props.isHead}>\r\n            <_View>\r\n                <_ViewFrame isLeft={true} isRed={isRed} rate={!props.isHead ? rateMinus : ratePlus}><div /></_ViewFrame>\r\n                <_ViewFrame isLeft={false} isRed={isRed} rate={!props.isHead ? ratePlus : rateMinus}><div /></_ViewFrame>\r\n            </_View>\r\n            <_Judge>{!props.isHead ? JudgeJsxList : JudgeJsxList.reverse()}</_Judge>\r\n        </_Wrap>\r\n    );\r\n};\r\n\r\nexport default MinuteForm;\r\n\r\nconst _Wrap = styled.div<{\r\n    isHead: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #bfd380;\r\n    text-align: left;\r\n`;\r\nconst _Judge = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 9;\r\n`;\r\n\r\nconst _JudgeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(20% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    background-color: #0000001a;\r\n    /* border: 1px solid #4d4d4d91; */\r\n    border-radius: 4px;\r\n    ${props => !props.isActive ? '' : css`\r\n        border: 1px solid #c00000c5;\r\n    `}\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    /* opacity: 0.15; */\r\n    &:hover {\r\n        background-color: #ffffff24;\r\n    }\r\n`;\r\nconst _View = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    /* position: absolute;\r\n    top: 0;\r\n    left: 0; */\r\n    z-index: 8;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ViewFrame = styled.div<{\r\n    isRed: boolean;\r\n    isLeft: boolean;\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 16px;\r\n    margin-top: 7px;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n\r\n    & div {\r\n        position: absolute;\r\n        top: 0;\r\n        height: 100%;\r\n        width: ${props => props.rate}%;\r\n        ${props => props.isRed ? css`\r\n            background: linear-gradient(to right, #0066ff, #7691a3);\r\n        ` : css`\r\n            background: linear-gradient(to left, #ff0000, #a37676);\r\n        `}\r\n        ${props => props.isLeft ? css`\r\n            right: 0;\r\n            border-radius: 10px 0 0 10px;\r\n        ` : css`\r\n            left: 0;\r\n            border-radius: 0 10px 10px 0;\r\n        `}\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\nimport MinuteForm from \"./minuteForm\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\n\r\n/**\r\n * コードブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i}\r\n                isExist={isExist}\r\n                isActive={detail.beatLen === i + 1}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    data.chordList = data.chordList.slice();\r\n                    detail.beatLen = (i + 1);\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.DEGREE_ALL.forEach((degree, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(degree);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(degree);\r\n        const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n        const isDiatonic = degree != null && scaleIndexies.includes(degree.index);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={isDiatonic}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || degree == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = degree == null ? null : { ...degree };\r\n                    if (degree == null) {\r\n                        detail.symbolKey = 'major';\r\n                    }\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n\r\n                    // キャッシュの更新\r\n                    const root = detail.root as TheoryUtil.DegreeProps;\r\n                    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                    [chordCache.chordFullName, chordCache.structList] =\r\n                        BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = degree == null ? null : { ...degree };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n\r\n                        // キャッシュの更新\r\n                        const root = detail.root as TheoryUtil.DegreeProps;\r\n                        const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                        [chordCache.chordFullName, chordCache.structList] =\r\n                            BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                        dispatcher.score.setScoreState(state);\r\n                    }\r\n                }}\r\n            >\r\n                {degree == null ? '-' : <>\r\n                    {TheoryUtil.getDegreeRoot(degree)} ({TheoryUtil.getRootName(degree, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    /**\r\n     * シンコペーションの入力フォームを生成するコールバック\r\n     * @param isHead 頭対象フラグ（falseの場合後ろが対象）\r\n     * @returns JSX\r\n     */\r\n    const createMinuteForm = (isHead: boolean): JSX.Element => {\r\n        const minute = detail.minute;\r\n        const [value, setValue]: [number, (value: number) => void] = isHead ? [\r\n            minute.head,\r\n            (value: number) => {\r\n                // minute.head = value;\r\n                // dispatcher.score.setScoreData(store.scoreData);\r\n                const adjust = value - minute.head;\r\n                dispatcher.score.incrementMinuteValRelation(false, adjust);\r\n            }\r\n        ] : [\r\n            minute.tail,\r\n            (value: number) => {\r\n                // minute.tail = value;\r\n                // dispatcher.score.setScoreData(store.scoreData);\r\n                const adjust = value - minute.tail;\r\n                dispatcher.score.incrementMinuteValRelation(true, adjust);\r\n            }\r\n        ];\r\n        return <MinuteForm value={value} setValue={setValue} isHead={isHead} />\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_CategoryLabel>{'Beat length'}</_CategoryLabel>\r\n                <_BeatDiv>\r\n                    {beatItemsJsx}\r\n                </_BeatDiv>\r\n                <_Minute>\r\n                    <_CategoryLabel>{'Minute head'}</_CategoryLabel>\r\n                    {createMinuteForm(true)}\r\n                    {/* <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                    <_CategoryLabel>{'Minute tail'}</_CategoryLabel>\r\n                    {createMinuteForm(false)}\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    {/* <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_RootDiv>\r\n                    {rootItemsJsx}\r\n                </_RootDiv>\r\n                <_SymbolDiv\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_SymbolDiv>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 100px; */\r\n    text-align: left;\r\n    background-color: #979797;\r\n`;\r\n\r\nconst _BeatDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 3px;\r\n        width: calc(100% - 6px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isActive ? '' : css`\r\n            /* border: solid 1px #fff; */\r\n        `}\r\n        box-sizing: border-box;\r\n        border-radius: 6px;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    margin-top: 5px;\r\n    width: 100%;\r\n    /* height: 360px; */\r\n    text-align: left;\r\n    /* background-color: #000000; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _RootDiv = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    margin: 0 0 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #e6e6e6; */\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #90bbcc;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #d1c521b8;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    color: #616161;\r\n    ${props => !props.isDiatonic ? '' : css`color: #ffffff;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #99999940;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #cc6363b8;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #6374ccb8;`}\r\n    }\r\n`;\r\n\r\nconst _SymbolDiv = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 93px);\r\n    margin: 0 1px 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    background-color: #a1cc90;\r\n    ${props => !props.isActive ? '' : css`background-color: #d1c521b8;`}\r\n    color: #fff;\r\n    ${props => !props.isDiatonic ? '' : css`color: #fff;`}\r\n    /* & span {\r\n        color: #f000;\r\n    } */\r\n    &:hover {\r\n        background-color: #dddddd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #cc6363b8;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const update = () => {\r\n        data.chordList = data.chordList.slice();\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const scaleItemJsxList: JSX.Element[] = TheoryUtil.SCALE_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? TheoryUtil.KEY12_MAJOR_SCALE_LIST : TheoryUtil.KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n    const rateItemJsxList: JSX.Element[] = TheoryUtil.BEAT_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.beatSignature === item} onClick={() => {\r\n                detail.beatSignature = item as BeatSignature;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            {SideFormStyles.createNumberForm(detail.bpm, true, (e) => {\r\n                detail.bpm = e.currentTarget.valueAsNumber;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }, 30, 220, 1)}\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 50%;\r\n    margin: 1px 0 0 0;\r\n\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 100%;\r\n    margin: 1px 0 0 0;\r\n    \r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    margin: 1px 0 0 0;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../../utils/dummyUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        DummyUtil.SECTION_CATEGORY.forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        const splitList = detail.labelName.split(' ');\r\n        DummyUtil.SECTION_NO.forEach((item) => {\r\n            const isActive = splitList[splitList.length - 1] === item.toString();\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(`${splitList[0]} ${item}`);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_SelectDiv>\r\n                <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n                <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n            </_SelectDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #b89b9b; */\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _SelectDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    background-color: #acacac;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(60% - 4px);\r\n    margin: 0 2px 0 2px;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(40% - 2px);\r\n    margin: 0 2px 0 0;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #6182b4; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #61b4b0; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormAlter from \"./sideFormAlter\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst HarmSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'alter': return <SideFormAlter />;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../../../../../redux/store/score/scoreCache\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\n\r\nconst TIP_COUNT = 14;\r\n\r\nconst StructViewer = (props: {\r\n    cache: ScoreCache.Element;\r\n    structList: BackingState.StructInfo[];\r\n}) => {\r\n    const cache = props.cache;\r\n    const structList = props.structList;\r\n    const indexList = structList.map(struct => struct.soundIndex + struct.adjustOctave * 12);\r\n    const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n    const scaleList = scaleIndexies.map(value => (cache.keyIndex + value) % 12);\r\n\r\n    const structJsxList: JSX.Element[] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n\r\n        // 2オクターブ分表示\r\n        for (let i = 0; i < TIP_COUNT; i++) {\r\n            // 下の段（白鍵のチップ）\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = indexList.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            // 上の段（黒鍵のチップ）\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = indexList.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return structJsxList;\r\n    }, [indexList]);\r\n\r\n    return (\r\n        <_Wrap isUse={indexList.length > 0}>\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default StructViewer;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    /* border: 1px solid #ffffffda; */\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    ` : css`\r\n    background: radial-gradient(#d6cec3, #a89889);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    ` : css`\r\n        background: radial-gradient(#e7a144, #72552a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternDetail = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    /** 基準となるベロシティ */\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cell = layer.table[channelIndex][pattern.lenIndex];\r\n    const baseVel = layer.velocityList[pattern.lenIndex];\r\n    const timing = (cell == null || cell.timing == undefined) ? 0 : cell.timing;\r\n    const velAdj = (cell == null || cell.velAdj == undefined) ? 0 : cell.velAdj;\r\n\r\n    return (<_Wrap>\r\n        {\r\n            // ノーツが設定されていない場合は何も表示しない\r\n            cell == null ? <></> : (<>\r\n                <_DelayDiv>\r\n                    <_Label>delay</_Label>\r\n                    <_TimingValue type=\"range\" min={-10} max={10} step={1} value={timing} onChange={e => {\r\n                        cell.timing = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_DelayDiv>\r\n                <_VelocityDiv>\r\n                    <_Label>velocity</_Label>\r\n                    <_VelFrame isFocus={false}>\r\n                        <_VelItem value={baseVel} isEdit={false}/>\r\n                    </_VelFrame>\r\n                    <_VelFrame isFocus={store.scoreState.keySwitch.sustainMode}>\r\n                        <_VelItem value={baseVel + velAdj} isEdit={velAdj != 0} />\r\n                    </_VelFrame>\r\n                    {/* <_Value type=\"range\" min={-10} max={10} step={1} value={velAdj} onChange={e => {\r\n                        cell.velAdj = Number(e.target.value);\r\n                        update();\r\n                    }} /> */}\r\n                </_VelocityDiv>\r\n            </>)\r\n        }\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternDetail;\r\n\r\nconst VEL_DIV_WIDTH = 180;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    line-height: 18px;\r\n    margin-top: 14px;\r\n    margin-left: 5px;\r\n    width: 80px;\r\n    background-color: #868686;\r\n    color: #e7e7e7;\r\n    border: 1px solid #616161;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DelayDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - ${VEL_DIV_WIDTH + 1}px);\r\n    height: 100%;\r\n    background-color: #9c9c9c;\r\n`;\r\n\r\nconst _TimingValue = styled.input<{\r\n}>`\r\n    display: inline-block;\r\n    outline: none;\r\n    margin: 20px 0 0 8px;\r\n    width: calc(100% - 100px);\r\n    height: 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VelocityDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${VEL_DIV_WIDTH}px;\r\n    height: 100%;\r\n    margin-left: 1px;\r\n    /* background-color: #9a2020; */\r\n`;\r\n\r\nconst _VelFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 46px;\r\n    height: 100%;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffffff17;\r\n    `}\r\n    /* background-color: #63a0a1;\r\n    border-radius: 20px; */\r\n`;\r\n\r\nconst _VelItem = styled.div<{\r\n    value: number;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 5px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #ddc35cae;\r\n    `}\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate * adjustRate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {itemJsxList}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternPedal = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    // 左手のレイヤー時のみ固定表示\r\n    const layer = pattern.layers[0];\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n\r\n    let cur: BackingState.PedalAction = 'off';\r\n    pattern.pedalActs.forEach((pedal, i) => {\r\n        const isActive = pattern.layerIndex === 0 && pattern.lenIndex === i;\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n        let isUse = false;\r\n        const prev = cur;\r\n        if (prev === 'change') {\r\n            cur = 'on';\r\n        }\r\n        if (pedal != null) {\r\n            isUse = true;\r\n            cur = pedal;\r\n        }\r\n        itemJsxList.push(\r\n            <_Column key={i} rate={rate} isActive={isActive} isUse={isUse} onClick={() => {\r\n                if (prev === 'off') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'on'; break;\r\n                        case 'on': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'on') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = 'change'; break;\r\n                        case 'change': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'change') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                }\r\n                // 終端までnullで更新\r\n                if (i < pattern.pedalActs.length - 1) {\r\n                    for (let j = i + 1; j < pattern.pedalActs.length; j++) {\r\n                        pattern.pedalActs[j] = null;\r\n                    }\r\n                }\r\n                update();\r\n            }}><div><_Item action={cur} /></div></_Column>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternPedal;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n    /* background-color: #4e4e4e; */\r\n`;\r\n\r\n\r\nconst _Column = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #00635eac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #179483ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    white-space: normal;\r\n\r\n    &>div {\r\n        display: inline-block;\r\n        width: 10px;\r\n        height: calc(100% - 2px);\r\n        background-color: #ffffffa0;\r\n        border-radius: 6px;\r\n        margin: 1px 0;\r\n        ${props => props.isUse ? '' : css`\r\n            background-color: #ffffff2f;\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    action: BackingState.PedalAction;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 14px;\r\n    border: 1px solid #9c9c9c;\r\n    ${props => {\r\n        switch (props.action) {\r\n            case 'off': return css`\r\n                margin-top: 0;\r\n                background-color: #271db8;\r\n            `;\r\n            case 'change': return css`\r\n                margin-top: 15px;\r\n                background-color: #f3d631;\r\n            `;\r\n            case 'on': return css`\r\n                margin-top: 30px;\r\n                background-color: #e03030;\r\n            `;\r\n        }\r\n    }}\r\n    box-sizing: border-box;\r\n    border-radius: 6px;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n    const curLayer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n    const layerJsxList = useMemo(() => {\r\n\r\n        const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n        pattern.layers.forEach((layer, j) => {\r\n\r\n            const jsxLsit: JSX.Element[] = [];\r\n            for (let i = 0; i < channelCount; i++) {\r\n                const notesJsxLsit: JSX.Element[] = [];\r\n\r\n                layer.noteDivList.forEach((note, k) => {\r\n                    // データ上は下から数えるため、表示のループは逆回転する\r\n                    const channelIndex = (channelCount - 1) - i;\r\n                    const isActive = pattern.layerIndex === j && pattern.lenIndex === k;\r\n                    const cell = layer.table[channelIndex][k];\r\n                    const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                    const isUse = cell != null;\r\n                    // 前面にあるレイヤーのみエラー判定をする\r\n                    const isError = pattern.layerIndex !== j ? false :\r\n                        isUse && BackingUtil.checkOverlapBackLayer(pattern.layers, j, channelIndex, k);\r\n                    const isEdit = isActive && pattern.channelIndex === i;\r\n                    let rate = note.rate * adjustRate;\r\n                    if (note.isDot) rate /= 1.5;\r\n                    if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n                    let viewSignal: BackingState.NoteSignal | null = null;\r\n                    if (cell != null) {\r\n                        viewSignal = cell.signal;\r\n                        if (k > 0) {\r\n                            const prevCell = layer.table[channelIndex][k - 1];\r\n                            if (prevCell != null && prevCell.signal === 't') {\r\n                                viewSignal = 't';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const hasStaccato = () => {\r\n                        const search = layer.table.find((record) => {\r\n                            const cell = record[k];\r\n                            if (cell != null && cell.signal === 's') return cell;\r\n                        });\r\n                        return search != undefined;\r\n                    }\r\n                    notesJsxLsit.push(\r\n                        <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                            <_State\r\n                                // isUse={isUse}\r\n                                isError={isError}\r\n                                signal={viewSignal}\r\n                                isBack={pattern.layerIndex !== j}\r\n                                // クリック\r\n                                onClick={() => {\r\n                                    if (cell == null) {\r\n                                        // 同列にスタッカートがある場合、スタッカートを設定\r\n                                        const signal = !hasStaccato() ? 'n' : 's';\r\n                                        setNotesStatus({ signal, timing: 0, velAdj: 0 });\r\n                                    } else {\r\n                                        setNotesStatus(null);\r\n                                    }\r\n                                    curLayer.table = curLayer.table.slice();\r\n                                    update();\r\n                                    dispatcher.backing.updateErrorState();\r\n                                }}\r\n                                // 右クリック\r\n                                onContextMenu={() => {\r\n                                    pattern.channelIndex = i;\r\n                                    pattern.lenIndex = k;\r\n                                    update();\r\n                                }}\r\n                            />\r\n                        </_Notes>\r\n                    );\r\n                });\r\n                jsxLsit.push(\r\n                    <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                        {notesJsxLsit}\r\n                    </_Record>\r\n                );\r\n            }\r\n            layerJsxList[j] = jsxLsit;\r\n        });\r\n        return layerJsxList;\r\n    }, [\r\n        pattern.channels, pattern.layerIndex, pattern.lenIndex,\r\n        curLayer.noteDivList, curLayer.table, pattern.channelIndex\r\n    ]);\r\n\r\n    // 選択中のレイヤーを表に表示する\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    // isUse: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => props.signal == null ? '' : css<{\r\n    isBack: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n}>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        ${props => props.signal !== 's' ? '' : css`\r\n            border-radius: 8px;\r\n            background: linear-gradient(to bottom, #009e0d, #02fc49, #009e0d);\r\n        `}\r\n        ${props => props.signal !== 't' ? '' : css`\r\n            height: calc(100% - 8px);\r\n            margin: 4px 0 0 1px;\r\n            background: linear-gradient(to bottom, #9e4c00, #fc6a02, #9e4c00);\r\n        `}\r\n        // エラーあり\r\n        ${props => !props.isError ? '' : css`\r\n            opacity: 0.5;\r\n        `}\r\n        // 裏面のレイヤー\r\n        ${props => !props.isBack ? '' : css`\r\n            background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.5;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => props.signal == null ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternVelocity = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.velocityList.forEach((vel, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} >\r\n                <_Value value={vel} />\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternVelocity;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #001763ac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #173494ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Value = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 6px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    /* background-color: #5cceddaf; */\r\n    background: linear-gradient(to right, #00949e, #26dcf4, #00949e);\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternDetail from \"./patternDetail\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternPedal from \"./patternPedal\";\r\nimport PatternTable from \"./patternTable\";\r\nimport PatternVelocity from \"./patternVelocity\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const divs = layer.noteDivList;\r\n    const limitLen = BackingUtil.getLimitLen(chordInfo.beatLen, chordInfo.minute, chordInfo.init.beatSignature);\r\n    const useTotalLen = BackingUtil.getUsingLenFromDivs(divs, chordInfo.init.beatSignature);\r\n    const isLenOverError = 0 <= limitLen - useTotalLen;\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const viewRate = NOTES_1BAR_WIDTH / 4;\r\n\r\n    // メモリの数を算出\r\n    let memoriCount = chordInfo.beatLen * beatProps.beatMemoriCount;\r\n    memoriCount += chordInfo.minute.head + chordInfo.minute.tail;\r\n\r\n    const barMemoriCount = beatProps.beatMemoriCount === 4 ? 16 : 24;\r\n    const memoriWidth = NOTES_1BAR_WIDTH / barMemoriCount;\r\n    // メモリJSXの生成\r\n    const memoriJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < memoriCount + 1; i++) {\r\n        const pos = i;\r\n        let bean: { thickness: number, height: number, color: string } = { thickness: 1, height: 10, color: '#555' };\r\n        if (beatProps.beatMemoriCount === 4) {\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        } else {\r\n            switch (true) {\r\n                case pos % 24 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 6 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        }\r\n        memoriJsxList.push(\r\n            <_Memori\r\n                key={memoriJsxList.length}\r\n                width={memoriWidth}\r\n                height={bean.height}\r\n                color={bean.color}\r\n                thickness={bean.thickness}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n                <_MemoriList>{memoriJsxList}</_MemoriList>\r\n                {isLenOverError ? (\r\n                    <_ChordLenLine pos={limitLen * viewRate} />\r\n                ) : (\r\n                    // 定義した拍を超えた場合のみ表示\r\n                    <_OverCover pos={limitLen * viewRate} width={(useTotalLen - limitLen) * viewRate} />\r\n                )}\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n            {pattern.channelIndex === -1 ?\r\n                // ベロシティorペダル情報を表示\r\n                (pattern.mode === 'velocity' ? <PatternVelocity /> : <PatternPedal />) :\r\n                // セルごとの詳細情報を表示\r\n                <PatternDetail />\r\n            }\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\nconst _MemoriList = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    thickness: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.thickness}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _OverCover = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: ${props => props.width}px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #f8000053;\r\n    pointer-events: none;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;\r\n\r\nconst _ChordLenLine = styled.div<{\r\n    pos: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: 4px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #ffffffc7;\r\n`;","import { useContext } from \"react\";\r\nimport { Player } from \"soundfont-player\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    soundfont: Player | null;\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n    const channelCount = pattern.channels.length;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length + 1);\r\n        pattern.channelIndex = -1;\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length - 1);\r\n        pattern.channelIndex = -1;\r\n        update();\r\n    }\r\n\r\n    const preview = () => {\r\n        if (props.soundfont != null) {\r\n            props.soundfont.play(props.soundFullName, 0, { duration: 1 });\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap isError={props.soundFullName === '-'}>\r\n            <_Struct onClick={preview}>{props.soundFullName}</_Struct>\r\n            <_Option isEnable={channelCount > 1} onClick={deleteRecord}>-</_Option>\r\n            <_Option isEnable={channelCount < BackingUtil.CHANNEL_MAX} onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ff0000c3;\r\n    `}\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)<{\r\n    isEnable: boolean;\r\n}>`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n    // const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    const layerJsxList: JSX.Element[] = [];\r\n\r\n    if (state.pattern == null) return <></>;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channels = pattern.channels;\r\n    channels.forEach((channel, i) => {\r\n        let name = '-';\r\n        if (channel.octave !== -1) {\r\n            const structInfo = chordInfo.structList[channel.structIndex];\r\n            const soundIndex = structInfo.soundIndex;\r\n            const octave = channel.octave + structInfo.adjustOctave;\r\n            const keyList = !structInfo.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\r\n            name = keyList[soundIndex % 12] + octave;\r\n        }\r\n        channelJsxList.push(\r\n            <ChannelItem key={i}\r\n                soundfont={store.instruments.harmony}\r\n                index={i}\r\n                soundFullName={name}\r\n            />\r\n        );\r\n    });\r\n\r\n    pattern.layers.forEach((layer, i) => {\r\n        const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\r\n        layerJsxList.push(\r\n            <_LayerItem key={i} isActive={pattern.layerIndex === i}\r\n                onClick={() => {\r\n                    if (i !== pattern.layerIndex) {\r\n                        dispatcher.backing.switchLayer();\r\n                    }\r\n                }}\r\n            >{labelName}</_LayerItem>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        <_Header>\r\n            {layerJsxList}\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n            <_ModeItem isActive={pattern.mode === 'velocity'}\r\n                onClick={() => {\r\n                    pattern.mode = 'velocity';\r\n                    dispatcher.backing.setState(state);\r\n                }}\r\n            >Velocity</_ModeItem>\r\n            <_ModeItem isActive={pattern.mode === 'pedal'}\r\n                onClick={() => {\r\n                    pattern.mode = 'pedal';\r\n                    dispatcher.backing.setState(state);\r\n                }}\r\n            >Pedal</_ModeItem>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #929292;\r\n`;\r\n\r\nconst _LayerItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #dad600;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997;\r\n`;\r\n\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #4fe419;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternOptions = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        layer.noteDivList = layer.noteDivList.slice();\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, isEnable: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={isEnable} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, true, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const isPermit3ren = ['2/4', '4/4', '4/3'].includes(chordInfo.init.beatSignature);\r\n    const isPermitDot = BackingUtil.isPermitDot(cur);\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot,\r\n            isPermitDot,\r\n            () => {\r\n                cur.isDot = !cur.isDot;\r\n                update();\r\n            })}\r\n        {createItem('1/3', cur.div3 === 1,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 1) cur.div3 = 0;\r\n                else cur.div3 = 1;\r\n                update();\r\n            })}\r\n        {createItem('2/3', cur.div3 === 2,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 2) cur.div3 = 0;\r\n                else cur.div3 = 2;\r\n                update();\r\n            })}\r\n    </_WrapLen>;\r\n\r\n    /** テーブルの行 */\r\n    const tableRecord = layer.table[channelIndex];\r\n    const curCell = pattern.channelIndex === -1 ? null :\r\n        tableRecord[pattern.lenIndex];\r\n\r\n    const isEnableTai = () => {\r\n        if(tableRecord == null) return false;\r\n\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 's') return cell;\r\n        });\r\n        const hasStaccato = search != undefined;\r\n        let isExistNext = false;\r\n        if(pattern.lenIndex < tableRecord.length - 1 && tableRecord[pattern.lenIndex + 1] != null) {\r\n            isExistNext = true;\r\n        }\r\n        return !hasStaccato && isExistNext;\r\n    };\r\n\r\n    const isNormalRow = () => {\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 't') return cell;\r\n        });\r\n        return search == undefined;\r\n    };\r\n\r\n    const setRowStaccato = (isSet: boolean) => {\r\n        layer.table.forEach((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null) {\r\n                cell.signal = isSet ? 's' : 'n';\r\n            }\r\n        });\r\n    }\r\n\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', curCell == null,\r\n            true,\r\n            () => {\r\n                tableRecord[pattern.lenIndex] = null;\r\n                update();\r\n            })}\r\n        {createItem('□', curCell != null && curCell.signal === 'n',\r\n            true,\r\n            () => {\r\n                if (curCell != null) {\r\n                    if(curCell.signal === 's') {\r\n                        setRowStaccato(false);\r\n                    } else {\r\n                        curCell.signal = 'n';\r\n                    }\r\n                } else {\r\n                    tableRecord[pattern.lenIndex] = { signal: 'n', timing: 0, velAdj: 0 };\r\n                }\r\n                update();\r\n            })}\r\n        {createItem('・', curCell != null && curCell.signal === 's',\r\n            curCell != null && isNormalRow(),\r\n            () => {\r\n                setRowStaccato(true);\r\n                update();\r\n            })}\r\n        {createItem('⁀', curCell != null && curCell.signal === 't',\r\n            isEnableTai(),\r\n            () => {\r\n                const status = curCell as BackingState.NoteStatus;\r\n                status.signal = 't'\r\n                update();\r\n            })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternOptions;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternOptions from \"./patternOptions\";\r\n\r\n/**\r\n * バッキングエディタ画面のパターン部分\r\n * @returns コンポーネント\r\n */\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    /**\r\n     * USEスイッチ押下時の処理\r\n     */\r\n    const useSwitchAction = () => {\r\n        if (!isUsePattern) {\r\n            const table = state.voicingTable as boolean[][];\r\n            const voicingStructs = BackingUtil.buildChannels(table);\r\n            const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n            state.pattern = {\r\n                layerIndex: 0,\r\n                lenIndex: 0,\r\n                channelIndex: -1,\r\n                channels,\r\n                isUsePedal: false,\r\n                mode: \"velocity\",\r\n                pedalActs: [null],\r\n                layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n            } as BackingState.Pattern;\r\n            update();\r\n        } else {\r\n            state.pattern = null;\r\n            update();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* ヘッダー部分（パターン利用スイッチ） */}\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button\r\n                        isActive={isUsePattern}\r\n                        onClick={useSwitchAction}\r\n                    >Use</_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternOptions /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #e00000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #ff0000;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\n/**\r\n * ボイシングを定義するテーブルのコンポーネント\r\n * @returns コンポーネント\r\n */\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const table = state.voicingTable;\r\n    const pattern = state.pattern;\r\n    // 選択可能なチャンネル数\r\n    const channelLimitNum = pattern == null ? BackingUtil.OCTAVE_NUM * BackingUtil.STRUCT_NUM : pattern.channels.length;\r\n\r\n    // return useMemo(() => {\r\n\r\n    const chordInfo = state.chordInfo;\r\n    const structList = chordInfo.structList;\r\n\r\n    const rowJsxList: JSX.Element[] = [];\r\n\r\n    /** 選択数 */\r\n    let selectCount = 0;\r\n    // オクターブ（テーブル横）のループ\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const cellJsxList: JSX.Element[] = [];\r\n        // 構成音（テーブル縦）のループ\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = structList.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n            if (isSelected) {\r\n                selectCount++;\r\n            }\r\n\r\n            /** セルに表示する音程 */\r\n            const getSoundFullName = (): string => {\r\n                if (!isEnable) return '';\r\n                // const relation = symbol.structs[j];\r\n                // const interval = TheoryUtil.IntervalRelationProps[relation];\r\n                // const structIndex = (chordRootIndex + interval) % 12;\r\n                const sound = structList[j];\r\n                const octave = i + sound.adjustOctave;\r\n\r\n                const key12List = !sound.isFlat ?\r\n                    TheoryUtil.KEY12_SHARP_LIST :\r\n                    TheoryUtil.KEY12_FLAT_LIST\r\n                    ;\r\n                return `${key12List[sound.soundIndex]}${octave}`;\r\n            }\r\n\r\n            const name = getSoundFullName();\r\n            cellJsxList.push(\r\n                <_Cell key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    isOver={isSelected && selectCount > channelLimitNum}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: BackingState.ChannelParam[] = BackingUtil.buildChannels(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                        dispatcher.backing.updateErrorState();\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.harmony;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_Cell>\r\n            );\r\n        }\r\n        rowJsxList.push(\r\n            <_TableRow key={i}>\r\n                {cellJsxList}\r\n            </_TableRow>\r\n        );\r\n    }\r\n\r\n    /** 構成音リストのJSX */\r\n    const structJsxList = structList.map((sound, i) => {\r\n        const key12List = !sound.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\r\n\r\n        /** 表示する構成音の関係性 */\r\n        const getStructName = (): string => {\r\n            if (sound.relation == null) {\r\n                // オンコードの場合\r\n                return 'On';\r\n            } else if (sound.relation === 'p1') {\r\n                // ルート音の場合\r\n                return 'Root';\r\n            }\r\n            return sound.relation;\r\n        }\r\n        return (\r\n            <_StructItem key={i}\r\n                isOnChord={sound.relation == null}\r\n            >{getStructName()} [{key12List[sound.soundIndex]}]</_StructItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* コードの基本情報 */}\r\n            <_InfoDiv>\r\n                <_InfoItem>\r\n                    <_Label>Chord</_Label>\r\n                    <_Value>{chordInfo.chordFullName}</_Value>\r\n                </_InfoItem>\r\n                <_InfoItem>\r\n                    <_Label>Type</_Label>\r\n                    {/* <_Value>{symbol.attr}</_Value> */}\r\n                    <_Value>{chordInfo.symbolAttr}</_Value>\r\n                </_InfoItem>\r\n            </_InfoDiv>\r\n            <_EditorDiv>\r\n                {/* 構成音の情報 */}\r\n                <_StructDiv>\r\n                    {structJsxList}\r\n                </_StructDiv>\r\n                {/* ボイシングのテーブル */}\r\n                <_TableDiv>{rowJsxList}</_TableDiv>\r\n            </_EditorDiv>\r\n        </_Wrap>\r\n    );\r\n    // }, [table, channelLimitNum]);\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _InfoItem = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #89dada; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 8px);\r\n    width: 80px;\r\n    background-color: #69bcdd;\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #026c86;\r\n    border: 1px solid #303030;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 6px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #cccccc; */\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst _EditorDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _StructDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _StructItem = styled.div<{\r\n    isOnChord: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    color: white;\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    ${props => !props.isOnChord ? '' : css`\r\n        /* color: #e00000; */\r\n        background: linear-gradient(to bottom, #104f8a, #7699db, #104f8a);\r\n    `}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _TableDiv = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _TableRow = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Cell = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n    isOver: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    border: 1px solid #215e53;\r\n    border-radius: 4px;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #e5e747;\r\n    `}\r\n    ${props => !props.isOver ? '' : css`\r\n        background-color: #c40000;\r\n        color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #b9bb3f;\r\n        `}\r\n        ${props => !props.isOver ? '' : css`\r\n            background-color: #bb3f3f;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\n/**\r\n * バッキングエディタ画面\r\n * @returns コンポーネント\r\n */\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    useEffect(()=> {\r\n        console.log('backing start');\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_PrevireBrind isUse={state.isPreview} />\r\n            {/* ボイシングエディタ部分 */}\r\n            <VoicingChooser />\r\n            {/* パターンエディタ部分 */}\r\n            <PatternFrame />\r\n            {/* フッター部分 */}\r\n            <_FooterDiv>\r\n                {/* プレビュー再生 */}\r\n                <_Button isEnable={!state.hasError} onClick={() => {\r\n\r\n                    if (!state.isPreview) {\r\n                        dispatcher.backing.testBacking();\r\n                    } else {\r\n                        BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                    }\r\n                }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\r\n                {/* 編集を取り消しして閉じる */}\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Cancel</_Button>\r\n                {/* 編集を反映して閉じる */}\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.mappingEditorToScore();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/score/scoreData\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const cur = chordList[focusIndex];\r\n    const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={isBackingEnable}\r\n                onClick={() => {\r\n                    if (state.hideMenu === 'none') {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    } else if (state.hideMenu === 'backing') {\r\n                        dispatcher.backing.closeBackingEditor();\r\n                    }\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 7;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 8;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmClipboard = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    return (\r\n        <_Wrap>\r\n            <_Label>clipboard</_Label>\r\n            <_TypeDiv>\r\n                <_ModeItem isActive={state.cloneBacking != null}>Backing</_ModeItem>\r\n                <_ModeItem isActive={state.copiedElementList != null}>Elements</_ModeItem>\r\n            </_TypeDiv>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default HarmClipboard;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _TypeDiv = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #a8dbb3;\r\n    `}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #8f8f8f;\r\n    border-radius: 2px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst MEMORI_WIDTH = 12;\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        list.push(<_Margin key={list.length} />);\r\n        state.measureCacheList.forEach((cache) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {cache.barCount !== -1 ? <_Bar>{cache.barCount}</_Bar> : ''}\r\n                    {/* {<_Bar>{i}</_Bar>} */}\r\n                </_Memori>\r\n            );\r\n        });\r\n        list.push(<_Margin key={list.length} />);\r\n        return list;\r\n    }, [state.beatCacheList]);\r\n\r\n    const [beatJsxList, minuteJsxList] = useMemo(() => {\r\n        const beatJsxList: JSX.Element[] = [];\r\n        const minuteJsxList: JSX.Element[] = [];\r\n\r\n        const isChordFocus = dataList[focusIndex].type === 'chord';\r\n        const curChordIndex = cacheList[focusIndex].chordIndex;\r\n        // list.push(<_Start key={list.length}/>);\r\n        dataList.forEach((data, i) => {\r\n\r\n            const cache = state.elementCacheList[i];\r\n            if (data.type === 'chord' && Math.abs(cache.chordIndex - curChordIndex) <= 5) {\r\n\r\n                const detail = data.detail as DetailChord;\r\n                const sustain = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                let label = '';\r\n                let type: ItemType = 'ather';\r\n                if (!isChordFocus) {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                } else {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'cur';\r\n                        type = 'cur';\r\n                    } else if (cache.chordIndex === curChordIndex - 1) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                }\r\n\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatMemori = detail.beatLen * beatProps.beatMemoriCount;\r\n                const posMemori = 16 + cache.curTotalMemori;\r\n                beatJsxList.push(\r\n                    <_SustainItem key={beatJsxList.length}\r\n                        type={type}\r\n                        pos={posMemori} sustain={beatMemori + minute}\r\n                    >{label}</_SustainItem>\r\n                );\r\n                minuteJsxList.push(\r\n                    <_BeatItem key={beatJsxList.length}\r\n                        isActive={type === 'cur'}\r\n                        pos={posMemori + detail.minute.head} sustain={beatMemori}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        // list.push(<_Start key={list.length}/>);\r\n        return [beatJsxList, minuteJsxList];\r\n    }, [dataList.length, focusIndex, state.beatCacheList]);\r\n\r\n    const scrollPos = cacheList[focusIndex].curTotalMemori * MEMORI_WIDTH;\r\n    return (\r\n        <_Wrap>\r\n            <_ScrollFrame pos={scrollPos}>\r\n                <_Blocks>\r\n                    <_Beat>\r\n                        {beatJsxList}\r\n                    </_Beat>\r\n                    <_Minute>\r\n                        {minuteJsxList}\r\n                    </_Minute>\r\n                </_Blocks>\r\n                <_Measure>\r\n                    {memoriJsxList}\r\n                </_Measure>\r\n            </_ScrollFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _ScrollFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => -props.pos}px;\r\n    position: absolute;\r\n    height: 100%;\r\n    /* width: 100px;\r\n    background-color: #000; */\r\n    transition: left 0.5s;\r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n`;\r\n\r\ntype ItemType = 'cur' | 'prev' | 'next' | 'ather';\r\nconst _SustainItem = styled.div<{\r\n    pos: number;\r\n    sustain: number;\r\n    type: ItemType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(136, 163, 133);\r\n    ${props => {\r\n        switch (props.type) {\r\n            case 'cur': return css`\r\n                background-color: rgb(218, 107, 134);\r\n                /* color: #ffe551; */\r\n            `;\r\n            case 'prev': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 177, 221);\r\n            `;\r\n            case 'next': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 221, 171);\r\n            `;\r\n            case 'ather': return css`\r\n                background-color: rgb(192, 192, 192);\r\n            `;\r\n        }\r\n    }}\r\n    border-left: solid 1px #000;\r\n    border-top: solid 1px #000;\r\n    border-bottom: solid 1px #000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _BeatItem = styled.div<{\r\n    isActive: boolean;\r\n    pos: number;\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(224, 224, 224);\r\n    border-left: solid 1px #000;\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: rgb(233, 180, 228); */\r\n        /* color: #ffe551; */\r\n    `}\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Margin = styled.div`\r\n    display: inline-block;\r\n    width: ${MEMORI_WIDTH * 16}px;\r\n    height: 100%;\r\n    background-color: #d9ebe7;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${MEMORI_WIDTH}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection } from \"../../../../redux/store/score/scoreData\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport HarmSideForm from \"./side/harmSideForm\";\r\nimport { Timeline } from \"tone\";\r\nimport StructViewer from \"./info/structViewer\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport HarmClipboard from \"./initial/harmClipboard\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\n\r\n/**\r\n * ハーモナイズタブ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const state = store.scoreState;\r\n\r\n    const isMelody = store.scoreState.isMelody;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, harmonize: () => {\r\n                dispatcher.system.setInvalidate({\r\n                    ...store.invalidate, harmoniizeInvalidate: {}\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isMelody) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isMelody]);\r\n\r\n\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const element = store.scoreData.chordList[state.focusIndex];\r\n    \r\n    const timelineJsx = state.elementCacheList.length === 0 ? <></> : <HarmMeasure />;\r\n\r\n    let structViewerJsx = <></>;\r\n    if (state.elementCacheList.length > 0) {\r\n        const scoreCache = state.chordCacheList[cache.chordBlockNo];\r\n        const structList = element.type === 'chord' ? scoreCache.structList : [];\r\n        structViewerJsx = <StructViewer cache={cache} structList={structList} />;\r\n    }\r\n\r\n    /** サイドフォームの活性状態 */\r\n    const sideFormEnable = !state.isPreview && state.hideMenu === 'none';\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_SectionsDiv isEnable={sideFormEnable}><HarmSections /></_SectionsDiv>\r\n            <_Left>\r\n                <_Head isEnable={!state.isPreview}>\r\n                    <HarmClipboard />\r\n                </_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main>\r\n                        <HarmNote />\r\n                    </_Main>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP>{timelineJsx}</_TIMELINE_WRAP>\r\n                    <_INFO_WRAP>{structViewerJsx}</_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right isEnable={sideFormEnable}>\r\n                <HarmSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _SectionsDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH + HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Head = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    position: absolute;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    min-height: 100%;\r\n    vertical-align: top;\r\n    /* overflow: auto; */\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    /* background-color: #ddc2c2; */\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7a270028;\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyTimelineMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            mouse.lock = x;\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        // if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            if (mouse.pos !== x) {\r\n                // console.log(`★ move=== x: ${x}, pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n                mouse.pos = x;\r\n                update();\r\n            }\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            // update();\r\n\r\n            const lock = mouse.lock + refs.measure.scrollLeft;\r\n            const pos = mouse.pos + refs.measure.scrollLeft;\r\n            const notesList = store.scoreData.notesList;\r\n            let start = -1;\r\n            let end = -1;\r\n            for (let i = 0; i < notesList.length; i++) {\r\n                const notes = notesList[i];\r\n                const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                const [head, tail] = lock < pos ? [lock, pos] : [pos, lock];\r\n                if (head <= left && tail >= right) {\r\n                    if (start === -1) start = i;\r\n                } else {\r\n                    if (start !== -1) {\r\n                        end = i - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            if (start !== -1 && end === -1) {\r\n                end = notesList.length - 1;\r\n            }\r\n            state.focusIndex = start;\r\n            state.destIndex = end;\r\n            mouse.lock = -1;\r\n            // console.log(`★ up=== focus: ${state.focusIndex}, dist: ${state.distIndex}`);\r\n            dispatcher.melody.setState(state);\r\n            // const [head, tail] = mouse.lock < x ? [mouse.lock, x] : [x, mouse.lock];\r\n            // const width = tail - head;\r\n            // if (width > 5) {\r\n            //     mouse.width = width;\r\n            //     mouse.lock = -1;\r\n            //     mouse.pos = head;\r\n            //     update();\r\n            //     console.log(`★ up=== pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n            // }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyTimelineMouseOperation;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../redux/store/score/scoreCache\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport MelodyUtil, { getNormalizeLenFromNotes } from \"../../../../utils/melodyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimelineMouseOperation from \"./util/melodyTimelineMouseOperation\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n    update: () => void;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n    const update = props.update;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        state.measureCacheList.forEach(cache => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            // 表示する小節数\r\n            const barCount = cache.barCount;\r\n\r\n            jsxList.push(\r\n                <_Memori\r\n                    key={jsxList.length}\r\n                    beatWidth={beatWidth}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {barCount !== -1 ? <_Bar>{barCount}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [state.beatCacheList, barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        if (state.elementCacheList.length === 0) {\r\n            return jsxList;\r\n        }\r\n        let left = 0;\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                // console.log(state.elementCacheList.length);\r\n                const detail = element.detail as DetailChord;\r\n                const cache = state.elementCacheList[i];\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minuteLen = minute * 0.25;\r\n                const adjustRate = beatProps.beatMemoriCount / 4;\r\n                const width = beatWidth * (detail.beatLen * adjustRate + minuteLen);\r\n\r\n                if (chordRef.current != null) {\r\n                    const scroll = chordRef.current.scrollLeft;\r\n                    if (left + width - scroll >= 0 ||\r\n                        left - scroll <= chordRef.current.clientWidth) {\r\n                        const symbolNmae = TheoryUtil.getSymbolFromKey(detail.symbolKey)?.name;\r\n                        const degreeName = detail.root == null ? '-' :\r\n                            TheoryUtil.getDegreeRoot(detail.root) + symbolNmae;\r\n                        const chordName = detail.root == null ? '-' :\r\n                            TheoryUtil.getRootName(detail.root, init.keyIndex) + symbolNmae;\r\n                        jsxList.push(\r\n                            <_ChordItem key={jsxList.length}\r\n                                left={left}\r\n                                width={width}\r\n                                isActive={element == curChord}\r\n                                onClick={() => {\r\n                                    state.isMelody = false;\r\n                                    state.focusIndex = i;\r\n                                    dispatcher.score.setScoreState(state);\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                                }}\r\n                            >\r\n                                <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                            </_ChordItem>\r\n                        );\r\n                    }\r\n                }\r\n                left += width;\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_MeasureWrap ref={measureRef}>\r\n            <_MeasureInner\r\n                onMouseDown={e => MelodyTimelineMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseMove={e => MelodyTimelineMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseUp={e => MelodyTimelineMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseLeave={() => {\r\n                    const mouse = store.melodyState.timelineMouse;\r\n                    mouse.pos = -1;\r\n                    mouse.lock = -1;\r\n                    update();\r\n                }}\r\n            >\r\n                {measureJsxList}\r\n                <_MousePos\r\n                    left={mouseMeasurePos * beatWidth * rate}\r\n                    width={beatWidth * rate}\r\n                />\r\n            </_MeasureInner>\r\n        </_MeasureWrap>\r\n    </>);\r\n}\r\n\r\nconst getExtendMeasure = (measureList: ScoreCache.Measure[]): ScoreCache.Measure[] => {\r\n    const list:ScoreCache.Measure[] = [];\r\n\r\n    return list;\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _MeasureWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _MeasureInner = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* width: 100%; */\r\n    left: 0;\r\n    top: 0;\r\n    width: 10000px;\r\n    height: 100%;\r\n    &:hover {\r\n        background-color: #ff00b347;\r\n    }\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.left}px;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    pointer-events: none;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.beatWidth / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + TheoryUtil.IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #8f8f8f;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #adadad;\r\n    ${props => !props.isStruct ? '' : css`background-color: #ce6565;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #3b3b3b;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/score/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                state.isPreview = true;\r\n                dispatcher.melody.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.melody.setInstrument(soundFontPlayer);\r\n                    }).then(() => {\r\n                        state.isPreview = false;\r\n                        dispatcher.melody.setState(state);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #cacacada;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f7f7f7da;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e4e4e4da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #f7f7f7da;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'32'} isDisable={false} isActive={state.quantize === 8} callback={() => {\r\n                    state.quantize = 8;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={![1, 2, 3, 6].includes(state.quantize)} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                        dispatcher.melody.setState(state);\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                        dispatcher.melody.setState(state);\r\n                    }\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                {/* <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} /> */}\r\n                {/* <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} /> */}\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 9 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, MelodyNotes } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.destIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    const newLen = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.len) !== getNormalizeLenFromNotes(newLen)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.len = newLen;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    const newPos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.pos) !== getNormalizeLenFromNotes(newPos)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.pos = newPos;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.tableMouse;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                //履歴を作成\r\n                state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.melody.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.melody.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/score/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport MelodyUtil, { } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n\r\n        // 選択しているノーツが1つである場合\r\n        const isSingle = state.focusIndex === state.destIndex;\r\n        const mouse = state.tableMouse;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.melody.copyNotes(); break;\r\n                    case 'v': dispatcher.melody.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.melody.allSelect();\r\n                    }\r\n                        break;\r\n                    case 's': dispatcher.score.saveFile(); break;\r\n                    case 'z': dispatcher.melody.undo(); break;\r\n                    case 'y': dispatcher.melody.redo(); break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.melody.incrementCurPitch(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.melody.incrementCurPitch(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveDestFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveDestFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.melody.incrementCurPitch(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.melody.incrementCurPitch(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(false);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(true);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.melody.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.melody.adjustScrollX(); break;\r\n                case 'e': dispatcher.melody.adjustScrollY(); break;\r\n                case 'z': {\r\n                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.melody.firstNotes();\r\n                }\r\n                    break;\r\n                case '0': {\r\n                    state.quantize = 8;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else if([2, 1].includes(state.quantize)) {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.melody.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.melody.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.melody.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.destIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/score/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport CacheUtil from \"../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const scoreState = store.scoreState;\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n    const [invalidate2, setInvalidate2] = useState<{}>({});\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.tableMouse;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n    const refs = store.refs.melody;\r\n\r\n    const barCount = 150;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n    const rate = 1 / store.melodyState.quantize;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isMelody;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, melody: update\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    /**\r\n     * 画面上部のメモリJSXリスト\r\n     * 拍子のキャッシュから作成する\r\n     */\r\n    const measureJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        scoreState.measureCacheList.forEach((cache, i) => {\r\n\r\n            list.push(\r\n                <_Scale key={i} isHead={cache.rate === 4} beatWidth={state.beatWidth} />\r\n            );\r\n        });\r\n        return list;\r\n    }, [scoreState.beatCacheList, barCount]);\r\n\r\n    // const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    /**\r\n     * スケール区間のJSXリスト\r\n     * 背景色のラインを表現\r\n     * 転調でキーが変わる度に追加される\r\n     */\r\n    const scaleDivJsxList = useMemo(() => {\r\n        const divList: JSX.Element[] = [];\r\n        // console.log('**' + scoreState.scaleCacheList.length);\r\n        scoreState.scaleCacheList.forEach((scaleInfo, i) => {\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const scaleJsxList: JSX.Element[] = [];\r\n            for (let j = 0; j < PITCH_MAX; j++) {\r\n                const keyIndex = getKeyIndexFromPitcher(j);\r\n                scaleJsxList.push(\r\n                    <_ScaleLine key={j}\r\n                        isScale={scaleIndexies.includes(keyIndex)}\r\n                        isBase={keyIndex === scaleIndexies[0]}\r\n                    />\r\n                );\r\n            }\r\n\r\n            divList.push(\r\n                <_ScaleList key={i} width={state.beatWidth / 4 * scaleInfo.memoriCnt} isEven={i % 2 === 0}>\r\n                    {scaleJsxList}\r\n                </_ScaleList>\r\n            );\r\n        });\r\n        return divList;\r\n    }, [scoreState.scaleCacheList]);\r\n\r\n    /**\r\n     * 配置するノーツのJSXリスト\r\n     */\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        // let count = 0;\r\n        if (scoreState.scaleCacheList.length === 0) return list;//\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            const normalLeft = getNormalizeLenFromNotes(notes.pos);\r\n            const normalWidth = getNormalizeLenFromNotes(notes.len);\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const notesLeft = normalLeft * state.beatWidth;\r\n                const notesRight = notesLeft + normalWidth * state.beatWidth;\r\n                if (\r\n                    // !state.isPreview &&\r\n                    (notesRight - scroll < 0 || notesLeft - scroll > tableRef.current.clientWidth)\r\n                ) {\r\n                    continue;\r\n                }\r\n            }\r\n            const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n            // count++;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n\r\n            // クオンタイズ\r\n            const unitPos = getMinimumLenUnit(notes.pos);\r\n            const unitLen = getMinimumLenUnit(notes.len);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={normalLeft * state.beatWidth}\r\n                    width={normalWidth * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.melody.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\r\n                        isScale={isScale}\r\n                        isActive={isActive}\r\n                        isPreview={state.isPreview}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // console.log('cnt: ' + count);\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.destIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move, refs.table?.scrollLeft]);\r\n\r\n    /**\r\n     * タイムラインを横にスクロールした際の処理\r\n     */\r\n    const sideScrollAction = () => {\r\n\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const scrollLeft = refs.table.scrollLeft;\r\n            const scrollTop = refs.table.scrollTop;\r\n            refs.measure.scrollTo({ left: scrollLeft });\r\n            refs.chord.scrollTo({ left: scrollLeft });\r\n            refs.pitch.scrollTo({ top: scrollTop });\r\n        }\r\n        update();\r\n    };\r\n\r\n    /**\r\n     * マウスポインタがエリア外に出た際の処理\r\n     */\r\n    const mouseLeaveAction = () => {\r\n        console.log('leave!');\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n        update();\r\n    };\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header isEnable={!state.isPreview}>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                {(() => {\r\n                    const mouse = state.timelineMouse;\r\n                    if (mouse.lock === -1) {\r\n                        return mouse.pos === -1 ? <></> :\r\n                            <_MouseLinePos left={mouse.pos} />\r\n                    } else {\r\n                        const [head, tail] = mouse.lock < mouse.pos ? [mouse.lock, mouse.pos] : [mouse.pos, mouse.lock];\r\n                        const width = tail - head;\r\n                        return <_MouseRange left={head} width={width} />\r\n                    }\r\n                })()}\r\n                {\r\n\r\n                }\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                        update={() => setInvalidate2({})}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef} onScroll={sideScrollAction} >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleDivJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseLeave={mouseLeaveAction}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _MouseLine = css`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    width: 3px;\r\n`;\r\nconst _MouseLinePos = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #15ff00;\r\n`;\r\nconst _MouseLineLock = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #fbff00;\r\n`;\r\n\r\nconst _MouseRange = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    width: ${props => props.width}px;\r\n    background-color: #ffffff8b;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #464545;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n    /* background-color: #70ff7058; */\r\n`;\r\n\r\nconst _ScaleList = styled.div<{\r\n    width: number;\r\n    isEven: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    /* pointer-events: none; */\r\n    background-color: #70ff7021;\r\n    ${props => !props.isEven ? '' : css`\r\n        background-color: #708aff20;\r\n    `}\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #2727275a;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #00a6cf52;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `}\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `}\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb0040;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isPreview: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    opacity: 0.5;\r\n    ${props => props.isPreview && !props.isActive ? '' : css`    \r\n       opacity: 1;\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    ${props => !(props.isPreview && props.isActive) ? '' : css`\r\n        box-shadow: 0 0 32px 0 #ffffff92;\r\n    `}\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #7a270028;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport Styles, { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport MelodyUtil, {  } from \"../../../utils/melodyUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    useEffect(() => {\r\n        const info = melody.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.melody.setInstrument(soundFontPlayer);\r\n            });\r\n\r\n        // acoustic_guitar_steel\r\n        //bright_acoustic_piano\r\n        Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\r\n            { gain: 2, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.score.setPiano(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    const switchMode = () => {\r\n        state.isMelody = !state.isMelody;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isMelody ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isMelody ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isMelody ? () => {\r\n\r\n        if (!state.isPreview) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        } else {\r\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    } : () => {\r\n\r\n        if (!melody.isPreview) {\r\n            dispatcher.melody.previewStart();\r\n        } else {\r\n           MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    }\r\n    /** アンサンブルの切替 */\r\n    const toggleEnsamble = !state.isMelody ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.melody.setState(melody);\r\n    }\r\n\r\n    const playJsx = <_SwitchInner isActive={isPreview}>Play</_SwitchInner>;\r\n    const stopJsx = <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner>;\r\n    const ensambleJsx = <_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner>;\r\n    const soloJsx = <_SwitchInner isActive={isSolo}>Solo</_SwitchInner>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header isEnable={state.hideMenu === 'none'}>\r\n                <_Mode isEnable={!isPreview}>\r\n                    <_ModeItem isActive={!state.isMelody} onClick={() => {\r\n                        if (state.isMelody) switchMode();\r\n                    }}>Harmony</_ModeItem>\r\n                    <_ModeItem isActive={state.isMelody} onClick={() => {\r\n                        if (!state.isMelody) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch isEnable={true} onClick={preview}>{playJsx} / {stopJsx}</_Switch>\r\n                    <_Switch isEnable={!state.isPreview} onClick={toggleEnsamble}>{ensambleJsx} / {soloJsx}</_Switch>\r\n                    <_Button isEnable={true} onClick={dispatcher.score.saveFile}>Save</_Button>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    const isPermit = !isPreview && state.hideMenu === 'none';\r\n                    if (isPermit) {\r\n                        switch (e.key) {\r\n                            case 'r': switchMode(); break;\r\n                        }\r\n                    }\r\n                }}>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isMelody} />\r\n                    <MelodyFrame isActive={state.isMelody} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _Mode = styled.div<{\r\n    isEnable: boolean\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 150px;\r\n    height: calc(100% - 8px);\r\n    background-color: #cae4e3;\r\n    margin: 4px 0 0 24px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    &:hover {\r\n        background-color: #dceceb\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #e1e4ca;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    &:hover {\r\n        background-color: #eff3cf\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\nimport PreviewTab from \"./preview/previewTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    // { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    // { name: 'Preview', disable: !isAccept, cont: store.scoreData.chordList.length === 0 ? <></> : <PreviewTab data={store.scoreData} /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? TheoryUtil.DEGREE12_FLAT_LIST : TheoryUtil.DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey) as TheoryUtil.SymbolParams;\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    // sampler.releaseAll();\r\n\r\n                    const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = TheoryUtil.IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        // sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                // sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst HomeManage = () => {\r\n\r\n    const { isAuthenticated, user, isLoading } = useAuth0();\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [userId, setUserId] = useState('-');\r\n\r\n    const loginProps = store.userEnv.login;\r\n\r\n    let email = '-';\r\n    if (isAuthenticated && user != undefined) {\r\n        email = user.email ?? '-';\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('check');\r\n        if (!loginProps) {\r\n            setUserId('');\r\n        } else {\r\n            console.log('new');\r\n            setUserId(loginProps.id);\r\n        }\r\n    }, [loginProps, isAuthenticated]);\r\n\r\n    const createUser = () => {\r\n        if (user != undefined) {\r\n            DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(email, id) VALUES('${user.email}', '${userId}')`).then(() => {\r\n                window.location.reload();\r\n            });\r\n        }\r\n    }\r\n\r\n    const updateUser = () => {\r\n        DataUtil.sendQueryRequestToAPI('update', `UPDATE user_tbl SET id = '${userId}' WHERE seq = ${loginProps?.seq}`).then(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    const registerLabel = loginProps == undefined ? 'create' : 'update';\r\n    const registerAction = loginProps == undefined ? createUser : updateUser;\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_Recored>\r\n                <_TitleLabel>User Data</_TitleLabel>\r\n            </_Recored>\r\n            <_ListInfoDiv isEnable={isAuthenticated && !isLoading}>\r\n                <_Recored>\r\n                    <_ItemnLabel>e-mail</_ItemnLabel>\r\n                    <_ItemnValue>{email}</_ItemnValue>\r\n                </_Recored>\r\n                <_Recored>\r\n                    <_ItemnLabel>user id</_ItemnLabel>\r\n                    <_ItemnForm type=\"text\" value={userId} onChange={(e) => {\r\n                        setUserId(e.target.value);\r\n                    }} />\r\n                </_Recored>\r\n                <_ButtonsDiv>\r\n                    <_Button isEnable={true} onClick={registerAction}>{registerLabel}</_Button>\r\n                </_ButtonsDiv>\r\n            </_ListInfoDiv>\r\n        </_Left>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeManage;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 400px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\n\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 30px;\r\n    user-select: text;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ItemnForm = styled.input`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #1a1a1a;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #e9e9e9;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #888888;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;","import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst ScoreInfoTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [userId, setUserId] = useState('-');\r\n\r\n    const directScore = store.systemState.directScore;\r\n\r\n    const [owner, name] = directScore == null ? ['-', '-'] : [directScore.owner, directScore.name];\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_Recored>\r\n                <_TitleLabel>Score Data</_TitleLabel>\r\n            </_Recored>\r\n            <_ListInfoDiv isEnable={true}>\r\n                <_Recored>\r\n                    <_ItemnLabel>owner</_ItemnLabel>\r\n                    <_ItemnValue>{owner}</_ItemnValue>\r\n                </_Recored>\r\n                <_Recored>\r\n                    <_ItemnLabel>name</_ItemnLabel>\r\n                    <_ItemnValue>{name}</_ItemnValue>\r\n                </_Recored>\r\n            </_ListInfoDiv>\r\n        </_Left>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default ScoreInfoTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 400px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\n\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 30px;\r\n    user-select: text;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ItemnForm = styled.input`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #1a1a1a;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #e9e9e9;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #888888;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport EditTab from \"../score/edit/editTab\";\r\nimport ScoreInfoTab from \"./scoreInfoTab\";\r\n\r\nconst PreviewChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Info', disable: false, cont: <ScoreInfoTab /> },\r\n                    { name: 'View', disable: false, cont: <EditTab /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PreviewChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { CgOptions, CgPiano } from 'react-icons/cg';\r\nimport { GiMusicalScore } from 'react-icons/gi';\r\nimport { ImPlay } from 'react-icons/im';\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\nimport PreviewChannel from \"../preview/previewChannel\";\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { ScoreData } from \"../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../utils/cacheUtil\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    const isDirect = store.systemState.directScore != null;\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <_Wrap>\r\n                    {/* <DraggableDialog /> */}\r\n                    {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n                    <ChannelPane\r\n                        tabElements={[\r\n                            { name: 'Home', icon: <AiFillHome />, isEnable: !isDirect, cont: <HomeChannel /> },\r\n                            { name: 'Perform', icon: <CgPiano />, isEnable: false, cont: <PerformChannel /> },\r\n                            { name: 'Score', icon: <GiMusicalScore />, isEnable: !isDirect, cont: <ScoreChannel /> },\r\n                            { name: 'Option', icon: <CgOptions />, isEnable: false, cont: <SettingChannel /> },\r\n                            { name: 'Preview', icon: <ImPlay />, isEnable: isDirect, cont: <PreviewChannel /> }\r\n                        ]}\r\n                        activeNo={store.systemState.mainChannelIndex}\r\n                        selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n                    />\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/test\" exact >\r\n                <_Wrap>\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/preview\" exact >\r\n                <DirectView hashKey={str} />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nconst DirectView = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const conteseq = DataUtil.getDecryptionedScoreSeq(props.hashKey);\r\n\r\n    const setScoreData = (owner: string, dispnam: string, data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n        store.systemState.mainChannelIndex = 4;\r\n        store.systemState.scoreTabIndex = 0;\r\n        store.systemState.directScore = {\r\n            owner, name: dispnam\r\n        };\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    useEffect(() => {\r\n        DataUtil.findScore(conteseq).then(resList => {\r\n            if (resList.length > 0) {\r\n                const source = resList[0]['data'];\r\n                const owner = resList[0]['owner'];\r\n                const dispnam = resList[0]['dispnam'];\r\n                const text = DataUtil.unZip(source);\r\n                setScoreData(owner, dispnam, JSON.parse(text));\r\n            }\r\n        });\r\n    }, []);\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport LoginFrame from \"../login/loginFrame\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport PatternOptions from \"../backing/pattern/patternOptions\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { loginWithRedirect, isAuthenticated, logout, user } = useAuth0();\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    useEffect(() => {\r\n        console.log(window.location.origin);\r\n        if (user != undefined && user.email != undefined) {\r\n            DataUtil.findUserInfo(user.email).then(userList => {\r\n                console.log(userList);\r\n                if (userList.length > 0) {\r\n                    const userProps = userList[0];\r\n                    store.userEnv.login = {\r\n                        seq: userProps.seq,\r\n                        id: userProps.id\r\n                    }\r\n                    dispatcher.system.setUserEnv(store.userEnv);\r\n                    setUserId('@' + userProps.id);\r\n                } else {\r\n                    setUserId('unregistered');\r\n                }\r\n            });\r\n        }\r\n        console.log(user);\r\n    }, [user]);\r\n\r\n    const authButtonJsx = !isAuthenticated ? (\r\n        <_LoginButton onClick={() => {\r\n            // store.systemState.dialog = <LoginFrame />;\r\n            // dispatcher.system.setState(store.systemState);\r\n            console.log(window.location.origin);\r\n            loginWithRedirect();\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName isEntry={store.userEnv.login != undefined}>{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            logout();\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #003a86;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #96000057;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useCallback, useEffect, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    const callback = useCallback(dispatcher.system.switchSplashToMain, []);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={callback} /\r\n                    >}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\n\nconst REACT_APP_AUTH0_DOMAIN = 'dev-a0p0m4lr.us.auth0.com';\nconst REACT_APP_AUTH0_CLIENT_ID = 'ABaWpYVBZwTr3tkyxhq1kWh2YwT4epew';\n\nReactDOM.render(\n  <Auth0Provider\n    domain={REACT_APP_AUTH0_DOMAIN}\n    clientId={REACT_APP_AUTH0_CLIENT_ID}\n    redirectUri={window.location.origin + '/licresia_demo_app'}\n  >\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Auth0Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import zlib from \"zlib\";\r\nimport { ScoreState } from \"../redux/store/score/scoreState\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport Hashids from 'hashids';\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n    \r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5000';\r\n    export const DB_SERVER_DOMAIN = 'https://licresia-demo01-server.glitch.me';\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4000';\r\n    export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/licresia_demo_app';\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         // sampleテーブルから全カラムのデータをid順に取得\r\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\r\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\r\n\r\n    //         if (error) {\r\n    //             throw error;\r\n    //         }\r\n    //         if (data) {\r\n    //             console.log(data);\r\n    //         }\r\n    //     } catch (error: any) {\r\n    //         alert(error.message);\r\n    //     } finally {\r\n\r\n    //     }\r\n    // };\r\n\r\n    export const getHashedFromScoreSeq = (scoreSeq: number) => {\r\n        const hashids = new Hashids('licresia-demo', 11);\r\n        const hash = hashids.encode(scoreSeq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n    export const getDecryptionedScoreSeq = (hashedScoreSeq: string) => {\r\n        const hashids = new Hashids('licresia-demo', 11);\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedScoreSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromScoreSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id FROM user_tbl`);\r\n        const results = await response.json();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfo = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findScore = async (scoreSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    export const saveFile = (plainData: string, state: ScoreState) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.lcrs'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        const fileHandle = state.fileHandle;\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                state.fileHandle = fileHandle;\r\n                // this.score.setScoreState({ ...state });\r\n                const file = await fileHandle.getFile();\r\n                alert('saved successfully!');\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = handle;\r\n                    // this.score.setScoreState({ ...state });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataUtil;"],"sourceRoot":""}