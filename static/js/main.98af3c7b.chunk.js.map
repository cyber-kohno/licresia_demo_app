{"version":3,"sources":["system/utils/theoryUtils.tsx","system/redux/reducer.tsx","system/utils/backingUtil.tsx","system/utils/instrumentsUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/side/sideFromStyles.tsx","system/redux/dispatcher/dispatcher.tsx","system/redux/store/state/dataHistory.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/sysModalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/base/design/styles.tsx","system/contents/score/manage/scoreBuilder.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/input/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailAlter.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcAlter.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFormAlter.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/noteSideForm.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/score/edit/harmonize/initial/initialBeat.tsx","system/contents/backing/pattern/builder/patternAdjust.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternVelocity.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternStatus.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/initial/harmClipboard.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/contents/score/edit/melody/util/melodyTimelineMouseOperation.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/item/controlButton.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/preview/previewTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getBeatProps","beatSignature","beatMemoriCount","barBeatCnt","beatLen","minute","bpm","TheoryUtil","ActionType","ROOT_ALL","index","isFlat","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","getDegreeRoot","props","KEY12_FLAT_LIST","KEY12_SHARP_LIST","getChordRoot","baseKeyIndex","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SYMBOL_LIST","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_LIST","root","symbolKey","DIATONIC_MINOR_SCALE_LIST","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","getSymbolFromKey","ret","find","symbol","undefined","getSymbolDerives","list","forEach","push","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","getDefaultBacking","voicingList","struct","octave","pattern","hasError","divCount","Array","fill","table","channels","i","length","j","structIndex","editorPattern","channelSize","layers","layer","divs","noteDivList","signals","record","cell","x","y","status","notesList","vels","velocityList","slice","voicingStructs","size","channel","reverse","scoreLayers","console","log","JSON","stringify","scoreLayer","notes","rootIndex","map","item","interval","backing","pitchIndexList","chordTime","soundName","Math","floor","playHarmony","startTimeList","total","div","normal","rate","isDot","div3","timingAdj","timing","startTime","sustainTime","gain","velAdj","setTimeout","state","dispatcher","harmony","stop","isPreview","id","clearInterval","setState","getLimitLen","chordInfo","memoriCount","init","minuteLen","head","tail","getUsingLenFromDivs","reduce","prev","cur","len","checkOverlapBackLayer","limitLen","totalLen","layerIndex","channelIndex","divIndex","baseLayer","backLayer","getDivRange","left","right","isOverlap","backLeft","backRight","BackingUtil","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","getSortetdNotesLen","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","keyIndex","instrument","soundfontPlayer","play","duration","soundFullName","alert","stopPreview","sampler","releaseAll","tune","adjustScrollX","previewHarmony","start","cacheList","melody","elementCacheList","chordList","detail","cache","element","pastSecond","pitchList","getPitchListFromVoicing","playBacking","previewCurHarmony","curChord","tableMouse","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","PATTERN_HEADER_HEIGHT","PATTERN_BODY_HEIGHT","NOTES_1BAR_WIDTH","HarmonizeUtil","firstTime","update","score","setScoreState","focusIndex","distIndex","clearTimeout","system","setReserveTasks","sectionCacheList","beatCacheList","scaleCacheList","measureCacheList","scale","totalMinute","sectionNo","sectionBeatSum","curSecond","chordIndex","curMemoriCount","totalBarCount","totalMemoriCount","beatRangeMemoriCount","totalBeat","totalMemoriBarCount","beatProps","prevBeat","prevMemoriCount","prevBarCount","prevMinute","labelName","beatSum","rangeIndexStart","rangeIndexEnd","prevBar","getSustainTime","barMemoriCount","dispBarCount","barCount","alterType","modRel","dommVal","keyAdj","tempoRel","tempoDiff","tempoRate","tempoAbs","bar","surplusBeat","curTotalMemori","reffers","Dispatcher","dispatch","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setInvalidate","saveFile","data","fileHandle","a","createWritable","writable","write","close","getFile","window","showSaveFilePicker","types","accept","then","handle","catch","setPiano","setScoreTabIndex","scoreTabIndex","setKeySwitch","keySwitch","setScoreData","moveElement","isNext","sub","moveDist","releaseRange","isTail","distHead","distTail","moveSection","curSectionIndex","curSectionInfo","curElementType","flashElement","incrementDegreeRoot","isUp","includes","incrementBeatLen","updateHarmonizeCache","incrementMinuteVal","pos","value","target","incrementMinuteValRelation","nearIndex","addChordElement","initialBeat","on","splice","addSectionElement","addAlterElement","removeCurElement","copyElementList","parse","copiedElementList","cloneBacking","pasteElementList","incrementSymbol","setDiatonicChord","chord","setDefaultBacking","pastBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setInstrument","incrementCurPitch","isUpper","mode","dataHistory","add","scaleIndexies","SCALE_INDEX","prevPitchIndex","pitchIndex","tempPitchIndex","adjustScrollY","moveFocus","lastFocus","updateCurChord","moveDistFocus","beatWidth","searchedChord","width","addNotes","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","end","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","pitch","time","isSolo","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","sort","b","posA","posB","undo","history","unshift","redo","next","openBackingEditor","chordBacking","hideMenu","voicingTable","getInitVoicingTable","patternProps","buildChannels","lenIndex","isUsePedal","getChannels","convertEditorLayerFromScore","closeBackingEditor","getInitialLayer","col","isExist","voicing","mappingEditorToScore","editor","getVoicingListFromTable","buildPatternProps","addPatternColumn","lenList","newLen","column","updateErrorState","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","getNotes","setNotes","incrementVel","after","deleteColumn","changeLayer","testBacking","checkError","this","DataHistory","initialStore","userEnv","keyConfig","note","prevElement","nextElement","prevSection","nextSection","addChord","addSection","addChange","deleteCur","distMode","sustainMode","incRoot","decRoot","incBeat","decBeat","symbolMode","colorProps","entryBackground","dialogMode","isTune","tempoCacheList","control","minHeadMode","minTailMode","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","timelineMouse","soundfontInfo","scaleMode","resize","move","shift","Sampler","toDestination","harmonize","measure","harmoniizeInvalidate","SysModalDialog","useContext","GlobalContext","isDisplay","_Blind","_Frame","styled","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isDisable","disable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","onClick","_Icon","_Label","ChannelContents","_Contents","css","TabbedPane","TabLabel","_TabLabel","TabContents","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ScoreBuilder","curIndex","addChordDiatonic","scaleIndex","getScoreData","fixed","ManageTab","file","setFile","tabIndex","useMemo","modified","tempo","section","toString","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","getStringFromDate","Date","lastModified","sectionNum","chordNum","last","fileInfo","scoreInfo","setData","_Wrap","_Left","_Link","builder","_Right","_InfoDiv","_FileInfoDiv","isEnable","_TitleLabel","_Recored","_ItemnLabel","_ItemnValue","_ScoreInfoDiv","_ButtonsDiv","_Button","showOpenFilePicker","text","fileContents","FILE_INFO_HEIGHT","SymbolEditor","curSymbol","baseSymbol","derives","parentJsx","curJsx","childrenJsx","_Header","_Row","CalcChord","symbolName","chordRoot","prevCache","isError","chordName","minuteStr","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","barRem","_Len","_Border","ElementDetailAlter","_Type","val","sign","getDetailInfo","ElementDetailChord","degreeRoot","degreeOn","isDiatonic","_Degree","isSwitch","isCurrent","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Tip","jsxList","lenType","valueType","abs","_TipItem","_Error","_Voicing","_Pattern","_Backing","ElementFixedBorder","isStart","ElementDetailInit","_Title","_Value","_Record","ElementDetailSection","CalcAlter","getType","prevKey","curKey","curCache","prevTempo","curTempo","curBeat","getDetail","ScoreElement","wrapRef","useRef","bodyRef","wrap","current","body","isFocus","isRange","isSameSection","chordDetail","isInactive","ref","isSelectable","isAdditional","_Head","_CurKey","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","_Note","NoteKeyDown","e","config","isElement","Number","NoteBasicInput","signal","backingEditorInput","NoteKeySwitch","isPress","onChange","min","max","step","_NumberForm","SideFormStyles","SideFormAlter","createAlertTypeItem","createModulateRelationItem","rel","createTempoRelationItem","createBeatItem","donmmItemJsxList","_ParamDiv","_ParamItem","keyAdjItemJsxList","_Group","_CategoryLabel","createNumberForm","currentTarget","valueAsNumber","___CSS_TITLE","___CSS_FORM","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","isRootActive","isOnActive","_RootItem","onContextMenu","symbolItemsJsx","_SymbolItem","_Timing","_Minute","_MinuteItem","isReverse","_RootDiv","_SymbolDiv","input","SideFormInit","scaleItemJsxList","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","splitList","split","_NumberItem","_DirectText","_SelectDiv","_TemplateFrame","_NumberFrame","_ItemBase","NoteSideForm","ChordInfo","scaleList","structJsxList","tipJsxList","relation","getIntervalValues","_InfoItem","isScale","isUse","isBlack","_Struct","WIDTH","InitialBeatTip","_WrapTip","PatternAdjust","_Rocord","PatternLength","itemJsxList","isEdit","PatternTable","channelCount","curLayer","layerJsxList","jsxLsit","notesJsxLsit","k","setNotesStatus","_Notes","isBack","_State","isEven","isFront","jsx","_Layer","zIndex","PatternVelocity","vel","PatternBuilder","useTotalLen","isLenOverError","memoriWidth","memoriJsxList","bean","thickness","height","color","_Memori","_LengthDiv","_MeasureDiv","_MemoriList","_ChordLenLine","_OverCover","_Body","_Footer","ChannelItem","_Option","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","soundIndex","_LayerItem","proops","PatternStatus","createItem","callback","createRateItem","String","setRate","sizeJsxList","CHANNEL_MAX","_ListItem","isPermit3ren","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","selectedCell","editModeJsx","_WrapEdit","select","option","PatternFrame","isUsePattern","_UseSwitch","_Main","_StatusDiv","_MainDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","voicingLaneJsxList","channelLimitNum","OCTAVE_NUM","STRUCT_NUM","isSelected","_VoicingItem","isOver","soundfont","_VoicingLane","relationJsxList","_Relation","_Info","TIP_WIDTH","BackingEditorFrame","_PrevireBrind","_FooterDiv","HarmHideFrame","isOpen","isBackingEnable","HarmClipboard","_TypeDiv","_ModeItem","MEMORI_WIDTH","HarmMeasure","dataList","_Margin","_Bar","beatJsxList","minuteJsxList","isChordFocus","curChordIndex","label","beatMemori","posMemori","_SustainItem","sustain","scrollPos","_ScrollFrame","_Blocks","_Measure","HarmonizeTab","focus","harmMeasure","onKeyDown","onKeyUp","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_HEAD_WIDTH","HarmSections","sections","curSectionNo","_Total","MelodyTimelineMouseOperation","mouseDownEvent","timelineLength","button","rect","getBoundingClientRect","clientX","mouseMoveEvent","mouse","mouseUpEvent","scrollLeft","MelodyTimeline","measureRef","chordRef","barLength","measureJsxList","chordJsxList","scroll","clientWidth","symbolNmae","degreeName","_ChordItem","_DegreeName","_ChordName","_ChordWrap","_MeasureWrap","_MeasureInner","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_MousePos","span","isHead","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","info","Soundfont","AudioContext","release","soundFontPlayer","QuantizeSwitch","ControlButton","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","getNextLeft","clientY","scrollTop","curPos","posX","lenWidth","newPos","prevFocus","MelodyInput","keyDownEvent","isSingle","keySwitchEvent","MelodyFrame","tableRef","pitchRef","setInvalidate2","scaleLineJsxList","_ScaleLine","isBase","notesJsxList","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_MouseLinePos","_MouseRange","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","_Test","editAnimation","keyframes","_MouseLine","TUNE_TIMELINE_WIDTH","_Scale","EditTab","switchMode","preview","toggleEnsamble","_Mode","_Buttons","_Switch","_SwitchInner","_SECTIONS","PIT_HEIGTH","RATE_WIDTH","PreviewTab","areaRef","rateRef","past","setPast","timerId","setTimerId","isPlay","pit","sus","startList","normalList","areaWidth","recordJsxList","getTime","setInterval","_MainFixed","_RateFrame","_RateValue","_MainScroll","_HarmonyBox","_Line","HEADER_WIDTH","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","items","degree","degreeRootName","chordRootName","triggerAttack","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","fadeIn","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","Provider","App","document","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.98af3c7b.chunk.js","sourcesContent":["import { BeatSignature } from \"../redux/store/score/scoreData\";\r\n\r\nnamespace TheoryUtil {\r\n\r\n\r\n    export const SCALE_INDEX = [0, 2, 4, 5, 7, 9, 11];\r\n\r\n\r\n\r\n    export type BeatProps = {\r\n        // mol: number;\r\n        // den: number;\r\n        // 1拍のメモリ（16分音符）の数\r\n        beatMemoriCount: number;\r\n        // 1小節の拍数\r\n        barBeatCnt: number;\r\n    }\r\n    export const getBeatProps = (beatSignature: BeatSignature): BeatProps => {\r\n        // const props = beatSignature.split('/');\r\n        // // 分子\r\n        // const mol = Number(props[0]);\r\n        // // 分母\r\n        // const den = Number(props[1]);\r\n        switch (beatSignature) {\r\n            case '4/4': return { beatMemoriCount: 4, barBeatCnt: 4 };\r\n            case '2/4': return { beatMemoriCount: 4, barBeatCnt: 2 };\r\n            case '3/4': return { beatMemoriCount: 4, barBeatCnt: 3 };\r\n            case '6/8': return { beatMemoriCount: 6, barBeatCnt: 2 };\r\n            case '9/8': return { beatMemoriCount: 6, barBeatCnt: 3 };\r\n            case '12/8': return { beatMemoriCount: 6, barBeatCnt: 4 };\r\n        };\r\n        // return {} as BeatProps;\r\n    }\r\n\r\n    export const getSustainTime = (beatLen: number, minute: number, bpm: number, beatSignature: BeatSignature): number => {\r\n        const beatMemoriCount = getBeatProps(beatSignature).beatMemoriCount;\r\n        const minuteLen = minute * (1 / beatMemoriCount);\r\n        return 60000 / bpm * (beatLen + minuteLen);\r\n    }\r\n}\r\n\r\nexport default TheoryUtil;\r\n\r\nexport type DegreeProps = {\r\n    index: number;\r\n    isFlat: boolean;\r\n};\r\n\r\nexport type ChordProps = {\r\n    root: DegreeProps;\r\n    symbolKey: SymbolKey;\r\n};\r\n\r\nexport const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n    null,\r\n    { index: 0, isFlat: false },\r\n    { index: 1, isFlat: false },\r\n    { index: 1, isFlat: true },\r\n    { index: 2, isFlat: false },\r\n    { index: 3, isFlat: false },\r\n    { index: 3, isFlat: true },\r\n    { index: 4, isFlat: false },\r\n    { index: 5, isFlat: false },\r\n    { index: 6, isFlat: false },\r\n    { index: 6, isFlat: true },\r\n    { index: 7, isFlat: false },\r\n    { index: 8, isFlat: false },\r\n    { index: 8, isFlat: true },\r\n    { index: 9, isFlat: false },\r\n    { index: 10, isFlat: false },\r\n    { index: 10, isFlat: true },\r\n    { index: 11, isFlat: false }\r\n];\r\n\r\n\r\nexport const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\n// export const DEGREE12_FLAT_LIST = [\r\n//     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n// ];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const getDegreeRoot = (props: DegreeProps) => {\r\n    const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n    return list[props.index];\r\n}\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\n\r\nexport const getChordRoot = (props: DegreeProps, baseKeyIndex: number) => {\r\n    const list = props.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n    return list[(baseKeyIndex + props.index) % 12];\r\n}\r\n\r\n\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\n// export const KEY12_MINOR_SCALE_LIST = [\r\n//     'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'Bbm', 'Bm'\r\n// ];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n];\r\n\r\nexport type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\nexport type SymbolKey =\r\n    'major' |\r\n    'minor' |\r\n    'suspend4th' |\r\n    'diminish' |\r\n    'augument' |\r\n    'major-maj7th' |\r\n    'major-min7th' |\r\n    'minor-7th' |\r\n    'minor-maj7th' |\r\n    'sus4-7th' |\r\n    'diminish-7th' |\r\n    'augument-7th' |\r\n    'major-add9th' |\r\n    'minor-add9th' |\r\n    'sixth-9th' |\r\n    'minor-minus5' |\r\n    'minor7-minus5' |\r\n    'major-maj9th' |\r\n    'major-9th'\r\n    ;\r\n\r\n\r\nexport type SymbolAttribute =\r\n    'triad' |\r\n    'seventh' |\r\n    'add9th'\r\n    ;\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey;\r\n    name: string;\r\n    base: null | SymbolKey;\r\n    attr?: SymbolAttribute;\r\n    structs: IntervalRelation[];\r\n}\r\n\r\nexport const SYMBOL_LIST: readonly SymbolParams[] = [\r\n    {\r\n        key: 'major', name: '',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor', name: 'm',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'suspend4th', name: 'sus4',\r\n        base: null,\r\n        structs: ['p1', 'p4', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish', name: 'dim',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish-7th', name: 'dim7',\r\n        base: 'diminish',\r\n        structs: ['p1', 'm3', 'd5', 'd7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'augument', name: 'aug',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'a5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'augument-7th', name: 'aug7',\r\n        base: 'augument',\r\n        structs: ['p1', 'M3', 'a5', 'm7']\r\n    },\r\n    {\r\n        key: 'minor-minus5', name: 'm(-5)',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor7-minus5', name: 'm7(-5)',\r\n        base: 'minor-minus5',\r\n        structs: ['p1', 'm3', 'd5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-maj7th', name: 'maj7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-min7th', name: '7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'minor-7th', name: 'm7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'sus4-7th', name: '7sus4',\r\n        base: 'suspend4th',\r\n        structs: ['p1', 'p4', 'p5']\r\n    },\r\n    {\r\n        key: 'minor-maj7th', name: 'mmaj7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-add9th', name: 'add9',\r\n        base: 'major',\r\n        structs: ['p1', 'M2', 'M3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'minor-add9th', name: 'madd9',\r\n        base: 'minor',\r\n        structs: ['p1', 'M2', 'm3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-maj9th', name: 'maj9',\r\n        base: 'major-maj7th',\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-9th', name: '9',\r\n        base: 'major-min7th',\r\n        structs: ['p1', 'm3', 'p5']\r\n    },\r\n];\r\n\r\nexport type IntervalRelation =\r\n    'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n    'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n    'd7' | 'm7' | 'M7'\r\n    ;\r\n\r\nexport const IntervalRelationProps = {\r\n    'p1': 0,\r\n    'm2': 1,\r\n    'M2': 2,\r\n    'm3': 3,\r\n    'M3': 4,\r\n    'p4': 5,\r\n    'd5': 6,\r\n    'p5': 7,\r\n    'a5': 8,\r\n    'm6': 8,\r\n    'M6': 9,\r\n    'd7': 9,\r\n    'm7': 10,\r\n    'M7': 11\r\n}\r\n\r\nexport const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n    { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n];\r\n\r\nexport const DIATONIC_MINOR_SCALE_LIST: readonly ChordProps[] = [\r\n    { root: { index: 0, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 2, isFlat: false }, symbolKey: 'minor-minus5' },\r\n    { root: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n    { root: { index: 5, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 7, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n    { root: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n];\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n];\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    'bⅢ', 'bⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    'bⅥ', 'bⅥM7',\r\n    'bⅦ', 'bⅦ7'\r\n];\r\n\r\nexport const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n    const ret = SYMBOL_LIST.find((symbol) => {\r\n        if (key === symbol.key) {\r\n            return symbol;\r\n        }\r\n    });\r\n    return ret != undefined ? ret : SYMBOL_LIST[0];\r\n}\r\n\r\nexport const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n    let list: SymbolKey[] = [];\r\n    SYMBOL_LIST.forEach((symbol) => {\r\n        if (key === symbol.base) {\r\n            list.push(symbol.key);\r\n        }\r\n    });\r\n    return list;\r\n}\r\n\r\nexport const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n    return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n}\r\n","import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n    SET_INVALIDATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n        case ActionType.SET_INVALIDATE:\r\n            store.invalidate = payload.invalidate;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { playHarmony } from \"./melodyUtil\";\r\nimport { NOTES_1BAR_WIDTH } from \"./systemConst\";\r\nimport TheoryUtil, { IntervalRelationProps, KEY12_SHARP_LIST, SymbolParams } from \"./theoryUtils\";\r\n\r\n\r\n\r\nexport namespace BackingUtil {\r\n\r\n    // オクターブの数\r\n    export const OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    export const STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    export const CHANNEL_MAX = 12;\r\n\r\n    export const getInitialRecord = (divCount: number) => {\r\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    export const buildChannels = (table: boolean[][]): BackingState.ChannelParam[] => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    export const getVoicingListFromTable = (table: boolean[][]) => {\r\n\r\n        const voicingList: VoicingProps[] = [];\r\n        // ボイシングを設定\r\n        if (table != null) {\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        voicingList.push({ octave: i, struct: j });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return voicingList;\r\n    }\r\n\r\n    export const buildPatternProps = (editorPattern: BackingState.Pattern) => {\r\n        const channelSize = editorPattern.channels.length;\r\n        const layers: BackingLayerData[] = [];\r\n        editorPattern.layers.forEach(layer => {\r\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\r\n            const signals: BackingSignalProps[] = [];\r\n            layer.table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        signals.push({ x: j, y: i, status: cell });\r\n                    }\r\n                });\r\n            });\r\n            layers.push({ divs, notesList: signals, vels: layer.velocityList.slice() });\r\n        });\r\n        return { channelSize, layers };\r\n    }\r\n\r\n    export const getChannels = (voicingStructs: BackingState.ChannelParam[], size: number) => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: BackingState.ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n\r\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\r\n\r\n        const layers: BackingState.Layer[] = [];\r\n        console.log(JSON.stringify(scoreLayers));\r\n        scoreLayers.forEach(scoreLayer => {\r\n            const table: (BackingState.NoteStatus | null)[][] = [];\r\n            for (let i = 0; i < channelSize; i++) {\r\n                const record: (BackingState.NoteStatus | null)[] = [];\r\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\r\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\r\n                    record.push(notes == null ? null : notes.status);\r\n                }\r\n                table.push(record);\r\n            }\r\n            layers.push({\r\n                noteDivList: scoreLayer.divs,\r\n                table,\r\n                velocityList: scoreLayer.vels\r\n            });\r\n        });\r\n        console.log(JSON.stringify(layers));\r\n        return layers;\r\n    }\r\n\r\n    export const getPitchListFromVoicing = (voicingList: VoicingProps[], rootIndex: number, symbol: SymbolParams) => {\r\n        return voicingList.map((item) => {\r\n            const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n            return 12 * item.octave + rootIndex + interval;\r\n        });\r\n    }\r\n\r\n    export const playBacking = (store: Store, reserveTasks: NodeJS.Timeout[], bpm: number, backing: ChordBacking, pitchIndexList: number[], chordTime: number) => {\r\n        if (backing.pattern == null) {\r\n            pitchIndexList.forEach((index) => {\r\n                const soundName = KEY12_SHARP_LIST[index % 12];\r\n                const octave = Math.floor(index / 12);\r\n                const soundFullName = soundName + octave;\r\n                playHarmony(soundFullName, store, chordTime, 5);\r\n            });\r\n        } else {\r\n            const pattern = backing.pattern;\r\n            pattern.layers.forEach(layer => {\r\n                const startTimeList: number[] = [];\r\n                let total = 0;\r\n                layer.divs.forEach(div => {\r\n                    startTimeList.push(60 / bpm * total);\r\n                    let normal = 4 / div.rate;\r\n                    if (div.isDot) normal *= 1.5;\r\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                    total += normal;\r\n                });\r\n                layer.notesList.forEach((notes) => {\r\n\r\n                    const timingAdj = notes.status.timing * (60 / bpm * 1 / 32);\r\n                    const startTime = startTimeList[notes.x] + timingAdj;\r\n                    const sustainTime = chordTime - startTime;\r\n                    let gain = layer.vels[notes.x] + notes.status.velAdj;\r\n                    if (gain < 1) gain = 1;\r\n                    if (gain > 10) gain = 10;\r\n                    gain *= 0.6;\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            const index = pitchIndexList[notes.y];\r\n                            const soundName = KEY12_SHARP_LIST[index % 12];\r\n                            const octave = Math.floor(index / 12);\r\n                            const soundFullName = soundName + octave;\r\n                            playHarmony(soundFullName, store, sustainTime, gain);\r\n                        }, startTime * 1000)\r\n                    );\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    export const stopPreview = (store: Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        store.instruments.harmony?.stop();\r\n        state.isPreview = false;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    export const getLimitLen = (chordInfo: BackingState.ChordInfo) => {\r\n        const minute = chordInfo.minute;\r\n        // 16分音符の長さで割る\r\n        const memoriCount = TheoryUtil.getBeatProps(chordInfo.init.beatSignature).beatMemoriCount;\r\n        const minuteLen = minute.head / memoriCount + minute.tail / memoriCount;\r\n        return (chordInfo.beatLen + minuteLen);\r\n    }\r\n\r\n    export const getUsingLenFromDivs = (divs: BackingState.NoteDiv[], chordInfo: BackingState.ChordInfo) => {\r\n        const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n        const adjustRate = 4 / beatProps.beatMemoriCount;\r\n        return divs.reduce((prev, cur) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            return prev + len * 4;\r\n        }, 0);\r\n    }\r\n\r\n    export const checkError = (chordInfo: BackingState.ChordInfo, voicingList: VoicingProps[], pattern: null | BackingState.Pattern): boolean => {\r\n        let hasError = false;\r\n        if (pattern != null) {\r\n\r\n            // 選択しているボイシングがチャンネル数に満たない場合\r\n            if (voicingList.length < pattern.channels.length) hasError = true;\r\n\r\n            const limitLen = getLimitLen(chordInfo);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getUsingLenFromDivs(layer.noteDivList, chordInfo);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n\r\n            // 裏レイヤーのノーツと重なっている場合\r\n            pattern.layers[0].table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        if (checkOverlapBackLayer(pattern.layers, 0, i, j)) {\r\n                            hasError = true;\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkOverlapBackLayer = (layers: BackingState.Layer[], layerIndex: number, channelIndex: number, divIndex: number): boolean => {\r\n        const baseLayer = layers[layerIndex];\r\n        const backLayer = layers[layerIndex === 0 ? 1 : 0];\r\n        const [left, right] = getDivRange(baseLayer.noteDivList, divIndex);\r\n        console.log(`left=${left}, right=${right}`);\r\n        let isOverlap = false;\r\n        for (let i = 0; i < backLayer.noteDivList.length; i++) {\r\n            if (backLayer.table[channelIndex][i] != null) {\r\n                const [backLeft, backRight] = getDivRange(backLayer.noteDivList, i);\r\n                if (right > backLeft && left < backRight) {\r\n                    isOverlap = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return isOverlap;\r\n    }\r\n\r\n    export const getDivRange = (divs: BackingState.NoteDiv[], divIndex: number): [number, number] => {\r\n        let [left, right] = [0, 0];\r\n\r\n        divs.slice(0, divIndex + 1).forEach((cur, i) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            left = right;\r\n            right += len * 4;\r\n        });\r\n        return [left, right];\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SymbolAttribute } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null,\r\n        hasError: false\r\n    };\r\n    return backing;\r\n}","import { isatty } from \"tty\";\r\nimport { MelodyState } from \"../redux/store/score/melodyState\";\r\nimport { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { ScoreState } from \"../redux/store/score/scoreState\";\r\nimport ElementDetailChord from \"../contents/score/edit/harmonize/elements/form/elementDetailChord\";\r\nimport BackingUtil from \"./backingUtil\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += notes.len4;\r\n    total += notes.len8 / 2;\r\n    total += notes.len16 / 4;\r\n    total += notes.len4div3 / 3;\r\n    total += notes.len8div3 / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    return getSortetdNotesLen({\r\n        len4: notes1.len4 + notes2.len4,\r\n        len8: notes1.len8 + notes2.len8,\r\n        len16: notes1.len16 + notes2.len16,\r\n        len4div3: notes1.len4div3 + notes2.len4div3,\r\n        len8div3: notes1.len8div3 + notes2.len8div3\r\n    });\r\n}\r\n\r\nexport const getSortetdNotesLen = (base: MelodyLength) => {\r\n\r\n    const len8div3Cnt3 = Math.floor(base.len8div3 / 3);\r\n    base.len8div3 -= len8div3Cnt3 * 3;\r\n    base.len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(base.len8div3 / 2);\r\n    base.len8div3 -= len8div3Cnt2 * 2;\r\n    base.len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(base.len4div3 / 3);\r\n    base.len4div3 -= len4div3Cnt3 * 3;\r\n    base.len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(base.len16 / 2);\r\n    base.len16 -= len16Cnt2 * 2;\r\n    base.len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(base.len8 / 2);\r\n    base.len8 -= len8Cnt2 * 2;\r\n    base.len4 += len8Cnt2;\r\n\r\n    return base;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n    return getSortetdNotesLen({\r\n        len4, len8, len16, len4div3, len8div3\r\n    });\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if (notes.len8div3 > 0) return 6;\r\n    else if (notes.len16 > 0) return 4;\r\n    else if (notes.len4div3 > 0) return 3;\r\n    else if (notes.len8 > 0) return 2;\r\n    else if (notes.len4 > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playHarmony = (soundFullName: string, store: Store, duration: number, gain: number) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, {gain, duration });\r\n    } else {\r\n        alert('null');\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nexport const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const state = store.melodyState;\r\n    const data = store.scoreData;\r\n    const reserveTasks: NodeJS.Timeout[] = [];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    const init = data.chordList[0].detail as DetailInit;\r\n    const bpm = init.bpm;\r\n    state.lastFocus = state.focusIndex;\r\n    state.isPreview = true;\r\n    const update = store.invalidate.melody as ()=>void;\r\n    let firstTime = -1;\r\n    for (let i = state.focusIndex; i < data.notesList.length; i++) {\r\n        const notes = data.notesList[i];\r\n        const pos = getNormalizeLenFromNotes(notes.pos);\r\n        const len = getNormalizeLenFromNotes(notes.len);\r\n        const pitch = notes.pitchIndex;\r\n        const time = 60 / bpm * pos;\r\n\r\n        // 開始時のノーツの位置（時間）を保存する。\r\n        if (firstTime === -1) {\r\n            firstTime = time;\r\n        }\r\n\r\n        reserveTasks.push(\r\n            setTimeout(() => {\r\n                state.focusIndex = i;\r\n                state.distIndex = state.focusIndex;\r\n                // state.mouseState.curChord = searchCurChord(store, i);\r\n                update();\r\n                // dispatcher.tune.setState(state);\r\n                dispatcher.tune.adjustScrollX();\r\n                if (instrument != null) {\r\n                    const keyIndex = getKeyIndexFromPitcher(pitch);\r\n                    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n                    const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n                    instrument.stop();\r\n                    instrument.play(soundName + octave, 0, { duration: 60 / bpm * len });\r\n                }\r\n            }, (time - firstTime) * 1000)\r\n        );\r\n\r\n        if (i === data.notesList.length - 1) {\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    stopPreview(store, dispatcher, reserveTasks);\r\n                }, (time - firstTime + 60 / bpm * len) * 1000)\r\n            );\r\n        }\r\n    }\r\n\r\n    // ハーモニーを再生\r\n    if (!state.isSolo) {\r\n        previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n    }\r\n\r\n\r\n    dispatcher.system.setReserveTasks(reserveTasks);\r\n    dispatcher.tune.setState(state);\r\n}\r\n\r\nexport const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n    const state = store.melodyState;\r\n    state.isPreview = false;\r\n    // state.focusIndex = state.lastFocus;\r\n    // state.distIndex = state.focusIndex;\r\n    reserveTasks.forEach(id => clearInterval(id));\r\n    store.instruments.sampler.releaseAll();\r\n    dispatcher.tune.setState(state);\r\n    dispatcher.tune.adjustScrollX();\r\n}\r\n\r\nexport const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n    const state = store.scoreState;\r\n    const update = store.invalidate.melody as ()=>void;\r\n    const sampler = store.instruments.sampler;\r\n    const cacheList = state.elementCacheList;\r\n    const chordList = store.scoreData.chordList;\r\n    // const reserveTasks = store.reserveTasks;\r\n    const init = chordList[0].detail as DetailInit;\r\n    const adjsut = 0;\r\n    for (let i = 3; i < chordList.length; i++) {\r\n        const cache = cacheList[i];\r\n        const element = chordList[i];\r\n        if (element.type === 'chord') {\r\n            if (cache.pastSecond < start) continue;\r\n\r\n            const detail = element.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n            const chordTime = 60 / init.bpm * len;\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // sampler.releaseAll();\r\n                    // stopPiano(store);\r\n\r\n                    // const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                    // const div = pickingDelay / pitchList.length;\r\n\r\n                    // pitchList.forEach((index, j) => {\r\n                    //     const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //     const octave = Math.floor(index / 12);\r\n                    //     const soundFullName = soundName + octave;\r\n                    //     playPiano(soundFullName, store, chordTime);\r\n                    // });\r\n\r\n                    BackingUtil.playBacking(store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n\r\n                    // store.melodyState.mouseState.curChord = element;\r\n                    // update();\r\n                }, cache.pastSecond - start - adjsut)\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const init = chordList[0].detail as DetailInit;\r\n    const curChord = state.tableMouse.curChord;\r\n    const reserveTasks = store.reserveTasks;\r\n    if (curChord != null) {\r\n\r\n        const detail = curChord.detail as DetailChord;\r\n\r\n        if (detail.root == null) return;\r\n\r\n        const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n        const symbol = getSymbolFromKey(detail.symbolKey);\r\n        const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n        const backing = detail.backing;\r\n        const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n        const chordTime = 60 / init.bpm * len;\r\n\r\n        BackingUtil.playBacking(store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n\r\n        reserveTasks.push(setTimeout(() => {\r\n            state.isPreview = false;\r\n            dispatcher.tune.setState(state);\r\n        }, chordTime * 1000));\r\n        state.isPreview = true;\r\n        dispatcher.tune.setState(state);\r\n\r\n    }\r\n}","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport { playHarmony } from \"./melodyUtil\";\r\nimport TheoryUtil, { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"./theoryUtils\";\r\n\r\nnamespace HarmonizeUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n        const state = store.scoreState;\r\n        const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        const reserveTasks = store.reserveTasks;\r\n        let firstTime = -1;\r\n        const update = () => {\r\n            // if (store.invalidate.harmonize) {\r\n            //     store.invalidate.harmonize();\r\n            // }\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n        // const reserveTasks = store.reserveTasks;\r\n        const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = state.focusIndex; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                // 開始時のノーツの位置（時間）を保存する。\r\n                if (firstTime === -1) {\r\n                    firstTime = cache.pastSecond;\r\n                }\r\n\r\n\r\n                if (detail.root == null) continue;\r\n\r\n                const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                const symbol = getSymbolFromKey(detail.symbolKey);\r\n                const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n                const chordTime = 60 / cache.bpm * len;\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // sampler.releaseAll();\r\n                        // stopPiano(store);\r\n                        // store.melodyState.mouseState.curChord = element;\r\n                        // dispatcher.tune.setState(store.melodyState);\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache.bpm, backing, pitchList, chordTime);\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        update();\r\n\r\n                    }, cache.pastSecond - firstTime - adjsut)\r\n                );\r\n            }\r\n\r\n            if (i === chordList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (cache.pastSecond - firstTime - adjsut))\r\n                );\r\n            }\r\n        }\r\n        state.isPreview = true;\r\n        update();\r\n    }\r\n\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        state.isPreview = false;\r\n        // store.instruments.sampler.releaseAll();\r\n        // state.focusIndex = state.lastFocus;\r\n        reserveTasks.forEach(id => clearTimeout(id));\r\n        dispatcher.system.setReserveTasks([]);\r\n        dispatcher.score.setScoreState(state);\r\n\r\n        store.instruments.harmony?.stop();\r\n    }\r\n\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.scoreState;\r\n        const reserveTasks = store.reserveTasks;\r\n        const cache = state.elementCacheList[state.focusIndex];\r\n        const curChord = store.scoreData.chordList[state.focusIndex];\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n            const chordTime = 60 / cache.bpm * len;\r\n\r\n            BackingUtil.playBacking(store, store.reserveTasks, cache.bpm, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.score.setScoreState(state);\r\n            }, chordTime * 1000));\r\n            state.isPreview = true;\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n    }\r\n\r\n    export const updateHarmonizeCache = (store: Store, dispatcher: Dispatcher) => {\r\n        const chordList = store.scoreData.chordList;\r\n        const init = (chordList[0].detail as DetailInit);\r\n\r\n        const elementCacheList: ScoreCache.Element[] = [];\r\n        const sectionCacheList: ScoreCache.Section[] = [];\r\n        const beatCacheList: ScoreCache.BeatRange[] = [];\r\n        const scaleCacheList: ScoreCache.KeyScaleRange[] = [];\r\n        const tempoCacheList: ScoreCache.TempoRange[] = [];\r\n        const measureCacheList: ScoreCache.Measure[] = [];\r\n\r\n        // 初期値情報\r\n        let keyIndex = init.keyIndex;\r\n        let scale = init.scale;\r\n        let bpm = init.bpm;\r\n\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let sectionBeatSum = 0;\r\n        let pastSecond = 0;\r\n        let curSecond = 0;\r\n        let chordIndex = -1;\r\n        // let curTotalBeat = 0;\r\n        let curMemoriCount = 0;\r\n        let totalBarCount = 0;\r\n\r\n        // 経過した16分音符のカウント\r\n        let totalMemoriCount = 0;\r\n        let beatRangeMemoriCount = 0;\r\n        let totalBeat = 0;\r\n        let totalMemoriBarCount = 0;\r\n\r\n        //拍キャッシュの産出に使う変数\r\n        let beatSignature = init.beatSignature;\r\n\r\n        let beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        chordList.forEach((element, i) => {\r\n\r\n            const prevBeat = totalBeat;\r\n            // ブロック頭のメモリ\r\n            const prevMemoriCount = totalMemoriCount;\r\n            // ブロック頭の小節\r\n            const prevBarCount = totalBarCount;\r\n            const prevMinute = totalMinute;\r\n            const type = element.type;\r\n\r\n            switch (type) {\r\n                // 固定要素ブロック\r\n                // case 'fixed': {\r\n                //     const detail = element.detail as DetailFixed;\r\n                //     if (detail.fixed === 'End') {\r\n                //         prevBeat = totalBeat;\r\n                //     }\r\n                // } break;\r\n\r\n                // セクション要素ブロック\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                } break;\r\n\r\n                // コード要素ブロック\r\n                case 'chord': {\r\n                    pastSecond += curSecond;\r\n                    // curTotalBeat += curSustain;\r\n\r\n                    const detail = element.detail as DetailChord;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    totalMinute += minute;\r\n                    chordIndex++;\r\n\r\n                    curMemoriCount = detail.beatLen * beatProps.beatMemoriCount + minute;\r\n\r\n                    const prevBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    totalBeat += detail.beatLen;\r\n                    const curBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    if (prevBar !== curBar) {\r\n                        totalBarCount++\r\n                    }\r\n\r\n                    // 時間の計算\r\n                    curSecond = TheoryUtil.getSustainTime(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        bpm,\r\n                        beatSignature\r\n                    );\r\n\r\n                    // メモリの加算\r\n                    for (let j = 0; j < curMemoriCount; j++) {\r\n                        let rate: ScoreCache.MeasureRate = 16;\r\n                        if (beatRangeMemoriCount % beatProps.beatMemoriCount === 0) rate = 4;\r\n                        else if (beatRangeMemoriCount % (beatProps.beatMemoriCount / (beatProps.beatMemoriCount / 2)) === 0) rate = 8;\r\n\r\n                        const barMemoriCount = beatProps.barBeatCnt * beatProps.beatMemoriCount;\r\n\r\n                        let dispBarCount = -1;\r\n                        if (beatRangeMemoriCount % barMemoriCount === 0) {\r\n                            // 拍子セクションの合計メモリ数が小節のメモリ数で割り切れる場合、小節数を表示する\r\n                            totalMemoriBarCount++;\r\n                            dispBarCount = totalMemoriBarCount;\r\n                        }\r\n                        measureCacheList.push({ rate, barCount: dispBarCount });\r\n                        totalMemoriCount++;\r\n                        beatRangeMemoriCount++;\r\n                    }\r\n                } break;\r\n\r\n                // アルター要素ブロックする\r\n                case 'alter': {\r\n                    const detail = element.detail as DetailAlter;\r\n                    switch (detail.alterType) {\r\n                        // 音階が変わる\r\n                        case 'modulate': {\r\n                            scaleCacheList.push({\r\n                                keyIndex,\r\n                                scale,\r\n                                length: 1\r\n                            });\r\n                            switch (detail.modRel) {\r\n                                case 'domm': {\r\n                                    keyIndex = (keyIndex + 24 + 7 * detail.dommVal) % 12;\r\n                                } break;\r\n                                case 'key': {\r\n                                    keyIndex = (keyIndex + 12 + detail.keyAdj) % 12;\r\n                                } break;\r\n                                case 'parallel': {\r\n                                    keyIndex = (keyIndex + 12 + (scale === 'major' ? -1 : 1) * 3) % 12;\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                                case 'relative': {\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // テンポが変わる\r\n                        case 'tempo': {\r\n                            switch (detail.tempoRel) {\r\n                                case 'diff': {\r\n                                    bpm += detail.tempoDiff;\r\n                                } break;\r\n                                case 'rate': {\r\n                                    bpm = Math.floor(bpm * 1 * (detail.tempoRate / 100));\r\n                                } break;\r\n                                case 'abs': {\r\n                                    bpm = detail.tempoAbs;\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // 拍子が変わる\r\n                        case 'beat': {\r\n                            // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n                            beatCacheList.push({\r\n                                beatSignature,\r\n                                length: beatRangeMemoriCount\r\n                            });\r\n\r\n                            beatSignature = detail.beatSignature;\r\n                            // 拍を初期化する（拍変更後はいかなる場合も0から数える）\r\n                            totalBeat = 0;\r\n                            beatRangeMemoriCount = 0;\r\n\r\n                            beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n                        } break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n            // const pastSecond = 60000 / init.bpm * (prevBeat + prevMinute);\r\n            elementCacheList.push({\r\n                bar: prevBarCount,\r\n                surplusBeat: prevBeat % beatProps.barBeatCnt,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                scale,\r\n                bpm,\r\n                beatSignature,\r\n                sectionNo,\r\n                pastSecond,\r\n                chordIndex,\r\n                curTotalMemori: prevMemoriCount,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n        beatCacheList.push({\r\n            beatSignature,\r\n            length: beatRangeMemoriCount\r\n        });\r\n\r\n        store.scoreState.elementCacheList = elementCacheList;\r\n        store.scoreState.sectionCacheList = sectionCacheList;\r\n        store.scoreState.beatCacheList = beatCacheList;\r\n        store.scoreState.measureCacheList = measureCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }\r\n}\r\n\r\nexport default HarmonizeUtil;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport namespace SideFormStyles {\r\n\r\n    export const ___CSS_FORM = css`\r\n        display: inline-block;\r\n        /* width: 100px; */\r\n        height: 25px;\r\n        background-color: #bdbdbd;\r\n        border: 1px solid #000;\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        color: #303030;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        text-align: center;\r\n    `;\r\n\r\n    export const ___CSS_TITLE = css`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 26px;\r\n        /* background-color: #f0f0f0; */\r\n        background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n        border: 1px solid #222222;\r\n        font-size: 20px;\r\n        color: #ffffff;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        box-sizing: border-box;\r\n        /* border: 1px solid #c50000; */\r\n        text-align: center;\r\n    `;\r\n\r\n    export const createNumberForm = (value: number, isEnable: boolean,\r\n         onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n         min: number, max:number, step:number) => {\r\n\r\n        return (\r\n            <_NumberForm isEnable={isEnable}>\r\n                <input\r\n                    type=\"number\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"range\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </_NumberForm>\r\n        );\r\n    }\r\n\r\n    const _NumberForm = styled.div<{\r\n        isEnable: boolean;\r\n    }>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 55px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 5px;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n    `;\r\n}","import TheoryUtil, { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, DIATONIC_MINOR_SCALE_LIST, getChordRoot, getSymbolFromKey, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailAlter, DetailChord, DetailInit, DetailSection, Scale, ScoreData, TuneNotes, VoicingProps } from \"../store/score/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/score/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/score/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont, previewStart } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\nimport { Invalidate } from \"../store/invalidate\";\r\nimport BackingState from \"../store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport HarmonizeUtil from \"../../utils/harmonizeUtil\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        },\r\n\r\n        setInvalidate: (invalidate: Invalidate) => {\r\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        saveFile: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const options = {\r\n                types: [\r\n                    {\r\n                        accept: {\r\n                            'text/plain': ['.lcrs'],\r\n                        },\r\n                    },\r\n                ],\r\n            };\r\n            const fileHandle = state.fileHandle;\r\n            if (fileHandle != null) {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await fileHandle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    await writable.write(JSON.stringify(data));\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = fileHandle;\r\n                    this.score.setScoreState({ ...state });\r\n                    const file = await fileHandle.getFile();\r\n                    alert('saved successfully!');\r\n                })();\r\n            } else {\r\n                window.showSaveFilePicker(options).then((handle) => {\r\n                    (async () => {\r\n                        //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                        const writable = await handle.createWritable();\r\n                        //テキストデータの書き込み\r\n                        await writable.write(JSON.stringify(data));\r\n                        //ファイルを閉じる\r\n                        await writable.close();\r\n                        state.fileHandle = handle;\r\n                        this.score.setScoreState({ ...state });\r\n                    })();\r\n                }).catch(() => {\r\n                    console.log('キャンセルされました');\r\n                });\r\n            }\r\n        },\r\n\r\n        setPiano: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, harmony: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                state.distIndex = state.focusIndex;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n        moveDist: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.distIndex + sub].type !== 'fixed') {\r\n                state.distIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n            state.focusIndex = !isTail ? distHead : distTail;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        flashElement: (index: number) => {\r\n            // const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[index];\r\n\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n\r\n            // bodyRef.style.backgroundColor = '#ffef5f';\r\n            // setTimeout(() => {\r\n            //     bodyRef.style.backgroundColor = '';\r\n            // }, 10);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                if (isUp) {\r\n                    detail.root = { index: 0, isFlat: false };\r\n                    this.score.setScoreData(data);\r\n                    this.score.flashElement(state.focusIndex);\r\n                }\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            } else if (detail.root.index + sub === -1) {\r\n                detail.root = null;\r\n                detail.symbolKey = 'major';\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -2 && target <= 2) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[state.focusIndex];\r\n            if (cur.type === 'chord') {\r\n                const curChord = cur.detail as DetailChord;\r\n                if (curChord.minute.tail != 0) return;\r\n            }\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: state.initialBeat,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null,\r\n                        hasError: false\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        addAlterElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'alter', detail: {\r\n                    alterType: null,\r\n                    modRel: null,\r\n                    dommVal: 0,\r\n                    keyAdj: 0,\r\n                    tempoRel: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbs: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailAlter\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                const sectionNo = this.store.scoreState.elementCacheList[i].sectionNo;\r\n                // 先頭のセクション要素が含まれている場合削除しない\r\n                if (element.type === 'section' && sectionNo === 0) {\r\n                    return;\r\n                }\r\n            }\r\n            data.chordList.splice(distHead, (distTail - distHead) + 1);\r\n            this.score.setScoreData(data);\r\n            state.focusIndex = distHead - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // // reffer.style.width = '300px';\r\n            // wrapRef.style.opacity = '0';\r\n            // wrapRef.style.overflow = 'hidden';\r\n            // // wrapRef.style.padding = '0';\r\n            // wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '0';\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.opacity = '';\r\n            //     wrapRef.style.width = '';\r\n            //     wrapRef.style.overflow = '';\r\n            //     // wrapRef.style.padding = '';\r\n            //     const data = this.store.scoreData;\r\n            //     data.chordList.splice(state.focusIndex, 1);\r\n            //     this.score.setScoreData(data);\r\n            //     state.focusIndex--;\r\n            //     this.score.setScoreState(state);\r\n            //     // setTimeout(() => {\r\n            //     //     reffer.style.opacity = '';\r\n            //     //     reffer.style.width = '';\r\n            //     //     const data = this.store.scoreData;\r\n            //     //     data.chordList.splice(state.focusIndex, 1);\r\n            //     //     this.score.setScoreData(data);\r\n            //     // }, 200);\r\n            // }, 200);\r\n        },\r\n\r\n        copyElementList: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            const list: ChordElement[] = [];\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                list.push(JSON.parse(JSON.stringify(element)));\r\n            }\r\n            console.log(list.length);\r\n            state.copiedElementList = list;\r\n            state.cloneBacking = null;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        pasteElementList: () => {\r\n            const state = this.store.scoreState;\r\n\r\n            const data = this.store.scoreData;\r\n            const list = state.copiedElementList;\r\n            if (list == null) return;\r\n\r\n            console.log(list.length);\r\n            list.forEach((element, i) => {\r\n                data.chordList.splice(state.focusIndex + 1 + i, 0, element);\r\n            });\r\n            this.score.setScoreData(data);\r\n            state.focusIndex++;\r\n            state.distIndex = state.focusIndex + list.length - 1;\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            HarmonizeUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (scale: Scale, keyIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const scaleList = scale === 'major' ? DIATONIC_MAJOR_SCALE_LIST : DIATONIC_MINOR_SCALE_LIST;\r\n            const chord = scaleList[keyIndex];\r\n            detail.root = { ...chord.root };\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        cloneBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n        },\r\n\r\n        pastBacking: () => {\r\n            const state = this.store.scoreState;\r\n            if (state.cloneBacking != null) {\r\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n                const data = this.store.scoreData;\r\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public tune = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        allSelect: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.distIndex = notesList.length - 1;\r\n                this.tune.setState(state);\r\n            }\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        incrementCurPitch: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n            const state = this.store.melodyState;\r\n            const focusIndex = state.focusIndex;\r\n            if (focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n            const scaleIndexList = TheoryUtil.SCALE_INDEX;\r\n            const scaleIndexies = scaleIndexList.map(value => (init.keyIndex + value) % 12);\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            const cur = notesList[focusIndex];\r\n            const prevPitchIndex = cur.pitchIndex;\r\n            const interval = mode !== 'octave' ? 1 : 12;\r\n            let tempPitchIndex = cur.pitchIndex;\r\n\r\n            while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                if (mode !== 'scale' ||\r\n                    (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                ) {\r\n                    cur.pitchIndex = tempPitchIndex;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // 値が変わっていた場合のみ処理する\r\n            if (prevPitchIndex !== cur.pitchIndex) {\r\n                playSoundfont(cur.pitchIndex, this.store);\r\n                // 画面更新のためにインスタンスを複製する\r\n                this.tune.setNotesList(notesList.slice());\r\n\r\n                this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.distIndex = state.focusIndex;\r\n                    this.tune.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.distIndex = state.focusIndex;\r\n                    this.tune.setState(state);\r\n                }\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n            this.tune.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        moveDistFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.distIndex > 0 : state.distIndex < notesList.length - 1) {\r\n                state.distIndex += (isNext ? 1 : -1);\r\n                this.tune.setState(state);\r\n            }\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.tableMouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(state.focusIndex + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.distIndex = state.focusIndex;\r\n                this.tune.setState(state);\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [start, end] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const delNum = end - start + 1;\r\n            notesList.splice(start, delNum);\r\n            this.tune.setNotesList(notesList);\r\n            state.focusIndex = start - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const [start, end] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            state.focusIndex = (!isTail ? start : end);\r\n            state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n            this.tune.adjustScrollX();\r\n            this.tune.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            const distIndex = state.distIndex;\r\n            const focusIndex = state.focusIndex;\r\n\r\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\r\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n\r\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\r\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\r\n\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 移動可能かを判定\r\n            if (condition) {\r\n                for (let i = start; i <= end; i++) {\r\n                    const cur = notesList[i];\r\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                }\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        firstNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.distIndex = state.focusIndex;\r\n                this.tune.setState(state);\r\n                this.tune.adjustScrollX();\r\n                // this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.distIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            previewStart(this.store, this);\r\n        },\r\n\r\n        copyNotes: () => {\r\n\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const num = focusEnd - focusStart + 1;\r\n\r\n            const cloneNotesList: TuneNotes[] = [];\r\n            const base = notesList[focusStart].pos;\r\n            const baseUnit = getMinimumLenUnit(base);\r\n            for (let i = 0; i < num; i++) {\r\n                const notes = notesList[i + focusStart];\r\n                const unit = getMinimumLenUnit(notes.pos);\r\n                const useUnit = baseUnit > unit ? baseUnit : unit;\r\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\r\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\r\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\r\n                console.log(JSON.stringify(pos));\r\n                cloneNotesList.push({\r\n                    pitchIndex: notes.pitchIndex,\r\n                    pos,\r\n                    len: { ...notes.len }\r\n                });\r\n            }\r\n            state.cloneNotesList = cloneNotesList;\r\n            // notesList.splice(state.focusIndex, num);\r\n            // this.tune.setNotesList(notesList);\r\n            // state.focusIndex = focusStart - 1;\r\n            // state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n            // alert(JSON.stringify(state.cloneNotesList));\r\n        },\r\n\r\n        pasteNotes: () => {\r\n            // alert('pasteNotes');\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const pastList: TuneNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\r\n            pastList.forEach(notes => {\r\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\r\n            });\r\n            // ペーストするノーツの最後（右端）の要素\r\n            const pastLast = pastList[pastList.length - 1];\r\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList = notesList.concat(pastList);\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                data.notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                this.score.setScoreData(data);\r\n\r\n                state.focusIndex++;\r\n                state.distIndex = state.focusIndex + pastList.length - 1;\r\n                this.tune.setState(state);\r\n            }\r\n\r\n            // this.tune.adjustScrollX();\r\n        },\r\n\r\n        undo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`undo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const prev = history.undo();\r\n            if (prev != null) {\r\n                if (history.cur === 0) {\r\n                    console.log('first undo');\r\n                    history.list.unshift(JSON.stringify(data.notesList));\r\n                    history.cur = 1;\r\n                }\r\n                data.notesList = JSON.parse(prev);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.distIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`undo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        },\r\n\r\n        redo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`redo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const next = history.redo();\r\n            if (next != null) {\r\n                data.notesList = JSON.parse(next);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.distIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`redo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordBacking = detail.backing;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n\r\n            let pattern: BackingState.Pattern | null = null;\r\n            if (chordBacking.pattern != null) {\r\n                const patternProps = chordBacking.pattern;\r\n                const voicingStructs = BackingUtil.buildChannels(voicingTable);\r\n                const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\r\n                const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);;\r\n                pattern = {\r\n                    channelIndex: -1,\r\n                    lenIndex: 0,\r\n                    isUsePedal: false,\r\n                    layerIndex: 0,\r\n                    channels,\r\n                    layers\r\n                };\r\n            }\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    root: (detail.root as DegreeProps),\r\n                    on: (detail.on),\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    symbolKey: detail.symbolKey,\r\n                    init: { ...cache }\r\n                },\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false,\r\n                hasError: chordBacking.hasError\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setState: (backingState: BackingState.Editor) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingState.Layer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingState.Layer;\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const isExist = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = isExist != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        // エディタで設定したバッキング情報を譜面に反映\r\n        mappingEditorToScore: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n\r\n            detail.backing = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                hasError: editor.hasError\r\n            };\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        // getChannels: (table: boolean[][]): ChannelParam[] => {\r\n        //     const channels: ChannelParam[] = [];\r\n        //     for (let i = 0; i < table.length; i++) {\r\n        //         for (let j = 0; j < table[i].length; j++) {\r\n        //             if (table[i][j]) {\r\n        //                 channels.push({ octave: i, structIndex: j });\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     if (channels.length === 0) {\r\n        //         channels.push({ octave: -1, structIndex: 0 });\r\n        //     }\r\n        //     return channels;\r\n        // },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const newLen: BackingState.NoteDiv = { rate: lenList[pattern.lenIndex].rate, div3: 0, isDot: false };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.noteDivList = lenList.slice();\r\n\r\n            // テーブル追加\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n\r\n            // ベロシティ追加\r\n            layer.velocityList.splice(pattern.lenIndex + 1, 0, 5);\r\n\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            layer.noteDivList = layer.noteDivList.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.isDot = !cur.isDot;\r\n            this.backing.setState(state);\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: BackingState.NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            layer.table = layer.table.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        incrementVel: (value: number) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const after = layer.velocityList[pattern.lenIndex] + value;\r\n            if (after >= 1 && after <= 10) {\r\n                layer.velocityList[pattern.lenIndex] = after;\r\n                this.backing.setState(state);\r\n            }\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            // 2つ以上要素がないと消せない\r\n            if (layer.noteDivList.length >= 2) {\r\n                layer.noteDivList.splice(pattern.lenIndex, 1);\r\n                layer.table.forEach((column) => {\r\n                    column.splice(pattern.lenIndex, 1);\r\n                });\r\n                layer.velocityList.splice(pattern.lenIndex, 1);\r\n                // for(let i = 0; i < pattern.channels.length; i ++) {\r\n                //     layer.table[i].splice(pattern.lenIndex, 1);\r\n                // }\r\n                if (pattern.lenIndex > 0) {\r\n                    pattern.lenIndex--;\r\n                }\r\n                this.backing.setState(state);\r\n            }\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n        changeLayer: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        testBacking: () => {\r\n            const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const reserveTasks = this.store.reserveTasks;\r\n            const chordInfo = editor.chordInfo;\r\n\r\n            const rootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n            const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\r\n            const chordTime = 60 / init.bpm * len;\r\n            const backing: ChordBacking = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                hasError: false\r\n            };\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n            BackingUtil.playBacking(this.store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                editor.isPreview = false;\r\n                this.backing.setState(editor);\r\n            }, chordTime * 1000));\r\n\r\n            editor.isPreview = true;\r\n            this.backing.setState(editor);\r\n        },\r\n\r\n        updateErrorState: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const voicingList = BackingUtil.getVoicingListFromTable(editor.voicingTable);\r\n            editor.hasError = BackingUtil.checkError(editor.chordInfo, voicingList, editor.pattern);\r\n            this.backing.setState(editor);\r\n        }\r\n    }\r\n}","\r\n\r\nclass DataHistory {\r\n\r\n    cur: number;\r\n    list: string[];\r\n\r\n    constructor() {\r\n        this.cur = -1;\r\n        this.list = [];\r\n    }\r\n\r\n\r\n    add(data: string) {\r\n        console.log(`add start ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n        // if (this.list[this.cur] === data) {\r\n        //     console.log('same...');\r\n        //     return;\r\n        // }\r\n        if (this.cur > -1) {\r\n            this.list.splice(0, this.cur + 1);\r\n            this.cur = -1;\r\n            console.log('restert');\r\n        }\r\n        this.list.unshift(data);\r\n        console.log(`add end ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n    }\r\n\r\n    undo(): null | string {\r\n        let ret = null;\r\n        if (this.cur < this.list.length - 1) {\r\n            this.cur++;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    redo(): null | string {\r\n        let ret = null;\r\n        if (this.cur > 0) {\r\n            this.cur--;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./score/scoreData\"\r\nimport { ScoreState } from \"./score/scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./score/melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { Invalidate } from \"./invalidate\"\r\nimport DataHistory from \"./state/dataHistory\"\r\nimport BackingState from \"./score/backing/backingState\"\r\n\r\n\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState.Editor;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n\r\n    invalidate: Invalidate;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        dialogMode: 'none'\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        fileHandle: null,\r\n        isTune: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        scaleCacheList: [],\r\n        tempoCacheList: [],\r\n        beatCacheList: [],\r\n        measureCacheList: [],\r\n        keySwitch: {\r\n            distMode: false,\r\n            sustainMode: false,\r\n            symbolMode: false,\r\n            control: false,\r\n            minHeadMode: false,\r\n            minTailMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneBacking: null,\r\n        copiedElementList: null,\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 4,\r\n        beatWidth: 120,\r\n        tableMouse: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        timelineMouse: {\r\n            pos: -1,\r\n            isPut: false,\r\n            lock: -1,\r\n            width: 0,\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 5\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false,\r\n            control: false,\r\n        },\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneNotesList: [],\r\n\r\n        dataHistory: new DataHistory()\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        sampler: getDefaultSampler(),\r\n        harmony: null,\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: [],\r\n    invalidate: {\r\n        harmoniizeInvalidate: {},\r\n        harmonize: null,\r\n        melody: null\r\n    },\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note: {\r\n        prevElement: string;\r\n        nextElement: string;\r\n        prevSection: string;\r\n        nextSection: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        distMode: string;\r\n        sustainMode: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        symbolMode: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = (): KeyConfig => {\r\n    return {\r\n        note: {\r\n            prevElement: 'ArrowLeft',\r\n            nextElement: 'ArrowRight',\r\n            prevSection: 'ArrowUp',\r\n            nextSection: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'm',\r\n            deleteCur: 'Delete',\r\n            distMode: 'Shift',\r\n            sustainMode: 'f',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n            symbolMode: 'c',\r\n        }\r\n    };\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SysModalDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const mode = store.systemState.dialogMode;\r\n    const isDisplay = mode !== 'none';\r\n\r\n    return (\r\n        <_Blind isDisplay={isDisplay}>\r\n            <_Frame>\r\n\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default SysModalDialog;\r\n\r\nconst _Blind = styled.div<{\r\n    isDisplay: boolean;\r\n}>`\r\n    display: ${props => props.isDisplay ? 'block' : 'none'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000000d8;\r\n    z-index: 10;\r\n`;\r\nconst _Frame = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 500px;\r\n    height: 400px;\r\n    background-color: #464646cc;\r\n    border: 1px solid #dadada;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../redux/dispatcher/dispatcher\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData, VoicingProps } from \"../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../redux/store/store\";\r\nimport { getDefaultBacking } from \"../../../utils/instrumentsUtil\";\r\nimport { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SymbolKey } from \"../../../utils/theoryUtils\";\r\n\r\n\r\nclass ScoreBuilder {\r\n\r\n    private scoreData: ScoreData\r\n\r\n    private curIndex: number;\r\n\r\n    constructor(init: DetailInit) {\r\n        this.scoreData = {\r\n            chordList: [\r\n                { type: 'init', detail: init },\r\n                { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n            ],\r\n            notesList: []\r\n        };\r\n\r\n        this.curIndex = 3;\r\n    }\r\n\r\n    public addChord = (beatLen: number, root: DegreeProps, symbolKey: SymbolKey) => {\r\n\r\n        const symbol = getSymbolFromKey(symbolKey);\r\n        const backing: ChordBacking = symbol.attr == undefined ? { voicingList: [], pattern: null, hasError: false } : getDefaultBacking(symbol.attr);\r\n        this.scoreData.chordList.splice(this.curIndex, 0, {\r\n            type: 'chord', detail: {\r\n                beatLen, minute: { head: 0, tail: 0 }, root, on: null, symbolKey,\r\n                backing\r\n            } as DetailChord\r\n        });\r\n        this.curIndex++;\r\n    }\r\n\r\n    public addChordDiatonic = (beatLen: number, scaleIndex: number) => {\r\n        const chord = DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        this.addChord(beatLen, chord.root, chord.symbolKey);\r\n    }\r\n\r\n    public getScoreData = () => { return this.scoreData; }\r\n}\r\n\r\nexport default ScoreBuilder;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/score/scoreData\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\nimport { KEY12_MAJOR_SCALE_LIST } from \"../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\n//日付から文字列に変換する関数\r\nconst getStringFromDate = (date: Date) => {\r\n\r\n    const year_str = date.getFullYear().toString();\r\n    //月だけ+1すること\r\n    const month_str = (1 + date.getMonth()).toString();\r\n    const day_str = date.getDate().toString();\r\n    const hour_str = date.getHours().toString();\r\n    const minute_str = date.getMinutes().toString();\r\n    const second_str = date.getSeconds().toString();\r\n\r\n    let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n    format_str = format_str.replace(/YYYY/g, year_str);\r\n    format_str = format_str.replace(/MM/g, month_str);\r\n    format_str = format_str.replace(/DD/g, day_str);\r\n    format_str = format_str.replace(/hh/g, hour_str);\r\n    format_str = format_str.replace(/mm/g, minute_str);\r\n    format_str = format_str.replace(/ss/g, second_str);\r\n\r\n    return format_str;\r\n};\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [source, setSource] = useState<string>('');\r\n    const [file, setFile] = useState<null | File>(null);\r\n\r\n    const fileHandle = store.scoreState.fileHandle;\r\n    const data = store.scoreData;\r\n    const tabIndex = store.systemState.scoreTabIndex;\r\n\r\n    const [fileInfo, scoreInfo]: [{\r\n        name: string;\r\n        size: string;\r\n        modified: string;\r\n    }, {\r\n        key: string;\r\n        tempo: string;\r\n        rate: string;\r\n        section: string;\r\n        chord: string;\r\n        bar: string;\r\n        time: string;\r\n        notes: string;\r\n    }] = useMemo(() => {\r\n        let name = '-';\r\n        let size = '-';\r\n        let modified = '-';\r\n        let key = '-';\r\n        let tempo = '-';\r\n        let rate = '-';\r\n        let section = '-';\r\n        let chord = '-';\r\n        let bar = '-';\r\n        let time = '-';\r\n        let notes = '-';\r\n        if (tabIndex === 0) {\r\n            if (file != null) {\r\n                name = file.name;\r\n                size = `${file.size.toString()} byte`;\r\n                modified = getStringFromDate(new Date(file.lastModified));\r\n            }\r\n            if (data.chordList.length > 0) {\r\n                const init = data.chordList[0].detail as DetailInit;\r\n                key = `${KEY12_MAJOR_SCALE_LIST[init.keyIndex]} ${init.scale}`;\r\n                tempo = init.bpm.toString();\r\n                rate = init.beatSignature;\r\n                let sectionNum = 0;\r\n                let chordNum = 0;\r\n                data.chordList.forEach(chord => {\r\n                    switch (chord.type) {\r\n                        case 'section': sectionNum++; break;\r\n                        case 'chord': chordNum++; break;\r\n                    }\r\n                });\r\n                section = sectionNum.toString();\r\n                chord = chordNum.toString();\r\n\r\n                const cacheList = store.scoreState.elementCacheList;\r\n                if (cacheList.length > 0) {\r\n                    const last = cacheList[cacheList.length - 1];\r\n                    time = `${last.pastSecond / 1000}s`;\r\n                    bar = `${last.bar} (${last.surplusBeat})`;\r\n                }\r\n                notes = data.notesList.length.toString();\r\n            }\r\n        }\r\n        return [{\r\n            name, size, modified\r\n        }, {\r\n            key, tempo, rate, section, chord, bar, time, notes\r\n        }]\r\n    }, [tabIndex, data, file]);\r\n\r\n    useEffect(() => {\r\n        if (tabIndex === 0 && fileHandle != null) {\r\n            fileHandle.getFile().then(file => {\r\n                setFile(file);\r\n            });\r\n        }\r\n    }, [tabIndex]);\r\n\r\n    const setData = ((data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Left>\r\n                <_Link onClick={() => {\r\n\r\n                    const data: ScoreData = {\r\n                        chordList: [\r\n                            { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' } as DetailInit },\r\n                            { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                            { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                            {\r\n                                type: 'chord', detail: {\r\n                                    beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                    backing: {\r\n                                        voicingList: [],\r\n                                        pattern: null,\r\n                                        hasError: false\r\n                                    }\r\n                                } as DetailChord\r\n                            },\r\n                            { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                        ],\r\n                        notesList: []\r\n                    };\r\n                    // setSource(JSON.stringify(data));\r\n                    setData(data);\r\n                }} >Create an empty score.</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅰ→Ⅴ→Ⅵ→Ⅲm→Ⅳ→Ⅰ→Ⅱm→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅵm→Ⅳ→Ⅴ→Ⅰ→Ⅵm→Ⅳ→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(4, 3);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChordDiatonic(4, 2);\r\n                    builder.addChordDiatonic(4, 5);\r\n                    builder.addChordDiatonic(4, 1);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChord(4, { index: 0, isFlat: false }, 'suspend4th');\r\n                    builder.addChordDiatonic(4, 0);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅳ→Ⅴ→Ⅲm→Ⅵm→Ⅱm→Ⅴ→Ⅰsus4→Ⅰ</_Link>\r\n            </_Left>\r\n            <_Right>\r\n                {/* <_Source value={source} onChange={e => setSource(e.target.value)} /> */}\r\n\r\n                <_InfoDiv>\r\n                    <_FileInfoDiv isEnable={fileHandle != null}>\r\n                        <_TitleLabel>FILE</_TitleLabel>\r\n                        <_Recored>\r\n                            <_ItemnLabel>name</_ItemnLabel>\r\n                            <_ItemnValue>{fileInfo.name}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>size</_ItemnLabel>\r\n                            <_ItemnValue>{fileInfo.size}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>modified</_ItemnLabel>\r\n                            <_ItemnValue>{fileInfo.modified}</_ItemnValue>\r\n                        </_Recored>\r\n                    </_FileInfoDiv>\r\n                    <_ScoreInfoDiv isEnable={data.chordList.length > 0}>\r\n                        <_TitleLabel>SCORE</_TitleLabel>\r\n                        <_Recored>\r\n                            <_ItemnLabel>key</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.key}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>tempo</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.tempo}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>rate</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.rate}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>section</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.section}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>chord</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.chord}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>bar</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.bar}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>time</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.time}</_ItemnValue>\r\n                        </_Recored>\r\n                        <_Recored>\r\n                            <_ItemnLabel>notes</_ItemnLabel>\r\n                            <_ItemnValue>{scoreInfo.notes}</_ItemnValue>\r\n                        </_Recored>\r\n                    </_ScoreInfoDiv>\r\n                </_InfoDiv>\r\n                <_ButtonsDiv>\r\n                    {/* <_Button onClick={() => {\r\n                        setSource(JSON.stringify(store.scoreData));\r\n                    }}>Reload</_Button>\r\n                    <_Button onClick={() => {\r\n                        const data = JSON.parse(source);\r\n                        dispatcher.score.setScoreData(data);\r\n                        store.scoreState.focusIndex = 2;\r\n                        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n                        dispatcher.score.setScoreState({ ...store.scoreState });\r\n\r\n                        dispatcher.score.setScoreTabIndex(1);\r\n                    }}>Apply</_Button> */}\r\n\r\n                    <_Button onClick={() => {\r\n\r\n                        const options = {\r\n                            types: [\r\n                                {\r\n                                    accept: {\r\n                                        'text/plain': ['.lcrs'],\r\n                                    },\r\n                                },\r\n                            ],\r\n                        };\r\n                        if (fileHandle != null) {\r\n\r\n                            (async () => {\r\n                                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                                const writable = await fileHandle.createWritable();\r\n                                //テキストデータの書き込み\r\n                                await writable.write(JSON.stringify(data));\r\n                                //ファイルを閉じる\r\n                                await writable.close();\r\n                                store.scoreState.fileHandle = fileHandle;\r\n                                dispatcher.score.setScoreState({ ...store.scoreState });\r\n                                const file = await fileHandle.getFile();\r\n                                setFile(file);\r\n                                alert('saved successfully!');\r\n                            })();\r\n                        } else {\r\n                            window.showSaveFilePicker(options).then((handle) => {\r\n                                (async () => {\r\n                                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                                    const writable = await handle.createWritable();\r\n                                    //テキストデータの書き込み\r\n                                    await writable.write(JSON.stringify(data));\r\n                                    //ファイルを閉じる\r\n                                    await writable.close();\r\n                                    store.scoreState.fileHandle = handle;\r\n                                    dispatcher.score.setScoreState({ ...store.scoreState });\r\n\r\n                                    const file = await handle.getFile();\r\n                                    setFile(file);\r\n                                })();\r\n                            }).catch(() => {\r\n                                console.log('キャンセルされました');\r\n                            });\r\n                        }\r\n                    }}>Save</_Button>\r\n                    <_Button onClick={() => {\r\n                        (async () => {\r\n                            const [fileHandle] = await window.showOpenFilePicker();\r\n                            const file = await fileHandle.getFile();\r\n                            const fileContents = await file.text();\r\n                            // console.log(fileContents);\r\n                            store.scoreState.fileHandle = fileHandle;\r\n                            setFile(file);\r\n                            // store.scoreState.focusIndex = 2;\r\n                            // store.scoreState.distIndex = store.scoreState.focusIndex;\r\n                            // dispatcher.score.setScoreState({ ...store.scoreState });\r\n                            // // dispatcher.score.setScoreTabIndex(1);\r\n                            // dispatcher.score.setScoreData();\r\n\r\n                            setData(JSON.parse(fileContents));\r\n                        })();\r\n                    }}>Load</_Button>\r\n                    <_Button onClick={() => {\r\n                        store.scoreState.fileHandle = null;\r\n                        dispatcher.score.setScoreState({ ...store.scoreState });\r\n                        // キャッシュの更新\r\n                        store.scoreData = data;\r\n                        HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n                        setFile(null);\r\n                    }}>Disconnect</_Button>\r\n                </_ButtonsDiv>\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #888999;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\n// const _Source = styled.textarea`\r\n//     display: inline-block;\r\n//     width: calc(100% - 8px);\r\n//     margin: 4px 0 0 4px;\r\n//     height: calc(100% - 44px);\r\n//     /* background-color: #7e7e7e; */\r\n//     text-align: left;\r\n//     font-size: 20px;\r\n//     resize: none;\r\n//     box-sizing: border-box;\r\n//     color: #060053;\r\n// `;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    height: calc(100% - 48px);\r\n    /* background-color: #e98c8c; */\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst FILE_INFO_HEIGHT = 160;\r\n\r\nconst _FileInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${FILE_INFO_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #9da5af;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ScoreInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${FILE_INFO_HEIGHT + 16}px);\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #9da5af;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #ad0000;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c5;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\n\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #5f5f5f;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    width: 160px;\r\n    background-color: #8098a3;\r\n    border: 1px solid #000744;\r\n    color: #04274e;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    &:hover {\r\n        background-color: #98bfc2;\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport { getSymbolDerives as getSymbolDerives, getSymbolFromKey, SymbolKey, SymbolParams, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = getSymbolFromKey(detail.symbolKey) as SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: SymbolKey[] = [];\r\n        const parentLine: SymbolKey[] = [];\r\n        const childrenLine: SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = getSymbolDerives(baseSymbol.key);\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = getSymbolDerives(curSymbol.key);\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\nimport { DetailChord } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        // 見た目上１から数えるため\r\n        bar = cache.bar + 1;\r\n    }\r\n    // 小節変更タイミングで、余りの拍がある（頭でない）場合エラー\r\n    const isError = bar !== -1 && cache.surplusBeat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n    }\r\n\r\n    let minuteStr = '';\r\n    if(cache.minute !== 0) {\r\n        switch(cache.minute) {\r\n            case 1: minuteStr = '→/16'; break;\r\n            case 2: minuteStr = '→/8'; break;\r\n            case -1: minuteStr = '←/16'; break;\r\n            case -2: minuteStr = '←/8'; break;\r\n        }\r\n    }\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.surplusBeat === 0 ? <>&nbsp;</> : cache.surplusBeat}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : minuteStr}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\nconst ElementDetailAlter = (props: {\r\n    detail: DetailAlter;\r\n}) => {\r\n\r\n    const type = props.detail.alterType;\r\n\r\n    const getDetailInfo = (): string => {\r\n        let ret = '-';\r\n        if (type != null) {\r\n            switch (type) {\r\n                case 'modulate': {\r\n\r\n                    const modRel = props.detail.modRel;\r\n                    if (modRel != null) {\r\n                        switch (modRel) {\r\n                            case 'domm': {\r\n                                const val = props.detail.dommVal;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                            case 'relative':\r\n                            case 'parallel': {\r\n                                ret = modRel;\r\n                            } break;\r\n                            case 'key': {\r\n                                const val = props.detail.keyAdj;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                        }\r\n                    }\r\n                } break;\r\n                case 'tempo' : {\r\n                    const tempoRel = props.detail.tempoRel;\r\n                    switch(tempoRel) {\r\n                        case 'diff': {\r\n                            const val = props.detail.tempoDiff;\r\n                            const sign = val > 0 ? '+' : ''; \r\n                            ret = `${tempoRel}: ${sign}${val}`;\r\n                        } break;\r\n                        case 'rate': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoRate}%`;\r\n                        } break;\r\n                        case 'abs': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoAbs}`;\r\n                        } break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                {type == null ? 'alter' : type}\r\n            </_Type>\r\n            <_Detail>\r\n                {getDetailInfo()}\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/score/scoreData\";\r\nimport { NoteKeySwitch } from \"../../../../../../redux/store/score/scoreState\";\r\nimport { DIATONIC_MAJOR_SCALE_DEGREE_NAMES, DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES, getChordRoot, getDegreeRoot, getSymbolFromKey, ScaleRelation } from \"../../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 2 | 1;\r\n\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    keySwitch: NoteKeySwitch;\r\n    isCurrent: boolean;\r\n    keyIndex: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const minute = props.detail.minute;\r\n    const keySwitch = props.keySwitch;\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() => {\r\n\r\n        // const keySwitch = store.scoreState.keySwitch;\r\n        const chordBacking = props.detail.backing;\r\n        let degreeRoot: null | string = null;\r\n        let degreeOn: null | string = null;\r\n        let chordRoot: null | string = null;\r\n        let chordOn: null | string = null;\r\n\r\n        if (props.detail.root != null) {\r\n            degreeRoot = getDegreeRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            });\r\n            chordRoot = getChordRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, props.keyIndex);\r\n\r\n            if (props.detail.on != null) {\r\n                degreeOn = getDegreeRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.on.isFlat\r\n                });\r\n                chordOn = getChordRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.root.isFlat\r\n                }, props.keyIndex);\r\n            }\r\n        }\r\n\r\n        const diatonicList = cache.scale === 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES : DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\r\n        const isDiatonic = diatonicList.includes(degreeRoot + symbolName);\r\n\r\n        return <_Wrap>\r\n            <_Degree\r\n                isSwitch={keySwitch.sustainMode && props.isCurrent}\r\n                scaleRelation={degreeRoot != null && isDiatonic ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={keySwitch.sustainMode && props.isCurrent}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n            <_Backing>\r\n                {chordBacking.hasError ? <_Error /> : <>\r\n                    {chordBacking.voicingList.length === 0 ? '' : <_Voicing />}\r\n                    {chordBacking.voicingList.length === 0 ? '' : chordBacking.pattern == null ? '' : <_Pattern />}\r\n                </>}\r\n            </_Backing>\r\n        </_Wrap>\r\n    }\r\n        , [\r\n            cache.scale,\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            keySwitch.sustainMode,\r\n            props.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail,\r\n            props.detail.backing\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 18px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #422e3099;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 2 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 1 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Backing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 6px;\r\n    /* background-color: #00a048; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Error = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background-color: #af3838;\r\n`;\r\n\r\nconst _Voicing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(50% - 2px);\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px 0 0 4px;\r\n    background-color: #7c89a1;\r\n`;\r\n\r\nconst _Pattern = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(50% - 2px);\r\n    margin: 2px 0 0 4px;\r\n    height: 4px;\r\n    border-radius: 0 4px 4px 0;\r\n    background-color: #a8c7a8;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    // const jsxList: JSX.Element[] = [];\r\n    // jsxList.push(<_Border key={0} />);\r\n    // jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    const value = props.detail.fixed;\r\n    return (\r\n        <_Wrap isStart={value === 'Start'}>\r\n            {/* {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()} */}\r\n            <_Label>{value}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div<{\r\n    isStart: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    border-left: 1px solid #00000083;\r\n    border-top: 1px solid #00000083;\r\n    border-right: 1px solid #00000083;\r\n    /* border: 1px solid #00000083; */\r\n    box-sizing: border-box;\r\n    background-color: #9b9b9b1f;\r\n    ${props => props.isStart ? css`\r\n        border-radius: 0 35px 0 0;\r\n    ` : css`\r\n        border-radius: 35px 0 0 0;\r\n    `}\r\n`;\r\n\r\n// const _Border = styled.div`\r\n//     display: inline-block;\r\n//     width: 10px;\r\n//     height: 100%;\r\n//     background-color: #b4b4b4;\r\n//     vertical-align: middle;\r\n// `;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    /* width: calc(100% - 10px); */\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #960000b0;\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    /* vertical-align: middle; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/score/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST } from \"../../../../../../utils/theoryUtils\";\r\n\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.beatSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst ElementDetailSection = (props: {\r\n    index: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>{curSection.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\nimport { KEY12_SHARP_LIST } from \"../../../../../../utils/theoryUtils\";\r\n\r\nconst CalcAlter = (props: {\r\n    detail: DetailAlter;\r\n    prevCache: ScoreCache.Element;\r\n    curCache: ScoreCache.Element;\r\n}) => {\r\n\r\n    const getType = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate': return 'Key';\r\n            case 'tempo': return 'Tempo';\r\n            case 'beat': return 'Beat';\r\n        }\r\n    }\r\n    const getDetail = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate':{\r\n                const prevKey = KEY12_SHARP_LIST[props.prevCache.keyIndex] + (props.prevCache.scale === 'major' ? '' : 'm');\r\n                const curKey = KEY12_SHARP_LIST[props.curCache.keyIndex] + (props.curCache.scale === 'major' ? '' : 'm');\r\n                return `${prevKey}→${curKey}`;\r\n            }\r\n            case 'tempo':{\r\n                const prevTempo = props.prevCache.bpm;\r\n                const curTempo = props.curCache.bpm;\r\n                return `${prevTempo}→${curTempo}`;\r\n            }\r\n            case 'beat':{\r\n                const prevBeat = props.prevCache.beatSignature;\r\n                const curBeat = props.curCache.beatSignature;\r\n                return `${prevBeat}→${curBeat}`;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Type>{getType()}</_Type>\r\n            <_Detail>{getDetail()}</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { ElementType, useContext, useEffect, useRef } from \"react\";\r\nimport { CgDetailsLess } from \"react-icons/cg\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TypeElement } from \"typescript\";\r\nimport { DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/score/scoreData\";\r\nimport { KEY12_SHARP_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SymbolEditor from \"../input/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailAlter from \"./form/elementDetailAlter\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcAlter from \"./calc/calcAlter\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = store.scoreState;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        dispatcher.score.setScoreState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    // if (props.index > state.elementCacheList.length - 1) {\r\n    //     return <></>;\r\n    // }\r\n\r\n    const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n    const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n    const isFocus = props.index >= distHead && props.index <= distTail;\r\n    const isRange = isFocus && distHead != distTail;\r\n    const isSameSection = isFocus || state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n    const isInactive = !(isSameSection || chordList[state.focusIndex].type === 'init');\r\n    return (\r\n        <_Wrap\r\n            ref={wrapRef}\r\n            isSelectable={element.type !== 'fixed'}\r\n            isActive={isFocus}\r\n            isInactive={isInactive}\r\n            isAdditional={['chord', 'section', 'alter', 'init'].includes(element.type)}\r\n        >\r\n            <_Head>\r\n                {element.type !== 'chord' ? <></> : (\r\n                    <_CurKey>{KEY12_SHARP_LIST[cache.keyIndex] + (cache.scale === 'major' ? '' : 'm')}</_CurKey>\r\n                )}\r\n            </_Head>\r\n\r\n            {/* 要素の入力フォーム */}\r\n            {['init', 'chord', 'section', 'alter'].includes(element.type) ? (\r\n                <_Form\r\n                    ref={bodyRef}\r\n                    isActive={isFocus}\r\n                    isRange={isRange}\r\n                    isInactive={isInactive}\r\n                    type={element.type}\r\n                    isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                    onClick={() => {\r\n                        if (element.type === 'fixed') {\r\n                            return;\r\n                        }\r\n                        if (!state.keySwitch.distMode) {\r\n                            state.focusIndex = props.index;\r\n                            state.distIndex = state.focusIndex;\r\n                        } else {\r\n                            state.distIndex = props.index;\r\n                        }\r\n                        dispatcher.score.setScoreState(state);\r\n                    }}\r\n                >{(() => {\r\n                    switch (element.type) {\r\n                        case 'init': {\r\n                            const detail = element.detail as DetailInit;\r\n                            return (<ElementDetailInit detail={detail} />);\r\n                        }\r\n                        case 'section': {\r\n                            const detail = element.detail as DetailSection;\r\n                            return (<ElementDetailSection index={props.index} />);\r\n                        }\r\n                        case 'chord': {\r\n                            const detail = element.detail as DetailChord;\r\n                            return (<ElementDetailChord\r\n                                detail={detail}\r\n                                isCurrent={isFocus}\r\n                                keyIndex={cache.keyIndex}\r\n                                keySwitch={state.keySwitch}\r\n                            />);\r\n                        }\r\n                        case 'alter': {\r\n                            const detail = element.detail as DetailAlter;\r\n                            return (<ElementDetailAlter detail={detail} />);\r\n                        }\r\n                    }\r\n                })()}\r\n                </_Form>\r\n            ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n            {/* 入力フォーム下部の計算によって出力される情報 */}\r\n            {\r\n                element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                    element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                        element.type === 'alter' ? (\r\n                            <CalcAlter\r\n                                detail={element.detail as DetailAlter}\r\n                                prevCache={state.elementCacheList[props.index - 1]}\r\n                                curCache={cache}\r\n                            />\r\n                        ) :\r\n                            <></>\r\n            }\r\n            <>{!(isCurrent && chordDetail != null && chordDetail.root != null && store.scoreState.keySwitch.symbolMode) ? '' :\r\n                <SymbolEditor />\r\n            }</>\r\n            {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                <_Operations>\r\n                    <_OperationItem>-</_OperationItem>\r\n                    <_OperationItem onClick={() => dispatcher.score.addChordElement()}>+</_OperationItem>\r\n                </_Operations>\r\n            )}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isRange: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    border: solid 1px #00000049;\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #df8484;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #44b168;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'alter' ? '' : css`\r\n        border: solid 1px #604fc0;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 4px;\r\n    ${props => props.isInactive ? '' : css`\r\n        background-color: #ebf1e2;\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4badd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n    ${props => !props.isRange ? '' : css`\r\n        background-color: #80d4e2;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isAdditional: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isAdditional ? '' : css`\r\n        /* background-color: #e8ff9549; */\r\n        background: linear-gradient(to bottom, transparent,transparent,transparent, #ffffff9e);\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #e8f3ab9b;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\nimport SymbolEditor from \"./input/symbolEditor\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const num = store.scoreData.chordList.length;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (store.scoreState.elementCacheList.length === num) {\r\n        for (let i = 0; i < num; i++) {\r\n            list.push(\r\n                <ScoreElement key={i} index={i} />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Frame> */}\r\n            <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note>\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #d8d8d8;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { stat } from \"fs\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { backingEditorInput } from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    // プレビュー再生時\r\n    if (state.isPreview) {\r\n        switch (e.key) {\r\n            case ' ': {\r\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n        return;\r\n    } else {\r\n        if (store.scoreState.hideMenu === 'none') {\r\n            if (isElement) {\r\n                if (keySwitch.control) {\r\n                    switch (e.key) {\r\n                        case 'c': {\r\n                            const element = data.chordList[state.focusIndex];\r\n                            if (element.type === \"chord\") {\r\n                                const detail = element.detail as DetailChord;\r\n                                if (detail.root != null) {\r\n                                    dispatcher.score.cloneBacking();\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'x': {\r\n                            dispatcher.score.copyElementList();\r\n                        }\r\n                            break;\r\n                        case 'v': {\r\n                            if (state.copiedElementList != null) {\r\n                                dispatcher.score.pasteElementList();\r\n                            } else if (state.cloneBacking != null) {\r\n\r\n                                const element = data.chordList[state.focusIndex];\r\n                                if (element.type === \"chord\") {\r\n                                    const detail = element.detail as DetailChord;\r\n                                    if (detail.root != null) {\r\n                                        dispatcher.score.pastBacking();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 's': {\r\n                            dispatcher.score.saveFile();\r\n                        }\r\n                        break;\r\n                    }\r\n                } else if (keySwitch.distMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.moveDist(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.moveDist(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.sustainMode) {\r\n                    switch (e.key) {\r\n                        case config.decRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(false);\r\n                        }\r\n                            break;\r\n                        case config.incRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(true);\r\n                        }\r\n                            break;\r\n                        case config.decBeat: {\r\n                            dispatcher.score.incrementBeatLen(false);\r\n                        }\r\n                            break;\r\n                        case config.incBeat: {\r\n                            dispatcher.score.incrementBeatLen(true);\r\n                        }\r\n                            break;\r\n                        // case 'A': dispatcher.score.incrementMinuteValRelation(false, -0.25); break;\r\n                        // case 'S': dispatcher.score.incrementMinuteValRelation(false, 0.25); break;\r\n                        // case 'D': dispatcher.score.incrementMinuteValRelation(true, -0.25); break;\r\n                        // case 'F': dispatcher.score.incrementMinuteValRelation(true, 0.25); break;\r\n                    }\r\n                } else if (keySwitch.minHeadMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, 1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, -1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minTailMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, -1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, 1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.symbolMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.symbol.toNext(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.symbol.toNext(true);\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.symbol.toBase();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.symbol.toDerive();\r\n                        }\r\n                            break;\r\n                    }\r\n                } else {\r\n                    NoteBasicInput(e, store, dispatcher);\r\n                }\r\n            }\r\n        } else if (store.scoreState.hideMenu === 'backing') {\r\n            backingEditorInput(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const state = store.scoreState;\r\n    if (!state.isPreview) {\r\n        // if (state.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case 'Control': {\r\n                keySwitch.control = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.distMode: {\r\n                if (!keySwitch.control) {\r\n                    keySwitch.distMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.sustainMode: {\r\n                if (!(keySwitch.control || keySwitch.distMode)) {\r\n                    keySwitch.sustainMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.symbolMode: {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode)) {\r\n                    keySwitch.symbolMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'd': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.symbolMode)) {\r\n                    keySwitch.minHeadMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'g': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.symbolMode || keySwitch.minHeadMode)) {\r\n                    keySwitch.minTailMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n        }\r\n        // }\r\n    }\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                }\r\n                    break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(cache.scale, Number(e.key) - 1);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.prevElement: {\r\n            if(state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(false);\r\n            } else {\r\n                dispatcher.score.releaseRange(false);\r\n            }\r\n        }\r\n            break;\r\n        case config.nextElement: {\r\n            if(state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(true);\r\n            } else {\r\n                dispatcher.score.releaseRange(true);\r\n            }\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.prevSection: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.nextSection: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'm': {\r\n            dispatcher.score.addAlterElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case ' ': {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        }\r\n            break;\r\n    }\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\n\r\nexport const backingEditorInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.backingState;\r\n\r\n    if (state == null) return;\r\n\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const pattern = state.pattern;\r\n\r\n\r\n    if (!state.isPreview) {\r\n        switch (e.key) {\r\n            case 'b': {\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n            case 'Enter': {\r\n                dispatcher.backing.mappingEditorToScore();\r\n            }\r\n                break;\r\n            case ' ': {\r\n                if (!state.hasError) {\r\n                    dispatcher.backing.testBacking();\r\n                }\r\n            }\r\n                break;\r\n        }\r\n\r\n        if (pattern != null) {\r\n            if (!keySwitch.sustainMode) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': {\r\n                        dispatcher.backing.movePatternColumn(false);\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        dispatcher.backing.movePatternColumn(true);\r\n                    }\r\n                        break;\r\n                }\r\n                if (pattern.channelIndex === -1) {\r\n\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.backing.incrementVel(1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.backing.incrementVel(-1);\r\n                        }\r\n                            break;\r\n                        case 'a': {\r\n                            dispatcher.backing.addPatternColumn();\r\n                        }\r\n                            break;\r\n                        case 'w': {\r\n                            dispatcher.backing.changeLayer();\r\n                        }\r\n                            break;\r\n                        case '1': {\r\n                            dispatcher.backing.setCurrentDivRate(16);\r\n                        }\r\n                            break;\r\n                        case '2': {\r\n                            dispatcher.backing.setCurrentDivRate(8);\r\n                        }\r\n                            break;\r\n                        case '3': {\r\n                            dispatcher.backing.setCurrentDivRate(4);\r\n                        }\r\n                            break;\r\n                        case '4': {\r\n                            dispatcher.backing.setCurrentDivRate(2);\r\n                        }\r\n                            break;\r\n                        case '5': {\r\n                            dispatcher.backing.setCurrentDivRate(1);\r\n                        }\r\n                            break;\r\n                        case '.': {\r\n                            dispatcher.backing.toggleCurrentDivHalf();\r\n                        }\r\n                            break;\r\n                        case 'Delete': {\r\n                            dispatcher.backing.deleteColumn();\r\n                        }\r\n                            break;\r\n                        case 'f': {\r\n                            pattern.channelIndex = 0;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'Enter': {\r\n                            dispatcher.backing.mappingEditorToScore();\r\n                            dispatcher.backing.closeBackingEditor();\r\n                        }\r\n                            break;\r\n\r\n                    }\r\n                } else {\r\n\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.backing.moveChannelIndex(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.backing.moveChannelIndex(true);\r\n                        }\r\n                            break;\r\n                        case 'f': {\r\n                            pattern.channelIndex = -1;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'Enter': {\r\n                            const curNotes = dispatcher.backing.getNotes();\r\n                            const notes: BackingState.NoteStatus | null = curNotes == null ? { signal: 'n', timing: 0, velAdj: 0 } : null;\r\n                            dispatcher.backing.setNotes(notes);\r\n                            dispatcher.backing.updateErrorState();\r\n                        }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n\r\n            } else {\r\n\r\n                const pattern = state.pattern as BackingState.Pattern;\r\n                const layer = pattern.layers[pattern.layerIndex];\r\n                const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n                const cell = layer.table[channelIndex][pattern.lenIndex];\r\n                if (cell != null) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            cell.velAdj++;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            cell.velAdj--;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            cell.timing--;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            cell.timing++;\r\n                            update();\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n\r\n        switch (e.key) {\r\n            case ' ': {\r\n                BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature, DetailAlter as DetailAlter, AlterType, ModulateRelation, TempoRelation } from \"../../../../../redux/store/score/scoreData\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormAlter = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailAlter;\r\n\r\n    const type = detail.alterType;\r\n\r\n    const update = () => {\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n        // キャッシュの更新\r\n        HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const createAlertTypeItem = (value: AlterType | '-', isActive: boolean): JSX.Element => {\r\n        const type = value === '-' ? null : value;\r\n        return <_Form isActive={isActive}\r\n            onClick={() => {\r\n                //値が変わった時のみ処理を実行\r\n                if (detail.alterType !== type) {\r\n                    detail.alterType = type;\r\n                    // 全ての項目を初期化\r\n                    detail.modRel = null;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    detail.tempoRel = null;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    detail.beatSignature = '4/4';\r\n                    update();\r\n                }\r\n            }}> {value}</_Form >;\r\n    }\r\n\r\n    const createModulateRelationItem = (value: ModulateRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'modulate' && rel == detail.modRel}\r\n            onClick={() => {\r\n                if (detail.modRel !== rel) {\r\n                    detail.modRel = rel;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createTempoRelationItem = (value: TempoRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'tempo' && rel == detail.tempoRel}\r\n            onClick={() => {\r\n                if (detail.tempoRel !== rel) {\r\n                    detail.tempoRel = rel;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createBeatItem = (value: BeatSignature): JSX.Element => {\r\n        return <_Form isActive={detail.alterType === 'beat' && detail.beatSignature === value}\r\n            onClick={() => {\r\n                if (detail.beatSignature !== value) {\r\n                    detail.beatSignature = value;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const donmmItemJsxList = <_ParamDiv isEnable={detail.modRel === 'domm'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'domm' && value == detail.dommVal}\r\n            onClick={() => {\r\n                detail.dommVal = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>\r\n    })}</_ParamDiv>;\r\n\r\n    const keyAdjItemJsxList = <_ParamDiv isEnable={detail.modRel === 'key'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'key' && value == detail.keyAdj}\r\n            onClick={() => {\r\n                detail.keyAdj = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>;\r\n    })}</_ParamDiv>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Group isEnable={true}>\r\n                <_CategoryLabel>Type</_CategoryLabel>\r\n                {createAlertTypeItem('-', type == null)}\r\n                {createAlertTypeItem('modulate', type === 'modulate')}\r\n                {createAlertTypeItem('tempo', type === 'tempo')}\r\n                {createAlertTypeItem('beat', type === 'beat')}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'modulate'}>\r\n                <_CategoryLabel>Modulate</_CategoryLabel>\r\n                {createModulateRelationItem('-')}\r\n                {createModulateRelationItem('domm')}\r\n                {donmmItemJsxList}\r\n                {createModulateRelationItem('parallel')}\r\n                {createModulateRelationItem('relative')}\r\n                {createModulateRelationItem('key')}\r\n                {keyAdjItemJsxList}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'tempo'}>\r\n                <_CategoryLabel>Tempo</_CategoryLabel>\r\n                {createTempoRelationItem('-')}\r\n                {createTempoRelationItem('diff')}\r\n                {SideFormStyles.createNumberForm(detail.tempoDiff,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'diff',\r\n                    (e) => {\r\n                        detail.tempoDiff = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, -100, 100, 1)}\r\n                {createTempoRelationItem('rate')}\r\n                {SideFormStyles.createNumberForm(detail.tempoRate,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'rate',\r\n                    (e) => {\r\n                        detail.tempoRate = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n                {createTempoRelationItem('abs')}\r\n                {SideFormStyles.createNumberForm(detail.tempoAbs,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'abs',\r\n                    (e) => {\r\n                        detail.tempoAbs = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'beat'}>\r\n                <_CategoryLabel>Beat</_CategoryLabel>\r\n                {createBeatItem('2/4')}\r\n                {createBeatItem('4/4')}\r\n                {createBeatItem('3/4')}\r\n                {createBeatItem('6/8')}\r\n                {createBeatItem('9/8')}\r\n                {createBeatItem('12/8')}\r\n            </_Group>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormAlter;\r\n\r\nconst _Wrap = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        background-color: #b3b5c5;\r\n        `;\r\n\r\nconst _Group = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 0 0 0 4px;\r\n    ${props => props.isEnable ? '' : css`\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n`}\r\n        `;\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        margin-top: 1px;\r\n        width: 100%;\r\n        background-color: #c1cdd4;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\nconst _ParamDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n        margin: 1px;\r\n        background-color: #070707;\r\n        ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n        `;\r\nconst _ParamItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        width: 29px;\r\n        background-color: #dddddd;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\n\r\nconst _ValueForm = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 24px;\r\n        /* margin: 5px 0 0 0; */\r\n        text-align: left;\r\n        background-color: #ececec;\r\n\r\n        & * {\r\n            display: inline-block;\r\n            box-sizing: border-box;\r\n            vertical-align: top;\r\n    }\r\n        & input:nth-child(1) {\r\n            background-color: #dddddd;\r\n            width: 60px;\r\n            height: calc(100% - 4px);\r\n            margin: 2px 0 0 0;\r\n            border: 1px solid #9b9b9b;\r\n            border-radius: 4px;\r\n    }\r\n        & input:nth-child(2) {\r\n            margin-left: 5px;\r\n            background-color: #f00;\r\n            width: calc(100% - 70px);\r\n            height: 100%;\r\n    }\r\n        `;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ROOT_ALL, getChordRoot, getDegreeRoot, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport MinuteForm from \"./minuteForm\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i} isExist={isExist} onClick={() => {\r\n                const data = store.scoreData;\r\n                data.chordList = data.chordList.slice();\r\n                detail.beatLen = (i + 1);\r\n                data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        const scaleIndexies = cache.scale === 'major' ? ['0', '2', '4', '5', '7', '9', '11'] : ['0', '2', '3b', '5', '7', '8b', '10b'];\r\n        const isDiatonic = root != null && scaleIndexies.includes(root.index + (root.isFlat ? '' : 'b'));\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={isDiatonic}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    if (root == null) {\r\n                        detail.symbolKey = 'major';\r\n                    }\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {getDegreeRoot(root)} ({getChordRoot(root, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_CategoryLabel>{'Beat Length'}</_CategoryLabel>\r\n                <_Beat>\r\n                    {beatItemsJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    <_CategoryLabel>{'Minute Head'}</_CategoryLabel>\r\n                    {/* <MinuteForm isHeadAdjust={true} /> */}\r\n                    <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                    <_CategoryLabel>{'Minute Tail'}</_CategoryLabel>\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_RootDiv>\r\n                    {rootItemsJsx}\r\n                </_RootDiv>\r\n                <_SymbolDiv\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_SymbolDiv>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\nconst _LabelBeat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #c50000; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 100px; */\r\n    text-align: left;\r\n    background-color: #979797;\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 2px;\r\n        width: calc(100% - 4px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _LabelMinute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #222222;\r\n    text-align: center;\r\n`;\r\n// const _Minutetem = styled.div<{\r\n//     isExist: boolean;\r\n// }>`\r\n//     display: inline-block;\r\n//     width: 20%;\r\n//     height: 20px;\r\n//     text-align: left;\r\n//     background-color: #4c3696;\r\n//     font-size: 18px;\r\n//     font-weight: 600;\r\n//     color: #ce0000;\r\n//     line-height: 12px;\r\n//     text-align: center;\r\n\r\n//     & span{\r\n//         display: inline-block;\r\n//         margin: 2px 0 0 2px;\r\n//         width: calc(100% - 4px);\r\n//         height: calc(100% - 4px);\r\n//         background-color: #9b8585;\r\n//         ${props => !props.isExist ? '' : css`\r\n//             /* background-color: #ebf37eb7; */\r\n//             background: linear-gradient(to bottom, #bdb652d2, #fff56cd3, #bdb652d2);\r\n//         `}\r\n//     }\r\n// `;\r\nconst _MinuteItem = styled.input<{\r\n    isReverse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: 20px;\r\n    color: #3b51d1;\r\n    ${props => !props.isReverse ? '' : css`\r\n        transform: rotateY(180deg);\r\n    `}\r\n`;\r\n\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    margin-top: 5px;\r\n    width: 100%;\r\n    /* height: 360px; */\r\n    text-align: left;\r\n    /* background-color: #000000; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _RootDiv = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    margin: 0 0 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #e6e6e6; */\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #90bbcc;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #d12121b8;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #99999940;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #cc6363b8;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #94c5e6b9;`}\r\n    }\r\n`;\r\n\r\nconst _SymbolDiv = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 93px);\r\n    margin: 0 1px 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    background-color: #a1cc90;\r\n    ${props => !props.isActive ? '' : css`background-color: #d12121b8;`}\r\n    color: #fff;\r\n    ${props => !props.isDiatonic ? '' : css`color: #fff;`}\r\n    /* & span {\r\n        color: #f000;\r\n    } */\r\n    &:hover {\r\n        background-color: #dddddd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #cc6363b8;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/score/scoreData\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const update = () => {\r\n        data.chordList = data.chordList.slice();\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        HarmonizeUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const scaleItemJsxList: JSX.Element[] = ['major', 'minor'].map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n    const rateItemJsxList: JSX.Element[] = ['2/4', '4/4', '3/4', '6/8', '9/8', '12/8'].map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.beatSignature === item} onClick={() => {\r\n                detail.beatSignature = item as BeatSignature;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            {SideFormStyles.createNumberForm(detail.bpm, true, (e) => {\r\n                detail.bpm = e.currentTarget.valueAsNumber;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }, 30, 220, 1)}\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 50%;\r\n    margin: 1px 0 0 0;\r\n\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 100%;\r\n    margin: 1px 0 0 0;\r\n    \r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    margin: 1px 0 0 0;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/score/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        ['Intro', 'A-mero', 'B-mero', 'Sabi', 'C-mero', 'Outro'].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        const splitList = detail.labelName.split(' ');\r\n        ['', 1, 2, 3, 4, 5, 6, 7, 8, 9].forEach((item) => {\r\n            const isActive = splitList[splitList.length - 1] === item.toString();\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(`${splitList[0]} ${item}`);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_SelectDiv>\r\n                <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n                <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n            </_SelectDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #b89b9b; */\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _SelectDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    background-color: #acacac;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(60% - 4px);\r\n    margin: 0 2px 0 2px;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(40% - 2px);\r\n    margin: 0 2px 0 0;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #6182b4; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #61b4b0; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormAlter from \"./sideFormAlter\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst NoteSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'alter': return <SideFormAlter />;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default NoteSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { getIntervalValues, getSymbolFromKey, IntervalRelationProps } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const scaleIndexies = cache.scale === 'major' ? [0, 2, 4, 5, 7, 9, 11] : [0, 2, 3, 5, 7, 8, 10];\r\n    const scaleList = scaleIndexies.map(value => (cache.keyIndex + value) % 12);\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = getIntervalValues((root.index + cache.keyIndex) % 12, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        for (let i = 0; i < 14; i++) {\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            {/* <_Info>{tipJsxList}</_Info> */}\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    /* background-color: #4b4b4b; */\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    border: 1px solid #ffffffda;\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    ` : css`\r\n    background: radial-gradient(#d6cec3, #a89889);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    ` : css`\r\n        background: radial-gradient(#e7a144, #72552a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst InitialBeatTip = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const tipJsxList:JSX.Element[] = [];\r\n    for(let i = 0; i < 4; i ++) {\r\n        tipJsxList.push(\r\n            <_Tip key={i} isActive={state.initialBeat > i} onClick={()=> {\r\n                state.initialBeat = i + 1;\r\n                dispatcher.score.setScoreState(state);\r\n            }}/>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Label>inital beat</_Label>\r\n            <_WrapTip>{tipJsxList}</_WrapTip>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default InitialBeatTip;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\nconst _WrapTip = styled.div`\r\n    display: inline-block;\r\n    width: 142px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 10px;\r\n    border-radius: 4px;\r\n    border: solid 1px #747474;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 4px;\r\n    background-color: #c7c7c7;\r\n        border: solid 1px #a1a1a1;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4e4e4;\r\n        border: solid 1px #7c7c7c;\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternAdjust = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cell = layer.table[channelIndex][pattern.lenIndex];\r\n    const timing = cell == null ? 0 : cell.timing;\r\n    const velAdj = cell == null ? 0 : cell.velAdj;\r\n\r\n    return (<_Wrap>\r\n        {\r\n            cell == null ? <></> : (<>\r\n                <_Rocord>\r\n                    <_Label>timing</_Label>\r\n                    <_Value type=\"range\" min={-10} max={10} step={1} value={timing} onChange={e => {\r\n                        cell.timing = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_Rocord>\r\n                <_Rocord>\r\n                    <_Label>velocity</_Label>\r\n                    <_Value type=\"range\" min={-10} max={10} step={1} value={velAdj} onChange={e => {\r\n                        cell.velAdj = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_Rocord>\r\n            </>)\r\n        }\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternAdjust;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Rocord = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(50% - 2px);\r\n    margin: 1px 0;\r\n    background-color: #9c9c9c;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 1px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 2px);\r\n    width: 80px;\r\n    background-color: #868686;\r\n    font-size: 16px;\r\n    line-height: 16px;\r\n    font-weight: 600;\r\n    color: #e7e7e7;\r\n    border: 1px solid #616161;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.input<{\r\n}>`\r\n    display: inline-block;\r\n    outline: none;\r\n    margin: 6px 0 0 10px;\r\n    width: calc(100% - 100px);\r\n    height: 10px;\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n    const curLayer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const layerJsxList = useMemo(() => {\r\n\r\n        const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n        pattern.layers.forEach((layer, j) => {\r\n\r\n            const jsxLsit: JSX.Element[] = [];\r\n            for (let i = 0; i < channelCount; i++) {\r\n                const notesJsxLsit: JSX.Element[] = [];\r\n\r\n                layer.noteDivList.forEach((note, k) => {\r\n                    // データ上は下から数えるため、表示のループは逆回転する\r\n                    const channelIndex = (channelCount - 1) - i;\r\n                    const isActive = pattern.layerIndex === j && pattern.lenIndex === k;\r\n                    const cell = layer.table[channelIndex][k];\r\n                    const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                    const isUse = cell != null;\r\n                    // 前面にあるレイヤーのみエラー判定をする\r\n                    const isError = pattern.layerIndex !== j ? false :\r\n                        isUse && BackingUtil.checkOverlapBackLayer(pattern.layers, j, channelIndex, k);\r\n                    const isEdit = isActive && pattern.channelIndex === i;\r\n                    let rate = note.rate;\r\n                    if (note.isDot) rate /= 1.5;\r\n                    if (note.div3 !== 0) rate /= note.div3 / 3;\r\n                    notesJsxLsit.push(\r\n                        <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                            <_State isUse={isUse} isError={isError} signal={'n'} isBack={pattern.layerIndex !== j}\r\n                                onClick={() => {\r\n                                    if (cell == null) {\r\n                                        setNotesStatus({ signal: 'n', timing: 0, velAdj: 0 });\r\n                                    } else {\r\n                                        setNotesStatus(null);\r\n                                    }\r\n                                    curLayer.table = curLayer.table.slice();\r\n                                    update();\r\n                                    dispatcher.backing.updateErrorState();\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    pattern.channelIndex = i;\r\n                                    pattern.lenIndex = k;\r\n                                    update();\r\n                                }}\r\n                            />\r\n                        </_Notes>\r\n                    );\r\n                });\r\n                jsxLsit.push(\r\n                    <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                        {notesJsxLsit}\r\n                    </_Record>\r\n                );\r\n            }\r\n            layerJsxList[j] = jsxLsit;\r\n        });\r\n        return layerJsxList;\r\n    }, [\r\n        pattern.channels, pattern.layerIndex, pattern.lenIndex,\r\n        curLayer.noteDivList, curLayer.table, pattern.channelIndex\r\n    ]);\r\n\r\n    // 選択中のレイヤーを表に表示する\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    isUse: boolean;\r\n    isError: boolean;\r\n    signal: BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => !props.isUse ? '' : css<{\r\n    isBack: boolean;\r\n    isError: boolean;\r\n}>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        // エラーあり\r\n        ${props => !props.isError ? '' : css`\r\n            opacity: 0.5;\r\n        `}\r\n        // 裏面のレイヤー\r\n        ${props => !props.isBack ? '' : css`\r\n            background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.5;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => !props.isUse ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternVelocity = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n\r\n    layer.velocityList.forEach((vel, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} >\r\n                <_Value value={vel} />\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternVelocity;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #001763ac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #173494ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Value = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 6px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternAdjust from \"./patternAdjust\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternTable from \"./patternTable\";\r\nimport PatternVelocity from \"./patternVelocity\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const divs = layer.noteDivList;\r\n    const limitLen = BackingUtil.getLimitLen(chordInfo);\r\n    const useTotalLen = BackingUtil.getUsingLenFromDivs(divs, chordInfo);\r\n    const isLenOverError = 0 <= limitLen - useTotalLen;\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const viewRate = NOTES_1BAR_WIDTH / 4;\r\n\r\n    // メモリの数を算出\r\n    let memoriCount = chordInfo.beatLen * beatProps.beatMemoriCount;\r\n    memoriCount += chordInfo.minute.head + chordInfo.minute.tail;\r\n\r\n    const barMemoriCount = beatProps.beatMemoriCount === 4 ? 16 : 24;\r\n    const memoriWidth = NOTES_1BAR_WIDTH / barMemoriCount;\r\n    // メモリJSXの生成\r\n    const memoriJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < memoriCount + 1; i++) {\r\n        const pos = i;\r\n        let bean: { thickness: number, height: number, color: string } = { thickness: 1, height: 10, color: '#555' };\r\n        if (beatProps.beatMemoriCount === 4) {\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { thickness: 1, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        } else {\r\n            switch (true) {\r\n                case pos % 24 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 6 === 0: bean = { thickness: 1, height: 18, color: '#646464' }; break;\r\n                case pos % 3 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        }\r\n        memoriJsxList.push(\r\n            <_Memori\r\n                key={memoriJsxList.length}\r\n                width={memoriWidth}\r\n                height={bean.height}\r\n                color={bean.color}\r\n                thickness={bean.thickness}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n                <_MemoriList>{memoriJsxList}</_MemoriList>\r\n                {isLenOverError ? (\r\n                    <_ChordLenLine pos={limitLen * viewRate} />\r\n                ) : (\r\n                    <_OverCover pos={limitLen * viewRate} width={(useTotalLen - limitLen) * viewRate} />\r\n                )}\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n            {pattern.channelIndex === -1 ?\r\n                <PatternVelocity /> :\r\n                <PatternAdjust />\r\n            }\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\nconst _MemoriList = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    thickness: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.thickness}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _OverCover = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: ${props => props.width}px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #f8000053;\r\n    pointer-events: none;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;\r\n\r\nconst _ChordLenLine = styled.div<{\r\n    pos: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: 4px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #ffffffc7;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n    const channelCount = pattern.channels.length;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length + 1);\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length - 1);\r\n        update();\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap isError={props.soundFullName === '-'}>\r\n            <_Struct>{props.soundFullName}</_Struct>\r\n            <_Option isEnable={channelCount > 1} onClick={deleteRecord}>-</_Option>\r\n            <_Option isEnable={channelCount < 12} onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ff0000c3;\r\n    `}\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)<{\r\n    isEnable: boolean;\r\n}>`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n    const pattern = state.pattern;\r\n    const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    const layerJsxList: JSX.Element[] = [];\r\n    if (pattern != null) {\r\n        const channels = pattern.channels;\r\n        channels.forEach((channel, i) => {\r\n            let name = '-';\r\n            if (channel.octave !== -1) {\r\n                const soundIndex = chordRoot + IntervalRelationProps[symbol.structs[channel.structIndex]];\r\n                const octave = channel.octave + Math.floor(soundIndex / 12);\r\n                name = KEY12_SHARP_LIST[soundIndex % 12] + octave;\r\n            }\r\n            channelJsxList.push(\r\n                <ChannelItem key={i}\r\n                    index={i}\r\n                    soundFullName={name}\r\n                />\r\n            );\r\n        });\r\n\r\n        pattern.layers.forEach((layer, i) => {\r\n            const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\r\n            layerJsxList.push(\r\n                <_LayerItem key={i} isActive={pattern.layerIndex === i}\r\n                    onClick={()=>{\r\n                        if(i !== pattern.layerIndex) {\r\n                            dispatcher.backing.changeLayer();\r\n                        }\r\n                    }}\r\n                >\r\n                    {labelName}\r\n                </_LayerItem>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            {layerJsxList}\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #929292;\r\n`;\r\n\r\nconst _LayerItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #dad600;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternStatus = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        layer.noteDivList = layer.noteDivList.slice();\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, isEnable: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={isEnable} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, true, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const isPermit3ren = ['2/4', '4/4', '4/3'].includes(chordInfo.init.beatSignature);\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot,\r\n            cur.rate !== 16,\r\n            () => {\r\n                cur.isDot = !cur.isDot;\r\n                update();\r\n            })}\r\n        {createItem('1/3', cur.div3 === 1,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 1) cur.div3 = 0;\r\n                else cur.div3 = 1;\r\n                update();\r\n            })}\r\n        {createItem('2/3', cur.div3 === 2,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 2) cur.div3 = 0;\r\n                else cur.div3 = 2;\r\n                update();\r\n            })}\r\n    </_WrapLen>;\r\n\r\n\r\n    const selectedCell = pattern.channelIndex === -1 ? null :\r\n        pattern.layers[pattern.layerIndex].table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', selectedCell == null,\r\n            true,\r\n            () => {\r\n\r\n                update();\r\n            })}\r\n\r\n        {createItem('□', selectedCell != null && selectedCell.signal === 'n',\r\n            true,\r\n            () => {\r\n\r\n                update();\r\n            })}\r\n        {createItem('・', selectedCell != null && selectedCell.signal === 's',\r\n            true,\r\n            () => {\r\n\r\n                update();\r\n            })}\r\n        {createItem('⁀', selectedCell != null && selectedCell.signal === 't',\r\n            true,\r\n            () => {\r\n\r\n                update();\r\n            })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternStatus;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternStatus from \"./patternStatus\";\r\n\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button isActive={isUsePattern}\r\n                        onClick={() => {\r\n                            if (!isUsePattern) {\r\n                                const table = state.voicingTable as boolean[][];\r\n                                const voicingStructs = BackingUtil.buildChannels(table);\r\n                                const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n                                state.pattern = {\r\n                                    layerIndex: 0,\r\n                                    lenIndex: 0,\r\n                                    channelIndex: -1,\r\n                                    channels,\r\n                                    isUsePedal: false,\r\n                                    layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n                                } as BackingState.Pattern;\r\n                                update();\r\n                            } else {\r\n                                state.pattern = null;\r\n                                update();\r\n                            }\r\n                        }}>Use\r\n                    </_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternStatus /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #e00000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #ff0000;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { playChordSoundfont } from \"../../../utils/instrumentsUtil\";\r\nimport { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n\r\n    const table = state.voicingTable as boolean[][];\r\n    const pattern = state.pattern;\r\n    const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n    const chordName = KEY12_SHARP_LIST[chordRoot] + symbol.name;\r\n\r\n    const voicingLaneJsxList: JSX.Element[] = [];\r\n    const channelLimitNum = pattern == null ? BackingUtil.OCTAVE_NUM * BackingUtil.STRUCT_NUM : pattern.channels.length;\r\n    let total = 0;\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const tipJsxList: JSX.Element[] = [];\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = symbol.structs.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n            if (isSelected) {\r\n                total++;\r\n            }\r\n\r\n            const interval = IntervalRelationProps[symbol.structs[j]];\r\n            const chordIndex = (chordRoot + interval) % 12;\r\n            const octave = i + Math.floor((chordRoot + interval) / 12);\r\n\r\n            const name = !isEnable ? '' : `${KEY12_SHARP_LIST[chordIndex]}${octave}`;\r\n            tipJsxList.push(\r\n                <_VoicingItem key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    isOver={isSelected && total > channelLimitNum}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: BackingState.ChannelParam[] = BackingUtil.buildChannels(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                        dispatcher.backing.updateErrorState();\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.harmony;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_VoicingItem>\r\n            );\r\n        }\r\n        voicingLaneJsxList.push(\r\n            <_VoicingLane key={i}>\r\n                {tipJsxList}\r\n            </_VoicingLane>\r\n        );\r\n    }\r\n\r\n\r\n    const relationJsxList: JSX.Element[] = [];\r\n    symbol.structs.forEach((struct, i) => {\r\n        const interval = IntervalRelationProps[struct];\r\n        const chordIndex = (+ interval) % 12;\r\n        relationJsxList.push(\r\n            <_Relation key={i}>{struct} [{KEY12_SHARP_LIST[chordIndex]}]</_Relation>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Info>\r\n                <_InfoItem>\r\n                    <_Label>Chord</_Label>\r\n                    <_Value>{chordName}</_Value>\r\n                </_InfoItem>\r\n                <_InfoItem>\r\n                    <_Label>Type</_Label>\r\n                    <_Value>{symbol.attr}</_Value>\r\n                </_InfoItem>\r\n            </_Info>\r\n            <_Main>\r\n                <_Left>\r\n                    {relationJsxList}\r\n                </_Left>\r\n                <_Right>{voicingLaneJsxList}</_Right>\r\n            </_Main>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _Info = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _InfoItem = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #89dada; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 8px);\r\n    width: 80px;\r\n    background-color: #69bcdd;\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #026c86;\r\n    border: 1px solid #303030;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 6px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #cccccc; */\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _Relation = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _VoicingLane = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VoicingItem = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n    isOver: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #e5e747;\r\n    `}\r\n    ${props => !props.isOver ? '' : css`\r\n        background-color: #c40000;\r\n        color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #b9bb3f;\r\n        `}\r\n        ${props => !props.isOver ? '' : css`\r\n            background-color: #bb3f3f;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_PrevireBrind isUse={state.isPreview} />\r\n            <VoicingChooser />\r\n            <PatternFrame />\r\n            <_FooterDiv>\r\n                <_Button isEnable={!state.hasError} onClick={() => {\r\n\r\n                    if (!state.isPreview) {\r\n                        dispatcher.backing.testBacking();\r\n                    } else {\r\n                        BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                    }\r\n                }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Cancel</_Button>\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.mappingEditorToScore();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/score/scoreData\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const cur = chordList[focusIndex];\r\n    const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={isBackingEnable}\r\n                onClick={() => {\r\n                    if (state.hideMenu === 'none') {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    } else if (state.hideMenu === 'backing') {\r\n                        dispatcher.backing.closeBackingEditor();\r\n                    }\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmClipboard = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    return (\r\n        <_Wrap>\r\n            <_Label>clipboard</_Label>\r\n            <_TypeDiv>\r\n                <_ModeItem isActive={state.cloneBacking != null}>Backing</_ModeItem>\r\n                <_ModeItem isActive={state.copiedElementList != null}>Elements</_ModeItem>\r\n            </_TypeDiv>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default HarmClipboard;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _TypeDiv = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #a8dbb3;\r\n    `}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #8f8f8f;\r\n    border-radius: 2px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst MEMORI_WIDTH = 12;\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        list.push(<_Margin key={list.length} />);\r\n        state.measureCacheList.forEach((cache) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {cache.barCount !== -1 ? <_Bar>{cache.barCount}</_Bar> : ''}\r\n                    {/* {<_Bar>{i}</_Bar>} */}\r\n                </_Memori>\r\n            );\r\n        });\r\n        list.push(<_Margin key={list.length} />);\r\n        return list;\r\n    }, [state.beatCacheList]);\r\n\r\n    const [beatJsxList, minuteJsxList] = useMemo(() => {\r\n        const beatJsxList: JSX.Element[] = [];\r\n        const minuteJsxList: JSX.Element[] = [];\r\n\r\n        const isChordFocus = dataList[focusIndex].type === 'chord';\r\n        const curChordIndex = cacheList[focusIndex].chordIndex;\r\n        // list.push(<_Start key={list.length}/>);\r\n        dataList.forEach((data, i) => {\r\n\r\n            const cache = state.elementCacheList[i];\r\n            if (data.type === 'chord' && Math.abs(cache.chordIndex - curChordIndex) <= 5) {\r\n\r\n                const detail = data.detail as DetailChord;\r\n                const sustain = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                let label = '';\r\n                let type: ItemType = 'ather';\r\n                if (!isChordFocus) {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                } else {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'cur';\r\n                        type = 'cur';\r\n                    } else if (cache.chordIndex === curChordIndex - 1) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                }\r\n\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatMemori = detail.beatLen * beatProps.beatMemoriCount;\r\n                const posMemori = 16 + cache.curTotalMemori;\r\n                beatJsxList.push(\r\n                    <_SustainItem key={beatJsxList.length}\r\n                        type={type}\r\n                        pos={posMemori} sustain={beatMemori + minute}\r\n                    >{label}</_SustainItem>\r\n                );\r\n                minuteJsxList.push(\r\n                    <_BeatItem key={beatJsxList.length}\r\n                        isActive={type === 'cur'}\r\n                        pos={posMemori + detail.minute.head} sustain={beatMemori}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        // list.push(<_Start key={list.length}/>);\r\n        return [beatJsxList, minuteJsxList];\r\n    }, [dataList, dataList.length, focusIndex]);\r\n\r\n    const scrollPos = cacheList[focusIndex].curTotalMemori * MEMORI_WIDTH;\r\n    return (\r\n        <_Wrap>\r\n            <_ScrollFrame pos={scrollPos}>\r\n                <_Blocks>\r\n                    <_Beat>\r\n                        {beatJsxList}\r\n                    </_Beat>\r\n                    <_Minute>\r\n                        {minuteJsxList}\r\n                    </_Minute>\r\n                </_Blocks>\r\n                <_Measure>\r\n                    {memoriJsxList}\r\n                </_Measure>\r\n            </_ScrollFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _ScrollFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => -props.pos}px;\r\n    position: absolute;\r\n    height: 100%;\r\n    /* width: 100px;\r\n    background-color: #000; */\r\n    transition: left 0.5s;\r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n`;\r\n\r\ntype ItemType = 'cur' | 'prev' | 'next' | 'ather';\r\nconst _SustainItem = styled.div<{\r\n    pos: number;\r\n    sustain: number;\r\n    type: ItemType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(136, 163, 133);\r\n    ${props => {\r\n        switch (props.type) {\r\n            case 'cur': return css`\r\n                background-color: rgb(218, 107, 134);\r\n                /* color: #ffe551; */\r\n            `;\r\n            case 'prev': return css`\r\n                background-color: rgb(163, 177, 221);\r\n            `;\r\n            case 'next': return css`\r\n                background-color: rgb(163, 221, 171);\r\n            `;\r\n            case 'ather': return css`\r\n                background-color: rgb(192, 192, 192);\r\n            `;\r\n        }\r\n    }}\r\n    border-left: solid 1px #000;\r\n    border-top: solid 1px #000;\r\n    border-bottom: solid 1px #000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _BeatItem = styled.div<{\r\n    isActive: boolean;\r\n    pos: number;\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(224, 224, 224);\r\n    border-left: solid 1px #000;\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: rgb(233, 180, 228); */\r\n        /* color: #ffe551; */\r\n    `}\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Margin = styled.div`\r\n    display: inline-block;\r\n    width: ${MEMORI_WIDTH * 16}px;\r\n    height: 100%;\r\n    background-color: #d9ebe7;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${MEMORI_WIDTH}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection } from \"../../../../redux/store/score/scoreData\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport NoteSideForm from \"./side/noteSideForm\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport HarmClipboard from \"./initial/harmClipboard\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\n\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const state = store.scoreState;\r\n    const init = (store.scoreData.chordList[0].detail as DetailInit);\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, harmonize: () => {\r\n                dispatcher.system.setInvalidate({\r\n                    ...store.invalidate, harmoniizeInvalidate: {}\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    // useEffect(() => {\r\n    //     HarmonizeUtil.updateHarmonizeCache(store, dispatcher)\r\n    // }, [chordList, chordList.length, init.bpm]);\r\n\r\n    const harmMeasure = state.elementCacheList.length === 0 ? <></> : <HarmMeasure />;\r\n    const chordInfo = state.elementCacheList.length === 0 ? <></> : <ChordInfo />;\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Left>\r\n                <_Head isEnable={!state.isPreview}>\r\n                    <InitialBeatTip />\r\n                    <HarmClipboard />\r\n                </_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP>{harmMeasure}</_TIMELINE_WRAP>\r\n                    <_INFO_WRAP>{chordInfo}</_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right isEnable={!state.isPreview}>\r\n                <NoteSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Head = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    position: absolute;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    /* background-color: #ddc2c2; */\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    state.distIndex = state.focusIndex;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 46px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #97cce0dd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #929292;\r\n    /* border-radius: 20px 20px 20px 20px; */\r\n    border-radius: 2px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 25px;\r\n        font-size: 18px;\r\n        /* font-weight: 600; */\r\n        color: #4d4d4d;\r\n        /* background-color: #0000003a; */\r\n        line-height: 22px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 21px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #adadad39; */\r\n        line-height: 20px;\r\n    }\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyTimelineMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            mouse.lock = x;\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        // if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            if (mouse.pos !== x) {\r\n                // console.log(`★ move=== x: ${x}, pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n                mouse.pos = x;\r\n                update();\r\n            }\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            // update();\r\n\r\n            const lock = mouse.lock + refs.measure.scrollLeft;\r\n            const pos = mouse.pos + refs.measure.scrollLeft;\r\n            const notesList = store.scoreData.notesList;\r\n            let start = -1;\r\n            let end = -1;\r\n            for (let i = 0; i < notesList.length; i++) {\r\n                const notes = notesList[i];\r\n                const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                const [head, tail] = lock < pos ? [lock, pos] : [pos, lock];\r\n                if (head <= left && tail >= right) {\r\n                    if (start === -1) start = i;\r\n                } else {\r\n                    if (start !== -1) {\r\n                        end = i - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            if (start !== -1 && end === -1) {\r\n                end = notesList.length - 1;\r\n            }\r\n            state.focusIndex = start;\r\n            state.distIndex = end;\r\n            mouse.lock = -1;\r\n            // console.log(`★ up=== focus: ${state.focusIndex}, dist: ${state.distIndex}`);\r\n            dispatcher.tune.setState(state);\r\n            // const [head, tail] = mouse.lock < x ? [mouse.lock, x] : [x, mouse.lock];\r\n            // const width = tail - head;\r\n            // if (width > 5) {\r\n            //     mouse.width = width;\r\n            //     mouse.lock = -1;\r\n            //     mouse.pos = head;\r\n            //     update();\r\n            //     console.log(`★ up=== pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n            // }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyTimelineMouseOperation;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport { getNormalizeLenFromNotes, previewCurHarmony } from \"../../../../utils/melodyUtil\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimelineMouseOperation from \"./util/melodyTimelineMouseOperation\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n    update: () => void;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n    const update = props.update;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    // const measureJsxList: JSX.Element[] = useMemo(() => {\r\n    //     const jsxList: JSX.Element[] = [];\r\n    //     for (let i = 0; i <= barLength * 4 * 4; i++) {\r\n    //         let barJsx = <></>;\r\n    //         if (i % 16 == 0) {\r\n    //             barJsx = <_Bar>{Math.floor(i / 16) + 1}</_Bar>\r\n    //         }\r\n    //         jsxList.push(\r\n    //             <_Scale key={i} isHead={i % 4 === 0} beatWidth={beatWidth}>\r\n    //                 {barJsx}\r\n    //             </_Scale>\r\n    //         );\r\n    //     }\r\n    //     return jsxList;\r\n    // }, [barLength]);\r\n\r\n    const measureJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        state.measureCacheList.forEach((cache) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            \r\n            // let barJsx = <></>;\r\n            // if (cache.barCount !== -1) {\r\n            //     barJsx = <_Bar>{cache.barCount}</_Bar>\r\n            // }\r\n            // list.push(\r\n            //     <_Scale key={list.length} isHead={cache.rate === 4} beatWidth={beatWidth}>\r\n            //         {barJsx}\r\n            //     </_Scale>\r\n            // );\r\n            \r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    beatWidth={beatWidth}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {cache.barCount !== -1 ? <_Bar>{cache.barCount}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        });\r\n        return list;\r\n    }, [state.beatCacheList, barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        let left = 0;\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const width = beatWidth * (detail.beatLen + detail.minute.head + detail.minute.tail);\r\n\r\n                if (chordRef.current != null) {\r\n                    const scroll = chordRef.current.scrollLeft;\r\n                    if (left + width - scroll >= 0 ||\r\n                        left - scroll <= chordRef.current.clientWidth) {\r\n                        const symbolNmae = getSymbolFromKey(detail.symbolKey)?.name;\r\n                        const degreeName = detail.root == null ? '-' :\r\n                            getDegreeRoot(detail.root) + symbolNmae;\r\n                        const chordName = detail.root == null ? '-' :\r\n                            getChordRoot(detail.root, init.keyIndex) + symbolNmae;\r\n                        jsxList.push(\r\n                            <_ChordItem key={jsxList.length}\r\n                                left={left}\r\n                                width={width}\r\n                                isActive={element == curChord}\r\n                                onClick={() => {\r\n                                    state.isTune = false;\r\n                                    state.focusIndex = i;\r\n                                    dispatcher.score.setScoreState(state);\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    previewCurHarmony(store, dispatcher);\r\n                                }}\r\n                            >\r\n                                <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                            </_ChordItem>\r\n                        );\r\n                    }\r\n                }\r\n                left += width;\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_MeasureWrap ref={measureRef}>\r\n            <_MeasureInner\r\n                onMouseDown={e => MelodyTimelineMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseMove={e => MelodyTimelineMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseUp={e => MelodyTimelineMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseLeave={() => {\r\n                    const mouse = store.melodyState.timelineMouse;\r\n                    mouse.pos = -1;\r\n                    mouse.lock = -1;\r\n                    update();\r\n                }}\r\n            >\r\n                {measureJsxList}\r\n                <_MousePos\r\n                    left={mouseMeasurePos * beatWidth * rate}\r\n                    width={beatWidth * rate}\r\n                />\r\n            </_MeasureInner>\r\n        </_MeasureWrap>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _MeasureWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _MeasureInner = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* width: 100%; */\r\n    left: 0;\r\n    top: 0;\r\n    width: 10000px;\r\n    height: 100%;\r\n    &:hover {\r\n        background-color: #ff00b347;\r\n    }\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.left}px;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    pointer-events: none;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.beatWidth / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #8f8f8f;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #adadad;\r\n    ${props => !props.isStruct ? '' : css`background-color: #e75a5a;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #3b3b3b;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/score/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                state.isPreview = true;\r\n                dispatcher.tune.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.tune.setInstrument(soundFontPlayer);\r\n                    }).then(() => {\r\n                        state.isPreview = false;\r\n                        dispatcher.tune.setState(state);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #cacacada;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f7f7f7da;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e4e4e4da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #f7f7f7da;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst ControlButton = (props: {\r\n    labelName: string;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ControlButton;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #a8bae0, #818ada, #a8bae0);\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d5d6e;\r\n    border-radius: 2px;\r\n    border: solid 1px #737374;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to bottom, #c2d0f0, #929beb, #c2d0f0);\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\n\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={state.quantize === 4} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.tune.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.tune.setNotesList(list.slice());\r\n                }} />\r\n                {/* <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} /> */}\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 9 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.distIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    const newLen = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.len) !== getNormalizeLenFromNotes(newLen)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.len = newLen;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    const newPos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.pos) !== getNormalizeLenFromNotes(newPos)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.pos = newPos;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.tableMouse;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                //履歴を作成\r\n                state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.tune.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.tune.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/score/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { previewCurHarmony, stopPreview } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n        const isSingle = state.focusIndex === state.distIndex;\r\n        // const notesList = store.scoreData.notesList;\r\n        const mouse = state.tableMouse;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.tune.copyNotes(); break;\r\n                    case 'v': dispatcher.tune.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.tune.allSelect();\r\n                    }\r\n                        break;\r\n                    case 's': dispatcher.score.saveFile(); break;\r\n                    case 'z': dispatcher.tune.undo(); break;\r\n                    case 'y': dispatcher.tune.redo(); break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.tune.incrementCurPitch(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.tune.incrementCurPitch(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveDistFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveDistFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.tune.incrementCurPitch(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.tune.incrementCurPitch(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        dispatcher.tune.moveFocus(false);\r\n                    } else {\r\n                        dispatcher.tune.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        dispatcher.tune.moveFocus(true);\r\n                    } else {\r\n                        dispatcher.tune.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.tune.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.tune.adjustScrollX(); break;\r\n                case 'e': dispatcher.tune.adjustScrollY(); break;\r\n                case 'z': {\r\n                    previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.tune.firstNotes();\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.tune.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.tune.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.tune.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.distIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.tune.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.tune.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil, { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/score/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n    const [invalidate2, setInvalidate2] = useState<{}>({});\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.tableMouse;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n\r\n    const barCount = 150;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n    const rate = 1 / store.melodyState.quantize;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, melody: update\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barCount * 4 * 4; i++) {\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={state.beatWidth} />\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barCount]);\r\n\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n    const scaleLineJsxList = useMemo(() => {\r\n        const scaleIndexList = TheoryUtil.SCALE_INDEX;\r\n        const scaleIndexies = scaleIndexList.map(value => (init.keyIndex + value) % 12);\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < PITCH_MAX; i++) {\r\n            const keyIndex = getKeyIndexFromPitcher(i);\r\n            list.push(\r\n                <_ScaleLine key={i}\r\n                    isScale={scaleIndexies.includes(keyIndex)}\r\n                    isBase={keyIndex === scaleIndexies[0]}\r\n                />\r\n            );\r\n        }\r\n        return list;\r\n    }, [init.keyIndex]);\r\n\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        // let count = 0;\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const notesLeft = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const notesRight = notesLeft + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                if (notesRight - scroll < 0 ||\r\n                    notesLeft - scroll > tableRef.current.clientWidth) {\r\n                    continue;\r\n                }\r\n            }\r\n            // count++;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexList = TheoryUtil.SCALE_INDEX;\r\n            const scaleIndexies = scaleIndexList.map(value => (init.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n\r\n            // クオンタイズ\r\n            const unitPos = getMinimumLenUnit(notes.pos);\r\n            const unitLen = getMinimumLenUnit(notes.len);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={getNormalizeLenFromNotes(notes.pos) * state.beatWidth}\r\n                    width={getNormalizeLenFromNotes(notes.len) * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.tune.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\r\n                        isScale={isScale}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // console.log('cnt: ' + count);\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.distIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header isEnable={!state.isPreview}>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                {(() => {\r\n                    const mouse = state.timelineMouse;\r\n                    if (mouse.lock === -1) {\r\n                        return mouse.pos === -1 ? <></> :\r\n                            <_MouseLinePos left={mouse.pos} />\r\n                    } else {\r\n                        const [head, tail] = mouse.lock < mouse.pos ? [mouse.lock, mouse.pos] : [mouse.pos, mouse.lock];\r\n                        const width = tail - head;\r\n                        return <_MouseRange left={head} width={width} />\r\n                    }\r\n                })()}\r\n                {\r\n\r\n                }\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                        update={() => setInvalidate2({})}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef}\r\n                    onScroll={() => {\r\n                        const refs = store.refs.melody;\r\n\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const scrollLeft = refs.table.scrollLeft;\r\n                            const scrollTop = refs.table.scrollTop;\r\n                            refs.measure.scrollTo({ left: scrollLeft });\r\n                            refs.chord.scrollTo({ left: scrollLeft });\r\n                            refs.pitch.scrollTo({ top: scrollTop });\r\n                        }\r\n                        update();\r\n                    }}\r\n                >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleLineJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseLeave={() => {\r\n                            console.log('leave!');\r\n                            if (mouse.notesState.index !== -1) {\r\n                                mouse.notesState.index = -1;\r\n                                mouse.notesState.isResize = false;\r\n                                mouse.notesState.side = 'normal';\r\n                            }\r\n                            mouse.mouseMeasurePos = -1;\r\n                            mouse.mousePitchIndex = -1;\r\n                            update();\r\n                        }}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _MouseLine = css`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    width: 3px;\r\n`;\r\nconst _MouseLinePos = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #15ff00;\r\n`;\r\nconst _MouseLineLock = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #fbff00;\r\n`;\r\n\r\nconst _MouseRange = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    width: ${props => props.width}px;\r\n    background-color: #ffffff8b;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #464545;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #2727275a;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #00a6cf52;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `};\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `};\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb006d;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #7a270028;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { stopPreview } from \"../../../utils/melodyUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    useEffect(() => {\r\n        const info = melody.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.tune.setInstrument(soundFontPlayer);\r\n            });\r\n\r\n        // acoustic_guitar_steel\r\n        //bright_acoustic_piano\r\n        Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\r\n            { gain: 2, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.score.setPiano(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    const switchMode = () => {\r\n        state.isTune = !state.isTune;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isTune ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isTune ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isTune ? () => {\r\n\r\n        if (!state.isPreview) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        } else {\r\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    } : () => {\r\n\r\n        if (!melody.isPreview) {\r\n            dispatcher.tune.previewStart();\r\n        } else {\r\n            stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    }\r\n    const toggleEnsamble = !state.isTune ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.tune.setState(melody);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode isEnable={!isPreview}>\r\n                    <_ModeItem isActive={!state.isTune} onClick={() => {\r\n                        if (state.isTune) switchMode();\r\n                    }}>Harmony</_ModeItem>\r\n                    <_ModeItem isActive={state.isTune} onClick={() => {\r\n                        if (!state.isTune) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch onClick={preview}><_SwitchInner isActive={isPreview}>Play</_SwitchInner> / <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner></_Switch>\r\n                    <_Switch onClick={toggleEnsamble}><_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner> / <_SwitchInner isActive={isSolo}>Solo</_SwitchInner></_Switch>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    if (!isPreview) {\r\n                        switch (e.key) {\r\n                            case 'r': switchMode(); break;\r\n                        }\r\n                    }\r\n                }}>\r\n                <_SECTIONS><HarmSections /></_SECTIONS>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isTune} />\r\n                    <MelodyFrame isActive={state.isTune} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div<{\r\n    isEnable: boolean\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #e1e4ca;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #eff3cf\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, ScoreData } from \"../../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { getSymbolFromKey, KEY12_SHARP_LIST } from \"../../../utils/theoryUtils\";\r\n\r\n\r\n\r\nconst HEADER_WIDTH = 100;\r\nconst FOOTER_WIDTH = 50;\r\n\r\nconst BEAT_RATE = 50;\r\nconst PIT_HEIGTH = 10;\r\nconst START_LINE = 200;\r\nconst RATE_WIDTH = 500;\r\n\r\nconst PreviewTab = (props: {\r\n    data: ScoreData;\r\n}) => {\r\n\r\n    const chordList = props.data.chordList;\r\n    const notesList = props.data.notesList;\r\n\r\n    const areaRef = useRef<null | HTMLDivElement>(null);\r\n    const rateRef = useRef<null | HTMLDivElement>(null);\r\n    const [past, setPast] = useState(0);\r\n    const [timerId, setTimerId] = useState<null | NodeJS.Timeout>(null);\r\n\r\n\r\n    const isPlay = timerId != null;\r\n\r\n    const [jsxList, totalLen, bpm, areaWidth] = useMemo(() => {\r\n\r\n        const jsxList: JSX.Element[] = [];\r\n        const add = (pos: number, len: number, pit: number, isRight: boolean) => {\r\n            const isActive = past >= pos && past <= pos + len;\r\n            jsxList.push(<_Notes key={jsxList.length}\r\n                pos={pos}\r\n                sus={len}\r\n                pit={pit}\r\n                isRight={isRight}\r\n                isActive={isActive}\r\n            />);\r\n        }\r\n        const init = chordList[0].detail as DetailInit;\r\n        let curPos = 0;\r\n        for (let i = 0; i < chordList.length; i++) {\r\n            const chord = chordList[i];\r\n            switch (chord.type) {\r\n                case 'chord': {\r\n                    const detail = chord.detail as DetailChord;\r\n                    const backing = detail.backing;\r\n                    if (detail.root != null) {\r\n                        const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n                        const symbol = getSymbolFromKey(detail.symbolKey);\r\n                        const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n                        const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n                        if (backing.pattern == null) {\r\n                            pitchList.forEach((index) => {\r\n                                // const soundName = KEY12_SHARP_LIST[index % 12];\r\n                                // const octave = Math.floor(index / 12);\r\n                                const pit = 87 - index;\r\n                                add(curPos, len, pit, false);\r\n                            });\r\n                        } else {\r\n                            const pattern = backing.pattern;\r\n                            pattern.layers.forEach((layer, layerIndex) => {\r\n                                const startList: number[] = [];\r\n                                const normalList: number[] = [];\r\n                                let total = 0;\r\n                                layer.divs.forEach(div => {\r\n                                    startList.push(total);\r\n                                    let normal = 4 / div.rate;\r\n                                    if (div.isDot) normal *= 1.5;\r\n                                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                                    normalList.push(normal);\r\n                                    total += normal;\r\n                                });\r\n                                layer.notesList.forEach((notes) => {\r\n\r\n                                    const timingAdj = notes.status.timing * (1 / 32);\r\n                                    const start = curPos + startList[notes.x] + timingAdj;\r\n                                    const sustain = normalList[notes.x];\r\n\r\n                                    const index = pitchList[notes.y];\r\n\r\n                                    const pit = 87 - index;\r\n\r\n                                    // if (!isPlay || (start <= past + 15 && start + sustain > past)) {\r\n                                        add(start, sustain, pit, layerIndex === 1);\r\n                                    // }\r\n                                    // const soundName = KEY12_SHARP_LIST[index % 12];\r\n                                    // const octave = Math.floor(index / 12);\r\n                                    // const soundFullName = soundName + octave;\r\n\r\n                                });\r\n                            });\r\n                        }\r\n                        curPos += len;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n        const areaWidth = areaRef.current == null ? 0 : areaRef.current.clientWidth;\r\n        return [jsxList, curPos, init.bpm, areaWidth];\r\n    }, [props.data, past, isPlay]);\r\n\r\n    // const recordJsxList = useMemo(() => {\r\n    //     return jsxList;\r\n    // }, []);\r\n    const recordJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < 88; i++) {\r\n        recordJsxList.push(\r\n            <_Record key={i} pit={i} isScale={i % 2 == 0}></_Record>\r\n        );\r\n    }\r\n\r\n\r\n    const setRate = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        if (rateRef.current == null || timerId != null) return;\r\n        const rect = rateRef.current.getBoundingClientRect();\r\n        const x = e.clientX - rect.left;\r\n        console.log(x);\r\n        setPast(totalLen * x / RATE_WIDTH);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header onClick={() => {\r\n                if (timerId == null) {\r\n                    const start = new Date().getTime();\r\n                    const id = setInterval(() => {\r\n                        const time = new Date().getTime() - start;\r\n                        setPast(past + time * bpm / 60000);\r\n                        // console.log(past);\r\n                    }, 50);\r\n                    setTimerId(id);\r\n                } else {\r\n                    clearTimeout(timerId);\r\n                    setTimerId(null);\r\n                }\r\n            }}></_Header>\r\n            <_Main>\r\n                <_MainFixed>\r\n                    <_RateFrame pos={areaWidth / 2 - RATE_WIDTH / 2} ref={rateRef}\r\n                        onClick={setRate}>\r\n                        <_RateValue value={totalLen === 0 ? 0 : RATE_WIDTH * (past / totalLen)} />\r\n                    </_RateFrame>\r\n                </_MainFixed>\r\n                <_MainScroll ref={areaRef}>\r\n                    <_HarmonyBox pos={past} width={totalLen} isPlay={isPlay}>\r\n                        {recordJsxList}\r\n                        {jsxList}\r\n                    </_HarmonyBox>\r\n                    <_Line pos={START_LINE} />\r\n                </_MainScroll>\r\n            </_Main>\r\n            <_Footer></_Footer>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PreviewTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #2d3246;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #95a5ca;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH + FOOTER_WIDTH}px);\r\n    /* background-color: #2d3246; */\r\n    text-align: left;\r\n`;\r\nconst _MainScroll = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n`;\r\nconst _MainFixed = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _HarmonyBox = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n    isPlay: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: ${props => START_LINE - props.pos * BEAT_RATE}px;\r\n    width: ${props => props.width * BEAT_RATE}px;\r\n    height: ${PIT_HEIGTH * 88}px;\r\n    background-color: #ffffffb5;\r\n    ${props => props.isPlay ? '' : css`\r\n        transition: left 0.5s;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isScale: boolean;\r\n    pit: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => props.pit * PIT_HEIGTH}px;\r\n    // position: absolute;\r\n    width: 100%;\r\n    height: ${PIT_HEIGTH}px;\r\n    // background-color: ${props => props.isScale ? '#fffffff9f' : '#00ff4cf8f'};\r\n    /* background-color: #0026fc11; */\r\n    ${props => props.isScale ? '' : css`\r\n        background-color: #ffffff08;\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    pos: number;\r\n    sus: number;\r\n    pit: number;\r\n    isRight: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * BEAT_RATE}px;\r\n    top: ${props => props.pit * PIT_HEIGTH}px;\r\n    width: ${props => props.sus * BEAT_RATE}px;\r\n    height: ${PIT_HEIGTH}px;\r\n    background-color: ${props => !props.isRight ? '#ad0000e0' : '#002ca7df'};\r\n    opacity: 0.3;\r\n    ${props => !props.isActive ? '' : css<{\r\n    isRight: boolean;\r\n}>`\r\n        opacity: 1;\r\n        background-color: ${props => !props.isRight ? '#ff4242df' : '#4677ffdf'};\r\n        box-shadow: 0 0 14px 0 #ffffff46;\r\n    `}\r\n`;\r\n\r\nconst _Line = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos - 1}px;\r\n    height: ${PIT_HEIGTH * 88}px;\r\n    background-color: white;\r\n    width: 3px;\r\n`;\r\n\r\nconst _RateFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    left: ${props => props.pos}px;\r\n    bottom: 20px;\r\n    width: ${RATE_WIDTH}px;\r\n    height: 25px;\r\n    background-color: #000000;\r\n    border: solid 1px #000;\r\n    box-sizing: border-box;\r\n    opacity: 0.7;\r\n`;\r\nconst _RateValue = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: ${props => props.value}px;\r\n    height: 100%;\r\n    background-color: #afe7e9;\r\n`;\r\n\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${FOOTER_WIDTH}px;\r\n    background-color: #5a5e72;\r\n    text-align: left;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\nimport PreviewTab from \"./preview/previewTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    // { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    { name: 'Preview', disable: !isAccept, cont: store.scoreData.chordList.length === 0 ? <></> : <PreviewTab data={store.scoreData} /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DegreeProps, getSymbolFromKey, IntervalRelationProps, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    sampler.releaseAll();\r\n\r\n                    const symbol = getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, disable: true, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, disable: true, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, disable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, disable: true, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { GlobalContext } from './systemEntry';\r\n\r\nconst Splash = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                dispatcher.system.switchSplashToMain();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n        <_Wrap isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Title>\r\n                <span>L</span>iCreSia\r\n            </_Title>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Wrap = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    /* width: 500px;\r\n    height: 500px; */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #d8d8d8; */\r\n    background: radial-gradient(#868686, #ffffff);\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 15%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    background-color: #ffffff1f;\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\n\r\nconst TotalHeader = () => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport SysModalDialog from '../dialog/sysModalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> : <Splash />}\r\n                <_Wrap>\r\n                    <SysModalDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}