{"version":3,"sources":["system/redux/reducer.tsx","system/utils/soundUtils.tsx","system/redux/dispatcher/dispatcher.tsx","system/utils/toneUtil.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/utils/systemConst.tsx","system/contents/dialog/sysModalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/base/design/styles.tsx","system/base/components/button/executableButton.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/input/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChange.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcChange.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/noteSideForm.tsx","system/contents/score/edit/harmonize/timeline/blockItem.tsx","system/contents/score/edit/harmonize/timeline/harmTimeline.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/score/edit/harmonize/initial/initialBeat.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternStatus.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/pitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionType","ROOT_ALL","index","isFlat","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","getDegreeRoot","props","KEY12_FLAT_LIST","KEY12_SHARP_LIST","getChordRoot","baseKeyIndex","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SYMBOL_LIST","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_LIST","root","symbolKey","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","getSymbolFromKey","ret","find","symbol","undefined","getSymbolDerives","list","forEach","push","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","Dispatcher","dispatch","system","setState","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","score","setScoreTabIndex","scoreTabIndex","setScoreState","setKeySwitch","keySwitch","state","setScoreData","moveElement","isNext","sub","chordList","focusIndex","moveSection","curSectionIndex","elementCacheList","sectionNo","sectionCacheList","curSectionInfo","curElementType","length","rangeIndexStart","rangeIndexEnd","incrementDegreeRoot","isUp","data","detail","includes","incrementBeatLen","slice","beatLen","incrementMinuteVal","isTail","value","target","minute","tail","head","addChordElement","element","initialBeat","on","backing","voicingList","pattern","splice","addSectionElement","labelName","addChangeElement","changeType","modulateRelation","domminantValue","keyAdjust","tempoRelation","tempoDiff","tempoRate","tempoAbsolute","beatSignature","removeCurElement","cache","wrapRef","reffers","wrap","body","style","opacity","overflow","width","clientWidth","setTimeout","incrementSymbol","setDiatonicChord","chord","setDefaultBacking","struct","octave","getDefaultBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","tune","setNotesList","notesList","setInstrument","soundfontPlayer","openBackingEditor","hideMenu","voicingTable","getInitVoicingTable","chordInfo","chordRoot","closeBackingEditor","table","Array","i","col","j","a","voicing","applyBackingToChord","getChannels","channels","structIndex","this","initialStore","userEnv","keyConfig","note","prevElement","nextElement","prevSection","nextSection","addChord","addSection","addChange","deleteCur","editMode","incRoot","decRoot","incBeat","decBeat","symbolMode","colorProps","entryBackground","dialogMode","isTune","quantize","sampler","Sampler","toDestination","harmonize","melody","measure","pitch","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","SysModalDialog","useContext","GlobalContext","isDisplay","dispatcher","_Blind","_Frame","styled","div","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","map","tab","icon","isActive","isDisable","disable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","onClick","_Icon","_Label","ChannelContents","_Contents","css","TabbedPane","TabLabel","_TabLabel","TabContents","_Object","ExecutableButton","size","get","height","fontSize","_Wrap","backgroundColor","callback","labelText","ManageTab","keyIndex","bpm","scale","timeSignature","fixed","SymbolEditor","curSymbol","baseSymbol","derives","parentJsx","curJsx","childrenJsx","_Header","item","_Row","CalcChord","symbolName","bar","prevCache","isError","beat","chordName","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","Math","round","pastSecond","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","floor","beatSum","barRem","_Len","_Border","ElementDetailChange","_Type","ElementDetailChord","degreeRoot","degreeOn","useMemo","_Degree","isSwitch","isCurrent","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Tip","jsxList","lenType","valueType","abs","_TipItem","ElementFixedBorder","reverse","ElementDetailInit","_Title","_Value","_Record","ElementDetailSection","CalcChange","ScoreElement","useRef","bodyRef","current","isFocus","isSameSection","chordDetail","ref","isSelectable","isInactive","isChord","_Head","_CurKey","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","num","_Note","NoteBasicInput","e","config","curType","releaseAll","rootIndex","interval","soundFullName","triggerAttack","playChord","Number","NoteKeySwitch","isPress","isElement","backingEditorInput","NoteKeyDown","SideFormChord","beatItemsJsx","isExist","_BeatItem","rootItemsJsx","isRootActive","JSON","stringify","isOnActive","_RootItem","isDiatonic","onContextMenu","symbolItemsJsx","_SymbolItem","_Timing","_LabelBeat","_Minute","_LabelMinute","_MinuteItem","isReverse","step","min","max","onChange","_Root","_Symbol","input","SideFormInit","scaleItemJsxList","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_TempoWrap","currentTarget","valueAsNumber","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","toString","_NumberItem","_DirectText","_TemplateFrame","_NumberFrame","_ItemBase","NoteSideForm","BlockItem","cur","curChord","curLength","HarmTimeline","scrollRef","dataList","blockItemJsxList","_Blocks","_Measure","ChordInfo","structJsxList","tipJsxList","relation","getIntervalValues","_InfoItem","isBlack","isUse","_Info","_Struct","WIDTH","InitialBeatTip","_WrapTip","PatternTable","stripeJsx","isEven","_Layer","zIndex","PatternBuilder","_LengthDiv","_MeasureDiv","_Body","_Footer","PATTERN_HEADER_HEIGHT","ChannelItem","_Option","PatternChannel","channelJsxList","channel","soundIndex","PatternStatus","createItem","isEnable","sizeJsxList","_ListItem","_List","select","option","PatternFrame","isUsePattern","update","_UseSwitch","_Button","defaultLayer","noteDivList","rate","isHalf","isDiv3","velocityList","lenIndex","isUsePedal","layers","_Main","_StatusDiv","_MainDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","voicingLaneJsxList","isSelected","chordIndex","_VoicingItem","tempChannels","_VoicingLane","_Left","_Right","TIP_WIDTH","BackingEditorFrame","_FooterDiv","HarmHideFrame","isOpen","HarmonizeTab","init","focus","prevBeat","totalBeat","prevMinute","totalMinute","sectionBeatSum","beatRate","getBeatRate","tabIndex","onKeyDown","onKeyUp","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_HEAD_WIDTH","HarmSections","sections","curSectionNo","section","_Total","TuneKeySwitch","MelodyKeyDown","MelodyTimeline","measureRef","chordRef","barLength","beatWidth","timelineLength","mouseMeasurePos","measureJsxList","barJsx","_Bar","_Scale","isHead","chordJsxList","_ChordItem","_ChordWrap","_MousePos","left","PitchList","pitchItemJsxList","structIndexList","soundName","getOctaveName","_PitchItem","isScale","isStruct","mousePitchIndex","instrument","stop","play","duration","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","QuantizeSwitch","MelodyHeader","_QuantizeSelector","_InstrumentSelector","MelodyFrame","tableRef","pitchRef","isPut","setPut","x","y","lock","setLock","setWidth","nextLeft","setNextLeft","side","isResize","notesState","setNotesState","setCurChord","setMousePitchIndex","setMouseMeasurePos","Soundfont","AudioContext","gain","release","then","soundFontPlayer","notesJsxList","notes","_NotesWrap","posX","isEdit","rect","getBoundingClientRect","clientY","scrollTop","top","pitchIndex","_Notes","_Timeline","_Pitch","_TableWrap","onScroll","scrollLeft","scrollTo","_TableMeasure","_TablePitch","_TableNotes","onMouseDown","button","clientX","next","onMouseMove","normalX","searchedChord","right","onMouseUp","sort","b","_Test","EditTab","switchMode","_Mode","_ModeItem","_Buttons","_SECTIONS","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","label","items","degree","degreeRootName","chordRootName","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","clearTimeout","fadeIn","keyframes","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","span","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","Provider","App","document","oncontextmenu","window","addEventListener","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.427e937a.chunk.js","sourcesContent":["import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.tuneState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature } from \"../redux/store/scoreData\";\r\n\r\nexport type DegreeProps = {\r\n    index: number;\r\n    isFlat: boolean;\r\n};\r\n\r\nexport type ChordProps = {\r\n    root: DegreeProps;\r\n    symbolKey: SymbolKey;\r\n};\r\n\r\nexport const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n    null,\r\n    { index: 0, isFlat: false },\r\n    { index: 1, isFlat: false },\r\n    { index: 1, isFlat: true },\r\n    { index: 2, isFlat: false },\r\n    { index: 3, isFlat: false },\r\n    { index: 3, isFlat: true },\r\n    { index: 4, isFlat: false },\r\n    { index: 5, isFlat: false },\r\n    { index: 6, isFlat: false },\r\n    { index: 6, isFlat: true },\r\n    { index: 7, isFlat: false },\r\n    { index: 8, isFlat: false },\r\n    { index: 8, isFlat: true },\r\n    { index: 9, isFlat: false },\r\n    { index: 10, isFlat: false },\r\n    { index: 10, isFlat: true },\r\n    { index: 11, isFlat: false }\r\n];\r\n\r\n\r\nexport const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\n// export const DEGREE12_FLAT_LIST = [\r\n//     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n// ];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const getDegreeRoot = (props: DegreeProps) => {\r\n    const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n    return list[props.index];\r\n}\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\n\r\nexport const getChordRoot = (props: DegreeProps, baseKeyIndex: number) => {\r\n    const list = props.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n    return list[(baseKeyIndex + props.index) % 12];\r\n}\r\n\r\n\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\n// export const KEY12_MINOR_SCALE_LIST = [\r\n//     'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'Bbm', 'Bm'\r\n// ];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n];\r\n\r\nexport type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\nexport type SymbolKey =\r\n    'major' |\r\n    'minor' |\r\n    'suspend4th' |\r\n    'diminish' |\r\n    'augument' |\r\n    'major-maj7th' |\r\n    'major-min7th' |\r\n    'minor-7th' |\r\n    'minor-maj7th' |\r\n    'sus4-7th' |\r\n    'diminish-7th' |\r\n    'augument-7th' |\r\n    'major-add9th' |\r\n    'minor-add9th' |\r\n    'sixth-9th' |\r\n    'minor-minus5' |\r\n    'minor7-minus5' |\r\n    'major-maj9th' |\r\n    'major-9th'\r\n    ;\r\n\r\n\r\nexport type SymbolAttribute =\r\n    'triad' |\r\n    'seventh' |\r\n    'add9th'\r\n    ;\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey;\r\n    name: string;\r\n    base: null | SymbolKey;\r\n    attr?: SymbolAttribute;\r\n    structs: IntervalRelation[];\r\n}\r\n\r\nexport const SYMBOL_LIST: readonly SymbolParams[] = [\r\n    {\r\n        key: 'major', name: '',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor', name: 'm',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'suspend4th', name: 'sus4',\r\n        base: null,\r\n        structs: ['p1', 'p4', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish', name: 'dim',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish-7th', name: 'dim7',\r\n        base: 'diminish',\r\n        structs: ['p1', 'm3', 'd5', 'd7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'augument', name: 'aug',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'a5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'augument-7th', name: 'aug7',\r\n        base: 'augument',\r\n        structs: ['p1', 'M3', 'a5', 'm7']\r\n    },\r\n    {\r\n        key: 'minor-minus5', name: 'm(-5)',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor7-minus5', name: 'm7(-5)',\r\n        base: 'minor-minus5',\r\n        structs: ['p1', 'm3', 'd5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-maj7th', name: 'maj7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-min7th', name: '7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'minor-7th', name: 'm7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'sus4-7th', name: '7sus4',\r\n        base: 'suspend4th',\r\n        structs: ['p1', 'p4', 'p5']\r\n    },\r\n    {\r\n        key: 'minor-maj7th', name: 'mmaj7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-add9th', name: 'add9',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'minor-add9th', name: 'madd9',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-maj9th', name: 'maj9',\r\n        base: 'major-maj7th',\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-9th', name: '9',\r\n        base: 'major-min7th',\r\n        structs: ['p1', 'm3', 'p5']\r\n    },\r\n];\r\n\r\nexport type IntervalRelation =\r\n    'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n    'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n    'd7' | 'm7' | 'M7'\r\n    ;\r\n\r\nexport const IntervalRelationProps = {\r\n    'p1': 0,\r\n    'm2': 1,\r\n    'M2': 2,\r\n    'm3': 3,\r\n    'M3': 4,\r\n    'p4': 5,\r\n    'd5': 6,\r\n    'p5': 7,\r\n    'a5': 8,\r\n    'm6': 8,\r\n    'M6': 9,\r\n    'd7': 9,\r\n    'm7': 10,\r\n    'M7': 11\r\n}\r\n\r\nexport const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n    { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n];\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n];\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    'bⅢ', 'bⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    'bⅥ', 'bⅥM7',\r\n    'bⅦ', 'bⅦ7'\r\n];\r\n\r\nexport const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n    const ret = SYMBOL_LIST.find((symbol) => {\r\n        if (key === symbol.key) {\r\n            return symbol;\r\n        }\r\n    });\r\n    return ret != undefined ? ret : SYMBOL_LIST[0];\r\n}\r\n\r\nexport const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n    let list: SymbolKey[] = [];\r\n    SYMBOL_LIST.forEach((symbol) => {\r\n        if (key === symbol.base) {\r\n            list.push(symbol.key);\r\n        }\r\n    });\r\n    return list;\r\n}\r\n\r\nexport const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n    return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n}\r\n\r\nexport const getBeatRate = (beatSignature: BeatSignature): [number, number] => {\r\n\r\n    switch (beatSignature) {\r\n        case '4/4': return [4, 4];\r\n        case '3/4': return [3, 4];\r\n    }\r\n    return [0, 0];\r\n}","import { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SymbolKey } from \"../../utils/soundUtils\";\r\nimport { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { ChordElement, DetailChange, DetailChord, DetailSection, ScoreData, TuneNotes, VoicingProps } from \"../store/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { TuneState } from \"../store/tuneState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { BackingState, ChannelParam } from \"../store/backingState\";\r\nimport { getDefaultBacking } from \"../../utils/toneUtil\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            // alert(`totalSection=${sectionCacheList.length}, curSection=${curSectionIndex}, focus=${state.focusIndex}`);\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[this.store.scoreState.focusIndex];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -0.5 && target <= 0.5) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: state.initialBeat,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        addChangeElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'change', detail: {\r\n                    changeType: null,\r\n                    modulateRelation: null,\r\n                    domminantValue: 0,\r\n                    keyAdjust: 0,\r\n                    tempoRelation: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbsolute: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailChange\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            const element = this.store.scoreData.chordList[state.focusIndex];\r\n            const sectionNo = this.store.scoreState.elementCacheList[state.focusIndex].sectionNo;\r\n            if (element.type === 'section' && sectionNo === 0) {\r\n                return;\r\n            }\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // reffer.style.width = '300px';\r\n            wrapRef.style.opacity = '0';\r\n            wrapRef.style.overflow = 'hidden';\r\n            // wrapRef.style.padding = '0';\r\n            wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            setTimeout(() => {\r\n                wrapRef.style.width = '0';\r\n            }, 1);\r\n            setTimeout(() => {\r\n                wrapRef.style.opacity = '';\r\n                wrapRef.style.width = '';\r\n                wrapRef.style.overflow = '';\r\n                // wrapRef.style.padding = '';\r\n                const data = this.store.scoreData;\r\n                data.chordList.splice(state.focusIndex, 1);\r\n                this.score.setScoreData(data);\r\n                state.focusIndex--;\r\n                this.score.setScoreState(state);\r\n                // setTimeout(() => {\r\n                //     reffer.style.opacity = '';\r\n                //     reffer.style.width = '';\r\n                //     const data = this.store.scoreData;\r\n                //     data.chordList.splice(state.focusIndex, 1);\r\n                //     this.score.setScoreData(data);\r\n                // }, 200);\r\n            }, 200);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (key: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const chord = DIATONIC_MAJOR_SCALE_LIST[key];\r\n            detail.root = { ...chord.root };\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public tune = {\r\n\r\n        setState: (tuneState: TuneState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    symbolKey: detail.symbolKey,\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    chordRoot: (detail.root as DegreeProps).index\r\n                },\r\n                voicingTable,\r\n                pattern: null\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setState: (backingState: BackingState) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const a = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = a != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        applyBackingToChord: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const backingState = this.store.backingState as BackingState;\r\n            const table = backingState.voicingTable;\r\n            const backing = detail.backing;\r\n            backing.voicingList.length = 0;\r\n            if (table != null) {\r\n                for (let i = 0; i < table.length; i++) {\r\n                    for (let j = 0; j < table[i].length; j++) {\r\n                        if (table[i][j]) {\r\n                            backing.voicingList.push({ octave: i, struct: j });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            detail.backing = backing;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        getChannels: (table: boolean[][]): ChannelParam[] => {\r\n            const channels: ChannelParam[] = [];\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        channels.push({ octave: i, structIndex: j });\r\n                    }\r\n                }\r\n            }\r\n            return channels;\r\n        }\r\n    }\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SymbolAttribute } from \"./soundUtils\";\r\n\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\nexport const playChord = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n        // setTimeout(() => {\r\n        //     sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n        // }, 20 * i);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 }\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 }\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 }\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null\r\n    };\r\n    return backing;\r\n}","import { instrument } from \"soundfont-player\"\r\nimport { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/toneUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./scoreData\"\r\nimport { ScoreState } from \"./scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { TuneState } from \"./tuneState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { MutableRefObject } from \"react\"\r\nimport { BackingState } from \"./backingState\"\r\n\r\n\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState;\r\n    tuneState: TuneState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        dialogMode: 'none'\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        isTune: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        keySwitch: {\r\n            editMode: false,\r\n            symbolMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n    },\r\n    tuneState: {\r\n        focusIndex: -1,\r\n        quantize: 4\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        sampler: getDefaultSampler(),\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    }\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note : {\r\n        prevElement: string;\r\n        nextElement: string;\r\n        prevSection: string;\r\n        nextSection: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        editMode: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        symbolMode: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = ()=> {\r\n    return {\r\n        note: {\r\n            prevElement: 'ArrowLeft',\r\n            nextElement: 'ArrowRight',\r\n            prevSection: 'ArrowUp',\r\n            nextSection: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'f',\r\n            deleteCur: 'Delete',\r\n            editMode: 'Shift',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n            symbolMode: 'c',\r\n        }\r\n    } as KeyConfig;\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 430;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 60;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SysModalDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const mode = store.systemState.dialogMode;\r\n    const isDisplay = mode !== 'none';\r\n\r\n    return (\r\n        <_Blind isDisplay={isDisplay}>\r\n            <_Frame>\r\n\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default SysModalDialog;\r\n\r\nconst _Blind = styled.div<{\r\n    isDisplay: boolean;\r\n}>`\r\n    display: ${props => props.isDisplay ? 'block' : 'none'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000000d8;\r\n    z-index: 10;\r\n`;\r\nconst _Frame = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 500px;\r\n    height: 400px;\r\n    background-color: #464646cc;\r\n    border: 1px solid #dadada;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport { BUTTON_LARGE_HEIGHT, BUTTON_MIDIUM_HEIGHT, BUTTON_SMALL_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { _Object } from \"../../design/styles\";\r\n\r\nexport type ButtonSize = 'small' | 'midium' | 'large';\r\n\r\nexport interface ExecutableButtonProps {\r\n    labelText: JSX.Element;\r\n    size: ButtonSize;\r\n    width: number;\r\n    callback?: ()=>void;\r\n}\r\n\r\nexport const ExecutableButton = (props: ExecutableButtonProps) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const get = () => {\r\n        switch(props.size) {\r\n            case \"small\": return [BUTTON_SMALL_HEIGHT, 18];\r\n            case \"midium\": return [BUTTON_MIDIUM_HEIGHT, 18];\r\n            case \"large\": return [BUTTON_LARGE_HEIGHT, 18];\r\n        }\r\n    };\r\n    const [height, fontSize] = get();\r\n\r\n    return (\r\n        <_Wrap\r\n            width={props.width} height={height}\r\n            fontSize={fontSize}\r\n            backgroundColor={store.userEnv.colorProps.entryBackground}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelText}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nconst _Wrap = styled(_Object) <{\r\n    width: number;\r\n    height: number;\r\n    fontSize: number;\r\n    backgroundColor: string;\r\n}>`\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    ${props => {\r\n        if (props.width === 0) {\r\n            return css`\r\n                padding-left: 10px;\r\n                padding-right: 10px;\r\n            `;\r\n        } else {\r\n        }\r\n            return css`width: ${props.width}px`;\r\n    }};\r\n    height: ${props => props.height}px;\r\n    /* background-color: ${props => props.backgroundColor}; */\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    /* box-shadow: 2px 2px 2px 2px #000b3a1a; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        background: linear-gradient(to bottom, #f5efef, #c7afaf, #f5efef);\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <ExecutableButton labelText={<>Blank</>} size={'midium'} width={100} callback={() => {\r\n\r\n                const data: ScoreData = {\r\n                    chordList: [\r\n                        { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' } as DetailInit },\r\n                        { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                        { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                        {\r\n                            type: 'chord', detail: {\r\n                                beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                backing: {\r\n                                    voicingList: [],\r\n                                    pattern: null\r\n                                }\r\n                            } as DetailChord\r\n                        },\r\n                        { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                    ],\r\n                    notesList: []\r\n                };\r\n                dispatcher.score.setScoreData(data);\r\n                store.scoreState.focusIndex = 2;\r\n                dispatcher.score.setScoreState({ ...store.scoreState });\r\n\r\n                dispatcher.score.setScoreTabIndex(1);\r\n                // dispatcher.score.setScoreTabIndex(2);\r\n            }} />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d6e5f1;\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/scoreState\";\r\nimport { getSymbolDerives as getSymbolDerives, getSymbolFromKey, SymbolKey, SymbolParams, SYMBOL_LIST } from \"../../../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = getSymbolFromKey(detail.symbolKey) as SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: SymbolKey[] = [];\r\n        const parentLine: SymbolKey[] = [];\r\n        const childrenLine: SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = getSymbolDerives(baseSymbol.key);\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = getSymbolDerives(curSymbol.key);\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../../redux/store/scoreState\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../../../utils/soundUtils\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        bar = cache.bar + 1;\r\n    }\r\n    const isError = bar !== -1 && cache.beat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n    }\r\n\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.beat === 0 ? <>&nbsp;</> : cache.beat}\r\n                        {/* {` (+0.25)`} */}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : ` (${cache.minute})`}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailChange } from \"../../../../../../redux/store/scoreData\";\r\n\r\nconst ElementDetailChange = (props: {\r\n    detail: DetailChange;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                Modulation\r\n            </_Type>\r\n            <_Detail>\r\n                Domm+1\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { DIATONIC_MAJOR_SCALE_DEGREE_NAMES, getChordRoot, getDegreeRoot, getSymbolFromKey, ScaleRelation } from \"../../../../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 0.5 | 0.25;\r\n\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isCurrent: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const minute = props.detail.minute;\r\n\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() =>\r\n        <_Wrap>\r\n            <_Degree\r\n                isSwitch={keySwitch.editMode && props.isCurrent}\r\n                scaleRelation={degreeRoot != null && DIATONIC_MAJOR_SCALE_DEGREE_NAMES.includes(degreeRoot + symbolName) ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={keySwitch.editMode && props.isCurrent}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n        </_Wrap>\r\n        , [\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            state.keySwitch.editMode,\r\n            cache.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 28px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 20px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #422e3099;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 0.5 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 0.25 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;","import styled from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    const jsxList: JSX.Element[] = [];\r\n    jsxList.push(<_Border key={0} />);\r\n    jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    /* border: 1px solid #00000083; */\r\n    background-color: #c2c2c237;\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n    height: 100%;\r\n    background-color: #00000078;\r\n    vertical-align: middle;\r\n`;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #1b003d6f;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST } from \"../../../../../../utils/soundUtils\";\r\n\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.timeSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst ElementDetailSection = (props: {\r\n    index: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>{curSection.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChange = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>Key</_Type>\r\n            <_Detail>C→Am</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { ElementType, useContext, useEffect, useRef } from \"react\";\r\nimport { CgDetailsLess } from \"react-icons/cg\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TypeElement } from \"typescript\";\r\nimport { DetailChange, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_SHARP_LIST } from \"../../../../../utils/soundUtils\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SymbolEditor from \"../input/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailChange from \"./form/elementDetailChange\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcChange from \"./calc/calcChange\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = store.scoreState;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        dispatcher.score.setScoreState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    // if (props.index > state.elementCacheList.length - 1) {\r\n    //     return <></>;\r\n    // }\r\n\r\n    const isFocus = state.focusIndex === props.index;\r\n    const isSameSection = state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n    return (\r\n        <_Wrap\r\n            ref={wrapRef}\r\n            isSelectable={element.type !== 'fixed'}\r\n            isActive={isFocus}\r\n            isInactive={!isSameSection}\r\n            isChord={element.type === 'chord'}\r\n        >\r\n            <_Head>\r\n                {element.type !== 'chord' ? <></> : (\r\n                    <_CurKey>{KEY12_SHARP_LIST[cache.keyIndex]}</_CurKey>\r\n                )}\r\n            </_Head>\r\n\r\n            {/* 要素の入力フォーム */}\r\n            {['init', 'chord', 'section', 'change'].includes(element.type) ? (\r\n                <_Form\r\n                    ref={bodyRef}\r\n                    isActive={isFocus}\r\n                    isInactive={!isSameSection}\r\n                    type={element.type}\r\n                    isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                    onClick={() => {\r\n                        if (element.type === 'fixed') {\r\n                            return;\r\n                        }\r\n                        state.focusIndex = props.index;\r\n                        dispatcher.score.setScoreState(state);\r\n                    }}\r\n                >{(() => {\r\n                    switch (element.type) {\r\n                        case 'init': {\r\n                            const detail = element.detail as DetailInit;\r\n                            return (<ElementDetailInit detail={detail} />);\r\n                        }\r\n                        case 'section': {\r\n                            const detail = element.detail as DetailSection;\r\n                            return (<ElementDetailSection index={props.index} />);\r\n                        }\r\n                        case 'chord': {\r\n                            const detail = element.detail as DetailChord;\r\n                            return (<ElementDetailChord detail={detail} isCurrent={isFocus} />);\r\n                        }\r\n                        case 'change': {\r\n                            const detail = element.detail as DetailChange;\r\n                            return (<ElementDetailChange detail={detail} />);\r\n                        }\r\n                    }\r\n                })()}\r\n                </_Form>\r\n            ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n            {/* 入力フォーム下部の計算によって出力される情報 */}\r\n            {\r\n                element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                    element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                        element.type === 'change' ? (<CalcChange index={props.index} />) :\r\n                            <></>\r\n            }\r\n            <>{!(isCurrent && chordDetail != null && chordDetail.root != null && store.scoreState.keySwitch.symbolMode) ? '' :\r\n                <SymbolEditor />\r\n            }</>\r\n            {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                <_Operations>\r\n                    <_OperationItem>-</_OperationItem>\r\n                    <_OperationItem onClick={() => dispatcher.score.addChordElement()}>+</_OperationItem>\r\n                </_Operations>\r\n            )}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    border: solid 1px #00000049;\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #ff000084;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #006823a7;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'change' ? '' : css`\r\n        border: solid 1px #1800a1a7;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 6px;\r\n    ${props => props.isInactive ? '' : css`\r\n        background-color: #ebebeb84;\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #d85cce5a;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isChord: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isChord ? '' : css`\r\n        background-color: #e4ecd039;\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #fffb0018;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\nimport SymbolEditor from \"./input/symbolEditor\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const num = store.scoreData.chordList.length;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (store.scoreState.elementCacheList.length === num) {\r\n        for (let i = 0; i < num; i++) {\r\n            list.push(\r\n                <ScoreElement key={i} index={i} />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Frame> */}\r\n            <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note>\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #dde2ec;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #f1f1f1;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { playChord } from \"../../../../../utils/toneUtil\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                    playChord(store.instruments.sampler, detail, 100);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    dispatcher.backing.openBackingEditor();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.prevElement: {\r\n            dispatcher.score.moveElement(false);\r\n        }\r\n            break;\r\n        case config.nextElement: {\r\n            dispatcher.score.moveElement(true);\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.prevSection: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.nextSection: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'f': {\r\n            dispatcher.score.addChangeElement();\r\n        }\r\n            break;\r\n        case 'f': {\r\n            dispatcher.score.addChangeElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case '1':\r\n        case '2':\r\n        case '3':\r\n        case '4':\r\n        case '5':\r\n        case '6':\r\n        case '7': {\r\n            dispatcher.score.setDiatonicChord(Number(e.key) - 1);\r\n        }\r\n            break;\r\n    }\r\n}","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { playChord } from \"../../../../../utils/toneUtil\";\r\nimport { backingEditorInput } from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    if (store.scoreState.hideMenu === 'none') {\r\n        if (isElement) {\r\n            if (keySwitch.editMode) {\r\n                switch (e.key) {\r\n                    case config.decRoot: {\r\n                        dispatcher.score.incrementDegreeRoot(false);\r\n                    }\r\n                        break;\r\n                    case config.incRoot: {\r\n                        dispatcher.score.incrementDegreeRoot(true);\r\n                    }\r\n                        break;\r\n                    case config.decBeat: {\r\n                        dispatcher.score.incrementBeatLen(false);\r\n                    }\r\n                        break;\r\n                    case config.incBeat: {\r\n                        dispatcher.score.incrementBeatLen(true);\r\n                    }\r\n                        break;\r\n                    case 'A': dispatcher.score.incrementMinuteVal(false, -0.25); break;\r\n                    case 'S': dispatcher.score.incrementMinuteVal(false, 0.25); break;\r\n                    case 'D': dispatcher.score.incrementMinuteVal(true, -0.25); break;\r\n                    case 'F': dispatcher.score.incrementMinuteVal(true, 0.25); break;\r\n                }\r\n            } else if (keySwitch.symbolMode) {\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.symbol.toNext(false);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.symbol.toNext(true);\r\n                    }\r\n                        break;\r\n                    case 'ArrowLeft': {\r\n                        dispatcher.symbol.toBase();\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        dispatcher.symbol.toDerive();\r\n                    }\r\n                        break;\r\n                }\r\n            } else {\r\n                NoteBasicInput(e, store, dispatcher);\r\n            }\r\n        }\r\n    } else if (store.scoreState.hideMenu === 'backing') {\r\n        backingEditorInput(e, store, dispatcher);\r\n    }\r\n}\r\n\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    if (store.scoreState.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case config.editMode: {\r\n                keySwitch.editMode = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.symbolMode: {\r\n                keySwitch.symbolMode = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { playChord } from \"../../../../../utils/toneUtil\";\r\n\r\nexport const backingEditorInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n    \r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    switch (e.key) {\r\n        case 'b': {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ROOT_ALL, getChordRoot, getDegreeRoot, SYMBOL_LIST } from \"../../../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport MinuteForm from \"./minuteForm\";\r\n\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    \r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i} isExist={isExist} onClick={() => {\r\n                const data = store.scoreData;\r\n                data.chordList = data.chordList.slice();\r\n                detail.beatLen = (i + 1);\r\n                data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={root != null && [0, 2, 4, 5, 7, 9, 11].includes(root.index)}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {getDegreeRoot(root)} ({getChordRoot(root, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_LabelBeat>{'Beat Length'}</_LabelBeat>\r\n                <_Beat>\r\n                    {beatItemsJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    <_LabelMinute>{'Minute Head'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={true} /> */}\r\n                    <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                    <_LabelMinute>{'Minute Tail'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_Root>\r\n                    {rootItemsJsx}\r\n                </_Root>\r\n                <_Symbol\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_Symbol>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _LabelBeat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #c50000; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100px;\r\n    text-align: left;\r\n    background-color: #9c93b9;\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 2px;\r\n        width: calc(100% - 4px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #a8a687d2, #fff56cd3, #a8a687d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 75px;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _LabelMinute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #222222;\r\n    text-align: center;\r\n`;\r\n// const _Minutetem = styled.div<{\r\n//     isExist: boolean;\r\n// }>`\r\n//     display: inline-block;\r\n//     width: 20%;\r\n//     height: 20px;\r\n//     text-align: left;\r\n//     background-color: #4c3696;\r\n//     font-size: 18px;\r\n//     font-weight: 600;\r\n//     color: #ce0000;\r\n//     line-height: 12px;\r\n//     text-align: center;\r\n\r\n//     & span{\r\n//         display: inline-block;\r\n//         margin: 2px 0 0 2px;\r\n//         width: calc(100% - 4px);\r\n//         height: calc(100% - 4px);\r\n//         background-color: #9b8585;\r\n//         ${props => !props.isExist ? '' : css`\r\n//             /* background-color: #ebf37eb7; */\r\n//             background: linear-gradient(to bottom, #bdb652d2, #fff56cd3, #bdb652d2);\r\n//         `}\r\n//     }\r\n// `;\r\nconst _MinuteItem = styled.input<{\r\n    isReverse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: 20px;\r\n    color: #3b51d1;\r\n    ${props => !props.isReverse ? '' : css`\r\n        transform: rotateY(180deg);\r\n    `}\r\n`;\r\n\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 360px;\r\n    text-align: left;\r\n    background-color: #78b48c;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Root = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #f0ee84;\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #ff6060bd;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #ff9090bc;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #90d3ffbb;`}\r\n    }\r\n`;\r\n\r\nconst _Symbol = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 90px);\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #99e07d;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isActive ? '' : css`background-color: #ff6060bd;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #ff9090bc;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST } from \"../../../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const scaleItemJsxList: JSX.Element[] = ['major', 'minor'].map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n\r\n    const rateItemJsxList: JSX.Element[] = ['4/4', '3/4'].map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.timeSignature === item} onClick={() => {\r\n                detail.timeSignature = item as BeatSignature;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            <_TempoWrap>\r\n                <input\r\n                    type=\"number\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n                <input\r\n                    type=\"range\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n            </_TempoWrap>\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    margin: 5px 0 0 0;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        ['Intro', 'A-mero', 'B-mero', 'Sabi', 'C-mero', 'Outro'].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={()=>{\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        [1, 2, 3, 4].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item.toString()) !== -1;\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}>\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n            <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #b89b9b;\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 24px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: 60%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: 40%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #61b4b0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst NoteSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'change': return <></>;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default NoteSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { TIMELINE_BEAT_WIDTH } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst BlockItem = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const cur = dataList[props.index];\r\n    const curChord = cur.type !== 'chord' ? null : cur.detail as DetailChord;\r\n    const curLength = curChord == null ? 0 : curChord.beatLen;\r\n\r\n    return (\r\n        <_Wrap length={curLength} isFocus={state.focusIndex === props.index}>\r\n\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default BlockItem;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n    length: number;\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 100%;\r\n    width: ${props => props.length * TIMELINE_BEAT_WIDTH - 2}px;\r\n    border: 1px solid #3b3b3b;\r\n    background-color: #b6b6b6;\r\n    ${props => !props.isFocus ? '' : css`background-color: #e2e2e2;`}\r\n    box-sizing: border-box;\r\n    margin: 1px;\r\n    transition: width 0.1s;\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { TIMELINE_BEAT_WIDTH } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport BlockItem from \"./blockItem\";\r\n\r\nconst HarmTimeline = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    /** スクロールエリアのRef */\r\n    const scrollRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n\r\n    const blockItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n\r\n        dataList.forEach((data, i) => {\r\n            switch (data.type) {\r\n                case 'chord': {\r\n                    list.push(\r\n                        <BlockItem key={list.length} index={i}/>\r\n                    );\r\n                }\r\n                    break;\r\n            }\r\n        });\r\n        return list;\r\n    }, [dataList.length]);\r\n\r\n    useEffect(()=> {\r\n        // scrollRef.current.scrollTo({ left: total * MEM_WIDTH - FIXED_BLANK, behavior: 'smooth' });\r\n    }, [state.focusIndex]);\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <_Wrap ref={scrollRef}>\r\n            <_Blocks>{blockItemJsxList}</_Blocks>\r\n            <_Measure>\r\n\r\n            </_Measure>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmTimeline;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    overflow-x: hidden;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 46px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(221, 221, 221);\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: 50px;\r\n    /* background-color: rgb(253, 250, 236); */\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgba(0, 0, 0, 0.349));\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { getIntervalValues, getSymbolFromKey, IntervalRelationProps } from \"../../../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = getIntervalValues((root.index + cache.keyIndex) % 12, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        for (let i = 0; i < 14; i++) {\r\n            structJsxList.push(\r\n                <_Item key={structJsxList.length} isBlack={false} index={i} isUse={structs.includes(structJsxList.length)}></_Item>\r\n            );\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isUse={structs.includes(structJsxList.length)}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            <_Info>{tipJsxList}</_Info>\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    /* background-color: #4b4b4b; */\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    border: 1px solid #ffffffda;\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    background: radial-gradient(#c3c3d6, #8989a8);\r\n    ${props => !props.isUse ? '' : css`background: radial-gradient(#d43131, #722a2a);`}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst InitialBeatTip = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const tipJsxList:JSX.Element[] = [];\r\n    for(let i = 0; i < 4; i ++) {\r\n        tipJsxList.push(\r\n            <_Tip key={i} isActive={state.initialBeat > i} onClick={()=> {\r\n                state.initialBeat = i + 1;\r\n                dispatcher.score.setScoreState(state);\r\n            }}/>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Label>inital beat</_Label>\r\n            <_WrapTip>{tipJsxList}</_WrapTip>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default InitialBeatTip;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\nconst _WrapTip = styled.div`\r\n    display: inline-block;\r\n    width: 142px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 8px;\r\n    border-radius: 4px;\r\n    border: solid 1px #747474;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 4px;\r\n    background-color: #d6d6d6;\r\n    ${props => !props.isActive ? '' : css`background-color: #eeedcf;`}\r\n    border: solid 1px #b9b9b9;\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState } from \"../../../../redux/store/backingState\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n\r\n    const stripeJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 12; i++) {\r\n        stripeJsx.push(<_Record key={i} isEven={i % 2 == 0} />);\r\n    }\r\n\r\n    return (<>\r\n        <_Layer zIndex={1}>{stripeJsx}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    background-color: #3a3a50d4;\r\n    ${props => !props.isEven ? '' : css`\r\n        background-color: #424255d3;\r\n    `}\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingState } from \"../../../../redux/store/backingState\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternTable from \"./patternTable\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import styled from \"styled-components\";\r\n\r\nconst ChannelItem = (props:{\r\n    soundFullName: string;\r\n}) => {\r\n\r\n    return (<>\r\n        <_Wrap>\r\n            <_Struct>{props.soundFullName}</_Struct>\r\n            <_Option>-</_Option>\r\n            <_Option>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)`\r\n    width: 25px;\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingPattern, BackingState } from \"../../../../redux/store/backingState\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/soundUtils\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n    const pattern = state.pattern;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    if (pattern != null) {\r\n        const channels = pattern.channels;\r\n        channels.forEach((channel, i) => {\r\n            let name = '-';\r\n            if (channel.octave !== -1) {\r\n                const soundIndex = chordInfo.chordRoot + IntervalRelationProps[symbol.structs[channel.structIndex]];\r\n                const octave = channel.octave + Math.floor(soundIndex / 12);\r\n                name = KEY12_SHARP_LIST[soundIndex % 12] + octave;\r\n            }\r\n            channelJsxList.push(\r\n                <ChannelItem key={i}\r\n                    soundFullName={name}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingPattern, BackingState } from \"../../../redux/store/backingState\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternStatus = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    const createItem = (name: string): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={true}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < 12; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_List onChange={(e) => {\r\n            pattern.channels = [];\r\n            for (let i = 0; i < Number(e.target.value); i++) {\r\n                pattern.channels.push({ octave: -1, structIndex: 0 });\r\n            }\r\n            update();\r\n        }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createItem('16')}\r\n        {createItem('8')}\r\n        {createItem('4')}\r\n        {createItem('2')}\r\n        {createItem('1')}\r\n        {createItem('.')}\r\n        {createItem('/')}\r\n    </>);\r\n}\r\n\r\nexport default PatternStatus;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #ff0000;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState } from \"../../../redux/store/backingState\";\r\nimport { BackingPattern, ChannelParam, BackingLayer } from \"../../../redux/store/backingState\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternStatus from \"./patternStatus\";\r\n\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button isActive={isUsePattern}\r\n                        onClick={() => {\r\n                            if (!isUsePattern) {\r\n                                const table = state.voicingTable as boolean[][];\r\n                                const channels = dispatcher.backing.getChannels(table).reverse();\r\n                                const defaultLayer: BackingLayer = {\r\n                                    noteDivList: [{rate: 4, isHalf: false, isDiv3: false}],\r\n                                    table: [['-']],\r\n                                    velocityList: [5]\r\n                                }\r\n                                state.pattern = {\r\n                                    lenIndex: 0,\r\n                                    channels,\r\n                                    isUsePedal: false,\r\n                                    layers: [{...defaultLayer}, {...defaultLayer}]\r\n                                } as BackingPattern;\r\n                                update();\r\n                            } else {\r\n                                state.pattern = null;\r\n                                update();\r\n                            }\r\n                        }}>Use\r\n                    </_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                <_StatusDiv><PatternStatus /></_StatusDiv>\r\n                <_MainDiv>\r\n                    <_ChannelDiv>\r\n                        <PatternChannel />\r\n                    </_ChannelDiv>\r\n                    <_BuilderDiv>\r\n                        <PatternBuilder />\r\n                    </_BuilderDiv>\r\n                </_MainDiv>\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #338f4f;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    background-color: #7986d1;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: white;\r\n        font-weight: 600;\r\n        background-color: #00000028;\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #eeff007b;\r\n        color: #cc0000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #dadada;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState, ChannelParam } from \"../../../redux/store/backingState\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n\r\n    const table = state.voicingTable as boolean[][];\r\n\r\n    const voicingLaneJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < 8; i++) {\r\n        const tipJsxList: JSX.Element[] = [];\r\n        for (let j = 0; j < 6; j++) {\r\n            let isEnable: boolean = symbol.structs.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n\r\n            const interval = IntervalRelationProps[symbol.structs[j]];\r\n            const chordIndex = (chordInfo.chordRoot + interval) % 12;\r\n            const octave = i + Math.floor((chordInfo.chordRoot + interval) / 12);\r\n\r\n            const name = !isEnable ? '' : `${KEY12_SHARP_LIST[chordIndex]}${octave}`;\r\n            tipJsxList.push(\r\n                <_VoicingItem key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        const pattern = state.pattern;\r\n                        if(pattern != null) {\r\n                            const tempChannels: ChannelParam[] = dispatcher.backing.getChannels(table);\r\n                            pattern.channels.forEach((channel, i) => {\r\n                                if(i < tempChannels.length) {\r\n                                    channel.octave = tempChannels[i].octave;\r\n                                    channel.structIndex = tempChannels[i].structIndex;\r\n                                } else {\r\n                                    channel.octave = -1;\r\n                                    channel.structIndex = 0;\r\n                                }\r\n                            });\r\n                            pattern.channels = pattern.channels.reverse();\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_VoicingItem>\r\n            );\r\n        }\r\n        voicingLaneJsxList.push(\r\n            <_VoicingLane key={i}>\r\n                {tipJsxList}\r\n            </_VoicingLane>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Info>\r\n\r\n            </_Info>\r\n            <_Main>\r\n                <_Left></_Left>\r\n                <_Right>{voicingLaneJsxList}</_Right>\r\n            </_Main>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 25;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _Info = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f4f;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 2) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: rosybrown;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _VoicingLane = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VoicingItem = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 4px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 2px 0 0 2px;\r\n    background-color: #a39140;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #e7c114;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #01004e;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #beab55;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #d6b520;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState } from \"../../redux/store/backingState\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <VoicingChooser />\r\n            <PatternFrame />\r\n            <_FooterDiv>\r\n                <_Button isEnable={true}>Test</_Button>\r\n                <_Button isEnable={true}>Cancel</_Button>\r\n                <_Button isEnable={true} onClick={()=> {\r\n                    dispatcher.backing.applyBackingToChord();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport PatternFrame from \"../../../backing/pattern/patternFrame\";\r\nimport VoicingChooser from \"../../../backing/voicing/voicingChooser\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={chordList[focusIndex].type === 'chord'}\r\n                onClick={() => {\r\n                    dispatcher.backing.openBackingEditor();\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../redux/store/scoreData\";\r\nimport { ElementCache, SectionCache } from \"../../../../redux/store/scoreState\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport NoteSideForm from \"./side/noteSideForm\";\r\nimport HarmTimeline from \"./timeline/harmTimeline\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport { getBeatRate } from \"../../../../utils/soundUtils\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\n\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const init = (store.scoreData.chordList[0].detail as DetailInit);\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    useEffect(() => {\r\n        const elementCacheList: ElementCache[] = [];\r\n        const sectionCacheList: SectionCache[] = [];\r\n\r\n        let prevBeat = 0;\r\n        let totalBeat = 0;\r\n        let prevMinute = 0;\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let keyIndex = -1;\r\n        let sectionBeatSum = 0;\r\n\r\n        chordList.forEach((element, i) => {\r\n            const type = element.type;\r\n            switch (type) {\r\n                case 'fixed': {\r\n\r\n                }\r\n                    break;\r\n                case 'init': {\r\n                    const detail = element.detail as DetailInit;\r\n                    keyIndex = detail.keyIndex;\r\n                }\r\n                    break;\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'chord': {\r\n                    const detail = element.detail as DetailChord;\r\n                    prevBeat = totalBeat;\r\n                    totalBeat += detail.beatLen;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    prevMinute = totalMinute;\r\n                    totalMinute += detail.minute.head;\r\n                    totalMinute += detail.minute.tail;\r\n                }\r\n                    break;\r\n                case 'change': {\r\n\r\n                }\r\n                    break;\r\n            }\r\n\r\n            const pastSecond = 60000 / init.bpm * (prevBeat + prevMinute);\r\n            const beatRate = getBeatRate(init.timeSignature)[0];\r\n            elementCacheList.push({\r\n                bar: Math.floor(prevBeat / beatRate),\r\n                beat: prevBeat % beatRate,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                sectionNo,\r\n                pastSecond,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        store.scoreState.elementCacheList = elementCacheList;\r\n        store.scoreState.sectionCacheList = sectionCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }, [chordList, chordList.length, init.bpm]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Left>\r\n                <_Head><InitialBeatTip /></_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP><HarmTimeline /></_TIMELINE_WRAP>\r\n                    <_INFO_WRAP><ChordInfo /></_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right>\r\n                <NoteSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n`;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #ddc2c2;\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 36px;\r\n    background-color: ${props => props.isActive ? css`#e7e7e6be` : css`#c4c4c42b`} ;\r\n    border: 1px solid #aaaaaa;\r\n    border-radius: 4px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 20px;\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: #888;\r\n        /* background-color: #c500003b; */\r\n        line-height: 18px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 16px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #10c5003a; */\r\n        line-height: 16px;\r\n    }\r\n`;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\n\r\nexport const MelodyKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const state = store.tuneState;\r\n\r\n    switch (e.key) {\r\n        case 'ArrowUp': {\r\n        }\r\n            break;\r\n        case 'ArrowDown': {\r\n        }\r\n            break;\r\n        case 'ArrowLeft': {\r\n            state.focusIndex--;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n        case 'ArrowRight': {\r\n            state.focusIndex++;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n        case '1': {\r\n            state.quantize = 16;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n        case '2': {\r\n            state.quantize = 8;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n        case '3': {\r\n            state.quantize = 4;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n        case 'Delete': {\r\n            const notesList = store.scoreData.notesList;\r\n            notesList.splice(state.focusIndex, 1);\r\n            dispatcher.tune.setNotesList(notesList);\r\n            state.focusIndex --;\r\n            dispatcher.tune.setState(state);\r\n        }\r\n            break;\r\n    }\r\n}\r\n\r\nexport const TuneKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alnfig.nextElement);\r\n    // switch (e.key) {\r\n    //     case config.editMode: {\r\n    //         keySwitch.editMode = isPress;\r\n    //         dispatcher.score.setKeySwitch(keySwitch);\r\n    //     }\r\n    //         break;\r\n    //     case config.symbolMode: {\r\n    //         keySwitch.symbolMode = isPress;\r\n    //         dispatcher.score.setKeySwitch(keySwitch);\r\n    //     }\r\n    //         break;\r\n    // }\r\n\r\n    if (isPress) {\r\n        MelodyKeyDown(e, store, dispatcher);\r\n    }\r\n}","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../redux/store/scoreData\";\r\nimport { getChordRoot, getSymbolFromKey } from \"../../../../utils/soundUtils\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n    rate: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = props.rate;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barLength * 4 * 4; i++) {\r\n            let barJsx = <></>;\r\n            if (i % 16 == 0) {\r\n                barJsx = <_Bar>{Math.floor(i / 16) + 1}</_Bar>\r\n            }\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={beatWidth}>\r\n                    {barJsx}\r\n                </_Scale>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const name = detail.root == null ? '-' :\r\n                    getChordRoot(detail.root, 0) + getSymbolFromKey(detail.symbolKey)?.name;\r\n                jsxList.push(\r\n                    <_ChordItem key={jsxList.length}\r\n                        width={beatWidth * (detail.beatLen + detail.minute.head + detail.minute.tail)}\r\n                        isActive={element == curChord}\r\n                        onClick={() => {\r\n                            state.isTune = false;\r\n                            state.focusIndex = i;\r\n                            dispatcher.score.setScoreState(state);\r\n                        }}\r\n                    >\r\n                        {name}\r\n                    </_ChordItem>\r\n                );\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_Measure ref={measureRef}>\r\n            {measureJsxList}\r\n            <_MousePos\r\n                left={mouseMeasurePos * beatWidth * rate}\r\n                width={beatWidth * rate}\r\n            />\r\n        </_Measure>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _Measure = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #5e88af21;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Bar = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #ec0000;\r\n    left: -5px;\r\n    top: -20px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/soundUtils\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst PitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default PitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #f5000065;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #ffffff1f;\r\n    ${props => !props.isStruct ? '' : css`background-color: #c08484b8;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #fbff00ba;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.tuneState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={false}\r\n            onClick={()=> {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #e9e9e9da;\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    value: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.tuneState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={state.quantize === props.value}\r\n            onClick={()=> {\r\n                state.quantize = props.value;\r\n                dispatcher.tune.setState(state);\r\n            }}\r\n        >\r\n            {props.value}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #fcff48, #cec073, #fcff48);\r\n    `}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet } from 'react-icons/gi'\r\n\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.tuneState;\r\n\r\n    return (<>\r\n        <_QuantizeSelector>\r\n            <QuantizeSwitch value={16} />\r\n            <QuantizeSwitch value={8} />\r\n            <QuantizeSwitch value={4} />\r\n        </_QuantizeSelector>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} name=\"violin\" />\r\n            <InstrumentSwitch icon={<GiGuitar />} name=\"e-guitar\" />\r\n            <InstrumentSwitch icon={<GiSaxophone />} name=\"saxphone\" />\r\n            <InstrumentSwitch icon={<GiViola />} name=\"viola\" />\r\n            <InstrumentSwitch icon={<GiTrumpet />} name=\"trumpet\" />\r\n            <InstrumentSwitch icon={<GiClarinet />} name=\"clarinet\" />\r\n            <InstrumentSwitch icon={<GiClarinet />} name=\"oboe\" />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { ChordElement, DetailChord, LenType } from \"../../../../redux/store/scoreData\";\r\nimport { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/soundUtils\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { TuneKeySwitch } from \"../harmonize/input/melodyInput\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport PitchList from \"./pitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\n\r\n\r\ntype XY = {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\ntype Side = 'left' | 'right' | 'normal';\r\n\r\ntype NotesState = {\r\n    index: number;\r\n    side: Side;\r\n    isResize: boolean;\r\n}\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.tuneState;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [isPut, setPut] = useState<boolean>(false);\r\n    const [lock, setLock] = useState<XY>({ x: 0, y: 0 });\r\n    const [width, setWidth] = useState<number>(0);\r\n    const [nextLeft, setNextLeft] = useState<number>(0);\r\n    const [beatWidth, setBeatWidth] = useState<number>(120);\r\n    const [barLength, setBarLength] = useState<number>(20);\r\n\r\n    const [notesState, setNotesState] = useState<NotesState>({ index: -1, side: 'normal', isResize: false });\r\n\r\n    // const [structIndexList, setStructIndexList] = useState<number[]>([0, 5, 7]);\r\n\r\n    const [curChord, setCurChord] = useState<ChordElement | null>(null);\r\n\r\n    const [mousePitchIndex, setMousePitchIndex] = useState<number>(0);\r\n    const [mouseMeasurePos, setMouseMeasurePos] = useState<number>(0);\r\n\r\n    const timelineLength = barLength * beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n\r\n    const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n        \r\n        Soundfont.instrument(new AudioContext(), 'violin', {gain: 4, release: 0.5}).then((soundFontPlayer) => {\r\n            dispatcher.tune.setInstrument(soundFontPlayer);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barLength * 4 * 4; i++) {\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={beatWidth} />\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barLength]);\r\n\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                />\r\n            );\r\n        }\r\n        return list;\r\n    }, []);\r\n\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        notesList.forEach((notes, i) => {\r\n            const isActive = state.focusIndex === i;\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={notes.posX}\r\n                    width={notes.length}\r\n                    side={notesState.side}\r\n                    isActive={i === notesState.index}\r\n                    isEdit={i === notesState.index && notesState.isResize}\r\n                    onClick={(e) => {\r\n                        if (!isActive) {\r\n                            state.focusIndex = i;\r\n                            dispatcher.tune.setState(state);\r\n                        } else {\r\n                            if (!notesState.isResize) {\r\n                                const refs = store.refs.melody;\r\n                                if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                                    const rect = refs.table.getBoundingClientRect();\r\n                                    const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                                    notesList[i].pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                                    dispatcher.tune.setNotesList(notesList.slice());\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={notes.lenType}\r\n                    >\r\n                        {notes.posX}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, notesState]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => TuneKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => TuneKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Header>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barLength}\r\n                        beatWidth={beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                        rate={rate}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <PitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef}\r\n                    onScroll={() => {\r\n                        const refs = store.refs.melody;\r\n\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const scrollLeft = refs.table.scrollLeft;\r\n                            const scrollTop = refs.table.scrollTop;\r\n                            refs.measure.scrollTo({ left: scrollLeft });\r\n                            refs.chord.scrollTo({ left: scrollLeft });\r\n                            refs.pitch.scrollTo({ top: scrollTop });\r\n                        }\r\n                    }}\r\n                >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {pitchItemJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={(e) => {\r\n                            if (e.button !== 0) return;\r\n\r\n                            const refs = store.refs.melody;\r\n                            if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                                const rect = refs.table.getBoundingClientRect();\r\n                                const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n                                const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n                                if (notesState.index === -1) {\r\n\r\n                                    setPut(true);\r\n                                    setLock({\r\n                                        x: Math.floor(x / beatWidth / rate) * beatWidth * rate,\r\n                                        y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                                    });\r\n\r\n                                    const next = notesList.find(note => x < note.posX);\r\n                                    let nextLeft = timelineLength;\r\n                                    if (next != undefined) {\r\n                                        nextLeft = next.posX;\r\n                                    }\r\n                                    setNextLeft(nextLeft);\r\n                                    setWidth(0);\r\n                                } else {\r\n                                    if (notesState.side === 'right') {\r\n                                        const notes = notesList[notesState.index];\r\n                                        notesState.isResize = true;\r\n                                        setNotesState({ ...notesState });\r\n                                        setLock({\r\n                                            x: (Math.floor(x / beatWidth / rate) * beatWidth * rate) - notes.length,\r\n                                            y: 0\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }\r\n                        }}\r\n                        onMouseMove={(e) => {\r\n                            if (e.button !== 0) return;\r\n\r\n                            const refs = store.refs.melody;\r\n                            if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                                const rect = refs.table.getBoundingClientRect();\r\n                                const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n                                const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n                                if (!isPut && !notesState.isResize) {\r\n                                    setMousePitchIndex(Math.floor(y / TUNE_PITCH_HEIGHT));\r\n                                    setMouseMeasurePos(Math.floor(x / beatWidth / rate));\r\n\r\n                                    let left = 0;\r\n                                    const searchedChord = chordList.find((element) => {\r\n                                        if (element.type === 'chord') {\r\n                                            const detail = element.detail as DetailChord;\r\n                                            const width = detail.beatLen * beatWidth;\r\n                                            if (x >= left && x < left + width) {\r\n                                                return element;\r\n                                            }\r\n                                            left += width;\r\n                                        }\r\n                                    });\r\n                                    setCurChord(searchedChord == undefined ? null : searchedChord);\r\n\r\n                                    notesState.index = -1;\r\n                                    for (let i = 0; i < notesList.length; i++) {\r\n                                        const notes = notesList[i];\r\n                                        const left = notes.posX;\r\n                                        const right = notes.posX + notes.length;\r\n                                        if (x >= left && x <= right) {\r\n                                            notesState.index = i;\r\n\r\n                                            if (x < left + 10) notesState.side = 'left';\r\n                                            else if (x > right - 10) notesState.side = 'right';\r\n                                            else notesState.side = 'normal';\r\n                                        }\r\n                                    };\r\n                                    setNotesState({ ...notesState });\r\n\r\n\r\n                                } else {\r\n                                    if (isPut) {\r\n                                        const normalX = (Math.floor(x / beatWidth / rate) + 1) * beatWidth * rate;\r\n                                        setWidth((normalX > nextLeft ? nextLeft : normalX) - lock.x);\r\n                                    }\r\n\r\n                                    if (notesState.isResize) {\r\n                                        const normalX = Math.floor(x / beatWidth / rate) * beatWidth * rate;\r\n                                        const notes = notesList[notesState.index];\r\n                                        notes.length = (normalX > nextLeft ? nextLeft : normalX) - lock.x;\r\n                                        dispatcher.tune.setNotesList(notesList.slice());\r\n                                    }\r\n                                }\r\n                            }\r\n                        }}\r\n                        onMouseUp={(e) => {\r\n                            if (e.button !== 0) return;\r\n\r\n                            if (isPut) {\r\n                                setPut(false);\r\n                                if (width > 0) {\r\n                                    notesList.push({\r\n                                        posX: lock.x,\r\n                                        pitchIndex: Math.floor(lock.y / TUNE_PITCH_HEIGHT),\r\n                                        length: width,\r\n                                        lenType: width % beatWidth === 0 ? 4 : (width % (beatWidth / 2) === 0 ? 8 : 16)\r\n\r\n                                    });\r\n                                    notesList.sort((a, b) => {\r\n                                        return a.posX === b.posX ? 0 : (\r\n                                            a.posX < b.posX ? -1 : 1\r\n                                        );\r\n                                    });\r\n                                    dispatcher.tune.setNotesList(notesList);\r\n                                }\r\n                            }\r\n                            if (notesState.isResize) {\r\n\r\n                                notesState.isResize = false;\r\n                                setNotesState({ ...notesState });\r\n                                const notes = notesList[notesState.index];\r\n                                notes.lenType = notes.length % beatWidth === 0 ? 4 : (notes.length % (beatWidth / 2) === 0 ? 8 : 16);\r\n                                dispatcher.tune.setNotesList(notesList.slice());\r\n                            }\r\n                        }}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % beatWidth === 0 ? 4 : (width % (beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: LenType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f74646';\r\n            case 8: return '#467ef7';\r\n            case 16: return '#46f79f';\r\n        }\r\n    }};\r\n`;\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #534b81;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #45424b;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #69696921;\r\n    `}\r\n    /* &:hover {\r\n        background-color: #ffffff22;\r\n    } */\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #56585f;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #0044ff1f;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #bddfff34;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #ff00006e;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n    ` : '' : ''}\r\n    box-sizing: border-box;\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: LenType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    /* background-color: red; */\r\n    background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }});\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;","import { useContext, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport { FiHelpCircle } from 'react-icons/fi'\r\nimport { AiOutlinePlaySquare } from 'react-icons/ai'\r\nimport { BsStopBtn } from 'react-icons/bs'\r\nimport { AiTwotoneSetting } from 'react-icons/ai'\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const switchMode = () => {\r\n        state.isTune = !state.isTune;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode>\r\n                    <_ModeItem isActive={!state.isTune} onClick={() => {\r\n                        if (state.isTune) switchMode();\r\n                    }}>Harmonize</_ModeItem>\r\n                    <_ModeItem isActive={state.isTune} onClick={() => {\r\n                        if (!state.isTune) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <ExecutableButton labelText={<><FiHelpCircle /> Help</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><AiOutlinePlaySquare /> Play</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><BsStopBtn /> Stop</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><AiTwotoneSetting /> Setting</>} size={'midium'} width={110} />\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'r': switchMode(); break;\r\n                    }\r\n                }}>\r\n                <_SECTIONS><HarmSections /></_SECTIONS>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isTune} />\r\n                    <MelodyFrame isActive={state.isTune} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 140px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    { name: 'Preview', disable: !isAccept, cont: <div></div> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DegreeProps, getSymbolFromKey, IntervalRelationProps, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey } from \"../../utils/soundUtils\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const sampler = store.instruments.sampler;\r\n\r\n    const createLane = (label: string, items: {\r\n        degree: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    sampler.releaseAll();\r\n\r\n                    const symbol = getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, disable: true, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, disable: true, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, disable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, disable: true, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { GlobalContext } from './systemEntry';\r\n\r\nconst Splash = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                dispatcher.system.switchSplashToMain();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n        <_Wrap isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Title>\r\n                <span>L</span>iCreSia\r\n            </_Title>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Wrap = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    /* width: 500px;\r\n    height: 500px; */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #d8d8d8; */\r\n    background: radial-gradient(#868686, #ffffff);\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 15%;\r\n    width: 100%;\r\n    height: 400px;\r\n    background-color: #ffffff1f;\r\n    /* background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913); */\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    line-height: 350px;\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\n\r\nconst TotalHeader = () => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport SysModalDialog from '../dialog/sysModalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> : <Splash />}\r\n                <_Wrap>\r\n                    <SysModalDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n  \n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    window.addEventListener(\"keydown\", function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    }, false);\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}