{"version":3,"sources":["system/redux/reducer.tsx","system/utils/theoryUtils.tsx","system/utils/backingUtil.tsx","system/utils/instrumentsUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/redux/store/state/dataHistory.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/sysModalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/base/design/styles.tsx","system/contents/score/manage/scoreBuilder.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/input/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChange.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcChange.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/noteSideForm.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/score/edit/harmonize/initial/initialBeat.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternStatus.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/item/controlButton.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionType","SCALE_INDEX","ROOT_ALL","index","isFlat","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","getDegreeRoot","props","KEY12_FLAT_LIST","KEY12_SHARP_LIST","getChordRoot","baseKeyIndex","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SYMBOL_LIST","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_LIST","root","symbolKey","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","getSymbolFromKey","ret","find","symbol","undefined","getSymbolDerives","list","forEach","push","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","getDefaultBacking","voicingList","struct","octave","pattern","BackingUtil","divCount","Array","fill","table","channels","i","length","j","structIndex","editorPattern","channelSize","layers","layer","divs","noteDivList","signals","record","cell","x","y","status","notesList","voicingStructs","size","channel","reverse","scoreLayers","console","log","JSON","stringify","scoreLayer","notes","velocityList","rootIndex","map","item","interval","bpm","backing","pitchIndexList","chordTime","soundName","Math","floor","playPiano","startTimeList","total","div","normal","rate","isDot","div3","startTime","sustainTime","setTimeout","state","dispatcher","piano","stop","isPreview","id","clearInterval","setState","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","getSortetdNotesLen","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","keyIndex","instrument","soundfontPlayer","play","duration","soundFullName","stopPreview","focusIndex","lastFocus","distIndex","sampler","releaseAll","tune","adjustScrollX","previewHarmony","start","cacheList","elementCacheList","chordList","init","detail","cache","element","pastSecond","len","beatLen","minute","head","tail","pitchList","getPitchListFromVoicing","mouseState","curChord","playBacking","previewCurHarmony","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","Dispatcher","dispatch","system","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setReserveTasks","setInvalidate","score","setPiano","setScoreTabIndex","scoreTabIndex","setScoreState","setKeySwitch","keySwitch","setScoreData","moveElement","isNext","sub","moveSection","curSectionIndex","sectionNo","sectionCacheList","curSectionInfo","curElementType","rangeIndexStart","rangeIndexEnd","incrementDegreeRoot","isUp","data","includes","incrementBeatLen","slice","incrementMinuteVal","pos","isTail","value","target","incrementMinuteValRelation","nearIndex","addChordElement","initialBeat","on","splice","addSectionElement","labelName","addChangeElement","changeType","modulateRelation","domminantValue","keyAdjust","tempoRelation","tempoDiff","tempoRate","tempoAbsolute","beatSignature","removeCurElement","wrapRef","reffers","wrap","body","style","opacity","overflow","width","clientWidth","incrementSymbol","setDiatonicChord","scaleIndex","chord","setDefaultBacking","cloneBacking","parse","pastBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setInstrument","incrementCurNoteKey","isUpper","mode","scaleIndexies","cur","prevPitchIndex","pitchIndex","tempPitchIndex","adjustScrollY","moveFocus","updateCurChord","moveDistFocus","beatWidth","left","searchedChord","addNotes","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","releaseRange","end","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","melody","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","firstTime","pitch","time","isSolo","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","sort","a","b","posA","posB","openBackingEditor","hideMenu","voicingTable","getInitVoicingTable","patternProps","getVoicingStructs","channelIndex","lenIndex","isUsePedal","layerIndex","getChannels","convertEditorLayerFromScore","chordInfo","chordRoot","closeBackingEditor","getInitialLayer","col","isExist","voicing","mappingEditorToScore","editor","getVoicingListFromTable","buildPatternProps","addPatternColumn","lenList","newLen","column","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","getNotes","setNotes","deleteColumn","changeLayer","testBacking","this","DataHistory","manager","initialStore","userEnv","keyConfig","note","prevElement","nextElement","prevSection","nextSection","addChord","addSection","addChange","deleteCur","editMode","incRoot","decRoot","incBeat","decBeat","symbolMode","colorProps","entryBackground","dialogMode","isTune","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","soundfontInfo","gain","scaleMode","resize","move","shift","control","dataHistory","getInitialData","Sampler","toDestination","harmonize","measure","harmoniizeInvalidate","SysModalDialog","useContext","GlobalContext","isDisplay","_Blind","_Frame","styled","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isDisable","disable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","onClick","_Icon","_Label","ChannelContents","_Contents","css","TabbedPane","TabLabel","_TabLabel","TabContents","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ScoreBuilder","curIndex","addChordDiatonic","getScoreData","fixed","ManageTab","source","setSource","_Wrap","_Left","_Link","scale","timeSignature","builder","_Right","_Source","onChange","e","_ButtonsDiv","_Button","textarea","SymbolEditor","curSymbol","baseSymbol","derives","parentJsx","curJsx","childrenJsx","_Header","_Row","CalcChord","symbolName","bar","prevCache","isError","beat","chordName","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","beatSum","barRem","_Len","_Border","ElementDetailChange","_Type","ElementDetailChord","degreeRoot","degreeOn","useMemo","_Degree","isSwitch","isCurrent","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Tip","jsxList","lenType","valueType","abs","_TipItem","ElementFixedBorder","ElementDetailInit","_Title","_Value","_Record","ElementDetailSection","CalcChange","ScoreElement","useRef","bodyRef","current","isFocus","isSameSection","chordDetail","ref","isSelectable","isInactive","isChord","_Head","_CurKey","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","_Note","HarmonizeUtil","update","clearTimeout","NoteKeyDown","config","isElement","Number","NoteBasicInput","signal","timing","velAdj","backingEditorInput","NoteKeySwitch","isPress","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","isRootActive","isOnActive","_RootItem","isDiatonic","onContextMenu","symbolItemsJsx","_SymbolItem","_Timing","_LabelBeat","_Minute","_LabelMinute","_MinuteItem","isReverse","step","min","max","_Root","_Symbol","input","SideFormInit","scaleItemJsxList","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_TempoWrap","currentTarget","valueAsNumber","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","toString","_NumberItem","_DirectText","_TemplateFrame","_NumberFrame","_ItemBase","NoteSideForm","HarmMeasure","dataList","curBeatJsx","prevBeatJsx","nextBeatJsx","curMinuteJsx","prevMinuteJsx","nextMinuteJsx","memoriJsxList","prevIndex","nextIndex","temp","add","sustain","adjust","bean","height","color","_Memori","_Bar","_Prev","_Start","_Cur","_Next","_Blocks","_Measure","BEAT_WIDTH","ChordInfo","scaleList","structJsxList","tipJsxList","relation","getIntervalValues","_InfoItem","isScale","isUse","isBlack","_Struct","WIDTH","InitialBeatTip","_WrapTip","PatternLength","itemJsxList","isEdit","PatternTable","channelCount","layerJsxList","jsxLsit","notesJsxLsit","k","setNotesStatus","_Notes","isBack","_State","isEven","isFront","jsx","_Layer","zIndex","PatternBuilder","_LengthDiv","_MeasureDiv","_Body","_Footer","PATTERN_HEADER_HEIGHT","ChannelItem","_Option","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","soundIndex","_LayerItem","proops","PatternStatus","createItem","callback","isEnable","createRateItem","String","setRate","sizeJsxList","CHANNEL_MAX","_ListItem","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","selectedCell","editModeJsx","_WrapEdit","select","option","PatternFrame","isUsePattern","_UseSwitch","_Main","_StatusDiv","_MainDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","voicingLaneJsxList","isSelected","chordIndex","_VoicingItem","soundfont","STRUCT_NUM","_VoicingLane","OCTAVE_NUM","_Relation","_Info","TIP_WIDTH","BackingEditorFrame","_PrevireBrind","_FooterDiv","HarmHideFrame","isOpen","isBackingEnable","HarmonizeTab","focus","prevBeat","totalBeat","prevMinute","totalMinute","sectionBeatSum","beatRate","getBeatRate","tabIndex","onKeyDown","onKeyUp","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_HEAD_WIDTH","HarmSections","sections","curSectionNo","section","_Total","MelodyTimeline","measureRef","chordRef","barLength","timelineLength","measureJsxList","barJsx","_Scale","isHead","chordJsxList","symbolNmae","degreeName","_ChordItem","_DegreeName","_ChordName","_ChordWrap","_MousePos","span","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","info","Soundfont","AudioContext","release","then","soundFontPlayer","QuantizeSwitch","ControlButton","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","mouseDownEvent","button","mouse","getNextLeft","next","rect","getBoundingClientRect","clientX","scrollLeft","clientY","scrollTop","prev","mouseMoveEvent","curPos","posX","lenWidth","prevFocus","right","mouseUpEvent","MelodyInput","keyDownEvent","isSingle","alert","keySwitchEvent","MelodyFrame","tableRef","pitchRef","barCount","scaleLineJsxList","_ScaleLine","isBase","notesJsxList","scroll","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","onMouseDown","onMouseMove","onMouseUp","_Test","editAnimation","keyframes","EditTab","switchMode","preview","toggleEnsamble","_Mode","_ModeItem","_Buttons","_Switch","_SwitchInner","_SECTIONS","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","label","items","degree","degreeRootName","chordRootName","triggerAttack","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","fadeIn","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","Provider","App","document","oncontextmenu","window","addEventListener","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0479d89.chunk.js","sourcesContent":["import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n    SET_INVALIDATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n        case ActionType.SET_INVALIDATE:\r\n            store.invalidate = payload.invalidate;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature } from \"../redux/store/scoreData\";\r\n\r\nexport const SCALE_INDEX = [0, 2, 4, 5, 7, 9, 11];\r\n\r\nexport type DegreeProps = {\r\n    index: number;\r\n    isFlat: boolean;\r\n};\r\n\r\nexport type ChordProps = {\r\n    root: DegreeProps;\r\n    symbolKey: SymbolKey;\r\n};\r\n\r\nexport const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n    null,\r\n    { index: 0, isFlat: false },\r\n    { index: 1, isFlat: false },\r\n    { index: 1, isFlat: true },\r\n    { index: 2, isFlat: false },\r\n    { index: 3, isFlat: false },\r\n    { index: 3, isFlat: true },\r\n    { index: 4, isFlat: false },\r\n    { index: 5, isFlat: false },\r\n    { index: 6, isFlat: false },\r\n    { index: 6, isFlat: true },\r\n    { index: 7, isFlat: false },\r\n    { index: 8, isFlat: false },\r\n    { index: 8, isFlat: true },\r\n    { index: 9, isFlat: false },\r\n    { index: 10, isFlat: false },\r\n    { index: 10, isFlat: true },\r\n    { index: 11, isFlat: false }\r\n];\r\n\r\n\r\nexport const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\n// export const DEGREE12_FLAT_LIST = [\r\n//     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n// ];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const getDegreeRoot = (props: DegreeProps) => {\r\n    const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n    return list[props.index];\r\n}\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\n\r\nexport const getChordRoot = (props: DegreeProps, baseKeyIndex: number) => {\r\n    const list = props.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n    return list[(baseKeyIndex + props.index) % 12];\r\n}\r\n\r\n\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\n// export const KEY12_MINOR_SCALE_LIST = [\r\n//     'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'Bbm', 'Bm'\r\n// ];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n];\r\n\r\nexport type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\nexport type SymbolKey =\r\n    'major' |\r\n    'minor' |\r\n    'suspend4th' |\r\n    'diminish' |\r\n    'augument' |\r\n    'major-maj7th' |\r\n    'major-min7th' |\r\n    'minor-7th' |\r\n    'minor-maj7th' |\r\n    'sus4-7th' |\r\n    'diminish-7th' |\r\n    'augument-7th' |\r\n    'major-add9th' |\r\n    'minor-add9th' |\r\n    'sixth-9th' |\r\n    'minor-minus5' |\r\n    'minor7-minus5' |\r\n    'major-maj9th' |\r\n    'major-9th'\r\n    ;\r\n\r\n\r\nexport type SymbolAttribute =\r\n    'triad' |\r\n    'seventh' |\r\n    'add9th'\r\n    ;\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey;\r\n    name: string;\r\n    base: null | SymbolKey;\r\n    attr?: SymbolAttribute;\r\n    structs: IntervalRelation[];\r\n}\r\n\r\nexport const SYMBOL_LIST: readonly SymbolParams[] = [\r\n    {\r\n        key: 'major', name: '',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor', name: 'm',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'suspend4th', name: 'sus4',\r\n        base: null,\r\n        structs: ['p1', 'p4', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish', name: 'dim',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish-7th', name: 'dim7',\r\n        base: 'diminish',\r\n        structs: ['p1', 'm3', 'd5', 'd7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'augument', name: 'aug',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'a5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'augument-7th', name: 'aug7',\r\n        base: 'augument',\r\n        structs: ['p1', 'M3', 'a5', 'm7']\r\n    },\r\n    {\r\n        key: 'minor-minus5', name: 'm(-5)',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor7-minus5', name: 'm7(-5)',\r\n        base: 'minor-minus5',\r\n        structs: ['p1', 'm3', 'd5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-maj7th', name: 'maj7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-min7th', name: '7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'minor-7th', name: 'm7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'sus4-7th', name: '7sus4',\r\n        base: 'suspend4th',\r\n        structs: ['p1', 'p4', 'p5']\r\n    },\r\n    {\r\n        key: 'minor-maj7th', name: 'mmaj7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-add9th', name: 'add9',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'minor-add9th', name: 'madd9',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-maj9th', name: 'maj9',\r\n        base: 'major-maj7th',\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-9th', name: '9',\r\n        base: 'major-min7th',\r\n        structs: ['p1', 'm3', 'p5']\r\n    },\r\n];\r\n\r\nexport type IntervalRelation =\r\n    'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n    'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n    'd7' | 'm7' | 'M7'\r\n    ;\r\n\r\nexport const IntervalRelationProps = {\r\n    'p1': 0,\r\n    'm2': 1,\r\n    'M2': 2,\r\n    'm3': 3,\r\n    'M3': 4,\r\n    'p4': 5,\r\n    'd5': 6,\r\n    'p5': 7,\r\n    'a5': 8,\r\n    'm6': 8,\r\n    'M6': 9,\r\n    'd7': 9,\r\n    'm7': 10,\r\n    'M7': 11\r\n}\r\n\r\nexport const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n    { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n];\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n];\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    'bⅢ', 'bⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    'bⅥ', 'bⅥM7',\r\n    'bⅦ', 'bⅦ7'\r\n];\r\n\r\nexport const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n    const ret = SYMBOL_LIST.find((symbol) => {\r\n        if (key === symbol.key) {\r\n            return symbol;\r\n        }\r\n    });\r\n    return ret != undefined ? ret : SYMBOL_LIST[0];\r\n}\r\n\r\nexport const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n    let list: SymbolKey[] = [];\r\n    SYMBOL_LIST.forEach((symbol) => {\r\n        if (key === symbol.base) {\r\n            list.push(symbol.key);\r\n        }\r\n    });\r\n    return list;\r\n}\r\n\r\nexport const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n    return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n}\r\n\r\nexport const getBeatRate = (beatSignature: BeatSignature): [number, number] => {\r\n\r\n    switch (beatSignature) {\r\n        case '4/4': return [4, 4];\r\n        case '3/4': return [3, 4];\r\n    }\r\n    return [0, 0];\r\n}","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/backingState\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, VoicingProps } from \"../redux/store/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { playPiano } from \"./melodyUtil\";\r\nimport { IntervalRelationProps, KEY12_SHARP_LIST, SymbolParams } from \"./theoryUtils\";\r\n\r\n\r\n\r\nexport namespace BackingUtil {\r\n\r\n    // オクターブの数\r\n    export const OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    export const STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    export const CHANNEL_MAX = 12;\r\n\r\n    export const getInitialRecord = (divCount: number) => {\r\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    export const getVoicingStructs = (table: boolean[][]): BackingState.ChannelParam[] => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    export const getVoicingListFromTable = (table: boolean[][]) => {\r\n\r\n        const voicingList: VoicingProps[] = [];\r\n        // ボイシングを設定\r\n        if (table != null) {\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        voicingList.push({ octave: i, struct: j });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return voicingList;\r\n    }\r\n\r\n    export const buildPatternProps = (editorPattern: BackingState.Pattern) => {\r\n        const channelSize = editorPattern.channels.length;\r\n        const layers: BackingLayerData[] = [];\r\n        editorPattern.layers.forEach(layer => {\r\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\r\n            const signals: BackingSignalProps[] = [];\r\n            layer.table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        signals.push({ x: j, y: i, status: cell });\r\n                    }\r\n                });\r\n            });\r\n            layers.push({ divs, notesList: signals });\r\n        });\r\n        return { channelSize, layers };\r\n    }\r\n\r\n    export const getChannels = (voicingStructs: BackingState.ChannelParam[], size: number) => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: BackingState.ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n\r\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\r\n\r\n        const layers: BackingState.Layer[] = [];\r\n        console.log(JSON.stringify(scoreLayers));\r\n        scoreLayers.forEach(scoreLayer => {\r\n            const table: (BackingState.NoteStatus | null)[][] = [];\r\n            for (let i = 0; i < channelSize; i++) {\r\n                const record: (BackingState.NoteStatus | null)[] = [];\r\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\r\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\r\n                    record.push(notes == null ? null : notes.status);\r\n                }\r\n                table.push(record);\r\n            }\r\n            layers.push({\r\n                noteDivList: scoreLayer.divs,\r\n                table,\r\n                velocityList: []\r\n            });\r\n        });\r\n        console.log(JSON.stringify(layers));\r\n        return layers;\r\n    }\r\n\r\n    export const getPitchListFromVoicing = (voicingList: VoicingProps[], rootIndex: number, symbol: SymbolParams) => {\r\n        return voicingList.map((item) => {\r\n            const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n            return 12 * item.octave + rootIndex + interval;\r\n        });\r\n    }\r\n\r\n    export const playBacking = (store: Store, reserveTasks: NodeJS.Timeout[], bpm: number, backing: ChordBacking, pitchIndexList: number[], chordTime: number) => {\r\n        if (backing.pattern == null) {\r\n            pitchIndexList.forEach((index, j) => {\r\n                const soundName = KEY12_SHARP_LIST[index % 12];\r\n                const octave = Math.floor(index / 12);\r\n                const soundFullName = soundName + octave;\r\n                playPiano(soundFullName, store, chordTime);\r\n            });\r\n        } else {\r\n            const pattern = backing.pattern;\r\n            pattern.layers.forEach(layer => {\r\n                const startTimeList: number[] = [];\r\n                let total = 0;\r\n                layer.divs.forEach(div => {\r\n                    startTimeList.push(60 / bpm * total);\r\n                    let normal = 4 / div.rate;\r\n                    if (div.isDot) normal *= 1.5;\r\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                    total += normal;\r\n                });\r\n                layer.notesList.forEach(notes => {\r\n\r\n                    const startTime = startTimeList[notes.x];\r\n                    const sustainTime = chordTime - startTime;\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            const index = pitchIndexList[notes.y];\r\n                            const soundName = KEY12_SHARP_LIST[index % 12];\r\n                            const octave = Math.floor(index / 12);\r\n                            const soundFullName = soundName + octave;\r\n                            playPiano(soundFullName, store, sustainTime);\r\n                        }, startTime * 1000)\r\n                    );\r\n                });\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    export const stopPreview = (store:Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        store.instruments.piano?.stop();\r\n        state.isPreview = false;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        dispatcher.backing.setState(state);\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SymbolAttribute } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null\r\n    };\r\n    return backing;\r\n}","import { isatty } from \"tty\";\r\nimport { MelodyState } from \"../redux/store/melodyState\";\r\nimport { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { ScoreState } from \"../redux/store/scoreState\";\r\nimport ElementDetailChord from \"../contents/score/edit/harmonize/elements/form/elementDetailChord\";\r\nimport BackingUtil from \"./backingUtil\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += notes.len4;\r\n    total += notes.len8 / 2;\r\n    total += notes.len16 / 4;\r\n    total += notes.len4div3 / 3;\r\n    total += notes.len8div3 / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    return getSortetdNotesLen({\r\n        len4: notes1.len4 + notes2.len4,\r\n        len8: notes1.len8 + notes2.len8,\r\n        len16: notes1.len16 + notes2.len16,\r\n        len4div3: notes1.len4div3 + notes2.len4div3,\r\n        len8div3: notes1.len8div3 + notes2.len8div3\r\n    });\r\n}\r\n\r\nexport const getSortetdNotesLen = (base: MelodyLength) => {\r\n\r\n    const len8div3Cnt3 = Math.floor(base.len8div3 / 3);\r\n    base.len8div3 -= len8div3Cnt3 * 3;\r\n    base.len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(base.len8div3 / 2);\r\n    base.len8div3 -= len8div3Cnt2 * 2;\r\n    base.len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(base.len4div3 / 3);\r\n    base.len4div3 -= len4div3Cnt3 * 3;\r\n    base.len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(base.len16 / 2);\r\n    base.len16 -= len16Cnt2 * 2;\r\n    base.len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(base.len8 / 2);\r\n    base.len8 -= len8Cnt2 * 2;\r\n    base.len4 += len8Cnt2;\r\n\r\n    return base;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n    return getSortetdNotesLen({\r\n        len4, len8, len16, len4div3, len8div3\r\n    });\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if (notes.len8div3 > 0) return 6;\r\n    else if (notes.len16 > 0) return 4;\r\n    else if (notes.len4div3 > 0) return 3;\r\n    else if (notes.len8 > 0) return 2;\r\n    else if (notes.len4 > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playPiano = (soundFullName: string, store: Store, duration: number) => {\r\n    const instrument = store.instruments.piano;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, { duration });\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.piano;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nexport const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const state = store.melodyState;\r\n    const data = store.scoreData;\r\n    const reserveTasks: NodeJS.Timeout[] = [];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    const init = data.chordList[0].detail as DetailInit;\r\n    const bpm = init.bpm;\r\n    state.lastFocus = state.focusIndex;\r\n    state.isPreview = true;\r\n    let firstTime = -1;\r\n    for (let i = state.focusIndex; i < data.notesList.length; i++) {\r\n        const notes = data.notesList[i];\r\n        const pos = getNormalizeLenFromNotes(notes.pos);\r\n        const len = getNormalizeLenFromNotes(notes.len);\r\n        const pitch = notes.pitchIndex;\r\n        const time = 60 / bpm * pos;\r\n\r\n        // 開始時のノーツの位置（時間）を保存する。\r\n        if (firstTime === -1) {\r\n            firstTime = time;\r\n        }\r\n\r\n        reserveTasks.push(\r\n            setTimeout(() => {\r\n                state.focusIndex = i;\r\n                state.distIndex = state.focusIndex;\r\n                // state.mouseState.curChord = searchCurChord(store, i);\r\n                dispatcher.tune.setState(state);\r\n                dispatcher.tune.adjustScrollX();\r\n                if (instrument != null) {\r\n                    const keyIndex = getKeyIndexFromPitcher(pitch);\r\n                    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n                    const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n                    instrument.stop();\r\n                    instrument.play(soundName + octave, 0, { duration: 60 / bpm * len });\r\n                }\r\n            }, (time - firstTime) * 1000)\r\n        );\r\n\r\n        if (i === data.notesList.length - 1) {\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    stopPreview(store, dispatcher, reserveTasks);\r\n                }, (time - firstTime + 60 / bpm * len) * 1000)\r\n            );\r\n        }\r\n    }\r\n\r\n    // ハーモニーを再生\r\n    if (!state.isSolo) {\r\n        previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n    }\r\n\r\n\r\n    dispatcher.system.setReserveTasks(reserveTasks);\r\n    dispatcher.tune.setState(state);\r\n}\r\n\r\nexport const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n    const state = store.melodyState;\r\n    state.isPreview = false;\r\n    state.focusIndex = state.lastFocus;\r\n    state.distIndex = state.focusIndex;\r\n    reserveTasks.forEach(id => clearInterval(id));\r\n    store.instruments.sampler.releaseAll();\r\n    dispatcher.tune.setState(state);\r\n    dispatcher.tune.adjustScrollX();\r\n}\r\n\r\nexport const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n    const state = store.scoreState;\r\n    const sampler = store.instruments.sampler;\r\n    const cacheList = state.elementCacheList;\r\n    const chordList = store.scoreData.chordList;\r\n    // const reserveTasks = store.reserveTasks;\r\n    const init = chordList[0].detail as DetailInit;\r\n    const adjsut = 0;\r\n    for (let i = 3; i < chordList.length; i++) {\r\n        const cache = cacheList[i];\r\n        const element = chordList[i];\r\n        if (element.type === 'chord') {\r\n            if (cache.pastSecond < start) continue;\r\n\r\n            const detail = element.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n            const chordTime = 60 / init.bpm * len;\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // sampler.releaseAll();\r\n                    // stopPiano(store);\r\n                    store.melodyState.mouseState.curChord = element;\r\n                    dispatcher.tune.setState(store.melodyState);\r\n\r\n                    const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                    const div = pickingDelay / pitchList.length;\r\n\r\n                    // pitchList.forEach((index, j) => {\r\n                    //     const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //     const octave = Math.floor(index / 12);\r\n                    //     const soundFullName = soundName + octave;\r\n                    //     playPiano(soundFullName, store, chordTime);\r\n                    // });\r\n\r\n                    BackingUtil.playBacking(store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n\r\n                    //     stopPiano(store);\r\n                    //     channelList.forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 4 + div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.reverse().forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 8 * 3 + div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.reverse().forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 8 * 5 +  div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 8 * 6 +  div * j)\r\n                    //         );\r\n                    //     });\r\n                }, cache.pastSecond - start - adjsut)\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const init = chordList[0].detail as DetailInit;\r\n    const curChord = state.mouseState.curChord;\r\n    const reserveTasks = store.reserveTasks;\r\n    if (curChord != null) {\r\n\r\n        const detail = curChord.detail as DetailChord;\r\n\r\n        if (detail.root == null) return;\r\n\r\n        const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n        const symbol = getSymbolFromKey(detail.symbolKey);\r\n        const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n        const backing = detail.backing;\r\n        const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n        const chordTime = 60 / init.bpm * len;\r\n\r\n        BackingUtil.playBacking(store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n\r\n        reserveTasks.push(setTimeout(() => {\r\n            state.isPreview = false;\r\n            dispatcher.tune.setState(state);\r\n        }, chordTime * 1000));\r\n        state.isPreview = true;\r\n        dispatcher.tune.setState(state);\r\n\r\n    }\r\n}","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 60;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SCALE_INDEX, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailChange, DetailChord, DetailInit, DetailSection, ScoreData, TuneNotes, VoicingProps } from \"../store/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont, previewStart } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\nimport { Invalidate } from \"../store/invalidate\";\r\nimport BackingState from \"../store/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        },\r\n\r\n        setInvalidate: (invalidate: Invalidate) => {\r\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        setPiano: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, piano: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            // alert(`totalSection=${sectionCacheList.length}, curSection=${curSectionIndex}, focus=${state.focusIndex}`);\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -0.5 && target <= 0.5) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: state.initialBeat,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        addChangeElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'change', detail: {\r\n                    changeType: null,\r\n                    modulateRelation: null,\r\n                    domminantValue: 0,\r\n                    keyAdjust: 0,\r\n                    tempoRelation: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbsolute: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailChange\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            const element = this.store.scoreData.chordList[state.focusIndex];\r\n            const sectionNo = this.store.scoreState.elementCacheList[state.focusIndex].sectionNo;\r\n            if (element.type === 'section' && sectionNo === 0) {\r\n                return;\r\n            }\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // reffer.style.width = '300px';\r\n            wrapRef.style.opacity = '0';\r\n            wrapRef.style.overflow = 'hidden';\r\n            // wrapRef.style.padding = '0';\r\n            wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            setTimeout(() => {\r\n                wrapRef.style.width = '0';\r\n            }, 1);\r\n            setTimeout(() => {\r\n                wrapRef.style.opacity = '';\r\n                wrapRef.style.width = '';\r\n                wrapRef.style.overflow = '';\r\n                // wrapRef.style.padding = '';\r\n                const data = this.store.scoreData;\r\n                data.chordList.splice(state.focusIndex, 1);\r\n                this.score.setScoreData(data);\r\n                state.focusIndex--;\r\n                this.score.setScoreState(state);\r\n                // setTimeout(() => {\r\n                //     reffer.style.opacity = '';\r\n                //     reffer.style.width = '';\r\n                //     const data = this.store.scoreData;\r\n                //     data.chordList.splice(state.focusIndex, 1);\r\n                //     this.score.setScoreData(data);\r\n                // }, 200);\r\n            }, 200);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (scaleIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const chord = DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n            detail.root = { ...chord.root };\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        cloneBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\r\n            this.score.setScoreState(state);\r\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n        },\r\n\r\n        pastBacking: () => {\r\n            const state = this.store.scoreState;\r\n            if (state.cloneBacking != null) {\r\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n                const data = this.store.scoreData;\r\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public tune = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        allSelect: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.distIndex = notesList.length - 1;\r\n                this.tune.setState(state);\r\n            }\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        incrementCurNoteKey: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n\r\n            const focusIndex = this.store.melodyState.focusIndex;\r\n            if (focusIndex === -1) return;\r\n\r\n            const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n            const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            const cur = notesList[focusIndex];\r\n            const prevPitchIndex = cur.pitchIndex;\r\n            const interval = mode !== 'octave' ? 1 : 12;\r\n            let tempPitchIndex = cur.pitchIndex;\r\n\r\n            while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                if (mode !== 'scale' ||\r\n                    (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                ) {\r\n                    cur.pitchIndex = tempPitchIndex;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // 値が変わっていた場合のみ処理する\r\n            if (prevPitchIndex !== cur.pitchIndex) {\r\n                playSoundfont(cur.pitchIndex, this.store);\r\n                // 画面更新のためにインスタンスを複製する\r\n                this.tune.setNotesList(notesList.slice());\r\n\r\n                this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.distIndex = state.focusIndex;\r\n                    this.tune.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.distIndex = state.focusIndex;\r\n                    this.tune.setState(state);\r\n                }\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n            this.tune.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        moveDistFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.distIndex > 0 : state.distIndex < notesList.length - 1) {\r\n                state.distIndex += (isNext ? 1 : -1);\r\n                this.tune.setState(state);\r\n            }\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.mouseState.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(state.focusIndex + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.distIndex = state.focusIndex;\r\n                this.tune.setState(state);\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [start, end] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const delNum = end - start + 1;\r\n            notesList.splice(start, delNum);\r\n            this.tune.setNotesList(notesList);\r\n            state.focusIndex = start - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const [start, end] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            state.focusIndex = (!isTail ? start : end);\r\n            state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n            this.tune.adjustScrollX();\r\n            this.tune.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            const distIndex = state.distIndex;\r\n            const focusIndex = state.focusIndex;\r\n\r\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\r\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n\r\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\r\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\r\n\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 移動可能かを判定\r\n            if (condition) {\r\n                for (let i = start; i <= end; i++) {\r\n                    const cur = notesList[i];\r\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                }\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        firstNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.distIndex = state.focusIndex;\r\n                this.tune.setState(state);\r\n                this.tune.adjustScrollX();\r\n                // this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.distIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            previewStart(this.store, this);\r\n        },\r\n\r\n        copyNotes: () => {\r\n\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const num = focusEnd - focusStart + 1;\r\n\r\n            const cloneNotesList: TuneNotes[] = [];\r\n            const base = notesList[focusStart].pos;\r\n            const baseUnit = getMinimumLenUnit(base);\r\n            for (let i = 0; i < num; i++) {\r\n                const notes = notesList[i + focusStart];\r\n                const unit = getMinimumLenUnit(notes.pos);\r\n                const useUnit = baseUnit > unit ? baseUnit : unit;\r\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\r\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\r\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\r\n                console.log(JSON.stringify(pos));\r\n                cloneNotesList.push({\r\n                    pitchIndex: notes.pitchIndex,\r\n                    pos,\r\n                    len: { ...notes.len }\r\n                });\r\n            }\r\n            state.cloneNotesList = cloneNotesList;\r\n            // notesList.splice(state.focusIndex, num);\r\n            // this.tune.setNotesList(notesList);\r\n            // state.focusIndex = focusStart - 1;\r\n            // state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n            // alert(JSON.stringify(state.cloneNotesList));\r\n        },\r\n\r\n        pasteNotes: () => {\r\n            // alert('pasteNotes');\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const pastList: TuneNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\r\n            pastList.forEach(notes => {\r\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\r\n            });\r\n            // ペーストするノーツの最後（右端）の要素\r\n            const pastLast = pastList[pastList.length - 1];\r\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList = notesList.concat(pastList);\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                data.notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                this.score.setScoreData(data);\r\n\r\n                state.focusIndex++;\r\n                state.distIndex = state.focusIndex + pastList.length - 1;\r\n                this.tune.setState(state);\r\n            }\r\n\r\n            // this.tune.adjustScrollX();\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n\r\n            let pattern: BackingState.Pattern | null = null;\r\n            if (detail.backing.pattern != null) {\r\n                const patternProps = detail.backing.pattern;\r\n                const voicingStructs = BackingUtil.getVoicingStructs(voicingTable);\r\n                const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\r\n                const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);;\r\n                pattern = {\r\n                    channelIndex: -1,\r\n                    lenIndex: 0,\r\n                    isUsePedal: false,\r\n                    layerIndex: 0,\r\n                    channels,\r\n                    layers\r\n                };\r\n            }\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    symbolKey: detail.symbolKey,\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    chordRoot: ((detail.root as DegreeProps).index + cache.keyIndex) % 12\r\n                },\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setState: (backingState: BackingState.Editor) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingState.Layer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingState.Layer;\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const isExist = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = isExist != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        // エディタで設定したバッキング情報を譜面に反映\r\n        mappingEditorToScore: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n\r\n            detail.backing = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern)\r\n            };\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        // getChannels: (table: boolean[][]): ChannelParam[] => {\r\n        //     const channels: ChannelParam[] = [];\r\n        //     for (let i = 0; i < table.length; i++) {\r\n        //         for (let j = 0; j < table[i].length; j++) {\r\n        //             if (table[i][j]) {\r\n        //                 channels.push({ octave: i, structIndex: j });\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     if (channels.length === 0) {\r\n        //         channels.push({ octave: -1, structIndex: 0 });\r\n        //     }\r\n        //     return channels;\r\n        // },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const newLen: BackingState.NoteDiv = { rate: lenList[pattern.lenIndex].rate, div3: 0, isDot: false };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.isDot = !cur.isDot;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: BackingState.NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            // 2つ以上要素がないと消せない\r\n            if (layer.noteDivList.length >= 2) {\r\n                layer.table.forEach((column) => {\r\n                    column.splice(pattern.lenIndex, 1);\r\n                });\r\n                layer.noteDivList.splice(pattern.lenIndex, 1);\r\n                // for(let i = 0; i < pattern.channels.length; i ++) {\r\n                //     layer.table[i].splice(pattern.lenIndex, 1);\r\n                // }\r\n                if (pattern.lenIndex > 0) {\r\n                    pattern.lenIndex--;\r\n                }\r\n                this.backing.setState(state);\r\n            }\r\n        },\r\n\r\n        changeLayer: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        testBacking: () => {\r\n            const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const reserveTasks = this.store.reserveTasks;\r\n            const chordInfo = editor.chordInfo;\r\n\r\n            const rootIndex = chordInfo.chordRoot;\r\n            const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n            const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\r\n            const chordTime = 60 / init.bpm * len;\r\n            const backing: ChordBacking = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern)\r\n            };\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n            BackingUtil.playBacking(this.store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                editor.isPreview = false;\r\n                this.backing.setState(editor);\r\n            }, chordTime * 1000));\r\n\r\n            editor.isPreview = true;\r\n            this.backing.setState(editor);\r\n        }\r\n    }\r\n}","\r\n\r\nnamespace DataHistory {\r\n\r\n    export type Manger = {\r\n        cur: number;\r\n        list: string[];\r\n    }\r\n\r\n    export const getInitialData = () => {\r\n        return {\r\n            cur: -1,\r\n            list: []\r\n        };\r\n    }\r\n\r\n    export const backup = (manager: Manger, data: string) => {\r\n        if (manager.cur === -1) {\r\n            manager.list.push(data);\r\n        } else {\r\n            // manager.list.splice(cur,);\r\n            manager.cur = -1;\r\n        }\r\n    }\r\n\r\n    export const undo = (manager: Manger): string => {\r\n        if (manager.cur === -1) {\r\n            manager.cur = manager.list.length - 1;\r\n        } else {\r\n            if(manager.cur > 0) {\r\n                manager.cur --;\r\n            }\r\n        }\r\n        return manager.list[manager.cur];\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./scoreData\"\r\nimport { ScoreState } from \"./scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { Invalidate } from \"./invalidate\"\r\nimport DataHistory from \"./state/dataHistory\"\r\nimport BackingState from \"./backingState\"\r\n\r\n\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState.Editor;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n\r\n    invalidate: Invalidate;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        dialogMode: 'none'\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        isTune: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        keySwitch: {\r\n            editMode: false,\r\n            symbolMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneBacking: null\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 4,\r\n        beatWidth: 120,\r\n        mouseState: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 5\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false,\r\n            control: false,\r\n        },\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneNotesList: [],\r\n\r\n        dataHistory: DataHistory.getInitialData()\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        sampler: getDefaultSampler(),\r\n        piano: null,\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: [],\r\n    invalidate: {\r\n        harmoniizeInvalidate: {},\r\n        harmonize: null,\r\n        melody: null\r\n    },\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note : {\r\n        prevElement: string;\r\n        nextElement: string;\r\n        prevSection: string;\r\n        nextSection: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        editMode: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        symbolMode: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = ()=> {\r\n    return {\r\n        note: {\r\n            prevElement: 'ArrowLeft',\r\n            nextElement: 'ArrowRight',\r\n            prevSection: 'ArrowUp',\r\n            nextSection: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'f',\r\n            deleteCur: 'Delete',\r\n            editMode: 'Shift',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n            symbolMode: 'c',\r\n        }\r\n    } as KeyConfig;\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SysModalDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const mode = store.systemState.dialogMode;\r\n    const isDisplay = mode !== 'none';\r\n\r\n    return (\r\n        <_Blind isDisplay={isDisplay}>\r\n            <_Frame>\r\n\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default SysModalDialog;\r\n\r\nconst _Blind = styled.div<{\r\n    isDisplay: boolean;\r\n}>`\r\n    display: ${props => props.isDisplay ? 'block' : 'none'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000000d8;\r\n    z-index: 10;\r\n`;\r\nconst _Frame = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 500px;\r\n    height: 400px;\r\n    background-color: #464646cc;\r\n    border: 1px solid #dadada;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;","import { Dispatcher } from \"../../../redux/dispatcher/dispatcher\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData, VoicingProps } from \"../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../redux/store/store\";\r\nimport { getDefaultBacking } from \"../../../utils/instrumentsUtil\";\r\nimport { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SymbolKey } from \"../../../utils/theoryUtils\";\r\n\r\n\r\nclass ScoreBuilder {\r\n\r\n    private scoreData: ScoreData\r\n\r\n    private curIndex: number;\r\n\r\n    constructor(init: DetailInit) {\r\n        this.scoreData = {\r\n            chordList: [\r\n                { type: 'init', detail: init },\r\n                { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n            ],\r\n            notesList: []\r\n        };\r\n\r\n        this.curIndex = 3;\r\n    }\r\n\r\n    public addChord = (beatLen: number, root: DegreeProps, symbolKey: SymbolKey) => {\r\n\r\n        const symbol = getSymbolFromKey(symbolKey);\r\n        const backing: ChordBacking = symbol.attr == undefined ? { voicingList: [], pattern: null } : getDefaultBacking(symbol.attr);\r\n        this.scoreData.chordList.splice(this.curIndex, 0, {\r\n            type: 'chord', detail: {\r\n                beatLen, minute: { head: 0, tail: 0 }, root, on: null, symbolKey,\r\n                backing\r\n            } as DetailChord\r\n        });\r\n        this.curIndex++;\r\n    }\r\n\r\n    public addChordDiatonic = (beatLen: number, scaleIndex: number) => {\r\n        const chord = DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        this.addChord(beatLen, chord.root, chord.symbolKey);\r\n    }\r\n\r\n    public getScoreData = () => { return this.scoreData; }\r\n}\r\n\r\nexport default ScoreBuilder;","import { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [source, setSource] = useState<string>('');\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Left>\r\n                <_Link onClick={() => {\r\n\r\n                    const data: ScoreData = {\r\n                        chordList: [\r\n                            { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' } as DetailInit },\r\n                            { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                            { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                            {\r\n                                type: 'chord', detail: {\r\n                                    beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                    backing: {\r\n                                        voicingList: [],\r\n                                        pattern: null\r\n                                    }\r\n                                } as DetailChord\r\n                            },\r\n                            { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                        ],\r\n                        notesList: []\r\n                    };\r\n                    setSource(JSON.stringify(data));\r\n                }} >Create an empty score.</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    setSource(JSON.stringify(builder.getScoreData()));\r\n                }} >Ⅰ→Ⅴ→Ⅵ→Ⅲm→Ⅳ→Ⅰ→Ⅱm→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    setSource(JSON.stringify(builder.getScoreData()));\r\n                }} >Ⅵm→Ⅳ→Ⅴ→Ⅰ→Ⅵm→Ⅳ→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' });\r\n                    builder.addChordDiatonic(4, 3);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChordDiatonic(4, 2);\r\n                    builder.addChordDiatonic(4, 5);\r\n                    builder.addChordDiatonic(4, 1);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChord(4, { index: 0, isFlat: false }, 'suspend4th');\r\n                    builder.addChordDiatonic(4, 0);\r\n                    setSource(JSON.stringify(builder.getScoreData()));\r\n                }} >Ⅳ→Ⅴ→Ⅲm→Ⅵm→Ⅱm→Ⅴ→Ⅰsus4→Ⅰ</_Link>\r\n            </_Left>\r\n            <_Right>\r\n                <_Source value={source} onChange={e => setSource(e.target.value)} />\r\n                <_ButtonsDiv>\r\n                    <_Button onClick={() => {\r\n                        setSource(JSON.stringify(store.scoreData));\r\n                    }}>Reload</_Button>\r\n                    <_Button onClick={() => {\r\n                        const data = JSON.parse(source);\r\n                        dispatcher.score.setScoreData(data);\r\n                        store.scoreState.focusIndex = 2;\r\n                        dispatcher.score.setScoreState({ ...store.scoreState });\r\n\r\n                        dispatcher.score.setScoreTabIndex(1);\r\n                    }}>Apply</_Button>\r\n                </_ButtonsDiv>\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #888999;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\nconst _Source = styled.textarea`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    height: calc(100% - 44px);\r\n    /* background-color: #7e7e7e; */\r\n    text-align: left;\r\n    font-size: 20px;\r\n    resize: none;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #5f5f5f;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    width: 100px;\r\n    background-color: #afafaf;\r\n    border: 1px solid #4d4d4d;\r\n    color: #292929;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    &:hover {\r\n        background-color: #c4c4c4;\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/scoreState\";\r\nimport { getSymbolDerives as getSymbolDerives, getSymbolFromKey, SymbolKey, SymbolParams, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = getSymbolFromKey(detail.symbolKey) as SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: SymbolKey[] = [];\r\n        const parentLine: SymbolKey[] = [];\r\n        const childrenLine: SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = getSymbolDerives(baseSymbol.key);\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = getSymbolDerives(curSymbol.key);\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../../redux/store/scoreState\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        bar = cache.bar + 1;\r\n    }\r\n    const isError = bar !== -1 && cache.beat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n    }\r\n\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.beat === 0 ? <>&nbsp;</> : cache.beat}\r\n                        {/* {` (+0.25)`} */}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : ` (${cache.minute})`}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailChange } from \"../../../../../../redux/store/scoreData\";\r\n\r\nconst ElementDetailChange = (props: {\r\n    detail: DetailChange;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                Modulation\r\n            </_Type>\r\n            <_Detail>\r\n                Domm+1\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { DIATONIC_MAJOR_SCALE_DEGREE_NAMES, getChordRoot, getDegreeRoot, getSymbolFromKey, ScaleRelation } from \"../../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 0.5 | 0.25;\r\n\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isCurrent: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const minute = props.detail.minute;\r\n\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() =>\r\n        <_Wrap>\r\n            <_Degree\r\n                isSwitch={keySwitch.editMode && props.isCurrent}\r\n                scaleRelation={degreeRoot != null && DIATONIC_MAJOR_SCALE_DEGREE_NAMES.includes(degreeRoot + symbolName) ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={keySwitch.editMode && props.isCurrent}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n            {/* <_Backing></_Backing> */}\r\n        </_Wrap>\r\n        , [\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            state.keySwitch.editMode,\r\n            cache.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 28px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 20px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #422e3099;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 0.5 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 0.25 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Backing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 2px;\r\n    background-color: #00a048;\r\n`;","import styled from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    const jsxList: JSX.Element[] = [];\r\n    jsxList.push(<_Border key={0} />);\r\n    jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    /* border: 1px solid #00000083; */\r\n    background-color: #c2c2c237;\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n    height: 100%;\r\n    background-color: #d1d1d1;\r\n    vertical-align: middle;\r\n`;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #1b003d6f;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST } from \"../../../../../../utils/theoryUtils\";\r\n\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.timeSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst ElementDetailSection = (props: {\r\n    index: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>{curSection.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChange = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>Key</_Type>\r\n            <_Detail>C→Am</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { ElementType, useContext, useEffect, useRef } from \"react\";\r\nimport { CgDetailsLess } from \"react-icons/cg\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TypeElement } from \"typescript\";\r\nimport { DetailChange, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_SHARP_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SymbolEditor from \"../input/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailChange from \"./form/elementDetailChange\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcChange from \"./calc/calcChange\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = store.scoreState;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        dispatcher.score.setScoreState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    // if (props.index > state.elementCacheList.length - 1) {\r\n    //     return <></>;\r\n    // }\r\n\r\n    const isFocus = state.focusIndex === props.index;\r\n    const isSameSection = state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n    return (\r\n        <_Wrap\r\n            ref={wrapRef}\r\n            isSelectable={element.type !== 'fixed'}\r\n            isActive={isFocus}\r\n            isInactive={!isSameSection}\r\n            isChord={element.type === 'chord'}\r\n        >\r\n            <_Head>\r\n                {element.type !== 'chord' ? <></> : (\r\n                    <_CurKey>{KEY12_SHARP_LIST[cache.keyIndex]}</_CurKey>\r\n                )}\r\n            </_Head>\r\n\r\n            {/* 要素の入力フォーム */}\r\n            {['init', 'chord', 'section', 'change'].includes(element.type) ? (\r\n                <_Form\r\n                    ref={bodyRef}\r\n                    isActive={isFocus}\r\n                    isInactive={!isSameSection}\r\n                    type={element.type}\r\n                    isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                    onClick={() => {\r\n                        if (element.type === 'fixed') {\r\n                            return;\r\n                        }\r\n                        state.focusIndex = props.index;\r\n                        dispatcher.score.setScoreState(state);\r\n                    }}\r\n                >{(() => {\r\n                    switch (element.type) {\r\n                        case 'init': {\r\n                            const detail = element.detail as DetailInit;\r\n                            return (<ElementDetailInit detail={detail} />);\r\n                        }\r\n                        case 'section': {\r\n                            const detail = element.detail as DetailSection;\r\n                            return (<ElementDetailSection index={props.index} />);\r\n                        }\r\n                        case 'chord': {\r\n                            const detail = element.detail as DetailChord;\r\n                            return (<ElementDetailChord detail={detail} isCurrent={isFocus} />);\r\n                        }\r\n                        case 'change': {\r\n                            const detail = element.detail as DetailChange;\r\n                            return (<ElementDetailChange detail={detail} />);\r\n                        }\r\n                    }\r\n                })()}\r\n                </_Form>\r\n            ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n            {/* 入力フォーム下部の計算によって出力される情報 */}\r\n            {\r\n                element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                    element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                        element.type === 'change' ? (<CalcChange index={props.index} />) :\r\n                            <></>\r\n            }\r\n            <>{!(isCurrent && chordDetail != null && chordDetail.root != null && store.scoreState.keySwitch.symbolMode) ? '' :\r\n                <SymbolEditor />\r\n            }</>\r\n            {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                <_Operations>\r\n                    <_OperationItem>-</_OperationItem>\r\n                    <_OperationItem onClick={() => dispatcher.score.addChordElement()}>+</_OperationItem>\r\n                </_Operations>\r\n            )}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    border: solid 1px #00000049;\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #ff000084;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #006823a7;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'change' ? '' : css`\r\n        border: solid 1px #1800a1a7;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 6px;\r\n    ${props => props.isInactive ? '' : css`\r\n        background-color: #ebebeb84;\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #d85cce5a;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isChord: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isChord ? '' : css`\r\n        background-color: #e4ecd039;\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #fffb0018;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\nimport SymbolEditor from \"./input/symbolEditor\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const num = store.scoreData.chordList.length;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (store.scoreState.elementCacheList.length === num) {\r\n        for (let i = 0; i < num; i++) {\r\n            list.push(\r\n                <ScoreElement key={i} index={i} />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Frame> */}\r\n            <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note>\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #f1f1f1;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, DetailInit } from \"../redux/store/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport { playPiano } from \"./melodyUtil\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"./theoryUtils\";\r\n\r\nnamespace HarmonizeUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n        const state = store.scoreState;\r\n        const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        const reserveTasks = store.reserveTasks;\r\n        let firstTime = -1;\r\n        const update = () => {\r\n            // if (store.invalidate.harmonize) {\r\n            //     store.invalidate.harmonize();\r\n            // }\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n        // const reserveTasks = store.reserveTasks;\r\n        const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = state.focusIndex; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                // 開始時のノーツの位置（時間）を保存する。\r\n                if (firstTime === -1) {\r\n                    firstTime = cache.pastSecond;\r\n                }\r\n\r\n\r\n                if (detail.root == null) continue;\r\n\r\n                const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n                const symbol = getSymbolFromKey(detail.symbolKey);\r\n                const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n                const chordTime = 60 / init.bpm * len;\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // sampler.releaseAll();\r\n                        // stopPiano(store);\r\n                        // store.melodyState.mouseState.curChord = element;\r\n                        // dispatcher.tune.setState(store.melodyState);\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n                        state.focusIndex = i;\r\n                        update();\r\n\r\n                    }, cache.pastSecond - firstTime - adjsut)\r\n                );\r\n            }\r\n\r\n            if (i === chordList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (cache.pastSecond - firstTime - adjsut))\r\n                );\r\n            }\r\n        }\r\n        state.isPreview = true;\r\n        update();\r\n    }\r\n\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        state.isPreview = false;\r\n        // store.instruments.sampler.releaseAll();\r\n        // state.focusIndex = state.lastFocus;\r\n        reserveTasks.forEach(id => clearTimeout(id));\r\n        dispatcher.system.setReserveTasks([]);\r\n        dispatcher.score.setScoreState(state);\r\n\r\n        store.instruments.piano?.stop();\r\n    }\r\n\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.scoreState;\r\n        const reserveTasks = store.reserveTasks;\r\n        const chordList = store.scoreData.chordList;\r\n        const init = chordList[0].detail as DetailInit;\r\n        const curChord = store.scoreData.chordList[state.focusIndex];\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n            const chordTime = 60 / init.bpm * len;\r\n\r\n            BackingUtil.playBacking(store, store.reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n            \r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.score.setScoreState(state);\r\n            }, chordTime * 1000));\r\n            state.isPreview = true;\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n    }\r\n}\r\n\r\nexport default HarmonizeUtil;\r\n","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { backingEditorInput } from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    // プレビュー再生時\r\n    if (state.isPreview) {\r\n        switch (e.key) {\r\n            case ' ': {\r\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n        return;\r\n    } else {\r\n        if (store.scoreState.hideMenu === 'none') {\r\n            if (isElement) {\r\n                if (keySwitch.editMode) {\r\n                    switch (e.key) {\r\n                        case config.decRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(false);\r\n                        }\r\n                            break;\r\n                        case config.incRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(true);\r\n                        }\r\n                            break;\r\n                        case config.decBeat: {\r\n                            dispatcher.score.incrementBeatLen(false);\r\n                        }\r\n                            break;\r\n                        case config.incBeat: {\r\n                            dispatcher.score.incrementBeatLen(true);\r\n                        }\r\n                            break;\r\n                        case 'A': dispatcher.score.incrementMinuteValRelation(false, -0.25); break;\r\n                        case 'S': dispatcher.score.incrementMinuteValRelation(false, 0.25); break;\r\n                        case 'D': dispatcher.score.incrementMinuteValRelation(true, -0.25); break;\r\n                        case 'F': dispatcher.score.incrementMinuteValRelation(true, 0.25); break;\r\n                    }\r\n                } else if (keySwitch.symbolMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.symbol.toNext(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.symbol.toNext(true);\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.symbol.toBase();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.symbol.toDerive();\r\n                        }\r\n                            break;\r\n                    }\r\n                } else {\r\n                    NoteBasicInput(e, store, dispatcher);\r\n                }\r\n            }\r\n        } else if (store.scoreState.hideMenu === 'backing') {\r\n            backingEditorInput(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const state = store.scoreState;\r\n    if (!state.isPreview) {\r\n        if (state.hideMenu === 'none') {\r\n            const config = store.userEnv.keyConfig.note;\r\n            const keySwitch = store.scoreState.keySwitch;\r\n            // alert(e.key);\r\n            // alnfig.nextElement);\r\n            switch (e.key) {\r\n                case config.editMode: {\r\n                    keySwitch.editMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n                case config.symbolMode: {\r\n                    keySwitch.symbolMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { playChordSoundfont } from \"../../../../../utils/instrumentsUtil\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                }\r\n                    break;\r\n                case 'x': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.score.cloneBacking();\r\n                    }\r\n                }\r\n                    break;\r\n                case 'v': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.score.pastBacking();\r\n                    }\r\n                }\r\n                    break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(Number(e.key) - 1);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.prevElement: {\r\n            dispatcher.score.moveElement(false);\r\n        }\r\n            break;\r\n        case config.nextElement: {\r\n            dispatcher.score.moveElement(true);\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.prevSection: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.nextSection: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'm': {\r\n            dispatcher.score.addChangeElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case ' ': {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        }\r\n            break;\r\n    }\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport BackingState from \"../../../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\n\r\nexport const backingEditorInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.backingState;\r\n\r\n    if (state == null) return;\r\n\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const pattern = state.pattern;\r\n\r\n\r\n    if (!state.isPreview) {\r\n        switch (e.key) {\r\n            case 'b': {\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n            case 'Enter': {\r\n                dispatcher.backing.mappingEditorToScore();\r\n            }\r\n                break;\r\n            case ' ': {\r\n                dispatcher.backing.testBacking();\r\n            }\r\n                break;\r\n        }\r\n\r\n        if (pattern != null) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft': {\r\n                    dispatcher.backing.movePatternColumn(false);\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    dispatcher.backing.movePatternColumn(true);\r\n                }\r\n                    break;\r\n            }\r\n            if (pattern.channelIndex === -1) {\r\n\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        // dispatcher.backing.moveChannelIndex(false);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        // dispatcher.backing.moveChannelIndex(true);\r\n                    }\r\n                        break;\r\n                    case 'a': {\r\n                        dispatcher.backing.addPatternColumn();\r\n                    }\r\n                        break;\r\n                    case 'w': {\r\n                        dispatcher.backing.changeLayer();\r\n                    }\r\n                        break;\r\n                    case '1': {\r\n                        dispatcher.backing.setCurrentDivRate(16);\r\n                    }\r\n                        break;\r\n                    case '2': {\r\n                        dispatcher.backing.setCurrentDivRate(8);\r\n                    }\r\n                        break;\r\n                    case '3': {\r\n                        dispatcher.backing.setCurrentDivRate(4);\r\n                    }\r\n                        break;\r\n                    case '4': {\r\n                        dispatcher.backing.setCurrentDivRate(2);\r\n                    }\r\n                        break;\r\n                    case '5': {\r\n                        dispatcher.backing.setCurrentDivRate(1);\r\n                    }\r\n                        break;\r\n                    case '.': {\r\n                        dispatcher.backing.toggleCurrentDivHalf();\r\n                    }\r\n                        break;\r\n                    case 'Delete': {\r\n                        dispatcher.backing.deleteColumn();\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        pattern.channelIndex = 0;\r\n                        update();\r\n                    }\r\n                        break;\r\n\r\n                }\r\n            } else {\r\n\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.backing.moveChannelIndex(false);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.backing.moveChannelIndex(true);\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        pattern.channelIndex = -1;\r\n                        update();\r\n                    }\r\n                        break;\r\n                    case 'Enter': {\r\n                        const curNotes = dispatcher.backing.getNotes();\r\n                        const notes: BackingState.NoteStatus | null = curNotes == null ? { signal: 'n', timing: 0, velAdj: 0 } : null;\r\n                        dispatcher.backing.setNotes(notes);\r\n                    }\r\n                        break;\r\n\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n\r\n        switch (e.key) {\r\n            case ' ': {\r\n                BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ROOT_ALL, getChordRoot, getDegreeRoot, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport MinuteForm from \"./minuteForm\";\r\n\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    \r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i} isExist={isExist} onClick={() => {\r\n                const data = store.scoreData;\r\n                data.chordList = data.chordList.slice();\r\n                detail.beatLen = (i + 1);\r\n                data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={root != null && [0, 2, 4, 5, 7, 9, 11].includes(root.index)}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {getDegreeRoot(root)} ({getChordRoot(root, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_LabelBeat>{'Beat Length'}</_LabelBeat>\r\n                <_Beat>\r\n                    {beatItemsJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    <_LabelMinute>{'Minute Head'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={true} /> */}\r\n                    <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                    <_LabelMinute>{'Minute Tail'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_Root>\r\n                    {rootItemsJsx}\r\n                </_Root>\r\n                <_Symbol\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_Symbol>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _LabelBeat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #c50000; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100px;\r\n    text-align: left;\r\n    background-color: #9c93b9;\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 2px;\r\n        width: calc(100% - 4px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 75px;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _LabelMinute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #222222;\r\n    text-align: center;\r\n`;\r\n// const _Minutetem = styled.div<{\r\n//     isExist: boolean;\r\n// }>`\r\n//     display: inline-block;\r\n//     width: 20%;\r\n//     height: 20px;\r\n//     text-align: left;\r\n//     background-color: #4c3696;\r\n//     font-size: 18px;\r\n//     font-weight: 600;\r\n//     color: #ce0000;\r\n//     line-height: 12px;\r\n//     text-align: center;\r\n\r\n//     & span{\r\n//         display: inline-block;\r\n//         margin: 2px 0 0 2px;\r\n//         width: calc(100% - 4px);\r\n//         height: calc(100% - 4px);\r\n//         background-color: #9b8585;\r\n//         ${props => !props.isExist ? '' : css`\r\n//             /* background-color: #ebf37eb7; */\r\n//             background: linear-gradient(to bottom, #bdb652d2, #fff56cd3, #bdb652d2);\r\n//         `}\r\n//     }\r\n// `;\r\nconst _MinuteItem = styled.input<{\r\n    isReverse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: 20px;\r\n    color: #3b51d1;\r\n    ${props => !props.isReverse ? '' : css`\r\n        transform: rotateY(180deg);\r\n    `}\r\n`;\r\n\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 360px;\r\n    text-align: left;\r\n    background-color: #78b48c;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Root = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #e6e6e6;\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #ff6060bd;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #ff9090bc;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #90d3ffbb;`}\r\n    }\r\n`;\r\n\r\nconst _Symbol = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 90px);\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #99e07d;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isActive ? '' : css`background-color: #ff6060bd;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #ff9090bc;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const scaleItemJsxList: JSX.Element[] = ['major', 'minor'].map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n\r\n    const rateItemJsxList: JSX.Element[] = ['4/4', '3/4'].map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.timeSignature === item} onClick={() => {\r\n                detail.timeSignature = item as BeatSignature;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            <_TempoWrap>\r\n                <input\r\n                    type=\"number\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n                <input\r\n                    type=\"range\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n            </_TempoWrap>\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    margin: 5px 0 0 0;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        ['Intro', 'A-mero', 'B-mero', 'Sabi', 'C-mero', 'Outro'].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={()=>{\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        [1, 2, 3, 4].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item.toString()) !== -1;\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}>\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n            <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #b89b9b;\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 24px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: 60%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: 40%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #61b4b0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst NoteSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'change': return <></>;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default NoteSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../redux/store/scoreState\";\r\nimport { TIMELINE_BEAT_WIDTH } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport BlockItem from \"./blockItem\";\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    let curBeatJsx: JSX.Element = <></>;\r\n    let prevBeatJsx: JSX.Element = <></>;\r\n    let nextBeatJsx: JSX.Element = <></>;\r\n    let curMinuteJsx: JSX.Element = <></>;\r\n    let prevMinuteJsx: JSX.Element = <></>;\r\n    let nextMinuteJsx: JSX.Element = <></>;\r\n\r\n    const memoriJsxList: JSX.Element[] = [];\r\n\r\n    //現在の要素取得\r\n\r\n    let curIndex = 2;\r\n    let prevIndex = 2;\r\n    let nextIndex = dataList.length - 1;\r\n    let temp = focusIndex;\r\n    while (temp > 2) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            curIndex = temp;\r\n            break;\r\n        }\r\n        temp--;\r\n    }\r\n    // 前が存在する\r\n    if (curIndex > 2) {\r\n        temp = curIndex - 1;\r\n        while (temp > 2) {\r\n            const element = dataList[temp];\r\n            if (element.type === 'chord') {\r\n                prevIndex = temp;\r\n                break;\r\n            }\r\n            temp--;\r\n        }\r\n    }\r\n    temp = focusIndex + 1;\r\n    while (temp < dataList.length - 1) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            nextIndex = temp;\r\n            break;\r\n        }\r\n        temp++;\r\n    }\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const add = (sustain: number, cache: ElementCache): void => {\r\n        const adjust = cache.beat + cache.minute;\r\n        for (let i = 0; i < Math.floor(sustain / 0.25); i++) {\r\n            const pos = i + Math.floor(adjust / 0.25);\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { width: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n            memoriJsxList.push(\r\n                <_Memori\r\n                    key={memoriJsxList.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {pos % 16 === 0 ? <_Bar>{cache.bar + 1 + (adjust === 0 ? 0 : 1)}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        }\r\n    }\r\n\r\n    if (curIndex > 2) {\r\n\r\n        if (prevIndex === 2) {\r\n            prevBeatJsx = (\r\n                <_Prev sustain={4}>start</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={4} />\r\n            );\r\n\r\n            memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n        } else {\r\n            const chord = dataList[prevIndex].detail as DetailChord;\r\n            const cache = cacheList[prevIndex];\r\n            const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n            prevBeatJsx = (\r\n                <_Prev sustain={chord.beatLen}>Prev</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={sustain} />\r\n            );\r\n\r\n            add(sustain, cache);\r\n        }\r\n    }\r\n    if (curIndex === 2) {\r\n        curBeatJsx = (\r\n            <_Cur sustain={4}>start</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[curIndex].detail as DetailChord;\r\n        const cache = cacheList[curIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        curBeatJsx = (\r\n            <_Cur sustain={chord.beatLen}>Cur</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={sustain} />\r\n        );\r\n\r\n        add(sustain, cache);\r\n    }\r\n    if (nextIndex === dataList.length - 1) {\r\n        nextBeatJsx = (\r\n            <_Next sustain={4}>end</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[nextIndex].detail as DetailChord;\r\n        const cache = cacheList[nextIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        nextBeatJsx = (\r\n            <_Next sustain={chord.beatLen}>Next</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={sustain} />\r\n        );\r\n\r\n        add(sustain + 0.25, cache);\r\n    }\r\n\r\n    // const curSustain = nextCache.beat - curCache.beat;\r\n    return (\r\n        <_Wrap>\r\n            <_Blocks>\r\n                <_Beat>\r\n                    {prevBeatJsx}\r\n                    {curBeatJsx}\r\n                    {nextBeatJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    {prevMinuteJsx}\r\n                    {curMinuteJsx}\r\n                    {nextMinuteJsx}\r\n                </_Minute>\r\n            </_Blocks>\r\n            <_Measure>\r\n                {memoriJsxList}\r\n            </_Measure>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst BEAT_WIDTH = 50;\r\n\r\nconst _Wrap = styled.div`\r\n    overflow: hidden;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    height: 10px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.sustain * BEAT_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Prev = styled(_Item) <{\r\n}>`\r\n    background-color: rgba(0, 21, 211, 0.158);\r\n`;\r\n\r\nconst _Cur = styled(_Item) <{\r\n}>`\r\n    background-color: rgb(233, 5, 5);\r\n`;\r\n\r\nconst _Next = styled(_Item) <{\r\n}>`\r\n    background-color: rgba(31, 189, 0, 0.144);\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Start = styled.div`\r\n    display: inline-block;\r\n    width: ${BEAT_WIDTH * 4}px;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${BEAT_WIDTH / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { getIntervalValues, getSymbolFromKey, IntervalRelationProps } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const scaleList = cache == null ? [] : [0, 2, 4, 5, 7, 9, 11].map(value => (cache.keyIndex + value) % 12);\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = getIntervalValues((root.index + cache.keyIndex) % 12, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        for (let i = 0; i < 14; i++) {\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            {/* <_Info>{tipJsxList}</_Info> */}\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    /* background-color: #4b4b4b; */\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    border: 1px solid #ffffffda;\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#c3c3d6, #8989a8);\r\n    ` : css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#3e9ef7, #254e74);\r\n    ` : css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst InitialBeatTip = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const tipJsxList:JSX.Element[] = [];\r\n    for(let i = 0; i < 4; i ++) {\r\n        tipJsxList.push(\r\n            <_Tip key={i} isActive={state.initialBeat > i} onClick={()=> {\r\n                state.initialBeat = i + 1;\r\n                dispatcher.score.setScoreState(state);\r\n            }}/>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Label>inital beat</_Label>\r\n            <_WrapTip>{tipJsxList}</_WrapTip>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default InitialBeatTip;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\nconst _WrapTip = styled.div`\r\n    display: inline-block;\r\n    width: 142px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 8px;\r\n    border-radius: 4px;\r\n    border: solid 1px #747474;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 4px;\r\n    background-color: #d6d6d6;\r\n    ${props => !props.isActive ? '' : css`background-color: #eeedcf;`}\r\n    border: solid 1px #b9b9b9;\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n    pattern.layers.forEach((layer, j) => {\r\n\r\n        const jsxLsit: JSX.Element[] = [];\r\n        for (let i = 0; i < channelCount; i++) {\r\n            const notesJsxLsit: JSX.Element[] = [];\r\n\r\n            layer.noteDivList.forEach((note, k) => {\r\n                const channelIndex = (channelCount - 1) - i;\r\n                const isActive = pattern.lenIndex === k;\r\n                const cell = layer.table[channelIndex][k];\r\n                const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                const isUse = cell != null;\r\n                const isEdit = isActive && pattern.channelIndex === i;\r\n                let rate = note.rate;\r\n                if (note.isDot) rate /= 1.5;\r\n                if (note.div3 !== 0) rate /= note.div3 / 3;\r\n                notesJsxLsit.push(\r\n                    <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                        <_State isUse={isUse} signal={'n'} isBack={pattern.layerIndex !== j}\r\n                            onClick={() => {\r\n                                if (cell == null) {\r\n                                    setNotesStatus({ signal: 'n', timing: 0, velAdj: 0 });\r\n                                } else {\r\n                                    setNotesStatus(null);\r\n                                }\r\n                                update();\r\n                            }}\r\n                            onContextMenu={() => {\r\n                                pattern.channelIndex = i;\r\n                                pattern.lenIndex = k;\r\n                                update();\r\n                            }}\r\n                        />\r\n                    </_Notes>\r\n                );\r\n            });\r\n            jsxLsit.push(\r\n                <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                    {notesJsxLsit}\r\n                </_Record>\r\n            );\r\n        }\r\n        layerJsxList[j] = jsxLsit;\r\n    });\r\n\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n        isActive: boolean;\r\n    }>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    isUse: boolean;\r\n    signal: BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => !props.isUse ? '' : css<{\r\n        isBack: boolean;\r\n    }>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        ${props => !props.isBack ? '' : css`\r\n        background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.3;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => !props.isUse ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternTable from \"./patternTable\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.getVoicingStructs(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs ,pattern.channels.length + 1);\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.getVoicingStructs(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs ,pattern.channels.length - 1);\r\n        update();\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap>\r\n            <_Struct>{props.soundFullName}</_Struct>\r\n            <_Option onClick={deleteRecord}>-</_Option>\r\n            <_Option onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n    const pattern = state.pattern;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    const layerJsxList: JSX.Element[] = [];\r\n    if (pattern != null) {\r\n        const channels = pattern.channels;\r\n        channels.forEach((channel, i) => {\r\n            let name = '-';\r\n            if (channel.octave !== -1) {\r\n                const soundIndex = chordInfo.chordRoot + IntervalRelationProps[symbol.structs[channel.structIndex]];\r\n                const octave = channel.octave + Math.floor(soundIndex / 12);\r\n                name = KEY12_SHARP_LIST[soundIndex % 12] + octave;\r\n            }\r\n            channelJsxList.push(\r\n                <ChannelItem key={i}\r\n                    index={i}\r\n                    soundFullName={name}\r\n                />\r\n            );\r\n        });\r\n\r\n        pattern.layers.forEach((layer, i) => {\r\n            const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\r\n            layerJsxList.push(\r\n                <_LayerItem key={i} isActive={pattern.layerIndex === i}\r\n                    onClick={()=>{\r\n                        if(i !== pattern.layerIndex) {\r\n                            dispatcher.backing.changeLayer();\r\n                        }\r\n                    }}\r\n                >\r\n                    {labelName}\r\n                </_LayerItem>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            {layerJsxList}\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #929292;\r\n`;\r\n\r\nconst _LayerItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #dad600;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternStatus = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={true} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.getVoicingStructs(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot, () => {\r\n            cur.isDot = !cur.isDot;\r\n            update();\r\n        })}\r\n        {createItem('1/3', cur.div3 === 1, () => {\r\n            if (cur.div3 === 1) cur.div3 = 0;\r\n            else cur.div3 = 1;\r\n            update();\r\n        })}\r\n        {createItem('2/3', cur.div3 === 2, () => {\r\n            if (cur.div3 === 2) cur.div3 = 0;\r\n            else cur.div3 = 2;\r\n            update();\r\n        })}\r\n    </_WrapLen>;\r\n\r\n\r\n    const selectedCell = pattern.channelIndex === -1 ? null :\r\n        pattern.layers[pattern.layerIndex].table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', selectedCell == null, () => {\r\n\r\n            update();\r\n        })}\r\n\r\n        {createItem('□', selectedCell != null && selectedCell.signal === 'n', () => {\r\n\r\n            update();\r\n        })}\r\n        {createItem('・', selectedCell != null && selectedCell.signal === 's', () => {\r\n\r\n            update();\r\n        })}\r\n        {createItem('⁀', selectedCell != null && selectedCell.signal === 't', () => {\r\n\r\n            update();\r\n        })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternStatus;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternStatus from \"./patternStatus\";\r\n\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button isActive={isUsePattern}\r\n                        onClick={() => {\r\n                            if (!isUsePattern) {\r\n                                const table = state.voicingTable as boolean[][];\r\n                                const voicingStructs = BackingUtil.getVoicingStructs(table);\r\n                                const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n                                state.pattern = {\r\n                                    layerIndex: 0,\r\n                                    lenIndex: 0,\r\n                                    channelIndex: -1,\r\n                                    channels,\r\n                                    isUsePedal: false,\r\n                                    layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n                                } as BackingState.Pattern;\r\n                                update();\r\n                            } else {\r\n                                state.pattern = null;\r\n                                update();\r\n                            }\r\n                        }}>Use\r\n                    </_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternStatus /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #e00000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #ff0000;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { playChordSoundfont } from \"../../../utils/instrumentsUtil\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n\r\n    const table = state.voicingTable as boolean[][];\r\n    const pattern = state.pattern;\r\n\r\n    const voicingLaneJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const tipJsxList: JSX.Element[] = [];\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = symbol.structs.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n\r\n            const interval = IntervalRelationProps[symbol.structs[j]];\r\n            const chordIndex = (chordInfo.chordRoot + interval) % 12;\r\n            const octave = i + Math.floor((chordInfo.chordRoot + interval) / 12);\r\n\r\n            const name = !isEnable ? '' : `${KEY12_SHARP_LIST[chordIndex]}${octave}`;\r\n            tipJsxList.push(\r\n                <_VoicingItem key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: BackingState.ChannelParam[] = BackingUtil.getVoicingStructs(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.piano;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_VoicingItem>\r\n            );\r\n        }\r\n        voicingLaneJsxList.push(\r\n            <_VoicingLane key={i}>\r\n                {tipJsxList}\r\n            </_VoicingLane>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Info>\r\n\r\n            </_Info>\r\n            <_Main>\r\n                <_Left>\r\n                    <_Relation>root [C]</_Relation>\r\n                    <_Relation>long3 [E]</_Relation>\r\n                    <_Relation>perfect5 [G]</_Relation>\r\n                </_Left>\r\n                <_Right>{voicingLaneJsxList}</_Right>\r\n            </_Main>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _Info = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _Relation = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _VoicingLane = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VoicingItem = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #43a6c4;\r\n    color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #3f70bb;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../redux/store/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_PrevireBrind isUse={state.isPreview} />\r\n            <VoicingChooser />\r\n            <PatternFrame />\r\n            <_FooterDiv>\r\n                <_Button isEnable={true} onClick={() => {\r\n\r\n                    if (!state.isPreview) {\r\n                        dispatcher.backing.testBacking();\r\n                    } else {\r\n                        BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                    }\r\n                }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Cancel</_Button>\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.mappingEditorToScore();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/scoreData\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport PatternFrame from \"../../../backing/pattern/patternFrame\";\r\nimport VoicingChooser from \"../../../backing/voicing/voicingChooser\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const cur = chordList[focusIndex];\r\n    const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={isBackingEnable}\r\n                onClick={() => {\r\n                    if (state.hideMenu === 'none') {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    } else if (state.hideMenu === 'backing') {\r\n                        dispatcher.backing.closeBackingEditor();\r\n                    }\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection } from \"../../../../redux/store/scoreData\";\r\nimport { ElementCache, SectionCache } from \"../../../../redux/store/scoreState\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport NoteSideForm from \"./side/noteSideForm\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport { getBeatRate } from \"../../../../utils/theoryUtils\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\n\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const state = store.scoreState;\r\n    const init = (store.scoreData.chordList[0].detail as DetailInit);\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, harmonize: () => {\r\n                dispatcher.system.setInvalidate({\r\n                    ...store.invalidate, harmoniizeInvalidate: {}\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    useEffect(() => {\r\n        const elementCacheList: ElementCache[] = [];\r\n        const sectionCacheList: SectionCache[] = [];\r\n\r\n        let prevBeat = 0;\r\n        let totalBeat = 0;\r\n        let prevMinute = 0;\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let keyIndex = -1;\r\n        let sectionBeatSum = 0;\r\n\r\n        chordList.forEach((element, i) => {\r\n            const type = element.type;\r\n            switch (type) {\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        prevBeat = totalBeat;\r\n                        prevMinute = totalMinute;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'init': {\r\n                    const detail = element.detail as DetailInit;\r\n                    keyIndex = detail.keyIndex;\r\n                }\r\n                    break;\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'chord': {\r\n                    const detail = element.detail as DetailChord;\r\n                    prevBeat = totalBeat;\r\n                    totalBeat += detail.beatLen;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    prevMinute = totalMinute;\r\n                    totalMinute += detail.minute.head;\r\n                    totalMinute += detail.minute.tail;\r\n                }\r\n                    break;\r\n                case 'change': {\r\n\r\n                }\r\n                    break;\r\n            }\r\n\r\n            const pastSecond = 60000 / init.bpm * (prevBeat + prevMinute);\r\n            const beatRate = getBeatRate(init.timeSignature)[0];\r\n            elementCacheList.push({\r\n                bar: Math.floor(prevBeat / beatRate),\r\n                beat: prevBeat % beatRate,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                sectionNo,\r\n                pastSecond,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        store.scoreState.elementCacheList = elementCacheList;\r\n        store.scoreState.sectionCacheList = sectionCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }, [chordList, chordList.length, init.bpm]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Left>\r\n                <_Head isEnable={!state.isPreview}>\r\n                    <InitialBeatTip />\r\n                </_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP><HarmMeasure /></_TIMELINE_WRAP>\r\n                    <_INFO_WRAP><ChordInfo /></_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right isEnable={!state.isPreview}>\r\n                <NoteSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Head = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    position: absolute;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #ddc2c2;\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 36px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #e7e7e6be;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #aaaaaa;\r\n    border-radius: 20px 20px 20px 20px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 20px;\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: #888;\r\n        /* background-color: #c500003b; */\r\n        line-height: 18px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 16px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #10c5003a; */\r\n        line-height: 16px;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport { previewCurHarmony } from \"../../../../utils/melodyUtil\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barLength * 4 * 4; i++) {\r\n            let barJsx = <></>;\r\n            if (i % 16 == 0) {\r\n                barJsx = <_Bar>{Math.floor(i / 16) + 1}</_Bar>\r\n            }\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={beatWidth}>\r\n                    {barJsx}\r\n                </_Scale>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const symbolNmae = getSymbolFromKey(detail.symbolKey)?.name;\r\n                const degreeName = detail.root == null ? '-' :\r\n                    getDegreeRoot(detail.root) + symbolNmae;\r\n                const chordName = detail.root == null ? '-' :\r\n                    getChordRoot(detail.root, init.keyIndex) + symbolNmae;\r\n                jsxList.push(\r\n                    <_ChordItem key={jsxList.length}\r\n                        width={beatWidth * (detail.beatLen + detail.minute.head + detail.minute.tail)}\r\n                        isActive={element == curChord}\r\n                        onClick={() => {\r\n                            state.isTune = false;\r\n                            state.focusIndex = i;\r\n                            dispatcher.score.setScoreState(state);\r\n                        }}\r\n                        onContextMenu={() => {\r\n                            previewCurHarmony(store, dispatcher);\r\n                        }}\r\n                    >\r\n                        <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                    </_ChordItem>\r\n                );\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_Measure ref={measureRef}>\r\n            {measureJsxList}\r\n            <_MousePos\r\n                left={mouseMeasurePos * beatWidth * rate}\r\n                width={beatWidth * rate}\r\n            />\r\n        </_Measure>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _Measure = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Bar = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #ec0000;\r\n    left: -5px;\r\n    top: -20px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #758f94;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #637596;\r\n    ${props => !props.isStruct ? '' : css`background-color: #949494;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                state.isPreview = true;\r\n                dispatcher.tune.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.tune.setInstrument(soundFontPlayer);\r\n                    }).then(() => {\r\n                        state.isPreview = false;\r\n                        dispatcher.tune.setState(state);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #c7c6abda;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fffd7eda;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e6e2c5da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #fffd7eda;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst ControlButton = (props: {\r\n    labelName: string;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ControlButton;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #a8bae0, #818ada, #a8bae0);\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d5d6e;\r\n    border-radius: 2px;\r\n    border: solid 1px #737374;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to bottom, #c2d0f0, #929beb, #c2d0f0);\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\n\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={state.quantize === 4} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.tune.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.tune.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} />\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 6 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.mouseState;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.mouseState;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.distIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    notes.len = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    // dispatcher.tune.setNotesList(notesList.slice());\r\n                    store.scoreData.notesList = notesList.slice();\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    notes.pos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    // dispatcher.tune.setNotesList(notesList.slice());\r\n                    store.scoreData.notesList = notesList.slice();\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.mouseState;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.tune.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.tune.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { previewCurHarmony, stopPreview } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n        const isSingle = state.focusIndex === state.distIndex;\r\n        // const notesList = store.scoreData.notesList;\r\n        const mouse = state.mouseState;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.tune.copyNotes(); break;\r\n                    case 'v': dispatcher.tune.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.tune.allSelect();\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.tune.incrementCurNoteKey(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.tune.incrementCurNoteKey(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveDistFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveDistFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.tune.incrementCurNoteKey(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.tune.incrementCurNoteKey(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        dispatcher.tune.moveFocus(false);\r\n                    } else {\r\n                        dispatcher.tune.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        dispatcher.tune.moveFocus(true);\r\n                    } else {\r\n                        dispatcher.tune.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.tune.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.tune.adjustScrollX(); break;\r\n                case 'e': dispatcher.tune.adjustScrollY(); break;\r\n                case 'z': {\r\n                    previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.tune.firstNotes();\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.tune.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.tune.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.tune.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.distIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.tune.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.tune.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SCALE_INDEX } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.mouseState;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n\r\n    const barCount = 20;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, melody: () => setInvalidate({})\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barCount * 4 * 4; i++) {\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={state.beatWidth} />\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barCount]);\r\n\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n    const scaleLineJsxList = useMemo(() => {\r\n        const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < PITCH_MAX; i++) {\r\n            const keyIndex = getKeyIndexFromPitcher(i);\r\n            list.push(\r\n                <_ScaleLine key={i}\r\n                    isScale={scaleIndexies.includes(keyIndex)}\r\n                    isBase={keyIndex === scaleIndexies[0]}\r\n                />\r\n            );\r\n        }\r\n        return list;\r\n    }, [init.keyIndex]);\r\n\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        let count = 0;\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const notesLeft = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const notesRight = notesLeft + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                if (notesRight - scroll < 0 ||\r\n                    notesLeft - scroll > tableRef.current.clientWidth) {\r\n                    continue;\r\n                }\r\n            }\r\n            count++;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n\r\n            // クオンタイズ\r\n            const unitPos = getMinimumLenUnit(notes.pos);\r\n            const unitLen = getMinimumLenUnit(notes.len);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={getNormalizeLenFromNotes(notes.pos) * state.beatWidth}\r\n                    width={getNormalizeLenFromNotes(notes.len) * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.tune.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\r\n                        isScale={isScale}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        console.log('cnt: ' + count);\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.distIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move,\r\n        invalidate]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header isEnable={!state.isPreview}>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef}\r\n                    onScroll={() => {\r\n                        const refs = store.refs.melody;\r\n\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const scrollLeft = refs.table.scrollLeft;\r\n                            const scrollTop = refs.table.scrollTop;\r\n                            refs.measure.scrollTo({ left: scrollLeft });\r\n                            refs.chord.scrollTo({ left: scrollLeft });\r\n                            refs.pitch.scrollTo({ top: scrollTop });\r\n                        }\r\n                        update();\r\n                    }}\r\n                >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleLineJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #534b81;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #2727275a;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #00a6cf52;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `};\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `};\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb006d;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #7a270028;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { stopPreview } from \"../../../utils/melodyUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    useEffect(() => {\r\n        const info = melody.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.tune.setInstrument(soundFontPlayer);\r\n            });\r\n\r\n        // acoustic_guitar_steel\r\n        //bright_acoustic_piano\r\n        Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\r\n            { gain: 3, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.score.setPiano(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    const switchMode = () => {\r\n        state.isTune = !state.isTune;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isTune ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isTune ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isTune ? () => {\r\n\r\n        if (!state.isPreview) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        } else {\r\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    } : () => {\r\n\r\n        if (!melody.isPreview) {\r\n            dispatcher.tune.previewStart();\r\n        } else {\r\n            stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    }\r\n    const toggleEnsamble = !state.isTune ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.tune.setState(melody);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode isEnable={!isPreview}>\r\n                    <_ModeItem isActive={!state.isTune} onClick={() => {\r\n                        if (state.isTune) switchMode();\r\n                    }}>Harmonize</_ModeItem>\r\n                    <_ModeItem isActive={state.isTune} onClick={() => {\r\n                        if (!state.isTune) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch onClick={preview}><_SwitchInner isActive={isPreview}>Play</_SwitchInner> / <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner></_Switch>\r\n                    <_Switch onClick={toggleEnsamble}><_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner> / <_SwitchInner isActive={isSolo}>Solo</_SwitchInner></_Switch>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    if (!isPreview) {\r\n                        switch (e.key) {\r\n                            case 'r': switchMode(); break;\r\n                        }\r\n                    }\r\n                }}>\r\n                <_SECTIONS><HarmSections /></_SECTIONS>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isTune} />\r\n                    <MelodyFrame isActive={state.isTune} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div<{\r\n    isEnable: boolean\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 140px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #ecfd5273;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #f6ffa373;\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    { name: 'Preview', disable: !isAccept, cont: <div></div> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DegreeProps, getSymbolFromKey, IntervalRelationProps, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    sampler.releaseAll();\r\n\r\n                    const symbol = getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, disable: true, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, disable: true, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, disable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, disable: true, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { GlobalContext } from './systemEntry';\r\n\r\nconst Splash = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                dispatcher.system.switchSplashToMain();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n        <_Wrap isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Title>\r\n                <span>L</span>iCreSia\r\n            </_Title>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Wrap = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    /* width: 500px;\r\n    height: 500px; */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #d8d8d8; */\r\n    background: radial-gradient(#868686, #ffffff);\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 15%;\r\n    width: 100%;\r\n    height: 400px;\r\n    background-color: #ffffff1f;\r\n    /* background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913); */\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    line-height: 350px;\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\n\r\nconst TotalHeader = () => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport SysModalDialog from '../dialog/sysModalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> : <Splash />}\r\n                <_Wrap>\r\n                    <SysModalDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n  \n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    window.addEventListener(\"keydown\", function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    }, false);\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}