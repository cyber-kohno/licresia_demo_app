{"version":3,"sources":["system/utils/dataUtil.tsx","system/redux/reducer.tsx","system/utils/theoryUtil.tsx","system/utils/backingUtil.tsx","system/utils/cacheUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/utils/instrumentsUtil.tsx","system/redux/store/state/dataHistory.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/globalDialog.tsx","system/base/design/styles.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/contents/score/manage/chordProg/progUnitSearcher.tsx","system/contents/score/manage/chordProg/progStyle.tsx","system/contents/score/manage/chordProg/progBackingUtil.tsx","system/contents/score/manage/chordProg/progUtil.tsx","system/contents/score/manage/chordProg/progCustomFrame.tsx","system/utils/dummyUtil.tsx","system/contents/score/manage/chordProg/progOutputFrame.tsx","system/contents/score/manage/chordProg/progTemplateUtil.tsx","system/contents/score/manage/chordProg/progTemplateFrame.tsx","system/contents/score/manage/chordProg/chordProgDialog.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/tool/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailAlter.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcAlter.tsx","system/contents/score/edit/harmonize/tool/chordEditor.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/input/libraryEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFromStyles.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/side/sideFormAlter.tsx","system/contents/score/edit/harmonize/side/minuteForm.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/harmSideForm.tsx","system/contents/score/edit/harmonize/info/structViewer.tsx","system/contents/backing/pattern/builder/patternDetail.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternPedal.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternVelocity.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternOptions.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/thema/themaSelectorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/initial/harmClipboard.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/initial/harmBackingLibrary.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/melody/util/melodyTimelineMouseOperation.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/home/homeChannel.tsx","system/contents/preview/scoreInfoTab.tsx","system/contents/preview/previewChannel.tsx","system/contents/custom/backing/treeUtil.tsx","system/contents/custom/backing/form/themaEditTabUtil.tsx","system/contents/custom/backing/form/attrFormTab.tsx","system/contents/custom/backing/form/baseFormTab.tsx","system/contents/custom/backing/form/pattFormTab.tsx","system/contents/custom/backing/form/rootFormTab.tsx","system/contents/custom/backing/form/sustFormTab.tsx","system/contents/custom/backing/form/voicFormTab.tsx","system/contents/custom/backing/themaUtil.tsx","system/contents/custom/backing/backingLibraryTab.tsx","system/contents/custom/customChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getHashBuilder","Hashids","getHashedFromScoreSeq","scoreSeq","hash","encode","Base64","sendQueryRequestToAPI","hashedScoreSeq","hashids","Number","decode","hashedKey","queryType","sql","fetch","mode","method","headers","Accept","body","JSON","stringify","createQueryRequestInit","a","response","json","results","map","res","id","email","userSeq","DataUtil","val","content","encodeURIComponent","zlib","gzipSync","toString","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","plainData","state","fileHandle","createWritable","writable","text","gZip","write","close","getFile","alert","window","showSaveFilePicker","types","accept","then","handle","catch","console","log","ActionType","reducer","store","action","type","payload","SET_USER_ENV","userEnv","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","getBeatProps","keyIndex","scale","relation","beatSignature","beatMemoriCount","barBeatCnt","SYMBOL_LIST","beatLen","minute","bpm","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","root","index","isFlat","symbolKey","props","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","baseKeyIndex","TheoryUtil","KEY12_FLAT_LIST","KEY12_SHARP_LIST","find","symbol","list","forEach","push","rootIndex","on","chordRootIndex","chordFullName","getRootName","chordOnIndex","onName","structList","struct","interval","soundIndex","adjustOctave","Math","floor","isFlatFromRelation","sameIndex","some","info","i","splice","unshift","sort","b","onIndex","sound","onChordIndex","tempList","length","divCount","Array","fill","table","channels","j","octave","structIndex","voicingList","editorPattern","channelSize","layers","layer","divs","noteDivList","signals","record","cell","x","y","status","notesList","vels","velocityList","slice","pedals","pedalActs","pedal","divIndex","voicingStructs","size","channel","reverse","scoreLayers","scoreLayer","notes","item","baseInfo","backing","pitchIndexList","chordTime","pattern","soundName","playHarmony","adjustRate","pedalRangeList","total","timeList","div","start","normal","rate","isDot","div3","sustain","undefined","divTime","pedalInfo","end","ignoreList","ig","timeInfo","timingAdj","timing","startTime","sustainTime","signal","inc","isNext","nextNotes","next","k","notesTail","velAdj","gain","setTimeout","dispatcher","harmonyFont","stop","isPreview","clearInterval","setState","memoriCount","head","tail","getUsingLenFromDivs","reduce","prev","cur","len","checkOverlapBackLayer","structCnt","col","isExist","voicing","voicingTable","patternProps","BackingUtil","buildChannels","getChannels","convertEditorLayerFromScore","channelIndex","lenIndex","layerIndex","detail","chordBacking","hasError","limitLen","getLimitLen","totalLen","chordInfo","init","baseLayer","backLayer","getDivRange","left","right","isOverlap","backLeft","backRight","note","includes","chordList","elementCacheList","sectionCacheList","beatCacheList","scaleCacheList","tempoCacheList","measureCacheList","totalMinute","sectionNo","sectionBeatSum","pastSecond","curSecond","chordIndex","curMemoriCount","totalBarCount","totalMemoriCount","beatRangeMemoriCount","totalBeat","totalMemoriBarCount","chordBlockNo","scaleMemoriCount","tempoMemoriCount","addTempoRange","beatRate","beatProps","memoriCnt","element","prevBeat","prevMemoriCount","prevBarCount","prevMinute","fixed","labelName","beatSum","rangeIndexStart","rangeIndexEnd","prevBar","calcSustainMsec","barMemoriCount","dispBarCount","barCount","alterType","modRel","dommVal","keyAdj","tempoRel","tempoDiff","tempoRate","tempoAbs","bar","surplusBeat","curTotalMemori","reffers","chordCacheList","createChordCacheList","score","setScoreState","cache","getSymbolFromKey","getChordDetails","backingError","hasBackingError","pos","curMemori","range","posTime","pastLen","last","CacheUtil","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len32","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","ml","getSortetdNotesLen","len32Cnt2","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","instrument","melodyFont","play","duration","soundFullName","stopPreview","melody","adjustScrollX","previewHarmony","data","focusIndex","lastFocus","update","firstTime","getTimeInfoFromNotesPos","lenTime","pitch","pitchIndex","destIndex","isSolo","system","setReserveTasks","cacheList","chordCache","pitchList","getPitchListFromVoicing","playBacking","tableMouse","curChord","MelodyUtil","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","PATTERN_HEADER_HEIGHT","PATTERN_BODY_HEIGHT","NOTES_1BAR_WIDTH","Dispatcher","dispatch","setUserEnv","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setInvalidate","saveFile","directScore","setHarmonyFont","soundfontPlayer","harmony","setInstruments","setScoreTabIndex","scoreTabIndex","clearCache","distIndex","initialBeat","setKeySwitch","keySwitch","setScoreData","moveElement","sub","moveDist","releaseRange","isTail","distHead","distTail","moveSection","curSectionIndex","curSectionInfo","curElementType","flashElement","incrementDegreeRoot","isUp","incrementBeatLen","updateHarmonizeCache","incrementMinuteVal","value","target","incrementMinuteValRelation","nearIndex","addChordElement","curBeatLen","addSectionElement","addAlterElement","removeCurElement","copyElementList","parse","copiedElementList","cloneBacking","pasteElementList","setDiatonicChord","diatonicIndex","chord","DIATONIC_MAJOR_SCALE_LIST","DIATONIC_MINOR_SCALE_LIST","setDefaultBacking","getDefaultBacking","pastBacking","openLibraryWnd","hideMenu","closeLibraryWnd","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setMelodyFont","incrementCurPitch","isUpper","filter","dataHistory","add","normalLeft","scaleInfo","getKeyScaleFromNotesPos","scaleIndexies","MAJOR_SCALE_INTERVALS","MINOR_SCALE_INTERVALS","prevPitchIndex","tempPitchIndex","adjustScrollY","moveFocus","updateCurChord","moveDestFocus","beatWidth","searchedChord","width","addNotes","focus","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","posA","posB","undo","history","redo","openBackingEditor","getInitVoicingTable","getEditorPatternFromChordBacking","symbolAttr","getVoicingListFromTable","checkEditorError","closeAction","editor","isUpdate","mappingEditorToScore","closeBackingEditor","getInitialLayer","buildPatternProps","addPatternColumn","lenList","curLen","newLen","column","updateErrorState","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","isPermitDot","getNotes","setNotes","incrementVel","after","deleteColumn","switchLayer","switchMode","testBacking","thema","updateAction","mappingEditorToThema","this","DataHistory","ret","initialStore","keyConfig","up","down","addChord","addSection","addChange","deleteCur","distMode","edit1","edit2","incRoot","decRoot","incBeat","decBeat","colorProps","entryBackground","editable","dialog","themaList","activeThemaIndex","isMelody","sustainMode","chordMode","symbolMode","control","minHeadMode","minTailMode","backingDataHistory","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","timelineMouse","soundfontInfo","scaleMode","resize","move","shift","notesCacheList","harmonize","measure","harmoniizeInvalidate","GloballDialog","useContext","GlobalContext","_Blind","onClick","styled","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isEnable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","ChannelContents","_Contents","CSS_BUTTON_DISABLE","_Label","TabbedPane","isDisable","disable","TabLabel","_TabLabel","TabContents","condition","UNIT_LIST","beat","step","firstChord","secondChord","parseChord","source","baseBeat","keyList","split","charAt","newBeat","diatonicNo","diatonicProps","adjustKey","adjust","shortNameKey","substring","getSymbolFromShortName","shortName","ProgUnitSearcher","ProgStyle","CSS_LABEL_MIDIUM","select","progBackingUtil","patternConditions","voicingConditions","STEP_LIST","getDefaultChord","sectionName","backingNo","outputUnits","elementList","block","blockDetail","sample","BACKING_SAMPLE_LIST","conPa","unZip","conVo","ProgUtil","ProgCustomFrame","setStep","degreeFilters","setDegreeFilters","lastChord","setLastChord","setFocusIndex","stepList","useMemo","getFilteredStepList","stepOptionJsxList","disp","degreeOptionJsxListArray","DEGREE_FILTER_LIST","unitList","search","jsx","dispUnitJsx","tootTipStr","beatCycle","chordName","getDegreeRoot","divStr","_Span","isMatch","_ChordName","_ProgItem","title","progUnitList","progJsxList","degreeChangeAction","e","_Frame","_TitleLabel","_Combobox","onChange","stepChangeAction","getLastChordName","_ListDiv","_ButtonDiv","_ExecutableButton","unitNum","reset","progUnit","insertProgUnit","_Record","RECORD_HEIGHT","span","DummyUtil","ProgOutputFrame","SECTION_CATEGORY","SECTION_NO","secCatOptionJsxList","secNoOptionJsxList","backingSampleJsxList","blockJsxList","isFixed","_Block","_FixedItem","_BackingLabel","updateOutputUnits","_ChordListDiv","_ChordItem","_ChordNameLabel","_ChordBeatDiv","jsxList","_BeatTip","getBeatTipsJsx","getInner","CSS_LABEL_SMALL","TEMPLATE_LIST","template","ProgTemplateUtil","ProgTemplateFrame","templateList","templateJsxList","isFocus","applyProgTemplate","ChordProgDialog","buildMode","setBuildType","getBlankBlockList","setOutputUnits","beatFilter","setBeatFilter","beatOptionJsxList","BEAT_DEF_LIST","chordDetail","templateBean","getInitialBlockList","createSwitchableButton","clickEvent","_SwitchableButton","beatComboboxEnable","distBeatFilter","_Header","_MainDiv","_LeftDiv","_BeatFormDiv","beatChangeAction","_SwitchDiv","getSwitchContJsx","_RightDiv","_Footer","buildScoreData","HEADER_HEIGHT","BEAT_HEIGHT","ManageTab","file","setFile","tabIndex","loginProps","login","cloudScoreList","setCloudScoreList","cloudScoreName","setCloudScoreName","cloudScoreShare","setCloudScoreShare","loadCloudScore","findUserScoreList","seq","resList","url","getPreviewURL","share","modified","tempo","section","time","getStringFromDate","Date","lastModified","sectionNum","chordNum","fileInfo","scoreInfo","textValue","changeAction","createLabelRecord","labelValue","_Recored","_ItemnLabel","_ItemnValue","fileDisconnectAction","isDataConnect","cloudScoreListJsx","_Message","_CloudItem","_CName","_CHash","curCloudScore","uploadEnable","isExistEditingData","isSelectedScore","_Wrap","_ButtonsDiv","_Button","_Left","_CloudDiv","newScoreName","_ListFrame","findScore","_Right","showOpenFilePicker","fileContents","_DataInfoDiv","_ItemnInput","_ItemnURL","onContextMenu","navigator","clipboard","writeText","_ItemnCombobox","_ScoreInfoDiv","DATA_INFO_HEIGHT","input","SymbolEditor","curSymbol","baseSymbol","derives","getSymbolDerives","parentJsx","curJsx","childrenJsx","_Row","CalcChord","symbolName","chordRoot","chordOn","prevCache","isError","minuteStr","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","barRem","_Len","_Border","ElementDetailAlter","_Type","sign","getDetailInfo","ElementDetailChord","degreeRoot","degreeOn","isDiatonic","getDiatonicDegreeList","_Degree","isSwitch","isSustainMode","scaleRelation","isOnChordScale","_DegreeRoot","_Tip","lenType","valueType","abs","_TipItem","_Error","_Voicing","_Pattern","isCurrent","_DegreeSymbol","_DegreeOnChord","_Backing","ElementFixedBorder","isStart","ElementDetailInit","_Title","_Value","ElementDetailSection","CalcAlter","getType","prevKey","curKey","curCache","prevTempo","curTempo","curBeat","getDetail","ChordEditor","getChord","createRow","label","listJsx","rootName","ScoreElement","wrapRef","useRef","bodyRef","isRange","isSameSection","wrap","current","elementJson","isInactive","ref","isSelectable","isAdditional","_Head","_CurKey","getDisplayKeyScaleName","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","HarmSections","sections","curSectionNo","_Total","addProgAction","callback","HarmonizeUtil","previewMelody","clearTimeout","edit","common","patternNormalMode","patternDetailMode","test","isEdit","baseVel","tempTiming","tempVelAdj","vel","curNotes","BackingEditorInput","LibraryEditorInput","NoteKeyDown","config","isElement","previewCurHarmony","NoteBasicInput","main","NoteKeySwitch","isPress","min","max","_NumberForm","SideFormStyles","SideFormAlter","createAlertTypeItem","createModulateRelationItem","rel","createTempoRelationItem","createBeatItem","donmmItemJsxList","_ParamDiv","_ParamItem","keyAdjItemJsxList","_Group","_CategoryLabel","createNumberForm","currentTarget","valueAsNumber","___CSS_TITLE","___CSS_FORM","JUDGE_INFO_LIST","MinuteForm","rateMinus","ratePlus","isRed","JudgeJsxList","judge","_JudgeItem","setValue","createJudgeItem","isHead","_View","_ViewFrame","isLeft","_Judge","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","DEGREE_ALL","degree","isRootActive","isOnActive","_RootItem","symbolItemsJsx","_SymbolItem","createMinuteForm","_Timing","_BeatDiv","_Minute","_RootDiv","_SymbolDiv","SideFormInit","scaleItemJsxList","SCALE_DEF_LIST","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","splitList","_NumberItem","_DirectText","_SelectDiv","_TemplateFrame","_NumberFrame","_ItemBase","HarmSideForm","StructViewer","indexList","scaleList","structJsxList","curIndex","isScale","isUse","isBlack","_Struct","WIDTH","PatternDetail","_DelayDiv","_TimingValue","_VelocityDiv","_VelFrame","_VelItem","VEL_DIV_WIDTH","PatternLength","itemJsxList","PatternPedal","_Column","PatternTable","channelCount","curLayer","layerJsxList","jsxLsit","notesJsxLsit","setNotesStatus","viewSignal","prevCell","_Notes","isBack","_State","isEven","isFront","_Layer","zIndex","PatternVelocity","PatternBuilder","useTotalLen","isLenOverError","memoriWidth","memoriJsxList","bean","thickness","height","color","_Memori","_LengthDiv","_MeasureDiv","_MemoriList","_ChordLenLine","_OverCover","_Body","ChannelItem","soundfont","_Option","CHANNEL_MAX","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","structInfo","_LayerItem","_ModeItem","proops","PatternOptions","createItem","createRateItem","String","setRate","sizeJsxList","_ListItem","isPermit3ren","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","tableRecord","curCell","setRowStaccato","isSet","editModeJsx","_WrapEdit","hasStaccato","isExistNext","isEnableTai","option","PatternFrame","isUsePattern","_UseSwitch","isUsePedal","_Main","_StatusDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","channelLimitNum","OCTAVE_NUM","STRUCT_NUM","rowJsxList","selectCount","cellJsxList","isSelected","key12List","getSoundFullName","_Cell","isOver","_TableRow","_StructItem","isOnChord","_InfoItem","_EditorDiv","_StructDiv","_TableDiv","_InfoDiv","TIP_WIDTH","BackingEditorFrame","_PrevireBrind","_FooterDiv","ThemaSelectorFrame","HarmHideFrame","isOpen","isBackingEnable","isLibraryEnable","_LabelFrame","isVisible","HarmClipboard","_TypeDiv","MEMORI_WIDTH","HarmMeasure","dataList","_Margin","_Bar","beatJsxList","minuteJsxList","isChordFocus","curChordIndex","beatMemori","posMemori","_SustainItem","scrollPos","_ScrollFrame","_Blocks","_Measure","HarmBackingLibrary","themaName","HarmonizeTab","timelineJsx","structViewerJsx","scoreCache","sideFormEnable","onKeyDown","onKeyUp","_SectionsDiv","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_RIGHT_WIDTH","HARMONIZE_HEAD_WIDTH","MelodyTimelineMouseOperation","mouseDownEvent","timelineLength","button","rect","getBoundingClientRect","clientX","mouseMoveEvent","mouse","mouseUpEvent","scrollLeft","MelodyTimeline","measureRef","chordRef","barLength","measureJsxList","chordJsxList","minuteLen","scroll","clientWidth","symbolNmae","degreeName","_DegreeName","_ChordWrap","_MeasureWrap","_MeasureInner","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_MousePos","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","Soundfont","AudioContext","release","soundFontPlayer","QuantizeSwitch","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","getNextLeft","clientY","scrollTop","curPos","posX","lenWidth","newPos","prevFocus","MelodyInput","keyDownEvent","isSingle","keySwitchEvent","MelodyFrame","tableRef","pitchRef","setInvalidate2","isTune","scaleDivJsxList","divList","scaleJsxList","_ScaleLine","isBase","_ScaleList","notesJsxList","normalWidth","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_MouseLinePos","_MouseRange","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","_Test","editAnimation","keyframes","_MouseLine","TUNE_TIMELINE_WIDTH","_Scale","EditTab","isDirect","preview","toggleEnsamble","playJsx","_SwitchInner","stopJsx","ensambleJsx","soloJsx","_Mode","_Buttons","_Switch","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","items","degreeRootName","chordRootName","_Lane","_Box","HomeChannel","useAuth0","isAuthenticated","user","isLoading","userId","setUserId","userCount","setUserCount","scoreList","setScoreList","countUsers","cnt","findAllScore","registerLabel","registerAction","location","reload","scoreListJsx","open","_Owner","owner","dispnam","_CDate","lastmod","_MessageRecord","_ListInfoDiv","_ItemnForm","ScoreInfoTab","PreviewChannel","TreeUtil","parent","depth","children","buildElementNodeFromData","build","dataNode","node","child","rootDataNode","rootElementNode","setRootElementNode","buildJsxRecords","spaceList","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","getLabelJsx","ThemaEditTabUtil","titleLabel","labelText","readOnly","_TextArea","_BorderPanel","innerJsx","buttons","_ListRecordFrame","records","dim","buttonJsxList","_ListRecordButton","_ListRecordItem","_ListRecordLabel","textarea","AttrFormTab","ThemaTreeContext","setFocusNode","setAttr","symbols","setSymbols","targetSymbolList","getSymbolsFromAttr","InputComboboxForm","SymbolAttributeList","_SymbolKey","ButtonDiv","rootData","minIdx","maxIdx","voics","roots","newNode","createNode","BaseFormTab","setThamaData","baseNode","baseData","metSusNode","metPatNode","metSusData","metPatData","presetSust","setPresetSust","presetPatt","setPresetPatt","presets","presetSustList","setPresetSustList","presetPattList","setPresetPattList","setThemaName","meths","defs","InputTextForm","BorderPanel","LabelTextItem","RecordList","preset","attrData","sustData","patts","addThema","PattFormTab","pattName","setPattName","setRootIndex","setSymbolKsy","setSource","parseInt","key12","idx","TextAreaView","attrs","RootFormTab","setMinIdx","setMaxIdx","voicData","SustFormTab","setBeat","setHead","setTail","v","pattData","VoicFormTab","methData","isPattern","setPreset","presetList","setPresetList","join","ThemaUtil","innderJsx","setAttrJsx","_TypeLabel","_C_Symbol","setRootJsx","nameList","setVoicJsx","setBaseJsx","setMethJsx","setSustJsx","setPattJsx","_NodeFrame","_CSS_FONT","createContext","BackingLibraryTab","getInitialThema","themaData","focusNode","voic","sust","patt","getDefsChildren","tabInner","contJsx","_TabContWrap","_TreeDiv","_TreeHead","_TreeBody","Frame","_PropsDiv","Provider","CustomChannel","MainFrame","basename","process","RouterManage","str","URLSearchParams","useLocation","get","path","exact","hashKey","DirectView","conteseq","getDecryptionedScoreSeq","to","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","remove","_NowLoading","_Copylight","fadeIn","TotalHeader","loginWithRedirect","logout","origin","findUserInfo","userList","userProps","authButtonJsx","_UserName","isEntry","_LoginButton","_ACCENT","_NORMAL","_Menu","_Language","_MenuItem","TOTAL_HEADER_WIDTH","SystemEntry","useReducer","useCallback","App","document","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ec01fc3a.chunk.js","sourcesContent":["import zlib from \"zlib\";\nimport { ScoreState } from \"../redux/store/score/scoreState\";\n// import { createClient } from \"@supabase/supabase-js\";\nimport { Base64 } from \"js-base64\";\nimport Hashids from 'hashids';\n\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\n\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\n\nnamespace DataUtil {\n    \n    // export const DB_SERVER_DOMAIN = 'http://localhost:5000';\n    // export const DB_SERVER_DOMAIN = 'https://licresia-demo01-server.glitch.me';\n    export const DB_SERVER_DOMAIN = 'https://licresia-server.glitch.me';\n    \n    // export const APP_SERVER_DOMAIN = 'http://localhost:4000';\n    // export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/licresia_demo_app';\n    export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\n\n    // const fetchData = async () => {\n    //     try {\n    //         // sampleテーブルから全カラムのデータをid順に取得\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\n\n    //         if (error) {\n    //             throw error;\n    //         }\n    //         if (data) {\n    //             console.log(data);\n    //         }\n    //     } catch (error: any) {\n    //         alert(error.message);\n    //     } finally {\n\n    //     }\n    // };\n\n    const getHashBuilder = () => {\n        return new Hashids('licresia-demo', 8);\n    }\n\n    export const getHashedFromScoreSeq = (scoreSeq: number) => {\n        const hashids = getHashBuilder();\n        const hash = hashids.encode(scoreSeq);\n        const hashedKey = Base64.encode(hash, true);\n        return hashedKey;\n    }\n\n    export const getDecryptionedScoreSeq = (hashedScoreSeq: string) => {\n        const hashids = getHashBuilder();\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedScoreSeq)));\n        return decryptioned;\n    }\n\n    export const getPreviewURL = (scoreSeq: number) => {\n        const hashedKey = getHashedFromScoreSeq(scoreSeq);\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\n        return url;\n    }\n\n    /**\n     * クエリリクエストを生成する\n     * @param sql \n     * @returns \n     */\n    const createQueryRequestInit = (sql: string): RequestInit => {\n        return {\n            mode: 'cors',\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ sql })\n        }\n    }\n\n    /**\n     * select/updateを指定してSQLを実行する。<br>\n     * selectの場合、結果をjsonで返す。\n     * @param queryType\n     * @param sql \n     * @returns \n     */\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\n            createQueryRequestInit(sql)\n        );\n    }\n\n    export const findUserList = async () => {\n        const response = await sendQueryRequestToAPI('select', `SELECT id FROM user_tbl`);\n        const results = await response.json();\n        return (results as { id: string }[]).map(res => res.id);\n    };\n\n    export const findUserInfo = async (email: string) => {\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\n        const results = await response.json();\n        return results as { seq: number, id: string }[];\n    };\n\n    export const findUserScoreList = async (userSeq: number) => {\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\n        const results = await response.json();\n        return results as any[];\n    };\n\n    export const findScore = async (scoreSeq: number) => {\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\n        const results = await response.json();\n        return results as any[];\n    };\n\n    /**\n     * 文字列を圧縮する\n     * @param val 圧縮前の文字列\n     * @returns 圧縮後の文字列\n     */\n    export const gZip = (val: string) => {\n        // エンコード\n        const content = encodeURIComponent(val);\n        // 圧縮\n        const result = zlib.gzipSync(content);\n        // Buffer => base64変換\n        const value = result.toString('base64');\n        return value;\n    }\n\n    /**\n     * 圧縮された文字列を複号する\n     * @param val 圧縮された文字列\n     * @returns 複号後の文字列\n     */\n    export const unZip = (val: string) => {\n        // base64 => Bufferに変換\n        const buffer = Buffer.from(val, 'base64')\n        // 復号化\n        const result = zlib.unzipSync(buffer)\n        // デコード\n        const str = decodeURIComponent(result.toString())\n        return str;\n    }\n\n    /**\n     * Date型の日時を文字列に変換する\n     * @param date Date型の日時\n     * @returns 文字列の日時\n     */\n    export const getStringFromDate = (date: Date) => {\n\n        const year_str = date.getFullYear().toString();\n        //月だけ+1すること\n        const month_str = (1 + date.getMonth()).toString();\n        const day_str = date.getDate().toString();\n        const hour_str = date.getHours().toString();\n        const minute_str = date.getMinutes().toString();\n        const second_str = date.getSeconds().toString();\n\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\n        format_str = format_str.replace(/YYYY/g, year_str);\n        format_str = format_str.replace(/MM/g, month_str);\n        format_str = format_str.replace(/DD/g, day_str);\n        format_str = format_str.replace(/hh/g, hour_str);\n        format_str = format_str.replace(/mm/g, minute_str);\n        format_str = format_str.replace(/ss/g, second_str);\n\n        return format_str;\n    };\n\n    export const saveFile = (plainData: string, state: ScoreState) => {\n        const options = {\n            types: [\n                {\n                    accept: {\n                        'text/plain': ['.lcrs'],\n                    },\n                },\n            ],\n        };\n        const fileHandle = state.fileHandle;\n        if (fileHandle != null) {\n            (async () => {\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\n                const writable = await fileHandle.createWritable();\n                //テキストデータの書き込み\n                const text = DataUtil.gZip(plainData);\n                await writable.write(text);\n                //ファイルを閉じる\n                await writable.close();\n                state.fileHandle = fileHandle;\n                // this.score.setScoreState({ ...state });\n                const file = await fileHandle.getFile();\n                alert('saved successfully!');\n            })();\n        } else {\n            window.showSaveFilePicker(options).then((handle) => {\n                (async () => {\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\n                    const writable = await handle.createWritable();\n                    //テキストデータの書き込み\n                    const text = DataUtil.gZip(plainData);\n                    await writable.write(text);\n                    //ファイルを閉じる\n                    await writable.close();\n                    state.fileHandle = handle;\n                    // this.score.setScoreState({ ...state });\n                })();\n            }).catch(() => {\n                console.log('キャンセルされました');\n            });\n        }\n    }\n}\n\nexport default DataUtil;","import { Store } from \"./store/store\";\n\n/**\n * ディスパッチメソッドの処理種別を定義します。\n */\nexport enum ActionType {\n    SET_USER_ENV,\n    SET_SYSTEM_STATE,\n    SET_SCORE_STATE,\n    SET_TUNE_STATE,\n    SET_SCORE_DATA,\n    SET_REFS,\n    SET_INSTRUMENTS,\n    SET_BACKING_STATE,\n    SET_RESERVE_TASKS,\n    SET_INVALIDATE,\n}\n\n/**\n * ディスパッチメソッドに指定するオブジェクトを定義します。\n */\nexport type Action = {\n    type: ActionType;\n    payload: any;\n}\n\nexport const reducer = (store: Store, action: Action): Store => {\n    const type = action.type;\n    const payload = action.payload;\n    switch (type) {\n        case ActionType.SET_USER_ENV:\n            store.userEnv = payload.userEnv;\n            break;\n        case ActionType.SET_SYSTEM_STATE:\n            store.systemState = payload.systemState;\n            break;\n        case ActionType.SET_SCORE_STATE:\n            store.scoreState = payload.scoreState;\n            break;\n        case ActionType.SET_SCORE_DATA:\n            store.scoreData = payload.scoreData;\n            break;\n        case ActionType.SET_TUNE_STATE:\n            store.melodyState = payload.tuneState;\n            break;\n        case ActionType.SET_REFS:\n            store.refs = payload.refs;\n            break;\n        case ActionType.SET_INSTRUMENTS:\n            store.instruments = payload.instruments;\n            break;\n        case ActionType.SET_BACKING_STATE:\n            store.backingState = payload.backingState;\n            break;\n        case ActionType.SET_RESERVE_TASKS:\n            store.reserveTasks = payload.reserveTasks;\n            break;\n        case ActionType.SET_INVALIDATE:\n            store.invalidate = payload.invalidate;\n            break;\n    }\n    return { ...store };\n}","import { BeatSignature, Scale } from \"../redux/store/score/scoreData\";\n\nnamespace TheoryUtil {\n\n    export const MAJOR_SCALE_INTERVALS = [0, 2, 4, 5, 7, 9, 11];\n    export const MINOR_SCALE_INTERVALS = [0, 2, 3, 5, 7, 8, 10];\n\n    export const KEY12_FLAT_LIST = [\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\n    ];\n    export const KEY12_SHARP_LIST = [\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\n    ];\n\n    export const DEGREE12_FLAT_LIST = [\n        'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\n    ];\n    // export const DEGREE12_FLAT_LIST = [\n    //     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\n    // ];\n    export const DEGREE12_SHARP_LIST = [\n        'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\n    ];\n\n    export const KEY12_MAJOR_SCALE_LIST = [\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\n    ];\n\n    export const KEY12_MINOR_SCALE_LIST = [\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\n    ];\n\n    export const getDisplayKeyScaleName = (keyIndex: number, scale: Scale) => {\n        return scale === 'major' ? KEY12_MAJOR_SCALE_LIST[keyIndex] :\n            KEY12_MINOR_SCALE_LIST[keyIndex] + 'm';\n    }\n\n    export const SCALE_DEF_LIST = ['major', 'minor'] as const;\n    export const BEAT_DEF_LIST = ['2/4', '4/4', '3/4', '6/8', '9/8', '12/8'] as const;\n\n    export type IntervalRelation =\n        'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\n        'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\n        'd7' | 'm7' | 'M7'\n        ;\n\n    export const isFlatFromRelation = (relation: IntervalRelation) => {\n        // 以下の場合#（シャープ）とする\n        switch (relation) {\n            case 'M2':\n            case 'M3':\n            case 'M6':\n            case 'M7':\n                return false;\n        }\n        return true;\n    }\n\n    export const SymbolAttributeList = [\"triad\", \"seventh\", \"add9th\", \"ninth\"] as const;\n\n    export type SymbolAttribute = typeof SymbolAttributeList[number];\n\n    export type SymbolParams = {\n        key: SymbolKey;\n        name: string;\n        base: null | SymbolKey;\n        attr?: SymbolAttribute;\n        structs: IntervalRelation[];\n    }\n\n    export type BeatProps = {\n        // mol: number;\n        // den: number;\n        // 1拍のメモリ（16分音符）の数\n        beatMemoriCount: number;\n        // 1小節の拍数\n        barBeatCnt: number;\n    }\n\n    /**\n     * 拍子より拍情報を取得する\n     * @param beatSignature 拍子\n     * @returns 拍情報\n     */\n    export const getBeatProps = (beatSignature: BeatSignature): BeatProps => {\n        switch (beatSignature) {\n            case '4/4': return { beatMemoriCount: 4, barBeatCnt: 4 };\n            case '2/4': return { beatMemoriCount: 4, barBeatCnt: 2 };\n            case '3/4': return { beatMemoriCount: 4, barBeatCnt: 3 };\n            case '6/8': return { beatMemoriCount: 6, barBeatCnt: 2 };\n            case '9/8': return { beatMemoriCount: 6, barBeatCnt: 3 };\n            case '12/8': return { beatMemoriCount: 6, barBeatCnt: 4 };\n        };\n        // return {} as BeatProps;\n    }\n\n    /**\n     * 拍の長さからコードの持続時間をミリ秒で算出する\n     * @param beatLen \n     * @param minute \n     * @param bpm \n     * @param beatSignature \n     * @returns \n     */\n    export const calcSustainMsec = (beatLen: number, minute: number, bpm: number, beatSignature: BeatSignature): number => {\n        const beatMemoriCount = getBeatProps(beatSignature).beatMemoriCount;\n        const minuteLen = minute * (1 / beatMemoriCount);\n        return 60000 / bpm * (beatLen + minuteLen);\n    }\n\n\n    export type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\n\n    export type SymbolKey =\n        'major' |\n        'minor' |\n        'suspend4th' |\n        'diminish' |\n        'augument' |\n        'major-maj7th' |\n        'major-min7th' |\n        'minor-7th' |\n        'minor-maj7th' |\n        'sus4-7th' |\n        'diminish-7th' |\n        'augument-7th' |\n        'major-add9th' |\n        'minor-add9th' |\n        'sixth-9th' |\n        'minor-minus5' |\n        'major-minus5' |\n        'minor7-minus5' |\n        'major-maj9th' |\n        'major-9th'\n        ;\n\n    export type DegreeProps = {\n        index: number;\n        isFlat: boolean;\n    };\n\n    export type ChordProps = {\n        root: DegreeProps;\n        symbolKey: SymbolKey;\n    };\n\n    export const SYMBOL_LIST: readonly SymbolParams[] = [\n        {\n            key: 'major', name: '',\n            base: null,\n            structs: ['p1', 'M3', 'p5'],\n            attr: 'triad'\n        },\n        {\n            key: 'minor', name: 'm',\n            base: null,\n            structs: ['p1', 'm3', 'p5'],\n            attr: 'triad'\n        },\n        {\n            key: 'suspend4th', name: 'sus4',\n            base: null,\n            structs: ['p1', 'p4', 'p5'],\n            attr: 'triad'\n        },\n        {\n            key: 'diminish', name: 'dim',\n            base: null,\n            structs: ['p1', 'm3', 'd5'],\n            attr: 'triad'\n        },\n        {\n            key: 'diminish-7th', name: 'dim7',\n            base: 'diminish',\n            structs: ['p1', 'm3', 'd5', 'd7'],\n            attr: 'seventh'\n        },\n        {\n            key: 'augument', name: 'aug',\n            base: null,\n            structs: ['p1', 'M3', 'a5'],\n            attr: 'triad'\n        },\n        {\n            key: 'augument-7th', name: 'aug7',\n            base: 'augument',\n            structs: ['p1', 'M3', 'a5', 'm7']\n        },\n        {\n            key: 'minor-minus5', name: 'm(-5)',\n            base: null,\n            structs: ['p1', 'm3', 'd5'],\n            attr: 'triad'\n        },\n        {\n            key: 'major-minus5', name: '-5',\n            base: null,\n            structs: ['p1', 'M3', 'd5'],\n            attr: 'triad'\n        },\n        {\n            key: 'minor7-minus5', name: 'm7(-5)',\n            base: 'minor-minus5',\n            structs: ['p1', 'm3', 'd5', 'm7'],\n            attr: 'seventh'\n        },\n        {\n            key: 'major-maj7th', name: 'maj7',\n            base: 'major',\n            structs: ['p1', 'M3', 'p5', 'M7'],\n            attr: 'seventh'\n        },\n        {\n            key: 'major-min7th', name: '7',\n            base: 'major',\n            structs: ['p1', 'M3', 'p5', 'm7'],\n            attr: 'seventh'\n        },\n        {\n            key: 'minor-7th', name: 'm7',\n            base: 'minor',\n            structs: ['p1', 'm3', 'p5', 'm7'],\n            attr: 'seventh'\n        },\n        {\n            key: 'sus4-7th', name: '7sus4',\n            base: 'suspend4th',\n            structs: ['p1', 'p4', 'p5', 'm7']\n        },\n        {\n            key: 'minor-maj7th', name: 'mmaj7',\n            base: 'minor',\n            structs: ['p1', 'm3', 'p5', 'M7'],\n            attr: 'seventh'\n        },\n        {\n            key: 'major-add9th', name: 'add9',\n            base: 'major',\n            structs: ['p1', 'M2', 'M3', 'p5'],\n            attr: 'add9th'\n        },\n        {\n            key: 'minor-add9th', name: 'madd9',\n            base: 'minor',\n            structs: ['p1', 'M2', 'm3', 'p5'],\n            attr: 'add9th'\n        },\n        {\n            key: 'major-maj9th', name: 'maj9',\n            base: 'major-maj7th',\n            structs: ['p1', 'm3', 'p5'],\n            attr: 'add9th'\n        },\n        {\n            key: 'major-9th', name: '9',\n            base: 'major-min7th',\n            structs: ['p1', 'm3', 'p5']\n        },\n    ];\n\n    /** インターバルの関係性 */\n    export const IntervalRelationProps = {\n        'p1': 0,\n        'm2': 1,\n        'M2': 2,\n        'm3': 3,\n        'M3': 4,\n        'p4': 5,\n        'd5': 6,\n        'p5': 7,\n        'a5': 8,\n        'm6': 8,\n        'M6': 9,\n        'd7': 9,\n        'm7': 10,\n        'M7': 11\n    }\n\n    export const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\n        { root: { index: 0, isFlat: false }, symbolKey: 'major' },\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\n        { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\n        { root: { index: 5, isFlat: false }, symbolKey: 'major' },\n        { root: { index: 7, isFlat: false }, symbolKey: 'major' },\n        { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\n        { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\n    ];\n\n    export const DIATONIC_MINOR_SCALE_LIST: readonly ChordProps[] = [\n        { root: { index: 0, isFlat: false }, symbolKey: 'minor' },\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor-minus5' },\n        { root: { index: 3, isFlat: true }, symbolKey: 'major' },\n        { root: { index: 5, isFlat: false }, symbolKey: 'minor' },\n        { root: { index: 7, isFlat: false }, symbolKey: 'minor' },\n        { root: { index: 8, isFlat: true }, symbolKey: 'major' },\n        { root: { index: 10, isFlat: true }, symbolKey: 'major' },\n    ];\n\n\n\n    export const DEGREE_ALL: readonly (DegreeProps | null)[] = [\n        null,\n        { index: 0, isFlat: false },\n        { index: 1, isFlat: false },\n        { index: 1, isFlat: true },\n        { index: 2, isFlat: false },\n        { index: 3, isFlat: false },\n        { index: 3, isFlat: true },\n        { index: 4, isFlat: false },\n        { index: 5, isFlat: false },\n        { index: 6, isFlat: false },\n        { index: 6, isFlat: true },\n        { index: 7, isFlat: false },\n        { index: 8, isFlat: false },\n        { index: 8, isFlat: true },\n        { index: 9, isFlat: false },\n        { index: 10, isFlat: false },\n        { index: 10, isFlat: true },\n        { index: 11, isFlat: false }\n    ];\n\n    export const getDegreeRoot = (props: DegreeProps) => {\n        const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\n        return list[props.index];\n    }\n\n    export const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\n        'Ⅰ', 'Ⅰmaj7',\n        'Ⅱm', 'Ⅱm7',\n        'Ⅲm', 'Ⅲm7',\n        'Ⅳ', 'Ⅳmaj7',\n        'Ⅴ', 'Ⅴ7',\n        'Ⅵm', 'Ⅵm7',\n        'Ⅶm(-5)', 'Ⅶm7(-5)'\n    ];\n\n    export const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\n        'Ⅰm', 'Ⅰm7',\n        'Ⅱm(-5)', 'Ⅱm7(-5)',\n        'bⅢ', 'bⅢM7',\n        'Ⅳm', 'Ⅳm7',\n        'Ⅴm', 'Ⅴm7',\n        'bⅥ', 'bⅥM7',\n        'bⅦ', 'bⅦ7'\n    ];\n\n    export const getDiatonicDegreeList = (scale: Scale) => {\n        return scale === 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES :\n            DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\n    }\n\n    export const getRootName = (\n        props: DegreeProps,\n        baseKeyIndex: number\n    ): string => {\n        const list = props.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST;\n        return list[(baseKeyIndex + props.index) % 12];\n    }\n\n\n\n    export const getSymbolFromKey = (key: string): SymbolParams | undefined => {\n        return SYMBOL_LIST.find((symbol) => {\n            if (key === symbol.key) {\n                return symbol;\n            }\n        });\n        // return ret != undefined ? ret : SYMBOL_LIST[0];\n    }\n\n    export const getSymbolsFromAttr = (attr: SymbolAttribute): SymbolParams[] => {\n        const list: SymbolParams[] = [];\n        SYMBOL_LIST.forEach((symbol) => {\n            if (attr === symbol.attr) {\n                list.push(symbol);\n            }\n        });\n        return list;\n    }\n\n    export const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\n        let list: SymbolKey[] = [];\n        SYMBOL_LIST.forEach((symbol) => {\n            if (key === symbol.base) {\n                list.push(symbol.key);\n            }\n        });\n        return list;\n    }\n\n    export const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\n        return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\n    }\n}\n\nexport default TheoryUtil;\n\n","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\nimport BackingState from \"../redux/store/score/backing/backingState\";\nimport ScoreCache from \"../redux/store/score/scoreCache\";\nimport { BackingLayerData, BackingPatternProps, BackingSignalProps, BeatSignature, ChordBacking, DetailChord, DetailInit, PedalInfo, VoicingProps } from \"../redux/store/score/scoreData\";\nimport { Store } from \"../redux/store/store\";\nimport { playHarmony } from \"./melodyUtil\";\nimport TheoryUtil from \"./theoryUtil\";\n\nexport namespace BackingUtil {\n\n    // オクターブの数\n    export const OCTAVE_NUM = 8;\n    // 管理する構成音の数\n    export const STRUCT_NUM = 6;\n    // チャンネルの最大数\n    export const CHANNEL_MAX = 12;\n\n    export const getChordDetails = (\n        root: TheoryUtil.DegreeProps,\n        keyIndex: number,\n        on: null | TheoryUtil.DegreeProps,\n        symbol: TheoryUtil.SymbolParams\n    ): [\n            string, BackingState.StructInfo[]\n        ] => {\n\n        // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\n        const chordRootIndex = (root.index + keyIndex) % 12;\n        const rootName = TheoryUtil.getRootName(root, keyIndex);\n        let chordFullName = rootName + symbol.name;\n\n        let chordOnIndex = -1;\n        // オンコードが設定されている場合\n        if (on != null) {\n            const onName = TheoryUtil.getRootName(on, keyIndex);\n            chordFullName = `${chordFullName}/${onName}`;\n\n            chordOnIndex = (on.index + keyIndex) % 12;\n        }\n\n        // 構成音情報を算出\n        let structList: BackingState.StructInfo[] = symbol.structs.map(struct => {\n            const relation = struct;\n            const interval = TheoryUtil.IntervalRelationProps[relation];\n            const soundIndex = (chordRootIndex + interval) % 12;\n            const adjustOctave = Math.floor((chordRootIndex + interval) / 12);\n            const isFlat = TheoryUtil.isFlatFromRelation(relation);\n            return {\n                relation, soundIndex, isFlat, adjustOctave\n            }\n        });\n        // オンコードを考慮\n        if (chordOnIndex !== -1) {\n            let sameIndex = -1;\n            structList.some((info, i) => {\n                if (info.soundIndex === chordOnIndex) {\n                    sameIndex = i;\n                    return;\n                }\n            });\n            // オンコードが構成音と被っている場合リストから削除\n            if (sameIndex !== -1) {\n                structList.splice(sameIndex, 1);\n            }\n            // オンコードをリストに追加\n            structList.unshift({\n                relation: null,\n                soundIndex: chordOnIndex,\n                isFlat: false,\n                adjustOctave: 0\n            });\n            // 音程の昇順でソート\n            structList.sort((a, b) => {\n                return a.soundIndex - b.soundIndex;\n            });\n\n            /** ソート後のオンコードの場所 */\n            let onIndex = -1;\n            structList.some((sound, i) => {\n                if (sound.relation == null) {\n                    onIndex = i;\n                    return;\n                }\n            });\n            const onChordIndex = structList[onIndex].soundIndex;\n            const tempList: BackingState.StructInfo[] = [];\n            for (let i = onIndex; i < structList.length; i++) {\n                const sound = structList[i];\n                tempList.push(sound);\n            }\n            for (let i = 0; i < onIndex; i++) {\n                const sound = structList[i];\n                tempList.push(sound);\n            }\n            tempList.forEach(sound => {\n                sound.adjustOctave = 0;\n                if (sound.soundIndex < onChordIndex) {\n                    sound.adjustOctave = 1;\n                }\n            });\n            structList = tempList;\n        }\n        return [chordFullName, structList];\n    }\n\n    export const getInitialRecord = (divCount: number) => {\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\n    }\n\n    export const buildChannels = (table: boolean[][]): BackingState.ChannelParam[] => {\n        const channels: BackingState.ChannelParam[] = [];\n        for (let i = 0; i < table.length; i++) {\n            for (let j = 0; j < table[i].length; j++) {\n                if (table[i][j]) {\n                    channels.push({ octave: i, structIndex: j });\n                }\n            }\n        }\n        if (channels.length === 0) {\n            channels.push({ octave: -1, structIndex: 0 });\n        }\n        return channels;\n    }\n\n    export const getVoicingListFromTable = (table: boolean[][]) => {\n\n        const voicingList: VoicingProps[] = [];\n        // ボイシングを設定\n        if (table != null) {\n            for (let i = 0; i < table.length; i++) {\n                for (let j = 0; j < table[i].length; j++) {\n                    if (table[i][j]) {\n                        voicingList.push({ octave: i, struct: j });\n                    }\n                }\n            }\n        }\n        return voicingList;\n    }\n\n    export const buildPatternProps = (editorPattern: BackingState.Pattern): BackingPatternProps => {\n        const channelSize = editorPattern.channels.length;\n        const layers: BackingLayerData[] = [];\n        editorPattern.layers.forEach(layer => {\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\n            const signals: BackingSignalProps[] = [];\n            layer.table.forEach((record, i) => {\n                record.forEach((cell, j) => {\n                    if (cell != null) {\n                        signals.push({ x: j, y: i, status: cell });\n                    }\n                });\n            });\n            layers.push({ divs, notesList: signals, vels: layer.velocityList.slice() });\n        });\n        const pedals: PedalInfo[] = [];\n        editorPattern.pedalActs.forEach((pedal, i) => {\n            if (pedal != null) pedals.push({\n                divIndex: i, action: pedal\n            });\n        });\n        return { channelSize, pedals, layers };\n    }\n\n    export const getChannels = (voicingStructs: BackingState.ChannelParam[], size: number) => {\n        const channels: BackingState.ChannelParam[] = [];\n        for (let i = 0; i < size; i++) {\n            const channel: BackingState.ChannelParam = { octave: -1, structIndex: 0 };\n            if (i < voicingStructs.length) {\n                channel.octave = voicingStructs[i].octave;\n                channel.structIndex = voicingStructs[i].structIndex;\n            }\n            channels.push(channel);\n        }\n        return channels.reverse();\n    }\n\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\n\n        const layers: BackingState.Layer[] = [];\n        console.log(JSON.stringify(scoreLayers));\n        scoreLayers.forEach(scoreLayer => {\n            const table: (BackingState.NoteStatus | null)[][] = [];\n            for (let i = 0; i < channelSize; i++) {\n                const record: (BackingState.NoteStatus | null)[] = [];\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\n                    record.push(notes == null ? null : notes.status);\n                }\n                table.push(record);\n            }\n            layers.push({\n                noteDivList: scoreLayer.divs,\n                table,\n                velocityList: scoreLayer.vels\n            });\n        });\n        console.log(JSON.stringify(layers));\n        return layers;\n    }\n\n    export const getPitchListFromVoicing = (\n        voicingList: VoicingProps[],\n        structList: BackingState.StructInfo[]\n    ) => {\n        // return voicingList.map((item) => {\n        //     const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\n        //     return 12 * item.octave + rootIndex + interval;\n        // });\n        return voicingList.map((item) => {\n            // const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\n            // return 12 * item.octave + rootIndex + interval;\n            const struct = structList[item.struct];\n            const octave = item.octave + struct.adjustOctave;\n            return 12 * octave + struct.soundIndex;\n        });\n    }\n\n    export const playBacking = (\n        store: Store,\n        reserveTasks: NodeJS.Timeout[],\n        baseInfo: DetailInit,\n        backing: ChordBacking,\n        pitchIndexList: number[],\n        chordTime: number\n    ) => {\n        if (backing.pattern == null) {\n            pitchIndexList.forEach((index) => {\n                const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\n                const octave = Math.floor(index / 12);\n                const soundFullName = soundName + octave;\n                playHarmony(soundFullName, store, chordTime / 1000, 5);\n            });\n        } else {\n\n            const bpm = baseInfo.bpm;\n            const beatProps = TheoryUtil.getBeatProps(baseInfo.beatSignature);\n            const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (2 / 3);\n\n            const pattern = backing.pattern;\n            // const pedalIndexes = pattern.pedals === undefined ? null : pattern.pedals.map(pedal => pedal.divIndex);\n\n            /** ペダルの有効範囲を定義したリスト */\n            const pedalRangeList: { start: number, end: number, action: BackingState.PedalAction }[] = [];\n            pattern.layers.forEach((layer, i) => {\n                /** バッキング内で経過した時間（ノーツごとの開始時間） */\n                let total = 0;\n                const timeList: {\n                    start: number, sustain: number\n                }[] = layer.divs.map(div => {\n                    /** 開始時間 */\n                    const start = 60000 / bpm * total;\n                    let normal = 4 / div.rate * adjustRate;\n                    if (div.isDot) normal *= 1.5;\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\n                    total += normal;\n                    return { start, sustain: 60000 / bpm * normal };\n                });\n\n                // ペダル状態のキャッシュを作成\n                if (i === 0 && pattern.pedals != undefined) {\n                    timeList.forEach((divTime, j) => {\n                        const pedalInfo = pattern.pedals?.find((pedal) => {\n                            if (j === pedal.divIndex) return pedal;\n                        });\n                        if (pedalInfo != undefined) {\n\n                            if (pedalRangeList.length > 0) {\n                                pedalRangeList[pedalRangeList.length - 1].end = divTime.start;\n                            }\n                            pedalRangeList.push({\n                                start: divTime.start,\n                                end: chordTime,\n                                action: pedalInfo.action\n                            });\n                        }\n                    });\n                }\n\n                /** 除外リスト（タイで吸収されるノーツ） */\n                const ignoreList: { x: number, y: number }[] = [];\n                layer.notesList.forEach((notes) => {\n\n                    // 除外リストに含まれている場合、以降の処理をしない\n                    if (ignoreList.find(ig => {\n                        if (ig.x === notes.x && ig.y === notes.y) return ig;\n                    }) !== undefined) return;\n\n                    const timeInfo = timeList[notes.x];\n                    const timing = notes.status.timing == undefined ? 0 : notes.status.timing;\n                    const timingAdj = timing * (60000 / bpm * 1 / 32);\n                    const startTime = timeInfo.start + timingAdj;\n\n                    /** 持続時間 */\n                    let sustainTime = timeInfo.sustain;\n                    if (notes.status.signal === 's') {\n                        // スタッカートの場合半分の音価にする\n                        sustainTime *= 0.5;\n                    } else if (notes.status.signal === 't') {\n\n                        let inc = notes.x;\n                        let isNext = true;\n                        while (isNext) {\n                            inc++;\n                            // 次のノーツを探す\n                            const nextNotes = layer.notesList.find(next => {\n                                if (next.x === inc && next.y === notes.y) {\n                                    return next;\n                                }\n                            });\n                            if (nextNotes != undefined) {\n                                sustainTime += timeList[inc].sustain;\n                                // 次の要素を除外する\n                                ignoreList.push({ x: inc, y: notes.y });\n                                // 次のノーツがタイだったらループを継続\n                                isNext = nextNotes.status.signal === 't';\n                            }\n                        }\n                    }\n\n                    //ペダルを検出\n                    for (let k = 0; k < pedalRangeList.length; k++) {\n                        const pedal = pedalRangeList[k];\n                        const notesTail = startTime + timeInfo.sustain;\n                        if (pedal.action !== 'off' && notesTail > pedal.start &&\n                            notesTail <= pedal.end\n                        ) {\n                            // ペダルの持続時間で更新\n                            sustainTime = pedal.end - startTime;\n                            break;\n                        }\n                    }\n\n                    /** 音量 */\n                    const velAdj = notes.status.velAdj == undefined ? 0 : notes.status.velAdj;\n                    let gain = layer.vels[notes.x] + velAdj;\n                    if (gain < 1) gain = 1;\n                    if (gain > 10) gain = 10;\n                    gain *= 0.6;\n                    reserveTasks.push(\n                        setTimeout(() => {\n                            const index = pitchIndexList[notes.y];\n                            const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\n                            const octave = Math.floor(index / 12);\n                            const soundFullName = soundName + octave;\n                            playHarmony(soundFullName, store, sustainTime / 1000, gain);\n                        }, startTime)\n                    );\n                });\n            });\n        }\n    }\n\n    export const stopPreview = (store: Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\n        store.instruments.harmonyFont?.stop();\n        state.isPreview = false;\n        reserveTasks.forEach(id => clearInterval(id));\n        dispatcher.backing.setState(state);\n    }\n\n    export const getLimitLen = (beatLen: number, minute: BackingState.MinuteProps, beatSignature: BeatSignature) => {\n        // 16分音符の長さで割る\n        const memoriCount = TheoryUtil.getBeatProps(beatSignature).beatMemoriCount;\n        const minuteLen = minute.head / memoriCount + minute.tail / memoriCount;\n        return (beatLen + minuteLen);\n    }\n\n    export const getUsingLenFromDivs = (divs: BackingState.NoteDiv[], beatSignature: BeatSignature) => {\n        const beatProps = TheoryUtil.getBeatProps(beatSignature);\n        const adjustRate = 4 / beatProps.beatMemoriCount;\n        return divs.reduce((prev, cur) => {\n            let len = 1 / cur.rate * adjustRate;\n            if (cur.isDot) len *= 1.5;\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\n            return prev + len * 4;\n        }, 0);\n    }\n\n    export const getInitVoicingTable = (voicingList: VoicingProps[], structCnt: number): boolean[][] => {\n        const table = new Array<boolean[]>(8);\n        for (let i = 0; i < table.length; i++) {\n            table[i] = new Array<boolean>(6);\n            const col = table[i];\n            for (let j = 0; j < col.length; j++) {\n                // 構成音をオーバーしていた場合セットしない\n                if (j >= structCnt) continue;\n\n                const isExist = voicingList.find(voicing => {\n                    if (voicing.octave === i && voicing.struct === j) {\n                        return voicing;\n                    }\n                });\n                table[i][j] = isExist != null;\n            }\n        }\n        return table;\n    };\n\n    export const getEditorPatternFromChordBacking = (voicingTable: boolean[][], patternProps: BackingPatternProps | null) => {\n        let pattern: BackingState.Pattern | null = null;\n        if (patternProps != null) {\n            const voicingStructs = BackingUtil.buildChannels(voicingTable);\n            const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\n            const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);\n            let pedalActs: (null | BackingState.PedalAction)[] = [];\n            if (patternProps.pedals != undefined) {\n                for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\n                    const pedal = patternProps.pedals.find(pedal => {\n                        if (pedal.divIndex === i) return pedal;\n                    });\n                    if (pedal == undefined) pedalActs.push(null);\n                    else pedalActs.push(pedal.action);\n                }\n            } else {\n                for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\n                    if (i === 0) pedalActs.push('on');\n                    else pedalActs.push(null);\n                }\n            }\n            pattern = {\n                channelIndex: -1,\n                lenIndex: 0,\n                mode: 'velocity',\n                layerIndex: 0,\n                channels,\n                layers,\n                pedalActs\n            };\n        }\n        return pattern;\n    }\n\n    export const hasBackingError = (detail: DetailChord, beatSignature: BeatSignature, structCnt: number) => {\n        const chordBacking = detail.backing;\n        const voicingList = detail.backing.voicingList;\n        const pattern = chordBacking.pattern;\n        \n        let hasError = false;\n\n        // ボイシングが構成音に収まっているかチェック\n        voicingList.some(voicing => {\n            if(voicing.struct > structCnt - 1) {\n                hasError = true;\n                return true; // ループから脱出\n            }\n        });\n        if (pattern != null) {\n\n            const limitLen = BackingUtil.getLimitLen(detail.beatLen, detail.minute, beatSignature);\n            pattern.layers.forEach(layer => {\n\n                const totalLen = getUsingLenFromDivs(layer.divs, beatSignature);\n                // パターンがコードの長さを超えている場合\n                if (limitLen < totalLen) hasError = true;\n            });\n        }\n\n        return hasError;\n    }\n\n    export const checkEditorError = (\n        chordInfo: BackingState.ChordInfo,\n        voicingList: VoicingProps[],\n        pattern: null | BackingState.Pattern\n    ): boolean => {\n        let hasError = false;\n        if (pattern != null) {\n\n            // 選択しているボイシングがチャンネル数に満たない場合\n            if (voicingList.length < pattern.channels.length) hasError = true;\n\n            const limitLen = BackingUtil.getLimitLen(chordInfo.beatLen, chordInfo.minute, chordInfo.init.beatSignature);\n            pattern.layers.forEach(layer => {\n\n                const totalLen = getUsingLenFromDivs(layer.noteDivList, chordInfo.init.beatSignature);\n                // パターンがコードの長さを超えている場合\n                if (limitLen < totalLen) hasError = true;\n            });\n\n            // 裏レイヤーのノーツと重なっている場合\n            pattern.layers[0].table.forEach((record, i) => {\n                record.forEach((cell, j) => {\n                    if (cell != null) {\n                        if (checkOverlapBackLayer(pattern.layers, 0, i, j)) {\n                            hasError = true;\n                        }\n                    }\n                });\n            })\n        }\n\n        return hasError;\n    }\n\n    export const checkOverlapBackLayer = (layers: BackingState.Layer[], layerIndex: number, channelIndex: number, divIndex: number): boolean => {\n        const baseLayer = layers[layerIndex];\n        const backLayer = layers[layerIndex === 0 ? 1 : 0];\n        const [left, right] = getDivRange(baseLayer.noteDivList, divIndex);\n        // console.log(`left=${left}, right=${right}`);\n        let isOverlap = false;\n        for (let i = 0; i < backLayer.noteDivList.length; i++) {\n            if (backLayer.table[channelIndex][i] != null) {\n                const [backLeft, backRight] = getDivRange(backLayer.noteDivList, i);\n                if (right > backLeft && left < backRight) {\n                    isOverlap = true;\n                    break;\n                }\n            }\n        }\n        return isOverlap;\n    }\n\n    export const getDivRange = (divs: BackingState.NoteDiv[], divIndex: number): [number, number] => {\n        let [left, right] = [0, 0];\n\n        divs.slice(0, divIndex + 1).forEach((cur, i) => {\n            let len = 1 / cur.rate;\n            if (cur.isDot) len *= 1.5;\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\n            left = right;\n            right += len * 4;\n        });\n        return [left, right];\n    }\n\n    export const isPermitDot = (note: BackingState.NoteDiv) => {\n        return [8, 4, 2].includes(note.rate) && note.div3 === 0;\n    }\n\n    export const isPermit3ren = (note: BackingState.NoteDiv) => {\n        return [8, 4].includes(note.rate) && !note.isDot;\n    }\n}\n\nexport default BackingUtil;","import { symbolName } from \"typescript\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n/**\r\n * データを高速で参照するために、\r\n * 事前に計算したデータを保持するためのユーティリティを提供する\r\n */\r\nnamespace CacheUtil {\r\n\r\n    /**\r\n     * ハーモナイズのキャッシュを生成する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const updateHarmonizeCache = (store: Store, dispatcher: Dispatcher) => {\r\n        const chordList = store.scoreData.chordList;\r\n        const scoreState = store.scoreState;\r\n        const init = (chordList[0].detail as DetailInit);\r\n\r\n        const elementCacheList: ScoreCache.Element[] = [];\r\n        const sectionCacheList: ScoreCache.Section[] = [];\r\n        const beatCacheList: ScoreCache.BeatRange[] = [];\r\n        const scaleCacheList: ScoreCache.KeyScaleRange[] = [];\r\n        const tempoCacheList: ScoreCache.TempoRange[] = [];\r\n        const measureCacheList: ScoreCache.Measure[] = [];\r\n\r\n        // 初期値情報\r\n        let keyIndex = init.keyIndex;\r\n        let scale = init.scale;\r\n        let bpm = init.bpm;\r\n\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let sectionBeatSum = 0;\r\n        let pastSecond = 0;\r\n        let curSecond = 0;\r\n        let chordIndex = -1;\r\n        // let curTotalBeat = 0;\r\n        let curMemoriCount = 0;\r\n        let totalBarCount = 0;\r\n\r\n        // 経過した16分音符のカウント\r\n        let totalMemoriCount = 0;\r\n        let beatRangeMemoriCount = 0;\r\n        let totalBeat = 0;\r\n        let totalMemoriBarCount = 0;\r\n\r\n        let chordBlockNo = -1;\r\n\r\n        //拍キャッシュの産出に使う変数\r\n        let beatSignature = init.beatSignature;\r\n\r\n        let scaleMemoriCount = 0;\r\n        let tempoMemoriCount = 0;\r\n\r\n        const addScaleRange = () => {\r\n            scaleCacheList.push({\r\n                keyIndex,\r\n                scale,\r\n                memoriCnt: scaleMemoriCount\r\n            });\r\n            scaleMemoriCount = 0;\r\n        }\r\n        const addTempoRange = () => {\r\n            tempoCacheList.push({\r\n                bpm,\r\n                beatRate: beatProps.beatMemoriCount / 4,\r\n                memoriCnt: tempoMemoriCount\r\n            });\r\n            tempoMemoriCount = 0;\r\n        }\r\n\r\n\r\n        let beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        chordList.forEach((element, i) => {\r\n\r\n            const prevBeat = totalBeat;\r\n            // ブロック頭のメモリ\r\n            const prevMemoriCount = totalMemoriCount;\r\n            // ブロック頭の小節\r\n            const prevBarCount = totalBarCount;\r\n            const prevMinute = totalMinute;\r\n            const type = element.type;\r\n\r\n            switch (type) {\r\n                // 固定要素ブロック\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        pastSecond += curSecond;\r\n                    }\r\n                } break;\r\n\r\n                // セクション要素ブロック\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                } break;\r\n\r\n                // コード要素ブロック\r\n                case 'chord': {\r\n                    pastSecond += curSecond;\r\n                    // curTotalBeat += curSustain;\r\n\r\n                    const detail = element.detail as DetailChord;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    totalMinute += minute;\r\n                    chordIndex++;\r\n\r\n                    curMemoriCount = detail.beatLen * beatProps.beatMemoriCount + minute;\r\n\r\n                    const prevBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    totalBeat += detail.beatLen;\r\n                    const curBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    // 小節が変わった場合、合計小節をインクリメント\r\n                    if (prevBar !== curBar) {\r\n                        totalBarCount++\r\n                    }\r\n\r\n                    // スケールキャッシュの長さを加算\r\n                    scaleMemoriCount += curMemoriCount;\r\n                    tempoMemoriCount += curMemoriCount;\r\n\r\n                    // 時間の計算\r\n                    curSecond = TheoryUtil.calcSustainMsec(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        bpm,\r\n                        beatSignature\r\n                    );\r\n\r\n                    // メモリの加算\r\n                    for (let j = 0; j < curMemoriCount; j++) {\r\n                        let rate: ScoreCache.MeasureRate = 16;\r\n                        if (beatRangeMemoriCount % beatProps.beatMemoriCount === 0) rate = 4;\r\n                        else if (beatRangeMemoriCount % (beatProps.beatMemoriCount / (beatProps.beatMemoriCount / 2)) === 0) rate = 8;\r\n\r\n                        const barMemoriCount = beatProps.barBeatCnt * beatProps.beatMemoriCount;\r\n\r\n                        let dispBarCount = -1;\r\n                        if (beatRangeMemoriCount % barMemoriCount === 0) {\r\n                            // 拍子セクションの合計メモリ数が小節のメモリ数で割り切れる場合、小節数を表示する\r\n                            totalMemoriBarCount++;\r\n                            dispBarCount = totalMemoriBarCount;\r\n                        }\r\n                        measureCacheList.push({ rate, barCount: dispBarCount });\r\n                        totalMemoriCount++;\r\n                        beatRangeMemoriCount++;\r\n                    }\r\n\r\n                    // コードブロック連番の設定\r\n                    chordBlockNo++;\r\n                } break;\r\n\r\n                // アルター要素ブロックする\r\n                case 'alter': {\r\n                    const detail = element.detail as DetailAlter;\r\n                    switch (detail.alterType) {\r\n                        // 音階が変わる\r\n                        case 'modulate': {\r\n                            addScaleRange();\r\n                            switch (detail.modRel) {\r\n                                case 'domm': {\r\n                                    keyIndex = (keyIndex + 24 + 7 * detail.dommVal) % 12;\r\n                                } break;\r\n                                case 'key': {\r\n                                    keyIndex = (keyIndex + 12 + detail.keyAdj) % 12;\r\n                                } break;\r\n                                case 'parallel': {\r\n                                    keyIndex = (keyIndex + 12 + (scale === 'major' ? -1 : 1) * 3) % 12;\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                                case 'relative': {\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // テンポが変わる\r\n                        case 'tempo': {\r\n                            addTempoRange();\r\n                            switch (detail.tempoRel) {\r\n                                case 'diff': {\r\n                                    bpm += detail.tempoDiff;\r\n                                } break;\r\n                                case 'rate': {\r\n                                    bpm = Math.floor(bpm * 1 * (detail.tempoRate / 100));\r\n                                } break;\r\n                                case 'abs': {\r\n                                    bpm = detail.tempoAbs;\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // 拍子が変わる\r\n                        case 'beat': {\r\n                            addTempoRange();\r\n                            // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n                            beatCacheList.push({\r\n                                beatSignature,\r\n                                memoriCnt: beatRangeMemoriCount\r\n                            });\r\n\r\n                            beatSignature = detail.beatSignature;\r\n                            // 拍を初期化する（拍変更後はいかなる場合も0から数える）\r\n                            totalBeat = 0;\r\n                            beatRangeMemoriCount = 0;\r\n\r\n                            beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n                        } break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n\r\n            elementCacheList.push({\r\n                bar: prevBarCount,\r\n                surplusBeat: prevBeat % beatProps.barBeatCnt,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                scale,\r\n                bpm,\r\n                beatSignature,\r\n                sectionNo,\r\n                pastSecond,\r\n                chordIndex,\r\n                curTotalMemori: prevMemoriCount,\r\n                // chordFullName,\r\n                // structList,\r\n                chordBlockNo,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n        scaleCacheList.push({\r\n            keyIndex,\r\n            scale,\r\n            memoriCnt: scaleMemoriCount\r\n        });\r\n\r\n        beatCacheList.push({\r\n            beatSignature,\r\n            memoriCnt: beatRangeMemoriCount\r\n        });\r\n        addTempoRange();\r\n\r\n        scoreState.elementCacheList = elementCacheList;\r\n        scoreState.sectionCacheList = sectionCacheList;\r\n        scoreState.beatCacheList = beatCacheList;\r\n        scoreState.tempoCacheList = tempoCacheList;\r\n        scoreState.scaleCacheList = scaleCacheList;\r\n        scoreState.measureCacheList = measureCacheList;\r\n\r\n        scoreState.chordCacheList = createChordCacheList(chordList, elementCacheList);\r\n\r\n        dispatcher.score.setScoreState(scoreState);\r\n    }\r\n\r\n    export const createChordCacheList = (chordList: ChordElement[], elementCacheList: ScoreCache.Element[]) => {\r\n\r\n        const chordCacheList: ScoreCache.Chord[] = [];\r\n\r\n        chordList.forEach((element, i) => {\r\n\r\n            const type = element.type;\r\n            if (type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const cache = elementCacheList[i];\r\n\r\n\r\n                const keyIndex = cache.keyIndex;\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                const [chordFullName, structList] = detail.root != null ? BackingUtil.getChordDetails(\r\n                    detail.root,\r\n                    keyIndex,\r\n                    detail.on,\r\n                    symbol\r\n                ) : ['', []];\r\n\r\n                const backingError = BackingUtil.hasBackingError(detail, cache.beatSignature, structList.length);\r\n\r\n                chordCacheList.push({\r\n                    structList,\r\n                    chordFullName,\r\n                    backingError\r\n                });\r\n\r\n            }\r\n        });\r\n        return chordCacheList;\r\n    }\r\n\r\n    // export const getChordCache = (focusIndex: number, ) => {\r\n\r\n    // }\r\n\r\n\r\n    // export const updateMelodyCache = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    //     const notesList = store.scoreData.notesList;\r\n    //     const state = store.melodyState;\r\n\r\n    //     const notesCacheList: ScoreCache.NotesCache[] = [];\r\n\r\n    //     notesList.forEach((notes) => {\r\n    //         const startTime = 0;\r\n    //         const duration = 0;\r\n    //         notesCacheList.push({\r\n    //             startTime,\r\n    //             duration\r\n    //         });\r\n    //     });\r\n    // }\r\n\r\n    export const getKeyScaleFromNotesPos = (pos: number, scaleCacheList: ScoreCache.KeyScaleRange[]) => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let range: ScoreCache.KeyScaleRange | null = null;\r\n        // console.log(`count: ${scaleCacheList.length}`);\r\n        for (let i = 0; i < scaleCacheList.length; i++) {\r\n            const info = scaleCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                range = scaleCacheList[i - 1];\r\n                break;\r\n            }\r\n            tail += info.memoriCnt;\r\n            // console.log(`curPos: ${tail}`);\r\n        }\r\n        // console.log(`curMemori: ${curMemori}`);\r\n        return range === null ? scaleCacheList[scaleCacheList.length - 1] : range;\r\n    }\r\n\r\n    /**\r\n     * ノーツを再生する開始時間と持続時間を産出して返す\r\n     * @param pos ノーツの位置\r\n     * @param len ノーツの長さ\r\n     * @param tempoCacheList テンポのキャッシュリスト\r\n     * @returns \r\n     */\r\n    export const getTimeInfoFromNotesPos = (pos: number, len: number, tempoCacheList: ScoreCache.TempoRange[]): [number, number] => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let posTime = 0;\r\n        let pastLen = 0;\r\n        let last: ScoreCache.TempoRange | null = null;\r\n        for (let i = 0; i < tempoCacheList.length; i++) {\r\n            const info = tempoCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                last = tempoCacheList[i - 1];\r\n                break;\r\n            }\r\n            const beatLen = info.memoriCnt / 4;\r\n            posTime += 60 / info.bpm * beatLen;\r\n            pastLen += beatLen;\r\n            tail += info.memoriCnt;\r\n        }\r\n        if (last === null) {\r\n            last = tempoCacheList[tempoCacheList.length - 1];\r\n        }\r\n\r\n        const beatLen = (pos - pastLen) * last.beatRate;\r\n        posTime += 60 / last.bpm * beatLen;\r\n\r\n        const lenTime = 60 / last.bpm * len * last.beatRate;\r\n\r\n        return [posTime, lenTime];\r\n    }\r\n}\r\n\r\nexport default CacheUtil;\r\n","import { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/score/scoreData\";\nimport { Store } from \"../redux/store/store\";\nimport TheoryUtil from \"./theoryUtil\";\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\nimport BackingUtil from \"./backingUtil\";\nimport CacheUtil from \"./cacheUtil\";\n\nexport const PITCH_MAX = 60;\n\nexport const getKeyIndexFromPitcher = (index: number) => {\n    return (PITCH_MAX - 1 - index + 9) % 12;\n}\n\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\n    let total = 0;\n    total += (notes.len4 ?? 0);\n    total += (notes.len8 ?? 0) / 2;\n    total += (notes.len16 ?? 0) / 4;\n    total += (notes.len32 ?? 0) / 8;\n    total += (notes.len4div3 ?? 0) / 3;\n    total += (notes.len8div3 ?? 0) / 6;\n    return total;\n}\n\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\n    const ml: MelodyLength = {};\n    const len4 = (notes1.len4 ?? 0) + (notes2.len4 ?? 0);\n    if (len4 > 0) ml.len4 = len4;\n    const len8 = (notes1.len8 ?? 0) + (notes2.len8 ?? 0);\n    if (len8 > 0) ml.len8 = len8;\n    const len16 = (notes1.len16 ?? 0) + (notes2.len16 ?? 0);\n    if (len16 > 0) ml.len16 = len16;\n    const len32 = (notes1.len32 ?? 0) + (notes2.len32 ?? 0);\n    if (len32 > 0) ml.len32 = len32;\n    const len4div3 = (notes1.len4div3 ?? 0) + (notes2.len4div3 ?? 0);\n    if (len4div3 > 0) ml.len4 = len4div3;\n    const len8div3 = (notes1.len8div3 ?? 0) + (notes2.len8div3 ?? 0);\n    if (len8div3 > 0) ml.len8div3 = len8div3;\n    return getSortetdNotesLen(ml);\n}\n\nconst getSortetdNotesLen = (base: MelodyLength) => {\n    let len4 = base.len4 ?? 0;\n    let len8 = base.len8 ?? 0;\n    let len16 = base.len16 ?? 0;\n    let len32 = base.len32 ?? 0;\n    let len4div3 = base.len4div3 ?? 0;\n    let len8div3 = base.len8div3 ?? 0;\n\n    const ml: MelodyLength = {};\n\n    const len32Cnt2 = Math.floor(len32 / 2);\n    len32 -= len32Cnt2 * 2;\n    len16 += len32Cnt2;\n\n    const len8div3Cnt3 = Math.floor(len8div3 / 3);\n    len8div3 -= len8div3Cnt3 * 3;\n    len8 += len8div3Cnt3;\n\n    const len8div3Cnt2 = Math.floor(len8div3 / 2);\n    len8div3 -= len8div3Cnt2 * 2;\n    len4div3 += len8div3Cnt2;\n\n    const len4div3Cnt3 = Math.floor(len4div3 / 3);\n    len4div3 -= len4div3Cnt3 * 3;\n    len4 += len4div3Cnt3;\n\n    const len16Cnt2 = Math.floor(len16 / 2);\n    len16 -= len16Cnt2 * 2;\n    len8 += len16Cnt2;\n\n    const len8Cnt2 = Math.floor(len8 / 2);\n    len8 -= len8Cnt2 * 2;\n    len4 += len8Cnt2;\n\n    if (len4 > 0) ml.len4 = len4;\n    if (len8 > 0) ml.len8 = len8;\n    if (len16 > 0) ml.len16 = len16;\n    if (len32 > 0) ml.len32 = len32;\n    if (len4div3 > 0) ml.len4div3 = len4div3;\n    if (len8div3 > 0) ml.len8div3 = len8div3;\n\n    return ml;\n}\n\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\n\n    let len4 = 0;\n    let len8 = 0;\n    let len16 = 0;\n    let len32 = 0;\n    let len4div3 = 0;\n    let len8div3 = 0;\n\n    switch (quantize) {\n        case 1: len4 = count; break;\n        case 2: len8 = count; break;\n        case 3: len4div3 = count; break;\n        case 4: len16 = count; break;\n        case 8: len32 = count; break;\n        case 6: len8div3 = count; break;\n    }\n\n    const ml: MelodyLength = {};\n    if (len4 > 0) ml.len4 = len4;\n    if (len8 > 0) ml.len8 = len8;\n    if (len16 > 0) ml.len16 = len16;\n    if (len32 > 0) ml.len32 = len32;\n    if (len4div3 > 0) ml.len4div3 = len4div3;\n    if (len8div3 > 0) ml.len8div3 = len8div3;\n    return getSortetdNotesLen(ml);\n}\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\n//     // let normal = a;\n//     let len4 = 0;\n//     let len8 = 0;\n//     let len16 = 0;\n//     let len4div3 = 0;\n//     let len8div3 = 0;\n\n//     normal *= 12;\n\n//     len4 = Math.floor(normal / 12);\n//     normal -= len4 * 12;\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\n//         len8 = Math.floor(normal / 12 * 2);\n//         normal -= len8 * 12 / 2;\n//     }\n//     len4div3 = Math.floor(normal / 12 * 3);\n//     normal -= len4div3 * 12 / 3;\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\n//         len16 = Math.floor(normal / 12 * 4);\n//         normal -= len16 * 12 / 4;\n//     }\n//     len8div3 = Math.floor(normal / 12 * 6);\n//     return {\n//         len4, len8, len16, len4div3, len8div3\n//     };\n// }\n\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\n\n    if ((notes.len32 ?? 0) > 0) return 8;\n    else if ((notes.len8div3 ?? 0) > 0) return 6;\n    else if ((notes.len16 ?? 0) > 0) return 4;\n    else if ((notes.len4div3 ?? 0) > 0) return 3;\n    else if ((notes.len8 ?? 0) > 0) return 2;\n    else if ((notes.len4 ?? 0) > 0) return 1;\n    else return 0;\n}\n\nexport const playSoundfont = (i: number, store: Store) => {\n    const keyIndex = ((59 - i) + 9) % 12;\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\n    const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\n    const instrument = store.instruments.melodyFont;\n    if (instrument != null) {\n        instrument.stop();\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\n    }\n}\n\nexport const playHarmony = (soundFullName: string, store: Store, duration: number, gain: number) => {\n    const instrument = store.instruments.harmonyFont;\n    if (instrument != null) {\n        instrument.play(soundFullName, 0, { gain, duration });\n    } else {\n        // alert('null');\n    }\n}\n\nexport const stopPiano = (store: Store) => {\n    const instrument = store.instruments.harmonyFont;\n    if (instrument != null) {\n        instrument.stop();\n    }\n}\n\nexport const searchCurChord = (store: Store, focusIndex: number) => {\n    const state = store.melodyState;\n    const chordList = store.scoreData.chordList;\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\n    let left = 0;\n    const searchedChord = chordList.find((element) => {\n        if (element.type === 'chord') {\n            const detail = element.detail as DetailChord;\n            const width = detail.beatLen * state.beatWidth;\n            if (x >= left && x < left + width) {\n                return element;\n            }\n            left += width;\n        }\n    });\n    return searchedChord == undefined ? null : searchedChord;\n}\n\nnamespace MelodyUtil {\n\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\n\n        const state = store.melodyState;\n        state.isPreview = false;\n        // state.focusIndex = state.lastFocus;\n        // state.distIndex = state.focusIndex;\n        reserveTasks.forEach(id => clearInterval(id));\n        // store.instruments.sampler.releaseAll();\n        dispatcher.melody.setState(state);\n        dispatcher.melody.adjustScrollX();\n    }\n\n    /**\n     * プレビュー再生を開始する\n     * @param store ストア\n     * @param dispatcher ディスパッチャー\n     */\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\n\n        const state = store.melodyState;\n        const scoreState = store.scoreState;\n        const data = store.scoreData;\n        const reserveTasks: NodeJS.Timeout[] = [];\n        const instrument = store.instruments.melodyFont;\n\n        // 開始するフォーカス（非選択時は最初から）\n        const start = state.focusIndex === -1 ? 0 : state.focusIndex;\n\n        // プレビュー開始時のフォーカスを保持する\n        state.lastFocus = state.focusIndex;\n        state.isPreview = true;\n        const update = store.invalidate.melody as () => void;\n        let firstTime = -1;\n        for (let i = start; i < data.notesList.length; i++) {\n            const notes = data.notesList[i];\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\n            const pos = getNormalizeLenFromNotes(notes.pos);\n            const len = getNormalizeLenFromNotes(notes.len);\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\n            const pitch = notes.pitchIndex;\n            // const time = 60 / bpm * pos;\n\n            // 開始時のノーツの位置（時間）を保存する。\n            if (firstTime === -1) {\n                // ノーツ非選択時は先頭から流す\n                if (state.focusIndex === -1) {\n                    firstTime = 0;\n                } else {\n                    firstTime = posTime;\n                }\n            }\n\n            const keyIndex = getKeyIndexFromPitcher(pitch);\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\n\n            reserveTasks.push(\n                setTimeout(() => {\n                    // state.mouseState.curChord = searchCurChord(store, i);\n\n                    // dispatcher.tune.setState(state);\n                    if (instrument != null) {\n                        instrument.stop();\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\n                    }\n                    setTimeout(() => {\n                        state.focusIndex = i;\n                        state.destIndex = state.focusIndex;\n                        update();\n                        dispatcher.melody.adjustScrollX();\n                        // dispatcher.melody.setState(state);\n                    }, 0);\n                }, (posTime - firstTime) * 1000)\n            );\n\n            // 終端ノーツの処理\n            if (i === data.notesList.length - 1) {\n                reserveTasks.push(\n                    setTimeout(() => {\n                        stopPreview(store, dispatcher, reserveTasks);\n                    }, (posTime - firstTime + lenTime) * 1000)\n                );\n            }\n        }\n\n        // ハーモニーを再生\n        if (!state.isSolo) {\n            previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\n        }\n\n\n        dispatcher.system.setReserveTasks(reserveTasks);\n        dispatcher.melody.setState(state);\n    }\n\n    const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\n        const state = store.scoreState;\n        const update = store.invalidate.melody as () => void;\n        // const sampler = store.instruments.sampler;\n        const cacheList = state.elementCacheList;\n        const chordList = store.scoreData.chordList;\n        // const reserveTasks = store.reserveTasks;\n        // const init = chordList[0].detail as DetailInit;\n        const adjsut = 0;\n        for (let i = 3; i < chordList.length; i++) {\n            const cache = cacheList[i];\n            const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\n            const element = chordList[i];\n            if (element.type === 'chord') {\n                if (cache.pastSecond < start) continue;\n\n                const detail = element.detail as DetailChord;\n\n                if (detail.root == null) return;\n\n                // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\n                // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\n                // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\n\n                const backing = detail.backing;\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\n\n                // const chordTime = 60 / cache.bpm * len;\n                const minute = detail.minute.head + detail.minute.tail;\n                const chordTime = TheoryUtil.calcSustainMsec(\n                    detail.beatLen,\n                    minute,\n                    cache.bpm,\n                    cache.beatSignature\n                );\n                reserveTasks.push(\n                    setTimeout(() => {\n                        // sampler.releaseAll();\n                        // stopPiano(store);\n\n                        // const pickingDelay = 60 / init.bpm * 0.1 * 1000;\n                        // const div = pickingDelay / pitchList.length;\n\n                        // pitchList.forEach((index, j) => {\n                        //     const soundName = KEY12_SHARP_LIST[index % 12];\n                        //     const octave = Math.floor(index / 12);\n                        //     const soundFullName = soundName + octave;\n                        //     playPiano(soundFullName, store, chordTime);\n                        // });\n\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\n\n                        setTimeout(() => {\n                            store.melodyState.tableMouse.curChord = element;\n                            update();\n                            // dispatcher.melody.setState(store.melodyState);\n                        }, 0);\n                    }, cache.pastSecond - start - adjsut)\n                );\n            }\n        }\n    }\n\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\n\n        const state = store.melodyState;\n        const chordList = store.scoreData.chordList;\n        const cacheList = store.scoreState.elementCacheList;\n        const cache = cacheList[3];\n        const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\n        const init = chordList[0].detail as DetailInit;\n        const curChord = state.tableMouse.curChord;\n        const reserveTasks = store.reserveTasks;\n        if (curChord != null) {\n\n            const detail = curChord.detail as DetailChord;\n\n            if (detail.root == null) return;\n\n            // const rootIndex = (detail.root.index + init.keyIndex) % 12;\n            // const onIndex = detail.on == null ? -1 : ((detail.on.index + init.keyIndex) % 12);\n            // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\n\n            const backing = detail.backing;\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\n            // const chordTime = 60 / init.bpm * len;\n            const minute = detail.minute.head + detail.minute.tail;\n            const chordTime = TheoryUtil.calcSustainMsec(\n                detail.beatLen,\n                minute,\n                init.bpm,\n                init.beatSignature\n            );\n\n            BackingUtil.playBacking(store, reserveTasks, init, backing, pitchList, chordTime);\n\n            reserveTasks.push(setTimeout(() => {\n                state.isPreview = false;\n                dispatcher.melody.setState(state);\n            }, chordTime));\n            state.isPreview = true;\n            dispatcher.melody.setState(state);\n\n        }\n    }\n\n    export type Quantize = 32 | 16| 8 | 4;\n\n    export const isEnableQuantize = (quantize: Quantize, notes: MelodyLength) => {\n\n    }\n}\n\nexport default MelodyUtil;","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { Action, ActionType } from \"../reducer\";\nimport { RefsCache } from \"../store/refsCache\";\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailAlter, DetailChord, DetailInit, DetailSection, Scale, ScoreData, MelodyNotes, VoicingProps } from \"../store/score/scoreData\";\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/score/scoreState\";\nimport { Store } from \"../store/store\";\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/score/melodyState\";\nimport Soundfont from 'soundfont-player';\nimport { SystemState } from \"../store/systemState\";\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\nimport MelodyUtil, { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont } from \"../../utils/melodyUtil\";\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\nimport { Invalidate } from \"../store/invalidate\";\nimport BackingState from \"../store/score/backing/backingState\";\nimport BackingUtil from \"../../utils/backingUtil\";\nimport CacheUtil from \"../../utils/cacheUtil\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport TheoryUtil from \"../../utils/theoryUtil\";\nimport ScoreCache from \"../store/score/scoreCache\";\nimport { UserEnv } from \"../store/userEnv\";\nimport { Instruments } from \"../store/instrument\";\n\nexport class Dispatcher {\n\n    private store: Store;\n    private dispatch: Function;\n\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\n        this.store = store;\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\n    }\n\n    public system = {\n        setUserEnv: (userEnv: UserEnv) => {\n            this.dispatch(ActionType.SET_USER_ENV, { userEnv });\n        },\n\n        setState: (systemState: SystemState) => {\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\n        },\n\n        switchSplashToMain: () => {\n            const systemState = this.store.systemState;\n            systemState.isSplash = false;\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\n        },\n\n        setMainTabIndex: (index: number) => {\n            const systemState = this.store.systemState;\n            systemState.mainChannelIndex = index;\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\n        },\n\n        setRefs: (refs: RefsCache) => {\n            this.dispatch(ActionType.SET_REFS, { refs });\n        },\n\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\n        },\n\n        setInvalidate: (invalidate: Invalidate) => {\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\n        }\n    }\n\n    public score = {\n        saveFile: () => {\n            // プレビュー時は保存できない\n            const isDirect = this.store.systemState.directScore != undefined;\n            if (isDirect) return;\n\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const options = {\n                types: [\n                    {\n                        accept: {\n                            'text/plain': ['.lcrs'],\n                        },\n                    },\n                ],\n            };\n            const fileHandle = state.fileHandle;\n            if (fileHandle != null) {\n                (async () => {\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\n                    const writable = await fileHandle.createWritable();\n                    //テキストデータの書き込み\n                    const text = DataUtil.gZip(JSON.stringify(data));\n                    await writable.write(text);\n                    //ファイルを閉じる\n                    await writable.close();\n                    state.fileHandle = fileHandle;\n                    this.score.setScoreState({ ...state });\n                    const file = await fileHandle.getFile();\n                    // alert('saved successfully!');\n                    console.log('saved successfully!');\n                })();\n            } else {\n                window.showSaveFilePicker(options).then((handle) => {\n                    (async () => {\n                        //ファイルへ書き込むための FileSystemWritableFileStream を作成\n                        const writable = await handle.createWritable();\n                        //テキストデータの書き込み\n                        const text = DataUtil.gZip(JSON.stringify(data));\n                        await writable.write(text);\n                        //ファイルを閉じる\n                        await writable.close();\n                        state.fileHandle = handle;\n                        this.score.setScoreState({ ...state });\n                    })();\n                }).catch(() => {\n                    console.log('キャンセルされました');\n                });\n            }\n        },\n\n        setHarmonyFont: (soundfontPlayer: Soundfont.Player) => {\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\n                instruments: {\n                    ...this.store.instruments, harmony: soundfontPlayer\n                }\n            });\n        },\n\n        setInstruments: (instruments: Instruments) => {\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\n                instruments\n            });\n        },\n\n        setScoreTabIndex: (index: number) => {\n            const systemState = this.store.systemState;\n            systemState.scoreTabIndex = index;\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\n        },\n\n        setScoreState: (scoreState: ScoreState) => {\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\n        },\n\n        clearCache: () => {\n            const scoreState = this.store.scoreState;\n            scoreState.focusIndex = -1;\n            scoreState.distIndex = -1;\n            scoreState.initialBeat = 4;\n            scoreState.elementCacheList = [];\n            scoreState.beatCacheList = [];\n            scoreState.chordCacheList = [];\n            scoreState.scaleCacheList = [];\n            scoreState.tempoCacheList = [];\n            scoreState.measureCacheList = [];\n            scoreState.sectionCacheList = [];\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\n        },\n\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\n            const state = this.store.scoreState;\n            state.keySwitch = keySwitch;\n            this.score.setScoreState(state);\n        },\n\n        setScoreData: (scoreData: ScoreData) => {\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\n        },\n\n        moveElement: (isNext: boolean) => {\n            const state = this.store.scoreState;\n            const list = this.store.scoreData.chordList;\n            const sub = isNext ? 1 : -1;\n            if (list[state.focusIndex + sub].type !== 'fixed') {\n                state.focusIndex += sub;\n                state.distIndex = state.focusIndex;\n                this.score.setScoreState(state);\n            }\n        },\n\n        /**\n         * 選択範囲の終点を移動する\n         * @param isNext \n         */\n        moveDist: (isNext: boolean) => {\n            const state = this.store.scoreState;\n            const list = this.store.scoreData.chordList;\n            const sub = isNext ? 1 : -1;\n            if (list[state.distIndex + sub].type !== 'fixed') {\n                state.distIndex += sub;\n                this.score.setScoreState(state);\n            }\n        },\n\n        releaseRange: (isTail: boolean) => {\n            const state = this.store.scoreState;\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\n            state.focusIndex = !isTail ? distHead : distTail;\n            state.distIndex = state.focusIndex;\n            this.score.setScoreState(state);\n        },\n\n        moveSection: (isNext: boolean) => {\n            const state = this.store.scoreState;\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\n            const sectionCacheList = state.sectionCacheList;\n            const curSectionInfo = sectionCacheList[curSectionIndex];\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\n            if (!isNext) {\n                // alert('prev');\n                if (curElementType === 'section' && curSectionIndex > 0) {\n                    // 1つ前のセクションの先頭に移動\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\n                } else {\n                    // 今のセクションの先頭に移動\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\n                }\n            } else {\n                // alert('next');\n                if (curSectionIndex < sectionCacheList.length - 1) {\n                    // 次のセクションの先頭に移動\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\n                } else {\n                    // 今のセクションの終端に移動\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\n                }\n            }\n            state.distIndex = state.focusIndex;\n            this.score.setScoreState(state);\n        },\n\n        flashElement: (index: number) => {\n            // const state = this.store.scoreState;\n            // const cache = state.elementCacheList[index];\n\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\n\n            // bodyRef.style.backgroundColor = '#ffef5f';\n            // setTimeout(() => {\n            //     bodyRef.style.backgroundColor = '';\n            // }, 10);\n        },\n\n        incrementDegreeRoot: (isUp: boolean) => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\n            const sub = isUp ? 1 : -1;\n            if (detail.root == null) {\n                if (isUp) {\n                    detail.root = { index: 0, isFlat: false };\n                    this.score.setScoreData(data);\n                    this.score.flashElement(state.focusIndex);\n                }\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\n                detail.root.index += sub;\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\n                this.score.setScoreData(data);\n                this.score.flashElement(state.focusIndex);\n            } else if (detail.root.index + sub === -1) {\n                detail.root = null;\n                detail.symbolKey = 'major';\n                this.score.setScoreData(data);\n                this.score.flashElement(state.focusIndex);\n            }\n            // キャッシュの更新\n            const cache = state.elementCacheList[state.focusIndex];\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\n            if (detail.root != null) {\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\n                [chordCache.chordFullName, chordCache.structList] =\n                    BackingUtil.getChordDetails(detail.root, cache.keyIndex, detail.on, symbol);\n            } else {\n                chordCache.chordFullName = '';\n                chordCache.structList = [];\n            }\n            this.score.setScoreState(state);\n        },\n\n        incrementBeatLen: (isUp: boolean) => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const chordList = data.chordList.slice();\n            const detail = chordList[state.focusIndex].detail as DetailChord;\n            const sub = isUp ? 1 : -1;\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\n                detail.beatLen += sub;\n                data.chordList = chordList;\n                this.score.setScoreData(data);\n                // キャッシュの更新\n                // setTimeout(() => {\n                CacheUtil.updateHarmonizeCache(this.store, this);\n                // }, 1);\n                this.score.flashElement(state.focusIndex);\n            }\n        },\n\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\n            const data = this.store.scoreData;\n            const cur = data.chordList[pos];\n            const detail = cur.detail as DetailChord;\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\n            target += value;\n            if (target >= -2 && target <= 2) {\n                if (!isTail) detail.minute.head = target;\n                else detail.minute.tail = target;\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\n                data.chordList = data.chordList.slice();\n                this.score.setScoreData(data);\n                // キャッシュの更新\n                CacheUtil.updateHarmonizeCache(this.store, this);\n            }\n        },\n\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\n            const focusIndex = this.store.scoreState.focusIndex;\n            const chordList = this.store.scoreData.chordList;\n\n            let nearIndex = -1;\n            if (!isTail) {\n                for (let i = focusIndex - 1; i > 2; i--) {\n                    if (chordList[i].type === 'chord') {\n                        nearIndex = i;\n                        break;\n                    }\n                }\n            } else {\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\n                    if (chordList[i].type === 'chord') {\n                        nearIndex = i;\n                        break;\n                    }\n                }\n            }\n            if (nearIndex != -1) {\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\n            }\n        },\n\n        addChordElement: () => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const cur = data.chordList[state.focusIndex];\n\n            // 拍の初期値を取得\n            const beatSignature = state.elementCacheList[state.focusIndex].beatSignature;\n            const initialBeat = TheoryUtil.getBeatProps(beatSignature).barBeatCnt;\n            let curBeatLen = initialBeat;\n            if (cur.type === 'chord') {\n                const curChord = cur.detail as DetailChord;\n                // 後にシンコペーションが設定されている場合は追加できない\n                if (curChord.minute.tail != 0) return;\n\n                curBeatLen = curChord.beatLen;\n            }\n            const element = {\n                type: 'chord', detail: {\n                    beatLen: curBeatLen,\n                    minute: { head: 0, tail: 0 },\n                    // degreeIndex: 0,\n                    // isFlat: false,\n                    root: null,\n                    on: null,\n                    symbolKey: 'major',\n                    backing: {\n                        voicingList: [],\n                        pattern: null,\n                        hasError: false\n                    }\n                } as DetailChord\n            } as ChordElement;\n            data.chordList.splice(state.focusIndex + 1, 0, element);\n            this.score.setScoreData(data);\n\n            // キャッシュの更新\n            CacheUtil.updateHarmonizeCache(this.store, this);\n\n            // const cache = state.elementCacheList[state.focusIndex + 1];\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\n            // const baseWidth = wrapRef.clientWidth;\n            // wrapRef.style.width = '0';\n            // setTimeout(() => {\n            //     wrapRef.style.width = `${baseWidth}px`;\n            // }, 1);\n            // setTimeout(() => {\n            //     wrapRef.style.width = '';\n            // }, 1000);\n        },\n\n        addSectionElement: () => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const element = {\n                type: 'section', detail: {\n                    labelName: 'Section'\n                } as DetailSection\n            } as ChordElement;\n            data.chordList.splice(state.focusIndex + 1, 0, element);\n            this.score.setScoreData(data);\n\n            // キャッシュの更新\n            CacheUtil.updateHarmonizeCache(this.store, this);\n        },\n\n        addAlterElement: () => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const element = {\n                type: 'alter', detail: {\n                    alterType: null,\n                    modRel: null,\n                    dommVal: 0,\n                    keyAdj: 0,\n                    tempoRel: null,\n                    tempoDiff: 0,\n                    tempoRate: 1,\n                    tempoAbs: 0,\n                    beatSignature: '4/4'\n                } as DetailAlter\n            } as ChordElement;\n            data.chordList.splice(state.focusIndex + 1, 0, element);\n            this.score.setScoreData(data);\n\n            // キャッシュの更新\n            CacheUtil.updateHarmonizeCache(this.store, this);\n        },\n\n        removeCurElement: () => {\n            const state = this.store.scoreState;\n            // const cache = state.elementCacheList[state.focusIndex];\n\n            const data = this.store.scoreData;\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\n\n            for (let i = distHead; i <= distTail; i++) {\n                const element = data.chordList[i];\n                const sectionNo = this.store.scoreState.elementCacheList[i].sectionNo;\n                // 先頭のセクション要素が含まれている場合削除しない\n                if (element.type === 'section' && sectionNo === 0) {\n                    return;\n                }\n            }\n            data.chordList.splice(distHead, (distTail - distHead) + 1);\n            this.score.setScoreData(data);\n            state.focusIndex = distHead - 1;\n            state.distIndex = state.focusIndex;\n            this.score.setScoreState(state);\n            // キャッシュの更新\n            CacheUtil.updateHarmonizeCache(this.store, this);\n\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\n            // // reffer.style.width = '300px';\n            // wrapRef.style.opacity = '0';\n            // wrapRef.style.overflow = 'hidden';\n            // // wrapRef.style.padding = '0';\n            // wrapRef.style.width = `${wrapRef.clientWidth}px`;\n            // setTimeout(() => {\n            //     wrapRef.style.width = '0';\n            // }, 1);\n            // setTimeout(() => {\n            //     wrapRef.style.opacity = '';\n            //     wrapRef.style.width = '';\n            //     wrapRef.style.overflow = '';\n            //     // wrapRef.style.padding = '';\n            //     const data = this.store.scoreData;\n            //     data.chordList.splice(state.focusIndex, 1);\n            //     this.score.setScoreData(data);\n            //     state.focusIndex--;\n            //     this.score.setScoreState(state);\n            //     // setTimeout(() => {\n            //     //     reffer.style.opacity = '';\n            //     //     reffer.style.width = '';\n            //     //     const data = this.store.scoreData;\n            //     //     data.chordList.splice(state.focusIndex, 1);\n            //     //     this.score.setScoreData(data);\n            //     // }, 200);\n            // }, 200);\n        },\n\n        copyElementList: () => {\n            const state = this.store.scoreState;\n            // const cache = state.elementCacheList[state.focusIndex];\n\n            const data = this.store.scoreData;\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\n\n            const list: ChordElement[] = [];\n            for (let i = distHead; i <= distTail; i++) {\n                const element = data.chordList[i];\n                list.push(JSON.parse(JSON.stringify(element)));\n            }\n            console.log(list.length);\n            state.copiedElementList = list;\n            state.cloneBacking = null;\n            this.score.setScoreState(state);\n        },\n\n        pasteElementList: () => {\n            const state = this.store.scoreState;\n\n            const data = this.store.scoreData;\n            const list = state.copiedElementList;\n            if (list == null) return;\n\n            console.log(list.length);\n            list.forEach((element, i) => {\n                data.chordList.splice(state.focusIndex + 1 + i, 0, element);\n            });\n            this.score.setScoreData(data);\n            state.focusIndex++;\n            state.distIndex = state.focusIndex + list.length - 1;\n            state.copiedElementList = null;\n            this.score.setScoreState(state);\n            // キャッシュの更新\n            CacheUtil.updateHarmonizeCache(this.store, this);\n        },\n\n        // incrementSymbol: (isUp: boolean) => {\n        //     const state = this.store.scoreState;\n        //     const data = this.store.scoreData;\n        //     const detail = data.chordList[state.focusIndex].detail as DetailChord;\n        //     const sub = isUp ? 1 : -1;\n        //     if (detail.root == null) {\n        //         detail.root = { index: 0, isFlat: false };\n        //         this.score.setScoreData(data);\n        //     } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\n        //         detail.root.index += sub;\n        //         detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\n        //         this.score.setScoreData(data);\n        //     }\n        // },\n\n        setDiatonicChord: (scale: Scale, diatonicIndex: number) => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\n            const scaleList = scale === 'major' ? TheoryUtil.DIATONIC_MAJOR_SCALE_LIST : TheoryUtil.DIATONIC_MINOR_SCALE_LIST;\n            const chord = scaleList[diatonicIndex];\n            const root: TheoryUtil.DegreeProps = { ...chord.root };\n            detail.root = root;\n            detail.symbolKey = chord.symbolKey;\n            // オンコードの設定を解除\n            detail.on = null;\n            this.score.setScoreData(data);\n\n            // キャッシュの更新\n            const cache = state.elementCacheList[state.focusIndex];\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\n            [chordCache.chordFullName, chordCache.structList] =\n                BackingUtil.getChordDetails(root, cache.keyIndex, null, symbol);\n            chordCache.backingError =\n                BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\n            this.score.setScoreState(state);\n        },\n\n        setDefaultBacking: () => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\n            if (symbol.attr != undefined) {\n                detail.backing = getDefaultBacking(symbol.attr);\n                this.score.setScoreData(data);\n            }\n        },\n\n        cloneBacking: () => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\n            state.copiedElementList = null;\n            this.score.setScoreState(state);\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\n        },\n\n        pastBacking: () => {\n            const state = this.store.scoreState;\n            if (state.cloneBacking != null) {\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\n                const data = this.store.scoreData;\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\n                this.score.setScoreData(data);\n            }\n        },\n\n        openLibraryWnd: () => {\n            const state = this.store.scoreState;\n            state.hideMenu = 'library';\n            this.score.setScoreState(state);\n        },\n\n        closeLibraryWnd: () => {\n            const state = this.store.scoreState;\n            state.hideMenu = 'none';\n            this.score.setScoreState(state);\n        },\n    }\n\n    public symbol = {\n\n        toNext: (isUp: boolean) => {\n            const state = this.store.scoreState;\n            const mng = state.symbolMng as SymbolDiagram;\n            const data = this.store.scoreData;\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\n            const sub = isUp ? 1 : -1;\n            const index = mng.index + sub;\n            if (index >= 0 && index <= mng.curLine.length - 1) {\n                mng.index += sub;\n                detail.symbolKey = mng.curLine[mng.index];\n                this.score.setScoreData(data);\n\n                // キャッシュの更新\n                const root = detail.root as TheoryUtil.DegreeProps;\n                const cache = state.elementCacheList[state.focusIndex];\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\n                [chordCache.chordFullName, chordCache.structList] =\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\n                this.score.setScoreState(state);\n            }\n        },\n\n        toBase: () => {\n            const state = this.store.scoreState;\n            const mng = state.symbolMng as SymbolDiagram;\n            const data = this.store.scoreData;\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\n            if (mng.parentLine.length > 0) {\n                detail.symbolKey = mng.parentLine[0];\n                this.score.setScoreData(data);\n\n                // キャッシュの更新\n                const root = detail.root as TheoryUtil.DegreeProps;\n                const cache = state.elementCacheList[state.focusIndex];\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\n                [chordCache.chordFullName, chordCache.structList] =\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\n                chordCache.backingError =\n                    BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\n                this.score.setScoreState(state);\n            }\n        },\n\n        toDerive: () => {\n            const state = this.store.scoreState;\n            const mng = state.symbolMng as SymbolDiagram;\n            const data = this.store.scoreData;\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\n            if (mng.childrenLine.length > 0) {\n                detail.symbolKey = mng.childrenLine[0];\n                this.score.setScoreData(data);\n\n                // キャッシュの更新\n                const root = detail.root as TheoryUtil.DegreeProps;\n                const cache = state.elementCacheList[state.focusIndex];\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\n                [chordCache.chordFullName, chordCache.structList] =\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\n                chordCache.backingError =\n                    BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\n                this.score.setScoreState(state);\n            }\n        },\n\n    }\n\n    /**\n     * メロディ画面のディスパッチ\n     */\n    public melody = {\n\n        setState: (tuneState: MelodyState) => {\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\n        },\n\n        /**\n         * 全てのノーツを選択する\n         */\n        allSelect: () => {\n            const state = this.store.melodyState;\n            const notesList = this.store.scoreData.notesList;\n            if (notesList.length > 0) {\n                state.focusIndex = 0;\n                state.destIndex = notesList.length - 1;\n                this.melody.setState(state);\n            }\n        },\n\n        setNotesList: (notesList: MelodyNotes[]) => {\n            const data = this.store.scoreData;\n            data.notesList = notesList;\n            this.score.setScoreData(data);\n        },\n\n        setMelodyFont: (soundfontPlayer: Soundfont.Player) => {\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\n                instruments: {\n                    ...this.store.instruments, soundfontPlayer\n                }\n            });\n        },\n\n        /**\n         * 選択中のノーツの音程を変更する\n         * @param isUpper\n         * @param mode \n         * @returns \n         */\n        incrementCurPitch: (isUpper: boolean, mode: MelodyPitchMode) => {\n            const scoreState = this.store.scoreState;\n            const state = this.store.melodyState;\n            const focusIndex = state.focusIndex;\n            const distIndex = state.destIndex;\n            const notesList = this.store.scoreData.notesList;\n\n            // フォーカスされていない場合は処理しない\n            if (focusIndex === -1) return;\n\n            if (focusIndex !== distIndex) {\n\n                const targetList = notesList.filter(\n                    (notes, i) => i >= focusIndex && i <= distIndex\n                );\n\n                targetList.forEach(notes => {\n                    notes.pitchIndex += 1 * (isUpper ? -1 : 1);\n                });\n\n                // 履歴を作成\n                state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\n                this.melody.setNotesList(notesList.slice());\n            } else {\n                const cur = notesList[focusIndex];\n                // const init = this.store.scoreData.chordList[0].detail as DetailInit;\n                const normalLeft = getNormalizeLenFromNotes(cur.pos);\n                const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\n                const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\n                const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\n\n                const prevPitchIndex = cur.pitchIndex;\n                const interval = mode !== 'octave' ? 1 : 12;\n                let tempPitchIndex = cur.pitchIndex;\n\n                while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\n                    tempPitchIndex += interval * (isUpper ? -1 : 1);\n\n                    if (mode !== 'scale' ||\n                        (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\n                    ) {\n                        cur.pitchIndex = tempPitchIndex;\n                        break;\n                    }\n                }\n\n                // 値が変わっていた場合のみ処理する\n                if (prevPitchIndex !== cur.pitchIndex) {\n                    playSoundfont(cur.pitchIndex, this.store);\n                    // 履歴を作成\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\n                    this.melody.setNotesList(notesList.slice());\n\n                    this.melody.adjustScrollY();\n                }\n\n            }\n        },\n\n        /**\n         * キースイッチを設定する\n         * @param keySwitch \n         */\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\n            const state = this.store.melodyState;\n            state.keySwitch = keySwitch;\n            this.melody.setState(state);\n        },\n\n        /**\n         * フォーカスを移動する\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\n         */\n        moveFocus: (isNext: boolean) => {\n            const state = this.store.melodyState;\n            const data = this.store.scoreData;\n            const notesList = data.notesList;\n\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\n            if (state.focusIndex === -1) {\n                if (notesList.length > 0) {\n                    state.focusIndex = state.lastFocus;\n                    state.destIndex = state.focusIndex;\n                    this.melody.setState(state);\n                }\n            } else {\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\n                    state.focusIndex += (isNext ? 1 : -1);\n                    state.destIndex = state.focusIndex;\n                    this.melody.setState(state);\n                }\n            }\n\n            this.melody.adjustScrollX();\n            this.melody.updateCurChord(state.focusIndex);\n        },\n\n        /**\n         * 複数選択From～ToのToを移動する\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\n         * @returns \n         */\n        moveDestFocus: (isNext: boolean) => {\n            const state = this.store.melodyState;\n            const data = this.store.scoreData;\n            const notesList = data.notesList;\n\n            if (state.focusIndex === -1) return;\n\n            if (!isNext ? state.destIndex > 0 : state.destIndex < notesList.length - 1) {\n                state.destIndex += (isNext ? 1 : -1);\n                this.melody.setState(state);\n            }\n            this.melody.adjustScrollX();\n        },\n\n        /**\n         * ノーツのエリアのコードを更新する\n         * @param focusIndex ノーツのフォーカス\n         */\n        updateCurChord: (focusIndex: number) => {\n            const state = this.store.melodyState;\n            const chordList = this.store.scoreData.chordList;\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\n            let left = 0;\n            const searchedChord = chordList.find((element) => {\n                if (element.type === 'chord') {\n                    const detail = element.detail as DetailChord;\n                    const width = detail.beatLen * state.beatWidth;\n                    if (x >= left && x < left + width) {\n                        // alert(`x=${x}, left=${left}`);\n                        return element;\n                    }\n                    left += width;\n                }\n            });\n            state.tableMouse.curChord = searchedChord == undefined ? null : searchedChord;\n            this.melody.setState(state);\n        },\n\n        /**\n         * フォーカスの後ろに新しいノーツを追加する\n         * @returns \n         */\n        addNotes: () => {\n            const state = this.store.melodyState;\n            const focus = state.focusIndex;\n            if (focus === -1) return;\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\n\n            const data = this.store.scoreData;\n            const notesList = data.notesList;\n            const cur = notesList[focus];\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\n            const nextNormalPos = focus === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\n            // 新しい要素の位置\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\n\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\n                data.notesList.splice(focus + 1, 0, {\n                    pos,\n                    pitchIndex: cur.pitchIndex,\n                    len: getNotesLenFromQuantize(state.quantize, 1)\n                });\n                this.score.setScoreData(data);\n                state.focusIndex++;\n                state.destIndex = state.focusIndex;\n                this.melody.setState(state);\n            }\n\n            this.melody.adjustScrollX();\n        },\n\n        /**\n         * ノーツを削除する\n         */\n        removeNotes: () => {\n            const state = this.store.melodyState;\n            const notesList = this.store.scoreData.notesList;\n            // 履歴を作成\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\n            // 対象の開始と終了のインデックスを取得\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\n            // 削除する個数\n            const delNum = end - start + 1;\n            notesList.splice(start, delNum);\n            this.melody.setNotesList(notesList);\n            // 削除後は対象の開始インデックスの１つ前を選択\n            state.focusIndex = start - 1;\n            state.destIndex = state.focusIndex;\n            this.melody.setState(state);\n            this.melody.adjustScrollX();\n        },\n\n        /**\n         * 複数選択を解除する\n         * @param isTail 解除時複数選択のどこにフォーカスを移すか（trueの場合終端を選択）\n         */\n        releaseRange: (isTail: boolean) => {\n            const state = this.store.melodyState;\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\n            state.focusIndex = (!isTail ? start : end);\n            state.destIndex = state.focusIndex;\n            this.melody.setState(state);\n            this.melody.adjustScrollX();\n            this.melody.updateCurChord(state.focusIndex);\n        },\n\n        resizeNotes: (isSpread: boolean) => {\n\n            const state = this.store.melodyState;\n            if (state.focusIndex === -1) return;\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\n\n            const data = this.store.scoreData;\n            const notesList = data.notesList;\n            const cur = notesList[state.focusIndex];\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\n            const resizeNormal = 1 / state.quantize;\n            const condition = !isSpread ?\n                // 縮めることが可能か\n                curLenNormal > resizeNormal :\n                // 広げることが可能か\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\n            if (condition) {\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\n                data.notesList = notesList.slice();\n                this.score.setScoreData(data);\n            }\n        },\n\n        moveNotes: (isBehind: boolean) => {\n\n            const state = this.store.melodyState;\n            if (state.focusIndex === -1) return;\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\n\n            const data = this.store.scoreData;\n            const notesList = data.notesList;\n\n            const distIndex = state.destIndex;\n            const focusIndex = state.focusIndex;\n\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\n            const moveNormal = 1 / state.quantize;\n\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\n\n            const condition = !isBehind ?\n                // 前に移動可能か\n                curNormalLeft - moveNormal >= prevNormalRight :\n                // 後に移動可能か\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\n            // 移動可能かを判定\n            if (condition) {\n                for (let i = start; i <= end; i++) {\n                    const cur = notesList[i];\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\n                }\n                data.notesList = notesList.slice();\n                this.score.setScoreData(data);\n            }\n        },\n\n        firstNotes: () => {\n            const state = this.store.melodyState;\n            const notesList = this.store.scoreData.notesList;\n\n            if (notesList.length > 0) {\n                state.focusIndex = 0;\n                state.destIndex = state.focusIndex;\n                this.melody.setState(state);\n                this.melody.adjustScrollX();\n                // this.tune.adjustScrollY();\n            }\n        },\n\n        adjustScrollX: () => {\n            const state = this.store.melodyState;\n            const table = this.store.refs.melody.table;\n            const focusIndex = state.destIndex;\n            if (focusIndex !== -1 && table != null) {\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\n            }\n        },\n\n        adjustScrollY: () => {\n            const state = this.store.melodyState;\n            const table = this.store.refs.melody.table;\n            if (state.focusIndex !== -1 && table != null) {\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\n            }\n        },\n\n        previewStart: () => {\n            const state = this.store.melodyState;\n            // if (state.focusIndex === -1) return;\n\n            MelodyUtil.previewStart(this.store, this);\n        },\n\n        copyNotes: () => {\n\n            const state = this.store.melodyState;\n            const notesList = this.store.scoreData.notesList;\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\n            const num = focusEnd - focusStart + 1;\n\n            const cloneNotesList: MelodyNotes[] = [];\n            const base = notesList[focusStart].pos;\n            const baseUnit = getMinimumLenUnit(base);\n            for (let i = 0; i < num; i++) {\n                const notes = notesList[i + focusStart];\n                const unit = getMinimumLenUnit(notes.pos);\n                const useUnit = baseUnit > unit ? baseUnit : unit;\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\n                console.log(JSON.stringify(pos));\n                cloneNotesList.push({\n                    pitchIndex: notes.pitchIndex,\n                    pos,\n                    len: { ...notes.len }\n                });\n            }\n            state.cloneNotesList = cloneNotesList;\n            // notesList.splice(state.focusIndex, num);\n            // this.tune.setNotesList(notesList);\n            // state.focusIndex = focusStart - 1;\n            // state.distIndex = state.focusIndex;\n            this.melody.setState(state);\n            // alert(JSON.stringify(state.cloneNotesList));\n        },\n\n        pasteNotes: () => {\n            // alert('pasteNotes');\n\n            const state = this.store.melodyState;\n            if (state.focusIndex === -1) return;\n\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\n\n            const data = this.store.scoreData;\n            const notesList = data.notesList;\n            const cur = notesList[state.focusIndex];\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\n            const pastList: MelodyNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\n            pastList.forEach(notes => {\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\n            });\n            // ペーストするノーツの最後（右端）の要素\n            const pastLast = pastList[pastList.length - 1];\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\n                data.notesList = notesList.concat(pastList);\n                // ノーツ配置後は座標の昇順でソートする\n                data.notesList.sort((a, b) => {\n                    const posA = getNormalizeLenFromNotes(a.pos);\n                    const posB = getNormalizeLenFromNotes(b.pos);\n                    return posA === posB ? 0 : (\n                        posA < posB ? -1 : 1\n                    );\n                });\n                this.score.setScoreData(data);\n\n                state.focusIndex++;\n                state.destIndex = state.focusIndex + pastList.length - 1;\n                this.melody.setState(state);\n            }\n\n            // this.tune.adjustScrollX();\n        },\n\n        undo: () => {\n            const state = this.store.melodyState;\n            const data = this.store.scoreData;\n            const history = state.dataHistory;\n            console.log(`undo start ★ length: ${history.list.length}, cur: ${history.cur}`);\n            const prev = history.undo();\n            if (prev != null) {\n                if (history.cur === 0) {\n                    console.log('first undo');\n                    history.list.unshift(JSON.stringify(data.notesList));\n                    history.cur = 1;\n                }\n                data.notesList = JSON.parse(prev);\n                if (state.focusIndex >= data.notesList.length - 1) {\n                    state.focusIndex = data.notesList.length - 1;\n                    state.destIndex = state.focusIndex;\n                }\n                this.score.setScoreData(data);\n            }\n            console.log(`undo end ★ length: ${history.list.length}, cur: ${history.cur}`);\n        },\n\n        redo: () => {\n            const state = this.store.melodyState;\n            const data = this.store.scoreData;\n            const history = state.dataHistory;\n            console.log(`redo start ★ length: ${history.list.length}, cur: ${history.cur}`);\n            const next = history.redo();\n            if (next != null) {\n                data.notesList = JSON.parse(next);\n                if (state.focusIndex >= data.notesList.length - 1) {\n                    state.focusIndex = data.notesList.length - 1;\n                    state.destIndex = state.focusIndex;\n                }\n                this.score.setScoreData(data);\n            }\n            console.log(`redo end ★ length: ${history.list.length}, cur: ${history.cur}`);\n        }\n    }\n\n    public backing = {\n\n        openBackingEditor: () => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\n            const cache = state.elementCacheList[state.focusIndex];\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\n            const chordBacking = detail.backing;\n            const structList = chordCache.structList;\n            // const cache = state.elementCacheList[state.focusIndex];\n            state.hideMenu = 'backing';\n            this.score.setScoreState(state);\n\n            const voicingTable = BackingUtil.getInitVoicingTable(detail.backing.voicingList, structList.length);\n            const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, chordBacking.pattern);\n\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\n            const chordInfo: BackingState.ChordInfo = {\n                symbolAttr: symbol.attr,\n                chordFullName: chordCache.chordFullName,\n                structList,\n                beatLen: detail.beatLen,\n                minute: detail.minute,\n                init: { ...cache }\n            };\n            // エラーチェックのためにテーブルからリストへ逆変換\n            const voicingList = BackingUtil.getVoicingListFromTable(voicingTable);\n            const hasError = BackingUtil.checkEditorError(chordInfo, voicingList, pattern);\n\n            const updateAction = (editor: BackingState.Editor, isUpdate: boolean) => {\n                if (isUpdate) {\n                    this.backing.mappingEditorToScore(editor);\n                }\n                this.backing.closeBackingEditor();\n            }\n            // バッキングステートの初期化\n            this.backing.setState({\n                chordInfo,\n                voicingTable,\n                pattern,\n                isPreview: false,\n                hasError,\n                closeAction: updateAction\n                // editType: 'normal'\n            });\n        },\n\n        closeBackingEditor: () => {\n            const state = this.store.scoreState;\n            state.hideMenu = 'none';\n            this.score.setScoreState(state);\n            setTimeout(() => {\n                this.backing.setState(null);\n            }, 50);\n        },\n\n        setState: (backingState: null | BackingState.Editor) => {\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\n        },\n\n        getInitialLayer: (): BackingState.Layer => {\n            return {\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\n                table: [[null]],\n                velocityList: [5]\n            } as BackingState.Layer;\n        },\n\n        /**\n         * エディタで設定したバッキング情報を譜面データに反映\n         */\n        mappingEditorToScore: (editor: BackingState.Editor) => {\n            const scoreState = this.store.scoreState;\n            const data = this.store.scoreData;\n            const focus = scoreState.focusIndex;\n            const detail = data.chordList[focus].detail as DetailChord;\n            // const editor = this.store.backingState as BackingState.Editor;\n            console.log(editor);\n            detail.backing = {\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\n                // hasError: editor.hasError\n            };\n            this.score.setScoreData(data);\n\n            // エラーの反映\n            const cache = scoreState.elementCacheList[focus];\n            const scoreCache = scoreState.chordCacheList[cache.chordBlockNo];\n            scoreCache.backingError = editor.hasError;\n            this.score.setScoreState(scoreState);\n        },\n\n        addPatternColumn: () => {\n\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n\n            const layer = pattern.layers[pattern.layerIndex];\n            const lenList = layer.noteDivList;\n            const curLen = lenList[pattern.lenIndex];\n            const newLen: BackingState.NoteDiv = { rate: curLen.rate, div3: curLen.div3, isDot: curLen.isDot };\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\n            layer.noteDivList = lenList.slice();\n\n            // テーブル追加\n            layer.table.forEach((column) => {\n                column.splice(pattern.lenIndex + 1, 0, null);\n            });\n\n            // ベロシティ追加\n            layer.velocityList.splice(pattern.lenIndex + 1, 0, 5);\n\n            // ペダル追加\n            if (pattern.layerIndex === 0) {\n                pattern.pedalActs.splice(pattern.lenIndex + 1, 0, null);\n            }\n\n            this.backing.updateErrorState();\n            this.backing.setState(state);\n        },\n\n        movePatternColumn: (isRight: boolean) => {\n\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            const layer = pattern.layers[pattern.layerIndex];\n\n            let tempIndex = pattern.lenIndex;\n            tempIndex += 1 * (isRight ? 1 : -1);\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\n                pattern.lenIndex = tempIndex;\n            }\n            this.backing.setState(state);\n        },\n\n        moveChannelIndex: (isDown: boolean) => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            const index = pattern.channelIndex;\n\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\n                pattern.channelIndex += (!isDown ? -1 : 1);\n            }\n            this.backing.setState(state);\n        },\n\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            const layer = pattern.layers[pattern.layerIndex];\n            const cur = layer.noteDivList[pattern.lenIndex];\n            cur.rate = rate;\n            cur.isDot = false;\n            cur.div3 = 0;\n            layer.noteDivList = layer.noteDivList.slice();\n            this.backing.updateErrorState();\n            this.backing.setState(state);\n        },\n\n        toggleCurrentDivHalf: () => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            const layer = pattern.layers[pattern.layerIndex];\n            const cur = layer.noteDivList[pattern.lenIndex];\n            if (BackingUtil.isPermitDot(cur)) {\n                cur.isDot = !cur.isDot;\n                layer.noteDivList = layer.noteDivList.slice();\n                this.backing.setState(state);\n                this.backing.updateErrorState();\n            }\n        },\n\n\n        getNotes: () => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            const layer = pattern.layers[pattern.layerIndex];\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\n        },\n\n        setNotes: (notes: BackingState.NoteStatus | null) => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            const layer = pattern.layers[pattern.layerIndex];\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\n            layer.table = layer.table.slice();\n            this.backing.updateErrorState();\n            this.backing.setState(state);\n        },\n\n        incrementVel: (value: number) => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            const layer = pattern.layers[pattern.layerIndex];\n            const after = layer.velocityList[pattern.lenIndex] + value;\n            if (after >= 1 && after <= 10) {\n                layer.velocityList[pattern.lenIndex] = after;\n                this.backing.setState(state);\n            }\n        },\n\n        deleteColumn: () => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            const layer = pattern.layers[pattern.layerIndex];\n            // 2つ以上要素がないと消せない\n            if (layer.noteDivList.length >= 2) {\n                layer.noteDivList.splice(pattern.lenIndex, 1);\n                layer.table.forEach((column) => {\n                    column.splice(pattern.lenIndex, 1);\n                });\n                layer.velocityList.splice(pattern.lenIndex, 1);\n                // for(let i = 0; i < pattern.channels.length; i ++) {\n                //     layer.table[i].splice(pattern.lenIndex, 1);\n                // }\n                if (pattern.layerIndex === 0) {\n                    // 終端までnullで更新\n                    if (pattern.lenIndex < pattern.pedalActs.length - 1) {\n                        for (let j = pattern.lenIndex + 1; j < pattern.pedalActs.length; j++) {\n                            pattern.pedalActs[j] = null;\n                        }\n                    }\n                    pattern.pedalActs.splice(pattern.lenIndex, 1);\n                }\n\n                if (pattern.lenIndex > 0) {\n                    pattern.lenIndex--;\n                }\n                this.backing.setState(state);\n            }\n            this.backing.updateErrorState();\n        },\n\n        /**\n         * 左右レイヤーを切り替える\n         */\n        switchLayer: () => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\n            pattern.lenIndex = 0;\n            pattern.channelIndex = -1;\n            this.backing.setState(state);\n        },\n\n        /**\n         * 音量orペダルのモードを切り替える\n         */\n        switchMode: () => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            if (pattern.mode === 'velocity') pattern.mode = 'pedal';\n            else if (pattern.mode === 'pedal') pattern.mode = 'velocity';\n            this.backing.setState(state);\n        },\n\n        /**\n         * バッキングのプレビュー再生をする\n         */\n        testBacking: () => {\n            const editor = this.store.backingState as BackingState.Editor;\n            const reserveTasks = this.store.reserveTasks;\n            const chordInfo = editor.chordInfo;\n            const init = chordInfo.init;\n\n            // const rootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\n            // const onIndex = chordInfo.on == null ? -1 : ((chordInfo.on.index + chordInfo.init.keyIndex) % 12);\n            // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\n            // const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\n            // const chordTime = 60 / init.bpm * len;\n\n            const chordTime = TheoryUtil.calcSustainMsec(\n                chordInfo.beatLen,\n                chordInfo.minute.head + chordInfo.minute.tail,\n                init.bpm,\n                init.beatSignature\n            );\n            const backing: ChordBacking = {\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern)\n            };\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordInfo.structList);\n\n            BackingUtil.playBacking(this.store, reserveTasks, init, backing, pitchList, chordTime);\n\n            reserveTasks.push(setTimeout(() => {\n                editor.isPreview = false;\n                this.backing.setState(editor);\n            }, chordTime));\n\n            editor.isPreview = true;\n            this.backing.setState(editor);\n        },\n\n        updateErrorState: () => {\n            const editor = this.store.backingState as BackingState.Editor;\n            const voicingList = BackingUtil.getVoicingListFromTable(editor.voicingTable);\n            editor.hasError = BackingUtil.checkEditorError(editor.chordInfo, voicingList, editor.pattern);\n            this.backing.setState(editor);\n        },\n    }\n\n    public thema = {\n        openBackingEditor: (\n            beatLen: number, head: number, tail: number,\n            symbolKey: TheoryUtil.SymbolKey, rootIndex: number, backing: ChordBacking,\n            updateAction: (editor: BackingState.Editor) => void\n        ) => {\n            const symbol = TheoryUtil.getSymbolFromKey(symbolKey) as TheoryUtil.SymbolParams;\n            const voicingTable = BackingUtil.getInitVoicingTable(backing.voicingList, symbol.structs.length);\n            const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, backing.pattern);\n\n            const [chordFullName, structList] = BackingUtil.getChordDetails(\n                { index: rootIndex, isFlat: false } as TheoryUtil.DegreeProps,\n                0,\n                null,\n                symbol\n            );\n            const chordInfo: BackingState.ChordInfo = {\n                symbolAttr: symbol.attr,\n                chordFullName: chordFullName,\n                structList,\n                beatLen,\n                minute: { head, tail },\n                init: {\n                    beatSignature: \"4/4\",\n                    bpm: 100,\n                    keyIndex: 0,\n                    scale: \"major\"\n                }\n            };\n            // エラーチェックのためにテーブルからリストへ逆変換\n            const voicingList = BackingUtil.getVoicingListFromTable(voicingTable);\n            const hasError = BackingUtil.checkEditorError(chordInfo, voicingList, pattern);\n\n            const closeAction = (editor: BackingState.Editor, isUpdate: boolean) => {\n                if (isUpdate) {\n                    updateAction(editor);\n                }\n                this.thema.closeBackingEditor();\n            }\n            // バッキングステートの初期化\n            this.backing.setState({\n                chordInfo,\n                voicingTable,\n                pattern,\n                isPreview: false,\n                hasError,\n                closeAction\n                // editType: 'thema-pattern'\n            });\n        },\n\n        closeBackingEditor: () => {\n            const state = this.store.scoreState;\n            this.backing.setState(null);\n        },\n\n\n        mappingEditorToThema: (editor: BackingState.Editor) => {\n            console.log(editor);\n            if (editor.pattern != null) {\n                const pattern = BackingUtil.buildPatternProps(editor.pattern)\n            }\n        },\n    }\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport Soundfont from 'soundfont-player';\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: TheoryUtil.SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null,\r\n        // hasError: false\r\n    };\r\n    return backing;\r\n}","\r\n\r\n/**\r\n * データの履歴を管理するクラス\r\n */\r\nclass DataHistory {\r\n\r\n    cur: number;\r\n    list: string[];\r\n\r\n    constructor() {\r\n        this.cur = -1;\r\n        this.list = [];\r\n    }\r\n\r\n\r\n    add(data: string) {\r\n        // console.log(`add start ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n        // if (this.list[this.cur] === data) {\r\n        //     console.log('same...');\r\n        //     return;\r\n        // }\r\n        if (this.cur > -1) {\r\n            this.list.splice(0, this.cur + 1);\r\n            this.cur = -1;\r\n            console.log('restert');\r\n        }\r\n        this.list.unshift(data);\r\n        // console.log(`add end ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n    }\r\n\r\n    undo(): null | string {\r\n        let ret = null;\r\n        if (this.cur < this.list.length - 1) {\r\n            this.cur++;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    redo(): null | string {\r\n        let ret = null;\r\n        if (this.cur > 0) {\r\n            this.cur--;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\nimport { RefsCache as RefsCache } from \"./refsCache\"\nimport { Instruments } from \"./instrument\"\nimport { ScoreData } from \"./score/scoreData\"\nimport { ScoreState } from \"./score/scoreState\"\nimport { SystemState } from \"./systemState\"\nimport { MelodyState } from \"./score/melodyState\"\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\nimport { Invalidate } from \"./invalidate\"\nimport DataHistory from \"./state/dataHistory\"\nimport BackingState from \"./score/backing/backingState\"\n\n/**\n * システムで使用するステート群\n */\nexport type Store = {\n    userEnv: UserEnv;\n    systemState: SystemState;\n    scoreState: ScoreState;\n    backingState: null | BackingState.Editor;\n    melodyState: MelodyState;\n    scoreData: ScoreData;\n    instruments: Instruments;\n    refs: RefsCache;\n    reserveTasks: NodeJS.Timeout[];\n    invalidate: Invalidate;\n}\n\nexport const initialStore: Store = {\n    userEnv: {\n        keyConfig: getDefaultKeyConfig(),\n        colorProps: themaColorNormal,\n    },\n    systemState: {\n        directScore: null,\n        isSplash: true,\n        mainChannelIndex: 0,\n        scoreTabIndex: 0,\n        editable: true,\n        dialog: null,\n        themaList: [],\n        activeThemaIndex: -1\n    },\n    backingState: null,\n    scoreState: {\n        fileHandle: null,\n        isMelody: false,\n        initialBeat: 4,\n        focusIndex: -1,\n        distIndex: -1,\n        elementCacheList: [],\n        chordCacheList: [],\n        sectionCacheList: [],\n        scaleCacheList: [],\n        tempoCacheList: [],\n        beatCacheList: [],\n        measureCacheList: [],\n        keySwitch: {\n            distMode: false,\n            sustainMode: false,\n            chordMode: false,\n            symbolMode: false,\n            control: false,\n            minHeadMode: false,\n            minTailMode: false\n        },\n        symbolMng: null,\n        hideMenu: 'none',\n        isPreview: false,\n        isSolo: false,\n        cloneBacking: null,\n        copiedElementList: null,\n        backingDataHistory: new DataHistory(),\n    },\n    melodyState: {\n        focusIndex: -1,\n        destIndex: -1,\n        lastFocus: -1,\n        quantize: 1,\n        beatWidth: 120,\n        tableMouse: {\n            isPut: false,\n            lock: { x: 0, y: 0 },\n            width: 0,\n            prevRight: 0,\n            nextLeft: 0,\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\n            curChord: null,\n            mousePitchIndex: -1,\n            mouseMeasurePos: -1\n        },\n        timelineMouse: {\n            pos: -1,\n            isPut: false,\n            lock: -1,\n            width: 0,\n        },\n        soundfontInfo: {\n            name: 'violin',\n            gain: 9\n        },\n        keySwitch: {\n            scaleMode: false,\n            octave: false,\n            resize: false,\n            move: false,\n            shift: false,\n            control: false,\n        },\n        isPreview: false,\n        isSolo: false,\n        cloneNotesList: [],\n\n        dataHistory: new DataHistory(),\n        notesCacheList: []\n    },\n    scoreData: {\n        chordList: [],\n        notesList: []\n    },\n    instruments: {\n        // sampler: getDefaultSampler(),\n        harmonyFont: null,\n        melodyFont: null\n    },\n\n    refs: {\n        harmonize: {\n            note: {} as HTMLDivElement\n        },\n        melody: {\n            table: null,\n            measure: null,\n            chord: null,\n            pitch: null,\n        }\n    },\n    reserveTasks: [],\n    invalidate: {\n        harmoniizeInvalidate: {},\n        harmonize: null,\n        melody: null\n    },\n}","import { ColorProps } from \"../../base/design/colorProps\";\n\nexport type UserEnv = {\n    login?: LoginProps;\n    keyConfig: KeyConfig;\n    colorProps: ColorProps;\n}\n\nexport type LoginProps = {\n    seq: number;\n    id: string;\n}\n\nexport type KeyConfig = {\n    note: {\n        left: string;\n        right: string;\n        up: string;\n        down: string;\n        addChord: string;\n        addSection: string;\n        addChange: string;\n        deleteCur: string;\n        distMode: string;\n        edit1: string;\n        incRoot: string;\n        decRoot: string;\n        incBeat: string;\n        decBeat: string;\n        edit2: string;\n    }\n}\n\nexport const getDefaultKeyConfig = (): KeyConfig => {\n    return {\n        note: {\n            left: 'ArrowLeft',\n            right: 'ArrowRight',\n            up: 'ArrowUp',\n            down: 'ArrowDown',\n            addChord: 'a',\n            addSection: 's',\n            addChange: 'm',\n            deleteCur: 'Delete',\n            distMode: 'Shift',\n            edit1: 'f',\n            edit2: 'c',\n            incRoot: 'ArrowUp',\n            decRoot: 'ArrowDown',\n            incBeat: 'ArrowRight',\n            decBeat: 'ArrowLeft',\n        }\n    };\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const dialog = store.systemState.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.systemState.dialog = null;\r\n            dispatcher.system.setState(store.systemState);\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import styled, { css } from \"styled-components\";\n\nnamespace Styles {\n\n    export const FONT_SMALL = 16;\n    export const FONT_MIDIUM = 22;\n    export const FONT_LARGE = 32;\n\n    export const CSS_LABEL = css`\n        display: inline-block;\n        font-weight: 600;\n        text-align: center;\n        color: black;\n        box-sizing: border-box;\n    `;\n    \n    export const CSS_LABEL_SMALL = css`\n        ${CSS_LABEL}\n        height: 22px;\n        font-size: ${FONT_SMALL}px;\n        line-height: 18px;\n    `;\n\n    export const CSS_LABEL_MIDIUM = css`\n        ${CSS_LABEL}\n        height: 30px;\n        font-size: ${FONT_MIDIUM}px;\n        line-height: 26px;\n    `;\n\n    export const CSS_BUTTON_DISABLE = css`\n        pointer-events: none;\n        opacity: 0.5;\n    `;\n}\nexport default Styles;\n\nexport const _WrapperFrame = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const _Object = styled.div`\n    display: inline-block;\n`;\n\nexport const _Record = styled.div`\n    display: inline-block;\n    width: 100%;\n`;\n\nexport const _CSS_LABEL_SMALL = css`\n    display: inline-block;\n    height: 30px;\n    font-size: 18px;\n    font-weight: 600;\n    color: black;\n    line-height: 18px;\n`;\n\n\nexport const _CSS_LABEL_MIDIUM = css`\n    display: inline-block;\n    height: 30px;\n    font-size: 24px;\n    font-weight: 600;\n    text-align: center;\n    color: black;\n    line-height: 24px;\n    box-sizing: border-box;\n`;\n\nexport const _CSS_DISABLE = css`\n    opacity: 0.6;\n    pointer-events: none;\n`;\n\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\ntype TabbedPaneProps = {\n    activeNo: number;\n    tabElements: TabElements[];\n    selectTabIndex?: Function;\n}\n\ntype TabElements = {\n    name: string;\n    disable: boolean;\n    cont: JSX.Element;\n}\n\nexport const TabbedPane = (props: TabbedPaneProps) => {\n    const [activeNo, setActiveNo] = useState(props.activeNo);\n\n    // タブ押下時の処理\n    const selectTabIndex = (index: number) => {\n        if (props.selectTabIndex != undefined) {\n            props.selectTabIndex(index);\n        } else {\n            setActiveNo(index);\n        }\n    };\n\n    useEffect(() => {\n        setActiveNo(props.activeNo);\n    }, [props.activeNo]);\n\n    return (\n        <>\n            <_LabelList>\n                {/* {tabList} */}\n                {\n                    props.tabElements.map((tab, index) => {\n                        return <TabLabel\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\n                            selectTab={() => selectTabIndex(index)}\n                        />\n                    })\n                }\n            </_LabelList>\n            <_ContList>\n                {/* {contList} */}\n                {\n                    props.tabElements.map((tab, index) => {\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\n                    })\n                }\n            </_ContList>\n        </>\n    );\n}\n\nconst TabLabel = (props: {\n    name: string;\n    isActive: boolean;\n    isDisable: boolean;\n    selectTab: Function;\n}) => {\n    return (\n        <_TabLabel\n            isDisable={props.isDisable}\n            isActive={props.isActive}\n            onClick={() => props.selectTab()}>\n            {props.name}\n        </_TabLabel>\n    );\n}\n\nconst TabContents = (props: {\n    isActive: boolean;\n    cont: JSX.Element;\n}) => {\n    // return props.isActive ?\n    //     <div className=\"tab-cont\">{props.cont}</div>\n    //     :\n    //     <></>\n    //     ;\n    return (\n        <_Contents isActive={props.isActive}>\n            {props.cont}\n        </_Contents>\n    );\n}\n\nconst _LabelList = styled.div`\n    display: inline-block;\n    height: 35px;\n`;\nconst _ContList = styled.div`\n    display: block;\n    background-color: #999999;\n    height: calc(100% - 35px);\n    border-radius: 0 6px 6px 6px;\n    box-shadow: 0 2px 0 0 #000b3a48;\n`;\n\nconst _Contents = styled.div<{\n    isActive: boolean;\n}>`\n    margin: 3px 0 0 3px;\n    width: calc(100% - 6px);\n    height: calc(100% - 6px);\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\n`;\n\nconst _TabLabel = styled.div<{\n    isDisable: boolean;\n    isActive: boolean;\n}>`\n    display: inline-block;\n    /* width: 100px; */\n    padding: 0 10px;\n    \n    ${props => {\n        if (props.isActive) {\n            return css`\n                color: #ebebeb;\n                padding: 0 35px;\n                background-color: #999999;\n                height: 35px;\n                font-size: 24px;\n                border-radius: 3px 15px 0 0;\n                text-shadow: 1px 2px 3px #00000065;\n            `;\n        } else {\n            return css`\n                height: 100%;\n                color: #555;\n                /* background-color: #90909b; */\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\n                height: 30px;\n                font-size: 18px;\n                margin-top: 5px;\n                border-radius: 3px 10px 0 0;\n                ${!props.isDisable ? '' : css`\n                    pointer-events: none;\n                    opacity: 0.7;\n                `}\n            `;\n        }\n    }}\n    /* opacity: 0.7; */\n    user-select: none;\n    margin-right: 6px;\n    font-weight: 600;\n    box-sizing: border-box;\n    line-height: 30px;\n    vertical-align: bottom;\n    transition: padding 100ms;\n`;","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport ProgUtil from \"./progUtil\";\n\n/**\n * コード進行のサンプルを検索するユーティリティ\n */\nnamespace ProgUnitSearcher {\n\n    export type ChordItemBean = {\n        root: TheoryUtil.DegreeProps;\n        symbolKey: TheoryUtil.SymbolKey;\n        beatLen: number;\n    }\n\n    export type UnitBean = {\n        condition: UnitCondition;\n        chordList: ChordItemBean[];\n    }\n\n    /**\n     * ダイアトニックスケールの連番でコードを指定する\n     * @param scaleIndex スケールの連番\n     * @param beatLen 拍\n     */\n    const getDiatonicChord = (scaleIndex: number, beatLen: number): ChordItemBean => {\n        const chord = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\n        return { root: { index: chord.root.index, isFlat: false }, symbolKey: chord.symbolKey, beatLen };\n    }\n\n    export type UnitCondition = {\n        beat: BeatSignature;\n        step: number;\n        firstChord: ProgUtil.DegreeFilter;\n        secondChord: ProgUtil.DegreeFilter;\n    }\n\n    /**\n     * コード進行を検索する\n     * @param condition \n     * @returns フィルターしたリスト\n     */\n    export const search = (condition: UnitCondition) => {\n        return UNIT_LIST.filter((unit) => (\n            (unit.condition.beat === condition.beat) &&\n            (condition.step === 0 || unit.condition.step === condition.step) &&\n            (condition.firstChord === '' || unit.condition.firstChord === condition.firstChord) &&\n            (condition.secondChord === '' || unit.condition.secondChord === condition.secondChord)\n        ));\n    }\n\n    export const parseChord = (source: string): ChordItemBean[] => {\n        let baseBeat = -1;\n        const keyList = source.split(' ');\n        let hasError = false;\n        const chordList: ChordItemBean[] = [];\n        keyList.some((key, i) => {\n            const head = key.charAt(0);\n            if (head === '@') {\n                const newBeat = Number(key.charAt(1));\n                baseBeat = newBeat;\n            } else if (['1', '2', '3', '4', '5', '6', '7'].includes(head)) {\n                const diatonicNo = Number(head) - 1;\n\n                let chord: null | ProgUnitSearcher.ChordItemBean = null;\n                const diatonicProps = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[diatonicNo];\n                if (key.length === 1) {\n                    chord = {\n                        root: diatonicProps.root, symbolKey: diatonicProps.symbolKey, beatLen: baseBeat\n                    }\n                } else {\n                    const adjustKey = key.charAt(1);\n                    const adjust = adjustKey === '#' ? 1 : adjustKey === 'b' ? -1 : 0;\n                    const shortNameKey = key.substring(2);\n                    const symbol = getSymbolFromShortName(shortNameKey);\n                    if (symbol != undefined) {\n                        const root = { ...diatonicProps.root };\n                        root.index += adjust;\n                        root.isFlat = adjust === -1;\n                        chord = {\n                            root, symbolKey: symbol.key, beatLen: baseBeat\n                        }\n                    }\n                }\n\n                if (chord == null) {\n                    hasError = true;\n                    return true;\n                } else {\n                    chordList.push(chord);\n                }\n            } else {\n                hasError = true;\n                return true;\n            }\n\n        });\n        return chordList;\n    }\n\n    const getSymbolFromShortName = (shortName: string): undefined | TheoryUtil.SymbolParams => {\n        return TheoryUtil.SYMBOL_LIST.find(symbol => {\n            if ('*' + symbol.name === shortName) return symbol;\n        });\n    }\n\n    const UNIT_LIST: UnitBean[] = [\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 1 5 6 3 4 1 2 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 1 5 6 3 4 3 2 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 1 5 6 3 4 1 2 5 1')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 1 5 6 5 4 1 2 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@4 1 5 6 4 1 5 6 4')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 1 5 7b* 6n*7 2 1#*dim 2 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅳ' },\n            chordList: parseChord('@4 1 4 5 6 2 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\n            chordList: parseChord('@4 1 6 2 5 1 6 2 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\n            chordList: parseChord('@4 1 6 4 5 1 6 4 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 4 5 3 6 4 5 3 6')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 4n*maj7 5 3n*m7 6 4n*maj7 5 3n*m7 6')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 4n*maj7 5 3n*m7 6 2n*m7 3n*7 6 6n*7')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 2n*m7 5 3n*m7 6 2n*m7 3n*7 6n*sus4 6')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\n            chordList: parseChord('@2 6 4 5 1 6 4 5 1')\n        },\n        {\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\n            chordList: parseChord('@4 6 4 5 1 6 4 5 1')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\n            chordList: parseChord('@2 6 4 1 5 6 4 1 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\n            chordList: parseChord('@4 6 4 1 5 6 4 1 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 6 5 4 3n*m7 2n*m7 6 2#*dim 3n*7')\n        },\n    ];\n}\n\nexport default ProgUnitSearcher;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\n\r\nnamespace ProgStyle {\r\n\r\n\r\n    /** 実行ボタン */\r\n    export const _TitleLabel = styled.div<{\r\n    }>`\r\n        ${Styles.CSS_LABEL_MIDIUM};\r\n        background-color: #f0f0f049;\r\n        width: 120px;\r\n        text-align: center;\r\n        border-radius: 10px;\r\n        color: #2c2c2c;\r\n        border: solid 1px #ffffff79;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n\r\n    /** コンボボックス */\r\n    export const _Combobox = styled.select<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: black;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n\r\n    /** ラベル */\r\n    export const _Label = styled.div<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: #002bc5;\r\n        font-weight: 600;\r\n        background-color: #e1f9fa;\r\n        padding-left: 4px;\r\n        border-radius: 4px;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n}\r\n\r\nexport default ProgStyle;","import { ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport { ScoreState } from \"../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * コード進行生成のバッキング関連のユーティリティ\r\n */\r\n namespace progBackingUtil {\r\n\r\n    export type Props = {\r\n        name: string;\r\n        patternConditions: PatternCondition[];\r\n    }\r\n    export type VoicingCondition = {\r\n        attr: TheoryUtil.SymbolAttribute;\r\n        source: string;\r\n    }\r\n    export type PatternCondition = {\r\n        beatLen: number;\r\n        source: string;\r\n        voicingConditions: VoicingCondition[];\r\n    }\r\n\r\n    export const BACKING_SAMPLE_LIST: Props[] = [\r\n        {\r\n            name: 'none',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'barrade-01',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTwRKCIBD9Gu4FOnbVvDTTrS9ghIyGsJHNyb4+BCkxb416YWD3LW/fY0FJhjAuLlQpLk/ixc0JkTRGeG92d86o1C6E4gxZMBPNQTH+dOGNQ9ICRKV6JMZum+Qozl1e0pbXEzeNQzWFvoXIFQqdV+AiZ9MLd1FTSTx/YilG1btf3PR1f1d7haoCro9Cw0hR6FMbnDRQeHgLLFqLUlH58dHaaKEgbkKVQXXDZcquAxsGWnpWvArrNmDdzsXqnTe57xh1k9uNDunSg9ZmnLVo7mnBq7zbUqyhVrKK1qVYQ63R4j/D/wq7vgHgSWwr/AUAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqAW7wdQFAL14+prfAAAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYl1oTHG4wdQEAGcWLSt8AAAA='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA9WVwVLDIBCGn4a7XcB4bc3Fmd58AqbBioPECdtO69NLINGAdexBYLwwsOzPB7sskGZDAHbPwhipH9W7dCNC17cE7l3vTXZC22AifEO8c6eOD6aTp2C+CZ5ih6o3kydA6DYt4W2Y1+IshwsrpaZB4LQFFoTKtj0Gy5PbiwxWp6Qzv/GIRH333e/ychnU7Hc1Doc/QM/BNT1Ku1UWk2DGKTpHI4sCD3P0vbdVeyP0Zwp9Br0rqldl9pH6KPW6e1lkYHGWUxSFwtRVRF0VotIqVIiokIs63zI391Wt3NnGDI8nH/swui22mLG0ryivbKX9X9RXvgy0zA1K7i2vQo1fQVrlPSpFZVWocYRZlQiXokIVKqtCjfPKq0Q4G/XH341OPxwkP5xvPwCCCyaGNwsAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGuES60JCW7AohbsBlMXAA68b5wLAQAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGtEglpjXGpNcLjB1AUAqgEeTAsBAAA='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'barrade-02',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTXQ+CIBT9NbwbxPRV86Wtt34BUzIaYQty2a+PQFLMuT7tgQ3OPZdzOZcLwgRAmG2JEJSv2YXqE0AxBnChdweaEy4tBHACDDln1VLk9GzhwDJJplgpGiaEdhumAKc2zklNjwM39aEjUU0JkU1kMi2VRTa6FmpRnYmcfmgkhrO7vOHr/pzt/BGlonLFpOr54btceyepiDo5Aw1bskIQfu+CaYKhKrZnovCyK8rjfNcxsfOWRnXmqc4mUkWeKpxIFXqq6Feqrt861n7927S1C3vljc7I/IUZeeunTeV+8EX30TMS848koseHwfEGYxcM0ysSYVFzcwUAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqAWba+oCACBiEqvfAAAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqDUGqTV1AQCUaWUN3wAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2V0W7CIBSGn4b7eUrFW11vTHbnExCLjgWpEWbUp5dC2cA1y1YSuPGiLRzOz8dJfwCRFQLYvlMpmdjwGzM9VC3nCF5N68haKpQLoXqFbHLLz2vZsosLv7hMutW8k0MmgGuSBtWNGxf0yk4jMz2GTlQPS1g4IVdNp11kZ9bCXNQoK88nFjGuDvPGp3uqi6i9L2SnmXrjSj/4IHbXNeopTfWnN47NVnwvqfhynzWfTdX8wOU+Up+ZWLYfgXmCWgbqLKLOMlFxEWoVUSETtS5CJUWoEFGrTNR5Hqrfx2bs+yjv/65/cPDtH+glwXJ/vQNw0h2Ak06z/6gnnWa5nFDGf3GtOImKf1LhL7WmUafWWidRycS9hod9Zd93wUPW69YJAAA=',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqMXpBlMc5pq6AADXs/OfCwEAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqCXFXGOQWlMXACkdNMwLAQAA'\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: '8beat-01',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTSw7CIBQ8DXulJbht7cbEnScgLVYMUlOwsZ5e5BUtTeNGU1bAMMM83gfRHGFcnphSXB7Eg9sTSrIU4a3dXXnFpAYIkRw5ciW6nar4HeAVMFlpRKMGJsawpQUiBdxL1vN25qUp1DIzhLABodBFYwA52lg4oFaZeH/qLObVY978c5HVPj+qMVzvhTaTfIRZ7oOTNszcfAIdW4taMfmugiuCoxpxEaoO1B2XWXUeJXH0l8F1HcUVR3FNlnH19bZ3n9YnFnv5w0qC8L7OSPrTjKT/79OwY9YL1S6cDhxlOpZyDf+aROhT4gm0eAKCqPtePgYAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGsEUmvqAgBJsewgswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2V0Q6CIBSGn4b7Omp2W3nT1l1PwJSKRtiEXPb0IWhJc67N5bnpRuBwDh+w3x8SrwlAeqJSMrHnD2ZGJFiFBDamd2UZFcqFSLQmNjnj5VZm7O7CM5dJU81z2WQCuG6ckChx84JWrOhZ6TNUUN1sYekKuUpy7SIHsxfmoqYyaPmxRfRXd/P6l/tXo1S3upC5ZmrHlf7Qga+uyhspTfWtFY7NVvwoqXipz4rPpmp+4fLoVZdMrLJzRzydszTUOQoVUKgBCjVEoUYo1AUKNZ6G2v7HZu5t5fU917rqbyNvu4NvQDjqDQhHudl01V96oe9KcxR/mIrq+z6g+P5UVECh+jccoJz1Z9RBV4KOC9nvE4/6Z+UECwAA',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmuCww2mLgAeyOCMswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: '8beat-02',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTQQ6CMBB8Te9SJHgFuZh48wUNVKypxdCFiK+3dqlSwsXE0Attp7M7y26HpDmhtLwwpbg8iSc3JxJnW0L3ZnfnFZMaIZLkxJIr0R9UxR8Ib5DJShCNGpmU4jYtSFLgvWQDbxcyzaGWwVjCDgOFLhpA5Gxq4YiayNjpp1ZiOXrKW04XONr1RzXA9VFomPXD7/LgnTQw6FwDLVuLWjH5mYIdgqWCuAlVe9E9l1l1nTRx8i+jahRElQZRjddRdfM2d9+nnxjsrY9r4pX3o0eg7f5oEZttrTfuv7Zopbn7zqJBnLWWKg2i6nc4DuIs5yr7fQFCZXGQ9AYAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGsEUmvqAgBJsewgswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2VwU4DIRCGn4a7nQXx2roXE28+AelixSBrFtrYPn0ps+jSEBMTw8TEE+wwPx/L/jvD5IYBbF+Uc9o+mZOOT6xbcwb3cfauB2U9hpjYsJQ8mMODG/QHhm8wU22DGd2cCYBT2TPR47pVRz1VdroOTSrMR7hDofH9GDDyHM+iMRqVXebLhKirl3n17f7VJOrsCzcG7R+ND1c+KN11LJ58UGGfjZOyvdk5ZT/dl8yXUoN5M25XqA/arofXhXkW7zJTVyRUIKF2JFROQhUk1FsSqmxDzf9xXPsq5Zd7vviqPoriuD/sAWHa/2ILSLtVxfyP1NEmVbishyuSytSKKkioZZ8Dkj7XigokVE5CLb9rR3LDrai8DfXbjgPziHORBbI/A9v3xeToDAAA',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmuCww2mLgAeyOCMswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'arpeggio-01',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'arpeggio-02',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'rock-01',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: '16beat-01',\r\n            patternConditions: []\r\n        },\r\n    ];\r\n }\r\n\r\n export default progBackingUtil;","import { BackingPatternProps, BeatSignature, ChordElement, DetailChord, DetailFixed, DetailInit, DetailSection, FixedItem, ScoreData, VoicingProps } from \"../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport progBackingUtil from \"./progBackingUtil\";\r\n\r\n/**\r\n * コード進行生成のユーティリティ\r\n */\r\nnamespace ProgUtil {\r\n\r\n    /** 生成方法 */\r\n    export type BuildType = 'blank' | 'custom' | 'template';\r\n\r\n    export const STEP_LIST = [0, 2, 3, 4] as const;\r\n    export type Step = typeof STEP_LIST[number];\r\n\r\n    /**\r\n     * ブロックに設定するプロパティ\r\n     */\r\n    export type UnitProps = {\r\n        type: BlockType;\r\n        detail: SectionProps | FixedItem;\r\n    }\r\n\r\n    export type BlockType = 'fixed' | 'section';\r\n\r\n    export type SectionProps = {\r\n        sectionName: string;\r\n        sectionNo: string;\r\n        chordList: DetailChord[];\r\n        backingNo: number;\r\n    }\r\n\r\n    export const DEGREE_FILTER_LIST = [\r\n        '', 'Ⅰ', 'Ⅴ', 'Ⅳ', 'Ⅵm', 'Ⅱm', 'Ⅲm'\r\n    ] as const;\r\n    export type DegreeFilter = typeof DEGREE_FILTER_LIST[number];\r\n\r\n    /**\r\n     * 初期状態のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getInitialBlockList = (): UnitProps[] => {\r\n        return [\r\n            { type: 'fixed', detail: 'Start' },\r\n            { type: 'fixed', detail: 'End' },\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Blank選択時のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getBlankBlockList = (): UnitProps[] => {\r\n        return [\r\n            { type: 'fixed', detail: 'Start' },\r\n            {\r\n                type: 'section',\r\n                detail: {\r\n                    sectionName: 'Section',\r\n                    sectionNo: '',\r\n                    chordList: [\r\n                        getDefaultChord()\r\n                    ],\r\n                    backingNo: 0\r\n                }\r\n            },\r\n            { type: 'fixed', detail: 'End' },\r\n        ];\r\n    }\r\n\r\n    export const getDefaultChord = (): DetailChord => {\r\n        return {\r\n            beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n            backing: {\r\n                voicingList: [],\r\n                pattern: null,\r\n                // hasError: false\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拍子より選択可能なステップリストを絞り込む\r\n     * @param beat ステップの拍\r\n     * @returns 絞り込んだリスト\r\n     */\r\n    export const getFilteredStepList = (beat: BeatSignature) => {\r\n        return STEP_LIST.filter((item) => {\r\n            // 0は空白表示なので必ず加える\r\n            if (item === 0) return true;\r\n\r\n            switch (beat) {\r\n                case '4/4':\r\n                case '6/8': {\r\n                    if (item === 3) return false;\r\n                }\r\n                    break;\r\n                case '3/4':\r\n                case '9/8': {\r\n                    if (item !== 3) return false;\r\n                }\r\n                    break;\r\n                case '2/4':\r\n                case '6/8': {\r\n                    if (item !== 2) return false;\r\n                }\r\n                    break;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * ブロックリストより譜面データを生成する\r\n     * @param outputUnits ユニットリスト\r\n     * @returns 譜面データ\r\n     */\r\n    export const buildScoreData = (outputUnits: UnitProps[]): ScoreData => {\r\n        const elementList: ChordElement[] = [];\r\n        // イニシャル要素を設定\r\n        const initElement: DetailInit = {\r\n            keyIndex: 0,\r\n            bpm: 100,\r\n            scale: \"major\",\r\n            beatSignature: \"4/4\"\r\n        }\r\n        elementList.push({ type: 'init', detail: initElement });\r\n        outputUnits.forEach((block) => {\r\n            if (block.type === 'fixed') {\r\n                const fixed = block.detail as FixedItem;\r\n                // 固定ブロックの処理\r\n                elementList.push({ type: 'fixed', detail: { fixed } });\r\n            } else {\r\n                const blockDetail = block.detail as SectionProps;\r\n                const getSectionFullName = () => {\r\n                    return blockDetail.sectionName;\r\n                }\r\n                // セクションブロックの処理\r\n                elementList.push({ type: 'section', detail: {labelName: getSectionFullName()} });\r\n\r\n                // サンプルバッキングの適用\r\n                const sample = progBackingUtil.BACKING_SAMPLE_LIST[blockDetail.backingNo];\r\n                blockDetail.chordList.forEach((chord) => {\r\n                    const detail = chord;\r\n\r\n                    let voicingList: VoicingProps[] = [];\r\n                    let pattern: BackingPatternProps | null = null;\r\n                    sample.patternConditions.some(conPa => {\r\n                        if(conPa.beatLen === detail.beatLen) {\r\n                            // console.log(DataUtil.unZip(conPa.source));\r\n                            pattern = JSON.parse(DataUtil.unZip(conPa.source));\r\n\r\n                            conPa.voicingConditions.some(conVo => {\r\n                                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                                if(conVo.attr === symbol.attr) {\r\n                                    voicingList = JSON.parse(DataUtil.unZip(conVo.source));\r\n                                    return true;\r\n                                }\r\n                            });\r\n                            return true;\r\n                        }\r\n                    });\r\n                    detail.backing.voicingList = voicingList;\r\n                    detail.backing.pattern = pattern;\r\n\r\n                    elementList.push({ type: 'chord', detail });\r\n                });\r\n            }\r\n        });\r\n        return { chordList: elementList, notesList: [] };\r\n    }\r\n}\r\n\r\nexport default ProgUtil;","import { useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../../base/design/styles\";\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\nimport DummyUtil from \"../../../../utils/dummyUtil\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport ProgUnitSearcher from \"./progUnitSearcher\";\nimport ProgStyle from \"./progStyle\";\nimport ProgUtil from \"./progUtil\";\n\n/**\n * コード進行を編集する画面\n * @param props 引数\n * @returns コンポーネント\n */\nconst ProgCustomFrame = (props: {\n    /** 拍子フィルターの値 */\n    beat: '' | BeatSignature;\n    /** ユニット数 */\n    unitNum: number;\n    /** 出力リストを初期化するコールバック関数 */\n    reset: () => void;\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\n    insertProgUnit: (sectionName: string, sectionNo: string, chordList: ProgUnitSearcher.ChordItemBean[]) => void;\n}) => {\n\n    const [step, setStep] = useState<ProgUtil.Step>(0);\n    const [degreeFilters, setDegreeFilters] = useState<(ProgUtil.DegreeFilter)[]>(['', '']);\n\n    /** ブロックの最後のコード */\n    const [lastChord, setLastChord] = useState<ProgUnitSearcher.ChordItemBean | null>(null);\n\n    // const [progUnitList, setProgUnitList] = useState<ProgSearcher.UnitBean[]>([]);\n    const [focusIndex, setFocusIndex] = useState(-1);\n\n    const stepList = useMemo(() => {\n        return props.beat === '' ? [0] : ProgUtil.getFilteredStepList(props.beat);\n    }, [props.beat]);\n\n    /** 拍ステップ絞り込みのコンボボックス */\n    const stepOptionJsxList = useMemo(() => {\n        // console.log(stepList.length);\n        return stepList.map((val, i) => {\n            // 0の場合は表示しない制御\n            const disp = val === 0 ? '' : val;\n            return (\n                <option key={i} value={val}>{disp}</option>\n            );\n        });\n    }, [stepList]);\n\n    /** ディグリーネーム絞り込みのコンボボックス */\n    const degreeOptionJsxListArray: JSX.Element[][] = useMemo(() => {\n        return [ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\n            // 先頭のフィルター\n            return (<option key={i} value={filter}>{filter}</option>);\n        }), ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\n            // 2番目のフィルター\n            return (<option key={i} value={filter}>{filter}</option>);\n        })];\n    }, [degreeFilters]);\n\n    /** リストに表示する進行ユニットのJSX */\n    const [progUnitList, progJsxList] = useMemo(() => {\n        if (props.beat === '') return [[], []];\n        const beat = props.beat as BeatSignature;\n        // フィルタリングしたユニットリスト\n        const unitList = ProgUnitSearcher.search({\n            beat: props.beat,\n            step, firstChord: degreeFilters[0], secondChord: degreeFilters[1]\n        });\n        const jsx = unitList.map((unit, i) => {\n            const isActive = focusIndex === i;\n\n            /** 表示する進行ユニット */\n            const dispUnitJsx: JSX.Element[] = [];\n            /** 表示する進行ユニット */\n            let tootTipStr: string = '';\n            let totalBeat = 0;\n            const beatCycle = TheoryUtil.getBeatProps(beat).barBeatCnt;\n            unit.chordList.forEach((chord, j) => {\n                const degreeRoot = TheoryUtil.getDegreeRoot(chord.root);\n                const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\n                const symbolName = symbol.name;\n                const chordName = degreeRoot + symbolName;\n                if (j !== 0) {\n                    const divStr = totalBeat % beatCycle === 0 ? ' | ' : '・';\n                    dispUnitJsx.push(<_Span key={dispUnitJsx.length}>{divStr}</_Span>);\n                    tootTipStr += divStr;\n                }\n                let isMatch = false;\n                if (j === 0) {\n                    isMatch = degreeFilters[0] !== '';\n                } else if (j === 1) {\n                    isMatch = degreeFilters[1] !== '';\n                }\n                dispUnitJsx.push(<_ChordName key={dispUnitJsx.length} isMatch={isMatch}>{chordName}</_ChordName>);\n                tootTipStr += chordName;\n                totalBeat += chord.beatLen;\n                // console.log(totalBeat);\n            });\n            return (\n                <_ProgItem key={i} isActive={isActive} title={tootTipStr} onClick={() => {\n                    setFocusIndex(i);\n                }}>{dispUnitJsx}</_ProgItem>\n            )\n        });\n        return [unitList, jsx];\n    }, [props.beat, step, degreeFilters, focusIndex]);\n\n    /**\n     * 拍ステップ変更時の処理\n     * @param e イベント\n     */\n    const stepChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        setStep(Number(e.target.value) as ProgUtil.Step);\n        setFocusIndex(-1);\n    }\n\n    /**\n     * ディグリーフィルター変更時の処理\n     * @param e イベント\n     */\n    const degreeChangeAction = (e: React.ChangeEvent<HTMLSelectElement>, index: number) => {\n        const value = e.target.value as ProgUtil.DegreeFilter;\n        degreeFilters[index] = value;\n        if (index === 0 && value === '') {\n            degreeFilters[1] = '';\n        }\n        setDegreeFilters(degreeFilters.slice());\n        setFocusIndex(-1);\n    }\n\n\n    /**\n     * リセットボタン押下時の処理\n     */\n    const resetAction = () => {\n        setStep(0);\n        setDegreeFilters(['', '']);\n        props.reset();\n    };\n\n    /**\n     * 追加ボタン押下時の処理\n     */\n    const insertAction = () => {\n        const progUnit = progUnitList[focusIndex];\n        props.insertProgUnit('Section', '', progUnit.chordList);\n        setFocusIndex(-1);\n        setStep(0);\n        setDegreeFilters(['', '']);\n\n        const chord = progUnit.chordList[progUnit.chordList.length - 1];\n        setLastChord(chord);\n    };\n\n    /**\n     * ユニットの最後のコードネームを取得\n     */\n    const getLastChordName = () => {\n        let name = '-';\n        if (lastChord != null) {\n            const rootName = TheoryUtil.getDegreeRoot(lastChord.root);\n            const symbol = TheoryUtil.getSymbolFromKey(lastChord.symbolKey) as TheoryUtil.SymbolParams;\n            name = rootName + symbol.name;\n        }\n        return name;\n    }\n\n    return (\n        <_Frame isEnable={props.beat !== ''}>\n            {/* 拍ステップコンボボックス */}\n            <_Record>\n                <ProgStyle._TitleLabel>Step</ProgStyle._TitleLabel>\n                <ProgStyle._Combobox isEnable={true} width={80} value={step} onChange={(e) => {\n                    stepChangeAction(e);\n                }}>{stepOptionJsxList}</ProgStyle._Combobox>\n                <ProgStyle._TitleLabel>Last</ProgStyle._TitleLabel>\n                <ProgStyle._Label isEnable={true} width={80} >{getLastChordName()}</ProgStyle._Label>\n            </_Record>\n            {/* ディグリーネームフィルターコンボボックス */}\n            <_Record>\n                <ProgStyle._TitleLabel>Chord</ProgStyle._TitleLabel>\n                <ProgStyle._Combobox isEnable={true} width={80} value={degreeFilters[0]} onChange={(e) => {\n                    degreeChangeAction(e, 0);\n                }}>{degreeOptionJsxListArray[0]}</ProgStyle._Combobox>\n                <ProgStyle._Combobox isEnable={degreeFilters[0] !== ''} width={80} value={degreeFilters[1]} onChange={(e) => {\n                    degreeChangeAction(e, 1);\n                }}>{degreeOptionJsxListArray[1]}</ProgStyle._Combobox>\n            </_Record>\n            {/* 進行ユニットリスト */}\n            <_ListDiv><div>{progJsxList}</div></_ListDiv>\n            {/* 実行ボタン */}\n            <_ButtonDiv>\n                <_ExecutableButton isEnable={props.unitNum > 0} onClick={resetAction}>Reset</_ExecutableButton>\n                <_ExecutableButton isEnable={focusIndex !== -1} onClick={insertAction}>Add</_ExecutableButton>\n            </_ButtonDiv>\n        </_Frame>\n    );\n}\n\nexport default ProgCustomFrame;\n\nconst BUTTON_DIV_HEIGHT = 40;\nconst RECORD_HEIGHT = 40;\n\nconst _Frame = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n`;\n\n/**\n * 条件レコード\n */\nconst _Record = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${RECORD_HEIGHT}px;\n    /* background-color: #d5eae4; */\n    /* margin: 2px 0 0 0; */\n    text-align: left;\n    & *{\n        margin: 5px 0 0 5px;\n    }\n`;\n\n/**\n * 進行リスト\n */\nconst _ListDiv = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: calc(100% - ${RECORD_HEIGHT * 2 + BUTTON_DIV_HEIGHT}px);\n    /* background-color: #babaa8; */\n    text-align: left;\n    & >div{\n        display: inline-block;\n        width: calc(100% - 8px);\n        height: calc(100% - 8px);\n        margin: 4px 0 0 4px;\n        background-color: #dde0e7;\n        box-sizing: border-box;\n        border: 1px solid #797979;\n        overflow-y: auto;\n        \n        &::-webkit-scrollbar {\n            width: 10px;\n            height: 10px;\n        }\n        &::-webkit-scrollbar-thumb {\n            border-radius: 5px;\n            background: #1959A8;\n        }\n        &::-webkit-scrollbar-track {\n            border-radius: 5px;\n            box-shadow: 0 0 4px #aaa inset;\n        }\n    }\n`;\n\nconst _ProgItem = styled.div<{\n    isActive: boolean;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM}\n    display: inline-block;\n    width: 100%;\n    background-color: #00000010;\n    ${props => !props.isActive ? '' : css`\n        background-color: #f6ff0062;\n    `}\n    text-align: left;\n    margin: 2px 0 0 0;\n    padding: 0 0 0 5px;\n    overflow: hidden;\n`;\n\nconst _ChordName = styled.span<{\n    isMatch: boolean;\n}>`\n    color: #000f59;\n    ${props => !props.isMatch ? '' : css`\n        color: #a0000d;\n        /* background-color: #5eff0061; */\n    `}\n`;\nconst _Span = styled.span<{\n}>`\n    color: #0000005d;\n`;\n\n/**\n * ボタンエリア（画面汎用）\n */\nconst _ButtonDiv = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${BUTTON_DIV_HEIGHT}px;\n    /* background-color: #94babd; */\n    text-align: center;\n    & *{\n        margin: 5px 0 0 5px;\n    }\n`;\n\n/**\n * 実行ボタン\n */\nconst _ExecutableButton = styled.div<{\n    isEnable: boolean;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM};\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\n    background-color: #737d94;\n    width: 130px;\n    text-align: center;\n    border-radius: 4px;\n    border: solid 1px #505971;\n    box-sizing: border-box;\n    &:hover {\n        background-color: #8da0b0;\n    }\n`;","namespace DummyUtil {\r\n\r\n    export const SECTION_CATEGORY = ['Section', 'Intro', 'A', 'B', 'C', 'D', 'Outro'];\r\n    export const SECTION_NO = ['', '1', '2', '3', '4', '5', '6'];\r\n}\r\n\r\nexport default DummyUtil;","import { useContext, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../../base/design/styles\";\nimport { DetailChord, DetailFixed, DetailSection, FixedItem } from \"../../../../redux/store/score/scoreData\";\nimport DummyUtil from \"../../../../utils/dummyUtil\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport progBackingUtil from \"./progBackingUtil\";\nimport ProgStyle from \"./progStyle\";\nimport ProgUtil from \"./progUtil\";\n\n/**\n * コード進行の出力画面のコンポーネント\n * @param props ブロックリスト\n * @returns コンポーネント\n */\nconst ProgOutputFrame = (props: {\n    outputUnits: ProgUtil.UnitProps[];\n    updateOutputUnits: () => void;\n}) => {\n    // const { store, dispatcher } = useContext(GlobalContext);\n\n    const [\n        /** セクションカテゴリのoptionリスト */\n        secCatOptionJsxList,\n        /** セクション連番のoptionリスト */\n        secNoOptionJsxList,\n    ] = useMemo(() => {\n        const catList = DummyUtil.SECTION_CATEGORY.map((val, i) => {\n            return (\n                <option key={i} value={val}>{val}</option>\n            );\n        });\n        const noList = DummyUtil.SECTION_NO.map((val, i) => {\n            return (\n                <option key={i} value={val}>{val}</option>\n            );\n        });\n        return [catList, noList];\n    }, []);\n\n    const backingSampleJsxList = progBackingUtil.BACKING_SAMPLE_LIST.map((sample, i) => {\n        return (\n            <option key={i} value={i}>{sample.name}</option>\n        );\n    });\n\n    const blockJsxList = props.outputUnits.map((block, i) => {\n        const isFixed = block.type === 'fixed';\n        const getInner = () => {\n            if (isFixed) {\n                return <_FixedItem>{(block.detail as FixedItem)}</_FixedItem>;\n            } else {\n                const detail = block.detail as ProgUtil.SectionProps;\n                const chordList = detail.chordList;\n                const getChordListJsx = () => {\n                    return chordList.map((chord, j) => {\n                        const getBeatTipsJsx = () => {\n                            const jsxList: JSX.Element[] = [];\n                            for (let k = 0; k < chord.beatLen; k++) {\n                                jsxList.push(<_BeatTip key={k} />);\n                            }\n                            return jsxList;\n                        }\n                        let chordName = 'none';\n                        if (chord.root !== null) {\n                            const degreeRoot = TheoryUtil.getDegreeRoot({\n                                index: chord.root.index,\n                                isFlat: chord.root.isFlat\n                            });\n                            const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey)?.name;\n                            chordName = degreeRoot + symbolName;\n                        }\n                        return (\n                            <_ChordItem key={j}>\n                                <_ChordNameLabel>{chordName}</_ChordNameLabel>\n                                <_ChordBeatDiv>{getBeatTipsJsx()}</_ChordBeatDiv>\n                            </_ChordItem>\n                        );\n                    });\n                }\n                return (<>\n                    <_Record>\n                        <_BackingLabel>Section</_BackingLabel>\n                        <_Combobox isEnable={true} width={180} value={detail.sectionName} onChange={(e) => {\n                            detail.sectionName = e.target.value;\n                            props.updateOutputUnits();\n                        }}>{secCatOptionJsxList}</_Combobox>\n                        <_Combobox isEnable={true} width={60} value={detail.sectionNo} onChange={(e) => {\n                            detail.sectionNo = e.target.value;\n                            props.updateOutputUnits();\n                        }}>{secNoOptionJsxList}</_Combobox>\n                    </_Record>\n                    <_Record>\n                        {/* <_SectionItem>{labelName}</_SectionItem> */}\n                        <_BackingLabel>Backing</_BackingLabel>\n                        <_Combobox\n                            isEnable={true} width={180}\n                            value={detail.backingNo}\n                            onChange={(e) => {\n                                detail.backingNo = Number(e.target.value);\n                                props.updateOutputUnits();\n                            }}>{backingSampleJsxList}</_Combobox>\n                    </_Record>\n                    <_ChordListDiv>{getChordListJsx()}</_ChordListDiv>\n                </>);\n            }\n        };\n        return (\n            <_Block key={i} isFixed={isFixed}>{getInner()}</_Block>\n        );\n    });\n    return (\n        <_Frame>\n            {blockJsxList}\n        </_Frame>\n    );\n}\n\nexport default ProgOutputFrame;\n\n\nconst _Frame = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    overflow-y: auto;\n    \n    &::-webkit-scrollbar {\n        width: 10px;\n        height: 10px;\n    }\n    &::-webkit-scrollbar-thumb {\n        border-radius: 5px;\n        background: #1959A8;\n    }\n    &::-webkit-scrollbar-track {\n        border-radius: 5px;\n        box-shadow: 0 0 4px #aaa inset;\n    }\n`;\n\nconst _Block = styled.div<{\n    isFixed: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 10px);\n    background-color: #e8e4c5;\n    margin: 5px 0 0 5px;\n    box-sizing: border-box;\n    /* border: 1px solid #7e7e7ee8; */\n    text-align: left;\n    ${props => !props.isFixed ? '' : css`\n        text-align: left;\n    `}\n`;\n\nconst _FixedItem = styled.div<{\n}>`\n    ${Styles.CSS_LABEL_SMALL}\n    width: 200px;\n    background-color: #b14272;\n    border-radius: 2px 15px 15px 2px;\n    color: white;\n    margin: 5px 0 5px 5px;\n`;\n\nconst _SectionItem = styled.div<{\n}>`\n    ${Styles.CSS_LABEL_SMALL}\n    width: 120px;\n    background-color: #4297b1;\n    color: white;\n    border-radius: 2px;\n    margin: 5px 0 0 5px;\n`;\n\nconst RECORD_HEIGHT = 22;\nconst _Record = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${RECORD_HEIGHT}px;\n    /* background-color: #5b6e69; */\n    margin: 2px 0 0 0;\n    text-align: left;\n    /* padding: 5px 0 0 0; */\n`;\nconst _BackingLabel = styled.div<{\n}>`\n    ${Styles.CSS_LABEL_SMALL}\n    width: 90px;\n    background-color: #95b6d1;\n    color: white;\n    border-radius: 8px;\n    margin: 0 0 0 5px;\n`;\n\nexport const _Combobox = styled.select<{\n    isEnable: boolean;\n    width: number;\n}>`\n    ${Styles.CSS_LABEL_SMALL}\n    font-weight: inherit;\n    text-align: left;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    width: ${props => props.width}px;\n    margin: 0 0 0 5px;\n    box-sizing: border-box;\n`;\n\nconst _ChordListDiv = styled.div<{\n}>`\n    display: inline-block;\n    width: calc(100% - 10px);\n    /* height: 100px; */\n    padding: 0 5px 5px 0;\n    background-color: #c2d6dd1e;\n    border: solid 2px #ab4343;\n    border-radius: 8px;\n    box-sizing: border-box;\n    margin: 5px 0 5px 5px;\n    text-align: left;\n`;\n\nconst _ChordItem = styled.div<{\n}>`\n    display: inline-block;\n    height: 45px;\n    background-color: #676767;\n    color: white;\n    border-radius: 2px;\n    margin: 5px 0 0 5px;\n`;\n\nconst _ChordNameLabel = styled.div<{\n}>`\n    ${Styles.CSS_LABEL_SMALL}\n    padding: 0 20px;\n    /* background-color: #b38282; */\n    color: white;\n`;\n\nconst _ChordBeatDiv = styled.div<{\n}>`\n    display: block;\n    height: 25px;\n    min-width: 100%;\n    /* background-color: #c5adad; */\n    text-align: center;\n`;\n\nconst _BeatTip = styled.div<{\n}>`\n    display: inline-block;\n    width: 8px;\n    height: calc(100% - 12px);\n    margin: 6px 2px 0 2px;\n    background-color: #ddd796;\n    border-radius: 2px;\n`;\n","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\nimport ProgUnitSearcher from \"./progUnitSearcher\";\n\n/**\n * コード進行のテンプレートを検索するユーティリティ\n */\nnamespace ProgTemplateUtil {\n\n\n    export type TemplateBean = {\n        name: string;\n        condition: TemplateCondition;\n        unitList: UnitItemBean[];\n    }\n\n    export type UnitItemBean = {\n        sectionName: string;\n        chordList: ProgUnitSearcher.ChordItemBean[];\n    }\n\n    export type TemplateCondition = {\n        beat: BeatSignature;\n    }\n\n    /**\n     * テンプレートを検索する\n     * @param condition \n     * @returns フィルターしたリスト\n     */\n    export const search = (condition: TemplateCondition) => {\n        console.log(JSON.stringify(condition));\n        return TEMPLATE_LIST.filter((template) => (\n            (template.condition.beat === condition.beat)\n        ));\n    }\n    \n    const TEMPLATE_LIST: TemplateBean[] = [\n        {\n            name: 'major minimum 01 [Ⅰ→Ⅳ～]',\n            condition: { beat: '4/4' },\n            unitList: [\n                {\n                    sectionName: 'A',\n                    chordList: ProgUnitSearcher.parseChord('@4 1 4 5 @2 1 5 @4 6 4 5 1')\n                }\n            ]\n        },\n        {\n            name: 'major minimum 02 [Ⅰ→Ⅴ～]',\n            condition: { beat: '4/4' },\n            unitList: [\n                {\n                    sectionName: 'A',\n                    chordList: ProgUnitSearcher.parseChord('@2 1 5 6 3 4 1 2 5 1 5 3n*7 6 2 3 4n*m 1')\n                }\n            ]\n        },\n        {\n            name: 'minor minimum 01 [Ⅵ→Ⅴ～]',\n            condition: { beat: '4/4' },\n            unitList: [\n                {\n                    sectionName: 'A',\n                    chordList: ProgUnitSearcher.parseChord('@2 6 5 4 3n*m7 2n*m7 6 7n*7 3n*7 6')\n                }\n            ]\n        },\n        {\n            name: 'minor minimum 02 [Ⅱm→Ⅴ～]',\n            condition: { beat: '4/4' },\n            unitList: [\n                {\n                    sectionName: 'A',\n                    chordList: ProgUnitSearcher.parseChord('@2 2n*m7 5 1 6 2n*m7 3n*7 6 6n*7 2n*m7 5 3n*m7 6 2n*m7 3n*7 6n*sus4 6')\n                }\n            ]\n        },\n        {\n            name: 'major short 01 [Ⅰ→Ⅴ～]',\n            condition: { beat: '4/4' },\n            unitList: [\n                {\n                    sectionName: 'A',\n                    chordList: ProgUnitSearcher.parseChord('@2 1 5 6 3n*m7 4 1 2n*m7 5 1 5 6 3 4 1 2n*7 3n*7')\n                },\n                {\n                    sectionName: 'B',\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 4 5 1n*sus4 1')\n                }\n            ]\n        },\n        {\n            name: 'major short 02 [Ⅳ→Ⅴ～]',\n            condition: { beat: '4/4' },\n            unitList: [\n                {\n                    sectionName: 'A',\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 2n*m7 5 1 @2 5n*m 1n*7 @4 4n*maj7 5 @2 1 5 @4 6 2n*m7 5 6n*sus4 6n*')\n                }\n            ]\n        },\n        {\n            name: 'major short 03 [Ⅰ→Ⅵm～]',\n            condition: { beat: '4/4' },\n            unitList: [\n                {\n                    sectionName: 'A',\n                    chordList: ProgUnitSearcher.parseChord('@4 1 1 6 6 4 4 5 5 1 1 6 6 4 4 5 5')\n                },\n                {\n                    sectionName: 'B',\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 4 5 1n*sus4 1')\n                }\n            ]\n        },\n        {\n            name: 'minor short 01 [Ⅵ→Ⅳ～]',\n            condition: { beat: '4/4' },\n            unitList: [\n                {\n                    sectionName: 'A',\n                    chordList: ProgUnitSearcher.parseChord('@2 6 4 5 1 6 4 5 1 6 4 5 1 2 3n*m7 4n*maj7 3n*7')\n                },\n                {\n                    sectionName: 'B',\n                    chordList: ProgUnitSearcher.parseChord('@4 4 5 3 6 2 3 6n*sus4 6')\n                }\n            ]\n        },\n    ];\n}\n\nexport default ProgTemplateUtil;","import { useContext, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../../base/design/styles\";\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport ProgTemplateUtil from \"./progTemplateUtil\";\nimport ProgUnitSearcher from \"./progUnitSearcher\";\n\nconst ProgTemplateFrame = (props: {\n    /** 拍子フィルターの値 */\n    beat: '' | BeatSignature;\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\n    applyProgTemplate: (template: ProgTemplateUtil.TemplateBean) => void;\n}) => {\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const [focusIndex, setFocusIndex] = useState(-1);\n\n    const templateList = ProgTemplateUtil.search({\n        beat: props.beat as BeatSignature\n    });\n\n    const templateJsxList = useMemo(() => {\n        return templateList.map((template, i) => {\n            return (\n                <_Item key={i}\n                    isFocus={i === focusIndex}\n                    onClick={() => {\n                        setFocusIndex(i);\n                        props.applyProgTemplate(templateList[i]);\n                    }}\n                >{template.name}</_Item>\n            );\n        });\n    }, [templateList, focusIndex]);\n\n    return (\n        <_Frame>\n            {templateJsxList}\n        </_Frame>\n    );\n}\n\nexport default ProgTemplateFrame;\n\n\nconst _Frame = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n`;\n\nconst _Item = styled.div<{\n    isFocus: boolean;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM}\n    display: inline-block;\n    width: 100%;\n    background-color: #00000010;\n    ${props => !props.isFocus ? '' : css`\n        background-color: #f6ff0062;\n    `}\n    text-align: left;\n    margin: 2px 0 0 0;\n    padding: 0 0 0 5px;\n    color: #eb0000;\n`;\n","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../../base/design/styles\";\nimport { BeatSignature, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport ProgCustomFrame from \"./progCustomFrame\";\nimport ProgOutputFrame from \"./progOutputFrame\";\nimport ProgUnitSearcher from \"./progUnitSearcher\";\nimport ProgStyle from \"./progStyle\";\nimport ProgTemplateFrame from \"./progTemplateFrame\";\nimport ProgUtil from \"./progUtil\";\nimport ProgTemplateUtil from \"./progTemplateUtil\";\n\n/**\n * コード進行を構成して譜面のベースを作成するダイアログ\n * @param props 引数\n * @returns コンポーネント\n */\nconst ChordProgDialog = (props: {\n    setScoreData: (scoreData: ScoreData) => void;\n}) => {\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    /** 生成モード（ブランク、カスタム、テンプレート） */\n    const [buildMode, setBuildType] = useState<ProgUtil.BuildType>('blank');\n    /** 出力する進行ユニットのリスト */\n    const [outputUnits, setOutputUnits] = useState(ProgUtil.getBlankBlockList());\n    /** 拍子フィルター */\n    const [beatFilter, setBeatFilter] = useState<'' | BeatSignature>('');\n\n    /**\n     * Closeボタン押下時の処理\n     */\n    const closeAction = () => {\n        store.systemState.dialog = null;\n        dispatcher.system.setState(store.systemState);\n    };\n\n    /**\n     * Startボタン押下時の処理\n     */\n    const startAction = () => {\n        const scoreData = ProgUtil.buildScoreData(outputUnits);\n        props.setScoreData(scoreData);\n        closeAction();\n        // Editタブに遷移\n        store.systemState.scoreTabIndex = 1;\n        dispatcher.system.setState(store.systemState);\n    };\n\n    const getSwitchContJsx = () => {\n        switch (buildMode) {\n            case 'blank': return <></>;\n            case 'custom': return <ProgCustomFrame\n                beat={beatFilter}\n                unitNum={outputUnits.length - 2}\n                reset={() => { setOutputUnits(ProgUtil.getInitialBlockList()) }}\n                insertProgUnit={insertProgUnit}\n            />;\n            case 'template': return <ProgTemplateFrame\n                beat={beatFilter}\n                applyProgTemplate={applyProgTemplate}\n            />;\n        }\n    };\n\n    /** 拍フィルターのオプションリストJSX */\n    const beatOptionJsxList = useMemo(() => {\n        if (buildMode === 'blank') {\n            return [(\n                <option key={0} value={''}></option>\n            )];\n        } else {\n            return [''].concat(TheoryUtil.BEAT_DEF_LIST).map((val, i) => {\n                return (\n                    <option key={i} value={val}>{val}</option>\n                );\n            });\n        }\n    }, [buildMode]);\n\n    const beatChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        setBeatFilter(e.target.value as BeatSignature);\n    }\n\n    /** リストから選択中のコード進行ブロックを出力に追加する */\n    const insertProgUnit = (sectionName: string, sectionNo: string, chordList: ProgUnitSearcher.ChordItemBean[]) => {\n        const detail: ProgUtil.SectionProps = {\n            sectionName, sectionNo,\n            chordList: chordList.map((chord) => {\n                const chordDetail = ProgUtil.getDefaultChord();\n                chordDetail.beatLen = chord.beatLen;\n                chordDetail.symbolKey = chord.symbolKey;\n                chordDetail.root = chord.root;\n                return chordDetail;\n            }),\n            backingNo: 1\n        }\n        const block: ProgUtil.UnitProps = { type: 'section', detail }\n        outputUnits.splice(outputUnits.length - 1, 0, block);\n        setOutputUnits(outputUnits.slice());\n    }\n\n    const applyProgTemplate = (templateBean: ProgTemplateUtil.TemplateBean) => {\n        outputUnits.splice(0);\n        ProgUtil.getInitialBlockList().forEach(progUnit => {\n            outputUnits.push(progUnit);\n        });\n        templateBean.unitList.forEach((unit) => {\n            insertProgUnit(unit.sectionName, '', unit.chordList);\n        });\n    }\n\n    /**\n     * 切り替え式ボタンのJSXを返すクロージャ\n     * @param labelName ラベル名\n     * @param clickEvent 押下時の処理\n     * @param isActive 選択中かどうか\n     * @returns JSX\n     */\n    const createSwitchableButton = (\n        labelName: string,\n        isActive: boolean,\n        clickEvent: () => void\n    ) => {\n        return (\n            <_SwitchableButton isActive={isActive}\n                onClick={clickEvent}\n            >{labelName}</_SwitchableButton>\n        );\n    }\n\n    const beatComboboxEnable = outputUnits.length <= 2;\n\n    // Blankモードの時は空白を表示\n    const distBeatFilter = buildMode === 'blank' ? '' : beatFilter;\n    return (\n        <_Frame >\n            <_Header>\n                {createSwitchableButton('Blank', buildMode === 'blank', () => {\n                    setOutputUnits(ProgUtil.getBlankBlockList());\n                    setBuildType('blank');\n                })}\n                {createSwitchableButton('Custom', buildMode === 'custom', () => {\n                    setOutputUnits(ProgUtil.getInitialBlockList());\n                    setBuildType('custom');\n                })}\n                {createSwitchableButton('Template', buildMode === 'template', () => {\n                    setOutputUnits(ProgUtil.getInitialBlockList());\n                    setBuildType('template');\n                })}\n            </_Header>\n            <_MainDiv>\n                <_LeftDiv isEnable={buildMode !== 'blank'}>\n                    <_BeatFormDiv>\n                        <ProgStyle._TitleLabel>Beat</ProgStyle._TitleLabel>\n                        <ProgStyle._Combobox value={distBeatFilter} isEnable={beatComboboxEnable} width={150}\n                            onChange={(e) => {\n                                beatChangeAction(e);\n                            }}>{beatOptionJsxList}</ProgStyle._Combobox>\n                    </_BeatFormDiv>\n                    {/* モードによって切り替えるコンテンツ（カスタムorテンプレート） */}\n                    <_SwitchDiv>{getSwitchContJsx()}</_SwitchDiv>\n                </_LeftDiv>\n                <_RightDiv>\n                    <ProgOutputFrame\n                        outputUnits={outputUnits}\n                        updateOutputUnits={() => { setOutputUnits(outputUnits.slice()) }}\n                    />\n                </_RightDiv>\n            </_MainDiv>\n            <_Footer>\n                {/* ダイアログを閉じる */}\n                <_ExecutableButton isEnable={true} onClick={closeAction}>Cancel</_ExecutableButton>\n                {/* 譜面を生成 */}\n                <_ExecutableButton isEnable={outputUnits.length >= 3} onClick={startAction}>Start</_ExecutableButton>\n            </_Footer>\n        </_Frame>\n    );\n}\n\nexport default ChordProgDialog;\n\nconst HEADER_HEIGHT = 50;\nconst FOOTER_HEIGHT = 50;\nconst BEAT_HEIGHT = 40;\n\nconst _Frame = styled.div<{\n}>`\n    display: inline-block;\n    position: absolute;\n    left: 50px;\n    top: 50px;\n    width: 1024px;\n    height: 768px;\n    z-index: 11;\n    /* top: 100px;\n    left: 100px; */\n    /* width: calc(100% - 200px);\n    height: calc(100% - 200px); */\n    background-color: #929292;\n    border: solid 2px #404250;\n    border-radius: 8px;\n    /* border: 1px solid #dadada; */\n`;\n\n/**\n * ヘッダー\n */\nconst _Header = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${HEADER_HEIGHT}px;\n    background-color: #7d8d97;\n    text-align: center;\n`;\n\n/**\n * メインコンポーネント\n */\nconst _MainDiv = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: calc(100% - ${HEADER_HEIGHT + FOOTER_HEIGHT}px);\n    /* background-color: #7d8d97; */\n    text-align: left;\n`;\n\n/**\n * 左側のコンポーネント\n */\nconst _LeftDiv = styled.div<{\n    isEnable: boolean;\n}>`\n   display: inline-block;\n   vertical-align: top;\n   width: calc(50% - 6px);\n   height: calc(100% - 8px);\n   background-color: #bdced8;\n   text-align: left;\n   margin: 4px 2px 4px 4px;\n   ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n`;\n\n/**\n * 拍選択\n */\nconst _BeatFormDiv = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${BEAT_HEIGHT}px;\n    /* background-color: #b4c7ba; */\n    padding: 5px 0 0 5px;\n    box-sizing: border-box;\n`;\n\nconst _BeatSelect = styled.select<{\n}>`\n    display: inline-block;\n    height: 30px;\n    font-size: ${Styles.FONT_MIDIUM}px;\n    text-align: left;\n    color: black;\n    vertical-align: top;\n    line-height: 24px;\n    width: 210px;\n    box-sizing: border-box;\n    margin: 0 0 0 5px;\n`;\n\n\n/**\n * テンプレートとカスタムの切り替えコンテンツ表示\n */\nconst _SwitchDiv = styled.div<{\n}>`\n    display: inline-block;\n    background-color: #cedbd7;\n    border: 1px solid #696969;\n    box-sizing: border-box;\n    margin: 5px 0 0 5px;\n    width: calc(100% - 10px);\n    height: calc(100% - ${BEAT_HEIGHT + 10}px);\n`;\n\n/**\n * 右側のコンポーネント\n */\nconst _RightDiv = styled.div<{\n}>`\n    display: inline-block;\n    vertical-align: top;\n    width: calc(50% - 6px);\n    height: calc(100% - 8px);\n    background-color: #bdced8;\n    text-align: left;\n    margin: 4px 4px 4px 2px;\n`;\n\n/**\n * フッター\n */\nconst _Footer = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${HEADER_HEIGHT}px;\n    background-color: #d1d1d1;\n    text-align: right;\n    & *{\n        margin: 10px 5px 0 0;\n    }\n`;\n\n/**\n * スイッチボタン\n */\nconst _SwitchableButton = styled.div<{\n    isActive: boolean;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM};\n    background-color: #5083c5;\n    ${props => !props.isActive ? '' : css`\n        background-color: #c5b950;\n    `};\n    width: 200px;\n    margin: 10px 5px 0 0;\n    text-align: center;\n    border-radius: 4px;\n    border: solid 1px #375176;\n    box-sizing: border-box;\n    &:hover {\n        background-color: #77a7e6;\n    ${props => !props.isActive ? '' : css`\n            background-color: #c5b950;\n    `};\n}\n`;\n\n/**\n * 実行ボタン\n */\nconst _ExecutableButton = styled.div<{\n    isEnable: boolean;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM};\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\n    background-color: #5c9253;\n    width: 130px;\n    text-align: center;\n    border-radius: 4px;\n    border: solid 1px #2d5625;\n    box-sizing: border-box;\n    &:hover {\n        background-color: #7eaf75;\n    }\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/score/scoreData\";\nimport CacheUtil from \"../../../utils/cacheUtil\";\nimport DataUtil from \"../../../utils/dataUtil\";\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\nimport TheoryUtil from \"../../../utils/theoryUtil\";\nimport { GlobalContext } from \"../../entry/systemEntry\";\nimport ChordProgDialog from \"./chordProg/chordProgDialog\";\nimport ScoreBuilder from \"./scoreBuilder\";\n\ntype ShareType = '' | 'url' | 'free' | 'dl';\n\nconst ManageTab = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const [file, setFile] = useState<null | File>(null);\n\n    const fileHandle = store.scoreState.fileHandle;\n    const scoreData = store.scoreData;\n    const tabIndex = store.systemState.scoreTabIndex;\n\n    const loginProps = store.userEnv.login;\n\n    const [cloudScoreList, setCloudScoreList] = useState<null | {\n        seq: number, name: string, hash: string, url: string, share: string\n    }[]>(null);\n    const [focusIndex, setFocusIndex] = useState(-1);\n    const [cloudScoreName, setCloudScoreName] = useState('-');\n    const [cloudScoreShare, setCloudScoreShare] = useState<ShareType>('');\n\n    useEffect(() => {\n        loadCloudScore();\n    }, [loginProps]);\n\n    const loadCloudScore = () => {\n        if (loginProps != undefined) {\n            DataUtil.findUserScoreList(loginProps.seq).then((resList) => {\n                setCloudScoreList(resList.map((res) => {\n                    const seq = res['seq'];\n                    const hash = DataUtil.getHashedFromScoreSeq(seq);\n                    const url = DataUtil.getPreviewURL(seq);\n                    return { seq, name: res['dispnam'], hash, url, share: res['share'] };\n                }));\n                console.log('load');\n            });\n        }\n    }\n\n    const [fileInfo, scoreInfo]: [{\n        name: string;\n        size: string;\n        modified: string;\n    }, {\n        key: string;\n        tempo: string;\n        rate: string;\n        section: string;\n        chord: string;\n        bar: string;\n        time: string;\n        notes: string;\n    }] = useMemo(() => {\n        let name = '-';\n        let size = '-';\n        let modified = '-';\n        let key = '-';\n        let tempo = '-';\n        let rate = '-';\n        let section = '-';\n        let chord = '-';\n        let bar = '-';\n        let time = '-';\n        let notes = '-';\n        if (tabIndex === 0) {\n            if (file != null) {\n                name = file.name;\n                size = `${file.size.toString()} byte`;\n                modified = DataUtil.getStringFromDate(new Date(file.lastModified));\n            }\n            if (scoreData.chordList.length > 0) {\n                const init = scoreData.chordList[0].detail as DetailInit;\n                key = `${TheoryUtil.KEY12_MAJOR_SCALE_LIST[init.keyIndex]} ${init.scale}`;\n                tempo = init.bpm.toString();\n                rate = init.beatSignature;\n                let sectionNum = 0;\n                let chordNum = 0;\n                scoreData.chordList.forEach(chord => {\n                    switch (chord.type) {\n                        case 'section': sectionNum++; break;\n                        case 'chord': chordNum++; break;\n                    }\n                });\n                section = sectionNum.toString();\n                chord = chordNum.toString();\n\n                const cacheList = store.scoreState.elementCacheList;\n                if (cacheList.length > 0) {\n                    const last = cacheList[cacheList.length - 1];\n                    time = `${last.pastSecond / 1000}s`;\n                    bar = `${last.bar} (${last.surplusBeat})`;\n                }\n                notes = scoreData.notesList.length.toString();\n            }\n        }\n        return [{\n            name, size, modified\n        }, {\n            key, tempo, rate, section, chord, bar, time, notes\n        }]\n    }, [tabIndex, scoreData, file]);\n\n    useEffect(() => {\n        if (tabIndex === 0 && fileHandle != null) {\n            fileHandle.getFile().then(file => {\n                setFile(file);\n            });\n        }\n    }, [tabIndex]);\n\n    const setScoreData = ((data: ScoreData) => {\n        store.scoreState.focusIndex = 2;\n        store.scoreState.distIndex = store.scoreState.focusIndex;\n        dispatcher.score.setScoreState({ ...store.scoreState });\n        // dispatcher.score.setScoreTabIndex(1);\n        dispatcher.score.setScoreData(data);\n        // キャッシュの更新\n        store.scoreData = data;\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\n    });\n\n    /**\n     * ラベルアイテムを生成する\n     * @param labelName ラベル名\n     * @param labelValue 値\n     * @returns JSX\n     */\n    const createLabelRecord = (labelName: string, labelValue: string) => {\n        return (\n            <_Recored>\n                <_ItemnLabel>{labelName}</_ItemnLabel>\n                <_ItemnValue>{labelValue}</_ItemnValue>\n            </_Recored>\n        );\n    }\n    /**\n     * テキストアイテムを生成する\n     * @param labelName ラベル名\n     * @param textValue 値\n     * @returns JSX\n     */\n    const createTextRecord = (labelName: string, textValue: string, changeAction: (e: React.ChangeEvent<HTMLInputElement>) => void) => {\n        return (\n            <_Recored>\n                <_ItemnLabel>{labelName}</_ItemnLabel>\n                <_ItemnInput\n                    type=\"text\" value={textValue}\n                    isEnable={focusIndex !== -1}\n                    onChange={changeAction}\n                />\n            </_Recored>\n        );\n    }\n\n    const searchLocalFileAction = () => {\n        (async () => {\n            const [fileHandle] = await window.showOpenFilePicker();\n            const file = await fileHandle.getFile();\n            const fileContents = await file.text();\n            // console.log(fileContents);\n            store.scoreState.fileHandle = fileHandle;\n            setFile(file);\n            const text = DataUtil.unZip(fileContents);\n            // const text = fileContents;\n            console.log(text);\n            setScoreData(JSON.parse(text));\n        })();\n    }\n\n    const fileDisconnectAction = () => {\n        store.scoreState.fileHandle = null;\n        dispatcher.score.setScoreState({ ...store.scoreState });\n        // キャッシュの更新\n        store.scoreData = scoreData;\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\n        setFile(null);\n    };\n\n    const isDataConnect = fileHandle != null;\n\n\n    const cloudScoreListJsx = loginProps == undefined ? <></> : cloudScoreList == null ? (\n        <_Message>Now loading your cloud score...</_Message>\n    ) : cloudScoreList.map((score, i) => {\n\n        return <_CloudItem key={i} isActive={i === focusIndex} onClick={() => {\n            setFocusIndex(i);\n            const cur = cloudScoreList[i];\n            if (cur != null) {\n                setCloudScoreName(cur.name);\n            }\n        }}><_CName>{score.name}</_CName><_CHash> [{score.hash}]</_CHash></_CloudItem>\n    });\n\n\n    const uploadActioon = () => {\n        setCloudScoreList(null);\n        if (loginProps != undefined && cloudScoreList != null) {\n            const newScoreName = `new [${loginProps.id}] score`;\n            DataUtil.sendQueryRequestToAPI('update', `INSERT INTO scoretbl(user_seq, dispnam, data)\n                VALUES(${loginProps.seq}, '${newScoreName}', '${DataUtil.gZip(JSON.stringify(scoreData))}')\n            `).then(() => {\n                setFocusIndex(cloudScoreList.length);\n                setCloudScoreName(newScoreName);\n                loadCloudScore();\n            })\n        }\n    }\n\n    const overwriteActioon = () => {\n        setCloudScoreList(null);\n        if (curCloudScore != null) {\n            DataUtil.sendQueryRequestToAPI('update', `\n                UPDATE scoretbl SET\n                dispnam = '${cloudScoreName}',\n                share = '${cloudScoreShare}',\n                lastmod = datetime('now', 'localtime'),\n                data = '${DataUtil.gZip(JSON.stringify(scoreData))}'\n                WHERE seq = ${curCloudScore.seq}\n            `).then(() => {\n                loadCloudScore();\n            })\n        }\n    }\n    const deleteActioon = () => {\n        setCloudScoreList(null);\n        if (curCloudScore != null) {\n            DataUtil.sendQueryRequestToAPI('update', `DELETE FROM scoretbl WHERE seq = ${curCloudScore.seq}\n            `).then(() => {\n                setFocusIndex(-1);\n                loadCloudScore();\n            })\n        }\n    }\n\n    const downloadAction = () => {\n        if (curCloudScore != undefined) {\n            DataUtil.findScore(curCloudScore.seq).then((resList) => {\n                if (resList.length > 0) {\n                    const source = resList[0]['data'];\n                    const text = DataUtil.unZip(source);\n                    setScoreData(JSON.parse(text));\n                }\n            });\n        }\n    }\n    const curCloudScore = cloudScoreList == null ? null : cloudScoreList[focusIndex];\n    const uploadEnable = scoreData.chordList.length > 0 && focusIndex === -1;\n    const isExistEditingData = scoreData.chordList.length > 0;\n\n    const isSelectedScore = focusIndex !== -1;\n    return (\n        <_Wrap>\n            <_ButtonsDiv>\n                <_Button isEnable={!isDataConnect && !isExistEditingData} onClick={() => {\n                    store.systemState.dialog = <ChordProgDialog setScoreData={setScoreData} />;\n                    dispatcher.system.setState(store.systemState);\n                }}>new score</_Button>\n            </_ButtonsDiv>\n            <_MainDiv>\n                <_Left>\n                    <_CloudDiv isEnable={true}>\n\n                        <_ButtonsDiv>\n                            <_Button isEnable={loginProps != undefined && uploadEnable} onClick={uploadActioon}>upload</_Button>\n                            <_Button isEnable={loginProps != undefined && isSelectedScore} onClick={() => {\n                                setFocusIndex(-1);\n                            }}>release</_Button>\n                        </_ButtonsDiv>\n                        <_ListFrame isEnable={loginProps != undefined}>\n                            {cloudScoreListJsx}\n                        </_ListFrame>\n                        <_ButtonsDiv>\n                            <_Button isEnable={loginProps != undefined && isSelectedScore && isExistEditingData} onClick={overwriteActioon}>overwrite</_Button>\n                            <_Button isEnable={loginProps != undefined && isSelectedScore && !isExistEditingData} onClick={downloadAction}>download</_Button>\n                            <_Button isEnable={loginProps != undefined && isSelectedScore} onClick={deleteActioon}>delete</_Button>\n                        </_ButtonsDiv>\n                    </_CloudDiv>\n                </_Left>\n                <_Right>\n                    {/* <_Source value={source} onChange={e => setSource(e.target.value)} /> */}\n\n                    <_ButtonsDiv>\n                        <_Button isEnable={!isDataConnect && !isExistEditingData} onClick={searchLocalFileAction}>load file</_Button>\n                        <_Button isEnable={isDataConnect} onClick={fileDisconnectAction}>disconnect</_Button>\n                        <_Button isEnable={isExistEditingData} onClick={() => {\n                            dispatcher.score.clearCache();\n                            if (isDataConnect) {\n                                fileDisconnectAction();\n                            }\n                            dispatcher.score.setScoreData({ notesList: [], chordList: [] });\n                        }}>clear</_Button>\n                    </_ButtonsDiv>\n                    <_DataInfoDiv isEnable={isDataConnect}>\n                        <_TitleLabel>Local</_TitleLabel>\n                        {createLabelRecord('file', fileInfo.name)}\n                        {createLabelRecord('size', fileInfo.size)}\n                        {createLabelRecord('last', fileInfo.modified)}\n                        {/* {createLabelRecord('size', fileInfo.size)}\n                        {createLabelRecord('modified', fileInfo.modified)} */}\n                    </_DataInfoDiv>\n                    <_DataInfoDiv isEnable={focusIndex !== -1}>\n                        <_TitleLabel>Cloud</_TitleLabel>\n                        {createTextRecord('name', curCloudScore == null ? '-' : cloudScoreName, (e) => {\n                            setCloudScoreName(e.target.value);\n                        })}\n                        <_Recored>\n                            <_ItemnLabel>url</_ItemnLabel>\n                            <_ItemnURL onContextMenu={() => {\n                                navigator.clipboard.writeText(curCloudScore == null ? '-' : curCloudScore.url).then(() => {\n                                    alert('Copied clipboad!');\n                                });\n                            }}>{curCloudScore == null ? '-' : curCloudScore.url}</_ItemnURL>\n                        </_Recored>\n                        {/* {createLabelRecord('url', curCloudScore == null ? '-' : curCloudScore.url)} */}\n                        <_Recored>\n                            <_ItemnLabel>share</_ItemnLabel>\n                            <_ItemnCombobox\n                                isEnable={focusIndex !== -1}\n                                value={cloudScoreShare}\n                                onChange={(e) => {\n                                    setCloudScoreShare(e.target.value as ShareType);\n                                }}\n                            >\n                                <option value={'url'}>URL only</option>\n                                <option value={'free'}>Home publish</option>\n                                <option value={'dl'}>Download OK</option>\n                            </_ItemnCombobox>\n                        </_Recored>\n                    </_DataInfoDiv>\n                    <_ScoreInfoDiv isEnable={isExistEditingData}>\n                        <_TitleLabel>SCORE</_TitleLabel>\n                        {createLabelRecord('key', scoreInfo.key)}\n                        {createLabelRecord('tempo', scoreInfo.tempo)}\n                        {createLabelRecord('rate', scoreInfo.rate)}\n                        {createLabelRecord('section', scoreInfo.section)}\n                        {createLabelRecord('chord', scoreInfo.chord)}\n                        {createLabelRecord('bar', scoreInfo.bar)}\n                        {createLabelRecord('time', scoreInfo.time)}\n                        {createLabelRecord('notes', scoreInfo.notes)}\n                    </_ScoreInfoDiv>\n                </_Right>\n            </_MainDiv>\n        </_Wrap >\n    );\n}\n\nexport default ManageTab;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    background-color: #7e7e7e;\n    text-align: left;\n`;\n\nconst _MainDiv = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: calc(100% - 40px);\n`;\n\nconst _Left = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 50%;\n    height: 100%;\n    /* background-color: #8a6b6b; */\n    text-align: left;\n    vertical-align: top;\n`;\n\nconst _Right = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 50%;\n    height: 100%;\n    /* background-color: #969696; */\n    text-align: left;\n    vertical-align: top;\n`;\n\nconst _Link = styled.div`\n    \n    display: inline-block;\n    width: calc(100% - 50px);\n    height: 50px;\n    margin: 20px 25px;\n    border: 2px solid #cacaca;\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\n    background-color: #000;\n    color: #ccc;\n    font-size: 30px;\n    font-weight: 600;\n    text-align: left;\n    box-sizing: border-box;\n    padding-left: 20px;\n    border-radius: 6px;\n\n    &:hover {\n        background-color: #616161;\n    }\n`;\n\n// const _Source = styled.textarea`\n//     display: inline-block;\n//     width: calc(100% - 8px);\n//     margin: 4px 0 0 4px;\n//     height: calc(100% - 44px);\n//     /* background-color: #7e7e7e; */\n//     text-align: left;\n//     font-size: 20px;\n//     resize: none;\n//     box-sizing: border-box;\n//     color: #060053;\n// `;\n\nconst _InfoDiv = styled.div`\n    display: inline-block;\n    position: relative;\n    width: calc(100% - 8px);\n    margin: 4px 0 4px 4px;\n    height: calc(100% - 48px);\n    background-color: #ffffff;\n    box-sizing: border-box;\n    color: #060053;\n`;\n\nconst DATA_INFO_HEIGHT = 180;\n\nconst _DataInfoDiv = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: ${DATA_INFO_HEIGHT}px;\n    margin: 4px 0 4px 4px;\n    background-color: #9da5af;\n    border: solid 1px #1b00b3;\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.3;\n    `}\n    border-radius: 4px;\n    box-sizing: border-box;\n    color: #060053;\n`;\n\nconst _ScoreInfoDiv = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: calc(100% - ${DATA_INFO_HEIGHT * 2 + 40 + 20}px);\n    margin: 0 0 4px 4px;\n    background-color: #acacac;\n    border: solid 1px #1b00b3;\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.3;\n    `}\n    border-radius: 4px;\n    box-sizing: border-box;\n    color: #060053;\n    overflow: hidden;\n`;\n\nconst _CloudDiv = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: calc(100% - 8px);\n    margin: 4px 0 4px 4px;\n    background-color: #acacac;\n    border: solid 1px #1b00b3;\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.3;\n    `}\n    border-radius: 4px;\n    box-sizing: border-box;\n    color: #060053;\n    overflow: hidden;\n`;\n\nconst _TitleLabel = styled.div`\n    display: inline-block;\n    height: 40px;\n    font-size: 30px;\n    font-weight: 600;\n    color: #1c2c95;\n    /* background-color: #3f80cf57; */\n    padding: 0 10px;\n`;\nconst _Recored = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 35px;\n    /* background-color: #3fcf7b56; */\n    padding: 4px 0 0 10px;\n`;\nconst _ItemnLabel = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: 140px;\n    font-size: 24px;\n    line-height: 24px;\n    font-weight: 600;\n    color: #08106e;\n    border: solid 1px #1b00b3;\n    box-sizing: border-box;\n    /* background-color: #85a2c5; */\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\n    border-radius: 4px;\n    text-align: center;\n    vertical-align: top;\n`;\nconst _ItemnValue = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #ffffff;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #808080;\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    white-space: nowrap;\n    overflow: hidden;\n`;\nconst _ItemnURL = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 18px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #01f52a;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #808080;\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    white-space: nowrap;\n    overflow: hidden;\n`;\n\nconst _ItemnInput = styled.input<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #1f1f1f;\n    border: solid 1px #000;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #dbdbdb;\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n`;\n\nconst _ItemnCombobox = styled.select<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #1f1f1f;\n    border: solid 1px #000;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #dbdbdb;\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n`;\n\nconst _ButtonsDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    /* background-color: #888888; */\n    box-sizing: border-box;\n    text-align: left;\n    white-space: nowrap;\n`;\n\nconst _Button = styled.div<{\n    isEnable: boolean;\n}>`\n    ${_CSS_LABEL_MIDIUM}\n    /* width: 160px; */\n    padding: 0 40px;\n    /* line-height: 25px; */\n    box-sizing: border-box;\n    background-color: #a8a8a8;\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\n    border: 1px solid #1a2b3f;\n    color: #1a2b3f;\n    border-radius: 4px;\n    margin: 5px 0 0 4px;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        /* background-color: #98bfc2; */\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\n    }\n`;\n\n\nconst _ListFrame = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: calc(100% - 92px);\n    margin: 4px 0 0 4px;\n    background-color: #d3d3c5;\n    border: 1px solid #e60000;\n    border-radius: 4px;\n    box-sizing: border-box;\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.3;\n        pointer-events: none;\n    `}\n`;\n\nconst _Message = styled.div<{\n}>`\n    display: inline-block;\n    color: #d60000;\n    font-size: 24px;\n    /* font-weight: 600; */\n    /* background-color: white; */\n    margin: 0 0 0 4px;\n`;\n\nconst _CloudItem = styled.div<{\n    isActive: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    font-size: 28px;\n    font-weight: 600;\n    border-bottom: 1px solid #888888;\n    /* background-color: white; */\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\n    ${props => !props.isActive ? '' : css`\n        background: linear-gradient(to bottom, transparent, #fdff8484);\n    `}\n    margin: 2px 0 0 0;\n    padding: 0 0 0 4px;\n    box-sizing: border-box;\n    padding-left: 4px;\n    overflow: hidden;\n    white-space: nowrap;\n    &:hover {\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\n        ${props => !props.isActive ? '' : css`\n            background: linear-gradient(to bottom, transparent, #feffcd99);\n        `}\n    }\n`;\nconst _CName = styled.span` color: #00532c; `;\nconst _CHash = styled.span` color: #b9000042; `;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : TheoryUtil.getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: TheoryUtil.SymbolKey[] = [];\r\n        const parentLine: TheoryUtil.SymbolKey[] = [];\r\n        const childrenLine: TheoryUtil.SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = TheoryUtil.getSymbolDerives(baseSymbol.key);\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = TheoryUtil.getSymbolDerives(curSymbol.key);\r\n        TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\nimport { DetailChord } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = TheoryUtil.getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = TheoryUtil.getRootName({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = TheoryUtil.getRootName({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        // 見た目上１から数えるため\r\n        bar = cache.bar + 1;\r\n    }\r\n    // 小節変更タイミングで、余りの拍がある（頭でない）場合エラー\r\n    const isError = bar !== -1 && cache.surplusBeat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n        if(chordOn != null) {\r\n            chordName += `/${chordOn}`;\r\n        }\r\n    }\r\n\r\n    let minuteStr = '';\r\n    if(cache.minute !== 0) {\r\n        switch(cache.minute) {\r\n            case 1: minuteStr = '→/16'; break;\r\n            case 2: minuteStr = '→/8'; break;\r\n            case -1: minuteStr = '←/16'; break;\r\n            case -2: minuteStr = '←/8'; break;\r\n        }\r\n    }\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.surplusBeat === 0 ? <>&nbsp;</> : cache.surplusBeat}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : minuteStr}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailAlter = (props: {\r\n    detail: DetailAlter;\r\n}) => {\r\n\r\n    const type = props.detail.alterType;\r\n\r\n    const getDetailInfo = (): string => {\r\n        let ret = '-';\r\n        if (type != null) {\r\n            switch (type) {\r\n                case 'modulate': {\r\n\r\n                    const modRel = props.detail.modRel;\r\n                    if (modRel != null) {\r\n                        switch (modRel) {\r\n                            case 'domm': {\r\n                                const val = props.detail.dommVal;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                            case 'relative':\r\n                            case 'parallel': {\r\n                                ret = modRel;\r\n                            } break;\r\n                            case 'key': {\r\n                                const val = props.detail.keyAdj;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                        }\r\n                    }\r\n                } break;\r\n                case 'tempo' : {\r\n                    const tempoRel = props.detail.tempoRel;\r\n                    switch(tempoRel) {\r\n                        case 'diff': {\r\n                            const val = props.detail.tempoDiff;\r\n                            const sign = val > 0 ? '+' : ''; \r\n                            ret = `${tempoRel}: ${sign}${val}`;\r\n                        } break;\r\n                        case 'rate': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoRate}%`;\r\n                        } break;\r\n                        case 'abs': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoAbs}`;\r\n                        } break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                {type == null ? 'alter' : type}\r\n            </_Type>\r\n            <_Detail>\r\n                {getDetailInfo()}\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailChord, Scale } from \"../../../../../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../../../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 2 | 1;\r\n\r\n/**\r\n * コードブロックのコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isSustainMode: boolean;\r\n    isCurrent: boolean;\r\n    cache: ScoreCache.Element;\r\n    chordCacheList: ScoreCache.Chord[];\r\n    keyIndex: number;\r\n    scale: Scale;\r\n}) => {\r\n\r\n    const minute = props.detail.minute;\r\n    const symbol = TheoryUtil.getSymbolFromKey(props.detail.symbolKey) as TheoryUtil.SymbolParams;\r\n    const symbolName = symbol.name;\r\n    const chordBacking = props.detail.backing;\r\n    const cache = props.cache;\r\n    const chordCache = props.chordCacheList[cache.chordBlockNo];\r\n\r\n    const backingError = chordCache != undefined ? chordCache.backingError : false;\r\n    \r\n    return useMemo(() => {\r\n\r\n        // const keySwitch = store.scoreState.keySwitch;\r\n        let degreeRoot: null | string = null;\r\n        let degreeOn: null | string = null;\r\n        let chordRoot: null | string = null;\r\n        let chordOn: null | string = null;\r\n\r\n        if (props.detail.root != null) {\r\n            degreeRoot = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            });\r\n            chordRoot = TheoryUtil.getRootName({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, props.keyIndex);\r\n\r\n            if (props.detail.on != null) {\r\n                degreeOn = TheoryUtil.getDegreeRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.on.isFlat\r\n                });\r\n                chordOn = TheoryUtil.getRootName({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.root.isFlat\r\n                }, props.keyIndex);\r\n            }\r\n        }\r\n\r\n        const diatonicList = TheoryUtil.getDiatonicDegreeList(props.scale);\r\n        const isDiatonic = diatonicList.includes(degreeRoot + symbolName);\r\n\r\n        return <_Wrap>\r\n            <_Degree\r\n                // isSwitch={keySwitch.sustainMode && props.isCurrent}\r\n                isSwitch={props.isSustainMode}\r\n                scaleRelation={degreeRoot != null && isDiatonic ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}{symbolName}{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeRoot>\r\n                    {/* <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord> */}\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={props.isSustainMode}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n            <_Backing>\r\n                {backingError ? <_Error /> : <>\r\n                    {chordBacking.voicingList.length === 0 ? '' : <_Voicing />}\r\n                    {chordBacking.voicingList.length === 0 ? '' : chordBacking.pattern == null ? '' : <_Pattern />}\r\n                </>}\r\n            </_Backing>\r\n        </_Wrap>\r\n    }\r\n        , [\r\n            props.scale,\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            props.isSustainMode,\r\n            props.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail,\r\n            props.detail.backing,\r\n            backingError\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: TheoryUtil.ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 18px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #4e5163cc;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 2 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 1 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Backing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 6px;\r\n    /* background-color: #00a048; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _Error = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background-color: #af3838;\r\n`;\r\n\r\nconst _Voicing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 2px 0 0;\r\n    height: 4px;\r\n    border-radius: 4px 0 0 4px;\r\n    border: solid 1px #0000004e;\r\n    background-color: #acb6ca;\r\n`;\r\n\r\nconst _Pattern = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 0 0 2px;\r\n    height: 4px;\r\n    border-radius: 0 4px 4px 0;\r\n    border: solid 1px #0000004e;\r\n    background-color: #accab3;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    // const jsxList: JSX.Element[] = [];\r\n    // jsxList.push(<_Border key={0} />);\r\n    // jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    const value = props.detail.fixed;\r\n    return (\r\n        <_Wrap isStart={value === 'Start'}>\r\n            {/* {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()} */}\r\n            <_Label>{value}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div<{\r\n    isStart: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    border-left: 1px solid #00000083;\r\n    border-top: 1px solid #00000083;\r\n    border-right: 1px solid #00000083;\r\n    /* border: 1px solid #00000083; */\r\n    box-sizing: border-box;\r\n    background-color: #9b9b9b1f;\r\n    ${props => props.isStart ? css`\r\n        border-radius: 0 35px 0 0;\r\n    ` : css`\r\n        border-radius: 35px 0 0 0;\r\n    `}\r\n`;\r\n\r\n// const _Border = styled.div`\r\n//     display: inline-block;\r\n//     width: 10px;\r\n//     height: 100%;\r\n//     background-color: #b4b4b4;\r\n//     vertical-align: middle;\r\n// `;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    /* width: calc(100% - 10px); */\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #960000b0;\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    /* vertical-align: middle; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{TheoryUtil.KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.beatSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailSection } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailSection = (props: {\r\n    detail: DetailSection;\r\n}) => {\r\n    // const { store } = useContext(GlobalContext);\r\n\r\n    // const state = store.scoreState;\r\n    // const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    // const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Label>{curSection.labelName}</_Label> */}\r\n            <_Label>{props.detail.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcAlter = (props: {\r\n    detail: DetailAlter;\r\n    prevCache: ScoreCache.Element;\r\n    curCache: ScoreCache.Element;\r\n}) => {\r\n\r\n    const getType = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate': return 'Key';\r\n            case 'tempo': return 'Tempo';\r\n            case 'beat': return 'Beat';\r\n        }\r\n    }\r\n    const getDetail = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate':{\r\n                const prevKey = TheoryUtil.KEY12_SHARP_LIST[props.prevCache.keyIndex] + (props.prevCache.scale === 'major' ? '' : 'm');\r\n                const curKey = TheoryUtil.KEY12_SHARP_LIST[props.curCache.keyIndex] + (props.curCache.scale === 'major' ? '' : 'm');\r\n                return `${prevKey}→${curKey}`;\r\n            }\r\n            case 'tempo':{\r\n                const prevTempo = props.prevCache.bpm;\r\n                const curTempo = props.curCache.bpm;\r\n                return `${prevTempo}→${curTempo}`;\r\n            }\r\n            case 'beat':{\r\n                const prevBeat = props.prevCache.beatSignature;\r\n                const curBeat = props.curCache.beatSignature;\r\n                return `${prevBeat}→${curBeat}`;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Type>{getType()}</_Type>\r\n            <_Detail>{getDetail()}</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\ntype ChordDefBean = {\r\n    root: TheoryUtil.DegreeProps;\r\n    symbolKey: TheoryUtil.SymbolKey;\r\n}\r\n\r\nconst ChordEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n    }, [detail.root, detail.symbolKey]);\r\n\r\n    const getChord = (index: number, isFlat: boolean, symbolKey: TheoryUtil.SymbolKey): ChordDefBean => {\r\n        return { root: { index, isFlat }, symbolKey };\r\n    }\r\n\r\n    const createRow = (label: JSX.Element, chordList: ChordDefBean[]): JSX.Element => {\r\n        const listJsx: JSX.Element[] = [];\r\n        listJsx.push(<_Header key={listJsx.length}>{label}</_Header>);\r\n        chordList.forEach((chord) => {\r\n            const rootName = TheoryUtil.getDegreeRoot(chord.root);\r\n            const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\r\n            const symbolName = symbol.name;\r\n            listJsx.push(\r\n                <_Item isActive={false} key={listJsx.length}>\r\n                    {rootName + symbolName}\r\n                </_Item>);\r\n        });\r\n        return <_Row>{listJsx}</_Row>;\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {createRow(<>triad</>, [\r\n                getChord(0, false, 'major'),\r\n                getChord(2, false, 'minor'),\r\n                getChord(4, false, 'minor'),\r\n                getChord(5, false, 'major'),\r\n                getChord(7, false, 'major'),\r\n                getChord(9, false, 'minor'),\r\n                getChord(11, false, 'minor-minus5'),\r\n            ])}\r\n            {/* {createRow(<>Tetrad</>, [\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'minor-7th'),\r\n                getChord(4, false, 'minor-7th'),\r\n                getChord(5, false, 'major-maj7th'),\r\n                getChord(7, false, 'major-min7th'),\r\n                getChord(9, false, 'minor-7th'),\r\n                getChord(11, false, 'minor7-minus5'),\r\n            ])} */}\r\n            {createRow(<>domm</>, [\r\n                getChord(9, false, 'major-min7th'),\r\n                getChord(11, false, 'major-min7th'),\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'major-min7th'),\r\n                getChord(4, false, 'major-min7th'),\r\n            ])}\r\n            {createRow(<>domm*</>, [\r\n                getChord(1, false, 'diminish'),\r\n                getChord(3, false, 'diminish'),\r\n                getChord(4, false, 'diminish'),\r\n                getChord(6, false, 'diminish'),\r\n                getChord(8, false, 'diminish'),\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    /* height: 160px; */\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    /* height: 100%; */\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useEffect, useMemo, useRef } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/score/scoreData\";\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\nimport SymbolEditor from \"../tool/symbolEditor\";\nimport CalcChord from \"./calc/calcChord\";\nimport CalcSection from \"./calc/calcSection\";\nimport ElementDetailAlter from \"./form/elementDetailAlter\";\nimport ElementDetailChord from \"./form/elementDetailChord\";\nimport ElementFixedBorder from \"./elementFixedBorder\";\nimport ElementDetailInit from \"./form/elementDetailInit\";\nimport ElementDetailSection from \"./form/elementDetailSection\";\nimport CalcAlter from \"./calc/calcAlter\";\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\nimport { ScoreState } from \"../../../../../redux/store/score/scoreState\";\nimport ChordEditor from \"../tool/chordEditor\";\n\nconst ScoreElement = (props: {\n    index: number;\n    element: ChordElement;\n    state: ScoreState;\n    setState: (state: ScoreState) => void;\n}) => {\n\n    const wrapRef = useRef({} as HTMLDivElement);\n    const bodyRef = useRef({} as HTMLDivElement);\n\n    const state = props.state;\n    const keySwitch = state.keySwitch;\n    const isCurrent = state.focusIndex == props.index;\n    // const chordList = store.scoreData.chordList;\n    // const element = chordList[props.index];\n    const element = props.element;\n    const cache = state.elementCacheList[props.index];\n    const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\n    const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\n    const isFocus = props.index >= distHead && props.index <= distTail;\n    const isRange = isFocus && distHead != distTail;\n    const isSameSection = isFocus || state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\n\n    useEffect(() => {\n        cache.reffers.wrap = wrapRef.current;\n        cache.reffers.body = bodyRef.current;\n        props.setState(state);\n    }, [state.elementCacheList.length]);\n\n    const elementJson = JSON.stringify(element);\n\n    const isError = () => {\n        let ret = false;\n        if (element.type === 'chord') {\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\n            ret = chordCache.backingError;\n        }\n        return ret;\n    }\n\n    return useMemo(() => {\n        // console.log(`pos: ${props.index}`);\n        const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\n        const isInactive = !(isSameSection || element.type === 'init');\n        return (\n            <_Wrap\n                ref={wrapRef}\n                isSelectable={element.type !== 'fixed'}\n                isActive={isFocus}\n                isInactive={isInactive}\n                isAdditional={['chord', 'section', 'alter', 'init'].includes(element.type)}\n            >\n                <_Head>\n                    {element.type !== 'chord' ? <></> : (\n                        <_CurKey>{TheoryUtil.getDisplayKeyScaleName(cache.keyIndex, cache.scale)}</_CurKey>\n                    )}\n                </_Head>\n\n                {/* 要素の入力フォーム */}\n                {['init', 'chord', 'section', 'alter'].includes(element.type) ? (\n                    <_Form\n                        ref={bodyRef}\n                        isActive={isFocus}\n                        isRange={isRange}\n                        isInactive={isInactive}\n                        type={element.type}\n                        isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\n                        onClick={() => {\n                            if (element.type === 'fixed') {\n                                return;\n                            }\n                            if (!state.keySwitch.distMode) {\n                                state.focusIndex = state.distIndex = props.index;\n                            } else {\n                                state.distIndex = props.index;\n                            }\n                            props.setState(state);\n                        }}\n                    >{(() => {\n                        switch (element.type) {\n                            case 'init': {\n                                const detail = element.detail as DetailInit;\n                                return (<ElementDetailInit detail={detail} />);\n                            }\n                            case 'section': {\n                                const detail = element.detail as DetailSection;\n                                return (<ElementDetailSection detail={detail} />);\n                            }\n                            case 'chord': {\n                                const detail = element.detail as DetailChord;\n                                return (<ElementDetailChord\n                                    detail={detail}\n                                    isCurrent={isFocus}\n                                    cache={cache}\n                                    chordCacheList={state.chordCacheList}\n                                    keyIndex={cache.keyIndex}\n                                    isSustainMode={isFocus && state.keySwitch.sustainMode}\n                                    scale={cache.scale}\n                                />);\n                            }\n                            case 'alter': {\n                                const detail = element.detail as DetailAlter;\n                                return (<ElementDetailAlter detail={detail} />);\n                            }\n                        }\n                    })()}\n                    </_Form>\n                ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\n\n                {/* 入力フォーム下部の計算によって出力される情報 */}\n                {\n                    element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\n                        element.type === 'section' ? (<CalcSection index={props.index} />) :\n                            element.type === 'alter' ? (\n                                <CalcAlter\n                                    detail={element.detail as DetailAlter}\n                                    prevCache={state.elementCacheList[props.index - 1]}\n                                    curCache={cache}\n                                />\n                            ) :\n                                <></>\n                }\n                <>{!(isCurrent && chordDetail != null && state.keySwitch.chordMode) ? '' :\n                    <ChordEditor />\n                }</>\n                <>{!(isCurrent && chordDetail != null && chordDetail.root != null && state.keySwitch.symbolMode) ? '' :\n                    <SymbolEditor />\n                }</>\n                {['fixed', 'init'].includes(element.type) ? <></> : (\n                    <_Operations>\n                        <_OperationItem>-</_OperationItem>\n                        <_OperationItem\n                        // onClick={() => dispatcher.score.addChordElement()}\n                        >+</_OperationItem>\n                    </_Operations>\n                )}\n            </_Wrap>\n        );\n    }, [\n        elementJson, isSameSection, isRange, isFocus,\n        keySwitch.chordMode, keySwitch.symbolMode, keySwitch.sustainMode,\n        isError(), cache.keyIndex, cache.scale\n    ]);\n}\n\nexport default ScoreElement;\n\nconst _NextLine = styled.div`\n    display: block;\n    width: 1px;\n    height: 10px;\n    background-color: #ad0c0c;\n`;\n\nconst _Form = styled.div<{\n    isActive: boolean;\n    isRange: boolean;\n    isInactive: boolean;\n    //常に表示させるかどうか\n    isAnytime: boolean;\n    type: TypeDetail;\n}>`\n    display: inline-block;\n    /* position: relative; */\n    min-width: 80px;\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\n    /* border: solid 1px #00000049; */\n    ${props => props.type !== 'section' ? '' : css`\n        border: solid 1px #df8484;\n    ` }\n    ${props => props.type !== 'init' ? '' : css`\n        border: solid 1px #44b168;\n        height: 85px;\n    ` }\n    ${props => props.type !== 'alter' ? '' : css`\n        border: solid 1px #604fc0;\n    ` }\n\n    opacity: 0.4;\n    border-radius: 4px;\n    ${props => props.isInactive ? '' : css`\n        /* background-color: #ebf1e2; */\n        opacity: 1;\n    ` }\n    ${props => !props.isAnytime ? '' : css`\n        opacity: 1;\n    ` }\n    box-sizing: border-box;\n    padding: 4px;\n    transition: background-color 100ms;\n    ${props => !props.isActive ? '' : css`\n        background-color: #e4c9df;\n        border: solid 1px #00000049;\n        box-shadow: 0 0 8px 0 #000b3a48;\n    `}\n    ${props => !props.isRange ? '' : css`\n        background-color: #80d4e2;\n        box-shadow: 0 0 8px 0 #000b3a48;\n    `}\n`;\n\nconst _Operations = styled.div``;\nconst _OperationItem = styled.div``;\n\nconst _Wrap = styled.div<{\n    // 選択可能か\n    isSelectable: boolean;\n    isActive: boolean;\n    isInactive: boolean;\n    isAdditional: boolean;\n}>`\n    display: inline-block;\n    position: relative;\n    height: ${ELEMENT_HEIGHT}px;\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\n    box-sizing: border-box;\n    /* margin: 10px 5px 5px 5px; */\n    border-bottom: 1px solid #47438678;\n    margin-bottom: 4px;\n    vertical-align: top;\n    /* width: 1px; */\n    transition: width 500ms, opacity 300ms;\n    /* border: 1px solid #00000015; */\n    ${props => props.isInactive || !props.isAdditional ? '' : css`\n        /* background-color: #e8ff9549; */\n        background: linear-gradient(to bottom, transparent,transparent,transparent, #ffffff9e);\n    `}\n\n    & ${_Operations} {\n        display: none;\n        position: absolute;\n        z-index: 5;\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\n        height: 44px;\n        /* background-color: #0000ff11; */\n        top: ${35}px;\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\n\n        /* background-color: #0400d84e; */\n        & ${_OperationItem} {\n            display: inline-block;\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\n            background-color: #ebebeb6e;\n            border: 1px solid #818181;\n            margin: 1px 0;\n            font-size: 15px;\n            font-weight: 600;\n            text-align: center;\n            color: #818181;\n            box-sizing: border-box;\n            line-height: 15px;\n\n            &:hover {\n                background-color: #fffb0b9d\n            }\n        }\n    }\n\n    &:hover {\n        ${props => !props.isSelectable ? '' : css<{\n    isActive: boolean;\n}>`\n            & ${_Form} {\n                ${props => props.isActive ? '' : css`background-color: #ffffff9b;`}\n                opacity: 1;\n            }\n            & ${_Operations} {\n                display: inline-block;\n            }\n        `}\n    }\n`;\n\nconst _CurKey = styled.div``;\nconst _Head = styled.div`\n    display: inline-block;\n    /* position: relative; */\n    width: 100%;\n    height: ${ELEMENT_HEAD_WIDTH}px;\n    /* background-color: #eca8813b; */\n\n    & ${_CurKey} {\n        display: inline-block;\n        position: absolute;\n        top: -2px;\n        left: 10px;\n        width: 50px;\n        font-size: 12px;\n        color: #ca0000;\n        /* background-color: #fff; */\n    }\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (cacheList.length === chordList.length) {\r\n        for (let i = 0; i < cacheList.length; i++) {\r\n            list.push(\r\n                <ScoreElement key={list.length}\r\n                    index={i}\r\n                    element={chordList[i]}\r\n                    state={store.scoreState}\r\n                    setState={dispatcher.score.setScoreState}\r\n                />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {list}\r\n            {/* <_Frame> */}\r\n            {/* <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note> */}\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    /* overflow: auto; */\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #d8d8d8;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    state.distIndex = state.focusIndex;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 46px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #97cce0dd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #929292;\r\n    /* border-radius: 20px 20px 20px 20px; */\r\n    border-radius: 2px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 25px;\r\n        font-size: 18px;\r\n        /* font-weight: 600; */\r\n        color: #4d4d4d;\r\n        /* background-color: #0000003a; */\r\n        line-height: 22px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 21px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #adadad39; */\r\n        line-height: 20px;\r\n    }\r\n`;","import { on } from \"stream\";\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\nimport { DetailChord } from \"../redux/store/score/scoreData\";\nimport { Store } from \"../redux/store/store\";\nimport BackingUtil from \"./backingUtil\";\nimport CacheUtil from \"./cacheUtil\";\nimport { getKeyIndexFromPitcher, getNormalizeLenFromNotes } from \"./melodyUtil\";\nimport TheoryUtil from \"./theoryUtil\";\n\nnamespace HarmonizeUtil {\n\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\n        const state = store.scoreState;\n        // const sampler = store.instruments.sampler;\n        const cacheList = state.elementCacheList;\n        const chordList = store.scoreData.chordList;\n        const reserveTasks = store.reserveTasks;\n        let firstTime = -1;\n        const update = () => {\n            // if (store.invalidate.harmonize) {\n            //     store.invalidate.harmonize();\n            // }\n            dispatcher.score.setScoreState(state);\n        }\n        // const reserveTasks = store.reserveTasks;\n        // const init = chordList[0].detail as DetailInit;\n        const adjsut = 0;\n        for (let i = state.focusIndex; i < chordList.length; i++) {\n            const cache = cacheList[i];\n            const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\n            const element = chordList[i];\n\n            /**\n             * 要素の切り替わり時の処理をタスクに追加する\n             * @param callback 実行する処理\n             */\n            const addProgAction = (callback: () => void) => {\n                reserveTasks.push(\n                    setTimeout(() => {\n                        callback();\n                    }, cache.pastSecond - firstTime - adjsut)\n                );\n            }\n\n            if (element.type === 'chord') {\n                const detail = element.detail as DetailChord;\n                // 開始時のノーツの位置（時間）を保存する。\n                if (firstTime === -1) {\n                    firstTime = cache.pastSecond;\n                }\n\n                // コードが指定されてい場合\n                if (detail.root == null) {\n                    addProgAction(()=> {\n                        state.focusIndex = i;\n                        state.distIndex = state.focusIndex;\n                        update();\n                    });\n                }\n\n                // バッキングエラーがない場合\n                if (!chordCache.backingError) {\n                    const backing = detail.backing;\n                    const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\n\n                    // const chordTime = 60 / cache.bpm * len;\n\n                    const minute = detail.minute.head + detail.minute.tail;\n                    const chordTime = TheoryUtil.calcSustainMsec(\n                        detail.beatLen,\n                        minute,\n                        cache.bpm,\n                        cache.beatSignature\n                    );\n\n                    addProgAction(()=> {\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\n                        state.focusIndex = i;\n                        state.distIndex = state.focusIndex;\n                        setTimeout(() => {\n                            update();\n                        }, 0);\n                    });\n                } else {\n                    // バッキングエラーがある場合プレビューを止める\n                    reserveTasks.push(\n                        setTimeout(() => {\n                            HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\n                        }, (cache.pastSecond - firstTime - adjsut))\n                    );\n                }\n            }\n\n            // 終端の要素を処理\n            if (i === chordList.length - 1) {   \n                addProgAction(()=> {\n                    HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\n                });\n            }\n        }\n\n        // メロディを再生\n        if (!state.isSolo) {\n            previewMelody(firstTime / 1000, store, dispatcher, reserveTasks);\n        }\n\n        state.isPreview = true;\n        update();\n    }\n\n    const previewMelody = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\n\n        const state = store.melodyState;\n        const scoreState = store.scoreState;\n        const data = store.scoreData;\n        const instrument = store.instruments.melodyFont;\n\n        const update = store.invalidate.melody as () => void;\n        let firstTime = -1;\n        for (let i = 0; i < data.notesList.length; i++) {\n            const notes = data.notesList[i];\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\n            const pos = getNormalizeLenFromNotes(notes.pos);\n            const len = getNormalizeLenFromNotes(notes.len);\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\n\n            if (posTime < start) continue;\n\n            // 開始時のノーツの位置（時間）を保存する。\n            if (firstTime === -1) {\n                // ノーツ非選択時は先頭から流す\n                if (state.focusIndex === -1) {\n                    firstTime = 0;\n                } else {\n                    firstTime = posTime;\n                }\n            }\n\n            const pitch = notes.pitchIndex;\n            // const time = 60 / bpm * pos;\n\n            const keyIndex = getKeyIndexFromPitcher(pitch);\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\n\n            reserveTasks.push(\n                setTimeout(() => {\n                    // state.mouseState.curChord = searchCurChord(store, i);\n\n                    // dispatcher.tune.setState(state);\n                    dispatcher.melody.adjustScrollX();\n                    if (instrument != null) {\n                        instrument.stop();\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\n                    }\n                    setTimeout(() => {\n                        state.focusIndex = i;\n                        state.destIndex = state.focusIndex;\n                        update();\n                    }, 0);\n                }, (posTime - start) * 1000)\n            );\n\n            // 終端ノーツの処理\n            // if (i === data.notesList.length - 1) {\n            //     reserveTasks.push(\n            //         setTimeout(() => {\n            //             stopPreview(store, dispatcher, reserveTasks);\n            //         }, (posTime - start + lenTime) * 1000)\n            //     );\n            // }\n        }\n    }\n\n    // ハーモニーのプレビューを停止する。\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\n        const state = store.scoreState;\n        state.isPreview = false;\n        // store.instruments.sampler.releaseAll();\n        // state.focusIndex = state.lastFocus;\n        reserveTasks.forEach(id => clearTimeout(id));\n        dispatcher.system.setReserveTasks([]);\n        dispatcher.score.setScoreState(state);\n\n        store.instruments.harmonyFont?.stop();\n    }\n\n    // 選択中の要素のバッキングパターンを鳴らす\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\n\n        const state = store.scoreState;\n        const reserveTasks = store.reserveTasks;\n        const cache = state.elementCacheList[state.focusIndex];\n        const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\n        const curChord = store.scoreData.chordList[state.focusIndex];\n        if (curChord != null) {\n\n            const detail = curChord.detail as DetailChord;\n\n            if (detail.root == null) return;\n\n            // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\n            // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\n            // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\n\n            const backing = detail.backing;\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\n            // const chordTime = 60 / cache.bpm * len;\n\n            const minute = detail.minute.head + detail.minute.tail;\n            const chordTime = TheoryUtil.calcSustainMsec(\n                detail.beatLen,\n                minute,\n                cache.bpm,\n                cache.beatSignature\n            );\n\n            BackingUtil.playBacking(store, store.reserveTasks, cache, backing, pitchList, chordTime);\n\n            reserveTasks.push(setTimeout(() => {\n                state.isPreview = false;\n                dispatcher.score.setScoreState(state);\n            }, chordTime));\n            state.isPreview = true;\n            dispatcher.score.setScoreState(state);\n        }\n    }\n}\n\nexport default HarmonizeUtil;\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\nimport { Store } from \"../../../../../redux/store/store\";\nimport { KeyboardEvent } from \"react\";\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\nimport BackingUtil from \"../../../../../utils/backingUtil\";\nimport { ChordBacking } from \"../../../../../redux/store/score/scoreData\";\nimport DataUtil from \"../../../../../utils/dataUtil\";\nimport { NoteKeySwitch } from \"../../../../../redux/store/score/scoreState\";\n\nnamespace BackingEditorInput {\n\n    export const main = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\n\n        const config = store.userEnv.keyConfig.note;\n        const keySwitch = store.scoreState.keySwitch;\n        // alert(e.key);\n        // alert(config.nextElement);\n\n        const data = store.scoreData;\n        const state = store.backingState;\n\n        if (state == null) return;\n\n        if (!state.isPreview) {\n            edit(e, state, keySwitch, dispatcher);\n        } else {\n\n            switch (e.key) {\n                case ' ': {\n                    BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\n                }\n                    break;\n            }\n        }\n    }\n\n    const edit = (e: KeyboardEvent, state: BackingState.Editor, keySwitch: NoteKeySwitch, dispatcher: Dispatcher) => {\n\n        const pattern = state.pattern;\n\n        // 共通処理\n        common(e, state, dispatcher);\n\n        if (pattern != null) {\n            if (pattern.channelIndex === -1) {\n                patternNormalMode(e, state, pattern, dispatcher);\n            } else {\n                patternDetailMode(e, state, pattern, keySwitch.sustainMode, dispatcher);\n            }\n        }\n    }\n\n    const common = (e: KeyboardEvent, state: BackingState.Editor, dispatcher: Dispatcher) => {\n\n        switch (e.key) {\n            case 'b': {\n                // dispatcher.backing.closeBackingEditor();\n                state.closeAction(state, false);\n            }\n                break;\n            case 'z': {\n                const voicingList = BackingUtil.getVoicingListFromTable(state.voicingTable);\n                const pattern = state.pattern == null ? null : BackingUtil.buildPatternProps(state.pattern);\n                const test: ChordBacking = { voicingList, pattern };\n                console.log('voicingList: ' + DataUtil.gZip(JSON.stringify(voicingList)));\n                console.log('pattern: ' + DataUtil.gZip(JSON.stringify(pattern)));\n                console.log('source: ' + DataUtil.gZip(JSON.stringify(test)));\n                console.log('source: ' + JSON.stringify(test));\n            }\n                break;\n            case ' ': {\n                if (!state.hasError) {\n                    dispatcher.backing.testBacking();\n                }\n            }\n                break;\n            case 'Enter': {\n                // dispatcher.backing.mappingEditorToScore();\n                // dispatcher.backing.closeBackingEditor();\n                state.closeAction(state, true);\n            }\n                break;\n        }\n    }\n\n    /**\n     * パターン編集の通常モード\n     * @param e \n     * @param state \n     * @param pattern \n     * @param dispatcher \n     */\n    const patternNormalMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, dispatcher: Dispatcher) => {\n\n        const update = () => dispatcher.backing.setState(state);\n        switch (e.key) {\n            case 'ArrowLeft': {\n                dispatcher.backing.movePatternColumn(false);\n            }\n                break;\n            case 'ArrowRight': {\n                dispatcher.backing.movePatternColumn(true);\n            }\n                break;\n            case 'ArrowUp': {\n                dispatcher.backing.incrementVel(1);\n            }\n                break;\n            case 'ArrowDown': {\n                dispatcher.backing.incrementVel(-1);\n            }\n                break;\n            case 'a': {\n                dispatcher.backing.addPatternColumn();\n            }\n                break;\n            case 'w': {\n                dispatcher.backing.switchLayer();\n            }\n                break;\n            case 'e': {\n                dispatcher.backing.switchMode();\n            }\n                break;\n            case '1': {\n                dispatcher.backing.setCurrentDivRate(16);\n            }\n                break;\n            case '2': {\n                dispatcher.backing.setCurrentDivRate(8);\n            }\n                break;\n            case '3': {\n                dispatcher.backing.setCurrentDivRate(4);\n            }\n                break;\n            case '4': {\n                dispatcher.backing.setCurrentDivRate(2);\n            }\n                break;\n            case '5': {\n                dispatcher.backing.setCurrentDivRate(1);\n            }\n                break;\n            case '.': {\n                dispatcher.backing.toggleCurrentDivHalf();\n            }\n                break;\n            case 'Delete': {\n                dispatcher.backing.deleteColumn();\n            }\n                break;\n            case 's': {\n                pattern.channelIndex = 0;\n                update();\n            }\n                break;\n        }\n    }\n\n    /**\n     * パターン編集の詳細モード\n     * @param e \n     * @param state \n     * @param pattern \n     * @param isEdit \n     * @param dispatcher \n     */\n    const patternDetailMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, isEdit: boolean, dispatcher: Dispatcher) => {\n\n        const update = () => dispatcher.backing.setState(state);\n        if (!isEdit) {\n            switch (e.key) {\n                case 'ArrowLeft': {\n                    dispatcher.backing.movePatternColumn(false);\n                }\n                    break;\n                case 'ArrowRight': {\n                    dispatcher.backing.movePatternColumn(true);\n                }\n                    break;\n                case 'ArrowUp': {\n                    dispatcher.backing.moveChannelIndex(false);\n                }\n                    break;\n                case 'ArrowDown': {\n                    dispatcher.backing.moveChannelIndex(true);\n                }\n                    break;\n                case 's': {\n                    pattern.channelIndex = -1;\n                    update();\n                }\n                    break;\n                case 'a': {\n                    const curNotes = dispatcher.backing.getNotes();\n\n                    const hasStaccato = () => {\n                        const layer = pattern.layers[pattern.layerIndex];\n                        const search = layer.table.find((record) => {\n                            const cell = record[pattern.lenIndex];\n                            if (cell != null && cell.signal === 's') return cell;\n                        });\n                        return search != undefined;\n                    }\n                    // 同列にスタッカートがある場合、スタッカートを設定\n                    const signal = !hasStaccato() ? 'n' : 's';\n                    const notes: BackingState.NoteStatus | null = curNotes == null ? { signal, timing: 0, velAdj: 0 } : null;\n                    dispatcher.backing.setNotes(notes);\n                    dispatcher.backing.updateErrorState();\n                }\n                    break;\n            }\n        } else {\n\n            const layer = pattern.layers[pattern.layerIndex];\n            const baseVel = layer.velocityList[pattern.lenIndex];\n            const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\n            const cell = layer.table[channelIndex][pattern.lenIndex];\n\n            if (cell != null) {\n                let tempTiming = cell.timing == undefined ? 0 : cell.timing;\n                let tempVelAdj = cell.velAdj == undefined ? 0 : cell.velAdj;\n                const vel = baseVel + tempVelAdj;\n                switch (e.key) {\n                    case 'ArrowUp': {\n                        if (vel < 10) {\n                            tempVelAdj++;\n                        }\n                    }\n                        break;\n                    case 'ArrowDown': {\n                        if (vel > 1) {\n                            tempVelAdj--;\n                        }\n                    }\n                        break;\n                    case 'ArrowLeft': {\n                        if (tempTiming > -10) {\n                            tempTiming--;\n                        }\n                    }\n                        break;\n                    case 'ArrowRight': {\n                        if (tempTiming < 10) {\n                            tempTiming++;\n                        }\n                    }\n                        break;\n                }\n                if (tempVelAdj !== 0) {\n                    cell.velAdj = tempVelAdj;\n                } else {\n                    delete cell.velAdj;\n                }\n                if (tempTiming != 0) {\n                    cell.timing = tempTiming;\n                } else {\n                    delete cell.timing;\n                }\n                update();\n            }\n        }\n    }\n}\nexport default BackingEditorInput;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\nimport { ChordBacking } from \"../../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\nimport { NoteKeySwitch } from \"../../../../../redux/store/score/scoreState\";\r\n\r\nnamespace LibraryEditorInput {\r\n\r\n    export const main = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const data = store.scoreData;\r\n        switch (e.key) {\r\n            case ' ': {\r\n            } break;\r\n            case 'e': {\r\n                dispatcher.score.closeLibraryWnd();\r\n            } break;\r\n        }\r\n    }\r\n\r\n}\r\nexport default LibraryEditorInput;","import styled, { css } from \"styled-components\";\r\n\r\nexport namespace SideFormStyles {\r\n\r\n    export const ___CSS_FORM = css`\r\n        display: inline-block;\r\n        /* width: 100px; */\r\n        height: 25px;\r\n        background-color: #bdbdbd;\r\n        border: 1px solid #000;\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        color: #303030;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        text-align: center;\r\n    `;\r\n\r\n    export const ___CSS_TITLE = css`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 26px;\r\n        /* background-color: #f0f0f0; */\r\n        background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n        border: 1px solid #222222;\r\n        font-size: 20px;\r\n        color: #ffffff;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        box-sizing: border-box;\r\n        /* border: 1px solid #c50000; */\r\n        text-align: center;\r\n    `;\r\n\r\n    export const createNumberForm = (value: number, isEnable: boolean,\r\n         onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n         min: number, max:number, step:number) => {\r\n\r\n        return (\r\n            <_NumberForm isEnable={isEnable}>\r\n                <input\r\n                    type=\"number\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"range\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </_NumberForm>\r\n        );\r\n    }\r\n\r\n    const _NumberForm = styled.div<{\r\n        isEnable: boolean;\r\n    }>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 55px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 5px;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n    `;\r\n}","import { stat } from \"fs\";\nimport { KeyboardEvent } from \"react\";\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\nimport { Store } from \"../../../../../redux/store/store\";\nimport DataUtil from \"../../../../../utils/dataUtil\";\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\nimport BackingEditorInput from \"./backingEditorInput\";\nimport LibraryEditorInput from \"./libraryEditorInput\";\nimport { NoteBasicInput } from \"./noteBasicInput\";\n\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\n\n    const config = store.userEnv.keyConfig.note;\n    const keySwitch = store.scoreState.keySwitch;\n    // alert(e.key);\n    // alert(config.nextElement);\n\n    const data = store.scoreData;\n    const state = store.scoreState;\n    const curType = data.chordList[state.focusIndex].type;\n    const isElement = curType !== 'init'\n\n\n    // プレビュー再生時\n    if (state.isPreview) {\n        switch (e.key) {\n            case ' ': {\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\n            }\n                break;\n        }\n        return;\n    } else {\n        switch (store.scoreState.hideMenu) {\n            case 'none': {\n                if (isElement) {\n                    if (keySwitch.control) {\n                        switch (e.key) {\n                            case 'c': {\n                                const element = data.chordList[state.focusIndex];\n                                if (element.type === \"chord\") {\n                                    const detail = element.detail as DetailChord;\n                                    if (detail.root != null) {\n                                        dispatcher.score.cloneBacking();\n                                    }\n                                }\n                            }\n                                break;\n                            case 'x': {\n                                dispatcher.score.copyElementList();\n                            }\n                                break;\n                            case 'v': {\n                                if (state.copiedElementList != null) {\n                                    dispatcher.score.pasteElementList();\n                                } else if (state.cloneBacking != null) {\n\n                                    const element = data.chordList[state.focusIndex];\n                                    if (element.type === \"chord\") {\n                                        const detail = element.detail as DetailChord;\n                                        if (detail.root != null) {\n                                            dispatcher.score.pastBacking();\n                                        }\n                                    }\n                                }\n                            }\n                                break;\n                            case 's': {\n                                dispatcher.score.saveFile();\n                                // DataUtil.saveFile(JSON.stringify(data), state);\n                            }\n                                break;\n                        }\n                    } else if (keySwitch.distMode) {\n                        switch (e.key) {\n                            case 'ArrowLeft': {\n                                dispatcher.score.moveDist(false);\n                            }\n                                break;\n                            case 'ArrowRight': {\n                                dispatcher.score.moveDist(true);\n                            }\n                                break;\n                        }\n                    } else if (keySwitch.sustainMode) {\n                        switch (e.key) {\n                            case config.decRoot: {\n                                dispatcher.score.incrementDegreeRoot(false);\n                            }\n                                break;\n                            case config.incRoot: {\n                                dispatcher.score.incrementDegreeRoot(true);\n                            }\n                                break;\n                            case config.decBeat: {\n                                dispatcher.score.incrementBeatLen(false);\n                            }\n                                break;\n                            case config.incBeat: {\n                                dispatcher.score.incrementBeatLen(true);\n                            }\n                                break;\n                        }\n                    } else if (keySwitch.minHeadMode) {\n                        switch (e.key) {\n                            case 'ArrowLeft': {\n                                dispatcher.score.incrementMinuteValRelation(false, 1);\n                            }\n                                break;\n                            case 'ArrowRight': {\n                                dispatcher.score.incrementMinuteValRelation(false, -1);\n                            }\n                                break;\n                        }\n                    } else if (keySwitch.minTailMode) {\n                        switch (e.key) {\n                            case 'ArrowLeft': {\n                                dispatcher.score.incrementMinuteValRelation(true, -1);\n                            }\n                                break;\n                            case 'ArrowRight': {\n                                dispatcher.score.incrementMinuteValRelation(true, 1);\n                            }\n                                break;\n                        }\n                    } else if (keySwitch.chordMode) {\n                        // switch (e.key) {\n                        //     case 'ArrowUp': {\n                        //         dispatcher.symbol.toNext(false);\n                        //     }\n                        //         break;\n                        //     case 'ArrowDown': {\n                        //         dispatcher.symbol.toNext(true);\n                        //     }\n                        //         break;\n                        //     case 'ArrowLeft': {\n                        //         dispatcher.symbol.toBase();\n                        //     }\n                        //         break;\n                        //     case 'ArrowRight': {\n                        //         dispatcher.symbol.toDerive();\n                        //     }\n                        //         break;\n                        // }\n                    } else if (keySwitch.symbolMode) {\n                        switch (e.key) {\n                            case 'ArrowUp': {\n                                dispatcher.symbol.toNext(false);\n                            }\n                                break;\n                            case 'ArrowDown': {\n                                dispatcher.symbol.toNext(true);\n                            }\n                                break;\n                            case 'ArrowLeft': {\n                                dispatcher.symbol.toBase();\n                            }\n                                break;\n                            case 'ArrowRight': {\n                                dispatcher.symbol.toDerive();\n                            }\n                                break;\n                        }\n                    } else {\n                        NoteBasicInput(e, store, dispatcher);\n                    }\n                }\n            } break;\n            case 'backing': {\n                BackingEditorInput.main(e, store, dispatcher);\n            } break;\n            case 'library': {\n                LibraryEditorInput.main(e, store, dispatcher);\n            }\n        }\n    }\n}\n\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\n\n    const state = store.scoreState;\n    if (!state.isPreview) {\n        // if (state.hideMenu === 'none') {\n        const config = store.userEnv.keyConfig.note;\n        const keySwitch = store.scoreState.keySwitch;\n        // alert(e.key);\n        // alnfig.nextElement);\n        switch (e.key) {\n            case 'Control': {\n                keySwitch.control = isPress;\n                dispatcher.score.setKeySwitch(keySwitch);\n            }\n                break;\n            case config.distMode: {\n                if (!keySwitch.control) {\n                    keySwitch.distMode = isPress;\n                    dispatcher.score.setKeySwitch(keySwitch);\n                }\n            }\n                break;\n            case config.edit1: {\n                if (!(keySwitch.control || keySwitch.distMode)) {\n                    keySwitch.sustainMode = isPress;\n                    dispatcher.score.setKeySwitch(keySwitch);\n                }\n            }\n                break;\n            case 'v': {\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode)) {\n                    keySwitch.chordMode = isPress;\n                    dispatcher.score.setKeySwitch(keySwitch);\n                }\n            }\n                break;\n            case config.edit2: {\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode)) {\n                    keySwitch.symbolMode = isPress;\n                    dispatcher.score.setKeySwitch(keySwitch);\n                }\n            }\n                break;\n            case 'd': {\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode)) {\n                    keySwitch.minHeadMode = isPress;\n                    dispatcher.score.setKeySwitch(keySwitch);\n                }\n            }\n                break;\n            case 'g': {\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode || keySwitch.minHeadMode)) {\n                    keySwitch.minTailMode = isPress;\n                    dispatcher.score.setKeySwitch(keySwitch);\n                }\n            }\n                break;\n        }\n        // }\n    }\n    if (isPress) {\n        NoteKeyDown(e, store, dispatcher);\n    }\n\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const element = data.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n    const curType = element.type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.openLibraryWnd();\r\n                    // dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                }\r\n                    break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(cache.scale, Number(e.key) - 1);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.left: {\r\n            if (state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(false);\r\n            } else {\r\n                dispatcher.score.releaseRange(false);\r\n            }\r\n        }\r\n            break;\r\n        case config.right: {\r\n            if (state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(true);\r\n            } else {\r\n                dispatcher.score.releaseRange(true);\r\n            }\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.up: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.down: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'm': {\r\n            dispatcher.score.addAlterElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case ' ': {\r\n            // if (!chordCache.backingError) {\r\n                HarmonizeUtil.previewStart(store, dispatcher);\r\n            // }\r\n        }\r\n            break;\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BeatSignature, DetailAlter as DetailAlter, AlterType, ModulateRelation, TempoRelation } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormAlter = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailAlter;\r\n\r\n    const type = detail.alterType;\r\n\r\n    const update = () => {\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const createAlertTypeItem = (value: AlterType | '-', isActive: boolean): JSX.Element => {\r\n        const type = value === '-' ? null : value;\r\n        return <_Form isActive={isActive}\r\n            onClick={() => {\r\n                //値が変わった時のみ処理を実行\r\n                if (detail.alterType !== type) {\r\n                    detail.alterType = type;\r\n                    // 全ての項目を初期化\r\n                    detail.modRel = null;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    detail.tempoRel = null;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    detail.beatSignature = '4/4';\r\n                    update();\r\n                }\r\n            }}> {value}</_Form >;\r\n    }\r\n\r\n    const createModulateRelationItem = (value: ModulateRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'modulate' && rel == detail.modRel}\r\n            onClick={() => {\r\n                if (detail.modRel !== rel) {\r\n                    detail.modRel = rel;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createTempoRelationItem = (value: TempoRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'tempo' && rel == detail.tempoRel}\r\n            onClick={() => {\r\n                if (detail.tempoRel !== rel) {\r\n                    detail.tempoRel = rel;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createBeatItem = (value: BeatSignature): JSX.Element => {\r\n        return <_Form isActive={detail.alterType === 'beat' && detail.beatSignature === value}\r\n            onClick={() => {\r\n                if (detail.beatSignature !== value) {\r\n                    detail.beatSignature = value;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const donmmItemJsxList = <_ParamDiv isEnable={detail.modRel === 'domm'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'domm' && value == detail.dommVal}\r\n            onClick={() => {\r\n                detail.dommVal = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>\r\n    })}</_ParamDiv>;\r\n\r\n    const keyAdjItemJsxList = <_ParamDiv isEnable={detail.modRel === 'key'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'key' && value == detail.keyAdj}\r\n            onClick={() => {\r\n                detail.keyAdj = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>;\r\n    })}</_ParamDiv>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Group isEnable={true}>\r\n                <_CategoryLabel>Type</_CategoryLabel>\r\n                {createAlertTypeItem('-', type == null)}\r\n                {createAlertTypeItem('modulate', type === 'modulate')}\r\n                {createAlertTypeItem('tempo', type === 'tempo')}\r\n                {createAlertTypeItem('beat', type === 'beat')}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'modulate'}>\r\n                <_CategoryLabel>Modulate</_CategoryLabel>\r\n                {createModulateRelationItem('-')}\r\n                {createModulateRelationItem('domm')}\r\n                {donmmItemJsxList}\r\n                {createModulateRelationItem('parallel')}\r\n                {createModulateRelationItem('relative')}\r\n                {createModulateRelationItem('key')}\r\n                {keyAdjItemJsxList}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'tempo'}>\r\n                <_CategoryLabel>Tempo</_CategoryLabel>\r\n                {createTempoRelationItem('-')}\r\n                {createTempoRelationItem('diff')}\r\n                {SideFormStyles.createNumberForm(detail.tempoDiff,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'diff',\r\n                    (e) => {\r\n                        detail.tempoDiff = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, -100, 100, 1)}\r\n                {createTempoRelationItem('rate')}\r\n                {SideFormStyles.createNumberForm(detail.tempoRate,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'rate',\r\n                    (e) => {\r\n                        detail.tempoRate = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n                {createTempoRelationItem('abs')}\r\n                {SideFormStyles.createNumberForm(detail.tempoAbs,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'abs',\r\n                    (e) => {\r\n                        detail.tempoAbs = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'beat'}>\r\n                <_CategoryLabel>Beat</_CategoryLabel>\r\n                {createBeatItem('2/4')}\r\n                {createBeatItem('4/4')}\r\n                {createBeatItem('3/4')}\r\n                {createBeatItem('6/8')}\r\n                {createBeatItem('9/8')}\r\n                {createBeatItem('12/8')}\r\n            </_Group>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormAlter;\r\n\r\nconst _Wrap = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        background-color: #b3b5c5;\r\n        `;\r\n\r\nconst _Group = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 0 0 0 4px;\r\n    ${props => props.isEnable ? '' : css`\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n`}\r\n        `;\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        margin-top: 1px;\r\n        width: 100%;\r\n        background-color: #c1cdd4;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\nconst _ParamDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n        margin: 1px;\r\n        background-color: #070707;\r\n        ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n        `;\r\nconst _ParamItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        width: 29px;\r\n        background-color: #dddddd;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\n\r\nconst _ValueForm = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 24px;\r\n        /* margin: 5px 0 0 0; */\r\n        text-align: left;\r\n        background-color: #ececec;\r\n\r\n        & * {\r\n            display: inline-block;\r\n            box-sizing: border-box;\r\n            vertical-align: top;\r\n    }\r\n        & input:nth-child(1) {\r\n            background-color: #dddddd;\r\n            width: 60px;\r\n            height: calc(100% - 4px);\r\n            margin: 2px 0 0 0;\r\n            border: 1px solid #9b9b9b;\r\n            border-radius: 4px;\r\n    }\r\n        & input:nth-child(2) {\r\n            margin-left: 5px;\r\n            background-color: #f00;\r\n            width: calc(100% - 70px);\r\n            height: 100%;\r\n    }\r\n        `;","import styled, { css } from \"styled-components\";\r\n\r\nconst JUDGE_INFO_LIST: {\r\n    value: number, label: string\r\n}[] = [\r\n        { value: -2, label: '-/8' },\r\n        { value: -1, label: '-/16' },\r\n        { value: 0, label: '±0' },\r\n        { value: 1, label: '+/16' },\r\n        { value: 2, label: '+/8' }\r\n    ];\r\n\r\nexport const MinuteForm = (props: {\r\n    isHead: boolean;\r\n    value: number;\r\n    setValue: (value: number) => void;\r\n}) => {\r\n\r\n    const rateMinus = props.value >= 0 ? 0 : Math.abs(props.value) * 50;\r\n    const ratePlus = props.value <= 0 ? 0 : Math.abs(props.value) * 50;\r\n\r\n    const createJudgeItem = (key: number, value: number, label: string) => {\r\n        const isActive = props.value === value;\r\n        return (\r\n            <_JudgeItem key={key} isActive={isActive} onClick={() => props.setValue(value)} >\r\n                {!isActive ? '' : label}\r\n            </_JudgeItem>\r\n        )\r\n    }\r\n    const isRed = Math.abs(props.value) === 1;\r\n\r\n    const JudgeJsxList = JUDGE_INFO_LIST.map((judge, i) => {\r\n        return createJudgeItem(i, judge.value, judge.label);\r\n    });\r\n\r\n    return (\r\n        <_Wrap isHead={props.isHead}>\r\n            <_View>\r\n                <_ViewFrame isLeft={true} isRed={isRed} rate={!props.isHead ? rateMinus : ratePlus}><div /></_ViewFrame>\r\n                <_ViewFrame isLeft={false} isRed={isRed} rate={!props.isHead ? ratePlus : rateMinus}><div /></_ViewFrame>\r\n            </_View>\r\n            <_Judge>{!props.isHead ? JudgeJsxList : JudgeJsxList.reverse()}</_Judge>\r\n        </_Wrap>\r\n    );\r\n};\r\n\r\nexport default MinuteForm;\r\n\r\nconst _Wrap = styled.div<{\r\n    isHead: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #bfd380;\r\n    text-align: left;\r\n`;\r\nconst _Judge = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 9;\r\n`;\r\n\r\nconst _JudgeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(20% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    background-color: #0000001a;\r\n    /* border: 1px solid #4d4d4d91; */\r\n    border-radius: 4px;\r\n    ${props => !props.isActive ? '' : css`\r\n        border: 1px solid #c00000c5;\r\n    `}\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    /* opacity: 0.15; */\r\n    &:hover {\r\n        background-color: #ffffff24;\r\n    }\r\n`;\r\nconst _View = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    /* position: absolute;\r\n    top: 0;\r\n    left: 0; */\r\n    z-index: 8;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ViewFrame = styled.div<{\r\n    isRed: boolean;\r\n    isLeft: boolean;\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 16px;\r\n    margin-top: 7px;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n\r\n    & div {\r\n        position: absolute;\r\n        top: 0;\r\n        height: 100%;\r\n        width: ${props => props.rate}%;\r\n        ${props => props.isRed ? css`\r\n            background: linear-gradient(to right, #0066ff, #7691a3);\r\n        ` : css`\r\n            background: linear-gradient(to left, #ff0000, #a37676);\r\n        `}\r\n        ${props => props.isLeft ? css`\r\n            right: 0;\r\n            border-radius: 10px 0 0 10px;\r\n        ` : css`\r\n            left: 0;\r\n            border-radius: 0 10px 10px 0;\r\n        `}\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\nimport MinuteForm from \"./minuteForm\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\n\r\n/**\r\n * コードブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i}\r\n                isExist={isExist}\r\n                isActive={detail.beatLen === i + 1}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    data.chordList = data.chordList.slice();\r\n                    detail.beatLen = (i + 1);\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.DEGREE_ALL.forEach((degree, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(degree);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(degree);\r\n        const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n        const isDiatonic = degree != null && scaleIndexies.includes(degree.index);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={isDiatonic}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || degree == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = degree == null ? null : { ...degree };\r\n                    if (degree == null) {\r\n                        detail.symbolKey = 'major';\r\n                    }\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n\r\n                    // キャッシュの更新\r\n                    const root = detail.root as TheoryUtil.DegreeProps;\r\n                    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                    [chordCache.chordFullName, chordCache.structList] =\r\n                        BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = degree == null ? null : { ...degree };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n\r\n                        // キャッシュの更新\r\n                        const root = detail.root as TheoryUtil.DegreeProps;\r\n                        const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                        [chordCache.chordFullName, chordCache.structList] =\r\n                            BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                        dispatcher.score.setScoreState(state);\r\n                    }\r\n                }}\r\n            >\r\n                {degree == null ? '-' : <>\r\n                    {TheoryUtil.getDegreeRoot(degree)} ({TheoryUtil.getRootName(degree, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    /**\r\n     * シンコペーションの入力フォームを生成するコールバック\r\n     * @param isHead 頭対象フラグ（falseの場合後ろが対象）\r\n     * @returns JSX\r\n     */\r\n    const createMinuteForm = (isHead: boolean): JSX.Element => {\r\n        const minute = detail.minute;\r\n        const [value, setValue]: [number, (value: number) => void] = isHead ? [\r\n            minute.head,\r\n            (value: number) => {\r\n                // minute.head = value;\r\n                // dispatcher.score.setScoreData(store.scoreData);\r\n                const adjust = value - minute.head;\r\n                dispatcher.score.incrementMinuteValRelation(false, adjust);\r\n            }\r\n        ] : [\r\n            minute.tail,\r\n            (value: number) => {\r\n                // minute.tail = value;\r\n                // dispatcher.score.setScoreData(store.scoreData);\r\n                const adjust = value - minute.tail;\r\n                dispatcher.score.incrementMinuteValRelation(true, adjust);\r\n            }\r\n        ];\r\n        return <MinuteForm value={value} setValue={setValue} isHead={isHead} />\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_CategoryLabel>{'Beat length'}</_CategoryLabel>\r\n                <_BeatDiv>\r\n                    {beatItemsJsx}\r\n                </_BeatDiv>\r\n                <_Minute>\r\n                    <_CategoryLabel>{'Minute head'}</_CategoryLabel>\r\n                    {createMinuteForm(true)}\r\n                    {/* <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                    <_CategoryLabel>{'Minute tail'}</_CategoryLabel>\r\n                    {createMinuteForm(false)}\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    {/* <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_RootDiv>\r\n                    {rootItemsJsx}\r\n                </_RootDiv>\r\n                <_SymbolDiv\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_SymbolDiv>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 100px; */\r\n    text-align: left;\r\n    background-color: #979797;\r\n`;\r\n\r\nconst _BeatDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 3px;\r\n        width: calc(100% - 6px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isActive ? '' : css`\r\n            /* border: solid 1px #fff; */\r\n        `}\r\n        box-sizing: border-box;\r\n        border-radius: 6px;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    margin-top: 5px;\r\n    width: 100%;\r\n    /* height: 360px; */\r\n    text-align: left;\r\n    /* background-color: #000000; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _RootDiv = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    margin: 0 0 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #e6e6e6; */\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #90bbcc;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #d1c521b8;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    color: #616161;\r\n    ${props => !props.isDiatonic ? '' : css`color: #ffffff;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #99999940;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #cc6363b8;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #6374ccb8;`}\r\n    }\r\n`;\r\n\r\nconst _SymbolDiv = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 93px);\r\n    margin: 0 1px 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    background-color: #a1cc90;\r\n    ${props => !props.isActive ? '' : css`background-color: #d1c521b8;`}\r\n    color: #fff;\r\n    ${props => !props.isDiatonic ? '' : css`color: #fff;`}\r\n    /* & span {\r\n        color: #f000;\r\n    } */\r\n    &:hover {\r\n        background-color: #dddddd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #cc6363b8;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const update = () => {\r\n        data.chordList = data.chordList.slice();\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const scaleItemJsxList: JSX.Element[] = TheoryUtil.SCALE_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? TheoryUtil.KEY12_MAJOR_SCALE_LIST : TheoryUtil.KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n    const rateItemJsxList: JSX.Element[] = TheoryUtil.BEAT_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.beatSignature === item} onClick={() => {\r\n                detail.beatSignature = item as BeatSignature;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            {SideFormStyles.createNumberForm(detail.bpm, true, (e) => {\r\n                detail.bpm = e.currentTarget.valueAsNumber;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }, 30, 220, 1)}\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 50%;\r\n    margin: 1px 0 0 0;\r\n\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 100%;\r\n    margin: 1px 0 0 0;\r\n    \r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    margin: 1px 0 0 0;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../../utils/dummyUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        DummyUtil.SECTION_CATEGORY.forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        const splitList = detail.labelName.split(' ');\r\n        DummyUtil.SECTION_NO.forEach((item) => {\r\n            const isActive = splitList[splitList.length - 1] === item.toString();\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(`${splitList[0]} ${item}`);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_SelectDiv>\r\n                <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n                <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n            </_SelectDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #b89b9b; */\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _SelectDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    background-color: #acacac;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(60% - 4px);\r\n    margin: 0 2px 0 2px;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(40% - 2px);\r\n    margin: 0 2px 0 0;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #6182b4; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #61b4b0; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormAlter from \"./sideFormAlter\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst HarmSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'alter': return <SideFormAlter />;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../../../../../redux/store/score/scoreCache\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\n\r\nconst TIP_COUNT = 14;\r\n\r\nconst StructViewer = (props: {\r\n    cache: ScoreCache.Element;\r\n    structList: BackingState.StructInfo[];\r\n}) => {\r\n    const cache = props.cache;\r\n    const structList = props.structList;\r\n    const indexList = structList.map(struct => struct.soundIndex + struct.adjustOctave * 12);\r\n    const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n    const scaleList = scaleIndexies.map(value => (cache.keyIndex + value) % 12);\r\n\r\n    const structJsxList: JSX.Element[] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n\r\n        // 2オクターブ分表示\r\n        for (let i = 0; i < TIP_COUNT; i++) {\r\n            // 下の段（白鍵のチップ）\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = indexList.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            // 上の段（黒鍵のチップ）\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = indexList.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return structJsxList;\r\n    }, [indexList]);\r\n\r\n    return (\r\n        <_Wrap isUse={indexList.length > 0}>\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default StructViewer;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    /* border: 1px solid #ffffffda; */\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    ` : css`\r\n    background: radial-gradient(#d6cec3, #a89889);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    ` : css`\r\n        background: radial-gradient(#e7a144, #72552a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternDetail = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    /** 基準となるベロシティ */\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cell = layer.table[channelIndex][pattern.lenIndex];\r\n    const baseVel = layer.velocityList[pattern.lenIndex];\r\n    const timing = (cell == null || cell.timing == undefined) ? 0 : cell.timing;\r\n    const velAdj = (cell == null || cell.velAdj == undefined) ? 0 : cell.velAdj;\r\n\r\n    return (<_Wrap>\r\n        {\r\n            // ノーツが設定されていない場合は何も表示しない\r\n            cell == null ? <></> : (<>\r\n                <_DelayDiv>\r\n                    <_Label>delay</_Label>\r\n                    <_TimingValue type=\"range\" min={-10} max={10} step={1} value={timing} onChange={e => {\r\n                        cell.timing = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_DelayDiv>\r\n                <_VelocityDiv>\r\n                    <_Label>velocity</_Label>\r\n                    <_VelFrame isFocus={false}>\r\n                        <_VelItem value={baseVel} isEdit={false}/>\r\n                    </_VelFrame>\r\n                    <_VelFrame isFocus={store.scoreState.keySwitch.sustainMode}>\r\n                        <_VelItem value={baseVel + velAdj} isEdit={velAdj != 0} />\r\n                    </_VelFrame>\r\n                    {/* <_Value type=\"range\" min={-10} max={10} step={1} value={velAdj} onChange={e => {\r\n                        cell.velAdj = Number(e.target.value);\r\n                        update();\r\n                    }} /> */}\r\n                </_VelocityDiv>\r\n            </>)\r\n        }\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternDetail;\r\n\r\nconst VEL_DIV_WIDTH = 180;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    line-height: 18px;\r\n    margin-top: 14px;\r\n    margin-left: 5px;\r\n    width: 80px;\r\n    background-color: #868686;\r\n    color: #e7e7e7;\r\n    border: 1px solid #616161;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DelayDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - ${VEL_DIV_WIDTH + 1}px);\r\n    height: 100%;\r\n    background-color: #9c9c9c;\r\n`;\r\n\r\nconst _TimingValue = styled.input<{\r\n}>`\r\n    display: inline-block;\r\n    outline: none;\r\n    margin: 20px 0 0 8px;\r\n    width: calc(100% - 100px);\r\n    height: 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VelocityDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${VEL_DIV_WIDTH}px;\r\n    height: 100%;\r\n    margin-left: 1px;\r\n    /* background-color: #9a2020; */\r\n`;\r\n\r\nconst _VelFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 46px;\r\n    height: 100%;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffffff17;\r\n    `}\r\n    /* background-color: #63a0a1;\r\n    border-radius: 20px; */\r\n`;\r\n\r\nconst _VelItem = styled.div<{\r\n    value: number;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 5px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #ddc35cae;\r\n    `}\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate * adjustRate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {itemJsxList}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternPedal = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    // 左手のレイヤー時のみ固定表示\r\n    const layer = pattern.layers[0];\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n\r\n    let cur: BackingState.PedalAction = 'off';\r\n    pattern.pedalActs.forEach((pedal, i) => {\r\n        const isActive = pattern.layerIndex === 0 && pattern.lenIndex === i;\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n        let isUse = false;\r\n        const prev = cur;\r\n        if (prev === 'change') {\r\n            cur = 'on';\r\n        }\r\n        if (pedal != null) {\r\n            isUse = true;\r\n            cur = pedal;\r\n        }\r\n        itemJsxList.push(\r\n            <_Column key={i} rate={rate} isActive={isActive} isUse={isUse} onClick={() => {\r\n                if (prev === 'off') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'on'; break;\r\n                        case 'on': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'on') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = 'change'; break;\r\n                        case 'change': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'change') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                }\r\n                // 終端までnullで更新\r\n                if (i < pattern.pedalActs.length - 1) {\r\n                    for (let j = i + 1; j < pattern.pedalActs.length; j++) {\r\n                        pattern.pedalActs[j] = null;\r\n                    }\r\n                }\r\n                update();\r\n            }}><div><_Item action={cur} /></div></_Column>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternPedal;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n    /* background-color: #4e4e4e; */\r\n`;\r\n\r\n\r\nconst _Column = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #00635eac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #179483ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    white-space: normal;\r\n\r\n    &>div {\r\n        display: inline-block;\r\n        width: 10px;\r\n        height: calc(100% - 2px);\r\n        background-color: #ffffffa0;\r\n        border-radius: 6px;\r\n        margin: 1px 0;\r\n        ${props => props.isUse ? '' : css`\r\n            background-color: #ffffff2f;\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    action: BackingState.PedalAction;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 14px;\r\n    border: 1px solid #9c9c9c;\r\n    ${props => {\r\n        switch (props.action) {\r\n            case 'off': return css`\r\n                margin-top: 0;\r\n                background-color: #271db8;\r\n            `;\r\n            case 'change': return css`\r\n                margin-top: 15px;\r\n                background-color: #f3d631;\r\n            `;\r\n            case 'on': return css`\r\n                margin-top: 30px;\r\n                background-color: #e03030;\r\n            `;\r\n        }\r\n    }}\r\n    box-sizing: border-box;\r\n    border-radius: 6px;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n    const curLayer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n    const layerJsxList = useMemo(() => {\r\n\r\n        const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n        pattern.layers.forEach((layer, j) => {\r\n\r\n            const jsxLsit: JSX.Element[] = [];\r\n            for (let i = 0; i < channelCount; i++) {\r\n                const notesJsxLsit: JSX.Element[] = [];\r\n\r\n                layer.noteDivList.forEach((note, k) => {\r\n                    // データ上は下から数えるため、表示のループは逆回転する\r\n                    const channelIndex = (channelCount - 1) - i;\r\n                    const isActive = pattern.layerIndex === j && pattern.lenIndex === k;\r\n                    const cell = layer.table[channelIndex][k];\r\n                    const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                    const isUse = cell != null;\r\n                    // 前面にあるレイヤーのみエラー判定をする\r\n                    const isError = pattern.layerIndex !== j ? false :\r\n                        isUse && BackingUtil.checkOverlapBackLayer(pattern.layers, j, channelIndex, k);\r\n                    const isEdit = isActive && pattern.channelIndex === i;\r\n                    let rate = note.rate * adjustRate;\r\n                    if (note.isDot) rate /= 1.5;\r\n                    if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n                    let viewSignal: BackingState.NoteSignal | null = null;\r\n                    if (cell != null) {\r\n                        viewSignal = cell.signal;\r\n                        if (k > 0) {\r\n                            const prevCell = layer.table[channelIndex][k - 1];\r\n                            if (prevCell != null && prevCell.signal === 't') {\r\n                                viewSignal = 't';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const hasStaccato = () => {\r\n                        const search = layer.table.find((record) => {\r\n                            const cell = record[k];\r\n                            if (cell != null && cell.signal === 's') return cell;\r\n                        });\r\n                        return search != undefined;\r\n                    }\r\n                    notesJsxLsit.push(\r\n                        <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                            <_State\r\n                                // isUse={isUse}\r\n                                isError={isError}\r\n                                signal={viewSignal}\r\n                                isBack={pattern.layerIndex !== j}\r\n                                // クリック\r\n                                onClick={() => {\r\n                                    if (cell == null) {\r\n                                        // 同列にスタッカートがある場合、スタッカートを設定\r\n                                        const signal = !hasStaccato() ? 'n' : 's';\r\n                                        setNotesStatus({ signal, timing: 0, velAdj: 0 });\r\n                                    } else {\r\n                                        setNotesStatus(null);\r\n                                    }\r\n                                    curLayer.table = curLayer.table.slice();\r\n                                    update();\r\n                                    dispatcher.backing.updateErrorState();\r\n                                }}\r\n                                // 右クリック\r\n                                onContextMenu={() => {\r\n                                    pattern.channelIndex = i;\r\n                                    pattern.lenIndex = k;\r\n                                    update();\r\n                                }}\r\n                            />\r\n                        </_Notes>\r\n                    );\r\n                });\r\n                jsxLsit.push(\r\n                    <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                        {notesJsxLsit}\r\n                    </_Record>\r\n                );\r\n            }\r\n            layerJsxList[j] = jsxLsit;\r\n        });\r\n        return layerJsxList;\r\n    }, [\r\n        pattern.channels, pattern.layerIndex, pattern.lenIndex,\r\n        curLayer.noteDivList, curLayer.table, pattern.channelIndex\r\n    ]);\r\n\r\n    // 選択中のレイヤーを表に表示する\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    // isUse: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => props.signal == null ? '' : css<{\r\n    isBack: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n}>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        ${props => props.signal !== 's' ? '' : css`\r\n            border-radius: 8px;\r\n            background: linear-gradient(to bottom, #009e0d, #02fc49, #009e0d);\r\n        `}\r\n        ${props => props.signal !== 't' ? '' : css`\r\n            height: calc(100% - 8px);\r\n            margin: 4px 0 0 1px;\r\n            background: linear-gradient(to bottom, #9e4c00, #fc6a02, #9e4c00);\r\n        `}\r\n        // エラーあり\r\n        ${props => !props.isError ? '' : css`\r\n            opacity: 0.5;\r\n        `}\r\n        // 裏面のレイヤー\r\n        ${props => !props.isBack ? '' : css`\r\n            background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.5;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => props.signal == null ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternVelocity = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.velocityList.forEach((vel, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} >\r\n                <_Value value={vel} />\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternVelocity;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #001763ac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #173494ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Value = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 6px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    /* background-color: #5cceddaf; */\r\n    background: linear-gradient(to right, #00949e, #26dcf4, #00949e);\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternDetail from \"./patternDetail\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternPedal from \"./patternPedal\";\r\nimport PatternTable from \"./patternTable\";\r\nimport PatternVelocity from \"./patternVelocity\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const divs = layer.noteDivList;\r\n    const limitLen = BackingUtil.getLimitLen(chordInfo.beatLen, chordInfo.minute, chordInfo.init.beatSignature);\r\n    const useTotalLen = BackingUtil.getUsingLenFromDivs(divs, chordInfo.init.beatSignature);\r\n    const isLenOverError = 0 <= limitLen - useTotalLen;\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const viewRate = NOTES_1BAR_WIDTH / 4;\r\n\r\n    // メモリの数を算出\r\n    let memoriCount = chordInfo.beatLen * beatProps.beatMemoriCount;\r\n    memoriCount += chordInfo.minute.head + chordInfo.minute.tail;\r\n\r\n    const barMemoriCount = beatProps.beatMemoriCount === 4 ? 16 : 24;\r\n    const memoriWidth = NOTES_1BAR_WIDTH / barMemoriCount;\r\n    // メモリJSXの生成\r\n    const memoriJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < memoriCount + 1; i++) {\r\n        const pos = i;\r\n        let bean: { thickness: number, height: number, color: string } = { thickness: 1, height: 10, color: '#555' };\r\n        if (beatProps.beatMemoriCount === 4) {\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        } else {\r\n            switch (true) {\r\n                case pos % 24 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 6 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        }\r\n        memoriJsxList.push(\r\n            <_Memori\r\n                key={memoriJsxList.length}\r\n                width={memoriWidth}\r\n                height={bean.height}\r\n                color={bean.color}\r\n                thickness={bean.thickness}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n                <_MemoriList>{memoriJsxList}</_MemoriList>\r\n                {isLenOverError ? (\r\n                    <_ChordLenLine pos={limitLen * viewRate} />\r\n                ) : (\r\n                    // 定義した拍を超えた場合のみ表示\r\n                    <_OverCover pos={limitLen * viewRate} width={(useTotalLen - limitLen) * viewRate} />\r\n                )}\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n            {pattern.channelIndex === -1 ?\r\n                // ベロシティorペダル情報を表示\r\n                (pattern.mode === 'velocity' ? <PatternVelocity /> : <PatternPedal />) :\r\n                // セルごとの詳細情報を表示\r\n                <PatternDetail />\r\n            }\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\nconst _MemoriList = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    thickness: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.thickness}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _OverCover = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: ${props => props.width}px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #f8000053;\r\n    pointer-events: none;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;\r\n\r\nconst _ChordLenLine = styled.div<{\r\n    pos: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: 4px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #ffffffc7;\r\n`;","import { useContext } from \"react\";\r\nimport { Player } from \"soundfont-player\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    soundfont: Player | null;\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n    const channelCount = pattern.channels.length;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length + 1);\r\n        pattern.channelIndex = -1;\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length - 1);\r\n        pattern.channelIndex = -1;\r\n        update();\r\n    }\r\n\r\n    const preview = () => {\r\n        if (props.soundfont != null) {\r\n            props.soundfont.play(props.soundFullName, 0, { duration: 1 });\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap isError={props.soundFullName === '-'}>\r\n            <_Struct onClick={preview}>{props.soundFullName}</_Struct>\r\n            <_Option isEnable={channelCount > 1} onClick={deleteRecord}>-</_Option>\r\n            <_Option isEnable={channelCount < BackingUtil.CHANNEL_MAX} onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ff0000c3;\r\n    `}\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)<{\r\n    isEnable: boolean;\r\n}>`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    \r\n`;","import { useContext } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport ChannelItem from \"./channelItem\";\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\nimport { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\n\nconst PatternChannel = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const state = store.backingState as BackingState.Editor;\n    const chordInfo = state.chordInfo;\n    // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\n    // const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\n\n    const channelJsxList: JSX.Element[] = [];\n    const layerJsxList: JSX.Element[] = [];\n\n    if (state.pattern == null) return <></>;\n\n    const pattern = state.pattern as BackingState.Pattern;\n    const channels = pattern.channels;\n    channels.forEach((channel, i) => {\n        let name = '-';\n        if (channel.octave !== -1) {\n            const structInfo = chordInfo.structList[channel.structIndex];\n            const soundIndex = structInfo.soundIndex;\n            const octave = channel.octave + structInfo.adjustOctave;\n            const keyList = !structInfo.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\n            name = keyList[soundIndex % 12] + octave;\n        }\n        channelJsxList.push(\n            <ChannelItem key={i}\n                soundfont={store.instruments.harmonyFont}\n                index={i}\n                soundFullName={name}\n            />\n        );\n    });\n\n    pattern.layers.forEach((layer, i) => {\n        const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\n        layerJsxList.push(\n            <_LayerItem key={i} isActive={pattern.layerIndex === i}\n                onClick={() => {\n                    if (i !== pattern.layerIndex) {\n                        dispatcher.backing.switchLayer();\n                    }\n                }}\n            >{labelName}</_LayerItem>\n        );\n    });\n\n    return (<>\n        <_Header>\n            {layerJsxList}\n        </_Header>\n        <_Body>\n            {channelJsxList}\n        </_Body>\n        <_Footer>\n            <_ModeItem isActive={pattern.mode === 'velocity'}\n                onClick={() => {\n                    pattern.mode = 'velocity';\n                    dispatcher.backing.setState(state);\n                }}\n            >Velocity</_ModeItem>\n            <_ModeItem isActive={pattern.mode === 'pedal'}\n                onClick={() => {\n                    pattern.mode = 'pedal';\n                    dispatcher.backing.setState(state);\n                }}\n            >Pedal</_ModeItem>\n        </_Footer>\n    </>);\n}\n\nexport default PatternChannel;\n\nconst _Header = styled.div`\n    /* display: inline-block; */\n    width: 100%;\n    height: ${PATTERN_HEADER_HEIGHT}px;\n    background-color: #929292;\n`;\n\nconst _LayerItem = styled.div<{\n    isActive: boolean;\n}>`\n    display: inline-block;\n    height: 22px;\n    width: calc(100% - 4px);\n    margin: 2px 0 0 2px;\n    box-sizing: border-box;\n    text-align: center;\n    \n    font-size: 14px;\n    font-weight: 600;\n    color: #3b3b3b;\n    line-height: 20px;\n    background-color: #b8b8b8;\n    border: 1px solid #7a7a7a;\n    border-radius: 2px;\n\n    ${proops => !proops.isActive ? '' : css`\n        background-color: #dad600;\n        color: #c40000;\n    `}\n\n    &:hover {\n        background-color: #d4d4d4;\n    }\n`;\n\nconst _Body = styled.div`\n/* display: inline-block; */\n    width: 100%;\n    height: ${PATTERN_BODY_HEIGHT}px;\n    background-color: #97d3cec8;\n`;\nconst _Footer = styled.div`\n/* display: inline-block; */\n    width: 100%;\n    height: ${PATTERN_FOOTER_HEIGHT}px;\n    background-color: #898997;\n`;\n\n\nconst _ModeItem = styled.div<{\n    isActive: boolean;\n}>`\n    display: inline-block;\n    height: 22px;\n    width: calc(100% - 4px);\n    margin: 2px 0 0 2px;\n    box-sizing: border-box;\n    text-align: center;\n    \n    font-size: 14px;\n    font-weight: 600;\n    color: #3b3b3b;\n    line-height: 20px;\n    background-color: #b8b8b8;\n    border: 1px solid #7a7a7a;\n    border-radius: 2px;\n\n    ${proops => !proops.isActive ? '' : css`\n        background-color: #4fe419;\n        color: #c40000;\n    `}\n\n    &:hover {\n        background-color: #d4d4d4;\n    }\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternOptions = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        layer.noteDivList = layer.noteDivList.slice();\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, isEnable: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={isEnable} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, true, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const isPermit3ren = ['2/4', '4/4', '4/3'].includes(chordInfo.init.beatSignature);\r\n    const isPermitDot = BackingUtil.isPermitDot(cur);\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot,\r\n            isPermitDot,\r\n            () => {\r\n                cur.isDot = !cur.isDot;\r\n                update();\r\n            })}\r\n        {createItem('1/3', cur.div3 === 1,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 1) cur.div3 = 0;\r\n                else cur.div3 = 1;\r\n                update();\r\n            })}\r\n        {createItem('2/3', cur.div3 === 2,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 2) cur.div3 = 0;\r\n                else cur.div3 = 2;\r\n                update();\r\n            })}\r\n    </_WrapLen>;\r\n\r\n    /** テーブルの行 */\r\n    const tableRecord = layer.table[channelIndex];\r\n    const curCell = pattern.channelIndex === -1 ? null :\r\n        tableRecord[pattern.lenIndex];\r\n\r\n    const isEnableTai = () => {\r\n        if(tableRecord == null) return false;\r\n\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 's') return cell;\r\n        });\r\n        const hasStaccato = search != undefined;\r\n        let isExistNext = false;\r\n        if(pattern.lenIndex < tableRecord.length - 1 && tableRecord[pattern.lenIndex + 1] != null) {\r\n            isExistNext = true;\r\n        }\r\n        return !hasStaccato && isExistNext;\r\n    };\r\n\r\n    const isNormalRow = () => {\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 't') return cell;\r\n        });\r\n        return search == undefined;\r\n    };\r\n\r\n    const setRowStaccato = (isSet: boolean) => {\r\n        layer.table.forEach((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null) {\r\n                cell.signal = isSet ? 's' : 'n';\r\n            }\r\n        });\r\n    }\r\n\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', curCell == null,\r\n            true,\r\n            () => {\r\n                tableRecord[pattern.lenIndex] = null;\r\n                update();\r\n            })}\r\n        {createItem('□', curCell != null && curCell.signal === 'n',\r\n            true,\r\n            () => {\r\n                if (curCell != null) {\r\n                    if(curCell.signal === 's') {\r\n                        setRowStaccato(false);\r\n                    } else {\r\n                        curCell.signal = 'n';\r\n                    }\r\n                } else {\r\n                    tableRecord[pattern.lenIndex] = { signal: 'n', timing: 0, velAdj: 0 };\r\n                }\r\n                update();\r\n            })}\r\n        {createItem('・', curCell != null && curCell.signal === 's',\r\n            curCell != null && isNormalRow(),\r\n            () => {\r\n                setRowStaccato(true);\r\n                update();\r\n            })}\r\n        {createItem('⁀', curCell != null && curCell.signal === 't',\r\n            isEnableTai(),\r\n            () => {\r\n                const status = curCell as BackingState.NoteStatus;\r\n                status.signal = 't'\r\n                update();\r\n            })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternOptions;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\nimport { useContext } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\nimport BackingUtil from \"../../../utils/backingUtil\";\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\nimport { GlobalContext } from \"../../entry/systemEntry\";\nimport PatternBuilder from \"./builder/patternBuilder\";\nimport PatternChannel from \"./channel/patternChannel\";\nimport PatternOptions from \"./patternOptions\";\n\n/**\n * バッキングエディタ画面のパターン部分\n * @returns コンポーネント\n */\nconst PatternFrame = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const state = store.backingState as BackingState.Editor;\n    const chordInfo = state.chordInfo;\n\n    const isUsePattern = state.pattern != null;\n\n    const update = () => {\n        dispatcher.backing.setState(state);\n    }\n\n    /**\n     * USEスイッチ押下時の処理\n     */\n    const useSwitchAction = () => {\n        if (!isUsePattern) {\n            const table = state.voicingTable as boolean[][];\n            const voicingStructs = BackingUtil.buildChannels(table);\n            const channels = BackingUtil.getChannels(voicingStructs, 1);\n            state.pattern = {\n                layerIndex: 0,\n                lenIndex: 0,\n                channelIndex: -1,\n                channels,\n                isUsePedal: false,\n                mode: \"velocity\",\n                pedalActs: [null],\n                layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\n            } as BackingState.Pattern;\n            update();\n        } else {\n            state.pattern = null;\n            update();\n        }\n    }\n\n    return (\n        <_Wrap>\n            {/* ヘッダー部分（パターン利用スイッチ） */}\n            <_Header>\n                <_UseSwitch>\n                    <_Label>Pattern</_Label>\n                    <_Button\n                        isActive={isUsePattern}\n                        onClick={useSwitchAction}\n                    >Use</_Button>\n                </_UseSwitch>\n            </_Header>\n            <_Main isActive={isUsePattern}>\n                {!isUsePattern ? <></> : (<>\n                    <_StatusDiv><PatternOptions /></_StatusDiv>\n                    <_MainDiv>\n                        <_ChannelDiv>\n                            <PatternChannel />\n                        </_ChannelDiv>\n                        <_BuilderDiv>\n                            <PatternBuilder />\n                        </_BuilderDiv>\n                    </_MainDiv>\n                </>)}\n            </_Main>\n        </_Wrap>\n    )\n}\n\nexport default PatternFrame;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    width: 100%;\n    /* height: 300px; */\n    background-color: #001279;\n\n    & *{\n        /* display: inline-block;\n        width: 100%; */\n    }\n`;\n\nconst _Header = styled.div`\n    height: 30px;\n    background-color: #a5d1c3;\n`;\n\n\nconst _Label = styled.div``;\nconst _UseSwitch = styled.div`\n    display: inline-block;\n    width: 200px;\n    height: 100%;\n    /* background-color: #7986d1; */\n\n    & * {\n        display: inline-block;\n        height: calc(100% - 4px);\n        margin-top: 2px;\n        box-sizing: border-box;        \n    }\n\n    & ${_Label} {\n        width: 80px;\n        font-size: 20px;\n        color: #f1fffb;\n        font-weight: 600;\n        /* background-color: #00000028; */\n        margin: 2px 2px 0 2px;\n        line-height: 22px;\n        text-align: center;\n    }\n`;\n\nconst _Button = styled.div<{\n    isActive: boolean;\n}>`\n    width: 100px;\n    font-size: 20px;\n    color: white;\n    font-weight: 600;\n    background-color: #ff008023;\n    border: solid 1px #555;\n    border-radius: 4px;\n    line-height: 20px;\n    text-align: center;\n\n    ${props => !props.isActive ? '' : css`\n        /* background-color: #b1dfc979; */\n        color: #e00000;\n    `}\n\n    &:hover {\n        background-color: #ff008039;\n    }\n`;\n\nconst _Main = styled.div<{\n    isActive: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    overflow: hidden;\n    height: ${PATTERN_FRAME_HEIGHT}px;\n    ${props => props.isActive ? '' : css`\n        height: 0;\n    `}\n    transition: height 100ms;\n`;\n\nconst _StatusDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: ${PATTERN_STATUS_HEIGHT}px;\n    background-color: #8d98d4;\n    text-align: left;\n`;\n\nconst _MainDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    background-color: #d48d8d;\n\n    /* & *{\n        display: inline-block;\n        height: 100%;\n    } */\n`;\n\nconst _ChannelDiv = styled.div`\n    display: inline-block;\n    width: 100px;\n    background-color: #ff0000;\n    vertical-align: top;\n`;\n\nconst _BuilderDiv = styled.div`\n    display: inline-block;\n    width: calc(100% - 100px);\n    background-color: #76af90;\n    vertical-align: top;\n`;","\nimport { useContext, useMemo } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\nimport BackingUtil from \"../../../utils/backingUtil\";\nimport TheoryUtil from \"../../../utils/theoryUtil\";\nimport { GlobalContext } from \"../../entry/systemEntry\";\n\n/**\n * ボイシングを定義するテーブルのコンポーネント\n * @returns コンポーネント\n */\nconst VoicingChooser = () => {\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const state = store.backingState as BackingState.Editor;\n    const table = state.voicingTable;\n    const pattern = state.pattern;\n    // 選択可能なチャンネル数\n    const channelLimitNum = pattern == null ? BackingUtil.OCTAVE_NUM * BackingUtil.STRUCT_NUM : pattern.channels.length;\n\n    // return useMemo(() => {\n\n    const chordInfo = state.chordInfo;\n    const structList = chordInfo.structList;\n\n    const rowJsxList: JSX.Element[] = [];\n\n    /** 選択数 */\n    let selectCount = 0;\n    // オクターブ（テーブル横）のループ\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\n        const cellJsxList: JSX.Element[] = [];\n        // 構成音（テーブル縦）のループ\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\n            let isEnable: boolean = structList.length > j;\n            let isSelected: boolean = table[i][j];\n            if (isSelected) {\n                selectCount++;\n            }\n\n            /** セルに表示する音程 */\n            const getSoundFullName = (): string => {\n                if (!isEnable) return '';\n                // const relation = symbol.structs[j];\n                // const interval = TheoryUtil.IntervalRelationProps[relation];\n                // const structIndex = (chordRootIndex + interval) % 12;\n                const sound = structList[j];\n                const octave = i + sound.adjustOctave;\n\n                const key12List = !sound.isFlat ?\n                    TheoryUtil.KEY12_SHARP_LIST :\n                    TheoryUtil.KEY12_FLAT_LIST\n                    ;\n                return `${key12List[sound.soundIndex]}${octave}`;\n            }\n\n            const name = getSoundFullName();\n            cellJsxList.push(\n                <_Cell key={j}\n                    isEnable={isEnable}\n                    isSelected={isSelected}\n                    isOver={isSelected && selectCount > channelLimitNum}\n                    onClick={() => {\n                        table[i][j] = !isSelected;\n                        if (pattern != null) {\n                            const voicingStructs: BackingState.ChannelParam[] = BackingUtil.buildChannels(table);\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\n                        }\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\n                        dispatcher.backing.updateErrorState();\n                    }}\n                    onContextMenu={() => {\n                        const soundfont = store.instruments.harmonyFont;\n                        if (soundfont != null) {\n                            soundfont.play(name, 0, { duration: 1 });\n                        }\n                    }}\n                >\n                    {name}\n                </_Cell>\n            );\n        }\n        rowJsxList.push(\n            <_TableRow key={i}>\n                {cellJsxList}\n            </_TableRow>\n        );\n    }\n\n    /** 構成音リストのJSX */\n    const structJsxList = structList.map((sound, i) => {\n        const key12List = !sound.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\n\n        /** 表示する構成音の関係性 */\n        const getStructName = (): string => {\n            if (sound.relation == null) {\n                // オンコードの場合\n                return 'On';\n            } else if (sound.relation === 'p1') {\n                // ルート音の場合\n                return 'Root';\n            }\n            return sound.relation;\n        }\n        return (\n            <_StructItem key={i}\n                isOnChord={sound.relation == null}\n            >{getStructName()} [{key12List[sound.soundIndex]}]</_StructItem>\n        );\n    });\n\n    return (\n        <_Wrap>\n            {/* コードの基本情報 */}\n            <_InfoDiv>\n                <_InfoItem>\n                    <_Label>Chord</_Label>\n                    <_Value>{chordInfo.chordFullName}</_Value>\n                </_InfoItem>\n                <_InfoItem>\n                    <_Label>Attr</_Label>\n                    {/* <_Value>{symbol.attr}</_Value> */}\n                    <_Value>{chordInfo.symbolAttr}</_Value>\n                </_InfoItem>\n            </_InfoDiv>\n            <_EditorDiv>\n                {/* 構成音の情報 */}\n                <_StructDiv>\n                    {structJsxList}\n                </_StructDiv>\n                {/* ボイシングのテーブル */}\n                <_TableDiv>{rowJsxList}</_TableDiv>\n            </_EditorDiv>\n        </_Wrap>\n    );\n    // }, [table, channelLimitNum]);\n}\n\nexport default VoicingChooser;\n\nconst TIP_WIDTH = 60;\nconst TIP_HEIGHT = 22;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    width: 600px;\n`;\n\nconst _InfoDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 30px;\n    background-color: #338f8f;\n`;\n\nconst _InfoItem = styled.div`\n    display: inline-block;\n    width: 50%;\n    height: 100%;\n    /* background-color: #89dada; */\n`;\n\nconst _Label = styled.div`\n    display: inline-block;\n    margin-top: 4px;\n    margin-left: 5px;\n    height: calc(100% - 8px);\n    width: 80px;\n    background-color: #69bcdd;\n    font-size: 18px;\n    line-height: 18px;\n    font-weight: 600;\n    color: #026c86;\n    border: 1px solid #303030;\n    border-radius: 2px;\n    box-sizing: border-box;\n    text-align: center;\n`;\n\nconst _Value = styled.div`\n    display: inline-block;\n    margin-top: 4px;\n    margin-left: 6px;\n    height: calc(100% - 8px);\n    /* background-color: #cccccc; */\n    font-size: 18px;\n    line-height: 18px;\n    font-weight: 600;\n    color: #ffffff;\n`;\n\nconst _EditorDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\n    background-color: #c09e05;\n    border: solid 1px #888;\n    border-radius: 5px;\n    box-sizing: border-box;\n\n    & *{\n        vertical-align: top;\n        height: 100%;\n    }\n`;\n\nconst _StructDiv = styled.div`\n    display: inline-block;\n    width: calc(100% - ${TIP_WIDTH * 8}px);\n    /* width: 100px; */\n    background-color: #8fb5bc;\n`;\n\nconst _StructItem = styled.div<{\n    isOnChord: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 2px);\n    height: ${TIP_HEIGHT}px;\n    margin-top: 1px;\n    /* width: 100px; */\n    /* background-color: #8fb5bc; */\n    color: white;\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\n    ${props => !props.isOnChord ? '' : css`\n        /* color: #e00000; */\n        background: linear-gradient(to bottom, #104f8a, #7699db, #104f8a);\n    `}\n    font-size: 16px;\n    font-weight: 600;\n    padding-left: 5px;\n    box-sizing: border-box;\n`;\n\nconst _TableDiv = styled.div`\n    display: inline-block;\n    background-color: #a7acd8;\n`;\n\nconst _TableRow = styled.div`\n    display: inline-block;\n    width: ${TIP_WIDTH}px;\n    height: 100%;\n    /* margin-left: 1px; */\n    background-color: #a7d8c4;\n    padding-bottom: 2px;\n    box-sizing: border-box;\n`;\n\nconst _Cell = styled.div<{\n    isEnable: boolean;\n    isSelected: boolean;\n    isOver: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 1px);\n    height: ${TIP_HEIGHT}px;\n    margin: 1px 0 0 1px;\n    background-color: #409ca3;\n    border: 1px solid #215e53;\n    border-radius: 4px;\n    color: #01004e;\n    ${props => !props.isSelected ? '' : css`\n        background-color: #e5e747;\n    `}\n    ${props => !props.isOver ? '' : css`\n        background-color: #c40000;\n        color: #ffffff;\n    `}\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.5;\n        pointer-events: none;\n    `}\n    /* border: 1px solid #ffffff; */\n    box-sizing: border-box;\n\n    font-size: 16px;\n    line-height: 20px;\n    font-weight: 600;\n    text-align: center;\n\n    &:hover {\n        background-color: #117dbb;\n        ${props => !props.isSelected ? '' : css`\n            background-color: #b9bb3f;\n        `}\n        ${props => !props.isOver ? '' : css`\n            background-color: #bb3f3f;\n        `}\n    }\n`;\n\n","\nimport { useContext, useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport BackingState from \"../../redux/store/score/backing/backingState\";\nimport BackingUtil from \"../../utils/backingUtil\";\nimport { GlobalContext } from \"../entry/systemEntry\";\nimport PatternFrame from \"./pattern/patternFrame\";\nimport VoicingChooser from \"./voicing/voicingChooser\";\n\n/**\n * バッキングエディタ画面\n * @returns コンポーネント\n */\nconst BackingEditorFrame = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const state = store.backingState as BackingState.Editor;\n\n    useEffect(() => {\n        console.log('backing start');\n    }, []);\n\n    return (\n        <_Wrap>\n            <_PrevireBrind isUse={state.isPreview} />\n            {/* ボイシングエディタ部分 */}\n            <VoicingChooser />\n            {/* パターンエディタ部分 */}\n            <PatternFrame />\n            {/* フッター部分 */}\n            <_FooterDiv>\n                {/* プレビュー再生 */}\n                <_Button isEnable={!state.hasError} onClick={() => {\n\n                    if (!state.isPreview) {\n                        dispatcher.backing.testBacking();\n                    } else {\n                        BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\n                    }\n                }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\n                {/* 編集を取り消しして閉じる */}\n                <_Button isEnable={!state.isPreview} onClick={()=>{\n                    state.closeAction(state, false);\n                }}>Cancel</_Button>\n                {/* 編集を反映して閉じる */}\n                <_Button isEnable={!state.isPreview} onClick={()=>{\n                    state.closeAction(state, true);\n                }}>Update</_Button>\n            </_FooterDiv>\n        </_Wrap>\n    )\n}\n\nexport default BackingEditorFrame;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 600px;\n`;\n\nconst _FooterDiv = styled.div`\n    display: inline-block;\n    height: 30px;\n    width: 100%;\n    /* background-color: #bd4646; */\n    text-align: right;\n`;\n\nconst _Button = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: 100px;\n    height: 26px;\n    margin: 2px 2px 0 0;\n    font-size: 20px;\n    color: white;\n    font-weight: 600;\n    background-color: #0051ff21;\n    border: solid 1px #555;\n    border-radius: 4px;\n    box-sizing: border-box;\n    line-height: 20px;\n    text-align: center;\n\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.5;\n        pointer-events: none;\n    `}\n\n    &:hover {\n        background-color: #ff008039;\n    }\n`;\n\nconst _PrevireBrind = styled.div<{\n    isUse: boolean;\n}>`\n    position: absolute;\n    display: ${props => props.isUse ? 'block' : 'none'};\n    z-index: 80;\n    width: 100%;\n    height: calc(100% - 30px);\n    background-color: #7a270028;\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n/**\r\n * ライブラリセレクタ画面\r\n * @returns コンポーネント\r\n */\r\nconst ThemaSelectorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        console.log('thema start');\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default ThemaSelectorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n    height: 600px;\r\n    background-color: #4d5e53;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/score/scoreData\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ThemaSelectorFrame from \"../../../thema/themaSelectorFrame\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu !== 'none';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const cur = chordList[focusIndex];\r\n    const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n    const isLibraryEnable = isBackingEnable && store.systemState.activeThemaIndex !== -1;\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {(()=>{\r\n                    switch(state.hideMenu) {\r\n                        case 'none': return <></>;\r\n                        case 'backing': return <BackingEditorFrame />\r\n                        case 'library': return <ThemaSelectorFrame />\r\n                    }\r\n                })()}\r\n                {/* {store.backingState == null ? <></> : <BackingEditorFrame />} */}\r\n            </_Contents>\r\n            <_LabelFrame>\r\n                <_Label\r\n                    isEnable={isBackingEnable}\r\n                    isVisible={['backing', 'none'].includes(state.hideMenu)}\r\n                    onClick={() => {\r\n                        if (state.hideMenu === 'none') {\r\n                            dispatcher.backing.openBackingEditor();\r\n                        } else {\r\n                            dispatcher.backing.closeBackingEditor();\r\n                        }\r\n                    }}>\r\n                    <div>Backing</div>\r\n                </_Label>\r\n                <_Label\r\n                    isEnable={isLibraryEnable}\r\n                    isVisible={['library', 'none'].includes(state.hideMenu)}\r\n                    onClick={() => {\r\n                        if (state.hideMenu === 'none') {\r\n                            dispatcher.score.openLibraryWnd();\r\n                        } else {\r\n                            dispatcher.score.closeLibraryWnd();\r\n                        }\r\n                    }}>\r\n                    <div>Library</div>\r\n                </_Label>\r\n            </_LabelFrame>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 7;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 8;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _LabelFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n`;\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n}>`\r\n    display: block;\r\n    width: 25px;\r\n    height: 150px;\r\n    margin-top: 4px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    ${props => props.isVisible ? '' : css`\r\n        opacity: 0;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmClipboard = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    return (\r\n        <_Wrap>\r\n            <_Label>clipboard</_Label>\r\n            <_TypeDiv>\r\n                <_ModeItem isActive={state.cloneBacking != null}>Backing</_ModeItem>\r\n                <_ModeItem isActive={state.copiedElementList != null}>Elements</_ModeItem>\r\n            </_TypeDiv>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default HarmClipboard;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _TypeDiv = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #a8dbb3;\r\n    `}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #8f8f8f;\r\n    border-radius: 2px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst MEMORI_WIDTH = 12;\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        list.push(<_Margin key={list.length} />);\r\n        state.measureCacheList.forEach((cache) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {cache.barCount !== -1 ? <_Bar>{cache.barCount}</_Bar> : ''}\r\n                    {/* {<_Bar>{i}</_Bar>} */}\r\n                </_Memori>\r\n            );\r\n        });\r\n        list.push(<_Margin key={list.length} />);\r\n        return list;\r\n    }, [state.beatCacheList]);\r\n\r\n    const [beatJsxList, minuteJsxList] = useMemo(() => {\r\n        const beatJsxList: JSX.Element[] = [];\r\n        const minuteJsxList: JSX.Element[] = [];\r\n\r\n        const isChordFocus = dataList[focusIndex].type === 'chord';\r\n        const curChordIndex = cacheList[focusIndex].chordIndex;\r\n        // list.push(<_Start key={list.length}/>);\r\n        dataList.forEach((data, i) => {\r\n\r\n            const cache = state.elementCacheList[i];\r\n            if (data.type === 'chord' && Math.abs(cache.chordIndex - curChordIndex) <= 5) {\r\n\r\n                const detail = data.detail as DetailChord;\r\n                const sustain = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                let label = '';\r\n                let type: ItemType = 'ather';\r\n                if (!isChordFocus) {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                } else {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'cur';\r\n                        type = 'cur';\r\n                    } else if (cache.chordIndex === curChordIndex - 1) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                }\r\n\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatMemori = detail.beatLen * beatProps.beatMemoriCount;\r\n                const posMemori = 16 + cache.curTotalMemori;\r\n                beatJsxList.push(\r\n                    <_SustainItem key={beatJsxList.length}\r\n                        type={type}\r\n                        pos={posMemori} sustain={beatMemori + minute}\r\n                    >{label}</_SustainItem>\r\n                );\r\n                minuteJsxList.push(\r\n                    <_BeatItem key={beatJsxList.length}\r\n                        isActive={type === 'cur'}\r\n                        pos={posMemori + detail.minute.head} sustain={beatMemori}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        // list.push(<_Start key={list.length}/>);\r\n        return [beatJsxList, minuteJsxList];\r\n    }, [dataList.length, focusIndex, state.beatCacheList]);\r\n\r\n    const scrollPos = cacheList[focusIndex].curTotalMemori * MEMORI_WIDTH;\r\n    return (\r\n        <_Wrap>\r\n            <_ScrollFrame pos={scrollPos}>\r\n                <_Blocks>\r\n                    <_Beat>\r\n                        {beatJsxList}\r\n                    </_Beat>\r\n                    <_Minute>\r\n                        {minuteJsxList}\r\n                    </_Minute>\r\n                </_Blocks>\r\n                <_Measure>\r\n                    {memoriJsxList}\r\n                </_Measure>\r\n            </_ScrollFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _ScrollFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => -props.pos}px;\r\n    position: absolute;\r\n    height: 100%;\r\n    /* width: 100px;\r\n    background-color: #000; */\r\n    transition: left 0.5s;\r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n`;\r\n\r\ntype ItemType = 'cur' | 'prev' | 'next' | 'ather';\r\nconst _SustainItem = styled.div<{\r\n    pos: number;\r\n    sustain: number;\r\n    type: ItemType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(136, 163, 133);\r\n    ${props => {\r\n        switch (props.type) {\r\n            case 'cur': return css`\r\n                background-color: rgb(218, 107, 134);\r\n                /* color: #ffe551; */\r\n            `;\r\n            case 'prev': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 177, 221);\r\n            `;\r\n            case 'next': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 221, 171);\r\n            `;\r\n            case 'ather': return css`\r\n                background-color: rgb(192, 192, 192);\r\n            `;\r\n        }\r\n    }}\r\n    border-left: solid 1px #000;\r\n    border-top: solid 1px #000;\r\n    border-bottom: solid 1px #000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _BeatItem = styled.div<{\r\n    isActive: boolean;\r\n    pos: number;\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(224, 224, 224);\r\n    border-left: solid 1px #000;\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: rgb(233, 180, 228); */\r\n        /* color: #ffe551; */\r\n    `}\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Margin = styled.div`\r\n    display: inline-block;\r\n    width: ${MEMORI_WIDTH * 16}px;\r\n    height: 100%;\r\n    background-color: #d9ebe7;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${MEMORI_WIDTH}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useState, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\ntype VoicItemProps = {\r\n    dispName: string;\r\n    source: string;\r\n}\r\ntype PattItemProps = {\r\n    dispName: string;\r\n    source: string;\r\n}\r\nconst HarmBackingLibrary = () => {\r\n\r\n    const { store,dispatcher } = useContext(GlobalContext);\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const systemState = store.systemState;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const chord = chordList[focusIndex].detail as DetailChord;\r\n    const cache = store.scoreState.elementCacheList[focusIndex]\r\n    const list = store.systemState.themaList;\r\n\r\n    const thema = systemState.themaList[systemState.activeThemaIndex];\r\n\r\n    // const [patternList, voicingList] = useMemo(()=> {\r\n\r\n    // }, []);\r\n    return (\r\n        <_Wrap>\r\n            <_Label>backing-library</_Label>\r\n            <_Combobox\r\n                value={systemState.activeThemaIndex}\r\n                onChange={(e) => {\r\n                    systemState.activeThemaIndex = Number(e.target.value);\r\n                    dispatcher.system.setState(systemState);\r\n                }}\r\n            >{[<option key={-1} value={-1}>{''}</option>].concat(list.map((thema, i) => {\r\n                const name = thema.themaName;\r\n                return <option key={i} value={i}>{name}</option>\r\n            }))}</_Combobox>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmBackingLibrary;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* vertical-align: top; */\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _Combobox = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    width: 320px;\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 8px;\r\n    font-size: 18px;\r\n    /* line-height: 32px; */\r\n    color: #1100d0;\r\n    border: solid 1px #000;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;","import styled from \"styled-components\";\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\nimport HarmNote from \"./harmNote\";\nimport HarmSections from \"./harmSections\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport { KeyboardEvent, useContext, useEffect, useRef, useState } from \"react\";\nimport { NoteKeySwitch } from \"./input/noteInput\";\nimport HarmSideForm from \"./side/harmSideForm\";\nimport StructViewer from \"./info/structViewer\";\nimport HarmHideFrame from \"./harmHideFrame\";\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\nimport HarmClipboard from \"./initial/harmClipboard\";\nimport HarmMeasure from \"./measure/harmMeasure\";\nimport HarmBackingLibrary from \"./initial/harmBackingLibrary\";\n\n/**\n * ハーモナイズタブ\n * @param props 引数\n * @returns コンポーネント\n */\nconst HarmonizeTab = (props: {\n    isActive: boolean;\n}) => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\n    const [invalidate, setInvalidate] = useState<{}>({});\n\n    const state = store.scoreState;\n\n    const isMelody = store.scoreState.isMelody;\n\n    useEffect(() => {\n        dispatcher.system.setInvalidate({\n            ...store.invalidate, harmonize: () => {\n                dispatcher.system.setInvalidate({\n                    ...store.invalidate, harmoniizeInvalidate: {}\n                });\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n        if (!isMelody) {\n            wrapRef.current.focus();\n        }\n    }, [isMelody]);\n\n\n    const cache = state.elementCacheList[state.focusIndex];\n    const element = store.scoreData.chordList[state.focusIndex];\n    \n    const timelineJsx = state.elementCacheList.length === 0 ? <></> : <HarmMeasure />;\n\n    let structViewerJsx = <></>;\n    if (state.elementCacheList.length > 0) {\n        const scoreCache = state.chordCacheList[cache.chordBlockNo];\n        const structList = element.type === 'chord' ? scoreCache.structList : [];\n        structViewerJsx = <StructViewer cache={cache} structList={structList} />;\n    }\n\n    /** サイドフォームの活性状態 */\n    const sideFormEnable = !state.isPreview && state.hideMenu === 'none';\n    return (\n        <_Wrap\n            tabIndex={999}\n            ref={wrapRef}\n            isActive={props.isActive}\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\n        >\n            <_SectionsDiv isEnable={sideFormEnable}><HarmSections /></_SectionsDiv>\n            <_Left>\n                <_Head isEnable={!state.isPreview}>\n                    <HarmClipboard />\n                    <HarmBackingLibrary />\n                </_Head>\n                <_Middle>\n                    <HarmHideFrame />\n                    <_Main>\n                        <HarmNote />\n                    </_Main>\n                    <_PrevireBrind isUse={state.isPreview} />\n                </_Middle>\n                <_Foot>\n                    <_TIMELINE_WRAP>{timelineJsx}</_TIMELINE_WRAP>\n                    <_INFO_WRAP>{structViewerJsx}</_INFO_WRAP>\n                </_Foot>\n            </_Left>\n            <_Right isEnable={sideFormEnable}>\n                <HarmSideForm />\n            </_Right>\n        </_Wrap>\n    );\n}\nexport default HarmonizeTab;\n\nconst _Wrap = styled.div<{\n    isActive: boolean;\n}>`\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\n    width: 100%;\n    height: 100%;\n    outline: none;\n`;\n\nconst _SectionsDiv = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\n    height: 100%;\n    background-color: #d8d8d8;\n    border-right: 1px solid #3e3f57;\n    box-sizing: border-box;\n    vertical-align: top;\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\n`;\n\nconst _Left = styled.div`\n    display: inline-block;\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH + HARMONIZE_SECTIONS_WIDTH}px);\n    height: 100%;\n    background-color: #c7c7c7;\n    vertical-align: top;\n`;\nconst _Right = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\n    height: 100%;\n    background-color: #d6d6d6;\n    vertical-align: top;\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\n`;\n\nconst _Head = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${HARMONIZE_HEAD_WIDTH}px;\n    background-color: #d4d4d4;\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\n`;\n\nconst _Middle = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\n    background-color: #e0e0e0;\n    overflow: auto;\n    \n    &::-webkit-scrollbar {\n        width: 10px;\n        height: 10px;\n    }\n    &::-webkit-scrollbar-thumb {\n        border-radius: 5px;\n        background: #1959A8;\n    }\n    &::-webkit-scrollbar-track {\n        border-radius: 5px;\n        box-shadow: 0 0 4px #aaa inset;\n    }\n`;\n\nconst _Main = styled.div`\n    position: absolute;\n    margin-left: 25px;\n    width: calc(100% - 25px);\n    min-height: 100%;\n    vertical-align: top;\n    /* overflow: auto; */\n`;\n\nconst _Foot = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: ${HARMONIZE_FOOT_WIDTH}px;\n    background-color: #cacaca;\n    & * {\n        vertical-align: top;\n    }\n`;\nconst _TIMELINE_WRAP = styled.div`\n    display: inline-block;\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\n    height: 100%;\n    /* background-color: #ddc2c2; */\n`;\nconst _INFO_WRAP = styled.div`\n    display: inline-block;\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\n    height: 100%;\n    background-color: #757575;\n`;\n\nconst _PrevireBrind = styled.div<{\n    isUse: boolean;\n}>`\n    position: absolute;\n    display: ${props => props.isUse ? 'block' : 'none'};\n    z-index: 80;\n    width: 100%;\n    height: 100%;\n    background-color: #7a270028;\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyTimelineMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            mouse.lock = x;\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        // if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            if (mouse.pos !== x) {\r\n                // console.log(`★ move=== x: ${x}, pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n                mouse.pos = x;\r\n                update();\r\n            }\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            // update();\r\n\r\n            const lock = mouse.lock + refs.measure.scrollLeft;\r\n            const pos = mouse.pos + refs.measure.scrollLeft;\r\n            const notesList = store.scoreData.notesList;\r\n            let start = -1;\r\n            let end = -1;\r\n            for (let i = 0; i < notesList.length; i++) {\r\n                const notes = notesList[i];\r\n                const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                const [head, tail] = lock < pos ? [lock, pos] : [pos, lock];\r\n                if (head <= left && tail >= right) {\r\n                    if (start === -1) start = i;\r\n                } else {\r\n                    if (start !== -1) {\r\n                        end = i - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            if (start !== -1 && end === -1) {\r\n                end = notesList.length - 1;\r\n            }\r\n            state.focusIndex = start;\r\n            state.destIndex = end;\r\n            mouse.lock = -1;\r\n            // console.log(`★ up=== focus: ${state.focusIndex}, dist: ${state.distIndex}`);\r\n            dispatcher.melody.setState(state);\r\n            // const [head, tail] = mouse.lock < x ? [mouse.lock, x] : [x, mouse.lock];\r\n            // const width = tail - head;\r\n            // if (width > 5) {\r\n            //     mouse.width = width;\r\n            //     mouse.lock = -1;\r\n            //     mouse.pos = head;\r\n            //     update();\r\n            //     console.log(`★ up=== pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n            // }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyTimelineMouseOperation;","import { useContext, useEffect, useMemo, useRef } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport ScoreCache from \"../../../../redux/store/score/scoreCache\";\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\nimport MelodyUtil, { getNormalizeLenFromNotes } from \"../../../../utils/melodyUtil\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport MelodyTimelineMouseOperation from \"./util/melodyTimelineMouseOperation\";\n\nconst MelodyTimeline = (props: {\n    barLength: number;\n    beatWidth: number;\n    curChord: ChordElement | null;\n    timelineLength: number;\n    mouseMeasurePos: number;\n    update: () => void;\n}) => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const measureRef = useRef<null | HTMLDivElement>(null);\n    const chordRef = useRef<null | HTMLDivElement>(null);\n\n    const state = store.scoreState;\n    const update = props.update;\n\n    const chordList = store.scoreData.chordList;\n    const barLength = props.barLength;\n    const beatWidth = props.beatWidth;\n    const curChord = props.curChord;\n    const timelineLength = props.timelineLength;\n    const mouseMeasurePos = props.mouseMeasurePos;\n    const rate = 1 / store.melodyState.quantize;\n    const init = store.scoreData.chordList[0].detail as DetailInit;\n\n    useEffect(() => {\n        store.refs.melody.measure = measureRef.current;\n        store.refs.melody.chord = chordRef.current;\n    }, []);\n\n    const measureJsxList = useMemo(() => {\n        const jsxList: JSX.Element[] = [];\n        state.measureCacheList.forEach(cache => {\n\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\n            switch (true) {\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\n            }\n            // 表示する小節数\n            const barCount = cache.barCount;\n\n            jsxList.push(\n                <_Memori\n                    key={jsxList.length}\n                    beatWidth={beatWidth}\n                    width={bean.width}\n                    height={bean.height}\n                    color={bean.color}\n                >\n                    {barCount !== -1 ? <_Bar>{barCount}</_Bar> : ''}\n                </_Memori>\n            );\n        });\n        return jsxList;\n    }, [state.beatCacheList, barLength]);\n\n    const chordJsxList: JSX.Element[] = useMemo(() => {\n        const jsxList: JSX.Element[] = [];\n        if (state.elementCacheList.length === 0) {\n            return jsxList;\n        }\n        let left = 0;\n        chordList.forEach((element, i) => {\n            if (element.type === 'chord') {\n                // console.log(state.elementCacheList.length);\n                const detail = element.detail as DetailChord;\n                const cache = state.elementCacheList[i];\n                const minute = detail.minute.head + detail.minute.tail;\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\n                const minuteLen = minute * 0.25;\n                const adjustRate = beatProps.beatMemoriCount / 4;\n                const width = beatWidth * (detail.beatLen * adjustRate + minuteLen);\n\n                if (chordRef.current != null) {\n                    const scroll = chordRef.current.scrollLeft;\n                    if (left + width - scroll >= 0 ||\n                        left - scroll <= chordRef.current.clientWidth) {\n                        const symbolNmae = TheoryUtil.getSymbolFromKey(detail.symbolKey)?.name;\n                        const degreeName = detail.root == null ? '-' :\n                            TheoryUtil.getDegreeRoot(detail.root) + symbolNmae;\n                        const chordName = detail.root == null ? '-' :\n                            TheoryUtil.getRootName(detail.root, init.keyIndex) + symbolNmae;\n                        jsxList.push(\n                            <_ChordItem key={jsxList.length}\n                                left={left}\n                                width={width}\n                                isActive={element == curChord}\n                                onClick={() => {\n                                    state.isMelody = false;\n                                    state.focusIndex = state.distIndex = i;\n                                    dispatcher.score.setScoreState(state);\n                                }}\n                                onContextMenu={() => {\n                                    MelodyUtil.previewCurHarmony(store, dispatcher);\n                                }}\n                            >\n                                <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\n                            </_ChordItem>\n                        );\n                    }\n                }\n                left += width;\n            }\n        });\n        return jsxList;\n    }, [chordList, curChord]);\n\n    return (<>\n        <_Chord ref={chordRef}>\n            <_ChordWrap width={timelineLength}>\n                {chordJsxList}\n            </_ChordWrap>\n        </_Chord>\n        <_MeasureWrap ref={measureRef}>\n            <_MeasureInner\n                onMouseDown={e => MelodyTimelineMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\n                onMouseMove={e => MelodyTimelineMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\n                onMouseUp={e => MelodyTimelineMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\n                onMouseLeave={() => {\n                    const mouse = store.melodyState.timelineMouse;\n                    mouse.pos = -1;\n                    mouse.lock = -1;\n                    update();\n                }}\n            >\n                {measureJsxList}\n                <_MousePos\n                    left={mouseMeasurePos * beatWidth * rate}\n                    width={beatWidth * rate}\n                />\n            </_MeasureInner>\n        </_MeasureWrap>\n    </>);\n}\n\nconst getExtendMeasure = (measureList: ScoreCache.Measure[]): ScoreCache.Measure[] => {\n    const list: ScoreCache.Measure[] = [];\n\n    return list;\n}\n\nexport default MelodyTimeline;\n\nconst _MeasureWrap = styled.div`\n    display: inline-block;\n    position: relative;\n    background: linear-gradient(to bottom, #ffffff, #808080);\n    width: 100%;\n    height: 40px;\n    text-align: left;\n    border-top: solid 2px #000;\n    white-space: nowrap;\n    overflow: hidden;\n`;\n\nconst _MeasureInner = styled.div`\n    display: inline-block;\n    position: absolute;\n    /* width: 100%; */\n    left: 0;\n    top: 0;\n    width: 10000px;\n    height: 100%;\n    &:hover {\n        background-color: #ff00b347;\n    }\n`;\n\n\nconst _MousePos = styled.div<{\n    left: number;\n    width: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    z-index: 10;\n    left: ${props => props.left}px;\n    top: 0px;\n    width: ${props => props.width}px;\n    height: 100%;\n    background-color: #ffff006c;\n`;\n\nconst _Chord = styled.div`\n    display: inline-block;\n    position: relative;\n    background-color: #c0c0c0;\n    width: 100%;\n    height: calc(100% - 40px);\n    text-align: left;\n    white-space: nowrap;\n    overflow: hidden;\n`;\n\nconst _ChordWrap = styled.div<{\n    width: number;\n}>`\n    width: ${props => props.width}px;\n    height: 100%;\n    overflow: hidden;\n`;\n\nconst _ChordItem = styled.div<{\n    left: number;\n    width: number;\n    isActive: boolean;\n}>`\n    display: inline-block;\n    position: absolute;\n    left: ${props => props.left}px;\n    width: ${props => props.width - 1}px;\n    height: calc(100% - 2px);\n    box-sizing: border-box;\n    border: 1px solid #646464;\n    border-left: 4px solid #940000;\n    background-color: #ffffff22;\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\n    margin: 1px 0 0 1px;\n    \n    font-size: 18px;\n    font-weight: 600;\n    text-align: center;\n\n    &:hover {\n        background-color: #fffb0037;\n    }\n`;\n\nconst _DegreeName = styled.span`\n    color: #d80000;\n`;\nconst _ChordName = styled.span`\n    color: #0000007d;\n`;\n\nconst _Scale = styled.div<{\n    isHead: boolean;\n    beatWidth: number;\n}>`\n    display: inline-block;\n    position: relative;\n    pointer-events: none;\n    /* background-color: #ffffffbe; */\n    width: ${props => props.beatWidth / 4}px;\n    vertical-align: bottom;\n    margin-top: 25px;\n    height: ${props => props.isHead ? '15px' : '10px'};\n    box-sizing: border-box;\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\n`;\n\nconst _Memori = styled.div<{\n    width: number;\n    height: number;\n    color: string;\n    beatWidth: number;\n}>`\n    display: inline-block;\n    position: relative;\n    width: ${props => props.beatWidth / 4}px;\n    height: ${props => props.height}px;\n    border-left: solid ${props => props.width}px ${props => props.color};\n    box-sizing: border-box;\n    vertical-align: top;\n`;\n\nconst _Bar = styled.div<{\n}>`\n    display: inline-block;\n    position: absolute;\n    z-index: 10;\n    left: -5px;\n    top: 18px;\n    font-size: 16px;\n    font-weight: 600;\n    color: #dd0000;\n`;","import { useContext, useMemo } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\n\n\nconst MelodyPitchList = (props: {\n    mousePitchIndex: number;\n    curChord: ChordElement | null;\n}) => {\n    const { store, dispatcher } = useContext(GlobalContext);\n    const init = store.scoreData.chordList[0].detail as DetailInit;\n\n    // 左端の音程リストのJSXリスト\n    const pitchItemJsxList = useMemo(() => {\n        const structIndexList: number[] = [];\n        if (props.curChord != null) {\n            const detail = props.curChord.detail as DetailChord;\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\n            const root = detail.root;\n            if (root != null && symbol != null) {\n                symbol.structs.forEach((struct) => {\n                    structIndexList.push((root.index + init.keyIndex + TheoryUtil.IntervalRelationProps[struct]) % 12);\n                });\n            }\n        }\n\n        const list: JSX.Element[] = [];\n        for (let i = 0; i < 60; i++) {\n            const keyIndex = ((59 - i) + 9) % 12;\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\n            const octaveName = getOctaveName(octave);\n            list.push(\n                <_PitchItem key={i}\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\n                    isStruct={structIndexList.includes(keyIndex)}\n                    isActive={i === props.mousePitchIndex}\n                    onClick={() => {\n                        const instrument = store.instruments.melodyFont;\n                        if (instrument != null) {\n                            instrument.stop();\n                            instrument.play(soundName + octave, 0, { duration: 1 });\n                        }\n                    }}\n                >\n                    {/* {octaveName} */}\n                    {soundName}\n                </_PitchItem>\n            );\n        }\n        return list;\n    }, [props.mousePitchIndex, props.curChord]);\n\n    return (<>\n        <_OctaveWrap>\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\n        </_OctaveWrap>\n        <_PitchWrap>\n            {pitchItemJsxList}\n        </_PitchWrap>\n    </>);\n};\n\nexport default MelodyPitchList;\n\nconst getOctaveName = (num: number) => {\n    switch (num) {\n        case 0: return 'low';\n        case 1: return 'mid1';\n        case 2: return 'mid2';\n        case 3: return 'hi';\n        case 4: return 'hihi';\n        default: return '';\n    }\n}\n\nconst _OctaveWrap = styled.div`\n    display: inline-block;\n    width: 30px;\n    height: 100%;\n    vertical-align: top;\n`;\n\nconst _PitchWrap = styled.div`\n    display: inline-block;\n    width: calc(100% - 30px);\n    height: 100%;\n    vertical-align: top;\n`;\n\nconst _OctaveItem = styled.div<{\n    isActive: boolean;\n}>`\n    display: inline-block;\n    border: 1px solid black;\n    width: 100%;\n    height: 360px;\n    background-color: #8f8f8f;\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\n    box-sizing: border-box;\n\n    font-size: 18px;\n    color: #dfdfdf;\n    font-weight: 600;\n    & div {\n        width: 360px;\n        transform-origin: top left;\n        transform: rotate(-90deg) translateX(-50%);\n        /* background-color: #fff; */\n    }\n`;\n\nconst _PitchItem = styled.div<{\n    isScale: boolean;\n    isActive: boolean;\n    isStruct: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 20px);\n    border: 1px solid black;\n    ${props => !props.isScale ? '' : css`\n        width: 100%;\n    `}\n    height: ${TUNE_PITCH_HEIGHT}px;\n    background-color: #adadad;\n    ${props => !props.isStruct ? '' : css`background-color: #e25d5d;`}\n    ${props => !props.isActive ? '' : css<{\n        isStruct: boolean;\n    }>`\n        background-color: #cece60;\n        ${props => !props.isStruct ? '' : css`background-color: #e28c45;`}\n    `}\n    box-sizing: border-box;\n\n    padding-left: 5px;\n    line-height: 28px;\n    font-size: 18px;\n    color: #3b3b3b;\n    font-weight: 600;\n`;\n","import { useContext } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\nimport Soundfont from 'soundfont-player';\nimport { SoundfontInfo } from \"../../../../../redux/store/score/melodyState\";\n\n\nconst InstrumentSwitch = (props: {\n    labelName: string;\n    icon: JSX.Element;\n    soundfontInfo: SoundfontInfo;\n}) => {\n    const { store, dispatcher } = useContext(GlobalContext);\n    const state = store.melodyState;\n\n    return (\n        <_Wrap\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\n            onClick={() => {\n                // state.quantize = props.value;\n                // dispatcher.tune.setState(state);\n\n                state.soundfontInfo = props.soundfontInfo;\n                state.isPreview = true;\n                dispatcher.melody.setState(state);\n\n                const info = props.soundfontInfo;\n                Soundfont.instrument(new AudioContext(), info.name,\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\n                        const instruments = store.instruments;\n                        instruments.melodyFont = soundFontPlayer;\n                        dispatcher.score.setInstruments(instruments);\n                    }).then(() => {\n                        state.isPreview = false;\n                        dispatcher.melody.setState(state);\n                    });\n            }}\n        >\n            <_Icon>{props.icon}</_Icon>\n            <_Label>{props.labelName}</_Label>\n        </_Wrap>\n    );\n}\n\nexport default InstrumentSwitch;\n\nconst _Wrap = styled.div<{\n    isActive: boolean;\n}>`\n    display: inline-block;\n    width: 85px;\n    height: 40px;\n    text-align: center;\n    border: 1px solid #4b4b4b;\n    background-color: #cacacada;\n    ${props => !props.isActive ? '' : css`\n        background-color: #f7f7f7da;\n    `}\n    border-radius: 6px;\n    margin-left: 4px;\n    box-sizing: border-box;\n\n    &:hover {\n        background-color: #e4e4e4da;\n        ${props => !props.isActive ? '' : css`\n            background-color: #f7f7f7da;\n        `}\n    }\n`;\n\n\nconst _Icon = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 30px;\n    /* background-color: #ff0000da; */\n    font-size: 20px;\n    color: #4b4b4b;\n    text-align: center;\n    /* padding-top: 5px; */\n    box-sizing: border-box;\n`;\n\nconst _Label = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 10px;\n    /* background-color: #0400ffdc; */\n    font-size: 16px;\n    font-weight: 600;\n    line-height: 0;\n    color: #3b3b3b;\n    text-align: center;\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\n\n\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\nimport { BsPerson } from 'react-icons/bs'\nimport ControlButton from \"./item/controlButton\";\n\nconst MelodyHeader = () => {\n    const { store, dispatcher } = useContext(GlobalContext);\n    const state = store.melodyState;\n\n    return (<>\n        <_OperationDiv>\n            <_QuantizeSelector>\n                <QuantizeSwitch labelName={'32'} isDisable={false} isActive={state.quantize === 8} callback={() => {\n                    state.quantize = 8;\n                    dispatcher.melody.setState(state);\n                }} />\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\n                    state.quantize = 4;\n                    dispatcher.melody.setState(state);\n                }} />\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\n                    state.quantize = 2;\n                    dispatcher.melody.setState(state);\n                }} />\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\n                    state.quantize = 1;\n                    dispatcher.melody.setState(state);\n                }} />\n                <QuantizeSwitch labelName={'/3'} isDisable={![1, 2, 3, 6].includes(state.quantize)} isActive={[3, 6].includes(state.quantize)} callback={() => {\n                    if ([3, 6].includes(state.quantize)) {\n                        state.quantize /= 3;\n                        dispatcher.melody.setState(state);\n                    } else {\n                        state.quantize *= 3;\n                        dispatcher.melody.setState(state);\n                    }\n                }} />\n            </_QuantizeSelector>\n            <_Control>\n                {/* <ControlButton labelName={'Up'} isDisable={false} callback={() => {\n                    const list = store.scoreData.notesList;\n                    list.forEach(notes => {\n                        notes.pitchIndex--;\n                    });\n                    dispatcher.melody.setNotesList(list.slice());\n                }} />\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\n                    const list = store.scoreData.notesList;\n                    list.forEach(notes => {\n                        notes.pitchIndex++;\n                    });\n                    dispatcher.melody.setNotesList(list.slice());\n                }} /> */}\n                {/* <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\n                    dispatcher.tune.setNotesList([]);\n                }} /> */}\n            </_Control>\n        </_OperationDiv>\n        <_InstrumentSelector>\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 9 }} />\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"guitar\" soundfontInfo={{ name: 'overdriven_guitar', gain: 4 }} />\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 4 }} />\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\n            <InstrumentSwitch icon={<BsPerson />} labelName=\"choir\" soundfontInfo={{ name: 'choir_aahs', gain: 6 }} />\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\n        </_InstrumentSelector>\n    </>);\n}\n\nexport default MelodyHeader;\n\nconst _OperationDiv = styled.div<{\n}>`\n    display: block;\n    padding: 4px 4px 4px 0;\n    background-color: #bbbbbb;\n`;\n\nconst _QuantizeSelector = styled.div<{\n}>`\n    display: inline-block;\n    /* margin-left: 20px; */\n`;\nconst _Control = styled.div<{\n}>`\n    display: inline-block;\n    margin-left: 20px;\n`;\n\nconst _InstrumentSelector = styled.div<{\n}>`\n    display: inline-block;\n    /* padding: 4px 4px 4px 0; */\n    background-color: #e4e4e486;\n`;\n\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, MelodyNotes } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.destIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    const newLen = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.len) !== getNormalizeLenFromNotes(newLen)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.len = newLen;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    const newPos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.pos) !== getNormalizeLenFromNotes(newPos)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.pos = newPos;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.tableMouse;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                //履歴を作成\r\n                state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.melody.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.melody.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/score/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport MelodyUtil, { } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n\r\n        // 選択しているノーツが1つである場合\r\n        const isSingle = state.focusIndex === state.destIndex;\r\n        const mouse = state.tableMouse;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.melody.copyNotes(); break;\r\n                    case 'v': dispatcher.melody.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.melody.allSelect();\r\n                    }\r\n                        break;\r\n                    case 's': dispatcher.score.saveFile(); break;\r\n                    case 'z': dispatcher.melody.undo(); break;\r\n                    case 'y': dispatcher.melody.redo(); break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.melody.incrementCurPitch(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.melody.incrementCurPitch(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveDestFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveDestFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.melody.incrementCurPitch(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.melody.incrementCurPitch(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(false);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(true);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.melody.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.melody.adjustScrollX(); break;\r\n                case 'e': dispatcher.melody.adjustScrollY(); break;\r\n                case 'z': {\r\n                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.melody.firstNotes();\r\n                }\r\n                    break;\r\n                case '0': {\r\n                    state.quantize = 8;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else if([2, 1].includes(state.quantize)) {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.melody.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.melody.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.melody.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.destIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport MelodyTimeline from \"./melodyTimeline\";\nimport MelodyPitchList from \"./melodyPitchList\";\nimport MelodyHeader from \"./melodyHeader\";\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\nimport { Side } from \"../../../../redux/store/score/melodyState\";\nimport MelodyInput from \"../harmonize/input/melodyInput\";\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\nimport CacheUtil from \"../../../../utils/cacheUtil\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\n\n\nconst MelodyFrame = (props: {\n    isActive: boolean;\n}) => {\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const scoreState = store.scoreState;\n    const state = store.melodyState;\n\n    const wrapRef = useRef<null | HTMLDivElement>(null);\n    const tableRef = useRef<null | HTMLDivElement>(null);\n    const pitchRef = useRef<null | HTMLDivElement>(null);\n\n    const [invalidate, setInvalidate] = useState<{}>({});\n    const [invalidate2, setInvalidate2] = useState<{}>({});\n    const update = () => setInvalidate({});\n\n    const mouse = state.tableMouse;\n    const isPut = mouse.isPut;\n    const notesState = mouse.notesState;\n    const curChord = mouse.curChord;\n    const mouseMeasurePos = mouse.mouseMeasurePos;\n    const mousePitchIndex = mouse.mousePitchIndex;\n    const width = mouse.width;\n    const lock = mouse.lock;\n    const refs = store.refs.melody;\n\n    const barCount = 150;\n\n    const timelineLength = barCount * state.beatWidth * 4;\n    const notesList = store.scoreData.notesList;\n    const rate = 1 / store.melodyState.quantize;\n\n    // const rate = 4 / state.quantize;\n\n    const isTune = store.scoreState.isMelody;\n\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\n\n    useEffect(() => {\n        dispatcher.system.setRefs({\n            ...store.refs, melody: {\n                ...store.refs.melody,\n                table: tableRef.current,\n                pitch: pitchRef.current\n            }\n        });\n\n        dispatcher.system.setInvalidate({\n            ...store.invalidate, melody: update\n        });\n    }, []);\n\n    useEffect(() => {\n        if (isTune && wrapRef.current != null) {\n            wrapRef.current.focus();\n        }\n    }, [isTune]);\n\n    /**\n     * 画面上部のメモリJSXリスト\n     * 拍子のキャッシュから作成する\n     */\n    const measureJsxList = useMemo(() => {\n        const list: JSX.Element[] = [];\n        scoreState.measureCacheList.forEach((cache, i) => {\n\n            list.push(\n                <_Scale key={i} isHead={cache.rate === 4} beatWidth={state.beatWidth} />\n            );\n        });\n        return list;\n    }, [scoreState.beatCacheList, barCount]);\n\n    // const init = store.scoreData.chordList[0].detail as DetailInit;\n\n    /**\n     * スケール区間のJSXリスト\n     * 背景色のラインを表現\n     * 転調でキーが変わる度に追加される\n     */\n    const scaleDivJsxList = useMemo(() => {\n        const divList: JSX.Element[] = [];\n        // console.log('**' + scoreState.scaleCacheList.length);\n        scoreState.scaleCacheList.forEach((scaleInfo, i) => {\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\n            const scaleJsxList: JSX.Element[] = [];\n            for (let j = 0; j < PITCH_MAX; j++) {\n                const keyIndex = getKeyIndexFromPitcher(j);\n                scaleJsxList.push(\n                    <_ScaleLine key={j}\n                        isScale={scaleIndexies.includes(keyIndex)}\n                        isBase={keyIndex === scaleIndexies[0]}\n                    />\n                );\n            }\n\n            divList.push(\n                <_ScaleList key={i} width={state.beatWidth / 4 * scaleInfo.memoriCnt} isEven={i % 2 === 0}>\n                    {scaleJsxList}\n                </_ScaleList>\n            );\n        });\n        return divList;\n    }, [scoreState.scaleCacheList]);\n\n    /**\n     * 配置するノーツのJSXリスト\n     */\n    const notesJsxList = useMemo(() => {\n        const list: JSX.Element[] = [];\n        // notesList.forEach((notes, i) => {\n        // let count = 0;\n        if (scoreState.scaleCacheList.length === 0) return list;//\n        for (let i = 0; i < notesList.length; i++) {\n            const notes = notesList[i];\n            const normalLeft = getNormalizeLenFromNotes(notes.pos);\n            const normalWidth = getNormalizeLenFromNotes(notes.len);\n            if (tableRef.current != null) {\n                const scroll = tableRef.current.scrollLeft;\n                const notesLeft = normalLeft * state.beatWidth;\n                const notesRight = notesLeft + normalWidth * state.beatWidth;\n                if (\n                    // !state.isPreview &&\n                    (notesRight - scroll < 0 || notesLeft - scroll > tableRef.current.clientWidth)\n                ) {\n                    continue;\n                }\n            }\n            const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\n            // count++;\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\n            const isActive = focusStart <= i && focusEnd >= i;\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\n            const isScale = scaleIndexies.includes(keyIndex);\n\n            // クオンタイズ\n            const unitPos = getMinimumLenUnit(notes.pos);\n            const unitLen = getMinimumLenUnit(notes.len);\n            list.push(\n                <_NotesWrap key={i}\n                    left={normalLeft * state.beatWidth}\n                    width={normalWidth * state.beatWidth}\n                    side={notesState.side}\n                    isActive={isActive}\n                    isScale={state.keySwitch.scaleMode}\n                    isResize={state.keySwitch.resize}\n                    isMove={state.keySwitch.move}\n                    isOctave={state.keySwitch.octave}\n                    isPreview={state.isPreview}\n                    onContextMenu={() => {\n                        dispatcher.melody.removeNotes();\n                    }}\n                >\n                    <_Notes\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\n                        isScale={isScale}\n                        isActive={isActive}\n                        isPreview={state.isPreview}\n                    >\n                        {/* {notes.posX} */}\n                    </_Notes>\n                </_NotesWrap>\n            );\n        }\n        // console.log('cnt: ' + count);\n        // });\n        return list;\n    }, [notesList, notesList.length, state.focusIndex, state.destIndex, notesState, state.isPreview,\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move, refs.table?.scrollLeft]);\n\n    /**\n     * タイムラインを横にスクロールした際の処理\n     */\n    const sideScrollAction = () => {\n\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\n            const scrollLeft = refs.table.scrollLeft;\n            const scrollTop = refs.table.scrollTop;\n            refs.measure.scrollTo({ left: scrollLeft });\n            refs.chord.scrollTo({ left: scrollLeft });\n            refs.pitch.scrollTo({ top: scrollTop });\n        }\n        update();\n    };\n\n    /**\n     * マウスポインタがエリア外に出た際の処理\n     */\n    const mouseLeaveAction = () => {\n        console.log('leave!');\n        if (mouse.notesState.index !== -1) {\n            mouse.notesState.index = -1;\n            mouse.notesState.isResize = false;\n            mouse.notesState.side = 'normal';\n        }\n        mouse.mouseMeasurePos = -1;\n        mouse.mousePitchIndex = -1;\n        update();\n    };\n\n    return (\n        <_Wrap\n            tabIndex={999}\n            ref={wrapRef}\n            isActive={props.isActive}\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\n        >\n            <_Header isEnable={!state.isPreview}>\n                <MelodyHeader />\n            </_Header>\n            <_Body>\n                {(() => {\n                    const mouse = state.timelineMouse;\n                    if (mouse.lock === -1) {\n                        return mouse.pos === -1 ? <></> :\n                            <_MouseLinePos left={mouse.pos} />\n                    } else {\n                        const [head, tail] = mouse.lock < mouse.pos ? [mouse.lock, mouse.pos] : [mouse.pos, mouse.lock];\n                        const width = tail - head;\n                        return <_MouseRange left={head} width={width} />\n                    }\n                })()}\n                {\n\n                }\n                <_Timeline>\n                    <MelodyTimeline\n                        barLength={barCount}\n                        beatWidth={state.beatWidth}\n                        curChord={curChord}\n                        timelineLength={timelineLength}\n                        mouseMeasurePos={mouseMeasurePos}\n                        update={() => setInvalidate2({})}\n                    />\n                </_Timeline>\n                <_Pitch ref={pitchRef}>\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\n                </_Pitch>\n                <_TableWrap ref={tableRef} onScroll={sideScrollAction} >\n                    <_TableMeasure\n                        width={timelineLength}\n                    >\n                        {measureJsxList}\n                    </_TableMeasure>\n                    <_TablePitch\n                        width={timelineLength}\n                    >\n                        {scaleDivJsxList}\n                    </_TablePitch>\n                    <_TableNotes\n                        width={timelineLength}\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\n                        onMouseLeave={mouseLeaveAction}\n                    >\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\n                        />}\n                        {notesJsxList}\n                    </_TableNotes>\n                    <_PrevireBrind\n                        isUse={state.isPreview}\n                        width={timelineLength}\n                    />\n                </_TableWrap>\n            </_Body>\n        </_Wrap>\n    );\n}\n\nexport default MelodyFrame;\n\nconst _Wrap = styled.div<{\n    isActive: boolean;\n}>`\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\n    width: 100%;\n    height: 100%;\n    outline: none;\n`;\n\nconst editAnimation = keyframes`\n  0%,100% {\n    opacity: 0.2;\n  }\n  50% {\n    opacity: 1;\n  }\n`;\n\nconst _Test = styled.div<{\n    x: number;\n    y: number;\n    width: number;\n    lenType: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    left: ${props => props.x}px;\n    top: ${props => props.y}px;\n    width: ${props => props.width}px;\n    height: ${props => {\n        switch (props.lenType) {\n            case 4: return TUNE_PITCH_HEIGHT;\n            case 8: return TUNE_PITCH_HEIGHT - 6;\n            case 16: return TUNE_PITCH_HEIGHT - 12;\n            default: return TUNE_PITCH_HEIGHT - 14;\n        }\n    }}px;\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\n    border: 1px solid #fbffd9;\n    \n    animation: ${editAnimation} .8s linear infinite;\n`;\n\nconst _Header = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${TUNE_HEADER_WIDTH}px;\n    background-color: #b3b3b3;\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\n`;\nconst _Body = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\n    background-color: #464646;\n`;\n\nconst _MouseLine = css`\n    display: inline-block;\n    position: absolute;\n    pointer-events: none;\n    z-index: 99;\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\n    height: calc(100% - 42px);\n    width: 3px;\n`;\nconst _MouseLinePos = styled.div<{\n    left: number;\n}>`\n    ${_MouseLine}\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\n    background-color: #15ff00;\n`;\nconst _MouseLineLock = styled.div<{\n    left: number;\n}>`\n    ${_MouseLine}\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\n    background-color: #fbff00;\n`;\n\nconst _MouseRange = styled.div<{\n    left: number;\n    width: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    pointer-events: none;\n    z-index: 99;\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\n    height: calc(100% - 42px);\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\n    width: ${props => props.width}px;\n    background-color: #ffffff8b;\n`;\n\nconst _Timeline = styled.div`\n    display: inline-block;\n    margin-left: ${TUNE_PITCH_WIDTH}px;\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\n    height: ${TUNE_TIMELINE_WIDTH}px;\n    background-color: #534b81;\n    overflow-y: hidden;\n`;\n\nconst _Pitch = styled.div`\n    display: inline-block;\n    width: ${TUNE_PITCH_WIDTH}px;\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\n    background-color: #464545;\n    vertical-align: top;\n    overflow-y: hidden;\n`;\n\nconst _TableWrap = styled.div`\n    display: inline-block;\n    position: relative;\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\n    background-color: #bdbdbd;\n    vertical-align: top;\n    overflow: scroll;\n    &::-webkit-scrollbar {\n        width: 10px;\n        height: 10px;\n    }\n    &::-webkit-scrollbar-thumb {\n        border-radius: 5px;\n        background: #1959A8;\n    }\n    &::-webkit-scrollbar-track {\n        border-radius: 5px;\n        box-shadow: 0 0 4px #aaa inset;\n    }\n`;\n\nconst _TableMeasure = styled.div<{\n    width: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 3;\n    width: ${props => props.width}px;\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\n    white-space: nowrap;\n`;\n\nconst _TablePitch = styled.div<{\n    width: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    /* z-index: 6; */\n    width: ${props => props.width}px;\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\n    /* pointer-events: none; */\n    /* background-color: #70ff7058; */\n`;\n\nconst _ScaleList = styled.div<{\n    width: number;\n    isEven: boolean;\n}>`\n    display: inline-block;\n    position: relative;\n    top: 0;\n    left: 0;\n    /* z-index: 6; */\n    width: ${props => props.width}px;\n    height: 100%;\n    /* pointer-events: none; */\n    background-color: #70ff7021;\n    ${props => !props.isEven ? '' : css`\n        background-color: #708aff20;\n    `}\n`;\n\n// 音階を区別するバックの横線\nconst _ScaleLine = styled.div<{\n    isScale: boolean;\n    isBase: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\n    margin: 1px 0 0 0;\n    background-color: #00000024;\n    /* border-bottom: 1px solid #00000018; */\n    ${props => !props.isScale ? '' : css`\n        background-color: #d1d1d11f;\n    `}\n    ${props => !props.isBase ? '' : css`\n        background-color: #e0e0e0;\n    `}\n`;\n\nconst _TableNotes = styled.div<{\n    width: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 5;\n    width: ${props => props.width}px;\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\n    cursor: crosshair;\n`;\n\n\nconst _Scale = styled.div<{\n    isHead: boolean;\n    beatWidth: number;\n}>`\n    display: inline-block;\n    /* background-color: #ffffffbe; */\n    width: ${props => props.beatWidth / 4}px;\n    vertical-align: top;\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\n    box-sizing: border-box;\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\n`;\n\n\nconst _NotesWrap = styled.div<{\n    left: number;\n    width: number;\n    isActive: boolean;\n    isResize: boolean;\n    isMove: boolean;\n    isOctave: boolean;\n    isScale: boolean;\n    isPreview: boolean;\n    side: Side;\n}>`\n    display: inline-block;\n    position: absolute;\n    z-index: 9;\n    left: ${props => props.left}px;\n    top: 0;\n    width: ${props => props.width}px;\n    height: 100%;\n    cursor: default;\n    background-color: #2727275a;\n    box-sizing: border-box;\n\n    // アクティブ時\n    ${props => !props.isActive ? '' : css`\n        background-color: #00a6cf52;\n    `}\n    // スケールモードON\n    ${props => !(props.isActive && props.isScale) ? '' : css`\n        background-color: #00cf4552;\n    `}\n    // オクターブモードON\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\n        background-color: #ffa9a952;\n    `}\n    /* border-left: 1px solid #ff0000b2; */\n    ${props => props.isActive ? props.side === 'left' ? css`\n        border-left: 3px solid #0026ffb1;\n        cursor : col-resize;\n        background-color: #1900ff52;\n    ` : props.side === 'right' ? css`\n        border-right: 3px solid #0026ffb1;\n        cursor : col-resize;\n        background-color: #ff00006e;\n    ` : '' : ''}\n\n    // キーボードによるリサイズモードON\n    ${props => !(props.isActive && props.isResize) ? '' : css`\n        border-right: 3px solid #0026ffb1;\n        background-color: #ff00006e;\n    `}\n    // キーボードによる移動モードON\n    ${props => !(props.isActive && props.isMove) ? '' : css`\n        border-left: 3px solid #0026ffb1;\n        background-color: #1900ff52;\n    `}\n    // プレビューモード\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\n        background-color: #fffb0040;\n    `}\n`;\nconst _Notes = styled.div<{\n    y: number;\n    lenType: number;\n    isScale: boolean;\n    isActive: boolean;\n    isPreview: boolean;\n}>`\n    display: inline-block;\n    position: absolute;\n    z-index: 10;\n    top: ${props => props.y}px;\n    width: 100%;\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\n    /* background-color: red; */\n    /* background: linear-gradient(to bottom, ${props => {\n        switch (props.lenType) {\n            case 4: return '#f8525232, #ff0000, #f8525232';\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\n        }\n    }}); */\n    border-radius: 15px 0 0 15px;\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\n    ${props => props.isScale ? '' : css`    \n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\n    `}\n    opacity: 0.5;\n    ${props => props.isPreview && !props.isActive ? '' : css`    \n       opacity: 1;\n    `}\n    /* border: 1px solid #000; */\n    box-sizing: border-box;\n    font-size: 12px;\n    color: #000000;\n    box-shadow: 0 0 22px 0 #0000007d;\n    ${props => !(props.isPreview && props.isActive) ? '' : css`\n        box-shadow: 0 0 32px 0 #ffffff92;\n    `}\n    &:hover {\n        opacity: 0.8;\n    }\n`;\n\nconst _PrevireBrind = styled.div<{\n    width: number;\n    isUse: boolean;\n}>`\n    position: absolute;\n    display: ${props => props.isUse ? 'block' : 'none'};\n    z-index: 80;\n    width: ${props => props.width}px;\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\n    background-color: #7a270028;\n`;\n\n// const _Scroll = styled.div<{\n//     left: number;\n// }>`\n//     position: absolute;\n//     left: ${props => props.left}px;\n//     top: 0px;\n//     z-index: 20;\n//     width: 4px;\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\n//     background-color: #00f;\n// `;","import { useContext, useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { GlobalContext } from \"../../entry/systemEntry\";\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\nimport Soundfont from 'soundfont-player';\nimport MelodyFrame from \"./melody/melodyFrame\";\nimport Styles, { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\nimport MelodyUtil, { } from \"../../../utils/melodyUtil\";\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\n\nconst EditTab = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const state = store.scoreState;\n    const melody = store.melodyState;\n\n    const isDirect = store.systemState.directScore != undefined;\n\n    useEffect(() => {\n        const info = melody.soundfontInfo;\n        if (store.instruments.melodyFont == null && store.instruments.harmonyFont == null) {\n            const instruments = store.instruments;\n            Soundfont.instrument(new AudioContext(), info.name,\n                { gain: info.gain, release: 0.5 }).then((melodyFont) => {\n                    // dispatcher.melody.setMelodyFont(soundFontPlayer);\n\n                    instruments.melodyFont = melodyFont;\n                    // acoustic_guitar_steel\n                    //bright_acoustic_piano\n                    //electric_grand_piano\n                    Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\n                        { gain: 2, release: 0.5 }).then((harmonyFont) => {\n                            // dispatcher.score.setHarmonyFont(soundFontPlayer);\n\n                            instruments.harmonyFont = harmonyFont;\n                            dispatcher.score.setInstruments(instruments);\n                        });\n                });\n        }\n\n    }, []);\n\n    const switchMode = () => {\n        state.isMelody = !state.isMelody;\n        dispatcher.score.setScoreState(state);\n    };\n\n    if (store.scoreData.chordList.length === 0) {\n        return <></>;\n    }\n\n    const isPreview = !state.isMelody ? state.isPreview : store.melodyState.isPreview;\n    const isSolo = !state.isMelody ? state.isSolo : melody.isSolo;\n    const preview = !state.isMelody ? () => {\n\n        if (!state.isPreview) {\n            HarmonizeUtil.previewStart(store, dispatcher);\n        } else {\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\n        }\n    } : () => {\n\n        if (!melody.isPreview) {\n            dispatcher.melody.previewStart();\n        } else {\n            MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\n        }\n    }\n    /** アンサンブルの切替 */\n    const toggleEnsamble = !state.isMelody ? () => {\n        state.isSolo = !state.isSolo;\n        dispatcher.score.setScoreState(state);\n    } : () => {\n        melody.isSolo = !melody.isSolo;\n        dispatcher.melody.setState(melody);\n    }\n\n    const playJsx = <_SwitchInner isActive={isPreview}>Play</_SwitchInner>;\n    const stopJsx = <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner>;\n    const ensambleJsx = <_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner>;\n    const soloJsx = <_SwitchInner isActive={isSolo}>Solo</_SwitchInner>;\n\n    return (\n        <_Wrap>\n            <_Header isEnable={state.hideMenu === 'none'}>\n                <_Mode isEnable={!isPreview}>\n                    <_ModeItem isActive={!state.isMelody} onClick={() => {\n                        if (state.isMelody) switchMode();\n                    }}>Harmony</_ModeItem>\n                    <_ModeItem isActive={state.isMelody} onClick={() => {\n                        if (!state.isMelody) switchMode();\n                    }}>Melody</_ModeItem>\n                </_Mode>\n                <_Buttons>\n                    <_Switch isEnable={true} onClick={preview}>{playJsx} / {stopJsx}</_Switch>\n                    <_Switch isEnable={!state.isPreview} onClick={toggleEnsamble}>{ensambleJsx} / {soloJsx}</_Switch>\n                    <_Button isEnable={!isDirect} onClick={dispatcher.score.saveFile}>Save</_Button>\n                </_Buttons>\n            </_Header>\n            <_Body\n                tabIndex={999}\n                onKeyDown={(e) => {\n                    const isPermit = !isPreview && state.hideMenu === 'none';\n                    if (isPermit) {\n                        switch (e.key) {\n                            case 'r': switchMode(); break;\n                        }\n                    }\n                }}>\n                <_Main>\n                    <HarmonizeTab isActive={!state.isMelody} />\n                    <MelodyFrame isActive={state.isMelody} />\n                </_Main>\n            </_Body>\n        </_Wrap>\n    );\n}\nexport default EditTab;\n\nconst _Wrap = styled.div`\n    width: 100%;\n    height: 100%;\n    outline: none;\n`;\n\nconst _Header = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 35px;\n    background-color: #ececec;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n`;\n\nconst _Mode = styled.div<{\n    isEnable: boolean\n}>`\n    display: inline-block;\n    /* width: 300px; */\n    height: 100%;\n    text-align: center;\n    margin-right: 20px;\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\n`;\nconst _ModeItem = styled.div<{\n    isActive: boolean;\n}>`\n    display: inline-block;\n    /* width: 300px; */\n    width: 120px;\n    height: calc(100% - 8px);\n    /* background-color: #e0ff6f55; */\n    ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\n    margin: 4px 0 0 4px;\n\n    font-size: 18px;\n    font-weight: 600;\n    color: #505050;\n    border-radius: 5px;\n    border: 1px solid #969696;\n    box-sizing: border-box;\n    &:hover {\n        background-color: #e0ff6f55;\n        ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\n    }\n`;\nconst _Buttons = styled.div`\n    display: inline-block;\n    /* width: 300px; */\n    height: 100%;\n    /* background-color: #e0ff6f55; */\n\n    & * {\n        margin: 3px 0 0 5px;\n    }\n`;\n\nconst _Button = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    /* width: 300px; */\n    width: 150px;\n    height: calc(100% - 8px);\n    background-color: #cae4e3;\n    margin: 4px 0 0 24px;\n    text-align: center;\n\n    font-size: 18px;\n    font-weight: 600;\n    color: #000000cf;\n    border-radius: 5px;\n    border: 1px solid #969696;\n    box-sizing: border-box;\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\n    &:hover {\n        background-color: #dceceb\n    }\n`;\n\nconst _Switch = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    /* width: 300px; */\n    width: 220px;\n    height: calc(100% - 8px);\n    background-color: #e1e4ca;\n    margin: 4px 0 0 4px;\n    text-align: center;\n\n    font-size: 18px;\n    font-weight: 600;\n    color: #000000cf;\n    border-radius: 5px;\n    border: 1px solid #969696;\n    box-sizing: border-box;\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\n    &:hover {\n        background-color: #eff3cf\n    }\n`;\n\nconst _SwitchInner = styled.span<{\n    isActive: boolean;\n}>`\n    color: #00109e6e;\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\n`;\n\nconst _Body = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: calc(100% - 35px);\n    background-color: #c50000;\n    outline: none;\n`;\n\nconst _Main = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    background-color: #dddddd;\n    vertical-align: top;\n`;\n\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\nimport PreviewTab from \"./preview/previewTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    // { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    // { name: 'Preview', disable: !isAccept, cont: store.scoreData.chordList.length === 0 ? <></> : <PreviewTab data={store.scoreData} /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? TheoryUtil.DEGREE12_FLAT_LIST : TheoryUtil.DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey) as TheoryUtil.SymbolParams;\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    // sampler.releaseAll();\r\n\r\n                    const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = TheoryUtil.IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        // sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                // sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useAuth0 } from \"@auth0/auth0-react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport { GlobalContext } from \"../entry/systemEntry\";\n\ntype scoreProps = {\n    dispnam: string;\n    seq: number;\n    owner: string;\n    lastmod: string;\n}\n\nconst HomeChannel = () => {\n\n    const { isAuthenticated, user, isLoading } = useAuth0();\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const [userId, setUserId] = useState('-');\n    const [userCount, setUserCount] = useState(0);\n\n    const [scoreList, setScoreList] = useState<scoreProps[]>([]);\n\n    const loginProps = store.userEnv.login;\n\n    let email = '-';\n    if (isAuthenticated && user != undefined) {\n        email = user.email ?? '-';\n    }\n\n    useEffect(() => {\n        if (store.systemState.directScore == null) {\n            countUsers().then(cnt => {\n                setUserCount(24 + cnt);\n                findAllScore().then((resList) => {\n                    setScoreList(resList as scoreProps[]);\n                });\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        if (!loginProps) {\n            setUserId('');\n        } else {\n            setUserId(loginProps.id);\n        }\n    }, [loginProps, isAuthenticated]);\n\n    const createUser = () => {\n        if (user != undefined) {\n            DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(email, id) VALUES('${user.email}', '${userId}')`).then(() => {\n                window.location.reload();\n            });\n        }\n    }\n\n    const updateUser = () => {\n        DataUtil.sendQueryRequestToAPI('update', `UPDATE user_tbl SET id = '${userId}' WHERE seq = ${loginProps?.seq}`).then(() => {\n            window.location.reload();\n        });\n    }\n\n    const registerLabel = loginProps == undefined ? 'create' : 'update';\n    const registerAction = loginProps == undefined ? createUser : updateUser;\n\n    const scoreListJsx = scoreList.map((score, i) => {\n        return (\n            <_CloudItem key={i} onClick={() => {\n                window.open(DataUtil.getPreviewURL(score.seq), '_blank');\n            }}>\n                <_Owner>{`${score.owner}`}</_Owner>\n                <_CName>{`${score.dispnam}`}</_CName><_CDate>{score.lastmod}</_CDate>\n            </_CloudItem>\n        );\n    });\n\n    return (<_Wrap>\n        <_Left>\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\n            <_Recored>\n                <_TitleLabel>User Data</_TitleLabel>\n            </_Recored>\n            <_ListInfoDiv isEnable={isAuthenticated && !isLoading}>\n                <_Recored>\n                    <_ItemnLabel>e-mail</_ItemnLabel>\n                    <_ItemnValue>{email}</_ItemnValue>\n                </_Recored>\n                <_Recored>\n                    <_ItemnLabel>user id</_ItemnLabel>\n                    <_ItemnForm type=\"text\" value={userId} onChange={(e) => {\n                        setUserId(e.target.value);\n                    }} />\n                </_Recored>\n                <_ButtonsDiv>\n                    <_Button isEnable={true} onClick={registerAction}>{registerLabel}</_Button>\n                </_ButtonsDiv>\n            </_ListInfoDiv>\n        </_Left>\n        <_Right>\n            <_MessageRecord>{scoreList.length} licresia scores have been published.</_MessageRecord>\n            <_ListFrame>{scoreListJsx}</_ListFrame>\n\n        </_Right>\n    </_Wrap>);\n}\n\nexport default HomeChannel;\n\n\nexport const countUsers = async () => {\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\n    const results = await response.json();\n    return (results as any[])[0]['cnt'] as number;\n};\n\nexport const findAllScore = async () => {\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\n        SELECT seq, (select id from user_tbl where seq = score.user_seq) as owner, dispnam, lastmod\n        FROM scoretbl score\n        WHERE share <> 'url'\n        ORDER BY lastmod desc\n    `);\n    const results = await response.json();\n    return results as any[];\n};\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: calc(100% - 8px);\n    margin: 4px 0 0 4px;\n    background-color: #ccc;\n`;\n\nconst _Left = styled.div`\n    display: inline-block;\n    width: 50%;\n    height: 100%;\n    background-color: #bbcac7;\n`;\n\n\nconst _MessageRecord = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    font-size: 22px;\n    font-weight: 600;\n    color: #cd0202;\n    background-color: #ffffff3d;\n    padding: 0 0 0 10px;\n    box-sizing: border-box;\n`;\n\nconst _ListInfoDiv = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: 400px;\n    margin: 4px 0 4px 4px;\n    background-color: #acacac;\n    border: solid 1px #1b00b3;\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.3;\n        pointer-events: none;\n    `}\n    border-radius: 4px;\n    box-sizing: border-box;\n    color: #060053;\n`;\n\nconst _TitleLabel = styled.div`\n    display: inline-block;\n    height: 40px;\n    font-size: 30px;\n    font-weight: 600;\n    color: #1c2c95;\n    /* background-color: #3f80cf57; */\n    padding: 0 10px;\n`;\nconst _Recored = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 35px;\n    /* background-color: #3fcf7b56; */\n    padding: 4px 0 0 10px;\n`;\n\nconst _ItemnLabel = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: 140px;\n    font-size: 24px;\n    line-height: 24px;\n    font-weight: 600;\n    color: #08106e;\n    border: solid 1px #1b00b3;\n    box-sizing: border-box;\n    /* background-color: #85a2c5; */\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\n    border-radius: 4px;\n    text-align: center;\n`;\n\nconst _ItemnValue = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 24px;\n    line-height: 30px;\n    user-select: text;\n    /* font-weight: 600; */\n    color: #ffffff;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #808080;\n    text-align: left;\n`;\n\nconst _ItemnForm = styled.input`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 24px;\n    line-height: 24px;\n    /* font-weight: 600; */\n    color: #1a1a1a;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #e9e9e9;\n    text-align: left;\n`;\n\nconst _ButtonsDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    /* background-color: #888888; */\n    box-sizing: border-box;\n    text-align: left;\n`;\n\nconst _Button = styled.div<{\n    isEnable: boolean;\n}>`\n    ${_CSS_LABEL_MIDIUM}\n    /* width: 160px; */\n    padding: 0 40px;\n    /* line-height: 25px; */\n    box-sizing: border-box;\n    background-color: #a8a8a8;\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\n    border: 1px solid #1a2b3f;\n    color: #1a2b3f;\n    border-radius: 4px;\n    margin: 5px 0 0 4px;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        /* background-color: #98bfc2; */\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\n    }\n`;\n\n\n\nconst _Right = styled.div`\n    display: inline-block;\n    width: 50%;\n    height: 100%;\n    background-color: #bbbfca;\n    vertical-align: top;\n`;\nconst _ListFrame = styled.div<{\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: calc(100% - 42px);\n    margin: 4px 0 0 4px;\n    background-color: #d3d3c5;\n    border: 1px solid #e60000;\n    border-radius: 4px;\n    box-sizing: border-box;\n    overflow-y: auto;\n`;\nconst _CloudItem = styled.div<{\n}>`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    /* height: 60px; */\n    border-bottom: 1px solid #888888;\n    /* background-color: white; */\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\n    margin: 2px 0 0 0;\n    padding: 0 0 0 4px;\n    box-sizing: border-box;\n    /* padding-left: 4px; */\n    &:hover {\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\n    }\n`;\n\nconst _Owner = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 20px;\n    line-height: 21px;\n    font-size: 18px;\n    font-weight: 600;\n    color: #c9494f;\n    overflow: hidden;\n    white-space: nowrap;\n`;\nconst _CName = styled.div<{\n}>`\n    display: inline-block;\n    width: calc(100% - 250px);\n    height: 35px;\n    font-size: 24px;\n    line-height: 36px;\n    font-weight: 600;\n    color: #47417c;\n    /* background-color: #f8f8e8; */\n    overflow: hidden;\n    white-space: nowrap;\n`;\nconst _CDate = styled.div<{\n}>`\n    display: inline-block;\n    width: 250px;\n    height: 35px;\n    font-size: 24px;\n    line-height: 36px;\n    font-weight: 600;\n    color: #417c49;\n    /* background-color: #f8f8e8; */\n    overflow: hidden;\n    white-space: nowrap;\n`;","import { useAuth0 } from \"@auth0/auth0-react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport { GlobalContext } from \"../entry/systemEntry\";\n\n\nconst ScoreInfoTab = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const [userId, setUserId] = useState('-');\n\n    const directScore = store.systemState.directScore;\n\n    const [owner, name] = directScore == null ? ['-', '-'] : [directScore.owner, directScore.name];\n\n    return (<_Wrap>\n        <_Left>\n            <_Recored>\n                <_TitleLabel>Score Data</_TitleLabel>\n            </_Recored>\n            <_ListInfoDiv isEnable={true}>\n                <_Recored>\n                    <_ItemnLabel>owner</_ItemnLabel>\n                    <_ItemnValue>{owner}</_ItemnValue>\n                </_Recored>\n                <_Recored>\n                    <_ItemnLabel>name</_ItemnLabel>\n                    <_ItemnValue>{name}</_ItemnValue>\n                </_Recored>\n                <_Button isEnable={true} onClick={() => {\n                    saveFile(JSON.stringify(store.scoreData));\n                }}>Download</_Button>\n            </_ListInfoDiv>\n        </_Left>\n    </_Wrap>);\n}\n\nexport default ScoreInfoTab;\n\nconst saveFile = (plainData: string) => {\n    const options = {\n        types: [\n            {\n                accept: {\n                    'text/plain': ['.lcrs'],\n                },\n            },\n        ],\n    };\n    window.showSaveFilePicker(options).then((handle) => {\n        (async () => {\n            //ファイルへ書き込むための FileSystemWritableFileStream を作成\n            const writable = await handle.createWritable();\n            //テキストデータの書き込み\n            const text = DataUtil.gZip(plainData);\n            await writable.write(text);\n            //ファイルを閉じる\n            await writable.close();\n        })();\n    }).catch(() => {\n        console.log('キャンセルされました');\n    });\n}\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: calc(100% - 8px);\n    margin: 4px 0 0 4px;\n    background-color: #ccc;\n`;\n\nconst _Left = styled.div`\n    display: inline-block;\n    width: 50%;\n    height: 100%;\n    background-color: #bbcac7;\n`;\n\nconst _ListInfoDiv = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: 400px;\n    margin: 4px 0 4px 4px;\n    background-color: #acacac;\n    border: solid 1px #1b00b3;\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.3;\n        pointer-events: none;\n    `}\n    border-radius: 4px;\n    box-sizing: border-box;\n    color: #060053;\n`;\n\nconst _TitleLabel = styled.div`\n    display: inline-block;\n    height: 40px;\n    font-size: 30px;\n    font-weight: 600;\n    color: #1c2c95;\n    /* background-color: #3f80cf57; */\n    padding: 0 10px;\n`;\nconst _Recored = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 35px;\n    /* background-color: #3fcf7b56; */\n    padding: 4px 0 0 10px;\n`;\n\nconst _ItemnLabel = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: 140px;\n    font-size: 24px;\n    line-height: 24px;\n    font-weight: 600;\n    color: #08106e;\n    border: solid 1px #1b00b3;\n    box-sizing: border-box;\n    /* background-color: #85a2c5; */\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\n    border-radius: 4px;\n    text-align: center;\n`;\n\nconst _ItemnValue = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 24px;\n    line-height: 30px;\n    user-select: text;\n    /* font-weight: 600; */\n    color: #ffffff;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #808080;\n    text-align: left;\n`;\n\nconst _ItemnForm = styled.input`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 24px;\n    line-height: 24px;\n    /* font-weight: 600; */\n    color: #1a1a1a;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #e9e9e9;\n    text-align: left;\n`;\n\nconst _ButtonsDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    background-color: #888888;\n    box-sizing: border-box;\n    text-align: left;\n`;\n\nconst _Button = styled.div<{\n    isEnable: boolean;\n}>`\n    ${_CSS_LABEL_MIDIUM}\n    /* width: 160px; */\n    padding: 0 40px;\n    /* line-height: 25px; */\n    box-sizing: border-box;\n    background-color: #a8a8a8;\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\n    border: 1px solid #1a2b3f;\n    color: #1a2b3f;\n    border-radius: 4px;\n    margin: 5px 0 0 4px;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        /* background-color: #98bfc2; */\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\n    }\n`;","import { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\nimport { GlobalContext } from \"../entry/systemEntry\";\nimport EditTab from \"../score/edit/editTab\";\nimport ScoreInfoTab from \"./scoreInfoTab\";\n\nconst PreviewChannel = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    return (\n        <_Wrap>\n            <TabbedPane\n                tabElements={[\n                    { name: 'Info', disable: false, cont: <ScoreInfoTab /> },\n                    { name: 'View', disable: false, cont: <EditTab /> },\n                ]}\n                activeNo={store.systemState.scoreTabIndex}\n            />\n        </_Wrap>\n    );\n}\n\nexport default PreviewChannel;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\n    background-color: transparent;\n    /* background-color: #c3d8dd6f; */\n    /* border: solid 1px black;\n    border-radius: 5px; */\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\n`;","import { useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        parent.isOpen = true;\r\n        return {\r\n            data, parent, index: -1, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n    }) => {\r\n\r\n        const buildElementNodeFromData = () => {\r\n            let count = -1;\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                count++;\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(()=> {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull /> : <_LineTop />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n                list.push(\r\n                    <_Record key={list.length}>\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx onClick={() => {\r\n                            props.clickEvent(element);\r\n                            setRootElementNode({ ...rootElementNode });\r\n                        }}>\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate]);\r\n\r\n        return (\r\n            <_Wrap>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c2cacc;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    /* background-color: #cc00ff11; */\r\n    /* width: calc(100% - 10px); */\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #84e3e8; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import styled, { css } from \"styled-components\";\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../../../base/design/styles\";\nimport { Dispatcher } from \"../../../../redux/dispatcher/dispatcher\";\nimport ThemaUtil from \"../themaUtil\";\nimport TreeUtil from \"../treeUtil\";\n\nnamespace ThemaEditTabUtil {\n\n    export type ComponentArgs = {\n        node: TreeUtil.ElementNode;\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\n        invalidate: () => void;\n        setThamaData: React.Dispatch<React.SetStateAction<ThemaUtil.LevelBase>>;\n        dispatcher: Dispatcher;\n    }\n\n    export const InputTextForm = (props: {\n        titleLabel: string;\n        value: string;\n        setValue: (value: string) => void;\n    }) => {\n        return (\n            <_Record isEnable={true}>\n                <_ItemnLabel>{props.titleLabel}</_ItemnLabel>\n                <_ItemnInput type=\"text\" value={props.value} onChange={(e) => {\n                    props.setValue(e.target.value);\n                }} />\n            </_Record>\n        );\n    }\n\n    export const InputComboboxForm = (props: {\n        titleLabel: string;\n        value: string;\n        setValue: (value: string) => void;\n        list: { value: string, labelText: string }[];\n    }) => {\n        return (\n            <_Record isEnable={true}>\n                <_ItemnLabel>{props.titleLabel}</_ItemnLabel>\n                <_ItemnCombobox value={props.value} onChange={(e) => {\n                    props.setValue(e.target.value);\n                }} >{props.list.map((item, i) => {\n                    return <option key={i} value={item.value}>{item.labelText}</option>\n                })}</_ItemnCombobox>\n            </_Record>\n        );\n    }\n\n    export const LabelTextItem = (props: {\n        titleLabel: string;\n        value: string;\n    }) => {\n        return (\n            <_Record isEnable={true}>\n                <_ItemnLabel>{props.titleLabel}</_ItemnLabel>\n                <_ItemnInput readOnly type=\"text\" value={props.value} />\n            </_Record>\n        );\n    }\n\n    export const TextAreaView = (props: {\n        value: string;\n    }) => {\n        return (\n            <_TextArea readOnly value={props.value} />\n        );\n    }\n\n    export const BorderPanel = (props: {\n        isEnable?: boolean;\n        innerJsx: JSX.Element;\n    }) => {\n        return (\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\n        );\n    }\n\n    export type ButtonProps = {\n        name: string;\n        isEnable?: boolean;\n        callback: () => void;\n    }\n    export const ButtonDiv = (props: {\n        buttons: ButtonProps[]\n    }) => {\n        return (\n            <_Record isEnable={true}>\n                {props.buttons.map((button, i) => {\n                    return (\n                        <_Button\n                            key={i}\n                            isEnable={button.isEnable ?? true}\n                            onClick={button.callback}\n                        >{button.name}</_Button>\n                    );\n                })}\n            </_Record>\n        );\n    }\n\n    export type ListButtonProps = {\n        label: string;\n        width: number;\n        isEnable?: boolean;\n        callback: () => void;\n    }\n\n    export const RecordList = (props: {\n        height: number;\n        records: {\n            label: string;\n            buttons: ListButtonProps[];\n        }[]\n    }) => {\n        return (\n            <_ListRecordFrame height={props.height}>\n                {props.records.map((record, i) => {\n                    const dim = record.buttons.map(button => button.width).reduce((a, b) => a + b + 2);\n                    console.log(dim);\n                    const buttonJsxList = record.buttons.map((button, i) => {\n                        return <_ListRecordButton\n                            key={i}\n                            width={button.width}\n                            isEnable={button.isEnable ?? true}\n                            onClick={button.callback}\n                        >{button.label}</_ListRecordButton>\n                    });\n                    return (\n                        <_ListRecordItem key={i}>\n                            <_ListRecordLabel dim={dim + 2}>{record.label}</_ListRecordLabel>{buttonJsxList}\n                        </_ListRecordItem>\n                    );\n                })}\n            </_ListRecordFrame>\n        );\n    }\n}\n\nexport default ThemaEditTabUtil;\n\nconst _Record = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    /* background-color: #b3b4c4; */\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n`;\n\nconst _ItemnLabel = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: 140px;\n    font-size: 24px;\n    line-height: 24px;\n    font-weight: 600;\n    color: #08106e;\n    border: solid 1px #1b00b3;\n    box-sizing: border-box;\n    /* background-color: #85a2c5; */\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\n    border-radius: 4px;\n    text-align: center;\n    vertical-align: top;\n    margin-left: 4px;\n    margin-top: 2px;\n`;\n\nconst _ItemnInput = styled.input<{\n    readOnly?: boolean;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 150px);\n    margin-top: 2px;\n    margin-left: 4px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #1f1f1f;\n    border: solid 1px #000;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #dbdbdb;\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    ${props => !props.readOnly ? '' : css`\n        color: #020075;\n        border: none;\n        outline: none;\n        background-color: transparent;\n    `}\n`;\n\nconst _ItemnCombobox = styled.select<{\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 150px);\n    margin-top: 2px;\n    margin-left: 4px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #1f1f1f;\n    border: solid 1px #000;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #dbdbdb;\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n`;\n\nconst _ButtonsDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    /* background-color: #888888; */\n    box-sizing: border-box;\n    text-align: left;\n    white-space: nowrap;\n`;\n\nconst _Button = styled.div<{\n    isEnable: boolean;\n}>`\n    ${_CSS_LABEL_MIDIUM}\n    /* width: 160px; */\n    padding: 0 40px;\n    /* line-height: 25px; */\n    box-sizing: border-box;\n    background-color: #a8a8a8;\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\n    border: 1px solid #1a2b3f;\n    color: #1a2b3f;\n    border-radius: 4px;\n    margin-left: 4px;\n    margin-top: 2px;\n    margin: 5px 0 0 4px;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        /* background-color: #98bfc2; */\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\n    }\n`;\n\n\nconst _BorderPanel = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    margin: 4px 0 0 6px;\n    width: calc(100% - 12px);\n    background-color: #d4d6bc;\n    border: 1px solid #000;\n    box-sizing: border-box;\n`;\n\nconst _TextArea = styled.textarea`\n    display: inline-block;\n    font-size: ${Styles.FONT_SMALL}px;\n    color: #0a0038;\n    background-color: #b7bcd3;\n    resize: none;\n    width: calc(100% - 8px);\n    height: 150px;\n    box-sizing: border-box;\n    margin: 0 0 0 4px;\n    outline: none;\n`;\n\nconst _ListRecordFrame = styled.div<{\n    height: number;\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: ${props => props.height}px;\n    margin: 4px 0 0 4px;\n    border: solid 2px #001685;\n    background-color: #bcbcbc;\n    box-sizing: border-box;\n    padding: 0 0 2px 0;\n    overflow-y: auto;\n`;\n\nconst _ListRecordItem = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 30px;\n    ${Styles.CSS_LABEL_SMALL};\n    margin: 2px 0 0 0;\n    background-color: #fff7dc;\n    text-align: left;\n    box-sizing: border-box;\n    padding-left: 4px;\n`;\n\nconst _ListRecordLabel = styled.div<{\n    dim: number;\n}>`\n    display: inline-block;\n    width: calc(100% - ${props => props.dim}px);\n    height: 100%;\n    color: #9c1e1e;\n    text-align: left;\n`;\n\nconst _ListRecordButton = styled.div<{\n    width: number;\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: ${props => props.width}px;\n    height: 100%;\n    color: #110549;\n    text-align: center;\n    background-color: #93bec3;\n    border-radius: 4px;\n    border: solid 1px #274154;\n    box-sizing: border-box;\n    margin: 0 1px;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        background-color: #b7d6d9;\n    }\n`;","import { useState, useContext, useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../../base/design/styles\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\nimport ThemaUtil from \"../themaUtil\";\nimport TreeUtil from \"../treeUtil\";\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\n\nconst AttrFormTab = () => {\n\n    const { node, invalidate, setFocusNode } = useContext(ThemaTreeContext);\n    const data = node.data as ThemaUtil.LevelAttr;\n\n    const [attr, setAttr] = useState(data.attr);\n    const [symbols, setSymbols] = useState(data.symbols.slice());\n\n    useEffect(()=> {\n        setAttr(data.attr);\n        setSymbols(data.symbols.slice());\n    }, [node]);\n\n    const targetSymbolList = TheoryUtil.getSymbolsFromAttr(attr);\n    return (<>\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"attribute\" value={attr} setValue={(value: string) => {\n            setAttr(value as TheoryUtil.SymbolAttribute);\n            setSymbols([]);\n        }} list={TheoryUtil.SymbolAttributeList.map(item => ({ value: item, labelText: item }))} />\n        <_ListDiv>\n            {targetSymbolList.map((symbol, i) => (\n                <_SymbolItem key={i}\n                    isActive={symbols.includes(symbol.key)}\n                    onClick={() => {\n                        if (!symbols.includes(symbol.key)) symbols.push(symbol.key);\n                        else symbols.splice(symbols.indexOf(symbol.key), 1);\n                        setSymbols(symbols.slice());\n                    }}\n                ><_SymbolKey>{symbol.key}</_SymbolKey> [{symbol.name}]</_SymbolItem>\n            ))}\n        </_ListDiv>\n        <ThemaEditTabUtil.ButtonDiv buttons={[\n            {\n                name: 'Update',\n                isEnable: true, callback: () => {\n                    data.attr = attr;\n                    data.symbols = symbols;\n                    invalidate();\n                }\n            },\n        ]} />\n        <ThemaEditTabUtil.ButtonDiv buttons={[\n            {\n                name: 'Add',\n                isEnable: true, callback: () => {\n                    const rootData: ThemaUtil.LevelRoot = {\n                        minIdx: 0,\n                        maxIdx: 11,\n                        voics: []\n                    };\n                    data.roots.push(rootData);\n                    const newNode = TreeUtil.createNode(rootData, node);\n                    node.children.push(newNode);\n                    setFocusNode(newNode);\n                    invalidate();\n                }\n            },\n        ]} />\n    </>);\n}\n\nexport default AttrFormTab;\n\n\nconst _ListDiv = styled.div`\n    display: inline-block;\n    background-color: #e3ecee;\n    width: calc(100% - 8px);\n    margin: 4px 0 0 4px;\n    box-sizing: border-box;\n    border: 1px solid #26242c;\n    padding: 0 4px 4px 0;\n`;\n\nconst _SymbolItem = styled.div<{\n    isActive: boolean;\n}>`\n    display: inline-block;\n    background-color: #a2bcc2;\n    ${props => !props.isActive ? '' : css`\n        background-color: #dee058;\n    `}\n    ${Styles.CSS_LABEL_SMALL}\n    color: #4f59b3;\n    padding: 0 10px;\n    margin: 4px 0 0 4px;\n    box-sizing: border-box;\n    border: 1px solid #697ab3;\n    border-radius: 5px;\n    &:hover {\n        background-color: #c2d5da;\n        ${props => !props.isActive ? '' : css`\n            background-color:#c2c461;\n        `}\n    }\n`;\n\nconst _SymbolKey = styled.span`\n    color: #d65d5d;\n`;","import { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Styles from \"../../../../base/design/styles\";\nimport DataUtil from \"../../../../utils/dataUtil\";\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\nimport ThemaUtil from \"../themaUtil\";\nimport TreeUtil from \"../treeUtil\";\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\n\nconst BaseFormTab = (props: {\n    themaList: ThemaUtil.LevelBase[];\n    addThema: (thema: ThemaUtil.LevelBase) => void;\n}) => {\n    const { node, setFocusNode, invalidate, setThamaData, dispatcher } = useContext(ThemaTreeContext);\n    const baseNode = (node.depth === 0 ?\n        node : node.parent) as TreeUtil.ElementNode;\n    const baseData = baseNode.data as ThemaUtil.LevelBase;\n    const [metSusNode, metPatNode] = [baseNode.children[0], baseNode.children[1]];\n    const [metSusData, metPatData] = [metSusNode.data as ThemaUtil.LevelMethod, metPatNode.data as ThemaUtil.LevelMethod];\n\n    const [presetSust, setPresetSust] = useState<string>('');\n    const [presetPatt, setPresetPatt] = useState<string>('');\n    const [presetSustList, setPresetSustList] = useState<string[]>(metSusData.presets.slice());\n    const [presetPattList, setPresetPattList] = useState<string[]>(metPatData.presets.slice());\n\n    const [themaName, setThemaName] = useState(baseData.themaName);\n\n    return (<>\n        <ThemaEditTabUtil.ButtonDiv buttons={[\n            {\n                name: 'Export',\n                isEnable: true, callback: () => {\n                    const options = {\n                        types: [\n                            {\n                                accept: {\n                                    'text/plain': ['.lcrt'],\n                                },\n                            },\n                        ],\n                    };\n\n                    window.showSaveFilePicker(options).then((handle) => {\n                        (async () => {\n                            //ファイルへ書き込むための FileSystemWritableFileStream を作成\n                            const writable = await handle.createWritable();\n                            //テキストデータの書き込み\n                            const text = DataUtil.gZip(JSON.stringify(baseData));\n                            await writable.write(text);\n                            //ファイルを閉じる\n                            await writable.close();\n                        })();\n                    }).catch(() => {\n                        console.log('キャンセルされました');\n                    });\n\n                }\n            },\n            {\n                name: 'Import',\n                isEnable: true, callback: () => {\n                    (async () => {\n                        const [fileHandle] = await window.showOpenFilePicker();\n                        const file = await fileHandle.getFile();\n                        const fileContents = await file.text();\n                        const text = DataUtil.unZip(fileContents);\n                        console.log(text);\n                        setThamaData(JSON.parse(text));\n                    })();\n                }\n            },\n            {\n                name: 'Clear',\n                isEnable: true, callback: () => {\n                    baseData.meths[0].defs = [];\n                    baseData.meths[1].defs = [];\n                    baseNode.children[0].children = [];\n                    baseNode.children[1].children = [];\n                    invalidate();\n                }\n            },\n        ]} />\n        <ThemaEditTabUtil.InputTextForm titleLabel=\"name\" value={themaName} setValue={(value: string) => {\n            setThemaName(value);\n        }} />\n        <ThemaEditTabUtil.BorderPanel innerJsx={<>\n            <ThemaEditTabUtil.LabelTextItem titleLabel=\"Method\" value=\"sustain\" />\n\n            <ThemaEditTabUtil.InputTextForm titleLabel=\"Preset\" value={presetSust} setValue={(value: string) => {\n                setPresetSust(value);\n            }} />\n            <ThemaEditTabUtil.ButtonDiv buttons={[\n                {\n                    name: 'Add',\n                    isEnable: presetSust !== '' && !presetSustList.includes(presetSust), \n                    callback: () => {\n                        presetSustList.push(presetSust);\n                        setPresetSustList(presetSustList.slice());\n                        setPresetSust('');\n                    }\n                },\n            ]} />\n            <ThemaEditTabUtil.RecordList\n                height={100}\n                records={presetSustList.map((preset, i) => {\n                    return {\n                        label: preset, buttons: [\n                            {\n                                label: '↓', width: 30,\n                                isEnable: i < presetSustList.length - 1,\n                                callback: () => {\n                                    const cache = presetSustList[i];\n                                    presetSustList[i] = presetSustList[i + 1];\n                                    presetSustList[i + 1] = cache;\n                                    setPresetSustList(presetSustList.slice());\n                                },\n                            },\n                            {\n                                label: '↑', width: 30,\n                                isEnable: i > 0,\n                                callback: () => {\n                                    const cache = presetSustList[i];\n                                    presetSustList[i] = presetSustList[i - 1];\n                                    presetSustList[i - 1] = cache;\n                                    setPresetSustList(presetSustList.slice());\n                                },\n                            },\n                            {\n                                label: 'Delete', width: 60, callback: () => {\n                                    presetSustList.splice(i, 1);\n                                    setPresetSustList(presetSustList.slice());\n                                },\n                            },\n                        ]\n                    };\n                })} />\n            <ThemaEditTabUtil.ButtonDiv buttons={[\n                {\n                    name: 'Add attribute node',\n                    isEnable: true, callback: () => {\n                        const attrData: ThemaUtil.LevelAttr = {\n                            attr: 'triad',\n                            symbols: [],\n                            roots: []\n                        };\n                        (metSusData.defs as ThemaUtil.LevelAttr[]).push(attrData);\n                        const newNode = TreeUtil.createNode(attrData, metSusNode);\n                        metSusNode.children.push(newNode);\n                        setFocusNode(newNode);\n                        invalidate();\n                    }\n                },\n            ]} />\n        </>} />\n        <ThemaEditTabUtil.BorderPanel innerJsx={<>\n            <ThemaEditTabUtil.LabelTextItem titleLabel=\"Method\" value=\"pattern\" />\n\n            <ThemaEditTabUtil.InputTextForm titleLabel=\"Preset\" value={presetPatt} setValue={(value: string) => {\n                setPresetPatt(value);\n            }} />\n            <ThemaEditTabUtil.ButtonDiv buttons={[\n                {\n                    name: 'Add',\n                    isEnable: presetPatt !== '' && !presetPattList.includes(presetPatt),\n                    callback: () => {\n                        presetPattList.push(presetPatt);\n                        setPresetPattList(presetPattList.slice());\n                        setPresetPatt('');\n                    }\n                },\n            ]} />\n            <ThemaEditTabUtil.RecordList\n                height={100}\n                records={presetPattList.map((preset, i) => {\n                    return {\n                        label: preset, buttons: [\n                            {\n                                label: '↓', width: 30,\n                                isEnable: i < presetPattList.length - 1,\n                                callback: () => {\n                                    const cache = presetPattList[i];\n                                    presetPattList[i] = presetPattList[i + 1];\n                                    presetPattList[i + 1] = cache;\n                                    setPresetPattList(presetPattList.slice());\n                                },\n                            },\n                            {\n                                label: '↑', width: 30,\n                                isEnable: i > 0,\n                                callback: () => {\n                                    const cache = presetPattList[i];\n                                    presetPattList[i] = presetPattList[i - 1];\n                                    presetPattList[i - 1] = cache;\n                                    setPresetPattList(presetPattList.slice());\n                                },\n                            },\n                            {\n                                label: 'Delete', width: 60, callback: () => {\n                                    presetPattList.splice(i, 1);\n                                    setPresetPattList(presetPattList.slice());\n                                },\n                            },\n                        ]\n                    };\n                })} />\n            <ThemaEditTabUtil.ButtonDiv buttons={[\n                {\n                    name: 'Add sustain node',\n                    isEnable: true, callback: () => {\n                        const sustData: ThemaUtil.LevelSust = {\n                            beat: 4,\n                            head: 0,\n                            tail: 0,\n                            patts: []\n                        };\n                        (metPatData.defs as ThemaUtil.LevelSust[]).push(sustData);\n                        const newNode = TreeUtil.createNode(sustData, metPatNode);\n                        metPatNode.children.push(newNode);\n                        setFocusNode(newNode);\n                        invalidate();\n                    }\n                },\n            ]} />\n        </>} />\n        <ThemaEditTabUtil.ButtonDiv buttons={[\n            {\n                name: 'Update',\n                isEnable: true, callback: () => {\n                    baseData.themaName = themaName;\n                    metSusData.presets = presetSustList.slice();\n                    metPatData.presets = presetPattList.slice();\n                    invalidate();\n                }\n            },\n        ]} />\n        <ThemaEditTabUtil.ButtonDiv buttons={[\n            {\n                name: 'Install',\n                isEnable: !props.themaList.map(thema => thema.themaName).includes(baseData.themaName),\n                callback: () => {\n                    props.addThema(baseData);\n                }\n            }\n        ]} />\n        <ThemaEditTabUtil.RecordList\n            height={100}\n            records={props.themaList.map((thema, i) => {\n                return {\n                    label: thema.themaName, buttons: [\n                        {\n                            label: '↓', width: 30,\n                            isEnable: i < props.themaList.length - 1,\n                            callback: () => {\n                                const cache = props.themaList[i];\n                                props.themaList[i] = props.themaList[i + 1];\n                                props.themaList[i + 1] = cache;\n                                invalidate();\n                            },\n                        },\n                        {\n                            label: '↑', width: 30,\n                            isEnable: i > 0,\n                            callback: () => {\n                                const cache = props.themaList[i];\n                                props.themaList[i] = props.themaList[i - 1];\n                                props.themaList[i - 1] = cache;\n                                invalidate();\n                            },\n                        },\n                        {\n                            label: 'Load', width: 50, callback: () => {\n\n                            },\n                        },\n                        {\n                            label: 'Delete', width: 60, callback: () => {\n                                props.themaList.splice(i, 1);\n                                invalidate();\n                            },\n                        },\n                    ]\n                };\n            })} />\n    </>);\n}\n\nexport default BaseFormTab;\n\n","import { useContext, useState } from \"react\";\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\nimport { ChordBacking } from \"../../../../redux/store/score/scoreData\";\nimport BackingUtil from \"../../../../utils/backingUtil\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\nimport ThemaUtil from \"../themaUtil\";\nimport TreeUtil from \"../treeUtil\";\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\n\nconst PattFormTab = () => {\n\n    const { node, invalidate, setFocusNode, dispatcher } = useContext(ThemaTreeContext);\n\n    const data = node.data as ThemaUtil.LevelPatt;\n    const sustData = node.parent?.data as ThemaUtil.LevelSust;\n    const metData = node.parent?.parent?.data as ThemaUtil.LevelMethod;\n\n    const [pattName, setPattName] = useState(data.pattName);\n    const [rootIndex, setRootIndex] = useState(0);\n    const [symbolKey, setSymbolKsy] = useState<TheoryUtil.SymbolKey>('major');\n    const [source, setSource] = useState(data.source);\n\n    return (<>\n        <ThemaEditTabUtil.InputTextForm titleLabel=\"name\" value={pattName} setValue={(value: string) => {\n            setPattName(value);\n        }} />\n        <ThemaEditTabUtil.BorderPanel\n            isEnable={true}\n            innerJsx={<>\n                <ThemaEditTabUtil.InputComboboxForm titleLabel=\"root\" value={rootIndex.toString()} setValue={(value: string) => {\n                    setRootIndex(Number.parseInt(value));\n                }} list={TheoryUtil.KEY12_SHARP_LIST.map((key12, idx) => (\n                    { value: idx.toString(), labelText: key12 }\n                ))} />\n                <ThemaEditTabUtil.InputComboboxForm titleLabel=\"symbol\" value={symbolKey} setValue={(value: string) => {\n                    setSymbolKsy(value as TheoryUtil.SymbolKey);\n                }} list={TheoryUtil.SYMBOL_LIST.map((symbol) => (\n                    { value: symbol.key, labelText: `${symbol.key}: [${symbol.name}]` }\n                ))} />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Edit',\n                        isEnable: true, callback: () => {\n                            const chordBacking: ChordBacking = {\n                                pattern: source,\n                                voicingList: []\n                            }\n                            dispatcher.thema.openBackingEditor(\n                                sustData.beat, sustData.head, sustData.tail, symbolKey, rootIndex, chordBacking,\n                                (editor: BackingState.Editor) => {\n                                    if (editor.pattern != null) {\n                                        const pattern = editor.pattern;\n                                        setSource(BackingUtil.buildPatternProps(pattern));\n                                    }\n                                }\n                            );\n                        }\n                    },\n                ]} />\n                <ThemaEditTabUtil.TextAreaView value={JSON.stringify(source)} />\n                <ThemaEditTabUtil.LabelTextItem\n                    titleLabel=\"channel\"\n                    value={(() => {\n                        return source.channelSize\n                    })().toString()}\n                />\n            </>}\n        />\n        <ThemaEditTabUtil.ButtonDiv buttons={[\n            {\n                name: 'Update',\n                isEnable: true, callback: () => {\n                    data.pattName = pattName;\n                    data.source = source;\n                    invalidate();\n                }\n            },\n        ]} />\n        <ThemaEditTabUtil.ButtonDiv buttons={[\n            {\n                name: 'Add',\n                isEnable: true, callback: () => {\n                    const attrData: ThemaUtil.LevelAttr = {\n                        attr: 'triad',\n                        symbols: [],\n                        roots: []\n                    };\n                    data.attrs.push(attrData);\n                    const newNode = TreeUtil.createNode(attrData, node);\n                    node.children.push(newNode);\n                    setFocusNode(newNode);\n                    invalidate();\n                }\n            },\n            {\n                name: 'Del',\n                isEnable: true, callback: () => {\n                    setFocusNode(node.parent as TreeUtil.ElementNode);\n\n                    invalidate();\n                }\n            }\n        ]} />\n    </>);\n}\n\nexport default PattFormTab;\n","import { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\nimport ThemaUtil from \"../themaUtil\";\nimport TreeUtil from \"../treeUtil\";\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\n\nconst RootFormTab = () => {\n    const { node, setFocusNode, invalidate } = useContext(ThemaTreeContext);\n    const data = node.data as ThemaUtil.LevelRoot;\n\n    const [minIdx, setMinIdx] = useState(data.minIdx);\n    const [maxIdx, setMaxIdx] = useState(data.maxIdx);\n\n    return (<>\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"minIdx\" value={minIdx.toString()} setValue={(value: string) => {\n            setMinIdx(Number.parseInt(value));\n        }} list={TheoryUtil.KEY12_SHARP_LIST.map((key12, idx) => (\n            {value: idx.toString(), labelText: key12}\n        ))}/>\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"maxIdx\" value={maxIdx.toString()} setValue={(value: string) => {\n            setMaxIdx(Number.parseInt(value));\n        }} list={TheoryUtil.KEY12_SHARP_LIST.map((key12, idx) => (\n            {value: idx.toString(), labelText: key12}\n        ))}/>\n        <ThemaEditTabUtil.ButtonDiv buttons={[\n            {\n                name: 'Update',\n                isEnable: true, callback: () => {\n                    data.minIdx = minIdx;\n                    data.maxIdx = maxIdx;\n                    invalidate();\n                }\n            },\n        ]} />\n        <ThemaEditTabUtil.ButtonDiv buttons={[\n            {\n                name: 'Add',\n                isEnable: true, callback: () => {\n                    const voicData: ThemaUtil.LevelVoic = {\n                        source: [],\n                        presets: []\n                    };\n                    data.voics.push(voicData);\n                    const newNode = TreeUtil.createNode(voicData, node);\n                    node.children.push(newNode);\n                    setFocusNode(newNode);\n                    invalidate();\n                }\n            },\n        ]} />\n    </>);\n}\n\nexport default RootFormTab;\n","import { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { ChordBacking } from \"../../../../redux/store/score/scoreData\";\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\nimport ThemaUtil from \"../themaUtil\";\nimport TreeUtil from \"../treeUtil\";\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\n\nconst SustFormTab = (props: {\n}) => {\n    const { node, invalidate, setFocusNode } = useContext(ThemaTreeContext);\n    const data = node.data as ThemaUtil.LevelSust;\n\n    const [beat, setBeat] = useState(data.beat);\n    const [head, setHead] = useState(data.head);\n    const [tail, setTail] = useState(data.tail);\n    return (<>\n\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"beat\" value={beat.toString()}\n            list={[1, 2, 3, 4].map(v => ({ value: v.toString(), labelText: v.toString() }))}\n            setValue={(value: string) => {\n                setBeat(Number.parseInt(value));\n            }} />\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"head\" value={head.toString()}\n            list={[-2, -1, 0, 1, 2].map(v => ({ value: v.toString(), labelText: v.toString() }))}\n            setValue={(value: string) => {\n                setHead(Number.parseInt(value));\n            }} />\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"tail\" value={tail.toString()}\n            list={[-2, -1, 0, 1, 2].map(v => ({ value: v.toString(), labelText: v.toString() }))}\n            setValue={(value: string) => {\n                setTail(Number.parseInt(value));\n            }} />\n        <ThemaEditTabUtil.ButtonDiv buttons={[\n            {\n                name: 'Update',\n                isEnable: true, callback: () => {\n                    data.beat = beat;\n                    data.head = head;\n                    data.tail = tail;\n                    invalidate();\n                }\n            },\n        ]} />\n        <ThemaEditTabUtil.ButtonDiv buttons={[\n            {\n                name: 'Add',\n                isEnable: true, callback: () => {\n                    const pattData: ThemaUtil.LevelPatt = {\n                        pattName: 'pattern000',\n                        source: {\n                            channelSize: 1,\n                            layers: [\n                                {\n                                    divs: [{rate: 4, div3: 0, isDot: false}],\n                                    notesList: [],\n                                    vels: [5]\n                                },\n                                {\n                                    divs: [{rate: 4, div3: 0, isDot: false}],\n                                    notesList: [],\n                                    vels: [5]\n                                }\n                            ]\n                        },\n                        attrs: []\n                    };\n                    data.patts.push(pattData);\n                    const newNode = TreeUtil.createNode(pattData, node);\n                    node.children.push(newNode);\n                    setFocusNode(newNode);\n                    invalidate();\n                }\n            },\n        ]} />\n    </>);\n}\n\nexport default SustFormTab;\n\n","import { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\nimport { ChordBacking } from \"../../../../redux/store/score/scoreData\";\nimport BackingUtil from \"../../../../utils/backingUtil\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\nimport ThemaUtil from \"../themaUtil\";\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\n\nconst VoicFormTab = (props: {\n    isPattern: boolean;\n}) => {\n    const { node, invalidate, dispatcher } = useContext(ThemaTreeContext);\n    const data = node.data as ThemaUtil.LevelVoic;\n    const methData = !props.isPattern ?\n        // method sustain\n        node.parent?.parent?.parent?.data as ThemaUtil.LevelMethod :\n        // method pattern\n        node.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod;\n    const sustData = !props.isPattern ? null : node.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelSust;\n    const pattData = !props.isPattern ? null : node.parent?.parent?.parent?.data as ThemaUtil.LevelPatt;\n    const attrData = node.parent?.parent?.data as ThemaUtil.LevelAttr;\n    const rootData = node.parent?.data as ThemaUtil.LevelRoot;\n\n    // if(props.isPattern) console.log(data.source); \n    const [rootIndex, setRootIndex] = useState(0);\n    const [symbolKey, setSymbolKsy] = useState<TheoryUtil.SymbolKey>('major');\n    const [source, setSource] = useState(data.source);\n    const [preset, setPreset] = useState<string>('');\n    const [presetList, setPresetList] = useState<string[]>(data.presets.slice());\n\n    return (<>\n        <ThemaEditTabUtil.ButtonDiv buttons={[\n            {\n                name: 'Edit',\n                isEnable: true, callback: () => {\n                }\n            },\n        ]} />\n        <ThemaEditTabUtil.BorderPanel\n            isEnable={true}\n            innerJsx={<>\n                <ThemaEditTabUtil.InputComboboxForm titleLabel=\"root\" value={rootIndex.toString()} setValue={(value: string) => {\n                    setRootIndex(Number.parseInt(value));\n                }} list={TheoryUtil.KEY12_SHARP_LIST.map((key12, idx) => (\n                    { value: idx.toString(), labelText: key12 }\n                ))} />\n                <ThemaEditTabUtil.InputComboboxForm titleLabel=\"symbol\" value={symbolKey} setValue={(value: string) => {\n                    setSymbolKsy(value as TheoryUtil.SymbolKey);\n                }} list={TheoryUtil.SYMBOL_LIST.filter((symbol) => {\n                    return attrData.symbols.includes(symbol.key);\n                }).map((symbol) => (\n                    { value: symbol.key, labelText: `${symbol.key}: [${symbol.name}]` }\n                ))} />\n                <ThemaEditTabUtil.LabelTextItem\n                    titleLabel=\"channel\"\n                    value={pattData == null ? '-' : pattData.source.channelSize.toString()}\n                />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Edit',\n                        isEnable: true, callback: () => {\n                            if (pattData == null || sustData == null) {\n\n                            } else {\n                                const chordBacking: ChordBacking = {\n                                    pattern: pattData.source,\n                                    voicingList: source\n                                }\n                                dispatcher.thema.openBackingEditor(\n                                    sustData.beat, sustData.head, sustData.tail, symbolKey, rootIndex, chordBacking,\n                                    (editor: BackingState.Editor) => {\n                                        setSource(BackingUtil.getVoicingListFromTable(editor.voicingTable));\n                                    }\n                                );\n                            }\n                        }\n                    },\n                ]} />\n                <ThemaEditTabUtil.TextAreaView value={JSON.stringify(source)} />\n                <ThemaEditTabUtil.LabelTextItem\n                    titleLabel=\"List\"\n                    value={(() => {\n                        return data.source.map(v => {\n                            return `${v.octave}-${v.struct}`;\n                        }).join(', ');\n                    })()}\n                />\n            </>}\n        />\n        <ThemaEditTabUtil.InputComboboxForm\n            titleLabel=\"Preset\" value={preset}\n            setValue={(value: string) => {\n                setPreset(value);\n            }}\n            list={[{ value: '', labelText: '' }].concat(methData.presets.filter(preset => (\n                !presetList.includes(preset)\n            )).map(preset => ({\n                labelText: preset,\n                value: preset\n            })))}\n        />\n        <ThemaEditTabUtil.ButtonDiv buttons={[\n            {\n                name: 'Add',\n                isEnable: preset !== '' && !presetList.includes(preset),\n                callback: () => {\n                    presetList.push(preset);\n                    setPresetList(presetList.slice());\n                    setPreset('');\n                }\n            },\n        ]} />\n        <ThemaEditTabUtil.RecordList\n            height={100}\n            records={presetList.map((preset, i) => {\n                return {\n                    label: preset, buttons: [\n                        {\n                            label: '↓', width: 30,\n                            isEnable: i < presetList.length - 1,\n                            callback: () => {\n                                const cache = presetList[i];\n                                presetList[i] = presetList[i + 1];\n                                presetList[i + 1] = cache;\n                                setPresetList(presetList.slice());\n                            },\n                        },\n                        {\n                            label: '↑', width: 30,\n                            isEnable: i > 0,\n                            callback: () => {\n                                const cache = presetList[i];\n                                presetList[i] = presetList[i - 1];\n                                presetList[i - 1] = cache;\n                                setPresetList(presetList.slice());\n                            },\n                        },\n                        {\n                            label: 'Delete', width: 60, callback: () => {\n                                presetList.splice(i, 1);\n                                setPresetList(presetList.slice());\n                            },\n                        },\n                    ]\n                };\n            })}\n        />\n        <ThemaEditTabUtil.ButtonDiv buttons={[\n            {\n                name: 'Update',\n                isEnable: true, callback: () => {\n                    data.source = source.slice();\n                    data.presets = presetList.slice();\n                    invalidate();\n                }\n            },\n        ]} />\n    </>);\n}\n\nexport default VoicFormTab;","import styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport { BackingPatternProps, VoicingProps } from \"../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport TreeUtil from \"./treeUtil\";\r\n\r\nnamespace ThemaUtil {\r\n\r\n    export type Method = 'sustain' | 'pattern';\r\n\r\n    export type LevelAttr = {\r\n        attr: TheoryUtil.SymbolAttribute;\r\n        symbols: TheoryUtil.SymbolKey[];\r\n        roots: LevelRoot[];\r\n    }\r\n    export type LevelRoot = {\r\n        minIdx: number;\r\n        maxIdx: number;\r\n        voics: LevelVoic[];\r\n    }\r\n    export type LevelVoic = {\r\n        source: VoicingProps[];\r\n        presets: string[];\r\n    }\r\n\r\n    export type LevelPatt = {\r\n        pattName: string;\r\n        source: BackingPatternProps;\r\n        attrs: LevelAttr[];\r\n    }\r\n    export type LevelSust = {\r\n        beat: number;\r\n        head: number;\r\n        tail: number;\r\n        patts: LevelPatt[];\r\n    }\r\n\r\n    export type LevelMethod = {\r\n        method: Method;\r\n        presets: string[];\r\n        defs: LevelAttr[] | LevelSust[];\r\n    }\r\n\r\n    export type LevelBase = {\r\n        themaName: string;\r\n        meths: LevelMethod[];\r\n    }\r\n\r\n    export const getLabelJsx = (node: TreeUtil.ElementNode, isActive: boolean) => {\r\n        let innderJsx = <></>;\r\n\r\n        const setBaseJsx = () => {\r\n            const data = node.data as ThemaUtil.LevelBase;\r\n            innderJsx = (<>\r\n                <_TypeLabel type='base'>Base</_TypeLabel>\r\n                <_Label>{data.themaName}</_Label>\r\n            </>);\r\n        }\r\n        const setMethJsx = () => {\r\n            const data = node.data as ThemaUtil.LevelMethod;\r\n            innderJsx = (<>\r\n                <_TypeLabel type='method'>Method</_TypeLabel>\r\n                <_Label>{data.method}</_Label>\r\n            </>);\r\n        }\r\n        const setAttrJsx = () => {\r\n            const data = node.data as ThemaUtil.LevelAttr;\r\n            console.log(data.symbols);\r\n            const list = data.symbols.map(symbol => (\r\n                `[${TheoryUtil.getSymbolFromKey(symbol)?.name}]`\r\n            ));\r\n            innderJsx = (<>\r\n                <_TypeLabel type='attr'>Attribute</_TypeLabel>\r\n                <_Label>@{data.attr}: <_C_Symbol>{list.join(', ')}</_C_Symbol></_Label>\r\n            </>);\r\n        }\r\n        const setSustJsx = () => {\r\n            const data = node.data as ThemaUtil.LevelSust;\r\n            innderJsx = (<>\r\n                <_TypeLabel type='sustain'>Sustain</_TypeLabel>\r\n                <_Label>[{data.beat}# ({data.head}-{data.tail})]</_Label>\r\n            </>);\r\n        }\r\n        const setRootJsx = () => {\r\n            const data = node.data as ThemaUtil.LevelRoot;\r\n            const nameList = TheoryUtil.KEY12_SHARP_LIST;\r\n            innderJsx = (<>\r\n                <_TypeLabel type='root'>Root</_TypeLabel>\r\n                <_Label>[{nameList[data.minIdx]}～{nameList[data.maxIdx]}]</_Label>\r\n            </>);\r\n        }\r\n        const setPattJsx = () => {\r\n            const data = node.data as ThemaUtil.LevelPatt;\r\n            innderJsx = (<>\r\n                <_TypeLabel type='pattern'>Pattern</_TypeLabel>\r\n                <_Label>[{data.pattName}]</_Label>\r\n            </>);\r\n        }\r\n        const setVoicJsx = () => {\r\n            const data = node.data as ThemaUtil.LevelVoic;\r\n            innderJsx = (<>\r\n                <_TypeLabel type='voicing'>Voicing</_TypeLabel>\r\n                <_Label>[{data.source.map(v=> {\r\n                    return `${v.octave}-${v.struct}`;\r\n                }).join(', ')}]</_Label>\r\n            </>);\r\n        }\r\n        switch (node.depth) {\r\n            case 0: setBaseJsx(); break;\r\n            case 1: setMethJsx(); break;\r\n            case 2: {\r\n                const method = (node.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'sustain': setAttrJsx(); break;\r\n                    case 'pattern': setSustJsx(); break;\r\n                }\r\n            } break;\r\n            case 3: {\r\n                const method = (node.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'sustain': setRootJsx(); break;\r\n                    case 'pattern': setPattJsx(); break;\r\n                }\r\n            } break;\r\n            case 4: {\r\n                const method = (node.parent?.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'sustain': setVoicJsx(); break;\r\n                    case 'pattern': setAttrJsx(); break;\r\n                }\r\n            } break;\r\n            case 5: {\r\n                const method = (node.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'pattern': setRootJsx(); break;\r\n                }\r\n            } break;\r\n            case 6: {\r\n                const method = (node.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'pattern': setVoicJsx(); break;\r\n                }\r\n            } break;\r\n        }\r\n        return <_NodeFrame isActive={isActive}>{innderJsx}</_NodeFrame>\r\n    }\r\n\r\n    export const getInitialThema = (): LevelBase => {\r\n        return {\r\n            themaName: 'test',\r\n            meths: [\r\n                {\r\n                    method: 'sustain',\r\n                    presets: [],\r\n                    defs: [\r\n                    ]\r\n                },\r\n                {\r\n                    method: 'pattern',\r\n                    presets: [],\r\n                    defs: [\r\n                    ]\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\r\n\r\nexport default ThemaUtil;\r\n\r\n\r\nconst _CSS_FONT = css`\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    height: calc(100% - 8px);\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _TypeLabel = styled.div<{\r\n    type: 'base' | 'method' | 'pattern' | 'sustain' | 'attr' | 'root' | 'voicing'\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    ${_CSS_FONT}\r\n    color: #660000;\r\n    background-color: ${props => {\r\n        switch (props.type) {\r\n            case 'base': return '#6fa480';\r\n            case 'method': return '#7779a2';\r\n            case 'sustain': return '#c7a67e';\r\n            case 'pattern': return '#9b77a2';\r\n            case 'attr': return '#b67575';\r\n            case 'root': return '#a2a177';\r\n            case 'voicing': return '#779ea2';\r\n        }\r\n    }};\r\n    padding: 0 15px;\r\n    border-radius: 5px;\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    ${_CSS_FONT}\r\n    color: #6d1717;\r\n    background-color: #ffffff49;\r\n    padding: 0 10px;\r\n    margin-left: 5px;\r\n`;\r\nconst _C_Symbol = styled.span`\r\n    color: #959595;\r\n`;\r\n\r\nconst _NodeFrame = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    padding: 0 10px;\r\n    height: 100%;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ffee0077;\r\n    `}\r\n`;","import { useContext, useState, useEffect, useMemo, createContext, KeyboardEvent } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport BackingEditorFrame from \"../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport BackingEditorInput from \"../../score/edit/harmonize/input/backingEditorInput\";\r\nimport AttrFormTab from \"./form/attrFormTab\";\r\nimport BaseFormTab from \"./form/baseFormTab\";\r\nimport PattFormTab from \"./form/pattFormTab\";\r\nimport RootFormTab from \"./form/rootFormTab\";\r\nimport SustFormTab from \"./form/sustFormTab\";\r\nimport ThemaEditTabUtil from \"./form/themaEditTabUtil\";\r\nimport VoicFormTab from \"./form/voicFormTab\";\r\nimport ThemaUtil from \"./themaUtil\";\r\nimport TreeUtil from \"./treeUtil\";\r\n\r\n\r\nexport const ThemaTreeContext = createContext({} as ThemaEditTabUtil.ComponentArgs);\r\n\r\n\r\nconst BackingLibraryTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [themaData, setThamaData] = useState(ThemaUtil.getInitialThema());\r\n    // const [isDispEditor, setDispEditor] = useState(true);\r\n\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    // テーマファイルをデータノードに変換する\r\n    const rootDataNode = useMemo(() => {\r\n        const rootNode: TreeUtil.DataNode = {\r\n            data: themaData,\r\n            children: themaData.meths.map(type => {\r\n                const getDefsChildren = () => {\r\n                    switch (type.method) {\r\n                        case 'sustain': {\r\n                            return (type.defs as ThemaUtil.LevelAttr[]).map(attr => ({\r\n                                data: attr,\r\n                                children: attr.roots.map(root => ({\r\n                                    data: root,\r\n                                    children: root.voics.map(voic => ({\r\n                                        data: voic,\r\n                                        children: []\r\n                                    }))\r\n                                }))\r\n                            }));\r\n                        }\r\n                        case 'pattern': {\r\n                            return (type.defs as ThemaUtil.LevelSust[]).map(sust => ({\r\n                                data: sust,\r\n                                children: sust.patts.map(patt => ({\r\n                                    data: patt,\r\n                                    children: patt.attrs.map(attr => ({\r\n                                        data: attr,\r\n                                        children: attr.roots.map(roots => ({\r\n                                            data: roots,\r\n                                            children: roots.voics.map(voic => ({\r\n                                                data: voic,\r\n                                                children: []\r\n                                            }))\r\n                                        }))\r\n                                    }))\r\n                                }))\r\n                            }));\r\n                        }\r\n                    }\r\n                }\r\n                return {\r\n                    data: type,\r\n                    children: getDefsChildren()\r\n                }\r\n            })\r\n        }\r\n        return rootNode;\r\n    }, [themaData]);\r\n\r\n    const activeNo = useMemo<number>(() => {\r\n        if (focusNode != null) {\r\n            switch (focusNode.depth) {\r\n                case 0:\r\n                case 1: {\r\n                    return 0;\r\n                }\r\n                case 2: {\r\n                    const method = (focusNode.parent?.data as ThemaUtil.LevelMethod).method;\r\n                    return method === 'sustain' ? 3 : 1;\r\n                }\r\n                case 3: {\r\n                    const method = (focusNode.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                    return method === 'sustain' ? 4 : 2;\r\n                }\r\n                case 4: {\r\n                    const method = (focusNode.parent?.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                    return method === 'sustain' ? 5 : 3;\r\n                }\r\n                case 5: {\r\n                    return 4;\r\n                }\r\n                case 6: {\r\n                    return 5;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }, [focusNode]);\r\n\r\n    const tabInner = (tabIndex: number, contJsx: JSX.Element) => {\r\n        return (\r\n            activeNo === tabIndex ? <_TabContWrap>{contJsx}</_TabContWrap> : <></>\r\n        )\r\n    }\r\n    // const tabProps: {\r\n\r\n    // }[] = [];\r\n    // const getTabContList = () => {\r\n    //     tabProps.map((props) => {\r\n\r\n    //         return {\r\n    //             name: 'base',\r\n    //             disable: true,\r\n    //             cont: tabInner(0, <BaseFormTab />\r\n    //             )\r\n    //         };\r\n    //     });\r\n    // };\r\n    // const tabContList = getTabContList();\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e: KeyboardEvent) => {\r\n                BackingEditorInput.main(e, store, dispatcher);\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead></_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                            switch (node.depth) {\r\n                                case 0: {\r\n\r\n                                } break;\r\n                            }\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            return ThemaUtil.getLabelJsx(node, focusNode == node)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <ThemaTreeContext.Provider value={{\r\n                    node: focusNode as TreeUtil.ElementNode,\r\n                    setFocusNode: setFocusNode,\r\n                    invalidate: () => { setInvalidate({}) },\r\n                    setThamaData,\r\n                    dispatcher\r\n                }}>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            {\r\n                                name: 'base', disable: true, cont: tabInner(0, <BaseFormTab\r\n                                    themaList={store.systemState.themaList}\r\n                                    addThema={(thema: ThemaUtil.LevelBase)=> {\r\n                                        const themaList = store.systemState.themaList;\r\n                                        themaList.push(JSON.parse(JSON.stringify(thema)));\r\n                                        dispatcher.system.setState({...store.systemState, themaList});\r\n                                    }}\r\n                                />)\r\n                            },\r\n                            { name: 'sustain', disable: true, cont: tabInner(1, <SustFormTab />) },\r\n                            { name: 'pattern', disable: true, cont: tabInner(2, <PattFormTab />) },\r\n                            { name: 'attribute', disable: true, cont: tabInner(3, <AttrFormTab />) },\r\n                            { name: 'root', disable: true, cont: tabInner(4, <RootFormTab />) },\r\n                            { name: 'voicing', disable: true, cont: tabInner(5, <VoicFormTab isPattern={focusNode?.depth === 6} />) },\r\n                        ]}\r\n                        activeNo={activeNo}\r\n                        selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n                    />\r\n                </ThemaTreeContext.Provider>\r\n            </_PropsDiv>\r\n            <_Blind isVisible={store.backingState != null}>\r\n                <_Contents>{store.backingState == null ? <></> : <BackingEditorFrame />}</_Contents>\r\n            </_Blind>\r\n        </_Wrap >\r\n    );\r\n}\r\nexport default BackingLibraryTab;\r\n\r\nconst PROPS_DIV_WIDTH = 560;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c3d8dd;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d8;\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #532fc0; */\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n    padding: 6px 6px 6px 0;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 600px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;","import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport BackingLibraryTab from \"./backing/backingLibraryTab\";\r\n\r\n\r\nconst CustomChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Backing-Library', disable: true, cont: <BackingLibraryTab /> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={0}\r\n                // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CustomChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\nimport { GlobalContext } from \"./systemEntry\";\nimport { AiFillHome } from 'react-icons/ai';\nimport { CgOptions, CgPiano } from 'react-icons/cg';\nimport { GiMusicalScore } from 'react-icons/gi';\nimport { ImPlay } from 'react-icons/im';\nimport { VscSettingsGear } from 'react-icons/vsc';\nimport ScoreChannel from \"../score/scoreChannel\";\nimport SettingChannel from \"../setting/settingChannel\";\nimport PerformChannel from \"../perform/performChannel\";\nimport HomeChannel from \"../home/homeChannel\";\nimport PreviewChannel from \"../preview/previewChannel\";\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport { ScoreData } from \"../../redux/store/score/scoreData\";\nimport CacheUtil from \"../../utils/cacheUtil\";\nimport CustomChannel from \"../custom/customChannel\";\n\nconst MainFrame = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    return (\n        <HashRouter basename={process.env.PUBLIC_URL}>\n            <RouterManage />\n        </HashRouter>\n    );\n}\n\nexport default MainFrame;\n\nconst RouterManage = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const query = new URLSearchParams(useLocation().search);\n    const str = query.get('v') as string;\n\n    const isDirect = store.systemState.directScore != null;\n    return (\n        <Switch>\n            <Route path=\"/\" exact>\n                <_Wrap>\n                    {/* <DraggableDialog /> */}\n                    {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\n                    <ChannelPane\n                        tabElements={[\n                            { name: 'Home', icon: <AiFillHome />, isEnable: !isDirect, cont: <HomeChannel /> },\n                            { name: 'Perform', icon: <CgPiano />, isEnable: false, cont: <PerformChannel /> },\n                            { name: 'Score', icon: <GiMusicalScore />, isEnable: !isDirect, cont: <ScoreChannel /> },\n                            { name: 'Custom', icon: <VscSettingsGear />, isEnable: !isDirect, cont: <CustomChannel /> },\n                            { name: 'Setting', icon: <CgOptions />, isEnable: false, cont: <SettingChannel /> },\n                            { name: 'Preview', icon: <ImPlay />, isEnable: isDirect, cont: !isDirect ? <></> : <PreviewChannel /> }\n                        ]}\n                        activeNo={store.systemState.mainChannelIndex}\n                        selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\n                    />\n                </_Wrap>\n            </Route>\n            <Route path=\"/test\" exact >\n                <_Wrap>\n                </_Wrap>\n            </Route>\n            <Route path=\"/preview\" exact >\n                <DirectView hashKey={str} />\n            </Route>\n        </Switch>\n    );\n}\n\nconst DirectView = (props: {\n    hashKey: string;\n}) => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n    const conteseq = DataUtil.getDecryptionedScoreSeq(props.hashKey);\n\n    const setScoreData = (owner: string, dispnam: string, data: ScoreData) => {\n        store.scoreState.focusIndex = 2;\n        store.scoreState.distIndex = store.scoreState.focusIndex;\n        dispatcher.score.setScoreState({ ...store.scoreState });\n        // dispatcher.score.setScoreTabIndex(1);\n        dispatcher.score.setScoreData(data);\n        // キャッシュの更新\n        store.scoreData = data;\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\n        store.systemState.mainChannelIndex = 4;\n        store.systemState.scoreTabIndex = 0;\n        store.systemState.directScore = {\n            owner, name: dispnam\n        };\n        dispatcher.system.setState(store.systemState);\n    };\n\n    useEffect(() => {\n        DataUtil.findScore(conteseq).then(resList => {\n            if (resList.length > 0) {\n                const source = resList[0]['data'];\n                const owner = resList[0]['owner'];\n                const dispnam = resList[0]['dispnam'];\n                const text = DataUtil.unZip(source);\n                setScoreData(owner, dispnam, JSON.parse(text));\n            }\n        });\n    }, []);\n    if (store.systemState.directScore == null) {\n        return <></>;\n    } else {\n        return <Redirect to=\"/\" />;\n        // return <MainFrame />;\n    }\n}\n\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\n    background-color: transparent;\n    /* background-color: #c3d8dd6f; */\n    /* border: solid 1px black;\n    border-radius: 5px; */\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","import styled, { css } from \"styled-components\";\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\nimport { ImUser } from 'react-icons/im'\nimport { MdOutlineLanguage } from 'react-icons/md'\nimport { useContext, useEffect, useState } from \"react\";\nimport { GlobalContext } from \"./systemEntry\";\nimport LoginFrame from \"../login/loginFrame\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport PatternOptions from \"../backing/pattern/patternOptions\";\n\nconst TotalHeader = () => {\n\n    const { loginWithRedirect, isAuthenticated, logout, user } = useAuth0();\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const [userId, setUserId] = useState('');\n\n    useEffect(() => {\n        console.log(window.location.origin);\n        if (user != undefined && user.email != undefined) {\n            DataUtil.findUserInfo(user.email).then(userList => {\n                console.log(userList);\n                if (userList.length > 0) {\n                    const userProps = userList[0];\n                    store.userEnv.login = {\n                        seq: userProps.seq,\n                        id: userProps.id\n                    }\n                    dispatcher.system.setUserEnv(store.userEnv);\n                    setUserId('@' + userProps.id);\n                } else {\n                    setUserId('unregistered');\n                }\n            });\n        }\n        console.log(user);\n    }, [user]);\n\n    const authButtonJsx = !isAuthenticated ? (\n        <_LoginButton onClick={() => {\n            // store.systemState.dialog = <LoginFrame />;\n            // dispatcher.system.setState(store.systemState);\n            console.log(window.location.origin);\n            loginWithRedirect();\n        }}>\n            <div><ImUser /></div>\n            Login / Sign up\n        </_LoginButton>\n    ) : (<>\n        <_UserName isEntry={store.userEnv.login != undefined}>{userId}</_UserName>\n        <_LoginButton onClick={() => {\n            logout();\n        }}>\n            <div><ImUser /></div>\n            Logout\n        </_LoginButton>\n    </>);\n    return (\n        <_Wrap>\n            <_Label>\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\n            </_Label>\n            <_Menu>\n                {authButtonJsx}\n                <_Language>\n                    <div><MdOutlineLanguage /></div>\n                </_Language>\n            </_Menu>\n        </_Wrap>\n    );\n}\n\nexport default TotalHeader;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: ${TOTAL_HEADER_WIDTH}px;\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\n    /* background-color: #c2c2c2; */\n    box-shadow: 0 0 8px 0 #000b3a48;\n`;\n\nconst _Label = styled.div`\n    display: inline-block;\n    margin: 2px 0 0 10px;\n    width: 200px;\n    height: calc(100% - 4px);\n    /* background-color: #00000013; */\n    font-size: 34px;\n    font-weight: 600;\n    line-height: 36px;\n    text-shadow: 1px 2px 3px #8080806a;\n`;\n\nconst _NORMAL = styled.span`\n    color: #ffffff;\n`;\nconst _ACCENT = styled.span`\n    font-size: 34px;\n    color: #da4242;\n`;\n\n\n\nconst _Menu = styled.div`\n    display: inline-block;\n    /* width: 300px; */\n    height: 100%;\n    position: absolute;\n    right: 30px;\n    /* background-color: #ff00002b; */\n`\n\nconst _MenuItem = styled.div`\n    background-color: #c9c7c7;\n    &:hover {\n        background-color: #cf9bae;\n    }\n    transition: background-color 800ms;\n`\n\nconst _LoginButton = styled(_MenuItem)`\n    display: inline-block;\n    /* width: 240px; */\n    padding: 0 30px;\n    margin: 5px 10px 0 0;\n    height: calc(100% - 10px);\n    border-radius: 20px;\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\n    /* background-color: #adadad; */\n    /* border: 1px solid #7e7e7e; */\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\n    /* text-shadow: 1px 2px 3px #808080ba; */\n    text-align: center;\n    font-size: 22px;\n    font-weight: 600;\n    line-height: 28px;\n    color: #ffffff;\n    vertical-align: top;\n\n    & div {\n        display: inline-block;\n        /* background-color: #0000007d; */\n        margin: 2px 5px 0 0;\n        vertical-align: top;\n    }\n`;\n\nconst _UserName = styled.div<{\n    isEntry: boolean;\n}>`\n    display: inline-block;\n    /* width: 240px; */\n    margin: 5px 20px 0 0;\n    height: calc(100% - 10px);\n    text-align: center;\n    font-size: 22px;\n    font-weight: 600;\n    line-height: 28px;\n    color: #003a86;\n    ${props => props.isEntry ? '' : css`\n        color: #96000057;\n    `}\n    vertical-align: top;\n`;\n\nconst _Language = styled(_MenuItem)`\n    display: inline-block;\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\n    margin: 3px 0 0 0;\n    border-radius: 50%;\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\n    /* background-color: #48aa9d; */\n    /* border: 1px solid #7e7e7e; */\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\n    /* text-shadow: 1px 2px 3px #808080ba; */\n    /* text-align: center; */\n    font-size: 28px;\n    font-weight: 600;\n    color: #ffffff;\n    & div {\n        display: inline-block;\n        margin: 2px 0 0 5px;\n        /* background-color: #0000007d; */\n        vertical-align: top;\n    }\n`;","import { createContext, useCallback, useEffect, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    const callback = useCallback(dispatcher.system.switchSplashToMain, []);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={callback} /\r\n                    >}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport SystemEntry from './system/contents/entry/systemEntry';\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    // 右クリック無効\r\n    document.oncontextmenu = function () { return false; }\r\n\r\n    // window.addEventListener(\"keydown\", function (e) {\r\n    //   // space and arrow keys\r\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n    //     e.preventDefault();\r\n    //   }\r\n    // }, false);\r\n\r\n    document.onkeydown = (e) => {\r\n      // if (!['F5'].includes(e.key)) {\r\n      //   return false;\r\n      // }\r\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n  }, []);\r\n  return (\r\n    <SystemEntry />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\n\nconst REACT_APP_AUTH0_DOMAIN = 'dev-a0p0m4lr.us.auth0.com';\nconst REACT_APP_AUTH0_CLIENT_ID = 'ABaWpYVBZwTr3tkyxhq1kWh2YwT4epew';\n\nReactDOM.render(\n  <Auth0Provider\n    domain={REACT_APP_AUTH0_DOMAIN}\n    clientId={REACT_APP_AUTH0_CLIENT_ID}\n    redirectUri={window.location.origin}\n    // redirectUri={window.location.origin}\n  >\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Auth0Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}