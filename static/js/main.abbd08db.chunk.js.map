{"version":3,"sources":["system/redux/reducer.tsx","system/utils/theoryUtils.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/utils/instrumentsUtil.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/sysModalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/contents/score/manage/manageTab.tsx","system/base/design/styles.tsx","system/base/components/button/executableButton.tsx","system/contents/score/edit/harmonize/input/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChange.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcChange.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/noteSideForm.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/score/edit/harmonize/initial/initialBeat.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternStatus.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionType","SCALE_INDEX","ROOT_ALL","index","isFlat","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","getDegreeRoot","props","KEY12_FLAT_LIST","KEY12_SHARP_LIST","getChordRoot","baseKeyIndex","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SYMBOL_LIST","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_LIST","root","symbolKey","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","getSymbolFromKey","ret","find","symbol","undefined","getSymbolDerives","list","forEach","push","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","notes","total","len4","len8","len16","len4div3","len8div3","getSortetdNotesLen","len8div3Cnt3","Math","floor","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","i","keyIndex","octave","soundName","instrument","soundfontPlayer","stop","play","duration","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","Dispatcher","dispatch","system","setState","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","score","setScoreTabIndex","scoreTabIndex","setScoreState","setKeySwitch","keySwitch","state","setScoreData","moveElement","isNext","sub","chordList","focusIndex","moveSection","curSectionIndex","elementCacheList","sectionNo","sectionCacheList","curSectionInfo","curElementType","length","rangeIndexStart","rangeIndexEnd","incrementDegreeRoot","isUp","data","detail","includes","incrementBeatLen","slice","beatLen","incrementMinuteVal","pos","isTail","value","target","minute","tail","head","incrementMinuteValRelation","nearIndex","addChordElement","element","initialBeat","on","backing","voicingList","pattern","splice","addSectionElement","labelName","addChangeElement","changeType","modulateRelation","domminantValue","keyAdjust","tempoRelation","tempoDiff","tempoRate","tempoAbsolute","beatSignature","removeCurElement","cache","wrapRef","reffers","wrap","body","style","opacity","overflow","width","clientWidth","setTimeout","incrementSymbol","setDiatonicChord","chord","setDefaultBacking","struct","getDefaultBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","tune","setNotesList","notesList","setInstrument","incrementCurNoteKey","isUpper","mode","init","scaleIndexies","map","cur","prevPitchIndex","pitchIndex","interval","tempPitchIndex","adjustScrollY","moveFocus","lastFocus","adjustScrollX","addNotes","notes1","notes2","len","newLeftNormal","nextNormalPos","newRightNormal","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","normal","moveNotes","isBehind","curNormalLeft","prevNormalRight","nextNormalLeft","moveNormal","table","melody","notesX","beatWidth","scrollTo","left","behavior","notesY","top","clientHeight","previewStart","bpm","pitch","openBackingEditor","hideMenu","voicingTable","getInitVoicingTable","chordInfo","chordRoot","closeBackingEditor","getInitialLayer","noteDivList","rate","isHalf","isDiv3","velocityList","Array","col","j","isExist","voicing","applyBackingToChord","getChannels","channels","structIndex","addPatternColumn","layers","layerIndex","lenIndex","movePatternColumn","isRight","layer","tempIndex","setCurrentDivRate","toggleCurrentDivHalf","changeLayer","this","initialStore","userEnv","keyConfig","note","prevElement","nextElement","prevSection","nextSection","addChord","addSection","addChange","deleteCur","editMode","incRoot","decRoot","incBeat","decBeat","symbolMode","colorProps","entryBackground","dialogMode","isTune","mouseState","isPut","lock","x","y","nextLeft","notesState","side","isResize","curChord","mousePitchIndex","mouseMeasurePos","soundfontInfo","gain","scaleMode","resize","move","isPreview","sampler","Sampler","toDestination","harmonize","measure","SysModalDialog","useContext","GlobalContext","isDisplay","dispatcher","_Blind","_Frame","styled","div","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isDisable","disable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","onClick","_Icon","_Label","ChannelContents","_Contents","css","TabbedPane","TabLabel","_TabLabel","TabContents","ManageTab","_Wrap","_Link","scale","timeSignature","fixed","_Object","_CSS_DISABLE","ExecutableButton","size","get","height","fontSize","backgroundColor","callback","labelText","SymbolEditor","curSymbol","baseSymbol","derives","parentJsx","curJsx","childrenJsx","_Header","item","_Row","CalcChord","symbolName","bar","prevCache","isError","beat","chordName","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","pastSecond","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","beatSum","barRem","_Len","_Border","ElementDetailChange","_Type","ElementDetailChord","degreeRoot","degreeOn","useMemo","_Degree","isSwitch","isCurrent","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Tip","jsxList","lenType","valueType","abs","_TipItem","ElementFixedBorder","reverse","ElementDetailInit","_Title","_Value","_Record","ElementDetailSection","CalcChange","ScoreElement","useRef","bodyRef","current","isFocus","isSameSection","chordDetail","ref","isSelectable","isInactive","isChord","_Head","_CurKey","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","num","_Note","NoteBasicInput","e","config","curType","releaseAll","rootIndex","soundFullName","triggerAttack","playChord","Number","NoteKeySwitch","isPress","isElement","backingEditorInput","NoteKeyDown","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","isRootActive","JSON","stringify","isOnActive","_RootItem","isDiatonic","onContextMenu","symbolItemsJsx","_SymbolItem","_Timing","_LabelBeat","_Minute","_LabelMinute","_MinuteItem","isReverse","step","min","max","onChange","_Root","_Symbol","input","SideFormInit","scaleItemJsxList","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_TempoWrap","currentTarget","valueAsNumber","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","toString","_NumberItem","_DirectText","_TemplateFrame","_NumberFrame","_ItemBase","NoteSideForm","HarmMeasure","dataList","cacheList","curBeatJsx","prevBeatJsx","nextBeatJsx","curMinuteJsx","prevMinuteJsx","nextMinuteJsx","memoriJsxList","curIndex","prevIndex","nextIndex","temp","add","sustain","adjust","bean","color","_Memori","_Bar","_Prev","_Start","_Cur","_Next","_Blocks","_Measure","BEAT_WIDTH","ChordInfo","scaleList","structJsxList","tipJsxList","relation","getIntervalValues","_InfoItem","isScale","isUse","isBlack","_Struct","WIDTH","InitialBeatTip","_WrapTip","PatternLength","itemJsxList","PatternTable","channelCount","layerJsxList","jsxLsit","notesJsxLsit","k","_Notes","isEven","isFront","_Layer","zIndex","PatternBuilder","_LengthDiv","_MeasureDiv","_Body","_Footer","PATTERN_HEADER_HEIGHT","ChannelItem","_Option","PatternChannel","channelJsxList","channel","soundIndex","PatternStatus","update","createItem","isEnable","createRateItem","String","setRate","sizeJsxList","_ListItem","_List","select","option","PatternFrame","isUsePattern","_UseSwitch","_Button","isUsePedal","_Main","_StatusDiv","_MainDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","voicingLaneJsxList","isSelected","chordIndex","_VoicingItem","tempChannels","_VoicingLane","_Left","_Relation","_Right","_Info","TIP_WIDTH","BackingEditorFrame","_FooterDiv","HarmHideFrame","isOpen","HarmonizeTab","focus","prevBeat","totalBeat","prevMinute","totalMinute","sectionBeatSum","beatRate","getBeatRate","tabIndex","onKeyDown","onKeyUp","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_HEAD_WIDTH","HarmSections","sections","curSectionNo","section","_Total","MelodyTimeline","measureRef","chordRef","barLength","timelineLength","measureJsxList","barJsx","_Scale","isHead","chordJsxList","_ChordItem","_ChordWrap","_MousePos","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","info","Soundfont","AudioContext","release","then","soundFontPlayer","QuantizeSwitch","MelodyHeader","_QuantizeSelector","_InstrumentSelector","MelodyMouseOperation","mouseDownEvent","button","mouse","rect","getBoundingClientRect","clientX","scrollLeft","clientY","scrollTop","next","mouseMoveEvent","curPos","normalX","searchedChord","prevFocus","right","mouseUpEvent","sort","a","b","posA","posB","MelodyInput","keyDownEvent","alert","keySwitchEvent","MelodyFrame","tableRef","pitchRef","invalidate","setInvalidate","tableWidth","barCount","scaleLineJsxList","_ScaleLine","isBase","notesJsxList","scroll","_NotesWrap","isMove","isOctave","isEdit","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","onMouseDown","onMouseMove","onMouseUp","_Test","_Scroll","EditTab","switchMode","_Mode","_ModeItem","_Buttons","_SECTIONS","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","label","items","degree","degreeRootName","chordRootName","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","clearTimeout","fadeIn","keyframes","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","span","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","Provider","App","document","oncontextmenu","window","addEventListener","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.abbd08db.chunk.js","sourcesContent":["import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature } from \"../redux/store/scoreData\";\r\n\r\nexport const SCALE_INDEX = [0, 2, 4, 5, 7, 9, 11];\r\n\r\nexport type DegreeProps = {\r\n    index: number;\r\n    isFlat: boolean;\r\n};\r\n\r\nexport type ChordProps = {\r\n    root: DegreeProps;\r\n    symbolKey: SymbolKey;\r\n};\r\n\r\nexport const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n    null,\r\n    { index: 0, isFlat: false },\r\n    { index: 1, isFlat: false },\r\n    { index: 1, isFlat: true },\r\n    { index: 2, isFlat: false },\r\n    { index: 3, isFlat: false },\r\n    { index: 3, isFlat: true },\r\n    { index: 4, isFlat: false },\r\n    { index: 5, isFlat: false },\r\n    { index: 6, isFlat: false },\r\n    { index: 6, isFlat: true },\r\n    { index: 7, isFlat: false },\r\n    { index: 8, isFlat: false },\r\n    { index: 8, isFlat: true },\r\n    { index: 9, isFlat: false },\r\n    { index: 10, isFlat: false },\r\n    { index: 10, isFlat: true },\r\n    { index: 11, isFlat: false }\r\n];\r\n\r\n\r\nexport const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\n// export const DEGREE12_FLAT_LIST = [\r\n//     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n// ];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const getDegreeRoot = (props: DegreeProps) => {\r\n    const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n    return list[props.index];\r\n}\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\n\r\nexport const getChordRoot = (props: DegreeProps, baseKeyIndex: number) => {\r\n    const list = props.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n    return list[(baseKeyIndex + props.index) % 12];\r\n}\r\n\r\n\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\n// export const KEY12_MINOR_SCALE_LIST = [\r\n//     'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'Bbm', 'Bm'\r\n// ];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n];\r\n\r\nexport type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\nexport type SymbolKey =\r\n    'major' |\r\n    'minor' |\r\n    'suspend4th' |\r\n    'diminish' |\r\n    'augument' |\r\n    'major-maj7th' |\r\n    'major-min7th' |\r\n    'minor-7th' |\r\n    'minor-maj7th' |\r\n    'sus4-7th' |\r\n    'diminish-7th' |\r\n    'augument-7th' |\r\n    'major-add9th' |\r\n    'minor-add9th' |\r\n    'sixth-9th' |\r\n    'minor-minus5' |\r\n    'minor7-minus5' |\r\n    'major-maj9th' |\r\n    'major-9th'\r\n    ;\r\n\r\n\r\nexport type SymbolAttribute =\r\n    'triad' |\r\n    'seventh' |\r\n    'add9th'\r\n    ;\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey;\r\n    name: string;\r\n    base: null | SymbolKey;\r\n    attr?: SymbolAttribute;\r\n    structs: IntervalRelation[];\r\n}\r\n\r\nexport const SYMBOL_LIST: readonly SymbolParams[] = [\r\n    {\r\n        key: 'major', name: '',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor', name: 'm',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'suspend4th', name: 'sus4',\r\n        base: null,\r\n        structs: ['p1', 'p4', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish', name: 'dim',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish-7th', name: 'dim7',\r\n        base: 'diminish',\r\n        structs: ['p1', 'm3', 'd5', 'd7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'augument', name: 'aug',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'a5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'augument-7th', name: 'aug7',\r\n        base: 'augument',\r\n        structs: ['p1', 'M3', 'a5', 'm7']\r\n    },\r\n    {\r\n        key: 'minor-minus5', name: 'm(-5)',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor7-minus5', name: 'm7(-5)',\r\n        base: 'minor-minus5',\r\n        structs: ['p1', 'm3', 'd5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-maj7th', name: 'maj7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-min7th', name: '7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'minor-7th', name: 'm7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'sus4-7th', name: '7sus4',\r\n        base: 'suspend4th',\r\n        structs: ['p1', 'p4', 'p5']\r\n    },\r\n    {\r\n        key: 'minor-maj7th', name: 'mmaj7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-add9th', name: 'add9',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'minor-add9th', name: 'madd9',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-maj9th', name: 'maj9',\r\n        base: 'major-maj7th',\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-9th', name: '9',\r\n        base: 'major-min7th',\r\n        structs: ['p1', 'm3', 'p5']\r\n    },\r\n];\r\n\r\nexport type IntervalRelation =\r\n    'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n    'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n    'd7' | 'm7' | 'M7'\r\n    ;\r\n\r\nexport const IntervalRelationProps = {\r\n    'p1': 0,\r\n    'm2': 1,\r\n    'M2': 2,\r\n    'm3': 3,\r\n    'M3': 4,\r\n    'p4': 5,\r\n    'd5': 6,\r\n    'p5': 7,\r\n    'a5': 8,\r\n    'm6': 8,\r\n    'M6': 9,\r\n    'd7': 9,\r\n    'm7': 10,\r\n    'M7': 11\r\n}\r\n\r\nexport const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n    { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n];\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n];\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    'bⅢ', 'bⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    'bⅥ', 'bⅥM7',\r\n    'bⅦ', 'bⅦ7'\r\n];\r\n\r\nexport const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n    const ret = SYMBOL_LIST.find((symbol) => {\r\n        if (key === symbol.key) {\r\n            return symbol;\r\n        }\r\n    });\r\n    return ret != undefined ? ret : SYMBOL_LIST[0];\r\n}\r\n\r\nexport const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n    let list: SymbolKey[] = [];\r\n    SYMBOL_LIST.forEach((symbol) => {\r\n        if (key === symbol.base) {\r\n            list.push(symbol.key);\r\n        }\r\n    });\r\n    return list;\r\n}\r\n\r\nexport const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n    return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n}\r\n\r\nexport const getBeatRate = (beatSignature: BeatSignature): [number, number] => {\r\n\r\n    switch (beatSignature) {\r\n        case '4/4': return [4, 4];\r\n        case '3/4': return [3, 4];\r\n    }\r\n    return [0, 0];\r\n}","import { isatty } from \"tty\";\r\nimport { MelodyState } from \"../redux/store/melodyState\";\r\nimport { DetailInit, MelodyLength, ScoreData } from \"../redux/store/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { KEY12_SHARP_LIST } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += notes.len4;\r\n    total += notes.len8 / 2;\r\n    total += notes.len16 / 4;\r\n    total += notes.len4div3 / 3;\r\n    total += notes.len8div3 / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    return getSortetdNotesLen({\r\n        len4: notes1.len4 + notes2.len4,\r\n        len8: notes1.len8 + notes2.len8,\r\n        len16: notes1.len16 + notes2.len16,\r\n        len4div3: notes1.len4div3 + notes2.len4div3,\r\n        len8div3: notes1.len8div3 + notes2.len8div3\r\n    });\r\n}\r\n\r\nexport const getSortetdNotesLen = (base: MelodyLength) => {\r\n\r\n    const len8div3Cnt3 = Math.floor(base.len8div3 / 3);\r\n    base.len8div3 -= len8div3Cnt3 * 3;\r\n    base.len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(base.len8div3 / 2);\r\n    base.len8div3 -= len8div3Cnt2 * 2;\r\n    base.len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(base.len4div3 / 3);\r\n    base.len4div3 -= len4div3Cnt3 * 3;\r\n    base.len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(base.len16 / 2);\r\n    base.len16 -= len16Cnt2 * 2;\r\n    base.len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(base.len8 / 2);\r\n    base.len8 -= len8Cnt2 * 2;\r\n    base.len4 += len8Cnt2;\r\n\r\n    return base;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n    return getSortetdNotesLen({\r\n        len4, len8, len16, len4div3, len8div3\r\n    });\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if (notes.len8div3 > 0) return 6;\r\n    else if (notes.len16 > 0) return 4;\r\n    else if (notes.len4div3 > 0) return 3;\r\n    else if (notes.len8 > 0) return 2;\r\n    else if (notes.len4 > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\n\r\nexport const previewStart = (state: MelodyState, data: ScoreData, instrument: Soundfont.Player) => {\r\n\r\n    const init = data.chordList[0].detail as DetailInit;\r\n    const bpm = init.bpm;\r\n\r\n    for (let i = 0; i < data.notesList.length; i++) {\r\n        const notes = data.notesList[i];\r\n        const pos = getNormalizeLenFromNotes(notes.pos);\r\n        const len = getNormalizeLenFromNotes(notes.len);\r\n        const pitch = notes.pitchIndex;\r\n        const time = 60 / bpm * pos;\r\n\r\n        setTimeout(() => {\r\n            if (instrument != null) {\r\n                const keyIndex = getKeyIndexFromPitcher(pitch);\r\n                const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n                const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n                instrument.stop();\r\n                instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n            }\r\n        }, time * 1000);\r\n    }\r\n}\r\n","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 60;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SCALE_INDEX, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { ChordElement, DetailChange, DetailChord, DetailInit, DetailSection, ScoreData, TuneNotes, VoicingProps } from \"../store/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { BackingLayer, BackingPattern, BackingState, ChannelParam, NoteRate } from \"../store/backingState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont, previewStart } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            // alert(`totalSection=${sectionCacheList.length}, curSection=${curSectionIndex}, focus=${state.focusIndex}`);\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -0.5 && target <= 0.5) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: state.initialBeat,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        addChangeElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'change', detail: {\r\n                    changeType: null,\r\n                    modulateRelation: null,\r\n                    domminantValue: 0,\r\n                    keyAdjust: 0,\r\n                    tempoRelation: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbsolute: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailChange\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            const element = this.store.scoreData.chordList[state.focusIndex];\r\n            const sectionNo = this.store.scoreState.elementCacheList[state.focusIndex].sectionNo;\r\n            if (element.type === 'section' && sectionNo === 0) {\r\n                return;\r\n            }\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // reffer.style.width = '300px';\r\n            wrapRef.style.opacity = '0';\r\n            wrapRef.style.overflow = 'hidden';\r\n            // wrapRef.style.padding = '0';\r\n            wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            setTimeout(() => {\r\n                wrapRef.style.width = '0';\r\n            }, 1);\r\n            setTimeout(() => {\r\n                wrapRef.style.opacity = '';\r\n                wrapRef.style.width = '';\r\n                wrapRef.style.overflow = '';\r\n                // wrapRef.style.padding = '';\r\n                const data = this.store.scoreData;\r\n                data.chordList.splice(state.focusIndex, 1);\r\n                this.score.setScoreData(data);\r\n                state.focusIndex--;\r\n                this.score.setScoreState(state);\r\n                // setTimeout(() => {\r\n                //     reffer.style.opacity = '';\r\n                //     reffer.style.width = '';\r\n                //     const data = this.store.scoreData;\r\n                //     data.chordList.splice(state.focusIndex, 1);\r\n                //     this.score.setScoreData(data);\r\n                // }, 200);\r\n            }, 200);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (key: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const chord = DIATONIC_MAJOR_SCALE_LIST[key];\r\n            detail.root = { ...chord.root };\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public tune = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        incrementCurNoteKey: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n\r\n            const focusIndex = this.store.melodyState.focusIndex;\r\n            if (focusIndex === -1) return;\r\n\r\n            const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n            const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            const cur = notesList[focusIndex];\r\n            const prevPitchIndex = cur.pitchIndex;\r\n            const interval = mode !== 'octave' ? 1 : 12;\r\n            let tempPitchIndex = cur.pitchIndex;\r\n\r\n            while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                if (mode !== 'scale' ||\r\n                    (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                ) {\r\n                    cur.pitchIndex = tempPitchIndex;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // 値が変わっていた場合のみ処理する\r\n            if (prevPitchIndex !== cur.pitchIndex) {\r\n                playSoundfont(cur.pitchIndex, this.store);\r\n                // 画面更新のためにインスタンスを複製する\r\n                this.tune.setNotesList(notesList.slice());\r\n\r\n                this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    this.tune.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    this.tune.setState(state);\r\n                }\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(state.focusIndex + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                this.tune.setState(state);\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curNormalLeft = getNormalizeLenFromNotes(cur.pos);\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = curNormalLeft + curLenNormal;\r\n            const prevNormalRight = state.focusIndex === 0 ? 0 : getNormalizeLenFromNotes(notesList[state.focusIndex - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[state.focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            previewStart(this.store.melodyState, this.store.scoreData, this.store.instruments.soundfontPlayer as Soundfont.Player);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    symbolKey: detail.symbolKey,\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    chordRoot: (detail.root as DegreeProps).index\r\n                },\r\n                voicingTable,\r\n                pattern: null\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setState: (backingState: BackingState) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingLayer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isHalf: false, isDiv3: false }],\r\n                table: [['-']],\r\n                velocityList: [5]\r\n            } as BackingLayer;\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const isExist = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = isExist != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        applyBackingToChord: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const backingState = this.store.backingState as BackingState;\r\n            const table = backingState.voicingTable;\r\n            const backing = detail.backing;\r\n            backing.voicingList.length = 0;\r\n            if (table != null) {\r\n                for (let i = 0; i < table.length; i++) {\r\n                    for (let j = 0; j < table[i].length; j++) {\r\n                        if (table[i][j]) {\r\n                            backing.voicingList.push({ octave: i, struct: j });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            detail.backing = backing;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        getChannels: (table: boolean[][]): ChannelParam[] => {\r\n            const channels: ChannelParam[] = [];\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        channels.push({ octave: i, structIndex: j });\r\n                    }\r\n                }\r\n            }\r\n            if (channels.length === 0) {\r\n                channels.push({ octave: -1, structIndex: 0 });\r\n            }\r\n            return channels;\r\n        },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            lenList.splice(pattern.lenIndex + 1, 0, { rate: 4, isDiv3: false, isHalf: false });\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: NoteRate) => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.isHalf = !cur.isHalf;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        changeLayer: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            this.backing.setState(state);\r\n        }\r\n    }\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SymbolAttribute } from \"./theoryUtils\";\r\n\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\nexport const playChord = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n        // setTimeout(() => {\r\n        //     sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n        // }, 20 * i);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 }\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 }\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 }\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null\r\n    };\r\n    return backing;\r\n}","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./scoreData\"\r\nimport { ScoreState } from \"./scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { BackingState } from \"./backingState\"\r\n\r\n\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        dialogMode: 'none'\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        isTune: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        keySwitch: {\r\n            editMode: false,\r\n            symbolMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 4,\r\n        beatWidth: 120,\r\n        mouseState: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false },\r\n            curChord: null,\r\n            mousePitchIndex: 0,\r\n            mouseMeasurePos: 0\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 5\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false\r\n        },\r\n        isPreview: false\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        sampler: getDefaultSampler(),\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    }\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note : {\r\n        prevElement: string;\r\n        nextElement: string;\r\n        prevSection: string;\r\n        nextSection: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        editMode: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        symbolMode: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = ()=> {\r\n    return {\r\n        note: {\r\n            prevElement: 'ArrowLeft',\r\n            nextElement: 'ArrowRight',\r\n            prevSection: 'ArrowUp',\r\n            nextSection: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'f',\r\n            deleteCur: 'Delete',\r\n            editMode: 'Shift',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n            symbolMode: 'c',\r\n        }\r\n    } as KeyConfig;\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SysModalDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const mode = store.systemState.dialogMode;\r\n    const isDisplay = mode !== 'none';\r\n\r\n    return (\r\n        <_Blind isDisplay={isDisplay}>\r\n            <_Frame>\r\n\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default SysModalDialog;\r\n\r\nconst _Blind = styled.div<{\r\n    isDisplay: boolean;\r\n}>`\r\n    display: ${props => props.isDisplay ? 'block' : 'none'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000000d8;\r\n    z-index: 10;\r\n`;\r\nconst _Frame = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 500px;\r\n    height: 400px;\r\n    background-color: #464646cc;\r\n    border: 1px solid #dadada;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Link onClick={() => {\r\n\r\n                const data: ScoreData = {\r\n                    chordList: [\r\n                        { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' } as DetailInit },\r\n                        { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                        { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                        {\r\n                            type: 'chord', detail: {\r\n                                beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                backing: {\r\n                                    voicingList: [],\r\n                                    pattern: null\r\n                                }\r\n                            } as DetailChord\r\n                        },\r\n                        { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                    ],\r\n                    notesList: []\r\n                };\r\n                dispatcher.score.setScoreData(data);\r\n                store.scoreState.focusIndex = 2;\r\n                dispatcher.score.setScoreState({ ...store.scoreState });\r\n\r\n                dispatcher.score.setScoreTabIndex(1);\r\n                // dispatcher.score.setScoreTabIndex(2);\r\n            }} >Create blank score.</_Link>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 80px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #a8a8a8;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 50px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 10px;\r\n\r\n    &:hover {\r\n        background-color: #5b5e33;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.7;\r\n    pointer-events: none;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport { BUTTON_LARGE_HEIGHT, BUTTON_MIDIUM_HEIGHT, BUTTON_SMALL_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { _Object } from \"../../design/styles\";\r\n\r\nexport type ButtonSize = 'small' | 'midium' | 'large';\r\n\r\nexport interface ExecutableButtonProps {\r\n    labelText: JSX.Element;\r\n    size: ButtonSize;\r\n    width: number;\r\n    callback?: ()=>void;\r\n}\r\n\r\nexport const ExecutableButton = (props: ExecutableButtonProps) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const get = () => {\r\n        switch(props.size) {\r\n            case \"small\": return [BUTTON_SMALL_HEIGHT, 18];\r\n            case \"midium\": return [BUTTON_MIDIUM_HEIGHT, 18];\r\n            case \"large\": return [BUTTON_LARGE_HEIGHT, 18];\r\n        }\r\n    };\r\n    const [height, fontSize] = get();\r\n\r\n    return (\r\n        <_Wrap\r\n            width={props.width} height={height}\r\n            fontSize={fontSize}\r\n            backgroundColor={store.userEnv.colorProps.entryBackground}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelText}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nconst _Wrap = styled(_Object) <{\r\n    width: number;\r\n    height: number;\r\n    fontSize: number;\r\n    backgroundColor: string;\r\n}>`\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    ${props => {\r\n        if (props.width === 0) {\r\n            return css`\r\n                padding-left: 10px;\r\n                padding-right: 10px;\r\n            `;\r\n        } else {\r\n        }\r\n            return css`width: ${props.width}px`;\r\n    }};\r\n    height: ${props => props.height}px;\r\n    /* background-color: ${props => props.backgroundColor}; */\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    /* box-shadow: 2px 2px 2px 2px #000b3a1a; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        background: linear-gradient(to bottom, #f5efef, #c7afaf, #f5efef);\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/scoreState\";\r\nimport { getSymbolDerives as getSymbolDerives, getSymbolFromKey, SymbolKey, SymbolParams, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = getSymbolFromKey(detail.symbolKey) as SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: SymbolKey[] = [];\r\n        const parentLine: SymbolKey[] = [];\r\n        const childrenLine: SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = getSymbolDerives(baseSymbol.key);\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = getSymbolDerives(curSymbol.key);\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../../redux/store/scoreState\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        bar = cache.bar + 1;\r\n    }\r\n    const isError = bar !== -1 && cache.beat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n    }\r\n\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.beat === 0 ? <>&nbsp;</> : cache.beat}\r\n                        {/* {` (+0.25)`} */}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : ` (${cache.minute})`}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailChange } from \"../../../../../../redux/store/scoreData\";\r\n\r\nconst ElementDetailChange = (props: {\r\n    detail: DetailChange;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                Modulation\r\n            </_Type>\r\n            <_Detail>\r\n                Domm+1\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { DIATONIC_MAJOR_SCALE_DEGREE_NAMES, getChordRoot, getDegreeRoot, getSymbolFromKey, ScaleRelation } from \"../../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 0.5 | 0.25;\r\n\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isCurrent: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const minute = props.detail.minute;\r\n\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() =>\r\n        <_Wrap>\r\n            <_Degree\r\n                isSwitch={keySwitch.editMode && props.isCurrent}\r\n                scaleRelation={degreeRoot != null && DIATONIC_MAJOR_SCALE_DEGREE_NAMES.includes(degreeRoot + symbolName) ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={keySwitch.editMode && props.isCurrent}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n        </_Wrap>\r\n        , [\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            state.keySwitch.editMode,\r\n            cache.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 28px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 20px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #422e3099;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 0.5 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 0.25 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;","import styled from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    const jsxList: JSX.Element[] = [];\r\n    jsxList.push(<_Border key={0} />);\r\n    jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    /* border: 1px solid #00000083; */\r\n    background-color: #c2c2c237;\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n    height: 100%;\r\n    background-color: #d1d1d1;\r\n    vertical-align: middle;\r\n`;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #1b003d6f;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST } from \"../../../../../../utils/theoryUtils\";\r\n\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.timeSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst ElementDetailSection = (props: {\r\n    index: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>{curSection.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChange = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>Key</_Type>\r\n            <_Detail>C→Am</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { ElementType, useContext, useEffect, useRef } from \"react\";\r\nimport { CgDetailsLess } from \"react-icons/cg\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TypeElement } from \"typescript\";\r\nimport { DetailChange, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_SHARP_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SymbolEditor from \"../input/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailChange from \"./form/elementDetailChange\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcChange from \"./calc/calcChange\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = store.scoreState;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        dispatcher.score.setScoreState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    // if (props.index > state.elementCacheList.length - 1) {\r\n    //     return <></>;\r\n    // }\r\n\r\n    const isFocus = state.focusIndex === props.index;\r\n    const isSameSection = state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n    return (\r\n        <_Wrap\r\n            ref={wrapRef}\r\n            isSelectable={element.type !== 'fixed'}\r\n            isActive={isFocus}\r\n            isInactive={!isSameSection}\r\n            isChord={element.type === 'chord'}\r\n        >\r\n            <_Head>\r\n                {element.type !== 'chord' ? <></> : (\r\n                    <_CurKey>{KEY12_SHARP_LIST[cache.keyIndex]}</_CurKey>\r\n                )}\r\n            </_Head>\r\n\r\n            {/* 要素の入力フォーム */}\r\n            {['init', 'chord', 'section', 'change'].includes(element.type) ? (\r\n                <_Form\r\n                    ref={bodyRef}\r\n                    isActive={isFocus}\r\n                    isInactive={!isSameSection}\r\n                    type={element.type}\r\n                    isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                    onClick={() => {\r\n                        if (element.type === 'fixed') {\r\n                            return;\r\n                        }\r\n                        state.focusIndex = props.index;\r\n                        dispatcher.score.setScoreState(state);\r\n                    }}\r\n                >{(() => {\r\n                    switch (element.type) {\r\n                        case 'init': {\r\n                            const detail = element.detail as DetailInit;\r\n                            return (<ElementDetailInit detail={detail} />);\r\n                        }\r\n                        case 'section': {\r\n                            const detail = element.detail as DetailSection;\r\n                            return (<ElementDetailSection index={props.index} />);\r\n                        }\r\n                        case 'chord': {\r\n                            const detail = element.detail as DetailChord;\r\n                            return (<ElementDetailChord detail={detail} isCurrent={isFocus} />);\r\n                        }\r\n                        case 'change': {\r\n                            const detail = element.detail as DetailChange;\r\n                            return (<ElementDetailChange detail={detail} />);\r\n                        }\r\n                    }\r\n                })()}\r\n                </_Form>\r\n            ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n            {/* 入力フォーム下部の計算によって出力される情報 */}\r\n            {\r\n                element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                    element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                        element.type === 'change' ? (<CalcChange index={props.index} />) :\r\n                            <></>\r\n            }\r\n            <>{!(isCurrent && chordDetail != null && chordDetail.root != null && store.scoreState.keySwitch.symbolMode) ? '' :\r\n                <SymbolEditor />\r\n            }</>\r\n            {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                <_Operations>\r\n                    <_OperationItem>-</_OperationItem>\r\n                    <_OperationItem onClick={() => dispatcher.score.addChordElement()}>+</_OperationItem>\r\n                </_Operations>\r\n            )}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    border: solid 1px #00000049;\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #ff000084;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #006823a7;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'change' ? '' : css`\r\n        border: solid 1px #1800a1a7;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 6px;\r\n    ${props => props.isInactive ? '' : css`\r\n        background-color: #ebebeb84;\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #d85cce5a;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isChord: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isChord ? '' : css`\r\n        background-color: #e4ecd039;\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #fffb0018;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\nimport SymbolEditor from \"./input/symbolEditor\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const num = store.scoreData.chordList.length;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (store.scoreState.elementCacheList.length === num) {\r\n        for (let i = 0; i < num; i++) {\r\n            list.push(\r\n                <ScoreElement key={i} index={i} />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Frame> */}\r\n            <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note>\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #f1f1f1;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { playChord } from \"../../../../../utils/instrumentsUtil\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                    playChord(store.instruments.sampler, detail, 100);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    dispatcher.backing.openBackingEditor();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.prevElement: {\r\n            dispatcher.score.moveElement(false);\r\n        }\r\n            break;\r\n        case config.nextElement: {\r\n            dispatcher.score.moveElement(true);\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.prevSection: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.nextSection: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'f': {\r\n            dispatcher.score.addChangeElement();\r\n        }\r\n            break;\r\n        case 'f': {\r\n            dispatcher.score.addChangeElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case '1':\r\n        case '2':\r\n        case '3':\r\n        case '4':\r\n        case '5':\r\n        case '6':\r\n        case '7': {\r\n            dispatcher.score.setDiatonicChord(Number(e.key) - 1);\r\n        }\r\n            break;\r\n    }\r\n}","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { playChord } from \"../../../../../utils/instrumentsUtil\";\r\nimport { backingEditorInput } from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    if (store.scoreState.hideMenu === 'none') {\r\n        if (isElement) {\r\n            if (keySwitch.editMode) {\r\n                switch (e.key) {\r\n                    case config.decRoot: {\r\n                        dispatcher.score.incrementDegreeRoot(false);\r\n                    }\r\n                        break;\r\n                    case config.incRoot: {\r\n                        dispatcher.score.incrementDegreeRoot(true);\r\n                    }\r\n                        break;\r\n                    case config.decBeat: {\r\n                        dispatcher.score.incrementBeatLen(false);\r\n                    }\r\n                        break;\r\n                    case config.incBeat: {\r\n                        dispatcher.score.incrementBeatLen(true);\r\n                    }\r\n                        break;\r\n                    case 'A': dispatcher.score.incrementMinuteValRelation(false, -0.25); break;\r\n                    case 'S': dispatcher.score.incrementMinuteValRelation(false, 0.25); break;\r\n                    case 'D': dispatcher.score.incrementMinuteValRelation(true, -0.25); break;\r\n                    case 'F': dispatcher.score.incrementMinuteValRelation(true, 0.25); break;\r\n                }\r\n            } else if (keySwitch.symbolMode) {\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.symbol.toNext(false);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.symbol.toNext(true);\r\n                    }\r\n                        break;\r\n                    case 'ArrowLeft': {\r\n                        dispatcher.symbol.toBase();\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        dispatcher.symbol.toDerive();\r\n                    }\r\n                        break;\r\n                }\r\n            } else {\r\n                NoteBasicInput(e, store, dispatcher);\r\n            }\r\n        }\r\n    } else if (store.scoreState.hideMenu === 'backing') {\r\n        backingEditorInput(e, store, dispatcher);\r\n    }\r\n}\r\n\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    if (store.scoreState.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case config.editMode: {\r\n                keySwitch.editMode = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.symbolMode: {\r\n                keySwitch.symbolMode = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { playChord } from \"../../../../../utils/instrumentsUtil\";\r\n\r\nexport const backingEditorInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.backingState;\r\n\r\n    if (state == null) return;\r\n\r\n    const pattern = state.pattern;\r\n\r\n    switch (e.key) {\r\n        case 'b': {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }\r\n            break;\r\n    }\r\n\r\n    if (pattern != null) {\r\n        switch (e.key) {\r\n            case 'ArrowLeft': {\r\n                dispatcher.backing.movePatternColumn(false);\r\n            }\r\n                break;\r\n            case 'ArrowRight': {\r\n                dispatcher.backing.movePatternColumn(true);\r\n            }\r\n                break;\r\n            case 'a': {\r\n                dispatcher.backing.addPatternColumn();\r\n            }\r\n                break;\r\n            case 'w': {\r\n                dispatcher.backing.changeLayer();\r\n            }\r\n                break;\r\n            case '1': {\r\n                dispatcher.backing.setCurrentDivRate(16);\r\n            }\r\n                break;\r\n            case '2': {\r\n                dispatcher.backing.setCurrentDivRate(8);\r\n            }\r\n                break;\r\n            case '3': {\r\n                dispatcher.backing.setCurrentDivRate(4);\r\n            }\r\n                break;\r\n            case '4': {\r\n                dispatcher.backing.setCurrentDivRate(2);\r\n            }\r\n                break;\r\n            case '5': {\r\n                dispatcher.backing.setCurrentDivRate(1);\r\n            }\r\n                break;\r\n            case '.': {\r\n                dispatcher.backing.toggleCurrentDivHalf();\r\n            }\r\n                break;\r\n\r\n        }\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ROOT_ALL, getChordRoot, getDegreeRoot, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport MinuteForm from \"./minuteForm\";\r\n\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    \r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i} isExist={isExist} onClick={() => {\r\n                const data = store.scoreData;\r\n                data.chordList = data.chordList.slice();\r\n                detail.beatLen = (i + 1);\r\n                data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={root != null && [0, 2, 4, 5, 7, 9, 11].includes(root.index)}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {getDegreeRoot(root)} ({getChordRoot(root, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_LabelBeat>{'Beat Length'}</_LabelBeat>\r\n                <_Beat>\r\n                    {beatItemsJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    <_LabelMinute>{'Minute Head'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={true} /> */}\r\n                    <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                    <_LabelMinute>{'Minute Tail'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_Root>\r\n                    {rootItemsJsx}\r\n                </_Root>\r\n                <_Symbol\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_Symbol>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _LabelBeat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #c50000; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100px;\r\n    text-align: left;\r\n    background-color: #9c93b9;\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 2px;\r\n        width: calc(100% - 4px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 75px;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _LabelMinute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #222222;\r\n    text-align: center;\r\n`;\r\n// const _Minutetem = styled.div<{\r\n//     isExist: boolean;\r\n// }>`\r\n//     display: inline-block;\r\n//     width: 20%;\r\n//     height: 20px;\r\n//     text-align: left;\r\n//     background-color: #4c3696;\r\n//     font-size: 18px;\r\n//     font-weight: 600;\r\n//     color: #ce0000;\r\n//     line-height: 12px;\r\n//     text-align: center;\r\n\r\n//     & span{\r\n//         display: inline-block;\r\n//         margin: 2px 0 0 2px;\r\n//         width: calc(100% - 4px);\r\n//         height: calc(100% - 4px);\r\n//         background-color: #9b8585;\r\n//         ${props => !props.isExist ? '' : css`\r\n//             /* background-color: #ebf37eb7; */\r\n//             background: linear-gradient(to bottom, #bdb652d2, #fff56cd3, #bdb652d2);\r\n//         `}\r\n//     }\r\n// `;\r\nconst _MinuteItem = styled.input<{\r\n    isReverse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: 20px;\r\n    color: #3b51d1;\r\n    ${props => !props.isReverse ? '' : css`\r\n        transform: rotateY(180deg);\r\n    `}\r\n`;\r\n\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 360px;\r\n    text-align: left;\r\n    background-color: #78b48c;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Root = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #e6e6e6;\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #ff6060bd;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #ff9090bc;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #90d3ffbb;`}\r\n    }\r\n`;\r\n\r\nconst _Symbol = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 90px);\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #99e07d;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isActive ? '' : css`background-color: #ff6060bd;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #ff9090bc;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const scaleItemJsxList: JSX.Element[] = ['major', 'minor'].map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n\r\n    const rateItemJsxList: JSX.Element[] = ['4/4', '3/4'].map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.timeSignature === item} onClick={() => {\r\n                detail.timeSignature = item as BeatSignature;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            <_TempoWrap>\r\n                <input\r\n                    type=\"number\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n                <input\r\n                    type=\"range\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n            </_TempoWrap>\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    margin: 5px 0 0 0;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        ['Intro', 'A-mero', 'B-mero', 'Sabi', 'C-mero', 'Outro'].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={()=>{\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        [1, 2, 3, 4].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item.toString()) !== -1;\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}>\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n            <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #b89b9b;\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 24px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: 60%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: 40%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #61b4b0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst NoteSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'change': return <></>;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default NoteSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../redux/store/scoreState\";\r\nimport { TIMELINE_BEAT_WIDTH } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport BlockItem from \"./blockItem\";\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    let curBeatJsx: JSX.Element = <></>;\r\n    let prevBeatJsx: JSX.Element = <></>;\r\n    let nextBeatJsx: JSX.Element = <></>;\r\n    let curMinuteJsx: JSX.Element = <></>;\r\n    let prevMinuteJsx: JSX.Element = <></>;\r\n    let nextMinuteJsx: JSX.Element = <></>;\r\n\r\n    const memoriJsxList: JSX.Element[] = [];\r\n\r\n    //現在の要素取得\r\n\r\n    let curIndex = 2;\r\n    let prevIndex = 2;\r\n    let nextIndex = dataList.length - 1;\r\n    let temp = focusIndex;\r\n    while (temp > 2) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            curIndex = temp;\r\n            break;\r\n        }\r\n        temp--;\r\n    }\r\n    // 前が存在する\r\n    if (curIndex > 2) {\r\n        temp = curIndex - 1;\r\n        while (temp > 2) {\r\n            const element = dataList[temp];\r\n            if (element.type === 'chord') {\r\n                prevIndex = temp;\r\n                break;\r\n            }\r\n            temp--;\r\n        }\r\n    }\r\n    temp = focusIndex + 1;\r\n    while (temp < dataList.length - 1) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            nextIndex = temp;\r\n            break;\r\n        }\r\n        temp++;\r\n    }\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const add = (sustain: number, cache: ElementCache): void => {\r\n        const adjust = cache.beat + cache.minute;\r\n        for (let i = 0; i < Math.floor(sustain / 0.25); i++) {\r\n            const pos = i + Math.floor(adjust / 0.25);\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { width: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n            memoriJsxList.push(\r\n                <_Memori\r\n                    key={memoriJsxList.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {pos % 16 === 0 ? <_Bar>{cache.bar + 1 + (adjust === 0 ? 0 : 1)}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        }\r\n    }\r\n\r\n    if (curIndex > 2) {\r\n\r\n        if (prevIndex === 2) {\r\n            prevBeatJsx = (\r\n                <_Prev sustain={4}>start</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={4} />\r\n            );\r\n\r\n            memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n        } else {\r\n            const chord = dataList[prevIndex].detail as DetailChord;\r\n            const cache = cacheList[prevIndex];\r\n            const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n            prevBeatJsx = (\r\n                <_Prev sustain={chord.beatLen}>Prev</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={sustain} />\r\n            );\r\n\r\n            add(sustain, cache);\r\n        }\r\n    }\r\n    if (curIndex === 2) {\r\n        curBeatJsx = (\r\n            <_Cur sustain={4}>start</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[curIndex].detail as DetailChord;\r\n        const cache = cacheList[curIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        curBeatJsx = (\r\n            <_Cur sustain={chord.beatLen}>Cur</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={sustain} />\r\n        );\r\n\r\n        add(sustain, cache);\r\n    }\r\n    if (nextIndex === dataList.length - 1) {\r\n        nextBeatJsx = (\r\n            <_Next sustain={4}>end</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[nextIndex].detail as DetailChord;\r\n        const cache = cacheList[nextIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        nextBeatJsx = (\r\n            <_Next sustain={chord.beatLen}>Next</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={sustain} />\r\n        );\r\n\r\n        add(sustain + 0.25, cache);\r\n    }\r\n\r\n    // const curSustain = nextCache.beat - curCache.beat;\r\n    return (\r\n        <_Wrap>\r\n            <_Blocks>\r\n                <_Beat>\r\n                    {prevBeatJsx}\r\n                    {curBeatJsx}\r\n                    {nextBeatJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    {prevMinuteJsx}\r\n                    {curMinuteJsx}\r\n                    {nextMinuteJsx}\r\n                </_Minute>\r\n            </_Blocks>\r\n            <_Measure>\r\n                {memoriJsxList}\r\n            </_Measure>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst BEAT_WIDTH = 50;\r\n\r\nconst _Wrap = styled.div`\r\n    overflow: hidden;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    height: 10px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.sustain * BEAT_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Prev = styled(_Item) <{\r\n}>`\r\n    background-color: rgba(0, 21, 211, 0.158);\r\n`;\r\n\r\nconst _Cur = styled(_Item) <{\r\n}>`\r\n    background-color: rgb(233, 5, 5);\r\n`;\r\n\r\nconst _Next = styled(_Item) <{\r\n}>`\r\n    background-color: rgba(31, 189, 0, 0.144);\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Start = styled.div`\r\n    display: inline-block;\r\n    width: ${BEAT_WIDTH * 4}px;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${BEAT_WIDTH / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { getIntervalValues, getSymbolFromKey, IntervalRelationProps } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const scaleList = cache == null ? [] : [0, 2, 4, 5, 7, 9, 11].map(value => (cache.keyIndex + value) % 12);\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = getIntervalValues((root.index + cache.keyIndex) % 12, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        for (let i = 0; i < 14; i++) {\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            {/* <_Info>{tipJsxList}</_Info> */}\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    /* background-color: #4b4b4b; */\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    border: 1px solid #ffffffda;\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#c3c3d6, #8989a8);\r\n    ` : css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#3e9ef7, #254e74);\r\n    ` : css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst InitialBeatTip = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const tipJsxList:JSX.Element[] = [];\r\n    for(let i = 0; i < 4; i ++) {\r\n        tipJsxList.push(\r\n            <_Tip key={i} isActive={state.initialBeat > i} onClick={()=> {\r\n                state.initialBeat = i + 1;\r\n                dispatcher.score.setScoreState(state);\r\n            }}/>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Label>inital beat</_Label>\r\n            <_WrapTip>{tipJsxList}</_WrapTip>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default InitialBeatTip;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\nconst _WrapTip = styled.div`\r\n    display: inline-block;\r\n    width: 142px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 8px;\r\n    border-radius: 4px;\r\n    border: solid 1px #747474;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 4px;\r\n    background-color: #d6d6d6;\r\n    ${props => !props.isActive ? '' : css`background-color: #eeedcf;`}\r\n    border: solid 1px #b9b9b9;\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingPattern, BackingState } from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingPattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        let rate = note.rate;\r\n        if(note.isHalf) rate /= 1.5;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive}>\r\n                {note.rate}{!note.isHalf ? '' : '.'}{!note.isDiv3 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingPattern, BackingState } from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n\r\n    const layerJsxList: JSX.Element[][] = Array(2);\r\n    pattern.layers.forEach((layer, j) => {\r\n\r\n        const jsxLsit: JSX.Element[] = [];\r\n        for (let i = 0; i < channelCount; i++) {\r\n            const notesJsxLsit: JSX.Element[] = [];\r\n\r\n            layer.noteDivList.forEach((note, k) => {\r\n                const isActive = pattern.lenIndex === k;\r\n                let rate = note.rate;\r\n                if (note.isHalf) rate /= 1.5;\r\n                notesJsxLsit.push(\r\n                    <_Notes key={k} rate={rate} isActive={isActive}>\r\n\r\n                    </_Notes>\r\n                );\r\n            });\r\n            jsxLsit.push(\r\n                <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                    {notesJsxLsit}\r\n                </_Record>\r\n            );\r\n        }\r\n        layerJsxList[j] = jsxLsit;\r\n    });\r\n\r\n\r\n    return (<>\r\n        <_Layer zIndex={1}>{layerJsxList[pattern.layerIndex]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #ffffff31;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ffffff56;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingState } from \"../../../../redux/store/backingState\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternTable from \"./patternTable\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import styled from \"styled-components\";\r\n\r\nconst ChannelItem = (props:{\r\n    soundFullName: string;\r\n}) => {\r\n\r\n    return (<>\r\n        <_Wrap>\r\n            <_Struct>{props.soundFullName}</_Struct>\r\n            <_Option>-</_Option>\r\n            <_Option>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)`\r\n    width: 25px;\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingPattern, BackingState } from \"../../../../redux/store/backingState\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n    const pattern = state.pattern;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    if (pattern != null) {\r\n        const channels = pattern.channels;\r\n        channels.forEach((channel, i) => {\r\n            let name = '-';\r\n            if (channel.octave !== -1) {\r\n                const soundIndex = chordInfo.chordRoot + IntervalRelationProps[symbol.structs[channel.structIndex]];\r\n                const octave = channel.octave + Math.floor(soundIndex / 12);\r\n                name = KEY12_SHARP_LIST[soundIndex % 12] + octave;\r\n            }\r\n            channelJsxList.push(\r\n                <ChannelItem key={i}\r\n                    soundFullName={name}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingPattern, BackingState, NoteRate } from \"../../../redux/store/backingState\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternStatus = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    const setRate = (rate: NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={true} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < 12; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_List onChange={(e) => {\r\n            pattern.channels = [];\r\n            for (let i = 0; i < Number(e.target.value); i++) {\r\n                pattern.channels.push({ octave: -1, structIndex: 0 });\r\n            }\r\n            update();\r\n        }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isHalf, () => {\r\n            cur.isHalf = !cur.isHalf;\r\n            update();            \r\n        })}\r\n        {/* {createItem('.')}\r\n        {createItem('/')} */}\r\n    </>);\r\n}\r\n\r\nexport default PatternStatus;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #ff0000;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState } from \"../../../redux/store/backingState\";\r\nimport { BackingPattern, ChannelParam, BackingLayer } from \"../../../redux/store/backingState\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternStatus from \"./patternStatus\";\r\n\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button isActive={isUsePattern}\r\n                        onClick={() => {\r\n                            if (!isUsePattern) {\r\n                                const table = state.voicingTable as boolean[][];\r\n                                const channels = dispatcher.backing.getChannels(table).reverse();\r\n                                state.pattern = {\r\n                                    layerIndex: 0,\r\n                                    lenIndex: 0,\r\n                                    channels,\r\n                                    isUsePedal: false,\r\n                                    layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n                                } as BackingPattern;\r\n                                update();\r\n                            } else {\r\n                                state.pattern = null;\r\n                                update();\r\n                            }\r\n                        }}>Use\r\n                    </_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternStatus /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #fa1d1d;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #dadada;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState, ChannelParam } from \"../../../redux/store/backingState\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n\r\n    const table = state.voicingTable as boolean[][];\r\n\r\n    const voicingLaneJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < 8; i++) {\r\n        const tipJsxList: JSX.Element[] = [];\r\n        for (let j = 0; j < 6; j++) {\r\n            let isEnable: boolean = symbol.structs.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n\r\n            const interval = IntervalRelationProps[symbol.structs[j]];\r\n            const chordIndex = (chordInfo.chordRoot + interval) % 12;\r\n            const octave = i + Math.floor((chordInfo.chordRoot + interval) / 12);\r\n\r\n            const name = !isEnable ? '' : `${KEY12_SHARP_LIST[chordIndex]}${octave}`;\r\n            tipJsxList.push(\r\n                <_VoicingItem key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        const pattern = state.pattern;\r\n                        if(pattern != null) {\r\n                            const tempChannels: ChannelParam[] = dispatcher.backing.getChannels(table);\r\n                            pattern.channels.forEach((channel, i) => {\r\n                                if(i < tempChannels.length) {\r\n                                    channel.octave = tempChannels[i].octave;\r\n                                    channel.structIndex = tempChannels[i].structIndex;\r\n                                } else {\r\n                                    channel.octave = -1;\r\n                                    channel.structIndex = 0;\r\n                                }\r\n                            });\r\n                            pattern.channels = pattern.channels.reverse();\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_VoicingItem>\r\n            );\r\n        }\r\n        voicingLaneJsxList.push(\r\n            <_VoicingLane key={i}>\r\n                {tipJsxList}\r\n            </_VoicingLane>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Info>\r\n\r\n            </_Info>\r\n            <_Main>\r\n                <_Left>\r\n                    <_Relation>root [C]</_Relation>\r\n                    <_Relation>long3 [E]</_Relation>\r\n                    <_Relation>perfect5 [G]</_Relation>\r\n                </_Left>\r\n                <_Right>{voicingLaneJsxList}</_Right>\r\n            </_Main>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _Info = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _Relation = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _VoicingLane = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VoicingItem = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #43a6c4;\r\n    color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #3f70bb;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState } from \"../../redux/store/backingState\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <VoicingChooser />\r\n            <PatternFrame />\r\n            <_FooterDiv>\r\n                <_Button isEnable={true}>Test</_Button>\r\n                <_Button isEnable={true}>Cancel</_Button>\r\n                <_Button isEnable={true} onClick={()=> {\r\n                    dispatcher.backing.applyBackingToChord();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport PatternFrame from \"../../../backing/pattern/patternFrame\";\r\nimport VoicingChooser from \"../../../backing/voicing/voicingChooser\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={chordList[focusIndex].type === 'chord'}\r\n                onClick={() => {\r\n                    dispatcher.backing.openBackingEditor();\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../redux/store/scoreData\";\r\nimport { ElementCache, SectionCache } from \"../../../../redux/store/scoreState\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport NoteSideForm from \"./side/noteSideForm\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport { getBeatRate } from \"../../../../utils/theoryUtils\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\n\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const init = (store.scoreData.chordList[0].detail as DetailInit);\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    useEffect(() => {\r\n        const elementCacheList: ElementCache[] = [];\r\n        const sectionCacheList: SectionCache[] = [];\r\n\r\n        let prevBeat = 0;\r\n        let totalBeat = 0;\r\n        let prevMinute = 0;\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let keyIndex = -1;\r\n        let sectionBeatSum = 0;\r\n\r\n        chordList.forEach((element, i) => {\r\n            const type = element.type;\r\n            switch (type) {\r\n                case 'fixed': {\r\n\r\n                }\r\n                    break;\r\n                case 'init': {\r\n                    const detail = element.detail as DetailInit;\r\n                    keyIndex = detail.keyIndex;\r\n                }\r\n                    break;\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'chord': {\r\n                    const detail = element.detail as DetailChord;\r\n                    prevBeat = totalBeat;\r\n                    totalBeat += detail.beatLen;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    prevMinute = totalMinute;\r\n                    totalMinute += detail.minute.head;\r\n                    totalMinute += detail.minute.tail;\r\n                }\r\n                    break;\r\n                case 'change': {\r\n\r\n                }\r\n                    break;\r\n            }\r\n\r\n            const pastSecond = 60000 / init.bpm * (prevBeat + prevMinute);\r\n            const beatRate = getBeatRate(init.timeSignature)[0];\r\n            elementCacheList.push({\r\n                bar: Math.floor(prevBeat / beatRate),\r\n                beat: prevBeat % beatRate,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                sectionNo,\r\n                pastSecond,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        store.scoreState.elementCacheList = elementCacheList;\r\n        store.scoreState.sectionCacheList = sectionCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }, [chordList, chordList.length, init.bpm]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Left>\r\n                <_Head><InitialBeatTip /></_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP><HarmMeasure /></_TIMELINE_WRAP>\r\n                    <_INFO_WRAP><ChordInfo /></_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right>\r\n                <NoteSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n`;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #ddc2c2;\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 36px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #e7e7e6be;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #aaaaaa;\r\n    border-radius: 20px 20px 20px 20px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 20px;\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: #888;\r\n        /* background-color: #c500003b; */\r\n        line-height: 18px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 16px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #10c5003a; */\r\n        line-height: 16px;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../redux/store/scoreData\";\r\nimport { getChordRoot, getSymbolFromKey } from \"../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barLength * 4 * 4; i++) {\r\n            let barJsx = <></>;\r\n            if (i % 16 == 0) {\r\n                barJsx = <_Bar>{Math.floor(i / 16) + 1}</_Bar>\r\n            }\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={beatWidth}>\r\n                    {barJsx}\r\n                </_Scale>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const name = detail.root == null ? '-' :\r\n                    getChordRoot(detail.root, 0) + getSymbolFromKey(detail.symbolKey)?.name;\r\n                jsxList.push(\r\n                    <_ChordItem key={jsxList.length}\r\n                        width={beatWidth * (detail.beatLen + detail.minute.head + detail.minute.tail)}\r\n                        isActive={element == curChord}\r\n                        onClick={() => {\r\n                            state.isTune = false;\r\n                            state.focusIndex = i;\r\n                            dispatcher.score.setScoreState(state);\r\n                        }}\r\n                    >\r\n                        {name}\r\n                    </_ChordItem>\r\n                );\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_Measure ref={measureRef}>\r\n            {measureJsxList}\r\n            <_MousePos\r\n                left={mouseMeasurePos * beatWidth * rate}\r\n                width={beatWidth * rate}\r\n            />\r\n        </_Measure>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _Measure = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #5e88af21;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Bar = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #ec0000;\r\n    left: -5px;\r\n    top: -20px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #758f94;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #637596;\r\n    ${props => !props.isStruct ? '' : css`background-color: #949494;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                dispatcher.tune.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.tune.setInstrument(soundFontPlayer);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #c7c6abda;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fffd7eda;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e6e2c5da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #fffd7eda;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet } from 'react-icons/gi'\r\n\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_QuantizeSelector>\r\n            <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                state.quantize = 4;\r\n                dispatcher.tune.setState(state);\r\n            }} />\r\n            <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                state.quantize = 2;\r\n                dispatcher.tune.setState(state);\r\n            }} />\r\n            <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                state.quantize = 1;\r\n                dispatcher.tune.setState(state);\r\n            }} />\r\n            <QuantizeSwitch labelName={'/3'} isDisable={state.quantize === 4} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                if ([3, 6].includes(state.quantize)) {\r\n                    state.quantize /= 3;\r\n                } else {\r\n                    state.quantize *= 3;\r\n                }\r\n                dispatcher.tune.setState(state);\r\n            }} />\r\n        </_QuantizeSelector>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.mouseState;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                mouse.nextLeft = nextLeft;\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'right') {\r\n                    const notes = notesList[notesState.index];\r\n                    notesState.isResize = true;\r\n                    mouse.notesState = { ...notesState };\r\n                    mouse.lock = {\r\n                        x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.mouseState;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        else notesState.side = 'normal';\r\n                        break;\r\n                    }\r\n                };\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                }\r\n                if (notesState.isResize) {\r\n                    const normalX = Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const normal = (normalX > mouse.nextLeft ? mouse.nextLeft : normalX) - mouse.lock.x;\r\n                    notes.len = getNotesLenFromQuantize(state.quantize, Math.floor(normal / state.beatWidth * state.quantize));\r\n                    dispatcher.tune.setNotesList(notesList.slice());\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.mouseState;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.tune.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        }\r\n        if (notesState.isResize) {\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.tune.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n        const mouse = state.mouseState;\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move) {\r\n            if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.tune.incrementCurNoteKey(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.tune.incrementCurNoteKey(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveNotes(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.tune.incrementCurNoteKey(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.tune.incrementCurNoteKey(false, 'normal'); break;\r\n                case 'ArrowLeft': dispatcher.tune.moveFocus(false); break;\r\n                case 'ArrowRight': dispatcher.tune.moveFocus(true); break;\r\n                case 'a': dispatcher.tune.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.tune.adjustScrollX(); break;\r\n                case 'e': dispatcher.tune.adjustScrollY(); break;\r\n            }\r\n        }\r\n\r\n        switch (e.key) {\r\n            case '1': {\r\n                state.quantize = 4;\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case '2': {\r\n                state.quantize = 2;\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case '3': {\r\n                state.quantize = 1;\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case '/': {\r\n                if ([3, 6].includes(state.quantize)) {\r\n                    state.quantize /= 3;\r\n                } else {\r\n                    state.quantize *= 3;\r\n                }\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case 'Delete': {\r\n                const notesList = store.scoreData.notesList;\r\n                notesList.splice(state.focusIndex, 1);\r\n                dispatcher.tune.setNotesList(notesList);\r\n                state.focusIndex--;\r\n                dispatcher.tune.setState(state);\r\n            }\r\n                break;\r\n            case ' ': {\r\n                dispatcher.tune.previewStart();\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case 'z': {\r\n                keySwitch.octave = isPress;\r\n                dispatcher.tune.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case 'c': {\r\n                keySwitch.scaleMode = isPress;\r\n                dispatcher.tune.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case 'f': {\r\n                keySwitch.resize = isPress;\r\n                dispatcher.tune.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case 'd': {\r\n                keySwitch.move = isPress;\r\n                dispatcher.tune.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SCALE_INDEX } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.mouseState;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n\r\n    const barCount = 20;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth / 2\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        const info = state.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.tune.setInstrument(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barCount * 4 * 4; i++) {\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={state.beatWidth} />\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barCount]);\r\n\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n    const scaleLineJsxList = useMemo(() => {\r\n        const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < PITCH_MAX; i++) {\r\n            const keyIndex = getKeyIndexFromPitcher(i);\r\n            list.push(\r\n                <_ScaleLine key={i}\r\n                    isScale={scaleIndexies.includes(keyIndex)}\r\n                    isBase={keyIndex === scaleIndexies[0]}\r\n                />\r\n            );\r\n        }\r\n        return list;\r\n    }, [init.keyIndex]);\r\n\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            const normalX = getNormalizeLenFromNotes(notes.pos);\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                if (Math.abs(normalX * state.beatWidth - (scroll + tableWidth)) > tableWidth) {\r\n                    continue;\r\n                }\r\n            }\r\n            const isActive = state.focusIndex === i;\r\n            const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={getNormalizeLenFromNotes(notes.pos) * state.beatWidth}\r\n                    width={getNormalizeLenFromNotes(notes.len) * state.beatWidth}\r\n                    side={notesState.side}\r\n                    // isActive={i === notesState.index}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isEdit={i === notesState.index && notesState.isResize}\r\n                    onClick={(e) => {\r\n                        if (isActive) {\r\n                            state.focusIndex = i;\r\n                            dispatcher.tune.setState(state);\r\n                            if (!notesState.isResize) {\r\n                                const refs = store.refs.melody;\r\n                                if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                                    const rect = refs.table.getBoundingClientRect();\r\n                                    const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                                    const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                                    notesList[i].pitchIndex = pitchIndex;\r\n                                    dispatcher.tune.setNotesList(notesList.slice());\r\n\r\n                                    playSoundfont(pitchIndex, store);\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={getMinimumLenUnit(notes.len)}\r\n                        isScale={isScale}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, notesState,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move,\r\n        invalidate]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef}\r\n                    onScroll={() => {\r\n                        const refs = store.refs.melody;\r\n\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const scrollLeft = refs.table.scrollLeft;\r\n                            const scrollTop = refs.table.scrollTop;\r\n                            refs.measure.scrollTo({ left: scrollLeft });\r\n                            refs.chord.scrollTo({ left: scrollLeft });\r\n                            refs.pitch.scrollTo({ top: scrollTop });\r\n                        }\r\n                        update();\r\n                    }}\r\n                >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleLineJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={(e) => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={(e) => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={(e) => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_Scroll left={tableWidth} />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f74646';\r\n            case 8: return '#467ef7';\r\n            default: return '#46f79f';\r\n        }\r\n    }};\r\n`;\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #534b81;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isEdit: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #0044ff1f;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #cf000a52;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #ff00006e;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff000086;\r\n    `};\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `};\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 2 ? 8 : props.lenType === 4 ? 14 : 0)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\n\r\nconst _Scroll = styled.div<{\r\n    left: number;\r\n}>`\r\n    position: absolute;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    z-index: 20;\r\n    width: 4px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #00f;\r\n`;","import { useContext, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport { FiHelpCircle } from 'react-icons/fi'\r\nimport { AiOutlinePlaySquare } from 'react-icons/ai'\r\nimport { BsStopBtn } from 'react-icons/bs'\r\nimport { AiTwotoneSetting } from 'react-icons/ai'\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const switchMode = () => {\r\n        state.isTune = !state.isTune;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode>\r\n                    <_ModeItem isActive={!state.isTune} onClick={() => {\r\n                        if (state.isTune) switchMode();\r\n                    }}>Harmonize</_ModeItem>\r\n                    <_ModeItem isActive={state.isTune} onClick={() => {\r\n                        if (!state.isTune) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <ExecutableButton labelText={<><FiHelpCircle /> Help</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><AiOutlinePlaySquare /> Play</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><BsStopBtn /> Stop</>} size={'midium'} width={100} />\r\n                    <ExecutableButton labelText={<><AiTwotoneSetting /> Setting</>} size={'midium'} width={110} />\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'r': switchMode(); break;\r\n                    }\r\n                }}>\r\n                <_SECTIONS><HarmSections /></_SECTIONS>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isTune} />\r\n                    <MelodyFrame isActive={state.isTune} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 140px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    { name: 'Preview', disable: !isAccept, cont: <div></div> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DegreeProps, getSymbolFromKey, IntervalRelationProps, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    sampler.releaseAll();\r\n\r\n                    const symbol = getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, disable: true, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, disable: true, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, disable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, disable: true, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { GlobalContext } from './systemEntry';\r\n\r\nconst Splash = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                dispatcher.system.switchSplashToMain();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n        <_Wrap isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Title>\r\n                <span>L</span>iCreSia\r\n            </_Title>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Wrap = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    /* width: 500px;\r\n    height: 500px; */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #d8d8d8; */\r\n    background: radial-gradient(#868686, #ffffff);\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 15%;\r\n    width: 100%;\r\n    height: 400px;\r\n    background-color: #ffffff1f;\r\n    /* background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913); */\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    line-height: 350px;\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\n\r\nconst TotalHeader = () => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport SysModalDialog from '../dialog/sysModalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> : <Splash />}\r\n                <_Wrap>\r\n                    <SysModalDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n  \n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    window.addEventListener(\"keydown\", function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    }, false);\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}