{"version":3,"sources":["system/redux/reducer.tsx","system/utils/theoryUtil.tsx","system/utils/backingUtil.tsx","system/utils/cacheUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/utils/instrumentsUtil.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/redux/store/state/dataHistory.tsx","system/contents/dialog/globalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/base/design/styles.tsx","system/contents/score/manage/chordProg/chordProgUtil.tsx","system/contents/score/manage/chordProg/chordProgDialog.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/input/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailAlter.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcAlter.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/side/sideFromStyles.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFormAlter.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/noteSideForm.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/score/edit/harmonize/initial/initialBeat.tsx","system/contents/backing/pattern/builder/patternAdjust.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternVelocity.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternStatus.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/initial/harmClipboard.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/contents/score/edit/melody/util/melodyTimelineMouseOperation.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/utils/PreviewUtil.tsx","system/contents/score/preview/previewTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/utils/validateUtil.tsx","system/contents/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx","system/utils/dataUtil.tsx"],"names":["ActionType","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","getBeatProps","keyIndex","scale","beatSignature","beatMemoriCount","barBeatCnt","SYMBOL_LIST","beatLen","minute","bpm","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","root","index","isFlat","symbolKey","props","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","baseKeyIndex","TheoryUtil","KEY12_FLAT_LIST","KEY12_SHARP_LIST","ret","find","symbol","undefined","list","forEach","push","rootIndex","map","relation","divCount","Array","fill","table","channels","i","length","j","octave","structIndex","voicingList","struct","editorPattern","channelSize","layers","layer","divs","noteDivList","signals","record","cell","x","y","status","notesList","vels","velocityList","slice","voicingStructs","size","channel","reverse","scoreLayers","console","log","JSON","stringify","scoreLayer","notes","item","interval","baseInfo","backing","pitchIndexList","chordTime","pattern","soundName","Math","floor","playHarmony","adjustRate","startTimeList","total","div","normal","rate","isDot","div3","timingAdj","timing","startTime","sustainTime","gain","velAdj","setTimeout","state","dispatcher","harmony","stop","isPreview","id","clearInterval","setState","getLimitLen","chordInfo","memoriCount","init","head","tail","getUsingLenFromDivs","reduce","prev","cur","len","checkOverlapBackLayer","hasError","limitLen","totalLen","layerIndex","channelIndex","divIndex","baseLayer","backLayer","getDivRange","left","right","isOverlap","backLeft","backRight","note","includes","BackingUtil","CacheUtil","chordList","detail","elementCacheList","sectionCacheList","beatCacheList","scaleCacheList","tempoCacheList","measureCacheList","totalMinute","sectionNo","sectionBeatSum","pastSecond","curSecond","chordIndex","curMemoriCount","totalBarCount","totalMemoriCount","beatRangeMemoriCount","totalBeat","totalMemoriBarCount","scaleMemoriCount","tempoMemoriCount","addTempoRange","beatRate","beatProps","memoriCnt","element","prevBeat","prevMemoriCount","prevBarCount","prevMinute","fixed","labelName","beatSum","rangeIndexStart","rangeIndexEnd","prevBar","getSustainTime","barMemoriCount","dispBarCount","barCount","alterType","modRel","dommVal","keyAdj","tempoRel","tempoDiff","tempoRate","tempoAbs","bar","surplusBeat","curTotalMemori","reffers","score","setScoreState","notesCacheList","duration","pos","curMemori","range","info","posTime","pastLen","last","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","getSortetdNotesLen","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","instrument","soundfontPlayer","play","soundFullName","alert","stopPreview","melody","adjustScrollX","previewHarmony","data","start","focusIndex","lastFocus","update","firstTime","getTimeInfoFromNotesPos","lenTime","pitch","pitchIndex","destIndex","isSolo","system","setReserveTasks","cacheList","cache","getSymbolFromKey","pitchList","getPitchListFromVoicing","playBacking","tableMouse","curChord","MelodyUtil","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","PATTERN_HEADER_HEIGHT","PATTERN_BODY_HEIGHT","NOTES_1BAR_WIDTH","Dispatcher","dispatch","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setInvalidate","saveFile","fileHandle","a","createWritable","writable","text","DataUtil","gZip","write","close","getFile","window","showSaveFilePicker","types","accept","then","handle","catch","setPiano","setScoreTabIndex","scoreTabIndex","setKeySwitch","keySwitch","setScoreData","moveElement","isNext","sub","distIndex","moveDist","releaseRange","isTail","distHead","distTail","moveSection","curSectionIndex","curSectionInfo","curElementType","flashElement","incrementDegreeRoot","isUp","incrementBeatLen","updateHarmonizeCache","incrementMinuteVal","value","target","incrementMinuteValRelation","nearIndex","addChordElement","initialBeat","on","splice","addSectionElement","addAlterElement","removeCurElement","copyElementList","parse","copiedElementList","cloneBacking","pasteElementList","incrementSymbol","setDiatonicChord","chord","DIATONIC_MAJOR_SCALE_LIST","DIATONIC_MINOR_SCALE_LIST","setDefaultBacking","getDefaultBacking","pastBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setInstrument","incrementCurPitch","isUpper","mode","filter","dataHistory","add","scaleIndexList","MAJOR_SCALE_INDEX","normalLeft","scaleInfo","getKeyScaleFromNotesPos","scaleIndexies","prevPitchIndex","tempPitchIndex","adjustScrollY","moveFocus","updateCurChord","moveDestFocus","beatWidth","searchedChord","width","addNotes","focus","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","end","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","sort","b","posA","posB","undo","history","unshift","redo","next","openBackingEditor","chordBacking","hideMenu","voicingTable","getInitVoicingTable","patternProps","buildChannels","lenIndex","isUsePedal","getChannels","convertEditorLayerFromScore","closeBackingEditor","getInitialLayer","col","isExist","voicing","mappingEditorToScore","editor","getVoicingListFromTable","buildPatternProps","addPatternColumn","lenList","curLen","newLen","column","updateErrorState","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","isPermitDot","getNotes","setNotes","incrementVel","after","deleteColumn","changeLayer","testBacking","checkError","this","initialStore","userEnv","keyConfig","prevElement","nextElement","prevSection","nextSection","addChord","addSection","addChange","deleteCur","distMode","sustainMode","incRoot","decRoot","incBeat","decBeat","symbolMode","colorProps","entryBackground","dialog","isTune","control","minHeadMode","minTailMode","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","timelineMouse","soundfontInfo","scaleMode","resize","move","shift","harmonize","measure","harmoniizeInvalidate","GloballDialog","useContext","GlobalContext","_Blind","onClick","styled","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isDisable","disable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","_Label","ChannelContents","_Contents","css","TabbedPane","TabLabel","_TabLabel","TabContents","FONT_MIDIUM","Styles","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ChordProgUtil","ChordProgDialog","buildType","setBuildType","closeAction","templateJsxList","useMemo","val","_Frame","_Header","_SwitchableButton","_MainDiv","_LeftDiv","_TemplateDiv","_TemplateSelect","_ButtonDiv","_ExecutableButton","isEnable","_RightDiv","_Footer","buildScoreData","HEADER_HEIGHT","select","CSS_LABEL_MIDIUM","CSS_BUTTON_DISABLE","ManageTab","file","setFile","tabIndex","modified","tempo","section","time","toString","getStringFromDate","Date","lastModified","sectionNum","chordNum","fileInfo","scoreInfo","createLabelRecord","labelValue","_Recored","_ItemnLabel","_ItemnValue","searchLocalFileAction","showOpenFilePicker","fileContents","unZip","_Wrap","_Left","_ListInfoDiv","_Right","_DataInfoDiv","_TitleLabel","_ScoreInfoDiv","_ButtonsDiv","_Button","DATA_INFO_HEIGHT","SymbolEditor","curSymbol","baseSymbol","derives","getSymbolDerives","parentJsx","curJsx","childrenJsx","_Row","CalcChord","symbolName","chordRoot","getDegreeRoot","getChordRoot","prevCache","isError","chordName","minuteStr","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","barRem","_Len","_Border","ElementDetailAlter","_Type","sign","getDetailInfo","ElementDetailChord","degreeRoot","degreeOn","isDiatonic","getDiatonicDegreeList","_Degree","isSwitch","isSustainMode","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Tip","jsxList","lenType","valueType","abs","_TipItem","_Error","_Voicing","_Pattern","isCurrent","_Backing","ElementFixedBorder","isStart","ElementDetailInit","_Title","_Value","_Record","ElementDetailSection","CalcAlter","getType","prevKey","curKey","curCache","prevTempo","curTempo","curBeat","getDetail","ScoreElement","wrapRef","useRef","bodyRef","isFocus","isRange","isSameSection","wrap","current","body","elementJson","chordDetail","isInactive","ref","isSelectable","isAdditional","_Head","_CurKey","getDisplayKeyScaleName","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","HarmonizeUtil","previewMelody","clearTimeout","NoteKeyDown","e","config","isElement","previewCurHarmony","Number","NoteBasicInput","test","btoa","signal","backingEditorInput","NoteKeySwitch","isPress","onChange","min","max","step","_NumberForm","SideFormStyles","SideFormAlter","createAlertTypeItem","createModulateRelationItem","rel","createTempoRelationItem","createBeatItem","donmmItemJsxList","_ParamDiv","_ParamItem","keyAdjItemJsxList","_Group","_CategoryLabel","createNumberForm","currentTarget","valueAsNumber","___CSS_TITLE","___CSS_FORM","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","ROOT_ALL","isRootActive","isOnActive","_RootItem","onContextMenu","symbolItemsJsx","_SymbolItem","_Timing","_Minute","_MinuteItem","isReverse","_RootDiv","_SymbolDiv","input","SideFormInit","scaleItemJsxList","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","splitList","split","_NumberItem","_DirectText","_SelectDiv","_TemplateFrame","_NumberFrame","_ItemBase","NoteSideForm","ChordInfo","scaleList","structJsxList","tipJsxList","getIntervalValues","_InfoItem","curIndex","isScale","isUse","isBlack","_Struct","WIDTH","InitialBeatTip","_WrapTip","PatternAdjust","_Rocord","PatternLength","itemJsxList","isEdit","PatternTable","channelCount","curLayer","layerJsxList","jsxLsit","notesJsxLsit","k","setNotesStatus","_Notes","isBack","_State","isEven","isFront","jsx","_Layer","zIndex","PatternVelocity","vel","PatternBuilder","useTotalLen","isLenOverError","memoriWidth","memoriJsxList","bean","thickness","height","color","_Memori","_LengthDiv","_MeasureDiv","_MemoriList","_ChordLenLine","_OverCover","_Body","ChannelItem","_Option","CHANNEL_MAX","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","soundIndex","_LayerItem","proops","PatternStatus","createItem","callback","createRateItem","String","setRate","sizeJsxList","_ListItem","isPermit3ren","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","selectedCell","editModeJsx","_WrapEdit","option","PatternFrame","isUsePattern","_UseSwitch","_Main","_StatusDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","channelLimitNum","OCTAVE_NUM","STRUCT_NUM","rowJsxList","cellJsxList","isSelected","_Cell","isOver","soundfont","_TableRow","_StructItem","_EditorDiv","_StructDiv","_TableDiv","_InfoDiv","TIP_WIDTH","BackingEditorFrame","_PrevireBrind","_FooterDiv","HarmHideFrame","isOpen","isBackingEnable","HarmClipboard","_TypeDiv","_ModeItem","MEMORI_WIDTH","HarmMeasure","dataList","_Margin","_Bar","beatJsxList","minuteJsxList","isChordFocus","curChordIndex","label","beatMemori","posMemori","_SustainItem","sustain","scrollPos","_ScrollFrame","_Blocks","_Measure","HarmonizeTab","harmMeasure","onKeyDown","onKeyUp","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_HEAD_WIDTH","HarmSections","sections","curSectionNo","_Total","MelodyTimelineMouseOperation","mouseDownEvent","timelineLength","button","rect","getBoundingClientRect","clientX","mouseMoveEvent","mouse","mouseUpEvent","scrollLeft","MelodyTimeline","measureRef","chordRef","barLength","measureJsxList","chordJsxList","minuteLen","scroll","clientWidth","symbolNmae","degreeName","_ChordItem","_DegreeName","_ChordName","_ChordWrap","_MeasureWrap","_MeasureInner","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_MousePos","span","isHead","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","Soundfont","AudioContext","release","soundFontPlayer","QuantizeSwitch","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","getNextLeft","clientY","scrollTop","curPos","posX","lenWidth","newPos","prevFocus","MelodyInput","keyDownEvent","isSingle","keySwitchEvent","MelodyFrame","tableRef","pitchRef","setInvalidate2","scaleDivJsxList","divList","MINOR_SCALE_INDEX","scaleJsxList","_ScaleLine","isBase","_ScaleList","notesJsxList","normalWidth","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_MouseLinePos","_MouseRange","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","_Test","editAnimation","keyframes","_MouseLine","TUNE_TIMELINE_WIDTH","_Scale","EditTab","switchMode","preview","toggleEnsamble","_Mode","_Buttons","_Switch","_SwitchInner","_SECTIONS","PreviewUtil","PIT_HEIGTH","RATE_WIDTH","PreviewTab","areaRef","rateRef","past","setPast","timerId","setTimerId","isPlay","pit","sus","startList","normalList","areaWidth","recordJsxList","getTime","setInterval","_MainFixed","_RateFrame","_RateValue","_MainScroll","_HarmonyBox","_Line","HEADER_WIDTH","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","items","degree","degreeRootName","chordRootName","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","remove","fadeIn","ValidateUtil","str","conditions","result","LoginFrame","isCreate","setCreate","userId","setUserId","password","setPassword","passConfirm","setPassConfirm","isButtonEnable","checkAll","checkStringLength","createFormJsx","title","setter","_TextField","_TypeSwitch","sendQueryRequestToAPI","response","json","results","cnt","FONT_SMALL","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","useCallback","Provider","App","document","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","API_DOMAIN","queryType","sql","fetch","method","headers","Accept","createQueryRequestInit","content","encodeURIComponent","zlib","gzipSync","buffer","Buffer","from","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","plainData"],"mappings":"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","file":"static/js/main.a9f0a83d.chunk.js","sourcesContent":["import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n    SET_INVALIDATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n        case ActionType.SET_INVALIDATE:\r\n            store.invalidate = payload.invalidate;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature, Scale } from \"../redux/store/score/scoreData\";\r\n\r\nnamespace TheoryUtil {\r\n\r\n\r\n    export const MAJOR_SCALE_INDEX = [0, 2, 4, 5, 7, 9, 11];\r\n    export const MINOR_SCALE_INDEX = [0, 2, 3, 5, 7, 8, 10];\r\n\r\n\r\n    export const KEY12_FLAT_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n    export const KEY12_SHARP_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n    ];\r\n\r\n    export const DEGREE12_FLAT_LIST = [\r\n        'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n    ];\r\n    // export const DEGREE12_FLAT_LIST = [\r\n    //     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n    // ];\r\n    export const DEGREE12_SHARP_LIST = [\r\n        'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n    ];\r\n\r\n    export const KEY12_MAJOR_SCALE_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const KEY12_MINOR_SCALE_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const getDisplayKeyScaleName = (keyIndex: number, scale: Scale) => {\r\n        return scale === 'major' ? KEY12_MAJOR_SCALE_LIST[keyIndex] :\r\n            KEY12_MINOR_SCALE_LIST[keyIndex] + 'm';\r\n    }\r\n\r\n    export type IntervalRelation =\r\n        'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n        'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n        'd7' | 'm7' | 'M7'\r\n        ;\r\n\r\n    export type SymbolAttribute =\r\n        'triad' |\r\n        'seventh' |\r\n        'add9th'\r\n        ;\r\n\r\n    export type SymbolParams = {\r\n        key: SymbolKey;\r\n        name: string;\r\n        base: null | SymbolKey;\r\n        attr?: SymbolAttribute;\r\n        structs: IntervalRelation[];\r\n    }\r\n\r\n    export type BeatProps = {\r\n        // mol: number;\r\n        // den: number;\r\n        // 1拍のメモリ（16分音符）の数\r\n        beatMemoriCount: number;\r\n        // 1小節の拍数\r\n        barBeatCnt: number;\r\n    }\r\n    export const getBeatProps = (beatSignature: BeatSignature): BeatProps => {\r\n        // const props = beatSignature.split('/');\r\n        // // 分子\r\n        // const mol = Number(props[0]);\r\n        // // 分母\r\n        // const den = Number(props[1]);\r\n        switch (beatSignature) {\r\n            case '4/4': return { beatMemoriCount: 4, barBeatCnt: 4 };\r\n            case '2/4': return { beatMemoriCount: 4, barBeatCnt: 2 };\r\n            case '3/4': return { beatMemoriCount: 4, barBeatCnt: 3 };\r\n            case '6/8': return { beatMemoriCount: 6, barBeatCnt: 2 };\r\n            case '9/8': return { beatMemoriCount: 6, barBeatCnt: 3 };\r\n            case '12/8': return { beatMemoriCount: 6, barBeatCnt: 4 };\r\n        };\r\n        // return {} as BeatProps;\r\n    }\r\n\r\n    export const getSustainTime = (beatLen: number, minute: number, bpm: number, beatSignature: BeatSignature): number => {\r\n        const beatMemoriCount = getBeatProps(beatSignature).beatMemoriCount;\r\n        const minuteLen = minute * (1 / beatMemoriCount);\r\n        return 60000 / bpm * (beatLen + minuteLen);\r\n    }\r\n\r\n\r\n    export type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\n    export type SymbolKey =\r\n        'major' |\r\n        'minor' |\r\n        'suspend4th' |\r\n        'diminish' |\r\n        'augument' |\r\n        'major-maj7th' |\r\n        'major-min7th' |\r\n        'minor-7th' |\r\n        'minor-maj7th' |\r\n        'sus4-7th' |\r\n        'diminish-7th' |\r\n        'augument-7th' |\r\n        'major-add9th' |\r\n        'minor-add9th' |\r\n        'sixth-9th' |\r\n        'minor-minus5' |\r\n        'minor7-minus5' |\r\n        'major-maj9th' |\r\n        'major-9th'\r\n        ;\r\n\r\n    export type DegreeProps = {\r\n        index: number;\r\n        isFlat: boolean;\r\n    };\r\n\r\n    export type ChordProps = {\r\n        root: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    };\r\n\r\n    export const SYMBOL_LIST: readonly SymbolParams[] = [\r\n        {\r\n            key: 'major', name: '',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor', name: 'm',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'suspend4th', name: 'sus4',\r\n            base: null,\r\n            structs: ['p1', 'p4', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish', name: 'dim',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish-7th', name: 'dim7',\r\n            base: 'diminish',\r\n            structs: ['p1', 'm3', 'd5', 'd7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'augument', name: 'aug',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'a5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'augument-7th', name: 'aug7',\r\n            base: 'augument',\r\n            structs: ['p1', 'M3', 'a5', 'm7']\r\n        },\r\n        {\r\n            key: 'minor-minus5', name: 'm(-5)',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor7-minus5', name: 'm7(-5)',\r\n            base: 'minor-minus5',\r\n            structs: ['p1', 'm3', 'd5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-maj7th', name: 'maj7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-min7th', name: '7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'minor-7th', name: 'm7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'sus4-7th', name: '7sus4',\r\n            base: 'suspend4th',\r\n            structs: ['p1', 'p4', 'p5']\r\n        },\r\n        {\r\n            key: 'minor-maj7th', name: 'mmaj7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-add9th', name: 'add9',\r\n            base: 'major',\r\n            structs: ['p1', 'M2', 'M3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'minor-add9th', name: 'madd9',\r\n            base: 'minor',\r\n            structs: ['p1', 'M2', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-maj9th', name: 'maj9',\r\n            base: 'major-maj7th',\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-9th', name: '9',\r\n            base: 'major-min7th',\r\n            structs: ['p1', 'm3', 'p5']\r\n        },\r\n    ];\r\n\r\n    export const IntervalRelationProps = {\r\n        'p1': 0,\r\n        'm2': 1,\r\n        'M2': 2,\r\n        'm3': 3,\r\n        'M3': 4,\r\n        'p4': 5,\r\n        'd5': 6,\r\n        'p5': 7,\r\n        'a5': 8,\r\n        'm6': 8,\r\n        'M6': 9,\r\n        'd7': 9,\r\n        'm7': 10,\r\n        'M7': 11\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n    ];\r\n\r\n    export const DIATONIC_MINOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor-minus5' },\r\n        { root: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n    ];\r\n\r\n\r\n\r\n    export const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n        null,\r\n        { index: 0, isFlat: false },\r\n        { index: 1, isFlat: false },\r\n        { index: 1, isFlat: true },\r\n        { index: 2, isFlat: false },\r\n        { index: 3, isFlat: false },\r\n        { index: 3, isFlat: true },\r\n        { index: 4, isFlat: false },\r\n        { index: 5, isFlat: false },\r\n        { index: 6, isFlat: false },\r\n        { index: 6, isFlat: true },\r\n        { index: 7, isFlat: false },\r\n        { index: 8, isFlat: false },\r\n        { index: 8, isFlat: true },\r\n        { index: 9, isFlat: false },\r\n        { index: 10, isFlat: false },\r\n        { index: 10, isFlat: true },\r\n        { index: 11, isFlat: false }\r\n    ];\r\n\r\n    export const getDegreeRoot = (props: DegreeProps) => {\r\n        const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n        return list[props.index];\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰ', 'Ⅰmaj7',\r\n        'Ⅱm', 'Ⅱm7',\r\n        'Ⅲm', 'Ⅲm7',\r\n        'Ⅳ', 'Ⅳmaj7',\r\n        'Ⅴ', 'Ⅴ7',\r\n        'Ⅵm', 'Ⅵm7',\r\n        'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n    ];\r\n\r\n    export const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰm', 'Ⅰm7',\r\n        'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n        'bⅢ', 'bⅢM7',\r\n        'Ⅳm', 'Ⅳm7',\r\n        'Ⅴm', 'Ⅴm7',\r\n        'bⅥ', 'bⅥM7',\r\n        'bⅦ', 'bⅦ7'\r\n    ];\r\n\r\n    export const getDiatonicDegreeList = (scale: Scale) => {\r\n        return scale === 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES :\r\n            DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\r\n    }\r\n\r\n    export const getChordRoot = (props: DegreeProps, baseKeyIndex: number) => {\r\n        const list = props.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST;\r\n        return list[(baseKeyIndex + props.index) % 12];\r\n    }\r\n\r\n\r\n\r\n    export const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n        const ret = SYMBOL_LIST.find((symbol) => {\r\n            if (key === symbol.key) {\r\n                return symbol;\r\n            }\r\n        });\r\n        return ret != undefined ? ret : SYMBOL_LIST[0];\r\n    }\r\n\r\n    export const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n        let list: SymbolKey[] = [];\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (key === symbol.base) {\r\n                list.push(symbol.key);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n\r\n    export const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n        return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n    }\r\n}\r\n\r\nexport default TheoryUtil;\r\n\r\n","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, DetailInit, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { playHarmony } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nexport namespace BackingUtil {\r\n\r\n    // オクターブの数\r\n    export const OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    export const STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    export const CHANNEL_MAX = 12;\r\n\r\n    export const getInitialRecord = (divCount: number) => {\r\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    export const buildChannels = (table: boolean[][]): BackingState.ChannelParam[] => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    export const getVoicingListFromTable = (table: boolean[][]) => {\r\n\r\n        const voicingList: VoicingProps[] = [];\r\n        // ボイシングを設定\r\n        if (table != null) {\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        voicingList.push({ octave: i, struct: j });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return voicingList;\r\n    }\r\n\r\n    export const buildPatternProps = (editorPattern: BackingState.Pattern) => {\r\n        const channelSize = editorPattern.channels.length;\r\n        const layers: BackingLayerData[] = [];\r\n        editorPattern.layers.forEach(layer => {\r\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\r\n            const signals: BackingSignalProps[] = [];\r\n            layer.table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        signals.push({ x: j, y: i, status: cell });\r\n                    }\r\n                });\r\n            });\r\n            layers.push({ divs, notesList: signals, vels: layer.velocityList.slice() });\r\n        });\r\n        return { channelSize, layers };\r\n    }\r\n\r\n    export const getChannels = (voicingStructs: BackingState.ChannelParam[], size: number) => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: BackingState.ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n\r\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\r\n\r\n        const layers: BackingState.Layer[] = [];\r\n        console.log(JSON.stringify(scoreLayers));\r\n        scoreLayers.forEach(scoreLayer => {\r\n            const table: (BackingState.NoteStatus | null)[][] = [];\r\n            for (let i = 0; i < channelSize; i++) {\r\n                const record: (BackingState.NoteStatus | null)[] = [];\r\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\r\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\r\n                    record.push(notes == null ? null : notes.status);\r\n                }\r\n                table.push(record);\r\n            }\r\n            layers.push({\r\n                noteDivList: scoreLayer.divs,\r\n                table,\r\n                velocityList: scoreLayer.vels\r\n            });\r\n        });\r\n        console.log(JSON.stringify(layers));\r\n        return layers;\r\n    }\r\n\r\n    export const getPitchListFromVoicing = (voicingList: VoicingProps[], rootIndex: number, symbol: TheoryUtil.SymbolParams) => {\r\n        return voicingList.map((item) => {\r\n            const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n            return 12 * item.octave + rootIndex + interval;\r\n        });\r\n    }\r\n\r\n    export const playBacking = (\r\n        store: Store,\r\n        reserveTasks: NodeJS.Timeout[],\r\n        baseInfo: DetailInit,\r\n        backing: ChordBacking,\r\n        pitchIndexList: number[],\r\n        chordTime: number\r\n    ) => {\r\n        if (backing.pattern == null) {\r\n            pitchIndexList.forEach((index) => {\r\n                const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                const octave = Math.floor(index / 12);\r\n                const soundFullName = soundName + octave;\r\n                playHarmony(soundFullName, store, chordTime, 5);\r\n            });\r\n        } else {\r\n\r\n            const bpm = baseInfo.bpm;\r\n            const beatProps = TheoryUtil.getBeatProps(baseInfo.beatSignature);\r\n            const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (2 / 3);\r\n\r\n            const pattern = backing.pattern;\r\n            pattern.layers.forEach(layer => {\r\n                const startTimeList: number[] = [];\r\n                // バッキング内で経過した時間（ノーツごとの開始時間）\r\n                let total = 0;\r\n                layer.divs.forEach(div => {\r\n                    startTimeList.push(60 / bpm * total);\r\n                    let normal = 4 / div.rate * adjustRate;\r\n                    if (div.isDot) normal *= 1.5;\r\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                    total += normal;\r\n                });\r\n                layer.notesList.forEach((notes) => {\r\n\r\n                    const timingAdj = notes.status.timing * (60 / bpm * 1 / 32);\r\n                    const startTime = startTimeList[notes.x] + timingAdj;\r\n                    const sustainTime = chordTime - startTime;\r\n                    let gain = layer.vels[notes.x] + notes.status.velAdj;\r\n                    if (gain < 1) gain = 1;\r\n                    if (gain > 10) gain = 10;\r\n                    gain *= 0.6;\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            const index = pitchIndexList[notes.y];\r\n                            const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                            const octave = Math.floor(index / 12);\r\n                            const soundFullName = soundName + octave;\r\n                            playHarmony(soundFullName, store, sustainTime, gain);\r\n                        }, startTime * 1000)\r\n                    );\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    export const stopPreview = (store: Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        store.instruments.harmony?.stop();\r\n        state.isPreview = false;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    export const getLimitLen = (chordInfo: BackingState.ChordInfo) => {\r\n        const minute = chordInfo.minute;\r\n        // 16分音符の長さで割る\r\n        const memoriCount = TheoryUtil.getBeatProps(chordInfo.init.beatSignature).beatMemoriCount;\r\n        const beatLen = chordInfo.beatLen;// * (memoriCount / 4)\r\n        const minuteLen = minute.head / memoriCount + minute.tail / memoriCount;\r\n        return (beatLen + minuteLen);\r\n    }\r\n\r\n    export const getUsingLenFromDivs = (divs: BackingState.NoteDiv[], chordInfo: BackingState.ChordInfo) => {\r\n        const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n        const adjustRate = 4 / beatProps.beatMemoriCount;\r\n        return divs.reduce((prev, cur) => {\r\n            let len = 1 / cur.rate * adjustRate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            return prev + len * 4;\r\n        }, 0);\r\n    }\r\n\r\n    export const checkError = (chordInfo: BackingState.ChordInfo, voicingList: VoicingProps[], pattern: null | BackingState.Pattern): boolean => {\r\n        let hasError = false;\r\n        if (pattern != null) {\r\n\r\n            // 選択しているボイシングがチャンネル数に満たない場合\r\n            if (voicingList.length < pattern.channels.length) hasError = true;\r\n\r\n            const limitLen = getLimitLen(chordInfo);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getUsingLenFromDivs(layer.noteDivList, chordInfo);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n\r\n            // 裏レイヤーのノーツと重なっている場合\r\n            pattern.layers[0].table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        if (checkOverlapBackLayer(pattern.layers, 0, i, j)) {\r\n                            hasError = true;\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkOverlapBackLayer = (layers: BackingState.Layer[], layerIndex: number, channelIndex: number, divIndex: number): boolean => {\r\n        const baseLayer = layers[layerIndex];\r\n        const backLayer = layers[layerIndex === 0 ? 1 : 0];\r\n        const [left, right] = getDivRange(baseLayer.noteDivList, divIndex);\r\n        console.log(`left=${left}, right=${right}`);\r\n        let isOverlap = false;\r\n        for (let i = 0; i < backLayer.noteDivList.length; i++) {\r\n            if (backLayer.table[channelIndex][i] != null) {\r\n                const [backLeft, backRight] = getDivRange(backLayer.noteDivList, i);\r\n                if (right > backLeft && left < backRight) {\r\n                    isOverlap = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return isOverlap;\r\n    }\r\n\r\n    export const getDivRange = (divs: BackingState.NoteDiv[], divIndex: number): [number, number] => {\r\n        let [left, right] = [0, 0];\r\n\r\n        divs.slice(0, divIndex + 1).forEach((cur, i) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            left = right;\r\n            right += len * 4;\r\n        });\r\n        return [left, right];\r\n    }\r\n\r\n    export const isPermitDot = (note: BackingState.NoteDiv) => {\r\n        return [8, 4, 2].includes(note.rate) && note.div3 === 0;\r\n    }\r\n\r\n    export const isPermit3ren = (note: BackingState.NoteDiv) => {\r\n        return [8, 4].includes(note.rate) && !note.isDot;\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n/**\r\n * データを高速で参照するために、\r\n * 事前に計算したデータを保持するためのユーティリティを提供する\r\n */\r\nnamespace CacheUtil {\r\n\r\n    /**\r\n     * ハーモナイズのキャッシュを生成する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const updateHarmonizeCache = (store: Store, dispatcher: Dispatcher) => {\r\n        const chordList = store.scoreData.chordList;\r\n        const scoreState = store.scoreState;\r\n        const init = (chordList[0].detail as DetailInit);\r\n\r\n        const elementCacheList: ScoreCache.Element[] = [];\r\n        const sectionCacheList: ScoreCache.Section[] = [];\r\n        const beatCacheList: ScoreCache.BeatRange[] = [];\r\n        const scaleCacheList: ScoreCache.KeyScaleRange[] = [];\r\n        const tempoCacheList: ScoreCache.TempoRange[] = [];\r\n        const measureCacheList: ScoreCache.Measure[] = [];\r\n\r\n        // 初期値情報\r\n        let keyIndex = init.keyIndex;\r\n        let scale = init.scale;\r\n        let bpm = init.bpm;\r\n\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let sectionBeatSum = 0;\r\n        let pastSecond = 0;\r\n        let curSecond = 0;\r\n        let chordIndex = -1;\r\n        // let curTotalBeat = 0;\r\n        let curMemoriCount = 0;\r\n        let totalBarCount = 0;\r\n\r\n        // 経過した16分音符のカウント\r\n        let totalMemoriCount = 0;\r\n        let beatRangeMemoriCount = 0;\r\n        let totalBeat = 0;\r\n        let totalMemoriBarCount = 0;\r\n\r\n        //拍キャッシュの産出に使う変数\r\n        let beatSignature = init.beatSignature;\r\n\r\n        let scaleMemoriCount = 0;\r\n        let tempoMemoriCount = 0;\r\n\r\n        const addScaleRange = () => {\r\n            scaleCacheList.push({\r\n                keyIndex,\r\n                scale,\r\n                memoriCnt: scaleMemoriCount\r\n            });\r\n            scaleMemoriCount = 0;\r\n        }\r\n        const addTempoRange = () => {\r\n            tempoCacheList.push({\r\n                bpm,\r\n                beatRate: beatProps.beatMemoriCount / 4,\r\n                memoriCnt: tempoMemoriCount\r\n            });\r\n            tempoMemoriCount = 0;\r\n        }\r\n\r\n\r\n        let beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        chordList.forEach((element, i) => {\r\n\r\n            const prevBeat = totalBeat;\r\n            // ブロック頭のメモリ\r\n            const prevMemoriCount = totalMemoriCount;\r\n            // ブロック頭の小節\r\n            const prevBarCount = totalBarCount;\r\n            const prevMinute = totalMinute;\r\n            const type = element.type;\r\n\r\n            switch (type) {\r\n                // 固定要素ブロック\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        pastSecond += curSecond;\r\n                    }\r\n                } break;\r\n\r\n                // セクション要素ブロック\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                } break;\r\n\r\n                // コード要素ブロック\r\n                case 'chord': {\r\n                    pastSecond += curSecond;\r\n                    // curTotalBeat += curSustain;\r\n\r\n                    const detail = element.detail as DetailChord;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    totalMinute += minute;\r\n                    chordIndex++;\r\n\r\n                    curMemoriCount = detail.beatLen * beatProps.beatMemoriCount + minute;\r\n\r\n                    const prevBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    totalBeat += detail.beatLen;\r\n                    const curBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    if (prevBar !== curBar) {\r\n                        totalBarCount++\r\n                    }\r\n\r\n                    // スケールキャッシュの長さを加算\r\n                    scaleMemoriCount += curMemoriCount;\r\n                    tempoMemoriCount += curMemoriCount;\r\n\r\n                    // 時間の計算\r\n                    curSecond = TheoryUtil.getSustainTime(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        bpm,\r\n                        beatSignature\r\n                    );\r\n\r\n                    // メモリの加算\r\n                    for (let j = 0; j < curMemoriCount; j++) {\r\n                        let rate: ScoreCache.MeasureRate = 16;\r\n                        if (beatRangeMemoriCount % beatProps.beatMemoriCount === 0) rate = 4;\r\n                        else if (beatRangeMemoriCount % (beatProps.beatMemoriCount / (beatProps.beatMemoriCount / 2)) === 0) rate = 8;\r\n\r\n                        const barMemoriCount = beatProps.barBeatCnt * beatProps.beatMemoriCount;\r\n\r\n                        let dispBarCount = -1;\r\n                        if (beatRangeMemoriCount % barMemoriCount === 0) {\r\n                            // 拍子セクションの合計メモリ数が小節のメモリ数で割り切れる場合、小節数を表示する\r\n                            totalMemoriBarCount++;\r\n                            dispBarCount = totalMemoriBarCount;\r\n                        }\r\n                        measureCacheList.push({ rate, barCount: dispBarCount });\r\n                        totalMemoriCount++;\r\n                        beatRangeMemoriCount++;\r\n                    }\r\n                } break;\r\n\r\n                // アルター要素ブロックする\r\n                case 'alter': {\r\n                    const detail = element.detail as DetailAlter;\r\n                    switch (detail.alterType) {\r\n                        // 音階が変わる\r\n                        case 'modulate': {\r\n                            addScaleRange();\r\n                            switch (detail.modRel) {\r\n                                case 'domm': {\r\n                                    keyIndex = (keyIndex + 24 + 7 * detail.dommVal) % 12;\r\n                                } break;\r\n                                case 'key': {\r\n                                    keyIndex = (keyIndex + 12 + detail.keyAdj) % 12;\r\n                                } break;\r\n                                case 'parallel': {\r\n                                    keyIndex = (keyIndex + 12 + (scale === 'major' ? -1 : 1) * 3) % 12;\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                                case 'relative': {\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // テンポが変わる\r\n                        case 'tempo': {\r\n                            addTempoRange();\r\n                            switch (detail.tempoRel) {\r\n                                case 'diff': {\r\n                                    bpm += detail.tempoDiff;\r\n                                } break;\r\n                                case 'rate': {\r\n                                    bpm = Math.floor(bpm * 1 * (detail.tempoRate / 100));\r\n                                } break;\r\n                                case 'abs': {\r\n                                    bpm = detail.tempoAbs;\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // 拍子が変わる\r\n                        case 'beat': {\r\n                            addTempoRange();\r\n                            // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n                            beatCacheList.push({\r\n                                beatSignature,\r\n                                memoriCnt: beatRangeMemoriCount\r\n                            });\r\n\r\n                            beatSignature = detail.beatSignature;\r\n                            // 拍を初期化する（拍変更後はいかなる場合も0から数える）\r\n                            totalBeat = 0;\r\n                            beatRangeMemoriCount = 0;\r\n\r\n                            beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n                        } break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n            // const pastSecond = 60000 / init.bpm * (prevBeat + prevMinute);\r\n            elementCacheList.push({\r\n                bar: prevBarCount,\r\n                surplusBeat: prevBeat % beatProps.barBeatCnt,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                scale,\r\n                bpm,\r\n                beatSignature,\r\n                sectionNo,\r\n                pastSecond,\r\n                chordIndex,\r\n                curTotalMemori: prevMemoriCount,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n        scaleCacheList.push({\r\n            keyIndex,\r\n            scale,\r\n            memoriCnt: scaleMemoriCount\r\n        });\r\n\r\n        beatCacheList.push({\r\n            beatSignature,\r\n            memoriCnt: beatRangeMemoriCount\r\n        });\r\n        addTempoRange(); \r\n\r\n        scoreState.elementCacheList = elementCacheList;\r\n        scoreState.sectionCacheList = sectionCacheList;\r\n        scoreState.beatCacheList = beatCacheList;\r\n        scoreState.tempoCacheList = tempoCacheList;\r\n        scoreState.scaleCacheList = scaleCacheList;\r\n        scoreState.measureCacheList = measureCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }\r\n\r\n\r\n    export const updateMelodyCache = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const notesList = store.scoreData.notesList;\r\n        const state = store.melodyState;\r\n\r\n        const notesCacheList: ScoreCache.NotesCache[] = [];\r\n\r\n        notesList.forEach((notes) => {\r\n            const startTime = 0;\r\n            const duration = 0;\r\n            notesCacheList.push({\r\n                startTime,\r\n                duration\r\n            });\r\n        });\r\n    }\r\n\r\n    export const getKeyScaleFromNotesPos = (pos: number, scaleCacheList: ScoreCache.KeyScaleRange[]) => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let range: ScoreCache.KeyScaleRange | null = null;\r\n        // console.log(`count: ${scaleCacheList.length}`);\r\n        for (let i = 0; i < scaleCacheList.length; i++) {\r\n            const info = scaleCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                range = scaleCacheList[i - 1];\r\n                break;\r\n            }\r\n            tail += info.memoriCnt;\r\n            // console.log(`curPos: ${tail}`);\r\n        }\r\n        // console.log(`curMemori: ${curMemori}`);\r\n        return range === null ? scaleCacheList[scaleCacheList.length - 1] : range;\r\n    }\r\n\r\n    /**\r\n     * ノーツを再生する開始時間と持続時間を産出して返す\r\n     * @param pos ノーツの位置\r\n     * @param len ノーツの長さ\r\n     * @param tempoCacheList テンポのキャッシュリスト\r\n     * @returns \r\n     */\r\n    export const getTimeInfoFromNotesPos = (pos: number, len: number, tempoCacheList: ScoreCache.TempoRange[]): [number, number] => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let posTime = 0;\r\n        let pastLen = 0;\r\n        let last: ScoreCache.TempoRange | null = null;\r\n        for (let i = 0; i < tempoCacheList.length; i++) {\r\n            const info = tempoCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                last = tempoCacheList[i - 1];\r\n                break;\r\n            }\r\n            const beatLen = info.memoriCnt / 4;\r\n            posTime += 60 / info.bpm * beatLen;\r\n            pastLen += beatLen;\r\n            tail += info.memoriCnt;\r\n        }\r\n        if (last === null) {\r\n            last = tempoCacheList[tempoCacheList.length - 1];\r\n        }\r\n\r\n        const beatLen = (pos - pastLen) * last.beatRate;\r\n        posTime += 60 / last.bpm * beatLen;\r\n\r\n        const lenTime = 60 / last.bpm * len * last.beatRate;\r\n\r\n        return [posTime, lenTime];\r\n    }\r\n}\r\n\r\nexport default CacheUtil;\r\n","import { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += notes.len4;\r\n    total += notes.len8 / 2;\r\n    total += notes.len16 / 4;\r\n    total += notes.len4div3 / 3;\r\n    total += notes.len8div3 / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    return getSortetdNotesLen({\r\n        len4: notes1.len4 + notes2.len4,\r\n        len8: notes1.len8 + notes2.len8,\r\n        len16: notes1.len16 + notes2.len16,\r\n        len4div3: notes1.len4div3 + notes2.len4div3,\r\n        len8div3: notes1.len8div3 + notes2.len8div3\r\n    });\r\n}\r\n\r\nexport const getSortetdNotesLen = (base: MelodyLength) => {\r\n\r\n    const len8div3Cnt3 = Math.floor(base.len8div3 / 3);\r\n    base.len8div3 -= len8div3Cnt3 * 3;\r\n    base.len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(base.len8div3 / 2);\r\n    base.len8div3 -= len8div3Cnt2 * 2;\r\n    base.len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(base.len4div3 / 3);\r\n    base.len4div3 -= len4div3Cnt3 * 3;\r\n    base.len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(base.len16 / 2);\r\n    base.len16 -= len16Cnt2 * 2;\r\n    base.len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(base.len8 / 2);\r\n    base.len8 -= len8Cnt2 * 2;\r\n    base.len4 += len8Cnt2;\r\n\r\n    return base;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n    return getSortetdNotesLen({\r\n        len4, len8, len16, len4div3, len8div3\r\n    });\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if (notes.len8div3 > 0) return 6;\r\n    else if (notes.len16 > 0) return 4;\r\n    else if (notes.len4div3 > 0) return 3;\r\n    else if (notes.len8 > 0) return 2;\r\n    else if (notes.len4 > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playHarmony = (soundFullName: string, store: Store, duration: number, gain: number) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, { gain, duration });\r\n    } else {\r\n        alert('null');\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nnamespace MelodyUtil {\r\n\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        state.isPreview = false;\r\n        // state.focusIndex = state.lastFocus;\r\n        // state.distIndex = state.focusIndex;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        // store.instruments.sampler.releaseAll();\r\n        dispatcher.melody.setState(state);\r\n        dispatcher.melody.adjustScrollX();\r\n    }\r\n    \r\n    /**\r\n     * プレビュー再生を開始する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const reserveTasks: NodeJS.Timeout[] = [];\r\n        const instrument = store.instruments.soundfontPlayer;\r\n\r\n        // 開始するフォーカス（非選択時は最初から）\r\n        const start = state.focusIndex === -1 ? 0 : state.focusIndex;\r\n\r\n        // プレビュー開始時のフォーカスを保持する\r\n        state.lastFocus = state.focusIndex;\r\n        state.isPreview = true;\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = start; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n                    \r\n                    // dispatcher.tune.setState(state);\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                        dispatcher.melody.adjustScrollX();\r\n                        // dispatcher.melody.setState(state);\r\n                    }, 0);\r\n                }, (posTime - firstTime) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (posTime - firstTime + lenTime) * 1000)\r\n                );\r\n            }\r\n        }\r\n\r\n        // ハーモニーを再生\r\n        if (!state.isSolo) {\r\n            previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n\r\n        dispatcher.system.setReserveTasks(reserveTasks);\r\n        dispatcher.melody.setState(state);\r\n    }\r\n\r\n    const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        const update = store.invalidate.melody as () => void;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = 3; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                if (cache.pastSecond < start) continue;\r\n\r\n                const detail = element.detail as DetailChord;\r\n\r\n                if (detail.root == null) return;\r\n\r\n                const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n                const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n                const chordTime = 60 / cache.bpm * len;\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // sampler.releaseAll();\r\n                        // stopPiano(store);\r\n\r\n                        // const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                        // const div = pickingDelay / pitchList.length;\r\n\r\n                        // pitchList.forEach((index, j) => {\r\n                        //     const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        //     const octave = Math.floor(index / 12);\r\n                        //     const soundFullName = soundName + octave;\r\n                        //     playPiano(soundFullName, store, chordTime);\r\n                        // });\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n                        setTimeout(() => {\r\n                            store.melodyState.tableMouse.curChord = element;\r\n                            update();\r\n                            // dispatcher.melody.setState(store.melodyState);\r\n                        }, 0);\r\n                    }, cache.pastSecond - start - adjsut)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const chordList = store.scoreData.chordList;\r\n        const init = chordList[0].detail as DetailInit;\r\n        const curChord = state.tableMouse.curChord;\r\n        const reserveTasks = store.reserveTasks;\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n            const chordTime = 60 / init.bpm * len;\r\n\r\n            BackingUtil.playBacking(store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.melody.setState(state);\r\n            }, chordTime * 1000));\r\n            state.isPreview = true;\r\n            dispatcher.melody.setState(state);\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyUtil;","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailAlter, DetailChord, DetailInit, DetailSection, Scale, ScoreData, TuneNotes, VoicingProps } from \"../store/score/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/score/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/score/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport MelodyUtil, { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\nimport { Invalidate } from \"../store/invalidate\";\r\nimport BackingState from \"../store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport CacheUtil from \"../../utils/cacheUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        },\r\n\r\n        setInvalidate: (invalidate: Invalidate) => {\r\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        saveFile: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const options = {\r\n                types: [\r\n                    {\r\n                        accept: {\r\n                            'text/plain': ['.lcrs'],\r\n                        },\r\n                    },\r\n                ],\r\n            };\r\n            const fileHandle = state.fileHandle;\r\n            if (fileHandle != null) {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await fileHandle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(JSON.stringify(data));\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = fileHandle;\r\n                    this.score.setScoreState({ ...state });\r\n                    const file = await fileHandle.getFile();\r\n                    alert('saved successfully!');\r\n                })();\r\n            } else {\r\n                window.showSaveFilePicker(options).then((handle) => {\r\n                    (async () => {\r\n                        //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                        const writable = await handle.createWritable();\r\n                        //テキストデータの書き込み\r\n                        const text = DataUtil.gZip(JSON.stringify(data));\r\n                        await writable.write(text);\r\n                        //ファイルを閉じる\r\n                        await writable.close();\r\n                        state.fileHandle = handle;\r\n                        this.score.setScoreState({ ...state });\r\n                    })();\r\n                }).catch(() => {\r\n                    console.log('キャンセルされました');\r\n                });\r\n            }\r\n        },\r\n\r\n        setPiano: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, harmony: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                state.distIndex = state.focusIndex;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n        moveDist: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.distIndex + sub].type !== 'fixed') {\r\n                state.distIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n            state.focusIndex = !isTail ? distHead : distTail;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        flashElement: (index: number) => {\r\n            // const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[index];\r\n\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n\r\n            // bodyRef.style.backgroundColor = '#ffef5f';\r\n            // setTimeout(() => {\r\n            //     bodyRef.style.backgroundColor = '';\r\n            // }, 10);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                if (isUp) {\r\n                    detail.root = { index: 0, isFlat: false };\r\n                    this.score.setScoreData(data);\r\n                    this.score.flashElement(state.focusIndex);\r\n                }\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            } else if (detail.root.index + sub === -1) {\r\n                detail.root = null;\r\n                detail.symbolKey = 'major';\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                setTimeout(() => {\r\n                    CacheUtil.updateHarmonizeCache(this.store, this);\r\n                }, 1);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -2 && target <= 2) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                CacheUtil.updateHarmonizeCache(this.store, this);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[state.focusIndex];\r\n            if (cur.type === 'chord') {\r\n                const curChord = cur.detail as DetailChord;\r\n                if (curChord.minute.tail != 0) return;\r\n            }\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: state.initialBeat,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null,\r\n                        hasError: false\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        addAlterElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'alter', detail: {\r\n                    alterType: null,\r\n                    modRel: null,\r\n                    dommVal: 0,\r\n                    keyAdj: 0,\r\n                    tempoRel: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbs: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailAlter\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                const sectionNo = this.store.scoreState.elementCacheList[i].sectionNo;\r\n                // 先頭のセクション要素が含まれている場合削除しない\r\n                if (element.type === 'section' && sectionNo === 0) {\r\n                    return;\r\n                }\r\n            }\r\n            data.chordList.splice(distHead, (distTail - distHead) + 1);\r\n            this.score.setScoreData(data);\r\n            state.focusIndex = distHead - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // // reffer.style.width = '300px';\r\n            // wrapRef.style.opacity = '0';\r\n            // wrapRef.style.overflow = 'hidden';\r\n            // // wrapRef.style.padding = '0';\r\n            // wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '0';\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.opacity = '';\r\n            //     wrapRef.style.width = '';\r\n            //     wrapRef.style.overflow = '';\r\n            //     // wrapRef.style.padding = '';\r\n            //     const data = this.store.scoreData;\r\n            //     data.chordList.splice(state.focusIndex, 1);\r\n            //     this.score.setScoreData(data);\r\n            //     state.focusIndex--;\r\n            //     this.score.setScoreState(state);\r\n            //     // setTimeout(() => {\r\n            //     //     reffer.style.opacity = '';\r\n            //     //     reffer.style.width = '';\r\n            //     //     const data = this.store.scoreData;\r\n            //     //     data.chordList.splice(state.focusIndex, 1);\r\n            //     //     this.score.setScoreData(data);\r\n            //     // }, 200);\r\n            // }, 200);\r\n        },\r\n\r\n        copyElementList: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            const list: ChordElement[] = [];\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                list.push(JSON.parse(JSON.stringify(element)));\r\n            }\r\n            console.log(list.length);\r\n            state.copiedElementList = list;\r\n            state.cloneBacking = null;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        pasteElementList: () => {\r\n            const state = this.store.scoreState;\r\n\r\n            const data = this.store.scoreData;\r\n            const list = state.copiedElementList;\r\n            if (list == null) return;\r\n\r\n            console.log(list.length);\r\n            list.forEach((element, i) => {\r\n                data.chordList.splice(state.focusIndex + 1 + i, 0, element);\r\n            });\r\n            this.score.setScoreData(data);\r\n            state.focusIndex++;\r\n            state.distIndex = state.focusIndex + list.length - 1;\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (scale: Scale, keyIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const scaleList = scale === 'major' ? TheoryUtil.DIATONIC_MAJOR_SCALE_LIST : TheoryUtil.DIATONIC_MINOR_SCALE_LIST;\r\n            const chord = scaleList[keyIndex];\r\n            detail.root = { ...chord.root };\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        cloneBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n        },\r\n\r\n        pastBacking: () => {\r\n            const state = this.store.scoreState;\r\n            if (state.cloneBacking != null) {\r\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n                const data = this.store.scoreData;\r\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    /**\r\n     * メロディ画面のディスパッチ\r\n     */\r\n    public melody = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        /**\r\n         * 全てのノーツを選択する\r\n         */\r\n        allSelect: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = notesList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * 選択中のノーツの音程を変更する\r\n         * @param isUpper\r\n         * @param mode \r\n         * @returns \r\n         */\r\n        incrementCurPitch: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n            const scoreState = this.store.scoreState;\r\n            const state = this.store.melodyState;\r\n            const focusIndex = state.focusIndex;\r\n            const distIndex = state.destIndex;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            // フォーカスされていない場合は処理しない\r\n            if (focusIndex === -1) return;\r\n\r\n            if (focusIndex !== distIndex) {\r\n\r\n                const targetList = notesList.filter(\r\n                    (notes, i) => i >= focusIndex && i <= distIndex\r\n                );\r\n\r\n                targetList.forEach(notes => {\r\n                    notes.pitchIndex += 1 * (isUpper ? -1 : 1);\r\n\r\n                    // 履歴を作成\r\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                    this.melody.setNotesList(notesList.slice());\r\n                });\r\n            } else {\r\n                const cur = notesList[focusIndex];\r\n                // const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n                const scaleIndexList = TheoryUtil.MAJOR_SCALE_INDEX;\r\n                const normalLeft = getNormalizeLenFromNotes(cur.pos);\r\n                const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n                const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n\r\n                const prevPitchIndex = cur.pitchIndex;\r\n                const interval = mode !== 'octave' ? 1 : 12;\r\n                let tempPitchIndex = cur.pitchIndex;\r\n\r\n                while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                    tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                    if (mode !== 'scale' ||\r\n                        (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                    ) {\r\n                        cur.pitchIndex = tempPitchIndex;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // 値が変わっていた場合のみ処理する\r\n                if (prevPitchIndex !== cur.pitchIndex) {\r\n                    playSoundfont(cur.pitchIndex, this.store);\r\n                    // 履歴を作成\r\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                    this.melody.setNotesList(notesList.slice());\r\n\r\n                    this.melody.adjustScrollY();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * キースイッチを設定する\r\n         * @param keySwitch \r\n         */\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         */\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        /**\r\n         * 複数選択From～ToのToを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         * @returns \r\n         */\r\n        moveDestFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.destIndex > 0 : state.destIndex < notesList.length - 1) {\r\n                state.destIndex += (isNext ? 1 : -1);\r\n                this.melody.setState(state);\r\n            }\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツのエリアのコードを更新する\r\n         * @param focusIndex ノーツのフォーカス\r\n         */\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.tableMouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスの後ろに新しいノーツを追加する\r\n         * @returns \r\n         */\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const focus = state.focusIndex;\r\n            if (focus === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[focus];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = focus === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            // 新しい要素の位置\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(focus + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツを削除する\r\n         */\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            // 履歴を作成\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n            // 対象の開始と終了のインデックスを取得\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            // 削除する個数\r\n            const delNum = end - start + 1;\r\n            notesList.splice(start, delNum);\r\n            this.melody.setNotesList(notesList);\r\n            // 削除後は対象の開始インデックスの１つ前を選択\r\n            state.focusIndex = start - 1;\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * 複数選択を解除する\r\n         * @param isTail 解除時複数選択のどこにフォーカスを移すか（trueの場合終端を選択）\r\n         */\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            state.focusIndex = (!isTail ? start : end);\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            const distIndex = state.destIndex;\r\n            const focusIndex = state.focusIndex;\r\n\r\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\r\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n\r\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\r\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\r\n\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 移動可能かを判定\r\n            if (condition) {\r\n                for (let i = start; i <= end; i++) {\r\n                    const cur = notesList[i];\r\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                }\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        firstNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n                this.melody.adjustScrollX();\r\n                // this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.destIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            // if (state.focusIndex === -1) return;\r\n\r\n            MelodyUtil.previewStart(this.store, this);\r\n        },\r\n\r\n        copyNotes: () => {\r\n\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const num = focusEnd - focusStart + 1;\r\n\r\n            const cloneNotesList: TuneNotes[] = [];\r\n            const base = notesList[focusStart].pos;\r\n            const baseUnit = getMinimumLenUnit(base);\r\n            for (let i = 0; i < num; i++) {\r\n                const notes = notesList[i + focusStart];\r\n                const unit = getMinimumLenUnit(notes.pos);\r\n                const useUnit = baseUnit > unit ? baseUnit : unit;\r\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\r\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\r\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\r\n                console.log(JSON.stringify(pos));\r\n                cloneNotesList.push({\r\n                    pitchIndex: notes.pitchIndex,\r\n                    pos,\r\n                    len: { ...notes.len }\r\n                });\r\n            }\r\n            state.cloneNotesList = cloneNotesList;\r\n            // notesList.splice(state.focusIndex, num);\r\n            // this.tune.setNotesList(notesList);\r\n            // state.focusIndex = focusStart - 1;\r\n            // state.distIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            // alert(JSON.stringify(state.cloneNotesList));\r\n        },\r\n\r\n        pasteNotes: () => {\r\n            // alert('pasteNotes');\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const pastList: TuneNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\r\n            pastList.forEach(notes => {\r\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\r\n            });\r\n            // ペーストするノーツの最後（右端）の要素\r\n            const pastLast = pastList[pastList.length - 1];\r\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList = notesList.concat(pastList);\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                data.notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                this.score.setScoreData(data);\r\n\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex + pastList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            // this.tune.adjustScrollX();\r\n        },\r\n\r\n        undo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`undo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const prev = history.undo();\r\n            if (prev != null) {\r\n                if (history.cur === 0) {\r\n                    console.log('first undo');\r\n                    history.list.unshift(JSON.stringify(data.notesList));\r\n                    history.cur = 1;\r\n                }\r\n                data.notesList = JSON.parse(prev);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`undo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        },\r\n\r\n        redo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`redo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const next = history.redo();\r\n            if (next != null) {\r\n                data.notesList = JSON.parse(next);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`redo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordBacking = detail.backing;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n\r\n            let pattern: BackingState.Pattern | null = null;\r\n            if (chordBacking.pattern != null) {\r\n                const patternProps = chordBacking.pattern;\r\n                const voicingStructs = BackingUtil.buildChannels(voicingTable);\r\n                const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\r\n                const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);;\r\n                pattern = {\r\n                    channelIndex: -1,\r\n                    lenIndex: 0,\r\n                    isUsePedal: false,\r\n                    layerIndex: 0,\r\n                    channels,\r\n                    layers\r\n                };\r\n            }\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    root: (detail.root as TheoryUtil.DegreeProps),\r\n                    on: (detail.on),\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    symbolKey: detail.symbolKey,\r\n                    init: { ...cache }\r\n                },\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false,\r\n                hasError: chordBacking.hasError\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n            setTimeout(() => {\r\n                this.backing.setState(null);\r\n            }, 50);\r\n        },\r\n\r\n        setState: (backingState: null | BackingState.Editor) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingState.Layer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingState.Layer;\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const isExist = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = isExist != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        // エディタで設定したバッキング情報を譜面に反映\r\n        mappingEditorToScore: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n\r\n            detail.backing = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                hasError: editor.hasError\r\n            };\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        // getChannels: (table: boolean[][]): ChannelParam[] => {\r\n        //     const channels: ChannelParam[] = [];\r\n        //     for (let i = 0; i < table.length; i++) {\r\n        //         for (let j = 0; j < table[i].length; j++) {\r\n        //             if (table[i][j]) {\r\n        //                 channels.push({ octave: i, structIndex: j });\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     if (channels.length === 0) {\r\n        //         channels.push({ octave: -1, structIndex: 0 });\r\n        //     }\r\n        //     return channels;\r\n        // },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const curLen = lenList[pattern.lenIndex];\r\n            const newLen: BackingState.NoteDiv = { rate: curLen.rate, div3: curLen.div3, isDot: curLen.isDot };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.noteDivList = lenList.slice();\r\n\r\n            // テーブル追加\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n\r\n            // ベロシティ追加\r\n            layer.velocityList.splice(pattern.lenIndex + 1, 0, 5);\r\n\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            cur.isDot = false;\r\n            cur.div3 = 0;\r\n            layer.noteDivList = layer.noteDivList.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            if (BackingUtil.isPermitDot(cur)) {\r\n                cur.isDot = !cur.isDot;\r\n                layer.noteDivList = layer.noteDivList.slice();\r\n                this.backing.setState(state);\r\n                this.backing.updateErrorState();\r\n            }\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: BackingState.NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            layer.table = layer.table.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        incrementVel: (value: number) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const after = layer.velocityList[pattern.lenIndex] + value;\r\n            if (after >= 1 && after <= 10) {\r\n                layer.velocityList[pattern.lenIndex] = after;\r\n                this.backing.setState(state);\r\n            }\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            // 2つ以上要素がないと消せない\r\n            if (layer.noteDivList.length >= 2) {\r\n                layer.noteDivList.splice(pattern.lenIndex, 1);\r\n                layer.table.forEach((column) => {\r\n                    column.splice(pattern.lenIndex, 1);\r\n                });\r\n                layer.velocityList.splice(pattern.lenIndex, 1);\r\n                // for(let i = 0; i < pattern.channels.length; i ++) {\r\n                //     layer.table[i].splice(pattern.lenIndex, 1);\r\n                // }\r\n                if (pattern.lenIndex > 0) {\r\n                    pattern.lenIndex--;\r\n                }\r\n                this.backing.setState(state);\r\n            }\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n        changeLayer: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        testBacking: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const reserveTasks = this.store.reserveTasks;\r\n            const chordInfo = editor.chordInfo;\r\n            const init = chordInfo.init;\r\n\r\n            const rootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n            const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n            const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\r\n            const chordTime = 60 / init.bpm * len;\r\n            const backing: ChordBacking = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                hasError: false\r\n            };\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n            BackingUtil.playBacking(this.store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                editor.isPreview = false;\r\n                this.backing.setState(editor);\r\n            }, chordTime * 1000));\r\n\r\n            editor.isPreview = true;\r\n            this.backing.setState(editor);\r\n        },\r\n\r\n        updateErrorState: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const voicingList = BackingUtil.getVoicingListFromTable(editor.voicingTable);\r\n            editor.hasError = BackingUtil.checkError(editor.chordInfo, voicingList, editor.pattern);\r\n            this.backing.setState(editor);\r\n        }\r\n    }\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport Soundfont from 'soundfont-player';\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: TheoryUtil.SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null,\r\n        hasError: false\r\n    };\r\n    return backing;\r\n}","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./score/scoreData\"\r\nimport { ScoreState } from \"./score/scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./score/melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { Invalidate } from \"./invalidate\"\r\nimport DataHistory from \"./state/dataHistory\"\r\nimport BackingState from \"./score/backing/backingState\"\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState.Editor;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n\r\n    invalidate: Invalidate;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        dialog: null\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        fileHandle: null,\r\n        isTune: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        scaleCacheList: [],\r\n        tempoCacheList: [],\r\n        beatCacheList: [],\r\n        measureCacheList: [],\r\n        keySwitch: {\r\n            distMode: false,\r\n            sustainMode: false,\r\n            symbolMode: false,\r\n            control: false,\r\n            minHeadMode: false,\r\n            minTailMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneBacking: null,\r\n        copiedElementList: null,\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        destIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 4,\r\n        beatWidth: 120,\r\n        tableMouse: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        timelineMouse: {\r\n            pos: -1,\r\n            isPut: false,\r\n            lock: -1,\r\n            width: 0,\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 5\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false,\r\n            control: false,\r\n        },\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneNotesList: [],\r\n\r\n        dataHistory: new DataHistory(),\r\n        notesCacheList: []\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        // sampler: getDefaultSampler(),\r\n        harmony: null,\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: [],\r\n    invalidate: {\r\n        harmoniizeInvalidate: {},\r\n        harmonize: null,\r\n        melody: null\r\n    },\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note: {\r\n        prevElement: string;\r\n        nextElement: string;\r\n        prevSection: string;\r\n        nextSection: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        distMode: string;\r\n        sustainMode: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        symbolMode: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = (): KeyConfig => {\r\n    return {\r\n        note: {\r\n            prevElement: 'ArrowLeft',\r\n            nextElement: 'ArrowRight',\r\n            prevSection: 'ArrowUp',\r\n            nextSection: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'm',\r\n            deleteCur: 'Delete',\r\n            distMode: 'Shift',\r\n            sustainMode: 'f',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n            symbolMode: 'c',\r\n        }\r\n    };\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","\r\n\r\nclass DataHistory {\r\n\r\n    cur: number;\r\n    list: string[];\r\n\r\n    constructor() {\r\n        this.cur = -1;\r\n        this.list = [];\r\n    }\r\n\r\n\r\n    add(data: string) {\r\n        // console.log(`add start ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n        // if (this.list[this.cur] === data) {\r\n        //     console.log('same...');\r\n        //     return;\r\n        // }\r\n        if (this.cur > -1) {\r\n            this.list.splice(0, this.cur + 1);\r\n            this.cur = -1;\r\n            console.log('restert');\r\n        }\r\n        this.list.unshift(data);\r\n        // console.log(`add end ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n    }\r\n\r\n    undo(): null | string {\r\n        let ret = null;\r\n        if (this.cur < this.list.length - 1) {\r\n            this.cur++;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    redo(): null | string {\r\n        let ret = null;\r\n        if (this.cur > 0) {\r\n            this.cur--;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const dialog = store.systemState.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.systemState.dialog = null;\r\n            dispatcher.system.setState(store.systemState);\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        display: inline-block;\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        line-height: 26px;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import { DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\r\n\r\nnamespace ChordProgUtil {\r\n\r\n    export type BuildType = 'blank' | 'custom' | 'template';\r\n\r\n    export type ProgBlcok = {\r\n        section: DetailSection;\r\n        chordList: DetailChord[];\r\n    }\r\n\r\n    export const buildScoreData = () => {\r\n        \r\n        const data: ScoreData = {\r\n            chordList: [\r\n                { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' } as DetailInit },\r\n                { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                {\r\n                    type: 'chord', detail: {\r\n                        beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                        backing: {\r\n                            voicingList: [],\r\n                            pattern: null,\r\n                            hasError: false\r\n                        }\r\n                    } as DetailChord\r\n                },\r\n                { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n            ],\r\n            notesList: []\r\n        };\r\n        return data\r\n    }\r\n}\r\n\r\nexport default ChordProgUtil;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChordProgUtil from \"./chordProgUtil\";\r\n\r\ntype Table = {\r\n    id: number;\r\n    data: string;\r\n}\r\n/**\r\n * コード進行を構成して譜面のベースを作成するダイアログ\r\n * @param props \r\n * @returns \r\n */\r\nconst ChordProgDialog = (props: {\r\n    setScoreData: (scoreData: ScoreData) => void;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [buildType, setBuildType] = useState<ChordProgUtil.BuildType>('blank');\r\n\r\n    const resetAction = () => {\r\n        store.systemState.dialog = null;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    /**\r\n     * Closeボタン押下時の処理\r\n     */\r\n    const closeAction = () => {\r\n        store.systemState.dialog = null;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        const scoreData = ChordProgUtil.buildScoreData();\r\n        props.setScoreData(scoreData);\r\n        closeAction();\r\n        // Editタブに遷移\r\n        store.systemState.scoreTabIndex = 1;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    const templateJsxList = useMemo(() => {\r\n        return ['short major 01', 'short major 02', 'short minor 01'].map((val, i) => {\r\n            return (\r\n                <option key={i} value={i}>{val}</option>\r\n            );\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame >\r\n            <_Header>\r\n                <_SwitchableButton isActive={buildType === 'blank'}\r\n                    onClick={() => {\r\n                        setBuildType('blank');\r\n                    }}\r\n                >Blank</_SwitchableButton>\r\n                <_SwitchableButton isActive={buildType === 'custom'}\r\n                    onClick={() => {\r\n                        setBuildType('custom');\r\n                    }}\r\n                >Custom</_SwitchableButton>\r\n                <_SwitchableButton isActive={buildType === 'template'}\r\n                    onClick={() => {\r\n                        setBuildType('template');\r\n                    }}\r\n                >Template</_SwitchableButton>\r\n            </_Header>\r\n            <_MainDiv>\r\n                <_LeftDiv>\r\n                    <_TemplateDiv>\r\n                        <_TemplateSelect>{templateJsxList}</_TemplateSelect>\r\n                    </_TemplateDiv>\r\n                    <_ButtonDiv>\r\n                        <_ExecutableButton isEnable={true} onClick={() => {\r\n                            closeAction();\r\n                        }}>Reset</_ExecutableButton>\r\n                        <_ExecutableButton isEnable={true} onClick={() => {\r\n                            resetAction();\r\n                        }}>Add</_ExecutableButton>\r\n                    </_ButtonDiv>\r\n                    <_ButtonDiv>\r\n\r\n                    </_ButtonDiv>\r\n                </_LeftDiv>\r\n                <_RightDiv></_RightDiv>\r\n            </_MainDiv>\r\n            <_Footer>\r\n                <_ExecutableButton isEnable={true} onClick={closeAction}>Cancel</_ExecutableButton>\r\n                <_ExecutableButton isEnable={true} onClick={enterAction}>Enter</_ExecutableButton>\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ChordProgDialog;\r\n\r\nconst HEADER_HEIGHT = 50;\r\nconst FOOTER_HEIGHT = 50;\r\nconst BUTTON_DIV_HEIGHT = 50;\r\nconst TEMPLATE_DIV_HEIGHT = 50;\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 100px;\r\n    top: 100px;\r\n    width: 800px;\r\n    height: 600px;\r\n    z-index: 11;\r\n    /* top: 100px;\r\n    left: 100px; */\r\n    /* width: calc(100% - 200px);\r\n    height: calc(100% - 200px); */\r\n    background-color: #929292;\r\n    border: solid 2px #404250;\r\n    border-radius: 8px;\r\n    /* border: 1px solid #dadada; */\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #7d8d97;\r\n    text-align: center;\r\n`;\r\n\r\n/**\r\n * メインコンポーネント\r\n */\r\nconst _MainDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_HEIGHT + FOOTER_HEIGHT}px);\r\n    /* background-color: #7d8d97; */\r\n    text-align: left;\r\n`;\r\n\r\n/**\r\n * 左側のコンポーネント\r\n */\r\nconst _LeftDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    width: calc(50% - 6px);\r\n    height: calc(100% - 8px);\r\n    background-color: #bdced8;\r\n    text-align: left;\r\n    margin: 4px 2px 4px 4px;\r\n`;\r\n\r\n/**\r\n * 右側のコンポーネント\r\n */\r\nconst _RightDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    width: calc(50% - 6px);\r\n    height: calc(100% - 8px);\r\n    background-color: #bdced8;\r\n    text-align: left;\r\n    margin: 4px 4px 4px 2px;\r\n`;\r\n\r\n/**\r\n * テンプレート編集エリア（画面汎用）\r\n */\r\nconst _TemplateDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TEMPLATE_DIV_HEIGHT}px;\r\n    background-color: #bd94b6;\r\n    text-align: left;\r\n    & *{\r\n        margin: 10px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _TemplateSelect = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    text-align: left;\r\n    color: black;\r\n    line-height: 24px;\r\n    width: 250px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n/**\r\n * ボタンエリア（画面汎用）\r\n */\r\nconst _ButtonDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BUTTON_DIV_HEIGHT}px;\r\n    background-color: #94babd;\r\n    text-align: center;\r\n    & *{\r\n        margin: 10px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n    & *{\r\n        margin: 10px 5px 0 0;\r\n    }\r\n`;\r\n\r\n/**\r\n * スイッチボタン\r\n */\r\nconst _SwitchableButton = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #5083c5;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c5b950;\r\n    `};\r\n    width: 200px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #375176;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #77a7e6;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #c5b950;\r\n        `};\r\n    }\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #2d5625;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../utils/cacheUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ChordProgDialog from \"./chordProg/chordProgDialog\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [file, setFile] = useState<null | File>(null);\r\n\r\n    const fileHandle = store.scoreState.fileHandle;\r\n    const data = store.scoreData;\r\n    const tabIndex = store.systemState.scoreTabIndex;\r\n\r\n    const [fileInfo, scoreInfo]: [{\r\n        name: string;\r\n        size: string;\r\n        modified: string;\r\n    }, {\r\n        key: string;\r\n        tempo: string;\r\n        rate: string;\r\n        section: string;\r\n        chord: string;\r\n        bar: string;\r\n        time: string;\r\n        notes: string;\r\n    }] = useMemo(() => {\r\n        let name = '-';\r\n        let size = '-';\r\n        let modified = '-';\r\n        let key = '-';\r\n        let tempo = '-';\r\n        let rate = '-';\r\n        let section = '-';\r\n        let chord = '-';\r\n        let bar = '-';\r\n        let time = '-';\r\n        let notes = '-';\r\n        if (tabIndex === 0) {\r\n            if (file != null) {\r\n                name = file.name;\r\n                size = `${file.size.toString()} byte`;\r\n                modified = DataUtil.getStringFromDate(new Date(file.lastModified));\r\n            }\r\n            if (data.chordList.length > 0) {\r\n                const init = data.chordList[0].detail as DetailInit;\r\n                key = `${TheoryUtil.KEY12_MAJOR_SCALE_LIST[init.keyIndex]} ${init.scale}`;\r\n                tempo = init.bpm.toString();\r\n                rate = init.beatSignature;\r\n                let sectionNum = 0;\r\n                let chordNum = 0;\r\n                data.chordList.forEach(chord => {\r\n                    switch (chord.type) {\r\n                        case 'section': sectionNum++; break;\r\n                        case 'chord': chordNum++; break;\r\n                    }\r\n                });\r\n                section = sectionNum.toString();\r\n                chord = chordNum.toString();\r\n\r\n                const cacheList = store.scoreState.elementCacheList;\r\n                if (cacheList.length > 0) {\r\n                    const last = cacheList[cacheList.length - 1];\r\n                    time = `${last.pastSecond / 1000}s`;\r\n                    bar = `${last.bar} (${last.surplusBeat})`;\r\n                }\r\n                notes = data.notesList.length.toString();\r\n            }\r\n        }\r\n        return [{\r\n            name, size, modified\r\n        }, {\r\n            key, tempo, rate, section, chord, bar, time, notes\r\n        }]\r\n    }, [tabIndex, data, file]);\r\n\r\n    useEffect(() => {\r\n        if (tabIndex === 0 && fileHandle != null) {\r\n            fileHandle.getFile().then(file => {\r\n                setFile(file);\r\n            });\r\n        }\r\n    }, [tabIndex]);\r\n\r\n    const setScoreData = ((data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    });\r\n\r\n    /**\r\n     * ラベルフォームを生成する\r\n     * @param labelName ラベル名\r\n     * @param labelValue 値\r\n     * @returns JSX\r\n     */\r\n    const createLabelRecord = (labelName: string, labelValue: string) => {\r\n        return (\r\n            <_Recored>\r\n                <_ItemnLabel>{labelName}</_ItemnLabel>\r\n                <_ItemnValue>{labelValue}</_ItemnValue>\r\n            </_Recored>\r\n        );\r\n    }\r\n\r\n\r\n    const searchLocalFileAction = () => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            // console.log(fileContents);\r\n            store.scoreState.fileHandle = fileHandle;\r\n            setFile(file);\r\n            const text = DataUtil.unZip(fileContents);\r\n            // const text = fileContents;\r\n            console.log(text);\r\n            setScoreData(JSON.parse(text));\r\n        })();\r\n    }\r\n\r\n    const disconnectAction = () => {\r\n        store.scoreState.fileHandle = null;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n        setFile(null);\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_MainDiv>\r\n                <_Left>\r\n                    <_ListInfoDiv isEnable={true}>\r\n\r\n                    </_ListInfoDiv>\r\n                    {/* <_Link onClick={() => {\r\n\r\n                    const data: ScoreData = {\r\n                        chordList: [\r\n                            { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' } as DetailInit },\r\n                            { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                            { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                            {\r\n                                type: 'chord', detail: {\r\n                                    beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                    backing: {\r\n                                        voicingList: [],\r\n                                        pattern: null,\r\n                                        hasError: false\r\n                                    }\r\n                                } as DetailChord\r\n                            },\r\n                            { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                        ],\r\n                        notesList: []\r\n                    };\r\n                    // setSource(JSON.stringify(data));\r\n                    setData(data);\r\n                }} >Create an empty score.</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅰ→Ⅴ→Ⅵ→Ⅲm→Ⅳ→Ⅰ→Ⅱm→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅵm→Ⅳ→Ⅴ→Ⅰ→Ⅵm→Ⅳ→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(4, 3);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChordDiatonic(4, 2);\r\n                    builder.addChordDiatonic(4, 5);\r\n                    builder.addChordDiatonic(4, 1);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChord(4, { index: 0, isFlat: false }, 'suspend4th');\r\n                    builder.addChordDiatonic(4, 0);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅳ→Ⅴ→Ⅲm→Ⅵm→Ⅱm→Ⅴ→Ⅰsus4→Ⅰ</_Link> */}\r\n                </_Left>\r\n                <_Right>\r\n                    {/* <_Source value={source} onChange={e => setSource(e.target.value)} /> */}\r\n\r\n                    <_DataInfoDiv isEnable={fileHandle != null}>\r\n                        <_TitleLabel>DATA</_TitleLabel>\r\n                        {createLabelRecord('file', fileInfo.name)}\r\n                        {createLabelRecord('name', fileInfo.name)}\r\n                        {createLabelRecord('url', fileInfo.name)}\r\n                        {createLabelRecord('size', fileInfo.name)}\r\n                        {/* {createLabelRecord('size', fileInfo.size)}\r\n                        {createLabelRecord('modified', fileInfo.modified)} */}\r\n                    </_DataInfoDiv>\r\n                    <_ScoreInfoDiv isEnable={data.chordList.length > 0}>\r\n                        <_TitleLabel>SCORE</_TitleLabel>\r\n                        {createLabelRecord('key', scoreInfo.key)}\r\n                        {createLabelRecord('tempo', scoreInfo.tempo)}\r\n                        {createLabelRecord('rate', scoreInfo.rate)}\r\n                        {createLabelRecord('section', scoreInfo.section)}\r\n                        {createLabelRecord('chord', scoreInfo.chord)}\r\n                        {createLabelRecord('bar', scoreInfo.bar)}\r\n                        {createLabelRecord('time', scoreInfo.time)}\r\n                        {createLabelRecord('notes', scoreInfo.notes)}\r\n                    </_ScoreInfoDiv>\r\n                </_Right>\r\n            </_MainDiv>\r\n\r\n            <_ButtonsDiv>\r\n                <_Button onClick={()=> {\r\n                    store.systemState.dialog = <ChordProgDialog setScoreData={setScoreData}/>;\r\n                    dispatcher.system.setState(store.systemState);\r\n                }}>new score</_Button>\r\n                <_Button onClick={searchLocalFileAction}>load file</_Button>\r\n                <_Button onClick={searchLocalFileAction}>search local</_Button>\r\n                <_Button onClick={disconnectAction}>disconnect</_Button>\r\n            </_ButtonsDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #8a6b6b; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #969696; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\n// const _Source = styled.textarea`\r\n//     display: inline-block;\r\n//     width: calc(100% - 8px);\r\n//     margin: 4px 0 0 4px;\r\n//     height: calc(100% - 44px);\r\n//     /* background-color: #7e7e7e; */\r\n//     text-align: left;\r\n//     font-size: 20px;\r\n//     resize: none;\r\n//     box-sizing: border-box;\r\n//     color: #060053;\r\n// `;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    height: calc(100% - 48px);\r\n    background-color: #ffffff;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst DATA_INFO_HEIGHT = 260;\r\n\r\nconst _DataInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${DATA_INFO_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #9da5af;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ScoreInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${DATA_INFO_HEIGHT + 12}px);\r\n    margin: 0 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #ad0000;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c5;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\n\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #888888;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    border: 1px solid #000744;\r\n    color: #04274e;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    &:hover {\r\n        background-color: #98bfc2;\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : TheoryUtil.getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: TheoryUtil.SymbolKey[] = [];\r\n        const parentLine: TheoryUtil.SymbolKey[] = [];\r\n        const childrenLine: TheoryUtil.SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = TheoryUtil.getSymbolDerives(baseSymbol.key);\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = TheoryUtil.getSymbolDerives(curSymbol.key);\r\n        TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\nimport { DetailChord } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = TheoryUtil.getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = TheoryUtil.getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = TheoryUtil.getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        // 見た目上１から数えるため\r\n        bar = cache.bar + 1;\r\n    }\r\n    // 小節変更タイミングで、余りの拍がある（頭でない）場合エラー\r\n    const isError = bar !== -1 && cache.surplusBeat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n    }\r\n\r\n    let minuteStr = '';\r\n    if(cache.minute !== 0) {\r\n        switch(cache.minute) {\r\n            case 1: minuteStr = '→/16'; break;\r\n            case 2: minuteStr = '→/8'; break;\r\n            case -1: minuteStr = '←/16'; break;\r\n            case -2: minuteStr = '←/8'; break;\r\n        }\r\n    }\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.surplusBeat === 0 ? <>&nbsp;</> : cache.surplusBeat}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : minuteStr}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\nconst ElementDetailAlter = (props: {\r\n    detail: DetailAlter;\r\n}) => {\r\n\r\n    const type = props.detail.alterType;\r\n\r\n    const getDetailInfo = (): string => {\r\n        let ret = '-';\r\n        if (type != null) {\r\n            switch (type) {\r\n                case 'modulate': {\r\n\r\n                    const modRel = props.detail.modRel;\r\n                    if (modRel != null) {\r\n                        switch (modRel) {\r\n                            case 'domm': {\r\n                                const val = props.detail.dommVal;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                            case 'relative':\r\n                            case 'parallel': {\r\n                                ret = modRel;\r\n                            } break;\r\n                            case 'key': {\r\n                                const val = props.detail.keyAdj;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                        }\r\n                    }\r\n                } break;\r\n                case 'tempo' : {\r\n                    const tempoRel = props.detail.tempoRel;\r\n                    switch(tempoRel) {\r\n                        case 'diff': {\r\n                            const val = props.detail.tempoDiff;\r\n                            const sign = val > 0 ? '+' : ''; \r\n                            ret = `${tempoRel}: ${sign}${val}`;\r\n                        } break;\r\n                        case 'rate': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoRate}%`;\r\n                        } break;\r\n                        case 'abs': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoAbs}`;\r\n                        } break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                {type == null ? 'alter' : type}\r\n            </_Type>\r\n            <_Detail>\r\n                {getDetailInfo()}\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, Scale } from \"../../../../../../redux/store/score/scoreData\";\r\nimport { NoteKeySwitch } from \"../../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 2 | 1;\r\n\r\n/**\r\n * コードブロックのコンポーネント\r\n * @param props \r\n * @returns \r\n */\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isSustainMode: boolean;\r\n    isCurrent: boolean;\r\n    keyIndex: number;\r\n    scale: Scale;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const state = store.scoreState;\r\n    // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const minute = props.detail.minute;\r\n    // const keySwitch = props.keySwitch;\r\n\r\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() => {\r\n\r\n        // const keySwitch = store.scoreState.keySwitch;\r\n        const chordBacking = props.detail.backing;\r\n        let degreeRoot: null | string = null;\r\n        let degreeOn: null | string = null;\r\n        let chordRoot: null | string = null;\r\n        let chordOn: null | string = null;\r\n\r\n        if (props.detail.root != null) {\r\n            degreeRoot = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            });\r\n            chordRoot = TheoryUtil.getChordRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, props.keyIndex);\r\n\r\n            if (props.detail.on != null) {\r\n                degreeOn = TheoryUtil.getDegreeRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.on.isFlat\r\n                });\r\n                chordOn = TheoryUtil.getChordRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.root.isFlat\r\n                }, props.keyIndex);\r\n            }\r\n        }\r\n\r\n        const diatonicList = TheoryUtil.getDiatonicDegreeList(props.scale);\r\n        const isDiatonic = diatonicList.includes(degreeRoot + symbolName);\r\n\r\n        return <_Wrap>\r\n            <_Degree\r\n                // isSwitch={keySwitch.sustainMode && props.isCurrent}\r\n                isSwitch={props.isSustainMode}\r\n                scaleRelation={degreeRoot != null && isDiatonic ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={props.isSustainMode}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n            <_Backing>\r\n                {chordBacking.hasError ? <_Error /> : <>\r\n                    {chordBacking.voicingList.length === 0 ? '' : <_Voicing />}\r\n                    {chordBacking.voicingList.length === 0 ? '' : chordBacking.pattern == null ? '' : <_Pattern />}\r\n                </>}\r\n            </_Backing>\r\n        </_Wrap>\r\n    }\r\n        , [\r\n            props.scale,\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            props.isSustainMode,\r\n            props.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail,\r\n            props.detail.backing\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: TheoryUtil.ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 18px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #422e3099;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 2 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 1 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Backing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 6px;\r\n    /* background-color: #00a048; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Error = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background-color: #af3838;\r\n`;\r\n\r\nconst _Voicing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(50% - 2px);\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px 0 0 4px;\r\n    background-color: #7c89a1;\r\n`;\r\n\r\nconst _Pattern = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(50% - 2px);\r\n    margin: 2px 0 0 4px;\r\n    height: 4px;\r\n    border-radius: 0 4px 4px 0;\r\n    background-color: #a8c7a8;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    // const jsxList: JSX.Element[] = [];\r\n    // jsxList.push(<_Border key={0} />);\r\n    // jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    const value = props.detail.fixed;\r\n    return (\r\n        <_Wrap isStart={value === 'Start'}>\r\n            {/* {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()} */}\r\n            <_Label>{value}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div<{\r\n    isStart: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    border-left: 1px solid #00000083;\r\n    border-top: 1px solid #00000083;\r\n    border-right: 1px solid #00000083;\r\n    /* border: 1px solid #00000083; */\r\n    box-sizing: border-box;\r\n    background-color: #9b9b9b1f;\r\n    ${props => props.isStart ? css`\r\n        border-radius: 0 35px 0 0;\r\n    ` : css`\r\n        border-radius: 35px 0 0 0;\r\n    `}\r\n`;\r\n\r\n// const _Border = styled.div`\r\n//     display: inline-block;\r\n//     width: 10px;\r\n//     height: 100%;\r\n//     background-color: #b4b4b4;\r\n//     vertical-align: middle;\r\n// `;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    /* width: calc(100% - 10px); */\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #960000b0;\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    /* vertical-align: middle; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{TheoryUtil.KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.beatSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailSection } from \"../../../../../../redux/store/score/scoreData\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst ElementDetailSection = (props: {\r\n    detail: DetailSection;\r\n}) => {\r\n    // const { store } = useContext(GlobalContext);\r\n\r\n    // const state = store.scoreState;\r\n    // const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    // const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Label>{curSection.labelName}</_Label> */}\r\n            <_Label>{props.detail.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcAlter = (props: {\r\n    detail: DetailAlter;\r\n    prevCache: ScoreCache.Element;\r\n    curCache: ScoreCache.Element;\r\n}) => {\r\n\r\n    const getType = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate': return 'Key';\r\n            case 'tempo': return 'Tempo';\r\n            case 'beat': return 'Beat';\r\n        }\r\n    }\r\n    const getDetail = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate':{\r\n                const prevKey = TheoryUtil.KEY12_SHARP_LIST[props.prevCache.keyIndex] + (props.prevCache.scale === 'major' ? '' : 'm');\r\n                const curKey = TheoryUtil.KEY12_SHARP_LIST[props.curCache.keyIndex] + (props.curCache.scale === 'major' ? '' : 'm');\r\n                return `${prevKey}→${curKey}`;\r\n            }\r\n            case 'tempo':{\r\n                const prevTempo = props.prevCache.bpm;\r\n                const curTempo = props.curCache.bpm;\r\n                return `${prevTempo}→${curTempo}`;\r\n            }\r\n            case 'beat':{\r\n                const prevBeat = props.prevCache.beatSignature;\r\n                const curBeat = props.curCache.beatSignature;\r\n                return `${prevBeat}→${curBeat}`;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Type>{getType()}</_Type>\r\n            <_Detail>{getDetail()}</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { ElementType, useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport { CgDetailsLess } from \"react-icons/cg\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TypeElement } from \"typescript\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SymbolEditor from \"../input/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailAlter from \"./form/elementDetailAlter\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcAlter from \"./calc/calcAlter\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { ScoreState } from \"../../../../../redux/store/score/scoreState\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n    element: ChordElement;\r\n    state: ScoreState;\r\n    setState: (state: ScoreState) => void;\r\n}) => {\r\n\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = props.state;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    // const chordList = store.scoreData.chordList;\r\n    // const element = chordList[props.index];\r\n    const element = props.element;\r\n    const cache = state.elementCacheList[props.index];\r\n    const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n    const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n    const isFocus = props.index >= distHead && props.index <= distTail;\r\n    const isRange = isFocus && distHead != distTail;\r\n    const isSameSection = isFocus || state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        props.setState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    const elementJson = JSON.stringify(element);\r\n\r\n    return useMemo(() => {\r\n        console.log(`pos: ${props.index}`);\r\n\r\n\r\n        const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n        const isInactive = !(isSameSection || element.type === 'init');\r\n        return (\r\n            <_Wrap\r\n                ref={wrapRef}\r\n                isSelectable={element.type !== 'fixed'}\r\n                isActive={isFocus}\r\n                isInactive={isInactive}\r\n                isAdditional={['chord', 'section', 'alter', 'init'].includes(element.type)}\r\n            >\r\n                <_Head>\r\n                    {element.type !== 'chord' ? <></> : (\r\n                        <_CurKey>{TheoryUtil.getDisplayKeyScaleName(cache.keyIndex, cache.scale)}</_CurKey>\r\n                    )}\r\n                </_Head>\r\n\r\n                {/* 要素の入力フォーム */}\r\n                {['init', 'chord', 'section', 'alter'].includes(element.type) ? (\r\n                    <_Form\r\n                        ref={bodyRef}\r\n                        isActive={isFocus}\r\n                        isRange={isRange}\r\n                        isInactive={isInactive}\r\n                        type={element.type}\r\n                        isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                        onClick={() => {\r\n                            if (element.type === 'fixed') {\r\n                                return;\r\n                            }\r\n                            if (!state.keySwitch.distMode) {\r\n                                state.focusIndex = props.index;\r\n                                state.distIndex = state.focusIndex;\r\n                            } else {\r\n                                state.distIndex = props.index;\r\n                            }\r\n                            props.setState(state);\r\n                        }}\r\n                    >{(() => {\r\n                        switch (element.type) {\r\n                            case 'init': {\r\n                                const detail = element.detail as DetailInit;\r\n                                return (<ElementDetailInit detail={detail} />);\r\n                            }\r\n                            case 'section': {\r\n                                const detail = element.detail as DetailSection;\r\n                                return (<ElementDetailSection detail={detail} />);\r\n                            }\r\n                            case 'chord': {\r\n                                const detail = element.detail as DetailChord;\r\n                                return (<ElementDetailChord\r\n                                    detail={detail}\r\n                                    isCurrent={isFocus}\r\n                                    keyIndex={cache.keyIndex}\r\n                                    isSustainMode={isFocus && state.keySwitch.sustainMode}\r\n                                    scale={cache.scale}\r\n                                />);\r\n                            }\r\n                            case 'alter': {\r\n                                const detail = element.detail as DetailAlter;\r\n                                return (<ElementDetailAlter detail={detail} />);\r\n                            }\r\n                        }\r\n                    })()}\r\n                    </_Form>\r\n                ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n                {/* 入力フォーム下部の計算によって出力される情報 */}\r\n                {\r\n                    element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                        element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                            element.type === 'alter' ? (\r\n                                <CalcAlter\r\n                                    detail={element.detail as DetailAlter}\r\n                                    prevCache={state.elementCacheList[props.index - 1]}\r\n                                    curCache={cache}\r\n                                />\r\n                            ) :\r\n                                <></>\r\n                }\r\n                <>{!(isCurrent && chordDetail != null && chordDetail.root != null && state.keySwitch.symbolMode) ? '' :\r\n                    <SymbolEditor />\r\n                }</>\r\n                {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                    <_Operations>\r\n                        <_OperationItem>-</_OperationItem>\r\n                        <_OperationItem\r\n                        // onClick={() => dispatcher.score.addChordElement()}\r\n                        >+</_OperationItem>\r\n                    </_Operations>\r\n                )}\r\n            </_Wrap>\r\n        );\r\n    }, [elementJson, isSameSection, isRange, isFocus, state.keySwitch.symbolMode, state.keySwitch.sustainMode]);\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isRange: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    border: solid 1px #00000049;\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #df8484;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #44b168;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'alter' ? '' : css`\r\n        border: solid 1px #604fc0;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 4px;\r\n    ${props => props.isInactive ? '' : css`\r\n        background-color: #ebf1e2;\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4badd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n    ${props => !props.isRange ? '' : css`\r\n        background-color: #80d4e2;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isAdditional: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isAdditional ? '' : css`\r\n        /* background-color: #e8ff9549; */\r\n        background: linear-gradient(to bottom, transparent,transparent,transparent, #ffffff9e);\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #e8f3ab9b;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\nimport SymbolEditor from \"./input/symbolEditor\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const cacheList = store.scoreState.elementCacheList;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (cacheList.length === chordList.length) {\r\n        for (let i = 0; i < cacheList.length; i++) {\r\n            list.push(\r\n                <ScoreElement key={list.length}\r\n                    index={i}\r\n                    element={chordList[i]}\r\n                    state={store.scoreState}\r\n                    setState={dispatcher.score.setScoreState}\r\n                />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {list}\r\n            {/* <_Frame> */}\r\n            {/* <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note> */}\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #d8d8d8;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\nimport { getKeyIndexFromPitcher, getNormalizeLenFromNotes } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nnamespace HarmonizeUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n        const state = store.scoreState;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        const reserveTasks = store.reserveTasks;\r\n        let firstTime = -1;\r\n        const update = () => {\r\n            // if (store.invalidate.harmonize) {\r\n            //     store.invalidate.harmonize();\r\n            // }\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = state.focusIndex; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                // 開始時のノーツの位置（時間）を保存する。\r\n                if (firstTime === -1) {\r\n                    firstTime = cache.pastSecond;\r\n                }\r\n\r\n\r\n                if (detail.root == null) continue;\r\n\r\n                const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n                const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n                const chordTime = 60 / cache.bpm * len;\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        setTimeout(() => {\r\n                            update();\r\n                        }, 0);\r\n\r\n                    }, cache.pastSecond - firstTime - adjsut)\r\n                );\r\n            }\r\n\r\n            if (i === chordList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (cache.pastSecond - firstTime - adjsut))\r\n                );\r\n            }\r\n        }\r\n        \r\n        // メロディを再生\r\n        if (!state.isSolo) {\r\n            previewMelody(firstTime / 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n        state.isPreview = true;\r\n        update();\r\n    }\r\n\r\n    const previewMelody = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const instrument = store.instruments.soundfontPlayer;\r\n\r\n        state.isPreview = true;\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = 0; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n\r\n            if (posTime < start) continue;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    dispatcher.melody.adjustScrollX();\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                    }, 0);\r\n                }, (posTime - start) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (posTime - start + lenTime) * 1000)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    // ハーモニーのプレビューを停止する。\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        state.isPreview = false;\r\n        // store.instruments.sampler.releaseAll();\r\n        // state.focusIndex = state.lastFocus;\r\n        reserveTasks.forEach(id => clearTimeout(id));\r\n        dispatcher.system.setReserveTasks([]);\r\n        dispatcher.score.setScoreState(state);\r\n\r\n        store.instruments.harmony?.stop();\r\n    }\r\n\r\n    // 選択中の要素のバッキングパターンを鳴らす\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.scoreState;\r\n        const reserveTasks = store.reserveTasks;\r\n        const cache = state.elementCacheList[state.focusIndex];\r\n        const curChord = store.scoreData.chordList[state.focusIndex];\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n            const chordTime = 60 / cache.bpm * len;\r\n\r\n            BackingUtil.playBacking(store, store.reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.score.setScoreState(state);\r\n            }, chordTime * 1000));\r\n            state.isPreview = true;\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n    }\r\n}\r\n\r\nexport default HarmonizeUtil;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport namespace SideFormStyles {\r\n\r\n    export const ___CSS_FORM = css`\r\n        display: inline-block;\r\n        /* width: 100px; */\r\n        height: 25px;\r\n        background-color: #bdbdbd;\r\n        border: 1px solid #000;\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        color: #303030;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        text-align: center;\r\n    `;\r\n\r\n    export const ___CSS_TITLE = css`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 26px;\r\n        /* background-color: #f0f0f0; */\r\n        background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n        border: 1px solid #222222;\r\n        font-size: 20px;\r\n        color: #ffffff;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        box-sizing: border-box;\r\n        /* border: 1px solid #c50000; */\r\n        text-align: center;\r\n    `;\r\n\r\n    export const createNumberForm = (value: number, isEnable: boolean,\r\n         onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n         min: number, max:number, step:number) => {\r\n\r\n        return (\r\n            <_NumberForm isEnable={isEnable}>\r\n                <input\r\n                    type=\"number\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"range\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </_NumberForm>\r\n        );\r\n    }\r\n\r\n    const _NumberForm = styled.div<{\r\n        isEnable: boolean;\r\n    }>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 55px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 5px;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n    `;\r\n}","import { stat } from \"fs\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { backingEditorInput } from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    // プレビュー再生時\r\n    if (state.isPreview) {\r\n        switch (e.key) {\r\n            case ' ': {\r\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n        return;\r\n    } else {\r\n        if (store.scoreState.hideMenu === 'none') {\r\n            if (isElement) {\r\n                if (keySwitch.control) {\r\n                    switch (e.key) {\r\n                        case 'c': {\r\n                            const element = data.chordList[state.focusIndex];\r\n                            if (element.type === \"chord\") {\r\n                                const detail = element.detail as DetailChord;\r\n                                if (detail.root != null) {\r\n                                    dispatcher.score.cloneBacking();\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'x': {\r\n                            dispatcher.score.copyElementList();\r\n                        }\r\n                            break;\r\n                        case 'v': {\r\n                            if (state.copiedElementList != null) {\r\n                                dispatcher.score.pasteElementList();\r\n                            } else if (state.cloneBacking != null) {\r\n\r\n                                const element = data.chordList[state.focusIndex];\r\n                                if (element.type === \"chord\") {\r\n                                    const detail = element.detail as DetailChord;\r\n                                    if (detail.root != null) {\r\n                                        dispatcher.score.pastBacking();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 's': {\r\n                            // dispatcher.score.saveFile();\r\n                            DataUtil.saveFile(JSON.stringify(data), state);\r\n                        }\r\n                        break;\r\n                    }\r\n                } else if (keySwitch.distMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.moveDist(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.moveDist(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.sustainMode) {\r\n                    switch (e.key) {\r\n                        case config.decRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(false);\r\n                        }\r\n                            break;\r\n                        case config.incRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(true);\r\n                        }\r\n                            break;\r\n                        case config.decBeat: {\r\n                            dispatcher.score.incrementBeatLen(false);\r\n                        }\r\n                            break;\r\n                        case config.incBeat: {\r\n                            dispatcher.score.incrementBeatLen(true);\r\n                        }\r\n                            break;\r\n                        // case 'A': dispatcher.score.incrementMinuteValRelation(false, -0.25); break;\r\n                        // case 'S': dispatcher.score.incrementMinuteValRelation(false, 0.25); break;\r\n                        // case 'D': dispatcher.score.incrementMinuteValRelation(true, -0.25); break;\r\n                        // case 'F': dispatcher.score.incrementMinuteValRelation(true, 0.25); break;\r\n                    }\r\n                } else if (keySwitch.minHeadMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, 1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, -1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minTailMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, -1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, 1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.symbolMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.symbol.toNext(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.symbol.toNext(true);\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.symbol.toBase();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.symbol.toDerive();\r\n                        }\r\n                            break;\r\n                    }\r\n                } else {\r\n                    NoteBasicInput(e, store, dispatcher);\r\n                }\r\n            }\r\n        } else if (store.scoreState.hideMenu === 'backing') {\r\n            backingEditorInput(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const state = store.scoreState;\r\n    if (!state.isPreview) {\r\n        // if (state.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case 'Control': {\r\n                keySwitch.control = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.distMode: {\r\n                if (!keySwitch.control) {\r\n                    keySwitch.distMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.sustainMode: {\r\n                if (!(keySwitch.control || keySwitch.distMode)) {\r\n                    keySwitch.sustainMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.symbolMode: {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode)) {\r\n                    keySwitch.symbolMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'd': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.symbolMode)) {\r\n                    keySwitch.minHeadMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'g': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.symbolMode || keySwitch.minHeadMode)) {\r\n                    keySwitch.minTailMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n        }\r\n        // }\r\n    }\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                }\r\n                    break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(cache.scale, Number(e.key) - 1);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.prevElement: {\r\n            if(state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(false);\r\n            } else {\r\n                dispatcher.score.releaseRange(false);\r\n            }\r\n        }\r\n            break;\r\n        case config.nextElement: {\r\n            if(state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(true);\r\n            } else {\r\n                dispatcher.score.releaseRange(true);\r\n            }\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.prevSection: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.nextSection: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'm': {\r\n            dispatcher.score.addAlterElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case ' ': {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        }\r\n            break;\r\n    }\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\nimport { ChordBacking } from \"../../../../../redux/store/score/scoreData\";\r\n\r\nexport const backingEditorInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.backingState;\r\n\r\n    if (state == null) return;\r\n\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const pattern = state.pattern;\r\n\r\n\r\n    if (!state.isPreview) {\r\n        switch (e.key) {\r\n            case 'b': {\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n            case 'z': {\r\n                const test: ChordBacking = {\r\n                    voicingList: BackingUtil.getVoicingListFromTable(state.voicingTable),\r\n                    pattern: state.pattern == null ? null : BackingUtil.buildPatternProps(state.pattern),\r\n                    hasError: state.hasError\r\n                }\r\n                alert(window.btoa(JSON.stringify(test)));\r\n            }\r\n                break;\r\n            case 'Enter': {\r\n                dispatcher.backing.mappingEditorToScore();\r\n            }\r\n                break;\r\n            case ' ': {\r\n                if (!state.hasError) {\r\n                    dispatcher.backing.testBacking();\r\n                }\r\n            }\r\n                break;\r\n        }\r\n\r\n        if (pattern != null) {\r\n            if (!keySwitch.sustainMode) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': {\r\n                        dispatcher.backing.movePatternColumn(false);\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        dispatcher.backing.movePatternColumn(true);\r\n                    }\r\n                        break;\r\n                }\r\n                if (pattern.channelIndex === -1) {\r\n\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.backing.incrementVel(1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.backing.incrementVel(-1);\r\n                        }\r\n                            break;\r\n                        case 'a': {\r\n                            dispatcher.backing.addPatternColumn();\r\n                        }\r\n                            break;\r\n                        case 'w': {\r\n                            dispatcher.backing.changeLayer();\r\n                        }\r\n                            break;\r\n                        case '1': {\r\n                            dispatcher.backing.setCurrentDivRate(16);\r\n                        }\r\n                            break;\r\n                        case '2': {\r\n                            dispatcher.backing.setCurrentDivRate(8);\r\n                        }\r\n                            break;\r\n                        case '3': {\r\n                            dispatcher.backing.setCurrentDivRate(4);\r\n                        }\r\n                            break;\r\n                        case '4': {\r\n                            dispatcher.backing.setCurrentDivRate(2);\r\n                        }\r\n                            break;\r\n                        case '5': {\r\n                            dispatcher.backing.setCurrentDivRate(1);\r\n                        }\r\n                            break;\r\n                        case '.': {\r\n                            dispatcher.backing.toggleCurrentDivHalf();\r\n                        }\r\n                            break;\r\n                        case 'Delete': {\r\n                            dispatcher.backing.deleteColumn();\r\n                        }\r\n                            break;\r\n                        case 'f': {\r\n                            pattern.channelIndex = 0;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'Enter': {\r\n                            dispatcher.backing.mappingEditorToScore();\r\n                            dispatcher.backing.closeBackingEditor();\r\n                        }\r\n                            break;\r\n\r\n                    }\r\n                } else {\r\n\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.backing.moveChannelIndex(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.backing.moveChannelIndex(true);\r\n                        }\r\n                            break;\r\n                        case 'f': {\r\n                            pattern.channelIndex = -1;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'Enter': {\r\n                            const curNotes = dispatcher.backing.getNotes();\r\n                            const notes: BackingState.NoteStatus | null = curNotes == null ? { signal: 'n', timing: 0, velAdj: 0 } : null;\r\n                            dispatcher.backing.setNotes(notes);\r\n                            dispatcher.backing.updateErrorState();\r\n                        }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n\r\n            } else {\r\n\r\n                const pattern = state.pattern as BackingState.Pattern;\r\n                const layer = pattern.layers[pattern.layerIndex];\r\n                const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n                const cell = layer.table[channelIndex][pattern.lenIndex];\r\n                if (cell != null) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            cell.velAdj++;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            cell.velAdj--;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            cell.timing--;\r\n                            update();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            cell.timing++;\r\n                            update();\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n\r\n        switch (e.key) {\r\n            case ' ': {\r\n                BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BeatSignature, DetailAlter as DetailAlter, AlterType, ModulateRelation, TempoRelation } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormAlter = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailAlter;\r\n\r\n    const type = detail.alterType;\r\n\r\n    const update = () => {\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const createAlertTypeItem = (value: AlterType | '-', isActive: boolean): JSX.Element => {\r\n        const type = value === '-' ? null : value;\r\n        return <_Form isActive={isActive}\r\n            onClick={() => {\r\n                //値が変わった時のみ処理を実行\r\n                if (detail.alterType !== type) {\r\n                    detail.alterType = type;\r\n                    // 全ての項目を初期化\r\n                    detail.modRel = null;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    detail.tempoRel = null;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    detail.beatSignature = '4/4';\r\n                    update();\r\n                }\r\n            }}> {value}</_Form >;\r\n    }\r\n\r\n    const createModulateRelationItem = (value: ModulateRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'modulate' && rel == detail.modRel}\r\n            onClick={() => {\r\n                if (detail.modRel !== rel) {\r\n                    detail.modRel = rel;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createTempoRelationItem = (value: TempoRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'tempo' && rel == detail.tempoRel}\r\n            onClick={() => {\r\n                if (detail.tempoRel !== rel) {\r\n                    detail.tempoRel = rel;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createBeatItem = (value: BeatSignature): JSX.Element => {\r\n        return <_Form isActive={detail.alterType === 'beat' && detail.beatSignature === value}\r\n            onClick={() => {\r\n                if (detail.beatSignature !== value) {\r\n                    detail.beatSignature = value;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const donmmItemJsxList = <_ParamDiv isEnable={detail.modRel === 'domm'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'domm' && value == detail.dommVal}\r\n            onClick={() => {\r\n                detail.dommVal = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>\r\n    })}</_ParamDiv>;\r\n\r\n    const keyAdjItemJsxList = <_ParamDiv isEnable={detail.modRel === 'key'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'key' && value == detail.keyAdj}\r\n            onClick={() => {\r\n                detail.keyAdj = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>;\r\n    })}</_ParamDiv>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Group isEnable={true}>\r\n                <_CategoryLabel>Type</_CategoryLabel>\r\n                {createAlertTypeItem('-', type == null)}\r\n                {createAlertTypeItem('modulate', type === 'modulate')}\r\n                {createAlertTypeItem('tempo', type === 'tempo')}\r\n                {createAlertTypeItem('beat', type === 'beat')}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'modulate'}>\r\n                <_CategoryLabel>Modulate</_CategoryLabel>\r\n                {createModulateRelationItem('-')}\r\n                {createModulateRelationItem('domm')}\r\n                {donmmItemJsxList}\r\n                {createModulateRelationItem('parallel')}\r\n                {createModulateRelationItem('relative')}\r\n                {createModulateRelationItem('key')}\r\n                {keyAdjItemJsxList}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'tempo'}>\r\n                <_CategoryLabel>Tempo</_CategoryLabel>\r\n                {createTempoRelationItem('-')}\r\n                {createTempoRelationItem('diff')}\r\n                {SideFormStyles.createNumberForm(detail.tempoDiff,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'diff',\r\n                    (e) => {\r\n                        detail.tempoDiff = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, -100, 100, 1)}\r\n                {createTempoRelationItem('rate')}\r\n                {SideFormStyles.createNumberForm(detail.tempoRate,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'rate',\r\n                    (e) => {\r\n                        detail.tempoRate = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n                {createTempoRelationItem('abs')}\r\n                {SideFormStyles.createNumberForm(detail.tempoAbs,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'abs',\r\n                    (e) => {\r\n                        detail.tempoAbs = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'beat'}>\r\n                <_CategoryLabel>Beat</_CategoryLabel>\r\n                {createBeatItem('2/4')}\r\n                {createBeatItem('4/4')}\r\n                {createBeatItem('3/4')}\r\n                {createBeatItem('6/8')}\r\n                {createBeatItem('9/8')}\r\n                {createBeatItem('12/8')}\r\n            </_Group>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormAlter;\r\n\r\nconst _Wrap = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        background-color: #b3b5c5;\r\n        `;\r\n\r\nconst _Group = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 0 0 0 4px;\r\n    ${props => props.isEnable ? '' : css`\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n`}\r\n        `;\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        margin-top: 1px;\r\n        width: 100%;\r\n        background-color: #c1cdd4;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\nconst _ParamDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n        margin: 1px;\r\n        background-color: #070707;\r\n        ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n        `;\r\nconst _ParamItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        width: 29px;\r\n        background-color: #dddddd;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\n\r\nconst _ValueForm = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 24px;\r\n        /* margin: 5px 0 0 0; */\r\n        text-align: left;\r\n        background-color: #ececec;\r\n\r\n        & * {\r\n            display: inline-block;\r\n            box-sizing: border-box;\r\n            vertical-align: top;\r\n    }\r\n        & input:nth-child(1) {\r\n            background-color: #dddddd;\r\n            width: 60px;\r\n            height: calc(100% - 4px);\r\n            margin: 2px 0 0 0;\r\n            border: 1px solid #9b9b9b;\r\n            border-radius: 4px;\r\n    }\r\n        & input:nth-child(2) {\r\n            margin-left: 5px;\r\n            background-color: #f00;\r\n            width: calc(100% - 70px);\r\n            height: 100%;\r\n    }\r\n        `;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i} isExist={isExist} onClick={() => {\r\n                const data = store.scoreData;\r\n                data.chordList = data.chordList.slice();\r\n                detail.beatLen = (i + 1);\r\n                data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        const scaleIndexies = cache.scale === 'major' ? ['0', '2', '4', '5', '7', '9', '11'] : ['0', '2', '3b', '5', '7', '8b', '10b'];\r\n        const isDiatonic = root != null && scaleIndexies.includes(root.index + (root.isFlat ? '' : 'b'));\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={isDiatonic}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    if (root == null) {\r\n                        detail.symbolKey = 'major';\r\n                    }\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {TheoryUtil.getDegreeRoot(root)} ({TheoryUtil.getChordRoot(root, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_CategoryLabel>{'Beat Length'}</_CategoryLabel>\r\n                <_Beat>\r\n                    {beatItemsJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    <_CategoryLabel>{'Minute Head'}</_CategoryLabel>\r\n                    {/* <MinuteForm isHeadAdjust={true} /> */}\r\n                    <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                    <_CategoryLabel>{'Minute Tail'}</_CategoryLabel>\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_RootDiv>\r\n                    {rootItemsJsx}\r\n                </_RootDiv>\r\n                <_SymbolDiv\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_SymbolDiv>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\nconst _LabelBeat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #c50000; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 100px; */\r\n    text-align: left;\r\n    background-color: #979797;\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 2px;\r\n        width: calc(100% - 4px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _LabelMinute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #222222;\r\n    text-align: center;\r\n`;\r\n// const _Minutetem = styled.div<{\r\n//     isExist: boolean;\r\n// }>`\r\n//     display: inline-block;\r\n//     width: 20%;\r\n//     height: 20px;\r\n//     text-align: left;\r\n//     background-color: #4c3696;\r\n//     font-size: 18px;\r\n//     font-weight: 600;\r\n//     color: #ce0000;\r\n//     line-height: 12px;\r\n//     text-align: center;\r\n\r\n//     & span{\r\n//         display: inline-block;\r\n//         margin: 2px 0 0 2px;\r\n//         width: calc(100% - 4px);\r\n//         height: calc(100% - 4px);\r\n//         background-color: #9b8585;\r\n//         ${props => !props.isExist ? '' : css`\r\n//             /* background-color: #ebf37eb7; */\r\n//             background: linear-gradient(to bottom, #bdb652d2, #fff56cd3, #bdb652d2);\r\n//         `}\r\n//     }\r\n// `;\r\nconst _MinuteItem = styled.input<{\r\n    isReverse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: 20px;\r\n    color: #3b51d1;\r\n    ${props => !props.isReverse ? '' : css`\r\n        transform: rotateY(180deg);\r\n    `}\r\n`;\r\n\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    margin-top: 5px;\r\n    width: 100%;\r\n    /* height: 360px; */\r\n    text-align: left;\r\n    /* background-color: #000000; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _RootDiv = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    margin: 0 0 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #e6e6e6; */\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #90bbcc;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #d1c521b8;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #99999940;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #cc6363b8;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #94c5e6b9;`}\r\n    }\r\n`;\r\n\r\nconst _SymbolDiv = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 93px);\r\n    margin: 0 1px 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    background-color: #a1cc90;\r\n    ${props => !props.isActive ? '' : css`background-color: #d1c521b8;`}\r\n    color: #fff;\r\n    ${props => !props.isDiatonic ? '' : css`color: #fff;`}\r\n    /* & span {\r\n        color: #f000;\r\n    } */\r\n    &:hover {\r\n        background-color: #dddddd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #cc6363b8;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const update = () => {\r\n        data.chordList = data.chordList.slice();\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const scaleItemJsxList: JSX.Element[] = ['major', 'minor'].map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? TheoryUtil.KEY12_MAJOR_SCALE_LIST : TheoryUtil.KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n    const rateItemJsxList: JSX.Element[] = ['2/4', '4/4', '3/4', '6/8', '9/8', '12/8'].map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.beatSignature === item} onClick={() => {\r\n                detail.beatSignature = item as BeatSignature;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            {SideFormStyles.createNumberForm(detail.bpm, true, (e) => {\r\n                detail.bpm = e.currentTarget.valueAsNumber;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }, 30, 220, 1)}\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 50%;\r\n    margin: 1px 0 0 0;\r\n\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 100%;\r\n    margin: 1px 0 0 0;\r\n    \r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    margin: 1px 0 0 0;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/score/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        ['Intro', 'A', 'B', 'C', 'D', 'Outro'].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        const splitList = detail.labelName.split(' ');\r\n        ['', 1, 2, 3, 4, 5, 6, 7, 8, 9].forEach((item) => {\r\n            const isActive = splitList[splitList.length - 1] === item.toString();\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(`${splitList[0]} ${item}`);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_SelectDiv>\r\n                <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n                <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n            </_SelectDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #b89b9b; */\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _SelectDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    background-color: #acacac;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(60% - 4px);\r\n    margin: 0 2px 0 2px;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(40% - 2px);\r\n    margin: 0 2px 0 0;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #6182b4; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #61b4b0; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormAlter from \"./sideFormAlter\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst NoteSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'alter': return <SideFormAlter />;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default NoteSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const scaleIndexies = cache.scale === 'major' ? [0, 2, 4, 5, 7, 9, 11] : [0, 2, 3, 5, 7, 8, 10];\r\n    const scaleList = scaleIndexies.map(value => (cache.keyIndex + value) % 12);\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = TheoryUtil.getIntervalValues((root.index + cache.keyIndex) % 12, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{TheoryUtil.IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        for (let i = 0; i < 14; i++) {\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            {/* <_Info>{tipJsxList}</_Info> */}\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    /* background-color: #4b4b4b; */\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    border: 1px solid #ffffffda;\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    ` : css`\r\n    background: radial-gradient(#d6cec3, #a89889);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    ` : css`\r\n        background: radial-gradient(#e7a144, #72552a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst InitialBeatTip = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const tipJsxList:JSX.Element[] = [];\r\n    for(let i = 0; i < 4; i ++) {\r\n        tipJsxList.push(\r\n            <_Tip key={i} isActive={state.initialBeat > i} onClick={()=> {\r\n                state.initialBeat = i + 1;\r\n                dispatcher.score.setScoreState(state);\r\n            }}/>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Label>inital beat</_Label>\r\n            <_WrapTip>{tipJsxList}</_WrapTip>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default InitialBeatTip;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\nconst _WrapTip = styled.div`\r\n    display: inline-block;\r\n    width: 142px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 10px;\r\n    border-radius: 4px;\r\n    border: solid 1px #747474;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 4px;\r\n    background-color: #c7c7c7;\r\n        border: solid 1px #a1a1a1;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4e4e4;\r\n        border: solid 1px #7c7c7c;\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternAdjust = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cell = layer.table[channelIndex][pattern.lenIndex];\r\n    const timing = cell == null ? 0 : cell.timing;\r\n    const velAdj = cell == null ? 0 : cell.velAdj;\r\n\r\n    return (<_Wrap>\r\n        {\r\n            cell == null ? <></> : (<>\r\n                <_Rocord>\r\n                    <_Label>delay</_Label>\r\n                    <_Value type=\"range\" min={-10} max={10} step={1} value={timing} onChange={e => {\r\n                        cell.timing = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_Rocord>\r\n                <_Rocord>\r\n                    <_Label>velocity</_Label>\r\n                    <_Value type=\"range\" min={-10} max={10} step={1} value={velAdj} onChange={e => {\r\n                        cell.velAdj = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_Rocord>\r\n            </>)\r\n        }\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternAdjust;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Rocord = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(50% - 2px);\r\n    margin: 1px 0;\r\n    background-color: #9c9c9c;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 1px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 2px);\r\n    width: 80px;\r\n    background-color: #868686;\r\n    font-size: 16px;\r\n    line-height: 16px;\r\n    font-weight: 600;\r\n    color: #e7e7e7;\r\n    border: 1px solid #616161;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.input<{\r\n}>`\r\n    display: inline-block;\r\n    outline: none;\r\n    margin: 6px 0 0 10px;\r\n    width: calc(100% - 100px);\r\n    height: 10px;\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate * adjustRate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {itemJsxList}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n    const curLayer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    const layerJsxList = useMemo(() => {\r\n\r\n        const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n        pattern.layers.forEach((layer, j) => {\r\n\r\n            const jsxLsit: JSX.Element[] = [];\r\n            for (let i = 0; i < channelCount; i++) {\r\n                const notesJsxLsit: JSX.Element[] = [];\r\n\r\n                layer.noteDivList.forEach((note, k) => {\r\n                    // データ上は下から数えるため、表示のループは逆回転する\r\n                    const channelIndex = (channelCount - 1) - i;\r\n                    const isActive = pattern.layerIndex === j && pattern.lenIndex === k;\r\n                    const cell = layer.table[channelIndex][k];\r\n                    const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                    const isUse = cell != null;\r\n                    // 前面にあるレイヤーのみエラー判定をする\r\n                    const isError = pattern.layerIndex !== j ? false :\r\n                        isUse && BackingUtil.checkOverlapBackLayer(pattern.layers, j, channelIndex, k);\r\n                    const isEdit = isActive && pattern.channelIndex === i;\r\n                    let rate = note.rate * adjustRate;\r\n                    if (note.isDot) rate /= 1.5;\r\n                    if (note.div3 !== 0) rate /= note.div3 / 3;\r\n                    notesJsxLsit.push(\r\n                        <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                            <_State isUse={isUse} isError={isError} signal={'n'} isBack={pattern.layerIndex !== j}\r\n                                onClick={() => {\r\n                                    if (cell == null) {\r\n                                        setNotesStatus({ signal: 'n', timing: 0, velAdj: 0 });\r\n                                    } else {\r\n                                        setNotesStatus(null);\r\n                                    }\r\n                                    curLayer.table = curLayer.table.slice();\r\n                                    update();\r\n                                    dispatcher.backing.updateErrorState();\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    pattern.channelIndex = i;\r\n                                    pattern.lenIndex = k;\r\n                                    update();\r\n                                }}\r\n                            />\r\n                        </_Notes>\r\n                    );\r\n                });\r\n                jsxLsit.push(\r\n                    <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                        {notesJsxLsit}\r\n                    </_Record>\r\n                );\r\n            }\r\n            layerJsxList[j] = jsxLsit;\r\n        });\r\n        return layerJsxList;\r\n    }, [\r\n        pattern.channels, pattern.layerIndex, pattern.lenIndex,\r\n        curLayer.noteDivList, curLayer.table, pattern.channelIndex\r\n    ]);\r\n\r\n    // 選択中のレイヤーを表に表示する\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    isUse: boolean;\r\n    isError: boolean;\r\n    signal: BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => !props.isUse ? '' : css<{\r\n    isBack: boolean;\r\n    isError: boolean;\r\n}>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        // エラーあり\r\n        ${props => !props.isError ? '' : css`\r\n            opacity: 0.5;\r\n        `}\r\n        // 裏面のレイヤー\r\n        ${props => !props.isBack ? '' : css`\r\n            background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.5;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => !props.isUse ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternVelocity = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.velocityList.forEach((vel, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} >\r\n                <_Value value={vel} />\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternVelocity;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #001763ac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #173494ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Value = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 6px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternAdjust from \"./patternAdjust\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternTable from \"./patternTable\";\r\nimport PatternVelocity from \"./patternVelocity\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const divs = layer.noteDivList;\r\n    const limitLen = BackingUtil.getLimitLen(chordInfo);\r\n    const useTotalLen = BackingUtil.getUsingLenFromDivs(divs, chordInfo);\r\n    const isLenOverError = 0 <= limitLen - useTotalLen;\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const viewRate = NOTES_1BAR_WIDTH / 4;\r\n\r\n    // メモリの数を算出\r\n    let memoriCount = chordInfo.beatLen * beatProps.beatMemoriCount;\r\n    memoriCount += chordInfo.minute.head + chordInfo.minute.tail;\r\n\r\n    const barMemoriCount = beatProps.beatMemoriCount === 4 ? 16 : 24;\r\n    const memoriWidth = NOTES_1BAR_WIDTH / barMemoriCount;\r\n    // メモリJSXの生成\r\n    const memoriJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < memoriCount + 1; i++) {\r\n        const pos = i;\r\n        let bean: { thickness: number, height: number, color: string } = { thickness: 1, height: 10, color: '#555' };\r\n        if (beatProps.beatMemoriCount === 4) {\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        } else {\r\n            switch (true) {\r\n                case pos % 24 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 6 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        }\r\n        memoriJsxList.push(\r\n            <_Memori\r\n                key={memoriJsxList.length}\r\n                width={memoriWidth}\r\n                height={bean.height}\r\n                color={bean.color}\r\n                thickness={bean.thickness}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n                <_MemoriList>{memoriJsxList}</_MemoriList>\r\n                {isLenOverError ? (\r\n                    <_ChordLenLine pos={limitLen * viewRate} />\r\n                ) : (\r\n                    <_OverCover pos={limitLen * viewRate} width={(useTotalLen - limitLen) * viewRate} />\r\n                )}\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n            {pattern.channelIndex === -1 ?\r\n                <PatternVelocity /> :\r\n                <PatternAdjust />\r\n            }\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\nconst _MemoriList = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    thickness: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.thickness}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _OverCover = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: ${props => props.width}px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #f8000053;\r\n    pointer-events: none;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;\r\n\r\nconst _ChordLenLine = styled.div<{\r\n    pos: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: 4px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #ffffffc7;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n    const channelCount = pattern.channels.length;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length + 1);\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length - 1);\r\n        update();\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap isError={props.soundFullName === '-'}>\r\n            <_Struct>{props.soundFullName}</_Struct>\r\n            <_Option isEnable={channelCount > 1} onClick={deleteRecord}>-</_Option>\r\n            <_Option isEnable={channelCount < BackingUtil.CHANNEL_MAX} onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ff0000c3;\r\n    `}\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)<{\r\n    isEnable: boolean;\r\n}>`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n    const pattern = state.pattern;\r\n    const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    const layerJsxList: JSX.Element[] = [];\r\n    if (pattern != null) {\r\n        const channels = pattern.channels;\r\n        channels.forEach((channel, i) => {\r\n            let name = '-';\r\n            if (channel.octave !== -1) {\r\n                const soundIndex = chordRoot + TheoryUtil.IntervalRelationProps[symbol.structs[channel.structIndex]];\r\n                const octave = channel.octave + Math.floor(soundIndex / 12);\r\n                name = TheoryUtil.KEY12_SHARP_LIST[soundIndex % 12] + octave;\r\n            }\r\n            channelJsxList.push(\r\n                <ChannelItem key={i}\r\n                    index={i}\r\n                    soundFullName={name}\r\n                />\r\n            );\r\n        });\r\n\r\n        pattern.layers.forEach((layer, i) => {\r\n            const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\r\n            layerJsxList.push(\r\n                <_LayerItem key={i} isActive={pattern.layerIndex === i}\r\n                    onClick={()=>{\r\n                        if(i !== pattern.layerIndex) {\r\n                            dispatcher.backing.changeLayer();\r\n                        }\r\n                    }}\r\n                >\r\n                    {labelName}\r\n                </_LayerItem>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            {layerJsxList}\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #929292;\r\n`;\r\n\r\nconst _LayerItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #dad600;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternStatus = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        layer.noteDivList = layer.noteDivList.slice();\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, isEnable: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={isEnable} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, true, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const isPermit3ren = ['2/4', '4/4', '4/3'].includes(chordInfo.init.beatSignature);\r\n    const isPermitDot = BackingUtil.isPermitDot(cur);\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot,\r\n            isPermitDot,\r\n            () => {\r\n                cur.isDot = !cur.isDot;\r\n                update();\r\n            })}\r\n        {createItem('1/3', cur.div3 === 1,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 1) cur.div3 = 0;\r\n                else cur.div3 = 1;\r\n                update();\r\n            })}\r\n        {createItem('2/3', cur.div3 === 2,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 2) cur.div3 = 0;\r\n                else cur.div3 = 2;\r\n                update();\r\n            })}\r\n    </_WrapLen>;\r\n\r\n\r\n    const selectedCell = pattern.channelIndex === -1 ? null :\r\n        pattern.layers[pattern.layerIndex].table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', selectedCell == null,\r\n            true,\r\n            () => {\r\n\r\n                update();\r\n            })}\r\n\r\n        {createItem('□', selectedCell != null && selectedCell.signal === 'n',\r\n            true,\r\n            () => {\r\n\r\n                update();\r\n            })}\r\n        {createItem('・', selectedCell != null && selectedCell.signal === 's',\r\n            true,\r\n            () => {\r\n\r\n                update();\r\n            })}\r\n        {createItem('⁀', selectedCell != null && selectedCell.signal === 't',\r\n            true,\r\n            () => {\r\n\r\n                update();\r\n            })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternStatus;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternStatus from \"./patternStatus\";\r\n\r\n/**\r\n * バッキングエディタ画面のパターン部分の関数コンポーネント\r\n * @returns \r\n */\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* ヘッダー部分（パターン利用スイッチ） */}\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button isActive={isUsePattern}\r\n                        onClick={() => {\r\n                            if (!isUsePattern) {\r\n                                const table = state.voicingTable as boolean[][];\r\n                                const voicingStructs = BackingUtil.buildChannels(table);\r\n                                const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n                                state.pattern = {\r\n                                    layerIndex: 0,\r\n                                    lenIndex: 0,\r\n                                    channelIndex: -1,\r\n                                    channels,\r\n                                    isUsePedal: false,\r\n                                    layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n                                } as BackingState.Pattern;\r\n                                update();\r\n                            } else {\r\n                                state.pattern = null;\r\n                                update();\r\n                            }\r\n                        }}>Use\r\n                    </_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternStatus /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #e00000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #ff0000;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\n/**\r\n * ボイシングを定義するテーブルのコンポーネント\r\n * @returns コンポーネント\r\n */\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const table = state.voicingTable;\r\n    const pattern = state.pattern;\r\n    // 選択可能なチャンネル数\r\n    const channelLimitNum = pattern == null ? BackingUtil.OCTAVE_NUM * BackingUtil.STRUCT_NUM : pattern.channels.length;\r\n\r\n    return useMemo(() => {\r\n\r\n        const chordInfo = state.chordInfo;\r\n        const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n        const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n        const chordName = TheoryUtil.KEY12_SHARP_LIST[chordRoot] + symbol.name;\r\n\r\n        const rowJsxList: JSX.Element[] = [];\r\n        let total = 0;\r\n        // オクターブ（テーブル横）のループ\r\n        for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n            const cellJsxList: JSX.Element[] = [];\r\n            // 構成音（テーブル縦）のループ\r\n            for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n                let isEnable: boolean = symbol.structs.length > j;\r\n                let isSelected: boolean = table[i][j];\r\n                if (isSelected) {\r\n                    total++;\r\n                }\r\n\r\n                const interval = TheoryUtil.IntervalRelationProps[symbol.structs[j]];\r\n                const chordIndex = (chordRoot + interval) % 12;\r\n                const octave = i + Math.floor((chordRoot + interval) / 12);\r\n\r\n                const name = !isEnable ? '' : `${TheoryUtil.KEY12_SHARP_LIST[chordIndex]}${octave}`;\r\n                cellJsxList.push(\r\n                    <_Cell key={j}\r\n                        isEnable={isEnable}\r\n                        isSelected={isSelected}\r\n                        isOver={isSelected && total > channelLimitNum}\r\n                        onClick={() => {\r\n                            table[i][j] = !isSelected;\r\n                            if (pattern != null) {\r\n                                const voicingStructs: BackingState.ChannelParam[] = BackingUtil.buildChannels(table);\r\n                                pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                            }\r\n                            dispatcher.backing.setState({ ...state, voicingTable: table.slice(), pattern });\r\n                            dispatcher.backing.updateErrorState();\r\n                        }}\r\n                        onContextMenu={() => {\r\n                            const soundfont = store.instruments.harmony;\r\n                            if (soundfont != null) {\r\n                                soundfont.play(name, 0, { duration: 1 });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {name}\r\n                    </_Cell>\r\n                );\r\n            }\r\n            rowJsxList.push(\r\n                <_TableRow key={i}>\r\n                    {cellJsxList}\r\n                </_TableRow>\r\n            );\r\n        }\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        symbol.structs.forEach((struct, i) => {\r\n            const interval = TheoryUtil.IntervalRelationProps[struct];\r\n            const chordIndex = (+ interval) % 12;\r\n            structJsxList.push(\r\n                <_StructItem key={i}>{struct} [{TheoryUtil.KEY12_SHARP_LIST[chordIndex]}]</_StructItem>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <_Wrap>\r\n                {/* コードの基本情報 */}\r\n                <_InfoDiv>\r\n                    <_InfoItem>\r\n                        <_Label>Chord</_Label>\r\n                        <_Value>{chordName}</_Value>\r\n                    </_InfoItem>\r\n                    <_InfoItem>\r\n                        <_Label>Type</_Label>\r\n                        <_Value>{symbol.attr}</_Value>\r\n                    </_InfoItem>\r\n                </_InfoDiv>\r\n                <_EditorDiv>\r\n                    {/* 構成音の情報 */}\r\n                    <_StructDiv>\r\n                        {structJsxList}\r\n                    </_StructDiv>\r\n                    {/* ボイシングのテーブル */}\r\n                    <_TableDiv>{rowJsxList}</_TableDiv>\r\n                </_EditorDiv>\r\n            </_Wrap>\r\n        );\r\n    }, [table, channelLimitNum]);\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _InfoItem = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #89dada; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 8px);\r\n    width: 80px;\r\n    background-color: #69bcdd;\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #026c86;\r\n    border: 1px solid #303030;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 6px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #cccccc; */\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst _EditorDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _StructDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _StructItem = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _TableDiv = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _TableRow = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Cell = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n    isOver: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #e5e747;\r\n    `}\r\n    ${props => !props.isOver ? '' : css`\r\n        background-color: #c40000;\r\n        color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #b9bb3f;\r\n        `}\r\n        ${props => !props.isOver ? '' : css`\r\n            background-color: #bb3f3f;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\n/**\r\n * バッキングエディタ画面の関数コンポーネント\r\n * @returns \r\n */\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    useEffect(()=> {\r\n        console.log('backing start');\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_PrevireBrind isUse={state.isPreview} />\r\n            {/* ボイシングエディタ部分 */}\r\n            <VoicingChooser />\r\n            {/* パターンエディタ部分 */}\r\n            <PatternFrame />\r\n            {/* フッター部分 */}\r\n            <_FooterDiv>\r\n                {/* プロビュー再生 */}\r\n                <_Button isEnable={!state.hasError} onClick={() => {\r\n\r\n                    if (!state.isPreview) {\r\n                        dispatcher.backing.testBacking();\r\n                    } else {\r\n                        BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                    }\r\n                }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\r\n                {/* 編集を取り消しして閉じる */}\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Cancel</_Button>\r\n                {/* 編集を反映して閉じる */}\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.mappingEditorToScore();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/score/scoreData\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const cur = chordList[focusIndex];\r\n    const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={isBackingEnable}\r\n                onClick={() => {\r\n                    if (state.hideMenu === 'none') {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    } else if (state.hideMenu === 'backing') {\r\n                        dispatcher.backing.closeBackingEditor();\r\n                    }\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 7;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 8;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmClipboard = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    return (\r\n        <_Wrap>\r\n            <_Label>clipboard</_Label>\r\n            <_TypeDiv>\r\n                <_ModeItem isActive={state.cloneBacking != null}>Backing</_ModeItem>\r\n                <_ModeItem isActive={state.copiedElementList != null}>Elements</_ModeItem>\r\n            </_TypeDiv>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default HarmClipboard;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _TypeDiv = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #a8dbb3;\r\n    `}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #8f8f8f;\r\n    border-radius: 2px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst MEMORI_WIDTH = 12;\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        list.push(<_Margin key={list.length} />);\r\n        state.measureCacheList.forEach((cache) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {cache.barCount !== -1 ? <_Bar>{cache.barCount}</_Bar> : ''}\r\n                    {/* {<_Bar>{i}</_Bar>} */}\r\n                </_Memori>\r\n            );\r\n        });\r\n        list.push(<_Margin key={list.length} />);\r\n        return list;\r\n    }, [state.beatCacheList]);\r\n\r\n    const [beatJsxList, minuteJsxList] = useMemo(() => {\r\n        const beatJsxList: JSX.Element[] = [];\r\n        const minuteJsxList: JSX.Element[] = [];\r\n\r\n        const isChordFocus = dataList[focusIndex].type === 'chord';\r\n        const curChordIndex = cacheList[focusIndex].chordIndex;\r\n        // list.push(<_Start key={list.length}/>);\r\n        dataList.forEach((data, i) => {\r\n\r\n            const cache = state.elementCacheList[i];\r\n            if (data.type === 'chord' && Math.abs(cache.chordIndex - curChordIndex) <= 5) {\r\n\r\n                const detail = data.detail as DetailChord;\r\n                const sustain = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                let label = '';\r\n                let type: ItemType = 'ather';\r\n                if (!isChordFocus) {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                } else {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'cur';\r\n                        type = 'cur';\r\n                    } else if (cache.chordIndex === curChordIndex - 1) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                }\r\n\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatMemori = detail.beatLen * beatProps.beatMemoriCount;\r\n                const posMemori = 16 + cache.curTotalMemori;\r\n                beatJsxList.push(\r\n                    <_SustainItem key={beatJsxList.length}\r\n                        type={type}\r\n                        pos={posMemori} sustain={beatMemori + minute}\r\n                    >{label}</_SustainItem>\r\n                );\r\n                minuteJsxList.push(\r\n                    <_BeatItem key={beatJsxList.length}\r\n                        isActive={type === 'cur'}\r\n                        pos={posMemori + detail.minute.head} sustain={beatMemori}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        // list.push(<_Start key={list.length}/>);\r\n        return [beatJsxList, minuteJsxList];\r\n    }, [dataList, dataList.length, focusIndex]);\r\n\r\n    const scrollPos = cacheList[focusIndex].curTotalMemori * MEMORI_WIDTH;\r\n    return (\r\n        <_Wrap>\r\n            <_ScrollFrame pos={scrollPos}>\r\n                <_Blocks>\r\n                    <_Beat>\r\n                        {beatJsxList}\r\n                    </_Beat>\r\n                    <_Minute>\r\n                        {minuteJsxList}\r\n                    </_Minute>\r\n                </_Blocks>\r\n                <_Measure>\r\n                    {memoriJsxList}\r\n                </_Measure>\r\n            </_ScrollFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _ScrollFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => -props.pos}px;\r\n    position: absolute;\r\n    height: 100%;\r\n    /* width: 100px;\r\n    background-color: #000; */\r\n    transition: left 0.5s;\r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n`;\r\n\r\ntype ItemType = 'cur' | 'prev' | 'next' | 'ather';\r\nconst _SustainItem = styled.div<{\r\n    pos: number;\r\n    sustain: number;\r\n    type: ItemType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(136, 163, 133);\r\n    ${props => {\r\n        switch (props.type) {\r\n            case 'cur': return css`\r\n                background-color: rgb(218, 107, 134);\r\n                /* color: #ffe551; */\r\n            `;\r\n            case 'prev': return css`\r\n                background-color: rgb(163, 177, 221);\r\n            `;\r\n            case 'next': return css`\r\n                background-color: rgb(163, 221, 171);\r\n            `;\r\n            case 'ather': return css`\r\n                background-color: rgb(192, 192, 192);\r\n            `;\r\n        }\r\n    }}\r\n    border-left: solid 1px #000;\r\n    border-top: solid 1px #000;\r\n    border-bottom: solid 1px #000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _BeatItem = styled.div<{\r\n    isActive: boolean;\r\n    pos: number;\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(224, 224, 224);\r\n    border-left: solid 1px #000;\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: rgb(233, 180, 228); */\r\n        /* color: #ffe551; */\r\n    `}\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Margin = styled.div`\r\n    display: inline-block;\r\n    width: ${MEMORI_WIDTH * 16}px;\r\n    height: 100%;\r\n    background-color: #d9ebe7;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${MEMORI_WIDTH}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection } from \"../../../../redux/store/score/scoreData\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport NoteSideForm from \"./side/noteSideForm\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport HarmClipboard from \"./initial/harmClipboard\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\n\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const state = store.scoreState;\r\n    const init = (store.scoreData.chordList[0].detail as DetailInit);\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, harmonize: () => {\r\n                dispatcher.system.setInvalidate({\r\n                    ...store.invalidate, harmoniizeInvalidate: {}\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    // useEffect(() => {\r\n    //     HarmonizeUtil.updateHarmonizeCache(store, dispatcher)\r\n    // }, [chordList, chordList.length, init.bpm]);\r\n\r\n    const harmMeasure = state.elementCacheList.length === 0 ? <></> : <HarmMeasure />;\r\n    const chordInfo = state.elementCacheList.length === 0 ? <></> : <ChordInfo />;\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Left>\r\n                <_Head isEnable={!state.isPreview}>\r\n                    <InitialBeatTip />\r\n                    <HarmClipboard />\r\n                </_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP>{harmMeasure}</_TIMELINE_WRAP>\r\n                    <_INFO_WRAP>{chordInfo}</_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right isEnable={!state.isPreview}>\r\n                <NoteSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Head = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    position: absolute;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    /* background-color: #ddc2c2; */\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    state.distIndex = state.focusIndex;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 46px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #97cce0dd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #929292;\r\n    /* border-radius: 20px 20px 20px 20px; */\r\n    border-radius: 2px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 25px;\r\n        font-size: 18px;\r\n        /* font-weight: 600; */\r\n        color: #4d4d4d;\r\n        /* background-color: #0000003a; */\r\n        line-height: 22px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 21px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #adadad39; */\r\n        line-height: 20px;\r\n    }\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyTimelineMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            mouse.lock = x;\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        // if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            if (mouse.pos !== x) {\r\n                // console.log(`★ move=== x: ${x}, pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n                mouse.pos = x;\r\n                update();\r\n            }\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            // update();\r\n\r\n            const lock = mouse.lock + refs.measure.scrollLeft;\r\n            const pos = mouse.pos + refs.measure.scrollLeft;\r\n            const notesList = store.scoreData.notesList;\r\n            let start = -1;\r\n            let end = -1;\r\n            for (let i = 0; i < notesList.length; i++) {\r\n                const notes = notesList[i];\r\n                const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                const [head, tail] = lock < pos ? [lock, pos] : [pos, lock];\r\n                if (head <= left && tail >= right) {\r\n                    if (start === -1) start = i;\r\n                } else {\r\n                    if (start !== -1) {\r\n                        end = i - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            if (start !== -1 && end === -1) {\r\n                end = notesList.length - 1;\r\n            }\r\n            state.focusIndex = start;\r\n            state.destIndex = end;\r\n            mouse.lock = -1;\r\n            // console.log(`★ up=== focus: ${state.focusIndex}, dist: ${state.distIndex}`);\r\n            dispatcher.melody.setState(state);\r\n            // const [head, tail] = mouse.lock < x ? [mouse.lock, x] : [x, mouse.lock];\r\n            // const width = tail - head;\r\n            // if (width > 5) {\r\n            //     mouse.width = width;\r\n            //     mouse.lock = -1;\r\n            //     mouse.pos = head;\r\n            //     update();\r\n            //     console.log(`★ up=== pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n            // }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyTimelineMouseOperation;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport MelodyUtil, { getNormalizeLenFromNotes } from \"../../../../utils/melodyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimelineMouseOperation from \"./util/melodyTimelineMouseOperation\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n    update: () => void;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n    const update = props.update;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        state.measureCacheList.forEach((cache) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    beatWidth={beatWidth}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {cache.barCount !== -1 ? <_Bar>{cache.barCount}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        });\r\n        return list;\r\n    }, [state.beatCacheList, barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        if(state.elementCacheList.length === 0) {\r\n            return jsxList;\r\n        }\r\n        let left = 0;\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                // console.log(state.elementCacheList.length);\r\n                const detail = element.detail as DetailChord;\r\n                const cache = state.elementCacheList[i];\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minuteLen = minute * 0.25;\r\n                const adjustRate = beatProps.beatMemoriCount / 4;\r\n                const width = beatWidth * (detail.beatLen * adjustRate + minuteLen);\r\n\r\n                if (chordRef.current != null) {\r\n                    const scroll = chordRef.current.scrollLeft;\r\n                    if (left + width - scroll >= 0 ||\r\n                        left - scroll <= chordRef.current.clientWidth) {\r\n                        const symbolNmae = TheoryUtil.getSymbolFromKey(detail.symbolKey)?.name;\r\n                        const degreeName = detail.root == null ? '-' :\r\n                        TheoryUtil.getDegreeRoot(detail.root) + symbolNmae;\r\n                        const chordName = detail.root == null ? '-' :\r\n                        TheoryUtil.getChordRoot(detail.root, init.keyIndex) + symbolNmae;\r\n                        jsxList.push(\r\n                            <_ChordItem key={jsxList.length}\r\n                                left={left}\r\n                                width={width}\r\n                                isActive={element == curChord}\r\n                                onClick={() => {\r\n                                    state.isTune = false;\r\n                                    state.focusIndex = i;\r\n                                    dispatcher.score.setScoreState(state);\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                                }}\r\n                            >\r\n                                <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                            </_ChordItem>\r\n                        );\r\n                    }\r\n                }\r\n                left += width;\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_MeasureWrap ref={measureRef}>\r\n            <_MeasureInner\r\n                onMouseDown={e => MelodyTimelineMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseMove={e => MelodyTimelineMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseUp={e => MelodyTimelineMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseLeave={() => {\r\n                    const mouse = store.melodyState.timelineMouse;\r\n                    mouse.pos = -1;\r\n                    mouse.lock = -1;\r\n                    update();\r\n                }}\r\n            >\r\n                {measureJsxList}\r\n                <_MousePos\r\n                    left={mouseMeasurePos * beatWidth * rate}\r\n                    width={beatWidth * rate}\r\n                />\r\n            </_MeasureInner>\r\n        </_MeasureWrap>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _MeasureWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _MeasureInner = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* width: 100%; */\r\n    left: 0;\r\n    top: 0;\r\n    width: 10000px;\r\n    height: 100%;\r\n    &:hover {\r\n        background-color: #ff00b347;\r\n    }\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.left}px;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    pointer-events: none;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.beatWidth / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + TheoryUtil.IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #8f8f8f;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #adadad;\r\n    ${props => !props.isStruct ? '' : css`background-color: #ce6565;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #3b3b3b;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/score/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                state.isPreview = true;\r\n                dispatcher.melody.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.melody.setInstrument(soundFontPlayer);\r\n                    }).then(() => {\r\n                        state.isPreview = false;\r\n                        dispatcher.melody.setState(state);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #cacacada;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f7f7f7da;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e4e4e4da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #f7f7f7da;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={state.quantize === 4} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                {/* <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} /> */}\r\n                {/* <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} /> */}\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 9 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.destIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    const newLen = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.len) !== getNormalizeLenFromNotes(newLen)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.len = newLen;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    const newPos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.pos) !== getNormalizeLenFromNotes(newPos)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.pos = newPos;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.tableMouse;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                //履歴を作成\r\n                state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.melody.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.melody.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/score/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport MelodyUtil, {  } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n\r\n        // 選択しているノーツが1つである場合\r\n        const isSingle = state.focusIndex === state.destIndex;\r\n        const mouse = state.tableMouse;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.melody.copyNotes(); break;\r\n                    case 'v': dispatcher.melody.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.melody.allSelect();\r\n                    }\r\n                        break;\r\n                    case 's': dispatcher.score.saveFile(); break;\r\n                    case 'z': dispatcher.melody.undo(); break;\r\n                    case 'y': dispatcher.melody.redo(); break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.melody.incrementCurPitch(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.melody.incrementCurPitch(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveDestFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveDestFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.melody.incrementCurPitch(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.melody.incrementCurPitch(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(false);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(true);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.melody.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.melody.adjustScrollX(); break;\r\n                case 'e': dispatcher.melody.adjustScrollY(); break;\r\n                case 'z': {\r\n                   MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.melody.firstNotes();\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.melody.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.melody.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.melody.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.destIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/score/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport CacheUtil from \"../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const scoreState = store.scoreState;\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n    const [invalidate2, setInvalidate2] = useState<{}>({});\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.tableMouse;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n\r\n    const barCount = 150;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n    const rate = 1 / store.melodyState.quantize;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, melody: update\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    /**\r\n     * 画面上部のメモリJSXリスト\r\n     * 拍子のキャッシュから作成する\r\n     */\r\n    const measureJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        scoreState.measureCacheList.forEach((cache, i) => {\r\n\r\n            list.push(\r\n                <_Scale key={i} isHead={cache.rate === 4} beatWidth={state.beatWidth} />\r\n            );\r\n        });\r\n        return list;\r\n    }, [scoreState.beatCacheList, barCount]);\r\n\r\n    // const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    /**\r\n     * スケール区間のJSXリスト\r\n     * 背景色のラインを表現\r\n     * 転調でキーが変わる度に追加される\r\n     */\r\n    const scaleDivJsxList = useMemo(() => {\r\n        const divList: JSX.Element[] = [];\r\n        // console.log('**' + scoreState.scaleCacheList.length);\r\n        scoreState.scaleCacheList.forEach((scaleInfo, i) => {\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INDEX : TheoryUtil.MINOR_SCALE_INDEX;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const scaleJsxList: JSX.Element[] = [];\r\n            for (let j = 0; j < PITCH_MAX; j++) {\r\n                const keyIndex = getKeyIndexFromPitcher(j);\r\n                scaleJsxList.push(\r\n                    <_ScaleLine key={j}\r\n                        isScale={scaleIndexies.includes(keyIndex)}\r\n                        isBase={keyIndex === scaleIndexies[0]}\r\n                    />\r\n                );\r\n            }\r\n\r\n            divList.push(\r\n                <_ScaleList key={i} width={state.beatWidth / 4 * scaleInfo.memoriCnt} isEven={i % 2 === 0}>\r\n                    {scaleJsxList}\r\n                </_ScaleList>\r\n            );\r\n        });\r\n        return divList;\r\n    }, [scoreState.scaleCacheList]);\r\n\r\n    /**\r\n     * 配置するノーツのJSXリスト\r\n     */\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        // let count = 0;\r\n        if (scoreState.scaleCacheList.length === 0) return list;//\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            const normalLeft = getNormalizeLenFromNotes(notes.pos);\r\n            const normalWidth = getNormalizeLenFromNotes(notes.len);\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const notesLeft = normalLeft * state.beatWidth;\r\n                const notesRight = notesLeft + normalWidth * state.beatWidth;\r\n                if (\r\n                    // !state.isPreview &&\r\n                    (notesRight - scroll < 0 || notesLeft - scroll > tableRef.current.clientWidth)\r\n                ) {\r\n                    continue;\r\n                }\r\n            }\r\n            const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n            // count++;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INDEX : TheoryUtil.MINOR_SCALE_INDEX;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n\r\n            // クオンタイズ\r\n            const unitPos = getMinimumLenUnit(notes.pos);\r\n            const unitLen = getMinimumLenUnit(notes.len);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={normalLeft * state.beatWidth}\r\n                    width={normalWidth * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.melody.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\r\n                        isScale={isScale}\r\n                        isActive={isActive}\r\n                        isPreview={state.isPreview}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // console.log('cnt: ' + count);\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.destIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move]);\r\n\r\n    /**\r\n     * タイムラインを横にスクロールした際の処理\r\n     */\r\n    const sideScrollAction = () => {\r\n        const refs = store.refs.melody;\r\n\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const scrollLeft = refs.table.scrollLeft;\r\n            const scrollTop = refs.table.scrollTop;\r\n            refs.measure.scrollTo({ left: scrollLeft });\r\n            refs.chord.scrollTo({ left: scrollLeft });\r\n            refs.pitch.scrollTo({ top: scrollTop });\r\n        }\r\n        update();\r\n    };\r\n\r\n    /**\r\n     * マウスポインタがエリア外に出た際の処理\r\n     */\r\n    const mouseLeaveAction = () => {\r\n        console.log('leave!');\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n        update();\r\n    };\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header isEnable={!state.isPreview}>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                {(() => {\r\n                    const mouse = state.timelineMouse;\r\n                    if (mouse.lock === -1) {\r\n                        return mouse.pos === -1 ? <></> :\r\n                            <_MouseLinePos left={mouse.pos} />\r\n                    } else {\r\n                        const [head, tail] = mouse.lock < mouse.pos ? [mouse.lock, mouse.pos] : [mouse.pos, mouse.lock];\r\n                        const width = tail - head;\r\n                        return <_MouseRange left={head} width={width} />\r\n                    }\r\n                })()}\r\n                {\r\n\r\n                }\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                        update={() => setInvalidate2({})}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef} onScroll={sideScrollAction} >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleDivJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseLeave={mouseLeaveAction}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _MouseLine = css`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    width: 3px;\r\n`;\r\nconst _MouseLinePos = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #15ff00;\r\n`;\r\nconst _MouseLineLock = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #fbff00;\r\n`;\r\n\r\nconst _MouseRange = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    width: ${props => props.width}px;\r\n    background-color: #ffffff8b;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #464545;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n    /* background-color: #70ff7058; */\r\n`;\r\n\r\nconst _ScaleList = styled.div<{\r\n    width: number;\r\n    isEven: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    /* pointer-events: none; */\r\n    background-color: #70ff7021;\r\n    ${props => !props.isEven ? '' : css`\r\n        background-color: #708aff20;\r\n    `}\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #2727275a;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #00a6cf52;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `}\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `}\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb0040;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isPreview: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    opacity: 0.5;\r\n    ${props => props.isPreview && !props.isActive ? '' : css`    \r\n       opacity: 1;\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    ${props => !(props.isPreview && props.isActive) ? '' : css`\r\n        box-shadow: 0 0 32px 0 #ffffff92;\r\n    `}\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #7a270028;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport MelodyUtil, {  } from \"../../../utils/melodyUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    useEffect(() => {\r\n        const info = melody.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.melody.setInstrument(soundFontPlayer);\r\n            });\r\n\r\n        // acoustic_guitar_steel\r\n        //bright_acoustic_piano\r\n        Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\r\n            { gain: 2, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.score.setPiano(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    const switchMode = () => {\r\n        state.isTune = !state.isTune;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isTune ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isTune ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isTune ? () => {\r\n\r\n        if (!state.isPreview) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        } else {\r\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    } : () => {\r\n\r\n        if (!melody.isPreview) {\r\n            dispatcher.melody.previewStart();\r\n        } else {\r\n           MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    }\r\n    const toggleEnsamble = !state.isTune ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.melody.setState(melody);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode isEnable={!isPreview}>\r\n                    <_ModeItem isActive={!state.isTune} onClick={() => {\r\n                        if (state.isTune) switchMode();\r\n                    }}>Harmony</_ModeItem>\r\n                    <_ModeItem isActive={state.isTune} onClick={() => {\r\n                        if (!state.isTune) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch onClick={preview}><_SwitchInner isActive={isPreview}>Play</_SwitchInner> / <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner></_Switch>\r\n                    <_Switch onClick={toggleEnsamble}><_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner> / <_SwitchInner isActive={isSolo}>Solo</_SwitchInner></_Switch>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    if (!isPreview) {\r\n                        switch (e.key) {\r\n                            case 'r': switchMode(); break;\r\n                        }\r\n                    }\r\n                }}>\r\n                <_SECTIONS><HarmSections /></_SECTIONS>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isTune} />\r\n                    <MelodyFrame isActive={state.isTune} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div<{\r\n    isEnable: boolean\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #e1e4ca;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #eff3cf\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, DetailInit } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport { getKeyIndexFromPitcher, getNormalizeLenFromNotes } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const data = store.scoreData;\r\n        const reserveTasks: NodeJS.Timeout[] = [];\r\n        const instrument = store.instruments.soundfontPlayer;\r\n        const init = data.chordList[0].detail as DetailInit;\r\n        const bpm = init.bpm;\r\n        state.lastFocus = state.focusIndex;\r\n        state.isPreview = true;\r\n        \r\n        let firstTime = -1;\r\n        for (let i = state.focusIndex; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pitch = notes.pitchIndex;\r\n            const time = 60 / bpm * pos;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                firstTime = time;\r\n            }\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    state.focusIndex = i;\r\n                    state.destIndex = state.focusIndex;\r\n                    \r\n                    if (instrument != null) {\r\n                        const keyIndex = getKeyIndexFromPitcher(pitch);\r\n                        const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n                        const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: 60 / bpm * len });\r\n                    }\r\n                }, (time - firstTime) * 1000)\r\n            );\r\n\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (time - firstTime + 60 / bpm * len) * 1000)\r\n                );\r\n            }\r\n        }\r\n\r\n        // ハーモニーを再生\r\n        if (!state.isSolo) {\r\n            previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n\r\n        dispatcher.system.setReserveTasks(reserveTasks);\r\n        dispatcher.melody.setState(state);\r\n    }\r\n\r\n\r\n    const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        const update = store.invalidate.melody as () => void;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        // const reserveTasks = store.reserveTasks;\r\n        const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = 3; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                if (cache.pastSecond < start) continue;\r\n\r\n                const detail = element.detail as DetailChord;\r\n\r\n                if (detail.root == null) return;\r\n\r\n                const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n                const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n                const chordTime = 60 / init.bpm * len;\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n                        store.melodyState.tableMouse.curChord = element;\r\n                        update();\r\n                    }, cache.pastSecond - start - adjsut)\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default PreviewUtil;","import { useContext, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, ScoreData } from \"../../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport PreviewUtil from \"../../../utils/PreviewUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\n\r\n\r\nconst HEADER_WIDTH = 100;\r\nconst FOOTER_WIDTH = 50;\r\n\r\nconst BEAT_RATE = 50;\r\nconst PIT_HEIGTH = 10;\r\nconst START_LINE = 200;\r\nconst RATE_WIDTH = 500;\r\n\r\nconst PreviewTab = (props: {\r\n    data: ScoreData;\r\n}) => {\r\n\r\n    const chordList = props.data.chordList;\r\n    const notesList = props.data.notesList;\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const areaRef = useRef<null | HTMLDivElement>(null);\r\n    const rateRef = useRef<null | HTMLDivElement>(null);\r\n    const [past, setPast] = useState(0);\r\n    const [timerId, setTimerId] = useState<null | NodeJS.Timeout>(null);\r\n\r\n\r\n    const isPlay = timerId != null;\r\n\r\n    const [jsxList, totalLen, bpm, areaWidth] = useMemo(() => {\r\n\r\n        const jsxList: JSX.Element[] = [];\r\n        const add = (pos: number, len: number, pit: number, isRight: boolean) => {\r\n            const isActive = past >= pos && past <= pos + len;\r\n            jsxList.push(<_Notes key={jsxList.length}\r\n                pos={pos}\r\n                sus={len}\r\n                pit={pit}\r\n                isRight={isRight}\r\n                isActive={isActive}\r\n            />);\r\n        }\r\n        const init = chordList[0].detail as DetailInit;\r\n        let curPos = 0;\r\n        for (let i = 0; i < chordList.length; i++) {\r\n            const chord = chordList[i];\r\n            switch (chord.type) {\r\n                case 'chord': {\r\n                    const detail = chord.detail as DetailChord;\r\n                    const backing = detail.backing;\r\n                    if (detail.root != null) {\r\n                        const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n                        const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n                        const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n                        const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n                        if (backing.pattern == null) {\r\n                            pitchList.forEach((index) => {\r\n                                // const soundName = KEY12_SHARP_LIST[index % 12];\r\n                                // const octave = Math.floor(index / 12);\r\n                                const pit = 87 - index;\r\n                                add(curPos, len, pit, false);\r\n                            });\r\n                        } else {\r\n                            const pattern = backing.pattern;\r\n                            pattern.layers.forEach((layer, layerIndex) => {\r\n                                const startList: number[] = [];\r\n                                const normalList: number[] = [];\r\n                                let total = 0;\r\n                                layer.divs.forEach(div => {\r\n                                    startList.push(total);\r\n                                    let normal = 4 / div.rate;\r\n                                    if (div.isDot) normal *= 1.5;\r\n                                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                                    normalList.push(normal);\r\n                                    total += normal;\r\n                                });\r\n                                layer.notesList.forEach((notes) => {\r\n\r\n                                    const timingAdj = notes.status.timing * (1 / 32);\r\n                                    const start = curPos + startList[notes.x] + timingAdj;\r\n                                    const sustain = normalList[notes.x];\r\n\r\n                                    const index = pitchList[notes.y];\r\n\r\n                                    const pit = 87 - index;\r\n\r\n                                    // if (!isPlay || (start <= past + 15 && start + sustain > past)) {\r\n                                    add(start, sustain, pit, layerIndex === 1);\r\n                                    // }\r\n                                    // const soundName = KEY12_SHARP_LIST[index % 12];\r\n                                    // const octave = Math.floor(index / 12);\r\n                                    // const soundFullName = soundName + octave;\r\n\r\n                                });\r\n                            });\r\n                        }\r\n                        curPos += len;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n        const areaWidth = areaRef.current == null ? 0 : areaRef.current.clientWidth;\r\n        return [jsxList, curPos, init.bpm, areaWidth];\r\n        }, [props.data, past, isPlay]);\r\n    // }, [props.data]);\r\n\r\n    // const recordJsxList = useMemo(() => {\r\n    //     return jsxList;\r\n    // }, []);\r\n    const recordJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < 88; i++) {\r\n        recordJsxList.push(\r\n            <_Record key={i} pit={i} isScale={i % 2 == 0}></_Record>\r\n        );\r\n    }\r\n\r\n\r\n    const setRate = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        if (rateRef.current == null || timerId != null) return;\r\n        const rect = rateRef.current.getBoundingClientRect();\r\n        const x = e.clientX - rect.left;\r\n        console.log(x);\r\n        setPast(totalLen * x / RATE_WIDTH);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header onClick={() => {\r\n                if (timerId == null) {\r\n                    const start = new Date().getTime();\r\n                    const id = setInterval(() => {\r\n                        const time = new Date().getTime() - start;\r\n                        setPast(past + time * bpm / 60000);\r\n                        // console.log(past);\r\n                    }, 150);\r\n                    setTimerId(id);\r\n                    PreviewUtil.previewStart(store, dispatcher);\r\n                } else {\r\n                    clearTimeout(timerId);\r\n                    setTimerId(null);\r\n                }\r\n            }}></_Header>\r\n            <_Main>\r\n                <_MainFixed>\r\n                    <_RateFrame pos={areaWidth / 2 - RATE_WIDTH / 2} ref={rateRef}\r\n                        onClick={setRate}>\r\n                        <_RateValue value={totalLen === 0 ? 0 : RATE_WIDTH * (past / totalLen)} />\r\n                    </_RateFrame>\r\n                </_MainFixed>\r\n                <_MainScroll ref={areaRef}>\r\n                    <_HarmonyBox pos={past} width={totalLen} isPlay={isPlay}>\r\n                        {recordJsxList}\r\n                        {jsxList}\r\n                    </_HarmonyBox>\r\n                    <_Line pos={START_LINE} />\r\n                </_MainScroll>\r\n            </_Main>\r\n            <_Footer></_Footer>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PreviewTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #2d3246;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #95a5ca;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH + FOOTER_WIDTH}px);\r\n    /* background-color: #2d3246; */\r\n    text-align: left;\r\n`;\r\nconst _MainScroll = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _HarmonyBox = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n    isPlay: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: ${props => START_LINE - props.pos * BEAT_RATE}px;\r\n    width: ${props => props.width * BEAT_RATE}px;\r\n    height: ${PIT_HEIGTH * 88}px;\r\n    background-color: #ffffffb5;\r\n    ${props => props.isPlay ? '' : css`\r\n        transition: left 0.5s;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isScale: boolean;\r\n    pit: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => props.pit * PIT_HEIGTH}px;\r\n    // position: absolute;\r\n    width: 100%;\r\n    height: ${PIT_HEIGTH}px;\r\n    // background-color: ${props => props.isScale ? '#fffffff9f' : '#00ff4cf8f'};\r\n    /* background-color: #0026fc11; */\r\n    ${props => props.isScale ? '' : css`\r\n        background-color: #ffffff08;\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    pos: number;\r\n    sus: number;\r\n    pit: number;\r\n    isRight: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * BEAT_RATE}px;\r\n    top: ${props => props.pit * PIT_HEIGTH}px;\r\n    width: ${props => props.sus * BEAT_RATE}px;\r\n    height: ${PIT_HEIGTH}px;\r\n    background-color: ${props => !props.isRight ? '#ad0000e0' : '#002ca7df'};\r\n    opacity: 0.3;\r\n    ${props => !props.isActive ? '' : css<{\r\n    isRight: boolean;\r\n}>`\r\n        opacity: 1;\r\n        background-color: ${props => !props.isRight ? '#ff4242df' : '#4677ffdf'};\r\n        box-shadow: 0 0 14px 0 #ffffff46;\r\n    `}\r\n`;\r\n\r\nconst _Line = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos - 1}px;\r\n    height: ${PIT_HEIGTH * 88}px;\r\n    background-color: white;\r\n    width: 3px;\r\n`;\r\n\r\nconst _MainFixed = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    // background-color: #c4444453;\r\n`;\r\n\r\nconst _RateFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    z-index: 5;\r\n    // left: ${props => props.pos}px;\r\n    top: calc(100% - 40px);\r\n    width: ${RATE_WIDTH}px;\r\n    height: 25px;\r\n    background-color: #000000;\r\n    border: solid 1px #000;\r\n    box-sizing: border-box;\r\n    opacity: 0.9;\r\n    text-align: left;\r\n`;\r\nconst _RateValue = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: ${props => props.value}px;\r\n    height: 100%;\r\n    background-color: #afe7e9;\r\n`;\r\n\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${FOOTER_WIDTH}px;\r\n    background-color: #5a5e72;\r\n    text-align: left;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\nimport PreviewTab from \"./preview/previewTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    // { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    { name: 'Preview', disable: !isAccept, cont: store.scoreData.chordList.length === 0 ? <></> : <PreviewTab data={store.scoreData} /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? TheoryUtil.DEGREE12_FLAT_LIST : TheoryUtil.DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    // sampler.releaseAll();\r\n\r\n                    const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = TheoryUtil.IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        // sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                // sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, disable: true, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, disable: true, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, disable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, disable: true, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 15%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    background-color: #ffffff1f;\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length >= min && str.length <= max;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import { useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ValidateUtil from \"../../utils/validateUtil\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 400;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n    const [userId, setUserId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passConfirm, setPassConfirm] = useState('');\r\n    const [info, setInfo] = useState('');\r\n\r\n    const isButtonEnable = useMemo(() => {\r\n        return ValidateUtil.checkAll([\r\n            ValidateUtil.checkStringLength(userId, 4, 20),\r\n            ValidateUtil.checkStringLength(password, 4, 20),\r\n            ValidateUtil.checkStringLength(passConfirm, 4, 20),\r\n            \r\n        ]);\r\n    }, [isCreate, userId, password, passConfirm]);\r\n\r\n    /**\r\n     * 入力フォームのJSXを生成する\r\n     * @param title ラベル名\r\n     * @param value 値\r\n     * @param setter セッタの関数\r\n     * @returns JSX\r\n     */\r\n    const createFormJsx = (\r\n        title: string,\r\n        value: string,\r\n        setter: React.Dispatch<React.SetStateAction<string>>\r\n    ): JSX.Element => {\r\n        return (\r\n            <_Record>\r\n                <_Label>{title}</_Label>\r\n                <_TextField value={value} onChange={e => setter(e.target.value)} />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        if (isCreate) {\r\n\r\n            if (password != passConfirm) {\r\n                // setError(true);\r\n                // setMessage(`Confirmation passwords don't match.`);\r\n                // setLoading(false);\r\n                alert(`Confirmation passwords don't match.`);\r\n            } else {\r\n\r\n                (async () => {\r\n                    let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n                    let results = await response.json();\r\n                    console.log(JSON.stringify(results[0].cnt));\r\n                    const isExist = results[0].cnt > 0;\r\n                    if (isExist) {\r\n                        // setError(true);\r\n                        // setMessage('That user id has already been recorded.');\r\n                        alert('That user id has already been recorded.');\r\n                    } else {\r\n                        response = await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(id, pass) VALUES('${userId}', '${password}')`);\r\n                        results = await response.json();\r\n                        // setMessage('');\r\n                        alert('You have successfully created an account!');\r\n                        // setLoginType('login');\r\n                    }\r\n                    // setLoading(false);\r\n                })();\r\n            }\r\n\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {createFormJsx('user id', userId, setUserId)}\r\n            {createFormJsx('password', password, setPassword)}\r\n            {createFormJsx('password *', passConfirm, setPassConfirm)}\r\n            <_InfoDiv>{info}</_InfoDiv>\r\n            <_Footer>\r\n                <_ExecutableButton isEnable={true}>Clear</_ExecutableButton>\r\n                <_ExecutableButton isEnable={isButtonEnable} onClick={enterAction}>Enter</_ExecutableButton>\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #a9c5c7;\r\n    /* border: 1px solid #dadada; */\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #c73e3e75;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #d86262;\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    background-color: #91bdd6;\r\n    width: 100%;\r\n    height: 60px;\r\n    padding: 5px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: #222fa7;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport LoginFrame from \"../login/loginFrame\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton onClick={()=> {\r\n                    store.systemState.dialog = <LoginFrame />;\r\n                    dispatcher.system.setState(store.systemState);\r\n                }}>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useCallback, useEffect, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    const callback = useCallback(dispatcher.system.switchSplashToMain, []);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={callback} /\r\n                    >}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport SystemEntry from './system/contents/entry/systemEntry';\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    // 右クリック無効\r\n    document.oncontextmenu = function () { return false; }\r\n\r\n    // window.addEventListener(\"keydown\", function (e) {\r\n    //   // space and arrow keys\r\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n    //     e.preventDefault();\r\n    //   }\r\n    // }, false);\r\n\r\n    document.onkeydown = (e) => {\r\n      // if (!['F5'].includes(e.key)) {\r\n      //   return false;\r\n      // }\r\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n  }, []);\r\n  return (\r\n    <SystemEntry />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import zlib from \"zlib\";\r\nimport { ScoreState } from \"../redux/store/score/scoreState\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const API_DOMAIN = 'http://10.114.240.172:5000';\r\n    export const API_DOMAIN = 'http://localhost:5000';\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         // sampleテーブルから全カラムのデータをid順に取得\r\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\r\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\r\n\r\n    //         if (error) {\r\n    //             throw error;\r\n    //         }\r\n    //         if (data) {\r\n    //             console.log(data);\r\n    //         }\r\n    //     } catch (error: any) {\r\n    //         alert(error.message);\r\n    //     } finally {\r\n\r\n    //     }\r\n    // };\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(API_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    export const saveFile = (plainData: string, state: ScoreState) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.lcrs'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        const fileHandle = state.fileHandle;\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                state.fileHandle = fileHandle;\r\n                // this.score.setScoreState({ ...state });\r\n                const file = await fileHandle.getFile();\r\n                alert('saved successfully!');\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = handle;\r\n                    // this.score.setScoreState({ ...state });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataUtil;"],"sourceRoot":""}