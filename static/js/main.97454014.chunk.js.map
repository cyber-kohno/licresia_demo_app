{"version":3,"sources":["system/utils/dataUtil.tsx","system/redux/reducer.tsx","system/utils/theoryUtil.tsx","system/utils/backingUtil.tsx","system/utils/cacheUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/utils/instrumentsUtil.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/redux/store/state/dataHistory.tsx","system/contents/dialog/globalDialog.tsx","system/base/design/styles.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/dummyUtil.tsx","system/contents/score/manage/chordProg/progSearcher.tsx","system/contents/score/manage/chordProg/progStyle.tsx","system/contents/score/manage/chordProg/progUtil.tsx","system/contents/score/manage/chordProg/progCustomFrame.tsx","system/contents/score/manage/chordProg/progOutputFrame.tsx","system/contents/score/manage/chordProg/progTemplateFrame.tsx","system/contents/score/manage/chordProg/chordProgDialog.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/tool/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailAlter.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcAlter.tsx","system/contents/score/edit/harmonize/tool/chordEditor.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFromStyles.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/side/sideFormAlter.tsx","system/contents/score/edit/harmonize/side/minuteForm.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/harmSideForm.tsx","system/contents/score/edit/harmonize/info/structViewer.tsx","system/contents/backing/pattern/builder/patternDetail.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternPedal.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternVelocity.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternOptions.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/initial/harmClipboard.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/melody/util/melodyTimelineMouseOperation.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/utils/validateUtil.tsx","system/contents/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_DOMAIN","queryType","sql","fetch","mode","method","headers","Accept","body","JSON","stringify","createQueryRequestInit","val","content","encodeURIComponent","zlib","gzipSync","toString","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","plainData","state","fileHandle","a","createWritable","writable","text","DataUtil","gZip","write","close","getFile","alert","window","showSaveFilePicker","types","accept","then","handle","catch","console","log","ActionType","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","getBeatProps","keyIndex","scale","relation","beatSignature","beatMemoriCount","barBeatCnt","SYMBOL_LIST","beatLen","minute","bpm","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","root","index","isFlat","symbolKey","props","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","baseKeyIndex","TheoryUtil","KEY12_FLAT_LIST","KEY12_SHARP_LIST","ret","find","symbol","undefined","list","forEach","push","rootIndex","map","on","chordRootIndex","chordFullName","getRootName","chordOnIndex","onName","structList","struct","interval","soundIndex","adjustOctave","Math","floor","isFlatFromRelation","sameIndex","some","info","i","splice","unshift","sort","b","onIndex","sound","onChordIndex","tempList","length","divCount","Array","fill","table","channels","j","octave","structIndex","voicingList","editorPattern","channelSize","layers","layer","divs","noteDivList","signals","record","cell","x","y","status","notesList","vels","velocityList","slice","pedals","pedalActs","pedal","divIndex","voicingStructs","size","channel","reverse","scoreLayers","scoreLayer","notes","item","baseInfo","backing","pitchIndexList","chordTime","pattern","soundName","playHarmony","adjustRate","pedalRangeList","total","timeList","div","start","normal","rate","isDot","div3","sustain","divTime","pedalInfo","end","ignoreList","ig","timeInfo","timingAdj","timing","startTime","sustainTime","signal","inc","isNext","nextNotes","next","k","notesTail","velAdj","gain","setTimeout","dispatcher","harmony","stop","isPreview","id","clearInterval","setState","getLimitLen","chordInfo","memoriCount","init","head","tail","getUsingLenFromDivs","reduce","prev","cur","len","checkOverlapBackLayer","hasError","limitLen","totalLen","layerIndex","channelIndex","baseLayer","backLayer","getDivRange","left","right","isOverlap","backLeft","backRight","note","includes","BackingUtil","CacheUtil","chordList","detail","elementCacheList","sectionCacheList","beatCacheList","scaleCacheList","tempoCacheList","measureCacheList","totalMinute","sectionNo","sectionBeatSum","pastSecond","curSecond","chordIndex","curMemoriCount","totalBarCount","totalMemoriCount","beatRangeMemoriCount","totalBeat","totalMemoriBarCount","scaleMemoriCount","tempoMemoriCount","addTempoRange","beatRate","beatProps","memoriCnt","element","prevBeat","prevMemoriCount","prevBarCount","prevMinute","fixed","labelName","beatSum","rangeIndexStart","rangeIndexEnd","prevBar","calcSustainMsec","barMemoriCount","dispBarCount","barCount","getChordDetails","getSymbolFromKey","newFullName","newStructList","alterType","modRel","dommVal","keyAdj","tempoRel","tempoDiff","tempoRate","tempoAbs","bar","surplusBeat","curTotalMemori","reffers","score","setScoreState","notesCacheList","duration","pos","curMemori","range","posTime","pastLen","last","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","getSortetdNotesLen","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","instrument","soundfontPlayer","play","soundFullName","stopPreview","melody","adjustScrollX","previewHarmony","data","focusIndex","lastFocus","update","firstTime","getTimeInfoFromNotesPos","lenTime","pitch","pitchIndex","destIndex","isSolo","system","setReserveTasks","cacheList","cache","pitchList","getPitchListFromVoicing","playBacking","tableMouse","curChord","MelodyUtil","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","PATTERN_HEADER_HEIGHT","PATTERN_BODY_HEIGHT","NOTES_1BAR_WIDTH","Dispatcher","dispatch","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setInvalidate","saveFile","setPiano","setScoreTabIndex","scoreTabIndex","setKeySwitch","keySwitch","setScoreData","moveElement","sub","distIndex","moveDist","releaseRange","isTail","distHead","distTail","moveSection","curSectionIndex","curSectionInfo","curElementType","flashElement","incrementDegreeRoot","isUp","incrementBeatLen","updateHarmonizeCache","incrementMinuteVal","value","target","incrementMinuteValRelation","nearIndex","addChordElement","curBeatLen","addSectionElement","addAlterElement","removeCurElement","copyElementList","parse","copiedElementList","cloneBacking","pasteElementList","incrementSymbol","setDiatonicChord","chord","DIATONIC_MAJOR_SCALE_LIST","DIATONIC_MINOR_SCALE_LIST","setDefaultBacking","getDefaultBacking","pastBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setInstrument","incrementCurPitch","isUpper","filter","dataHistory","add","scaleIndexList","MAJOR_SCALE_INTERVALS","normalLeft","scaleInfo","getKeyScaleFromNotesPos","scaleIndexies","prevPitchIndex","tempPitchIndex","adjustScrollY","moveFocus","updateCurChord","moveDestFocus","beatWidth","searchedChord","width","addNotes","focus","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","posA","posB","undo","history","redo","openBackingEditor","chordBacking","hideMenu","voicingTable","getInitVoicingTable","patternProps","buildChannels","getChannels","convertEditorLayerFromScore","lenIndex","symbolAttr","closeBackingEditor","getInitialLayer","col","isExist","voicing","mappingEditorToScore","editor","getVoicingListFromTable","buildPatternProps","addPatternColumn","lenList","curLen","newLen","column","updateErrorState","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","isPermitDot","getNotes","setNotes","incrementVel","after","deleteColumn","switchLayer","switchMode","testBacking","checkError","this","initialStore","userEnv","keyConfig","up","down","addChord","addSection","addChange","deleteCur","distMode","edit1","edit2","incRoot","decRoot","incBeat","decBeat","colorProps","entryBackground","dialog","isMelody","initialBeat","sustainMode","chordMode","symbolMode","control","minHeadMode","minTailMode","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","timelineMouse","soundfontInfo","scaleMode","resize","move","shift","harmonize","measure","harmoniizeInvalidate","GloballDialog","useContext","GlobalContext","_Blind","onClick","styled","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isEnable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","_Label","ChannelContents","_Contents","CSS_BUTTON_DISABLE","TabbedPane","isDisable","disable","TabLabel","_TabLabel","TabContents","DummyUtil","condition","UNIT_LIST","beat","step","firstChord","secondChord","parseChord","source","args","split","baseBeat","Number","diatonicNo","charAt","option","beatChange","ProgSearcher","ProgStyle","CSS_LABEL_MIDIUM","select","STEP_LIST","getDefaultChord","label","blockList","elementList","block","ProgUtil","ProgCustomFrame","setStep","degreeFilters","setDegreeFilters","secCategory","setSecCategory","secNo","setSecNo","setFocusIndex","stepList","useMemo","getFilteredStepList","stepOptionJsxList","disp","degreeOptionJsxListArray","DEGREE_FILTER_LIST","unitList","search","jsx","dispUnitJsx","beatCycle","chordName","getDegreeRoot","divStr","_Span","isMatch","_ChordName","_ProgItem","progUnitList","progJsxList","SECTION_CATEGORY","SECTION_NO","secCatOptionJsxList","secNoOptionJsxList","degreeChangeAction","e","isEnableSectionForm","_Frame","_TitleLabel","_Combobox","onChange","stepChangeAction","_ListDiv","_ButtonDiv","_ExecutableButton","secNoStr","secName","insertProgUnit","_Record","RECORD_HEIGHT","span","ProgOutputFrame","blockJsxList","isFixed","inner","_FixedItem","_SectionItem","_ChordListDiv","_ChordItem","_ChordNameLabel","_ChordBeatDiv","jsxList","_BeatTip","getBeatTipsJsx","_Block","CSS_LABEL_SMALL","ProgTemplateFrame","templateJsxList","ChordProgDialog","buildMode","setBuildType","getBlankBlockList","outputUnits","setOutputUnits","beatFilter","setBeatFilter","closeAction","beatOptionJsxList","BEAT_DEF_LIST","chordDetail","createSwitchableButton","clickEvent","_SwitchableButton","beatComboboxEnable","distBeatFilter","_Header","getInitialBlockList","_MainDiv","_LeftDiv","_BeatFormDiv","beatChangeAction","_SwitchDiv","getSwitchContJsx","_RightDiv","_Footer","buildScoreData","HEADER_HEIGHT","BEAT_HEIGHT","ManageTab","file","setFile","tabIndex","modified","tempo","section","time","getStringFromDate","Date","lastModified","sectionNum","chordNum","fileInfo","scoreInfo","createLabelRecord","labelValue","_Recored","_ItemnLabel","_ItemnValue","searchLocalFileAction","showOpenFilePicker","fileContents","unZip","_Wrap","_ButtonsDiv","_Button","_Left","_ListInfoDiv","_Right","_DataInfoDiv","_ScoreInfoDiv","DATA_INFO_HEIGHT","SymbolEditor","curSymbol","baseSymbol","derives","getSymbolDerives","parentJsx","curJsx","childrenJsx","_Row","CalcChord","symbolName","chordRoot","chordOn","prevCache","isError","minuteStr","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","barRem","_Len","_Border","ElementDetailAlter","_Type","sign","getDetailInfo","ElementDetailChord","degreeRoot","degreeOn","isDiatonic","getDiatonicDegreeList","_Degree","isSwitch","isSustainMode","scaleRelation","isOnChordScale","_DegreeRoot","_Tip","lenType","valueType","abs","_TipItem","_Error","_Voicing","_Pattern","isCurrent","_DegreeSymbol","_DegreeOnChord","_Backing","ElementFixedBorder","isStart","ElementDetailInit","_Title","_Value","ElementDetailSection","CalcAlter","getType","prevKey","curKey","curCache","prevTempo","curTempo","curBeat","getDetail","ChordEditor","getChord","createRow","listJsx","rootName","ScoreElement","wrapRef","useRef","bodyRef","isFocus","isRange","isSameSection","wrap","current","elementJson","isInactive","ref","isSelectable","isAdditional","_Head","_CurKey","getDisplayKeyScaleName","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","HarmSections","sections","curSectionNo","_Total","HarmonizeUtil","previewMelody","clearTimeout","edit","common","patternNormalMode","patternDetailMode","test","isEdit","baseVel","tempTiming","tempVelAdj","vel","curNotes","BackingEditorInput","NoteKeyDown","config","isElement","previewCurHarmony","NoteBasicInput","main","NoteKeySwitch","isPress","min","max","_NumberForm","SideFormStyles","SideFormAlter","createAlertTypeItem","createModulateRelationItem","rel","createTempoRelationItem","createBeatItem","donmmItemJsxList","_ParamDiv","_ParamItem","keyAdjItemJsxList","_Group","_CategoryLabel","createNumberForm","currentTarget","valueAsNumber","___CSS_TITLE","___CSS_FORM","JUDGE_INFO_LIST","MinuteForm","rateMinus","ratePlus","isRed","JudgeJsxList","judge","_JudgeItem","setValue","createJudgeItem","isHead","_View","_ViewFrame","isLeft","_Judge","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","DEGREE_ALL","degree","isRootActive","isOnActive","MINOR_SCALE_INTERVALS","_RootItem","onContextMenu","symbolItemsJsx","_SymbolItem","createMinuteForm","_Timing","_BeatDiv","_Minute","_RootDiv","_SymbolDiv","SideFormInit","scaleItemJsxList","SCALE_DEF_LIST","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","splitList","_NumberItem","_DirectText","_SelectDiv","_TemplateFrame","_NumberFrame","input","_ItemBase","HarmSideForm","StructViewer","indexList","scaleList","structJsxList","curIndex","isScale","isUse","isBlack","_Struct","WIDTH","PatternDetail","_DelayDiv","_TimingValue","_VelocityDiv","_VelFrame","_VelItem","VEL_DIV_WIDTH","PatternLength","itemJsxList","PatternPedal","_Column","PatternTable","channelCount","curLayer","layerJsxList","jsxLsit","notesJsxLsit","setNotesStatus","viewSignal","prevCell","_Notes","isBack","_State","isEven","isFront","_Layer","zIndex","PatternVelocity","PatternBuilder","useTotalLen","isLenOverError","memoriWidth","memoriJsxList","bean","thickness","height","color","_Memori","_LengthDiv","_MeasureDiv","_MemoriList","_ChordLenLine","_OverCover","_Body","ChannelItem","soundfont","_Option","CHANNEL_MAX","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","structInfo","_LayerItem","_ModeItem","proops","PatternOptions","createItem","callback","createRateItem","String","setRate","sizeJsxList","_ListItem","isPermit3ren","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","tableRecord","curCell","setRowStaccato","isSet","editModeJsx","_WrapEdit","hasStaccato","isExistNext","isEnableTai","PatternFrame","isUsePattern","_UseSwitch","isUsePedal","_Main","_StatusDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","channelLimitNum","OCTAVE_NUM","STRUCT_NUM","rowJsxList","selectCount","cellJsxList","isSelected","key12List","getSoundFullName","_Cell","isOver","_TableRow","_StructItem","isOnChord","_InfoItem","_EditorDiv","_StructDiv","_TableDiv","_InfoDiv","TIP_WIDTH","BackingEditorFrame","_PrevireBrind","_FooterDiv","HarmHideFrame","isOpen","isBackingEnable","HarmClipboard","_TypeDiv","MEMORI_WIDTH","HarmMeasure","dataList","_Margin","_Bar","beatJsxList","minuteJsxList","isChordFocus","curChordIndex","beatMemori","posMemori","_SustainItem","scrollPos","_ScrollFrame","_Blocks","_Measure","HarmonizeTab","timelineJsx","structViewerJsx","onKeyDown","onKeyUp","_SECTIONS","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_RIGHT_WIDTH","HARMONIZE_HEAD_WIDTH","MelodyTimelineMouseOperation","mouseDownEvent","timelineLength","button","rect","getBoundingClientRect","clientX","mouseMoveEvent","mouse","mouseUpEvent","scrollLeft","MelodyTimeline","measureRef","chordRef","barLength","measureJsxList","chordJsxList","minuteLen","scroll","clientWidth","symbolNmae","degreeName","_DegreeName","_ChordWrap","_MeasureWrap","_MeasureInner","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_MousePos","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","Soundfont","AudioContext","release","soundFontPlayer","QuantizeSwitch","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","getNextLeft","clientY","scrollTop","curPos","posX","lenWidth","newPos","prevFocus","MelodyInput","keyDownEvent","isSingle","keySwitchEvent","MelodyFrame","tableRef","pitchRef","setInvalidate2","isTune","scaleDivJsxList","divList","scaleJsxList","_ScaleLine","isBase","_ScaleList","notesJsxList","normalWidth","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_MouseLinePos","_MouseRange","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","_Test","editAnimation","keyframes","_MouseLine","TUNE_TIMELINE_WIDTH","_Scale","EditTab","preview","toggleEnsamble","_Mode","_Buttons","_Switch","_SwitchInner","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","items","degreeRootName","chordRootName","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","remove","_NowLoading","_Copylight","fadeIn","ValidateUtil","str","conditions","LoginFrame","isCreate","setCreate","userId","setUserId","password","setPassword","passConfirm","setPassConfirm","isButtonEnable","checkAll","checkStringLength","createFormJsx","title","setter","_TextField","_TypeSwitch","sendQueryRequestToAPI","response","json","results","cnt","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","useCallback","Provider","App","document","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.97454014.chunk.js","sourcesContent":["import zlib from \"zlib\";\r\nimport { ScoreState } from \"../redux/store/score/scoreState\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const API_DOMAIN = 'http://10.114.240.172:5000';\r\n    export const API_DOMAIN = 'http://localhost:5000';\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         // sampleテーブルから全カラムのデータをid順に取得\r\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\r\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\r\n\r\n    //         if (error) {\r\n    //             throw error;\r\n    //         }\r\n    //         if (data) {\r\n    //             console.log(data);\r\n    //         }\r\n    //     } catch (error: any) {\r\n    //         alert(error.message);\r\n    //     } finally {\r\n\r\n    //     }\r\n    // };\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(API_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    export const saveFile = (plainData: string, state: ScoreState) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.lcrs'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        const fileHandle = state.fileHandle;\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                state.fileHandle = fileHandle;\r\n                // this.score.setScoreState({ ...state });\r\n                const file = await fileHandle.getFile();\r\n                alert('saved successfully!');\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = handle;\r\n                    // this.score.setScoreState({ ...state });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataUtil;","import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n    SET_INVALIDATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n        case ActionType.SET_INVALIDATE:\r\n            store.invalidate = payload.invalidate;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature, Scale } from \"../redux/store/score/scoreData\";\r\n\r\nnamespace TheoryUtil {\r\n\r\n    export const MAJOR_SCALE_INTERVALS = [0, 2, 4, 5, 7, 9, 11];\r\n    export const MINOR_SCALE_INTERVALS = [0, 2, 3, 5, 7, 8, 10];\r\n\r\n    export const KEY12_FLAT_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n    export const KEY12_SHARP_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n    ];\r\n\r\n    export const DEGREE12_FLAT_LIST = [\r\n        'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n    ];\r\n    // export const DEGREE12_FLAT_LIST = [\r\n    //     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n    // ];\r\n    export const DEGREE12_SHARP_LIST = [\r\n        'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n    ];\r\n\r\n    export const KEY12_MAJOR_SCALE_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const KEY12_MINOR_SCALE_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const getDisplayKeyScaleName = (keyIndex: number, scale: Scale) => {\r\n        return scale === 'major' ? KEY12_MAJOR_SCALE_LIST[keyIndex] :\r\n            KEY12_MINOR_SCALE_LIST[keyIndex] + 'm';\r\n    }\r\n\r\n    export const SCALE_DEF_LIST = ['major', 'minor'] as const;\r\n    export const BEAT_DEF_LIST = ['2/4', '4/4', '3/4', '6/8', '9/8', '12/8'] as const;\r\n\r\n    export type IntervalRelation =\r\n        'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n        'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n        'd7' | 'm7' | 'M7'\r\n        ;\r\n\r\n    export const isFlatFromRelation = (relation: IntervalRelation) => {\r\n        // 以下の場合#（シャープ）とする\r\n        switch (relation) {\r\n            case 'M2':\r\n            case 'M3':\r\n            case 'M6':\r\n            case 'M7':\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    export type SymbolAttribute =\r\n        'triad' |\r\n        'seventh' |\r\n        'add9th'\r\n        ;\r\n\r\n    export type SymbolParams = {\r\n        key: SymbolKey;\r\n        name: string;\r\n        base: null | SymbolKey;\r\n        attr?: SymbolAttribute;\r\n        structs: IntervalRelation[];\r\n    }\r\n\r\n    export type BeatProps = {\r\n        // mol: number;\r\n        // den: number;\r\n        // 1拍のメモリ（16分音符）の数\r\n        beatMemoriCount: number;\r\n        // 1小節の拍数\r\n        barBeatCnt: number;\r\n    }\r\n\r\n    /**\r\n     * 拍子より拍情報を取得する\r\n     * @param beatSignature 拍子\r\n     * @returns 拍情報\r\n     */\r\n    export const getBeatProps = (beatSignature: BeatSignature): BeatProps => {\r\n        switch (beatSignature) {\r\n            case '4/4': return { beatMemoriCount: 4, barBeatCnt: 4 };\r\n            case '2/4': return { beatMemoriCount: 4, barBeatCnt: 2 };\r\n            case '3/4': return { beatMemoriCount: 4, barBeatCnt: 3 };\r\n            case '6/8': return { beatMemoriCount: 6, barBeatCnt: 2 };\r\n            case '9/8': return { beatMemoriCount: 6, barBeatCnt: 3 };\r\n            case '12/8': return { beatMemoriCount: 6, barBeatCnt: 4 };\r\n        };\r\n        // return {} as BeatProps;\r\n    }\r\n\r\n    /**\r\n     * 拍の長さからコードの持続時間をミリ秒で算出する\r\n     * @param beatLen \r\n     * @param minute \r\n     * @param bpm \r\n     * @param beatSignature \r\n     * @returns \r\n     */\r\n    export const calcSustainMsec = (beatLen: number, minute: number, bpm: number, beatSignature: BeatSignature): number => {\r\n        const beatMemoriCount = getBeatProps(beatSignature).beatMemoriCount;\r\n        const minuteLen = minute * (1 / beatMemoriCount);\r\n        return 60000 / bpm * (beatLen + minuteLen);\r\n    }\r\n\r\n\r\n    export type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\n    export type SymbolKey =\r\n        'major' |\r\n        'minor' |\r\n        'suspend4th' |\r\n        'diminish' |\r\n        'augument' |\r\n        'major-maj7th' |\r\n        'major-min7th' |\r\n        'minor-7th' |\r\n        'minor-maj7th' |\r\n        'sus4-7th' |\r\n        'diminish-7th' |\r\n        'augument-7th' |\r\n        'major-add9th' |\r\n        'minor-add9th' |\r\n        'sixth-9th' |\r\n        'minor-minus5' |\r\n        'minor7-minus5' |\r\n        'major-maj9th' |\r\n        'major-9th'\r\n        ;\r\n\r\n    export type DegreeProps = {\r\n        index: number;\r\n        isFlat: boolean;\r\n    };\r\n\r\n    export type ChordProps = {\r\n        root: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    };\r\n\r\n    export const SYMBOL_LIST: readonly SymbolParams[] = [\r\n        {\r\n            key: 'major', name: '',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor', name: 'm',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'suspend4th', name: 'sus4',\r\n            base: null,\r\n            structs: ['p1', 'p4', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish', name: 'dim',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish-7th', name: 'dim7',\r\n            base: 'diminish',\r\n            structs: ['p1', 'm3', 'd5', 'd7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'augument', name: 'aug',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'a5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'augument-7th', name: 'aug7',\r\n            base: 'augument',\r\n            structs: ['p1', 'M3', 'a5', 'm7']\r\n        },\r\n        {\r\n            key: 'minor-minus5', name: 'm(-5)',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor7-minus5', name: 'm7(-5)',\r\n            base: 'minor-minus5',\r\n            structs: ['p1', 'm3', 'd5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-maj7th', name: 'maj7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-min7th', name: '7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'minor-7th', name: 'm7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'sus4-7th', name: '7sus4',\r\n            base: 'suspend4th',\r\n            structs: ['p1', 'p4', 'p5']\r\n        },\r\n        {\r\n            key: 'minor-maj7th', name: 'mmaj7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-add9th', name: 'add9',\r\n            base: 'major',\r\n            structs: ['p1', 'M2', 'M3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'minor-add9th', name: 'madd9',\r\n            base: 'minor',\r\n            structs: ['p1', 'M2', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-maj9th', name: 'maj9',\r\n            base: 'major-maj7th',\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-9th', name: '9',\r\n            base: 'major-min7th',\r\n            structs: ['p1', 'm3', 'p5']\r\n        },\r\n    ];\r\n\r\n    /** インターバルの関係性 */\r\n    export const IntervalRelationProps = {\r\n        'p1': 0,\r\n        'm2': 1,\r\n        'M2': 2,\r\n        'm3': 3,\r\n        'M3': 4,\r\n        'p4': 5,\r\n        'd5': 6,\r\n        'p5': 7,\r\n        'a5': 8,\r\n        'm6': 8,\r\n        'M6': 9,\r\n        'd7': 9,\r\n        'm7': 10,\r\n        'M7': 11\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n    ];\r\n\r\n    export const DIATONIC_MINOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor-minus5' },\r\n        { root: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n    ];\r\n\r\n\r\n\r\n    export const DEGREE_ALL: readonly (DegreeProps | null)[] = [\r\n        null,\r\n        { index: 0, isFlat: false },\r\n        { index: 1, isFlat: false },\r\n        { index: 1, isFlat: true },\r\n        { index: 2, isFlat: false },\r\n        { index: 3, isFlat: false },\r\n        { index: 3, isFlat: true },\r\n        { index: 4, isFlat: false },\r\n        { index: 5, isFlat: false },\r\n        { index: 6, isFlat: false },\r\n        { index: 6, isFlat: true },\r\n        { index: 7, isFlat: false },\r\n        { index: 8, isFlat: false },\r\n        { index: 8, isFlat: true },\r\n        { index: 9, isFlat: false },\r\n        { index: 10, isFlat: false },\r\n        { index: 10, isFlat: true },\r\n        { index: 11, isFlat: false }\r\n    ];\r\n\r\n    export const getDegreeRoot = (props: DegreeProps) => {\r\n        const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n        return list[props.index];\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰ', 'Ⅰmaj7',\r\n        'Ⅱm', 'Ⅱm7',\r\n        'Ⅲm', 'Ⅲm7',\r\n        'Ⅳ', 'Ⅳmaj7',\r\n        'Ⅴ', 'Ⅴ7',\r\n        'Ⅵm', 'Ⅵm7',\r\n        'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n    ];\r\n\r\n    export const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰm', 'Ⅰm7',\r\n        'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n        'bⅢ', 'bⅢM7',\r\n        'Ⅳm', 'Ⅳm7',\r\n        'Ⅴm', 'Ⅴm7',\r\n        'bⅥ', 'bⅥM7',\r\n        'bⅦ', 'bⅦ7'\r\n    ];\r\n\r\n    export const getDiatonicDegreeList = (scale: Scale) => {\r\n        return scale === 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES :\r\n            DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\r\n    }\r\n\r\n    export const getRootName = (\r\n        props: DegreeProps,\r\n        baseKeyIndex: number\r\n    ): string => {\r\n        const list = props.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST;\r\n        return list[(baseKeyIndex + props.index) % 12];\r\n    }\r\n\r\n\r\n\r\n    export const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n        const ret = SYMBOL_LIST.find((symbol) => {\r\n            if (key === symbol.key) {\r\n                return symbol;\r\n            }\r\n        });\r\n        return ret != undefined ? ret : SYMBOL_LIST[0];\r\n    }\r\n\r\n    export const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n        let list: SymbolKey[] = [];\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (key === symbol.base) {\r\n                list.push(symbol.key);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n\r\n    export const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n        return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n    }\r\n}\r\n\r\nexport default TheoryUtil;\r\n\r\n","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport { BackingLayerData, BackingPatternProps, BackingSignalProps, ChordBacking, DetailInit, PedalInfo, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { playHarmony } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nexport namespace BackingUtil {\r\n\r\n    // オクターブの数\r\n    export const OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    export const STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    export const CHANNEL_MAX = 12;\r\n\r\n    export const getChordDetails = (\r\n        root: TheoryUtil.DegreeProps,\r\n        keyIndex: number,\r\n        on: null | TheoryUtil.DegreeProps,\r\n        symbol: TheoryUtil.SymbolParams\r\n    ): [\r\n        string, BackingState.StructInfo[]\r\n    ] => {\r\n\r\n        // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n        const chordRootIndex = (root.index + keyIndex) % 12;\r\n        const rootName = TheoryUtil.getRootName(root, keyIndex);\r\n        let chordFullName = rootName + symbol.name;\r\n\r\n        let chordOnIndex = -1;\r\n        // オンコードが設定されている場合\r\n        if (on != null) {\r\n            const onName = TheoryUtil.getRootName(on, keyIndex);\r\n            chordFullName = `${chordFullName}/${onName}`;\r\n\r\n            chordOnIndex = (on.index + keyIndex) % 12;\r\n        }\r\n\r\n        // 構成音情報を算出\r\n        let structList: BackingState.StructInfo[] = symbol.structs.map(struct => {\r\n            const relation = struct;\r\n            const interval = TheoryUtil.IntervalRelationProps[relation];\r\n            const soundIndex = (chordRootIndex + interval) % 12;\r\n            const adjustOctave = Math.floor((chordRootIndex + interval) / 12);\r\n            const isFlat = TheoryUtil.isFlatFromRelation(relation);\r\n            return {\r\n                relation, soundIndex, isFlat, adjustOctave\r\n            }\r\n        });\r\n        // オンコードを考慮\r\n        if (chordOnIndex !== -1) {\r\n            let sameIndex = -1;\r\n            structList.some((info, i) => {\r\n                if (info.soundIndex === chordOnIndex) {\r\n                    sameIndex = i;\r\n                    return;\r\n                }\r\n            });\r\n            // オンコードが構成音と被っている場合リストから削除\r\n            if (sameIndex !== -1) {\r\n                structList.splice(sameIndex, 1);\r\n            }\r\n            // オンコードをリストに追加\r\n            structList.unshift({\r\n                relation: null,\r\n                soundIndex: chordOnIndex,\r\n                isFlat: false,\r\n                adjustOctave: 0\r\n            });\r\n            // 音程の昇順でソート\r\n            structList.sort((a, b) => {\r\n                return a.soundIndex - b.soundIndex;\r\n            });\r\n\r\n            /** ソート後のオンコードの場所 */\r\n            let onIndex = -1;\r\n            structList.some((sound, i) => {\r\n                if (sound.relation == null) {\r\n                    onIndex = i;\r\n                    return;\r\n                }\r\n            });\r\n            const onChordIndex = structList[onIndex].soundIndex;\r\n            const tempList: BackingState.StructInfo[] = [];\r\n            for (let i = onIndex; i < structList.length; i++) {\r\n                const sound = structList[i];\r\n                tempList.push(sound);\r\n            }\r\n            for (let i = 0; i < onIndex; i++) {\r\n                const sound = structList[i];\r\n                tempList.push(sound);\r\n            }\r\n            tempList.forEach(sound => {\r\n                sound.adjustOctave = 0;\r\n                if (sound.soundIndex < onChordIndex) {\r\n                    sound.adjustOctave = 1;\r\n                }\r\n            });\r\n            structList = tempList;\r\n        }\r\n        return [chordFullName, structList];\r\n    }\r\n\r\n    export const getInitialRecord = (divCount: number) => {\r\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    export const buildChannels = (table: boolean[][]): BackingState.ChannelParam[] => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    export const getVoicingListFromTable = (table: boolean[][]) => {\r\n\r\n        const voicingList: VoicingProps[] = [];\r\n        // ボイシングを設定\r\n        if (table != null) {\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        voicingList.push({ octave: i, struct: j });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return voicingList;\r\n    }\r\n\r\n    export const buildPatternProps = (editorPattern: BackingState.Pattern): BackingPatternProps => {\r\n        const channelSize = editorPattern.channels.length;\r\n        const layers: BackingLayerData[] = [];\r\n        editorPattern.layers.forEach(layer => {\r\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\r\n            const signals: BackingSignalProps[] = [];\r\n            layer.table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        signals.push({ x: j, y: i, status: cell });\r\n                    }\r\n                });\r\n            });\r\n            layers.push({ divs, notesList: signals, vels: layer.velocityList.slice() });\r\n        });\r\n        const pedals: PedalInfo[] = [];\r\n        editorPattern.pedalActs.forEach((pedal, i) => {\r\n            if (pedal != null) pedals.push({\r\n                divIndex: i, action: pedal\r\n            });\r\n        });\r\n        return { channelSize, pedals, layers };\r\n    }\r\n\r\n    export const getChannels = (voicingStructs: BackingState.ChannelParam[], size: number) => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: BackingState.ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n\r\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\r\n\r\n        const layers: BackingState.Layer[] = [];\r\n        console.log(JSON.stringify(scoreLayers));\r\n        scoreLayers.forEach(scoreLayer => {\r\n            const table: (BackingState.NoteStatus | null)[][] = [];\r\n            for (let i = 0; i < channelSize; i++) {\r\n                const record: (BackingState.NoteStatus | null)[] = [];\r\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\r\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\r\n                    record.push(notes == null ? null : notes.status);\r\n                }\r\n                table.push(record);\r\n            }\r\n            layers.push({\r\n                noteDivList: scoreLayer.divs,\r\n                table,\r\n                velocityList: scoreLayer.vels\r\n            });\r\n        });\r\n        console.log(JSON.stringify(layers));\r\n        return layers;\r\n    }\r\n\r\n    export const getPitchListFromVoicing = (\r\n        voicingList: VoicingProps[],\r\n        structList: BackingState.StructInfo[]\r\n    ) => {\r\n        // return voicingList.map((item) => {\r\n        //     const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        //     return 12 * item.octave + rootIndex + interval;\r\n        // });\r\n        return voicingList.map((item) => {\r\n            // const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n            // return 12 * item.octave + rootIndex + interval;\r\n            const struct = structList[item.struct];\r\n            const octave = item.octave + struct.adjustOctave;\r\n            return 12 * octave + struct.soundIndex;\r\n        });\r\n    }\r\n\r\n    export const playBacking = (\r\n        store: Store,\r\n        reserveTasks: NodeJS.Timeout[],\r\n        baseInfo: DetailInit,\r\n        backing: ChordBacking,\r\n        pitchIndexList: number[],\r\n        chordTime: number\r\n    ) => {\r\n        if (backing.pattern == null) {\r\n            pitchIndexList.forEach((index) => {\r\n                const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                const octave = Math.floor(index / 12);\r\n                const soundFullName = soundName + octave;\r\n                playHarmony(soundFullName, store, chordTime / 1000, 5);\r\n            });\r\n        } else {\r\n\r\n            const bpm = baseInfo.bpm;\r\n            const beatProps = TheoryUtil.getBeatProps(baseInfo.beatSignature);\r\n            const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (2 / 3);\r\n\r\n            const pattern = backing.pattern;\r\n            // const pedalIndexes = pattern.pedals === undefined ? null : pattern.pedals.map(pedal => pedal.divIndex);\r\n\r\n            /** ペダルの有効範囲を定義したリスト */\r\n            const pedalRangeList: { start: number, end: number, action: BackingState.PedalAction }[] = [];\r\n            pattern.layers.forEach((layer, i) => {\r\n                /** バッキング内で経過した時間（ノーツごとの開始時間） */\r\n                let total = 0;\r\n                const timeList: {\r\n                    start: number, sustain: number\r\n                }[] = layer.divs.map(div => {\r\n                    /** 開始時間 */\r\n                    const start = 60000 / bpm * total;\r\n                    let normal = 4 / div.rate * adjustRate;\r\n                    if (div.isDot) normal *= 1.5;\r\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                    total += normal;\r\n                    return { start, sustain: 60000 / bpm * normal };\r\n                });\r\n\r\n                // ペダル状態のキャッシュを作成\r\n                if (i === 0 && pattern.pedals != undefined) {\r\n                    timeList.forEach((divTime, j) => {\r\n                        const pedalInfo = pattern.pedals?.find((pedal) => {\r\n                            if (j === pedal.divIndex) return pedal;\r\n                        });\r\n                        if (pedalInfo != undefined) {\r\n\r\n                            if (pedalRangeList.length > 0) {\r\n                                pedalRangeList[pedalRangeList.length - 1].end = divTime.start;\r\n                            }\r\n                            pedalRangeList.push({\r\n                                start: divTime.start,\r\n                                end: chordTime,\r\n                                action: pedalInfo.action\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /** 除外リスト（タイで吸収されるノーツ） */\r\n                const ignoreList: { x: number, y: number }[] = [];\r\n                layer.notesList.forEach((notes) => {\r\n\r\n                    // 除外リストに含まれている場合、以降の処理をしない\r\n                    if (ignoreList.find(ig => {\r\n                        if (ig.x === notes.x && ig.y === notes.y) return ig;\r\n                    }) !== undefined) return;\r\n\r\n                    const timeInfo = timeList[notes.x];\r\n                    const timing = notes.status.timing == undefined ? 0 : notes.status.timing;\r\n                    const timingAdj = timing * (60000 / bpm * 1 / 32);\r\n                    const startTime = timeInfo.start + timingAdj;\r\n\r\n                    /** 持続時間 */\r\n                    let sustainTime = timeInfo.sustain;\r\n                    if (notes.status.signal === 's') {\r\n                        // スタッカートの場合半分の音価にする\r\n                        sustainTime *= 0.5;\r\n                    } else if (notes.status.signal === 't') {\r\n\r\n                        let inc = notes.x;\r\n                        let isNext = true;\r\n                        while (isNext) {\r\n                            inc++;\r\n                            // 次のノーツを探す\r\n                            const nextNotes = layer.notesList.find(next => {\r\n                                if (next.x === inc && next.y === notes.y) {\r\n                                    return next;\r\n                                }\r\n                            });\r\n                            if (nextNotes != undefined) {\r\n                                sustainTime += timeList[inc].sustain;\r\n                                // 次の要素を除外する\r\n                                ignoreList.push({ x: inc, y: notes.y });\r\n                                // 次のノーツがタイだったらループを継続\r\n                                isNext = nextNotes.status.signal === 't';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //ペダルを検出\r\n                    for (let k = 0; k < pedalRangeList.length; k++) {\r\n                        const pedal = pedalRangeList[k];\r\n                        const notesTail = startTime + timeInfo.sustain;\r\n                        if (pedal.action !== 'off' && notesTail > pedal.start &&\r\n                            notesTail <= pedal.end\r\n                        ) {\r\n                            // ペダルの持続時間で更新\r\n                            sustainTime = pedal.end - startTime;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    /** 音量 */\r\n                    const velAdj = notes.status.velAdj == undefined ? 0 : notes.status.velAdj;\r\n                    let gain = layer.vels[notes.x] + velAdj;\r\n                    if (gain < 1) gain = 1;\r\n                    if (gain > 10) gain = 10;\r\n                    gain *= 0.6;\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            const index = pitchIndexList[notes.y];\r\n                            const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                            const octave = Math.floor(index / 12);\r\n                            const soundFullName = soundName + octave;\r\n                            playHarmony(soundFullName, store, sustainTime / 1000, gain);\r\n                        }, startTime)\r\n                    );\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    export const stopPreview = (store: Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        store.instruments.harmony?.stop();\r\n        state.isPreview = false;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    export const getLimitLen = (chordInfo: BackingState.ChordInfo) => {\r\n        const minute = chordInfo.minute;\r\n        // 16分音符の長さで割る\r\n        const memoriCount = TheoryUtil.getBeatProps(chordInfo.init.beatSignature).beatMemoriCount;\r\n        const beatLen = chordInfo.beatLen;// * (memoriCount / 4)\r\n        const minuteLen = minute.head / memoriCount + minute.tail / memoriCount;\r\n        return (beatLen + minuteLen);\r\n    }\r\n\r\n    export const getUsingLenFromDivs = (divs: BackingState.NoteDiv[], chordInfo: BackingState.ChordInfo) => {\r\n        const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n        const adjustRate = 4 / beatProps.beatMemoriCount;\r\n        return divs.reduce((prev, cur) => {\r\n            let len = 1 / cur.rate * adjustRate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            return prev + len * 4;\r\n        }, 0);\r\n    }\r\n\r\n    export const checkError = (chordInfo: BackingState.ChordInfo, voicingList: VoicingProps[], pattern: null | BackingState.Pattern): boolean => {\r\n        let hasError = false;\r\n        if (pattern != null) {\r\n\r\n            // 選択しているボイシングがチャンネル数に満たない場合\r\n            if (voicingList.length < pattern.channels.length) hasError = true;\r\n\r\n            const limitLen = getLimitLen(chordInfo);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getUsingLenFromDivs(layer.noteDivList, chordInfo);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n\r\n            // 裏レイヤーのノーツと重なっている場合\r\n            pattern.layers[0].table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        if (checkOverlapBackLayer(pattern.layers, 0, i, j)) {\r\n                            hasError = true;\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkOverlapBackLayer = (layers: BackingState.Layer[], layerIndex: number, channelIndex: number, divIndex: number): boolean => {\r\n        const baseLayer = layers[layerIndex];\r\n        const backLayer = layers[layerIndex === 0 ? 1 : 0];\r\n        const [left, right] = getDivRange(baseLayer.noteDivList, divIndex);\r\n        // console.log(`left=${left}, right=${right}`);\r\n        let isOverlap = false;\r\n        for (let i = 0; i < backLayer.noteDivList.length; i++) {\r\n            if (backLayer.table[channelIndex][i] != null) {\r\n                const [backLeft, backRight] = getDivRange(backLayer.noteDivList, i);\r\n                if (right > backLeft && left < backRight) {\r\n                    isOverlap = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return isOverlap;\r\n    }\r\n\r\n    export const getDivRange = (divs: BackingState.NoteDiv[], divIndex: number): [number, number] => {\r\n        let [left, right] = [0, 0];\r\n\r\n        divs.slice(0, divIndex + 1).forEach((cur, i) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            left = right;\r\n            right += len * 4;\r\n        });\r\n        return [left, right];\r\n    }\r\n\r\n    export const isPermitDot = (note: BackingState.NoteDiv) => {\r\n        return [8, 4, 2].includes(note.rate) && note.div3 === 0;\r\n    }\r\n\r\n    export const isPermit3ren = (note: BackingState.NoteDiv) => {\r\n        return [8, 4].includes(note.rate) && !note.isDot;\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { symbolName } from \"typescript\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n/**\r\n * データを高速で参照するために、\r\n * 事前に計算したデータを保持するためのユーティリティを提供する\r\n */\r\nnamespace CacheUtil {\r\n\r\n    /**\r\n     * ハーモナイズのキャッシュを生成する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const updateHarmonizeCache = (store: Store, dispatcher: Dispatcher) => {\r\n        const chordList = store.scoreData.chordList;\r\n        const scoreState = store.scoreState;\r\n        const init = (chordList[0].detail as DetailInit);\r\n\r\n        const elementCacheList: ScoreCache.Element[] = [];\r\n        const sectionCacheList: ScoreCache.Section[] = [];\r\n        const beatCacheList: ScoreCache.BeatRange[] = [];\r\n        const scaleCacheList: ScoreCache.KeyScaleRange[] = [];\r\n        const tempoCacheList: ScoreCache.TempoRange[] = [];\r\n        const measureCacheList: ScoreCache.Measure[] = [];\r\n\r\n        // 初期値情報\r\n        let keyIndex = init.keyIndex;\r\n        let scale = init.scale;\r\n        let bpm = init.bpm;\r\n\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let sectionBeatSum = 0;\r\n        let pastSecond = 0;\r\n        let curSecond = 0;\r\n        let chordIndex = -1;\r\n        // let curTotalBeat = 0;\r\n        let curMemoriCount = 0;\r\n        let totalBarCount = 0;\r\n\r\n        // 経過した16分音符のカウント\r\n        let totalMemoriCount = 0;\r\n        let beatRangeMemoriCount = 0;\r\n        let totalBeat = 0;\r\n        let totalMemoriBarCount = 0;\r\n\r\n        let chordFullName = '';\r\n        let structList: BackingState.StructInfo[] = [];\r\n\r\n        //拍キャッシュの産出に使う変数\r\n        let beatSignature = init.beatSignature;\r\n\r\n        let scaleMemoriCount = 0;\r\n        let tempoMemoriCount = 0;\r\n\r\n        const addScaleRange = () => {\r\n            scaleCacheList.push({\r\n                keyIndex,\r\n                scale,\r\n                memoriCnt: scaleMemoriCount\r\n            });\r\n            scaleMemoriCount = 0;\r\n        }\r\n        const addTempoRange = () => {\r\n            tempoCacheList.push({\r\n                bpm,\r\n                beatRate: beatProps.beatMemoriCount / 4,\r\n                memoriCnt: tempoMemoriCount\r\n            });\r\n            tempoMemoriCount = 0;\r\n        }\r\n\r\n\r\n        let beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        chordList.forEach((element, i) => {\r\n\r\n            const prevBeat = totalBeat;\r\n            // ブロック頭のメモリ\r\n            const prevMemoriCount = totalMemoriCount;\r\n            // ブロック頭の小節\r\n            const prevBarCount = totalBarCount;\r\n            const prevMinute = totalMinute;\r\n            const type = element.type;\r\n\r\n            switch (type) {\r\n                // 固定要素ブロック\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        pastSecond += curSecond;\r\n                    }\r\n                } break;\r\n\r\n                // セクション要素ブロック\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                } break;\r\n\r\n                // コード要素ブロック\r\n                case 'chord': {\r\n                    pastSecond += curSecond;\r\n                    // curTotalBeat += curSustain;\r\n\r\n                    const detail = element.detail as DetailChord;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    totalMinute += minute;\r\n                    chordIndex++;\r\n\r\n                    curMemoriCount = detail.beatLen * beatProps.beatMemoriCount + minute;\r\n\r\n                    const prevBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    totalBeat += detail.beatLen;\r\n                    const curBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    // 小節が変わった場合、合計小節をインクリメント\r\n                    if (prevBar !== curBar) {\r\n                        totalBarCount++\r\n                    }\r\n\r\n                    // スケールキャッシュの長さを加算\r\n                    scaleMemoriCount += curMemoriCount;\r\n                    tempoMemoriCount += curMemoriCount;\r\n\r\n                    // 時間の計算\r\n                    curSecond = TheoryUtil.calcSustainMsec(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        bpm,\r\n                        beatSignature\r\n                    );\r\n\r\n                    // メモリの加算\r\n                    for (let j = 0; j < curMemoriCount; j++) {\r\n                        let rate: ScoreCache.MeasureRate = 16;\r\n                        if (beatRangeMemoriCount % beatProps.beatMemoriCount === 0) rate = 4;\r\n                        else if (beatRangeMemoriCount % (beatProps.beatMemoriCount / (beatProps.beatMemoriCount / 2)) === 0) rate = 8;\r\n\r\n                        const barMemoriCount = beatProps.barBeatCnt * beatProps.beatMemoriCount;\r\n\r\n                        let dispBarCount = -1;\r\n                        if (beatRangeMemoriCount % barMemoriCount === 0) {\r\n                            // 拍子セクションの合計メモリ数が小節のメモリ数で割り切れる場合、小節数を表示する\r\n                            totalMemoriBarCount++;\r\n                            dispBarCount = totalMemoriBarCount;\r\n                        }\r\n                        measureCacheList.push({ rate, barCount: dispBarCount });\r\n                        totalMemoriCount++;\r\n                        beatRangeMemoriCount++;\r\n                    }\r\n\r\n                    if(detail.root != null) {\r\n                        const [newFullName, newStructList] = BackingUtil.getChordDetails(\r\n                            detail.root,\r\n                            keyIndex,\r\n                            detail.on,\r\n                            TheoryUtil.getSymbolFromKey(detail.symbolKey)\r\n                        );\r\n                        chordFullName = newFullName;\r\n                        structList = newStructList;\r\n                    }\r\n                } break;\r\n\r\n                // アルター要素ブロックする\r\n                case 'alter': {\r\n                    const detail = element.detail as DetailAlter;\r\n                    switch (detail.alterType) {\r\n                        // 音階が変わる\r\n                        case 'modulate': {\r\n                            addScaleRange();\r\n                            switch (detail.modRel) {\r\n                                case 'domm': {\r\n                                    keyIndex = (keyIndex + 24 + 7 * detail.dommVal) % 12;\r\n                                } break;\r\n                                case 'key': {\r\n                                    keyIndex = (keyIndex + 12 + detail.keyAdj) % 12;\r\n                                } break;\r\n                                case 'parallel': {\r\n                                    keyIndex = (keyIndex + 12 + (scale === 'major' ? -1 : 1) * 3) % 12;\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                                case 'relative': {\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // テンポが変わる\r\n                        case 'tempo': {\r\n                            addTempoRange();\r\n                            switch (detail.tempoRel) {\r\n                                case 'diff': {\r\n                                    bpm += detail.tempoDiff;\r\n                                } break;\r\n                                case 'rate': {\r\n                                    bpm = Math.floor(bpm * 1 * (detail.tempoRate / 100));\r\n                                } break;\r\n                                case 'abs': {\r\n                                    bpm = detail.tempoAbs;\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // 拍子が変わる\r\n                        case 'beat': {\r\n                            addTempoRange();\r\n                            // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n                            beatCacheList.push({\r\n                                beatSignature,\r\n                                memoriCnt: beatRangeMemoriCount\r\n                            });\r\n\r\n                            beatSignature = detail.beatSignature;\r\n                            // 拍を初期化する（拍変更後はいかなる場合も0から数える）\r\n                            totalBeat = 0;\r\n                            beatRangeMemoriCount = 0;\r\n\r\n                            beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n                        } break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n            \r\n            elementCacheList.push({\r\n                bar: prevBarCount,\r\n                surplusBeat: prevBeat % beatProps.barBeatCnt,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                scale,\r\n                bpm,\r\n                beatSignature,\r\n                sectionNo,\r\n                pastSecond,\r\n                chordIndex,\r\n                curTotalMemori: prevMemoriCount,\r\n                chordFullName,\r\n                structList,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n        scaleCacheList.push({\r\n            keyIndex,\r\n            scale,\r\n            memoriCnt: scaleMemoriCount\r\n        });\r\n\r\n        beatCacheList.push({\r\n            beatSignature,\r\n            memoriCnt: beatRangeMemoriCount\r\n        });\r\n        addTempoRange(); \r\n\r\n        scoreState.elementCacheList = elementCacheList;\r\n        scoreState.sectionCacheList = sectionCacheList;\r\n        scoreState.beatCacheList = beatCacheList;\r\n        scoreState.tempoCacheList = tempoCacheList;\r\n        scoreState.scaleCacheList = scaleCacheList;\r\n        scoreState.measureCacheList = measureCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }\r\n\r\n\r\n    export const updateMelodyCache = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const notesList = store.scoreData.notesList;\r\n        const state = store.melodyState;\r\n\r\n        const notesCacheList: ScoreCache.NotesCache[] = [];\r\n\r\n        notesList.forEach((notes) => {\r\n            const startTime = 0;\r\n            const duration = 0;\r\n            notesCacheList.push({\r\n                startTime,\r\n                duration\r\n            });\r\n        });\r\n    }\r\n\r\n    export const getKeyScaleFromNotesPos = (pos: number, scaleCacheList: ScoreCache.KeyScaleRange[]) => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let range: ScoreCache.KeyScaleRange | null = null;\r\n        // console.log(`count: ${scaleCacheList.length}`);\r\n        for (let i = 0; i < scaleCacheList.length; i++) {\r\n            const info = scaleCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                range = scaleCacheList[i - 1];\r\n                break;\r\n            }\r\n            tail += info.memoriCnt;\r\n            // console.log(`curPos: ${tail}`);\r\n        }\r\n        // console.log(`curMemori: ${curMemori}`);\r\n        return range === null ? scaleCacheList[scaleCacheList.length - 1] : range;\r\n    }\r\n\r\n    /**\r\n     * ノーツを再生する開始時間と持続時間を産出して返す\r\n     * @param pos ノーツの位置\r\n     * @param len ノーツの長さ\r\n     * @param tempoCacheList テンポのキャッシュリスト\r\n     * @returns \r\n     */\r\n    export const getTimeInfoFromNotesPos = (pos: number, len: number, tempoCacheList: ScoreCache.TempoRange[]): [number, number] => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let posTime = 0;\r\n        let pastLen = 0;\r\n        let last: ScoreCache.TempoRange | null = null;\r\n        for (let i = 0; i < tempoCacheList.length; i++) {\r\n            const info = tempoCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                last = tempoCacheList[i - 1];\r\n                break;\r\n            }\r\n            const beatLen = info.memoriCnt / 4;\r\n            posTime += 60 / info.bpm * beatLen;\r\n            pastLen += beatLen;\r\n            tail += info.memoriCnt;\r\n        }\r\n        if (last === null) {\r\n            last = tempoCacheList[tempoCacheList.length - 1];\r\n        }\r\n\r\n        const beatLen = (pos - pastLen) * last.beatRate;\r\n        posTime += 60 / last.bpm * beatLen;\r\n\r\n        const lenTime = 60 / last.bpm * len * last.beatRate;\r\n\r\n        return [posTime, lenTime];\r\n    }\r\n}\r\n\r\nexport default CacheUtil;\r\n","import { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += notes.len4;\r\n    total += notes.len8 / 2;\r\n    total += notes.len16 / 4;\r\n    total += notes.len4div3 / 3;\r\n    total += notes.len8div3 / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    return getSortetdNotesLen({\r\n        len4: notes1.len4 + notes2.len4,\r\n        len8: notes1.len8 + notes2.len8,\r\n        len16: notes1.len16 + notes2.len16,\r\n        len4div3: notes1.len4div3 + notes2.len4div3,\r\n        len8div3: notes1.len8div3 + notes2.len8div3\r\n    });\r\n}\r\n\r\nexport const getSortetdNotesLen = (base: MelodyLength) => {\r\n\r\n    const len8div3Cnt3 = Math.floor(base.len8div3 / 3);\r\n    base.len8div3 -= len8div3Cnt3 * 3;\r\n    base.len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(base.len8div3 / 2);\r\n    base.len8div3 -= len8div3Cnt2 * 2;\r\n    base.len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(base.len4div3 / 3);\r\n    base.len4div3 -= len4div3Cnt3 * 3;\r\n    base.len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(base.len16 / 2);\r\n    base.len16 -= len16Cnt2 * 2;\r\n    base.len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(base.len8 / 2);\r\n    base.len8 -= len8Cnt2 * 2;\r\n    base.len4 += len8Cnt2;\r\n\r\n    return base;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n    return getSortetdNotesLen({\r\n        len4, len8, len16, len4div3, len8div3\r\n    });\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if (notes.len8div3 > 0) return 6;\r\n    else if (notes.len16 > 0) return 4;\r\n    else if (notes.len4div3 > 0) return 3;\r\n    else if (notes.len8 > 0) return 2;\r\n    else if (notes.len4 > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playHarmony = (soundFullName: string, store: Store, duration: number, gain: number) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, { gain, duration });\r\n    } else {\r\n        alert('null');\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.harmony;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nnamespace MelodyUtil {\r\n\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        state.isPreview = false;\r\n        // state.focusIndex = state.lastFocus;\r\n        // state.distIndex = state.focusIndex;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        // store.instruments.sampler.releaseAll();\r\n        dispatcher.melody.setState(state);\r\n        dispatcher.melody.adjustScrollX();\r\n    }\r\n\r\n    /**\r\n     * プレビュー再生を開始する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const reserveTasks: NodeJS.Timeout[] = [];\r\n        const instrument = store.instruments.soundfontPlayer;\r\n\r\n        // 開始するフォーカス（非選択時は最初から）\r\n        const start = state.focusIndex === -1 ? 0 : state.focusIndex;\r\n\r\n        // プレビュー開始時のフォーカスを保持する\r\n        state.lastFocus = state.focusIndex;\r\n        state.isPreview = true;\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = start; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                        dispatcher.melody.adjustScrollX();\r\n                        // dispatcher.melody.setState(state);\r\n                    }, 0);\r\n                }, (posTime - firstTime) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (posTime - firstTime + lenTime) * 1000)\r\n                );\r\n            }\r\n        }\r\n\r\n        // ハーモニーを再生\r\n        if (!state.isSolo) {\r\n            previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n\r\n        dispatcher.system.setReserveTasks(reserveTasks);\r\n        dispatcher.melody.setState(state);\r\n    }\r\n\r\n    const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        const update = store.invalidate.melody as () => void;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = 3; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                if (cache.pastSecond < start) continue;\r\n\r\n                const detail = element.detail as DetailChord;\r\n\r\n                if (detail.root == null) return;\r\n\r\n                // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\r\n                // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, cache.structList);\r\n\r\n                // const chordTime = 60 / cache.bpm * len;\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const chordTime = TheoryUtil.calcSustainMsec(\r\n                    detail.beatLen,\r\n                    minute,\r\n                    cache.bpm,\r\n                    cache.beatSignature\r\n                );\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // sampler.releaseAll();\r\n                        // stopPiano(store);\r\n\r\n                        // const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                        // const div = pickingDelay / pitchList.length;\r\n\r\n                        // pitchList.forEach((index, j) => {\r\n                        //     const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        //     const octave = Math.floor(index / 12);\r\n                        //     const soundFullName = soundName + octave;\r\n                        //     playPiano(soundFullName, store, chordTime);\r\n                        // });\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n                        setTimeout(() => {\r\n                            store.melodyState.tableMouse.curChord = element;\r\n                            update();\r\n                            // dispatcher.melody.setState(store.melodyState);\r\n                        }, 0);\r\n                    }, cache.pastSecond - start - adjsut)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const chordList = store.scoreData.chordList;\r\n        const cacheList = store.scoreState.elementCacheList;\r\n        const cache = cacheList[3];\r\n        const init = chordList[0].detail as DetailInit;\r\n        const curChord = state.tableMouse.curChord;\r\n        const reserveTasks = store.reserveTasks;\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            // const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            // const onIndex = detail.on == null ? -1 : ((detail.on.index + init.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, cache.structList);\r\n            // const chordTime = 60 / init.bpm * len;\r\n            const minute = detail.minute.head + detail.minute.tail;\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                detail.beatLen,\r\n                minute,\r\n                init.bpm,\r\n                init.beatSignature\r\n            );\r\n\r\n            BackingUtil.playBacking(store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.melody.setState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.melody.setState(state);\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyUtil;","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailAlter, DetailChord, DetailInit, DetailSection, Scale, ScoreData, TuneNotes, VoicingProps } from \"../store/score/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/score/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/score/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport MelodyUtil, { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\nimport { Invalidate } from \"../store/invalidate\";\r\nimport BackingState from \"../store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport CacheUtil from \"../../utils/cacheUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        },\r\n\r\n        setInvalidate: (invalidate: Invalidate) => {\r\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        saveFile: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const options = {\r\n                types: [\r\n                    {\r\n                        accept: {\r\n                            'text/plain': ['.lcrs'],\r\n                        },\r\n                    },\r\n                ],\r\n            };\r\n            const fileHandle = state.fileHandle;\r\n            if (fileHandle != null) {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await fileHandle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(JSON.stringify(data));\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = fileHandle;\r\n                    this.score.setScoreState({ ...state });\r\n                    const file = await fileHandle.getFile();\r\n                    // alert('saved successfully!');\r\n                    console.log('saved successfully!');\r\n                })();\r\n            } else {\r\n                window.showSaveFilePicker(options).then((handle) => {\r\n                    (async () => {\r\n                        //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                        const writable = await handle.createWritable();\r\n                        //テキストデータの書き込み\r\n                        const text = DataUtil.gZip(JSON.stringify(data));\r\n                        await writable.write(text);\r\n                        //ファイルを閉じる\r\n                        await writable.close();\r\n                        state.fileHandle = handle;\r\n                        this.score.setScoreState({ ...state });\r\n                    })();\r\n                }).catch(() => {\r\n                    console.log('キャンセルされました');\r\n                });\r\n            }\r\n        },\r\n\r\n        setPiano: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, harmony: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                state.distIndex = state.focusIndex;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n        moveDist: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.distIndex + sub].type !== 'fixed') {\r\n                state.distIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n            state.focusIndex = !isTail ? distHead : distTail;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        flashElement: (index: number) => {\r\n            // const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[index];\r\n\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n\r\n            // bodyRef.style.backgroundColor = '#ffef5f';\r\n            // setTimeout(() => {\r\n            //     bodyRef.style.backgroundColor = '';\r\n            // }, 10);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                if (isUp) {\r\n                    detail.root = { index: 0, isFlat: false };\r\n                    this.score.setScoreData(data);\r\n                    this.score.flashElement(state.focusIndex);\r\n                }\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            } else if (detail.root.index + sub === -1) {\r\n                detail.root = null;\r\n                detail.symbolKey = 'major';\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n            // キャッシュの更新\r\n            const root = detail.root as TheoryUtil.DegreeProps;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            [cache.chordFullName, cache.structList] =\r\n                BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, TheoryUtil.getSymbolFromKey(detail.symbolKey));\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                setTimeout(() => {\r\n                    CacheUtil.updateHarmonizeCache(this.store, this);\r\n                }, 1);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -2 && target <= 2) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                CacheUtil.updateHarmonizeCache(this.store, this);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[state.focusIndex];\r\n\r\n            // 拍の初期値を取得\r\n            const beatSignature = state.elementCacheList[state.focusIndex].beatSignature;\r\n            const initialBeat = TheoryUtil.getBeatProps(beatSignature).barBeatCnt;\r\n            let curBeatLen = initialBeat;\r\n            if (cur.type === 'chord') {\r\n                const curChord = cur.detail as DetailChord;\r\n                // 後にシンコペーションが設定されている場合は追加できない\r\n                if (curChord.minute.tail != 0) return;\r\n\r\n                curBeatLen = curChord.beatLen;\r\n            }\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: curBeatLen,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null,\r\n                        hasError: false\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        addAlterElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'alter', detail: {\r\n                    alterType: null,\r\n                    modRel: null,\r\n                    dommVal: 0,\r\n                    keyAdj: 0,\r\n                    tempoRel: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbs: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailAlter\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                const sectionNo = this.store.scoreState.elementCacheList[i].sectionNo;\r\n                // 先頭のセクション要素が含まれている場合削除しない\r\n                if (element.type === 'section' && sectionNo === 0) {\r\n                    return;\r\n                }\r\n            }\r\n            data.chordList.splice(distHead, (distTail - distHead) + 1);\r\n            this.score.setScoreData(data);\r\n            state.focusIndex = distHead - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // // reffer.style.width = '300px';\r\n            // wrapRef.style.opacity = '0';\r\n            // wrapRef.style.overflow = 'hidden';\r\n            // // wrapRef.style.padding = '0';\r\n            // wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '0';\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.opacity = '';\r\n            //     wrapRef.style.width = '';\r\n            //     wrapRef.style.overflow = '';\r\n            //     // wrapRef.style.padding = '';\r\n            //     const data = this.store.scoreData;\r\n            //     data.chordList.splice(state.focusIndex, 1);\r\n            //     this.score.setScoreData(data);\r\n            //     state.focusIndex--;\r\n            //     this.score.setScoreState(state);\r\n            //     // setTimeout(() => {\r\n            //     //     reffer.style.opacity = '';\r\n            //     //     reffer.style.width = '';\r\n            //     //     const data = this.store.scoreData;\r\n            //     //     data.chordList.splice(state.focusIndex, 1);\r\n            //     //     this.score.setScoreData(data);\r\n            //     // }, 200);\r\n            // }, 200);\r\n        },\r\n\r\n        copyElementList: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            const list: ChordElement[] = [];\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                list.push(JSON.parse(JSON.stringify(element)));\r\n            }\r\n            console.log(list.length);\r\n            state.copiedElementList = list;\r\n            state.cloneBacking = null;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        pasteElementList: () => {\r\n            const state = this.store.scoreState;\r\n\r\n            const data = this.store.scoreData;\r\n            const list = state.copiedElementList;\r\n            if (list == null) return;\r\n\r\n            console.log(list.length);\r\n            list.forEach((element, i) => {\r\n                data.chordList.splice(state.focusIndex + 1 + i, 0, element);\r\n            });\r\n            this.score.setScoreData(data);\r\n            state.focusIndex++;\r\n            state.distIndex = state.focusIndex + list.length - 1;\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (scale: Scale, keyIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const scaleList = scale === 'major' ? TheoryUtil.DIATONIC_MAJOR_SCALE_LIST : TheoryUtil.DIATONIC_MINOR_SCALE_LIST;\r\n            const chord = scaleList[keyIndex];\r\n            const root: TheoryUtil.DegreeProps = { ...chord.root };\r\n            detail.root = root;\r\n            detail.symbolKey = chord.symbolKey;\r\n            // オンコードの設定を解除\r\n            detail.on = null;\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            [cache.chordFullName, cache.structList] =\r\n                BackingUtil.getChordDetails(root, cache.keyIndex, null, TheoryUtil.getSymbolFromKey(detail.symbolKey));\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        cloneBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n        },\r\n\r\n        pastBacking: () => {\r\n            const state = this.store.scoreState;\r\n            if (state.cloneBacking != null) {\r\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n                const data = this.store.scoreData;\r\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreData(data);\r\n\r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                [cache.chordFullName, cache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, TheoryUtil.getSymbolFromKey(detail.symbolKey));\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n                \r\n            // キャッシュの更新\r\n            const root = detail.root as TheoryUtil.DegreeProps;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            [cache.chordFullName, cache.structList] =\r\n                BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, TheoryUtil.getSymbolFromKey(detail.symbolKey));\r\n            this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n                \r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                [cache.chordFullName, cache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, null, TheoryUtil.getSymbolFromKey(detail.symbolKey));\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    /**\r\n     * メロディ画面のディスパッチ\r\n     */\r\n    public melody = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        /**\r\n         * 全てのノーツを選択する\r\n         */\r\n        allSelect: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = notesList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * 選択中のノーツの音程を変更する\r\n         * @param isUpper\r\n         * @param mode \r\n         * @returns \r\n         */\r\n        incrementCurPitch: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n            const scoreState = this.store.scoreState;\r\n            const state = this.store.melodyState;\r\n            const focusIndex = state.focusIndex;\r\n            const distIndex = state.destIndex;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            // フォーカスされていない場合は処理しない\r\n            if (focusIndex === -1) return;\r\n\r\n            if (focusIndex !== distIndex) {\r\n\r\n                const targetList = notesList.filter(\r\n                    (notes, i) => i >= focusIndex && i <= distIndex\r\n                );\r\n\r\n                targetList.forEach(notes => {\r\n                    notes.pitchIndex += 1 * (isUpper ? -1 : 1);\r\n\r\n                    // 履歴を作成\r\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                    this.melody.setNotesList(notesList.slice());\r\n                });\r\n            } else {\r\n                const cur = notesList[focusIndex];\r\n                // const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n                const scaleIndexList = TheoryUtil.MAJOR_SCALE_INTERVALS;\r\n                const normalLeft = getNormalizeLenFromNotes(cur.pos);\r\n                const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n                const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n\r\n                const prevPitchIndex = cur.pitchIndex;\r\n                const interval = mode !== 'octave' ? 1 : 12;\r\n                let tempPitchIndex = cur.pitchIndex;\r\n\r\n                while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                    tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                    if (mode !== 'scale' ||\r\n                        (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                    ) {\r\n                        cur.pitchIndex = tempPitchIndex;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // 値が変わっていた場合のみ処理する\r\n                if (prevPitchIndex !== cur.pitchIndex) {\r\n                    playSoundfont(cur.pitchIndex, this.store);\r\n                    // 履歴を作成\r\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                    this.melody.setNotesList(notesList.slice());\r\n\r\n                    this.melody.adjustScrollY();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * キースイッチを設定する\r\n         * @param keySwitch \r\n         */\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         */\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        /**\r\n         * 複数選択From～ToのToを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         * @returns \r\n         */\r\n        moveDestFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.destIndex > 0 : state.destIndex < notesList.length - 1) {\r\n                state.destIndex += (isNext ? 1 : -1);\r\n                this.melody.setState(state);\r\n            }\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツのエリアのコードを更新する\r\n         * @param focusIndex ノーツのフォーカス\r\n         */\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.tableMouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスの後ろに新しいノーツを追加する\r\n         * @returns \r\n         */\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const focus = state.focusIndex;\r\n            if (focus === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[focus];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = focus === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            // 新しい要素の位置\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(focus + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツを削除する\r\n         */\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            // 履歴を作成\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n            // 対象の開始と終了のインデックスを取得\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            // 削除する個数\r\n            const delNum = end - start + 1;\r\n            notesList.splice(start, delNum);\r\n            this.melody.setNotesList(notesList);\r\n            // 削除後は対象の開始インデックスの１つ前を選択\r\n            state.focusIndex = start - 1;\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * 複数選択を解除する\r\n         * @param isTail 解除時複数選択のどこにフォーカスを移すか（trueの場合終端を選択）\r\n         */\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            state.focusIndex = (!isTail ? start : end);\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            const distIndex = state.destIndex;\r\n            const focusIndex = state.focusIndex;\r\n\r\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\r\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n\r\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\r\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\r\n\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 移動可能かを判定\r\n            if (condition) {\r\n                for (let i = start; i <= end; i++) {\r\n                    const cur = notesList[i];\r\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                }\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        firstNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n                this.melody.adjustScrollX();\r\n                // this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.destIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            // if (state.focusIndex === -1) return;\r\n\r\n            MelodyUtil.previewStart(this.store, this);\r\n        },\r\n\r\n        copyNotes: () => {\r\n\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const num = focusEnd - focusStart + 1;\r\n\r\n            const cloneNotesList: TuneNotes[] = [];\r\n            const base = notesList[focusStart].pos;\r\n            const baseUnit = getMinimumLenUnit(base);\r\n            for (let i = 0; i < num; i++) {\r\n                const notes = notesList[i + focusStart];\r\n                const unit = getMinimumLenUnit(notes.pos);\r\n                const useUnit = baseUnit > unit ? baseUnit : unit;\r\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\r\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\r\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\r\n                console.log(JSON.stringify(pos));\r\n                cloneNotesList.push({\r\n                    pitchIndex: notes.pitchIndex,\r\n                    pos,\r\n                    len: { ...notes.len }\r\n                });\r\n            }\r\n            state.cloneNotesList = cloneNotesList;\r\n            // notesList.splice(state.focusIndex, num);\r\n            // this.tune.setNotesList(notesList);\r\n            // state.focusIndex = focusStart - 1;\r\n            // state.distIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            // alert(JSON.stringify(state.cloneNotesList));\r\n        },\r\n\r\n        pasteNotes: () => {\r\n            // alert('pasteNotes');\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const pastList: TuneNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\r\n            pastList.forEach(notes => {\r\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\r\n            });\r\n            // ペーストするノーツの最後（右端）の要素\r\n            const pastLast = pastList[pastList.length - 1];\r\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList = notesList.concat(pastList);\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                data.notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                this.score.setScoreData(data);\r\n\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex + pastList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            // this.tune.adjustScrollX();\r\n        },\r\n\r\n        undo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`undo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const prev = history.undo();\r\n            if (prev != null) {\r\n                if (history.cur === 0) {\r\n                    console.log('first undo');\r\n                    history.list.unshift(JSON.stringify(data.notesList));\r\n                    history.cur = 1;\r\n                }\r\n                data.notesList = JSON.parse(prev);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`undo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        },\r\n\r\n        redo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`redo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const next = history.redo();\r\n            if (next != null) {\r\n                data.notesList = JSON.parse(next);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`redo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordBacking = detail.backing;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n\r\n            let pattern: BackingState.Pattern | null = null;\r\n            if (chordBacking.pattern != null) {\r\n                const patternProps = chordBacking.pattern;\r\n                const voicingStructs = BackingUtil.buildChannels(voicingTable);\r\n                const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\r\n                const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);\r\n                let pedalActs: (null | BackingState.PedalAction)[] = [];\r\n                if (patternProps.pedals != undefined) {\r\n                    for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\r\n                        const pedal = patternProps.pedals.find(pedal => {\r\n                            if (pedal.divIndex === i) return pedal;\r\n                        });\r\n                        if (pedal == undefined) pedalActs.push(null);\r\n                        else pedalActs.push(pedal.action);\r\n                    }\r\n                } else {\r\n                    for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\r\n                        if (i === 0) pedalActs.push('on');\r\n                        else pedalActs.push(null);\r\n                    }\r\n                }\r\n                pattern = {\r\n                    channelIndex: -1,\r\n                    lenIndex: 0,\r\n                    mode: 'velocity',\r\n                    layerIndex: 0,\r\n                    channels,\r\n                    layers,\r\n                    pedalActs\r\n                };\r\n            }\r\n            // バッキングステートの初期化\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    symbolAttr: TheoryUtil.getSymbolFromKey(detail.symbolKey).attr,\r\n                    chordFullName: cache.chordFullName,\r\n                    structList: cache.structList,\r\n                    // root: (detail.root as TheoryUtil.DegreeProps),\r\n                    // on: (detail.on),\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    // symbolKey: detail.symbolKey,\r\n                    init: { ...cache }\r\n                },\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false,\r\n                hasError: chordBacking.hasError\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n            setTimeout(() => {\r\n                this.backing.setState(null);\r\n            }, 50);\r\n        },\r\n\r\n        setState: (backingState: null | BackingState.Editor) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingState.Layer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingState.Layer;\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const isExist = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = isExist != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        /**\r\n         * エディタで設定したバッキング情報を譜面データに反映\r\n         */\r\n        mappingEditorToScore: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n\r\n            detail.backing = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                hasError: editor.hasError\r\n            };\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const curLen = lenList[pattern.lenIndex];\r\n            const newLen: BackingState.NoteDiv = { rate: curLen.rate, div3: curLen.div3, isDot: curLen.isDot };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.noteDivList = lenList.slice();\r\n\r\n            // テーブル追加\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n\r\n            // ベロシティ追加\r\n            layer.velocityList.splice(pattern.lenIndex + 1, 0, 5);\r\n\r\n            // ペダル追加\r\n            if (pattern.layerIndex === 0) {\r\n                pattern.pedalActs.splice(pattern.lenIndex + 1, 0, null);\r\n            }\r\n\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            cur.isDot = false;\r\n            cur.div3 = 0;\r\n            layer.noteDivList = layer.noteDivList.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            if (BackingUtil.isPermitDot(cur)) {\r\n                cur.isDot = !cur.isDot;\r\n                layer.noteDivList = layer.noteDivList.slice();\r\n                this.backing.setState(state);\r\n                this.backing.updateErrorState();\r\n            }\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: BackingState.NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            layer.table = layer.table.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        incrementVel: (value: number) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const after = layer.velocityList[pattern.lenIndex] + value;\r\n            if (after >= 1 && after <= 10) {\r\n                layer.velocityList[pattern.lenIndex] = after;\r\n                this.backing.setState(state);\r\n            }\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            // 2つ以上要素がないと消せない\r\n            if (layer.noteDivList.length >= 2) {\r\n                layer.noteDivList.splice(pattern.lenIndex, 1);\r\n                layer.table.forEach((column) => {\r\n                    column.splice(pattern.lenIndex, 1);\r\n                });\r\n                layer.velocityList.splice(pattern.lenIndex, 1);\r\n                // for(let i = 0; i < pattern.channels.length; i ++) {\r\n                //     layer.table[i].splice(pattern.lenIndex, 1);\r\n                // }\r\n                if (pattern.layerIndex === 0) {\r\n                    // 終端までnullで更新\r\n                    if (pattern.lenIndex < pattern.pedalActs.length - 1) {\r\n                        for (let j = pattern.lenIndex + 1; j < pattern.pedalActs.length; j++) {\r\n                            pattern.pedalActs[j] = null;\r\n                        }\r\n                    }\r\n                    pattern.pedalActs.splice(pattern.lenIndex, 1);\r\n                }\r\n\r\n                if (pattern.lenIndex > 0) {\r\n                    pattern.lenIndex--;\r\n                }\r\n                this.backing.setState(state);\r\n            }\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n        /**\r\n         * 左右レイヤーを切り替える\r\n         */\r\n        switchLayer: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        /**\r\n         * 音量orペダルのモードを切り替える\r\n         */\r\n        switchMode: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            if (pattern.mode === 'velocity') pattern.mode = 'pedal';\r\n            else if (pattern.mode === 'pedal') pattern.mode = 'velocity';\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        /**\r\n         * バッキングのプレビュー再生をする\r\n         */\r\n        testBacking: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const reserveTasks = this.store.reserveTasks;\r\n            const chordInfo = editor.chordInfo;\r\n            const init = chordInfo.init;\r\n\r\n            // const rootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n            // const onIndex = chordInfo.on == null ? -1 : ((chordInfo.on.index + chordInfo.init.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n            // const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\r\n            // const chordTime = 60 / init.bpm * len;\r\n\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                chordInfo.beatLen,\r\n                chordInfo.minute.head + chordInfo.minute.tail,\r\n                init.bpm,\r\n                init.beatSignature\r\n            );\r\n            const backing: ChordBacking = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                hasError: false\r\n            };\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordInfo.structList);\r\n\r\n            BackingUtil.playBacking(this.store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                editor.isPreview = false;\r\n                this.backing.setState(editor);\r\n            }, chordTime));\r\n\r\n            editor.isPreview = true;\r\n            this.backing.setState(editor);\r\n        },\r\n\r\n        updateErrorState: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const voicingList = BackingUtil.getVoicingListFromTable(editor.voicingTable);\r\n            editor.hasError = BackingUtil.checkError(editor.chordInfo, voicingList, editor.pattern);\r\n            this.backing.setState(editor);\r\n        }\r\n    }\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport Soundfont from 'soundfont-player';\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: TheoryUtil.SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null,\r\n        hasError: false\r\n    };\r\n    return backing;\r\n}","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./score/scoreData\"\r\nimport { ScoreState } from \"./score/scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./score/melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { Invalidate } from \"./invalidate\"\r\nimport DataHistory from \"./state/dataHistory\"\r\nimport BackingState from \"./score/backing/backingState\"\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState.Editor;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n\r\n    invalidate: Invalidate;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 2,\r\n        scoreTabIndex: 0,\r\n        dialog: null\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        fileHandle: null,\r\n        isMelody: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        scaleCacheList: [],\r\n        tempoCacheList: [],\r\n        beatCacheList: [],\r\n        measureCacheList: [],\r\n        keySwitch: {\r\n            distMode: false,\r\n            sustainMode: false,\r\n            chordMode: false,\r\n            symbolMode: false,\r\n            control: false,\r\n            minHeadMode: false,\r\n            minTailMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneBacking: null,\r\n        copiedElementList: null,\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        destIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 4,\r\n        beatWidth: 120,\r\n        tableMouse: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        timelineMouse: {\r\n            pos: -1,\r\n            isPut: false,\r\n            lock: -1,\r\n            width: 0,\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 9\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false,\r\n            control: false,\r\n        },\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneNotesList: [],\r\n\r\n        dataHistory: new DataHistory(),\r\n        notesCacheList: []\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        // sampler: getDefaultSampler(),\r\n        harmony: null,\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: [],\r\n    invalidate: {\r\n        harmoniizeInvalidate: {},\r\n        harmonize: null,\r\n        melody: null\r\n    },\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note: {\r\n        left: string;\r\n        right: string;\r\n        up: string;\r\n        down: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        distMode: string;\r\n        edit1: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        edit2: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = (): KeyConfig => {\r\n    return {\r\n        note: {\r\n            left: 'ArrowLeft',\r\n            right: 'ArrowRight',\r\n            up: 'ArrowUp',\r\n            down: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'm',\r\n            deleteCur: 'Delete',\r\n            distMode: 'Shift',\r\n            edit1: 'f',\r\n            edit2: 'c',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n        }\r\n    };\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","\r\n\r\nclass DataHistory {\r\n\r\n    cur: number;\r\n    list: string[];\r\n\r\n    constructor() {\r\n        this.cur = -1;\r\n        this.list = [];\r\n    }\r\n\r\n\r\n    add(data: string) {\r\n        // console.log(`add start ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n        // if (this.list[this.cur] === data) {\r\n        //     console.log('same...');\r\n        //     return;\r\n        // }\r\n        if (this.cur > -1) {\r\n            this.list.splice(0, this.cur + 1);\r\n            this.cur = -1;\r\n            console.log('restert');\r\n        }\r\n        this.list.unshift(data);\r\n        // console.log(`add end ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n    }\r\n\r\n    undo(): null | string {\r\n        let ret = null;\r\n        if (this.cur < this.list.length - 1) {\r\n            this.cur++;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    redo(): null | string {\r\n        let ret = null;\r\n        if (this.cur > 0) {\r\n            this.cur--;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const dialog = store.systemState.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.systemState.dialog = null;\r\n            dispatcher.system.setState(store.systemState);\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n    \r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 22px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","namespace DummyUtil {\r\n\r\n    export const SECTION_CATEGORY = ['Section', 'Intro', 'A', 'B', 'C', 'D', 'Outro'];\r\n    export const SECTION_NO = ['', '1', '2', '3', '4', '5', '6'];\r\n}\r\n\r\nexport default DummyUtil;","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\nnamespace ProgSearcher {\r\n\r\n    export type ChordItemBean = {\r\n        root: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n        beatLen: number;\r\n    }\r\n\r\n    export type UnitBean = {\r\n        condition: Condition;\r\n        chordList: ChordItemBean[];\r\n    }\r\n\r\n    /**\r\n     * ダイアトニックスケールの連番でコードを指定する\r\n     * @param scaleIndex スケールの連番\r\n     * @param beatLen 拍\r\n     */\r\n    const getDiatonicChord = (scaleIndex: number, beatLen: number): ChordItemBean => {\r\n        const chord = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        return { root: { index: chord.root.index, isFlat: false }, symbolKey: chord.symbolKey, beatLen };\r\n    }\r\n\r\n    export type Condition = {\r\n        beat: BeatSignature;\r\n        step: number;\r\n        firstChord: ProgUtil.DegreeFilter;\r\n        secondChord: ProgUtil.DegreeFilter;\r\n    }\r\n\r\n    /**\r\n     * コード進行を検索する\r\n     * @param condition \r\n     * @returns フィルターしたリスト\r\n     */\r\n    export const search = (condition: Condition) => {\r\n        console.log(JSON.stringify(condition));\r\n        return UNIT_LIST.filter((unit) => (\r\n            (unit.condition.beat === condition.beat) &&\r\n            (condition.step === 0 || unit.condition.step === condition.step) &&\r\n            (condition.firstChord === '' || unit.condition.firstChord === condition.firstChord) &&\r\n            (condition.secondChord === '' || unit.condition.secondChord === condition.secondChord)\r\n        ));\r\n    }\r\n\r\n    const parseChord = (source: string): ChordItemBean[] => {\r\n        const args = source.split('@');\r\n        const baseBeat = Number(args[0]);\r\n        const script = args[1];\r\n        const list = script.split(' ');\r\n        return list.map((value)=> {\r\n            const diatonicNo = Number(value.charAt(0)) - 1;\r\n            const option = value.charAt(1);\r\n            const beatChange = value.charAt(2);\r\n\r\n            const chord = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[diatonicNo];\r\n            switch(option) {\r\n                case '_': break;\r\n            };\r\n            const beatLen = beatChange === '' ? baseBeat : Number(beatChange);\r\n            const chordItem: ChordItemBean = {\r\n                root: chord.root, symbolKey: chord.symbolKey, beatLen\r\n            }\r\n            return chordItem;\r\n        });\r\n    }\r\n\r\n    const UNIT_LIST: UnitBean[] = [\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@1 5 6 3 4 1 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@1 5 6 3 4 3 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@1 5 6 5 4 1 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@1 5 6 4 1 5 6 4')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('4@1 4 5 6 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('4@1 6 2 5 1 6 2 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('4@1 6 4 5 1 6 4 5')\r\n        },\r\n        {\r\n            condition: {beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('2@4 5 3 6 4 5 3 6')\r\n        },\r\n    ];\r\n}\r\n\r\nexport default ProgSearcher;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\n\r\nnamespace ProgStyle {\r\n\r\n\r\n    /** 実行ボタン */\r\n    export const _TitleLabel = styled.div<{\r\n    }>`\r\n        ${Styles.CSS_LABEL_MIDIUM};\r\n        background-color: #f0f0f049;\r\n        width: 120px;\r\n        text-align: center;\r\n        border-radius: 10px;\r\n        color: #2c2c2c;\r\n        border: solid 1px #ffffff79;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n\r\n    /** コンボボックス */\r\n    export const _Combobox = styled.select<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: black;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n}\r\n\r\nexport default ProgStyle;","import { BeatSignature, ChordElement, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * コード進行生成のユーティリティ\r\n */\r\nnamespace ProgUtil {\r\n\r\n    /** 生成方法 */\r\n    export type BuildType = 'blank' | 'custom' | 'template';\r\n\r\n    export const STEP_LIST = [0, 2, 3, 4] as const;\r\n    export type Step = typeof STEP_LIST[number];\r\n\r\n    /**\r\n     * ブロックに設定するプロパティ\r\n     */\r\n    export type BlockProps = {\r\n        label: DetailSection | DetailFixed;\r\n        chordList?: DetailChord[];\r\n    }\r\n\r\n    export const DEGREE_FILTER_LIST = [\r\n        '', 'Ⅰ', 'Ⅴ', 'Ⅳ', 'Ⅵm', 'Ⅱm', 'Ⅲm'\r\n    ] as const;\r\n    export type DegreeFilter = typeof DEGREE_FILTER_LIST[number];\r\n\r\n    /**\r\n     * 初期状態のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getInitialBlockList = (): BlockProps[] => {\r\n        return [\r\n            { label: { fixed: \"Start\" } },\r\n            { label: { fixed: \"End\" } },\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Blank選択時のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getBlankBlockList = (): BlockProps[] => {\r\n        return [\r\n            { label: { fixed: \"Start\" } },\r\n            {\r\n                label: { labelName: \"Section\" }, chordList: [\r\n                    getDefaultChord()\r\n                ]\r\n            },\r\n            { label: { fixed: \"End\" } },\r\n        ];\r\n    }\r\n\r\n    export const getDefaultChord = (): DetailChord => {\r\n        return {\r\n            beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n            backing: {\r\n                voicingList: [],\r\n                pattern: null,\r\n                hasError: false\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拍子より選択可能なステップリストを絞り込む\r\n     * @param beat ステップの拍\r\n     * @returns 絞り込んだリスト\r\n     */\r\n    export const getFilteredStepList = (beat: BeatSignature) => {\r\n        return STEP_LIST.filter((item) => {\r\n            // 0は空白表示なので必ず加える\r\n            if (item === 0) return true;\r\n\r\n            switch (beat) {\r\n                case '4/4':\r\n                case '6/8': {\r\n                    if (item === 3) return false;\r\n                }\r\n                    break;\r\n                case '3/4':\r\n                case '9/8': {\r\n                    if (item !== 3) return false;\r\n                }\r\n                    break;\r\n                case '2/4':\r\n                case '6/8': {\r\n                    if (item !== 2) return false;\r\n                }\r\n                    break;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * ブロックリストより譜面データを生成する\r\n     * @param blockList ブロックリスト\r\n     * @returns 譜面データ\r\n     */\r\n    export const buildScoreData = (blockList: BlockProps[]): ScoreData => {\r\n        const elementList: ChordElement[] = [];\r\n        // イニシャル要素を設定\r\n        const initElement: DetailInit = {\r\n            keyIndex: 0,\r\n            bpm: 100,\r\n            scale: \"major\",\r\n            beatSignature: \"4/4\"\r\n        }\r\n        elementList.push({ type: 'init', detail: initElement });\r\n        blockList.forEach((block) => {\r\n            if (block.chordList == undefined) {\r\n                // 固定ブロックの処理\r\n                elementList.push({ type: 'fixed', detail: block.label });\r\n            } else {\r\n                // セクションブロックの処理\r\n                elementList.push({ type: 'section', detail: block.label });\r\n                block.chordList.forEach((chord) => {\r\n                    elementList.push({ type: 'chord', detail: chord });\r\n                });\r\n            }\r\n        });\r\n        return { chordList: elementList, notesList: [] };\r\n    }\r\n}\r\n\r\nexport default ProgUtil;","import { useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../utils/dummyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgSearcher from \"./progSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行を編集する画面\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ProgCustomFrame = (props: {\r\n    /** 拍子フィルターの値 */\r\n    beat: '' | BeatSignature;\r\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\r\n    insertProgUnit: (unit: ProgSearcher.UnitBean, secName: string) => void;\r\n}) => {\r\n\r\n    const [step, setStep] = useState<ProgUtil.Step>(2);\r\n    const [degreeFilters, setDegreeFilters] = useState<(ProgUtil.DegreeFilter)[]>(['', '']);\r\n\r\n    /** セクションカテゴリのステート */\r\n    const [secCategory, setSecCategory] = useState('Section');\r\n    /** セクション連番のステート */\r\n    const [secNo, setSecNo] = useState('');\r\n\r\n    // const [progUnitList, setProgUnitList] = useState<ProgSearcher.UnitBean[]>([]);\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n\r\n    const stepList = useMemo(() => {\r\n        return props.beat === '' ? [0] : ProgUtil.getFilteredStepList(props.beat);\r\n    }, [props.beat]);\r\n\r\n    /** 拍ステップ絞り込みのコンボボックス */\r\n    const stepOptionJsxList = useMemo(() => {\r\n        // console.log(stepList.length);\r\n        return stepList.map((val, i) => {\r\n            // 0の場合は表示しない制御\r\n            const disp = val === 0 ? '' : val;\r\n            return (\r\n                <option key={i} value={val}>{disp}</option>\r\n            );\r\n        });\r\n    }, [stepList]);\r\n\r\n    /** ディグリーネーム絞り込みのコンボボックス */\r\n    const degreeOptionJsxListArray: JSX.Element[][] = useMemo(() => {\r\n        return [ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 先頭のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        }), ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 2番目のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        })];\r\n    }, [degreeFilters]);\r\n\r\n    /** リストに表示する進行ユニットのJSX */\r\n    const [progUnitList, progJsxList] = useMemo(() => {\r\n        if(props.beat === '') return [[], [<></>]];\r\n        const beat = props.beat as BeatSignature;\r\n        const unitList = ProgSearcher.search({\r\n            beat: props.beat,\r\n            step, firstChord: degreeFilters[0], secondChord: degreeFilters[1]\r\n        });\r\n        const jsx = unitList.map((unit, i) => {\r\n            const isActive = focusIndex === i;\r\n\r\n            // 表示する進行ユニット\r\n            const dispUnitJsx: JSX.Element[] = [];\r\n            let totalBeat = 0;\r\n            const beatCycle = TheoryUtil.getBeatProps(beat).barBeatCnt;\r\n            unit.chordList.forEach((chord, i) => {\r\n                const degreeRoot = TheoryUtil.getDegreeRoot(chord.root);\r\n                const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey).name;\r\n                const chordName = degreeRoot + symbolName;\r\n                if (i !== 0) {\r\n                    const divStr = totalBeat % beatCycle === 0 ? ' | ' : '・';\r\n                    dispUnitJsx.push(<_Span>{divStr}</_Span>);\r\n                }\r\n                let isMatch = false;\r\n                if(i === 0) {\r\n                    isMatch = degreeFilters[0] !== '';\r\n                } else if (i === 1) {\r\n                    isMatch = degreeFilters[1] !== '';\r\n                }\r\n                dispUnitJsx.push(<_ChordName isMatch={isMatch}>{chordName}</_ChordName>);\r\n                totalBeat += chord.beatLen;\r\n                // console.log(totalBeat);\r\n            });\r\n            return (\r\n                <_ProgItem key={i} isActive={isActive} onClick={() => {\r\n                    setFocusIndex(i);\r\n                }}>{dispUnitJsx}</_ProgItem>\r\n            )\r\n        });\r\n        return [unitList, jsx];\r\n    }, [props.beat, step, degreeFilters, focusIndex]);\r\n\r\n    const [\r\n        /** セクションカテゴリのoptionリスト */\r\n        secCatOptionJsxList,\r\n        /** セクション連番のoptionリスト */\r\n        secNoOptionJsxList,\r\n    ] = useMemo(() => {\r\n        const catList = DummyUtil.SECTION_CATEGORY.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        const noList = DummyUtil.SECTION_NO.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        return [catList, noList];\r\n    }, []);\r\n\r\n    /**\r\n     * 拍ステップ変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const stepChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setStep(Number(e.target.value) as ProgUtil.Step);\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n    /**\r\n     * ディグリーフィルター変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const degreeChangeAction = (e: React.ChangeEvent<HTMLSelectElement>, index: number) => {\r\n        const value = e.target.value as ProgUtil.DegreeFilter;\r\n        degreeFilters[index] = value;\r\n        if (index === 0 && value === '') {\r\n            degreeFilters[1] = '';\r\n        }\r\n        setDegreeFilters(degreeFilters.slice());\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n\r\n    /**\r\n     * リセットボタン押下時の処理\r\n     */\r\n    const resetAction = () => {\r\n\r\n    };\r\n\r\n    /**\r\n     * 追加ボタン押下時の処理\r\n     */\r\n    const insertAction = () => {\r\n        // セクション連番が設定されている場合のみ半角スペースで連結する\r\n        const secNoStr = secNo === '' ? '' : ` ${secNo}`;\r\n        const secName = secCategory + secNoStr;\r\n        props.insertProgUnit(progUnitList[focusIndex], secName);\r\n        setFocusIndex(-1);\r\n        setStep(0);\r\n        setDegreeFilters(['', '']);\r\n    };\r\n\r\n    /** セクションフォームの活性状態 */\r\n    const isEnableSectionForm = focusIndex !== -1;\r\n\r\n    return (\r\n        <_Frame isEnable={props.beat !== ''}>\r\n            {/* 拍ステップコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Step</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={150} value={step} onChange={(e) => {\r\n                    stepChangeAction(e);\r\n                }}>{stepOptionJsxList}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* ディグリーネームフィルターコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Chord</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={80} value={degreeFilters[0]} onChange={(e) => {\r\n                    degreeChangeAction(e, 0);\r\n                }}>{degreeOptionJsxListArray[0]}</ProgStyle._Combobox>\r\n                <ProgStyle._Combobox isEnable={degreeFilters[0] !== ''} width={90} value={degreeFilters[1]} onChange={(e) => {\r\n                    degreeChangeAction(e, 1);\r\n                }}>{degreeOptionJsxListArray[1]}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* 進行ユニットリスト */}\r\n            <_ListDiv><div>{progJsxList}</div></_ListDiv>\r\n            {/* セクション名 */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Section</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={isEnableSectionForm} width={150} value={secCategory} onChange={(e) => {\r\n                    setSecCategory(e.target.value);\r\n                }}>{secCatOptionJsxList}</ProgStyle._Combobox>\r\n                <ProgStyle._Combobox isEnable={isEnableSectionForm} width={80} value={secNo} onChange={(e) => {\r\n                    setSecNo(e.target.value);\r\n                }}>{secNoOptionJsxList}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* 実行ボタン */}\r\n            <_ButtonDiv>\r\n                <_ExecutableButton isEnable={true} onClick={resetAction}>Reset</_ExecutableButton>\r\n                <_ExecutableButton isEnable={focusIndex !== -1} onClick={insertAction}>Add</_ExecutableButton>\r\n            </_ButtonDiv>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgCustomFrame;\r\n\r\nconst BUTTON_DIV_HEIGHT = 40;\r\nconst RECORD_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 条件レコード\r\n */\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${RECORD_HEIGHT}px;\r\n    /* background-color: #d5eae4; */\r\n    /* margin: 2px 0 0 0; */\r\n    text-align: left;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 進行リスト\r\n */\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${RECORD_HEIGHT * 3 + BUTTON_DIV_HEIGHT}px);\r\n    /* background-color: #babaa8; */\r\n    text-align: left;\r\n    & >div{\r\n        display: inline-block;\r\n        width: calc(100% - 8px);\r\n        height: calc(100% - 8px);\r\n        margin: 4px 0 0 4px;\r\n        background-color: #dde0e7;\r\n        box-sizing: border-box;\r\n        border: 1px solid #797979;\r\n        overflow-y: auto;\r\n    }\r\n`;\r\n\r\nconst _ProgItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #00000010;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f6ff0062;\r\n    `}\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n`;\r\n\r\nconst _ChordName = styled.span<{\r\n    isMatch: boolean;\r\n}>`\r\n    color: #000f59;\r\n    ${props => !props.isMatch ? '' : css`\r\n        color: #a0000d;\r\n        /* background-color: #5eff0061; */\r\n    `}\r\n`;\r\nconst _Span = styled.span<{\r\n}>`\r\n    color: #0000005d;\r\n`;\r\n\r\n/**\r\n * ボタンエリア（画面汎用）\r\n */\r\nconst _ButtonDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BUTTON_DIV_HEIGHT}px;\r\n    /* background-color: #94babd; */\r\n    text-align: center;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #737d94;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #505971;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #8da0b0;\r\n    }\r\n`;","import { useContext, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { DetailChord, DetailFixed, DetailSection } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行の出力画面のコンポーネント\r\n * @param props ブロックリスト\r\n * @returns コンポーネント\r\n */\r\nconst ProgOutputFrame = (props: {\r\n    blockList: ProgUtil.BlockProps[];\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const blockJsxList = props.blockList.map((block, i) => {\r\n        const isFixed = block.chordList == undefined;\r\n        const labelName = isFixed ? (block.label as DetailFixed).fixed :\r\n            (block.label as DetailSection).labelName;\r\n\r\n        const getChordListJsx = () => {\r\n            return (block.chordList as DetailChord[]).map((chord, j) => {\r\n\r\n                const getBeatTipsJsx = () => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let k = 0; k < chord.beatLen; k++) {\r\n                        jsxList.push(<_BeatTip key={k} />);\r\n                    }\r\n                    return jsxList;\r\n                }\r\n                let chordName = 'none';\r\n                if (chord.root !== null) {\r\n                    const degreeRoot = TheoryUtil.getDegreeRoot({\r\n                        index: chord.root.index,\r\n                        isFlat: chord.root.isFlat\r\n                    });\r\n                    const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey)?.name;\r\n                    chordName = degreeRoot + symbolName;\r\n                }\r\n                return (\r\n                    <_ChordItem key={j}>\r\n                        <_ChordNameLabel>{chordName}</_ChordNameLabel>\r\n                        <_ChordBeatDiv>{getBeatTipsJsx()}</_ChordBeatDiv>\r\n                    </_ChordItem>\r\n                );\r\n            });\r\n        }\r\n        const inner = isFixed ? (\r\n            <_FixedItem>{labelName}</_FixedItem>\r\n        ) : (<>\r\n            <_SectionItem>{labelName}</_SectionItem>\r\n            <_ChordListDiv>{getChordListJsx()}</_ChordListDiv>\r\n        </>);\r\n        return (\r\n            <_Block key={i} isFixed={isFixed}>{inner}</_Block>\r\n        );\r\n    });\r\n    return (\r\n        <_Frame>\r\n            {blockJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgOutputFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Block = styled.div<{\r\n    isFixed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    background-color: #e8e4c5;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #7e7e7ee8; */\r\n    text-align: center;\r\n    ${props => !props.isFixed ? '' : css`\r\n        text-align: left;\r\n    `}\r\n`;\r\n\r\nconst _FixedItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 200px;\r\n    background-color: #b14272;\r\n    border-radius: 2px 15px 15px 2px;\r\n    color: white;\r\n    margin: 5px 0 5px 5px;\r\n`;\r\n\r\nconst _SectionItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 120px;\r\n    background-color: #4297b1;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 0;\r\n`;\r\n\r\nconst _ChordListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    /* height: 100px; */\r\n    padding: 0 5px 5px 0;\r\n    background-color: #c2d6dd1e;\r\n    border: solid 2px #ab4343;\r\n    border-radius: 8px;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 5px 0;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 45px;\r\n    background-color: #676767;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 5px;\r\n`;\r\n\r\nconst _ChordNameLabel = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    padding: 0 20px;\r\n    /* background-color: #b38282; */\r\n    color: white;\r\n`;\r\n\r\nconst _ChordBeatDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    height: 25px;\r\n    min-width: 100%;\r\n    /* background-color: #c5adad; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _BeatTip = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    height: calc(100% - 12px);\r\n    margin: 6px 2px 0 2px;\r\n    background-color: #ddd796;\r\n    border-radius: 2px;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ProgTemplateFrame = (props: {\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    const templateJsxList = useMemo(() => {\r\n        return ['short major 01', 'short major 02', 'short minor 01'].map((val, i) => {\r\n            return (\r\n                <_Item key={i}>{val}</_Item>\r\n            );\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame>\r\n            {templateJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgTemplateFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #87b4b4;\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n    color: #eb0000;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgCustomFrame from \"./progCustomFrame\";\r\nimport ProgOutputFrame from \"./progOutputFrame\";\r\nimport ProgSearcher from \"./progSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgTemplateFrame from \"./progTemplateFrame\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行を構成して譜面のベースを作成するダイアログ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ChordProgDialog = (props: {\r\n    setScoreData: (scoreData: ScoreData) => void;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** 生成モード（ブランク、カスタム、テンプレート） */\r\n    const [buildMode, setBuildType] = useState<ProgUtil.BuildType>('blank');\r\n    /** 出力する進行ユニットのリスト */\r\n    const [outputUnits, setOutputUnits] = useState(ProgUtil.getBlankBlockList());\r\n    /** 拍子フィルター */\r\n    const [beatFilter, setBeatFilter] = useState<'' | BeatSignature>('');\r\n\r\n    /**\r\n     * Closeボタン押下時の処理\r\n     */\r\n    const closeAction = () => {\r\n        store.systemState.dialog = null;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    /**\r\n     * Startボタン押下時の処理\r\n     */\r\n    const startAction = () => {\r\n        const scoreData = ProgUtil.buildScoreData(outputUnits);\r\n        props.setScoreData(scoreData);\r\n        closeAction();\r\n        // Editタブに遷移\r\n        store.systemState.scoreTabIndex = 1;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    const getSwitchContJsx = () => {\r\n        switch (buildMode) {\r\n            case 'blank': return <></>;\r\n            case 'custom': return <ProgCustomFrame beat={beatFilter} insertProgUnit={insertProgUnit} />;\r\n            case 'template': return <ProgTemplateFrame />;\r\n        }\r\n    };\r\n\r\n    /** 拍フィルターのオプションリストJSX */\r\n    const beatOptionJsxList = useMemo(() => {\r\n        if (buildMode === 'blank') {\r\n            return [(\r\n                <option key={0} value={''}></option>\r\n            )];\r\n        } else {\r\n            return [''].concat(TheoryUtil.BEAT_DEF_LIST).map((val, i) => {\r\n                return (\r\n                    <option key={i} value={val}>{val}</option>\r\n                );\r\n            });\r\n        }\r\n    }, [buildMode]);\r\n\r\n    const beatChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setBeatFilter(e.target.value as BeatSignature);\r\n    }\r\n\r\n    const insertProgUnit = (unit: ProgSearcher.UnitBean, secName: string) => {\r\n        const block: ProgUtil.BlockProps = {\r\n            label: { labelName: secName },\r\n            chordList: unit.chordList.map((chord) => {\r\n                const chordDetail = ProgUtil.getDefaultChord();\r\n                chordDetail.beatLen = chord.beatLen;\r\n                chordDetail.symbolKey = chord.symbolKey;\r\n                chordDetail.root = chord.root;\r\n                return chordDetail;\r\n            })\r\n        }\r\n        outputUnits.splice(outputUnits.length - 1, 0, block);\r\n        setOutputUnits(outputUnits.slice());\r\n    }\r\n\r\n    /**\r\n     * 切り替え式ボタンのJSXを返すクロージャ\r\n     * @param labelName ラベル名\r\n     * @param clickEvent 押下時の処理\r\n     * @param isActive 選択中かどうか\r\n     * @returns JSX\r\n     */\r\n    const createSwitchableButton = (\r\n        labelName: string,\r\n        isActive: boolean,\r\n        clickEvent: () => void\r\n    ) => {\r\n        return (\r\n            <_SwitchableButton isActive={isActive}\r\n                onClick={clickEvent}\r\n            >{labelName}</_SwitchableButton>\r\n        );\r\n    }\r\n\r\n    const beatComboboxEnable = outputUnits.length <= 2;\r\n\r\n    // Blankモードの時は空白を表示\r\n    const distBeatFilter = buildMode === 'blank' ? '' : beatFilter;\r\n    return (\r\n        <_Frame >\r\n            <_Header>\r\n                {createSwitchableButton('Blank', buildMode === 'blank', () => {\r\n                    setOutputUnits(ProgUtil.getBlankBlockList());\r\n                    setBuildType('blank');\r\n                })}\r\n                {createSwitchableButton('Custom', buildMode === 'custom', () => {\r\n                    setOutputUnits(ProgUtil.getInitialBlockList());\r\n                    setBuildType('custom');\r\n                })}\r\n                {createSwitchableButton('Template', buildMode === 'template', () => {\r\n                    setOutputUnits([]);\r\n                    setBuildType('template');\r\n                })}\r\n            </_Header>\r\n            <_MainDiv>\r\n                <_LeftDiv isEnable={buildMode !== 'blank'}>\r\n                    <_BeatFormDiv>\r\n                        <ProgStyle._TitleLabel>Beat</ProgStyle._TitleLabel>\r\n                        <ProgStyle._Combobox value={distBeatFilter} isEnable={beatComboboxEnable} width={150}\r\n                            onChange={(e) => {\r\n                                beatChangeAction(e);\r\n                            }}>{beatOptionJsxList}</ProgStyle._Combobox>\r\n                    </_BeatFormDiv>\r\n                    {/* モードによって切り替えるコンテンツ（カスタムorテンプレート） */}\r\n                    <_SwitchDiv>{getSwitchContJsx()}</_SwitchDiv>\r\n                </_LeftDiv>\r\n                <_RightDiv>\r\n                    <ProgOutputFrame blockList={outputUnits} />\r\n                </_RightDiv>\r\n            </_MainDiv>\r\n            <_Footer>\r\n                {/* ダイアログを閉じる */}\r\n                <_ExecutableButton isEnable={true} onClick={closeAction}>Cancel</_ExecutableButton>\r\n                {/* 譜面を生成 */}\r\n                <_ExecutableButton isEnable={true} onClick={startAction}>Start</_ExecutableButton>\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ChordProgDialog;\r\n\r\nconst HEADER_HEIGHT = 50;\r\nconst FOOTER_HEIGHT = 50;\r\nconst BEAT_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 1024px;\r\n    height: 768px;\r\n    z-index: 11;\r\n    /* top: 100px;\r\n    left: 100px; */\r\n    /* width: calc(100% - 200px);\r\n    height: calc(100% - 200px); */\r\n    background-color: #929292;\r\n    border: solid 2px #404250;\r\n    border-radius: 8px;\r\n    /* border: 1px solid #dadada; */\r\n`;\r\n\r\n/**\r\n * ヘッダー\r\n */\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #7d8d97;\r\n    text-align: center;\r\n`;\r\n\r\n/**\r\n * メインコンポーネント\r\n */\r\nconst _MainDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_HEIGHT + FOOTER_HEIGHT}px);\r\n    /* background-color: #7d8d97; */\r\n    text-align: left;\r\n`;\r\n\r\n/**\r\n * 左側のコンポーネント\r\n */\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n   display: inline-block;\r\n   vertical-align: top;\r\n   width: calc(50% - 6px);\r\n   height: calc(100% - 8px);\r\n   background-color: #bdced8;\r\n   text-align: left;\r\n   margin: 4px 2px 4px 4px;\r\n   ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 拍選択\r\n */\r\nconst _BeatFormDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BEAT_HEIGHT}px;\r\n    /* background-color: #b4c7ba; */\r\n    padding: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _BeatSelect = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    text-align: left;\r\n    color: black;\r\n    vertical-align: top;\r\n    line-height: 24px;\r\n    width: 210px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 5px;\r\n`;\r\n\r\n\r\n/**\r\n * テンプレートとカスタムの切り替えコンテンツ表示\r\n */\r\nconst _SwitchDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    background-color: #cedbd7;\r\n    border: 1px solid #696969;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - ${BEAT_HEIGHT + 10}px);\r\n`;\r\n\r\n/**\r\n * 右側のコンポーネント\r\n */\r\nconst _RightDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    width: calc(50% - 6px);\r\n    height: calc(100% - 8px);\r\n    background-color: #bdced8;\r\n    text-align: left;\r\n    margin: 4px 4px 4px 2px;\r\n`;\r\n\r\n/**\r\n * フッター\r\n */\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n    & *{\r\n        margin: 10px 5px 0 0;\r\n    }\r\n`;\r\n\r\n/**\r\n * スイッチボタン\r\n */\r\nconst _SwitchableButton = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #5083c5;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c5b950;\r\n    `};\r\n    width: 200px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #375176;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #77a7e6;\r\n    ${props => !props.isActive ? '' : css`\r\n            background-color: #c5b950;\r\n    `};\r\n}\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #2d5625;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../utils/cacheUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ChordProgDialog from \"./chordProg/chordProgDialog\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [file, setFile] = useState<null | File>(null);\r\n\r\n    const fileHandle = store.scoreState.fileHandle;\r\n    const data = store.scoreData;\r\n    const tabIndex = store.systemState.scoreTabIndex;\r\n\r\n    const [fileInfo, scoreInfo]: [{\r\n        name: string;\r\n        size: string;\r\n        modified: string;\r\n    }, {\r\n        key: string;\r\n        tempo: string;\r\n        rate: string;\r\n        section: string;\r\n        chord: string;\r\n        bar: string;\r\n        time: string;\r\n        notes: string;\r\n    }] = useMemo(() => {\r\n        let name = '-';\r\n        let size = '-';\r\n        let modified = '-';\r\n        let key = '-';\r\n        let tempo = '-';\r\n        let rate = '-';\r\n        let section = '-';\r\n        let chord = '-';\r\n        let bar = '-';\r\n        let time = '-';\r\n        let notes = '-';\r\n        if (tabIndex === 0) {\r\n            if (file != null) {\r\n                name = file.name;\r\n                size = `${file.size.toString()} byte`;\r\n                modified = DataUtil.getStringFromDate(new Date(file.lastModified));\r\n            }\r\n            if (data.chordList.length > 0) {\r\n                const init = data.chordList[0].detail as DetailInit;\r\n                key = `${TheoryUtil.KEY12_MAJOR_SCALE_LIST[init.keyIndex]} ${init.scale}`;\r\n                tempo = init.bpm.toString();\r\n                rate = init.beatSignature;\r\n                let sectionNum = 0;\r\n                let chordNum = 0;\r\n                data.chordList.forEach(chord => {\r\n                    switch (chord.type) {\r\n                        case 'section': sectionNum++; break;\r\n                        case 'chord': chordNum++; break;\r\n                    }\r\n                });\r\n                section = sectionNum.toString();\r\n                chord = chordNum.toString();\r\n\r\n                const cacheList = store.scoreState.elementCacheList;\r\n                if (cacheList.length > 0) {\r\n                    const last = cacheList[cacheList.length - 1];\r\n                    time = `${last.pastSecond / 1000}s`;\r\n                    bar = `${last.bar} (${last.surplusBeat})`;\r\n                }\r\n                notes = data.notesList.length.toString();\r\n            }\r\n        }\r\n        return [{\r\n            name, size, modified\r\n        }, {\r\n            key, tempo, rate, section, chord, bar, time, notes\r\n        }]\r\n    }, [tabIndex, data, file]);\r\n\r\n    useEffect(() => {\r\n        if (tabIndex === 0 && fileHandle != null) {\r\n            fileHandle.getFile().then(file => {\r\n                setFile(file);\r\n            });\r\n        }\r\n    }, [tabIndex]);\r\n\r\n    const setScoreData = ((data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    });\r\n\r\n    /**\r\n     * ラベルフォームを生成する\r\n     * @param labelName ラベル名\r\n     * @param labelValue 値\r\n     * @returns JSX\r\n     */\r\n    const createLabelRecord = (labelName: string, labelValue: string) => {\r\n        return (\r\n            <_Recored>\r\n                <_ItemnLabel>{labelName}</_ItemnLabel>\r\n                <_ItemnValue>{labelValue}</_ItemnValue>\r\n            </_Recored>\r\n        );\r\n    }\r\n\r\n\r\n    const searchLocalFileAction = () => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            // console.log(fileContents);\r\n            store.scoreState.fileHandle = fileHandle;\r\n            setFile(file);\r\n            const text = DataUtil.unZip(fileContents);\r\n            // const text = fileContents;\r\n            console.log(text);\r\n            setScoreData(JSON.parse(text));\r\n        })();\r\n    }\r\n\r\n    const disconnectAction = () => {\r\n        store.scoreState.fileHandle = null;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n        setFile(null);\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n        <_ButtonsDiv>\r\n            <_Button onClick={()=> {\r\n                store.systemState.dialog = <ChordProgDialog setScoreData={setScoreData}/>;\r\n                dispatcher.system.setState(store.systemState);\r\n            }}>new score</_Button>\r\n            <_Button onClick={searchLocalFileAction}>load file</_Button>\r\n            <_Button onClick={searchLocalFileAction}>search local</_Button>\r\n            <_Button onClick={disconnectAction}>disconnect</_Button>\r\n        </_ButtonsDiv>\r\n            <_MainDiv>\r\n                <_Left>\r\n                    <_ListInfoDiv isEnable={true}>\r\n\r\n                    </_ListInfoDiv>\r\n                    {/* <_Link onClick={() => {\r\n\r\n                    const data: ScoreData = {\r\n                        chordList: [\r\n                            { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' } as DetailInit },\r\n                            { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                            { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                            {\r\n                                type: 'chord', detail: {\r\n                                    beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                    backing: {\r\n                                        voicingList: [],\r\n                                        pattern: null,\r\n                                        hasError: false\r\n                                    }\r\n                                } as DetailChord\r\n                            },\r\n                            { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                        ],\r\n                        notesList: []\r\n                    };\r\n                    // setSource(JSON.stringify(data));\r\n                    setData(data);\r\n                }} >Create an empty score.</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅰ→Ⅴ→Ⅵ→Ⅲm→Ⅳ→Ⅰ→Ⅱm→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅵm→Ⅳ→Ⅴ→Ⅰ→Ⅵm→Ⅳ→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', beatSignature: '4/4' });\r\n                    builder.addChordDiatonic(4, 3);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChordDiatonic(4, 2);\r\n                    builder.addChordDiatonic(4, 5);\r\n                    builder.addChordDiatonic(4, 1);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChord(4, { index: 0, isFlat: false }, 'suspend4th');\r\n                    builder.addChordDiatonic(4, 0);\r\n                    // setSource(JSON.stringify(builder.getScoreData()));\r\n                    setData(builder.getScoreData());\r\n                }} >Ⅳ→Ⅴ→Ⅲm→Ⅵm→Ⅱm→Ⅴ→Ⅰsus4→Ⅰ</_Link> */}\r\n                </_Left>\r\n                <_Right>\r\n                    {/* <_Source value={source} onChange={e => setSource(e.target.value)} /> */}\r\n\r\n                    <_DataInfoDiv isEnable={fileHandle != null}>\r\n                        <_TitleLabel>DATA</_TitleLabel>\r\n                        {createLabelRecord('file', fileInfo.name)}\r\n                        {createLabelRecord('name', fileInfo.name)}\r\n                        {createLabelRecord('url', fileInfo.name)}\r\n                        {createLabelRecord('size', fileInfo.name)}\r\n                        {/* {createLabelRecord('size', fileInfo.size)}\r\n                        {createLabelRecord('modified', fileInfo.modified)} */}\r\n                    </_DataInfoDiv>\r\n                    <_ScoreInfoDiv isEnable={data.chordList.length > 0}>\r\n                        <_TitleLabel>SCORE</_TitleLabel>\r\n                        {createLabelRecord('key', scoreInfo.key)}\r\n                        {createLabelRecord('tempo', scoreInfo.tempo)}\r\n                        {createLabelRecord('rate', scoreInfo.rate)}\r\n                        {createLabelRecord('section', scoreInfo.section)}\r\n                        {createLabelRecord('chord', scoreInfo.chord)}\r\n                        {createLabelRecord('bar', scoreInfo.bar)}\r\n                        {createLabelRecord('time', scoreInfo.time)}\r\n                        {createLabelRecord('notes', scoreInfo.notes)}\r\n                    </_ScoreInfoDiv>\r\n                </_Right>\r\n            </_MainDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #8a6b6b; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #969696; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\n// const _Source = styled.textarea`\r\n//     display: inline-block;\r\n//     width: calc(100% - 8px);\r\n//     margin: 4px 0 0 4px;\r\n//     height: calc(100% - 44px);\r\n//     /* background-color: #7e7e7e; */\r\n//     text-align: left;\r\n//     font-size: 20px;\r\n//     resize: none;\r\n//     box-sizing: border-box;\r\n//     color: #060053;\r\n// `;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    height: calc(100% - 48px);\r\n    background-color: #ffffff;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst DATA_INFO_HEIGHT = 260;\r\n\r\nconst _DataInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${DATA_INFO_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #9da5af;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ScoreInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${DATA_INFO_HEIGHT + 12}px);\r\n    margin: 0 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #ad0000;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c5;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\n\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #888888;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    border: 1px solid #000744;\r\n    color: #04274e;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    &:hover {\r\n        background-color: #98bfc2;\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : TheoryUtil.getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: TheoryUtil.SymbolKey[] = [];\r\n        const parentLine: TheoryUtil.SymbolKey[] = [];\r\n        const childrenLine: TheoryUtil.SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = TheoryUtil.getSymbolDerives(baseSymbol.key);\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = TheoryUtil.getSymbolDerives(curSymbol.key);\r\n        TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\nimport { DetailChord } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = TheoryUtil.getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = TheoryUtil.getRootName({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = TheoryUtil.getRootName({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        // 見た目上１から数えるため\r\n        bar = cache.bar + 1;\r\n    }\r\n    // 小節変更タイミングで、余りの拍がある（頭でない）場合エラー\r\n    const isError = bar !== -1 && cache.surplusBeat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n        if(chordOn != null) {\r\n            chordName += `/${chordOn}`;\r\n        }\r\n    }\r\n\r\n    let minuteStr = '';\r\n    if(cache.minute !== 0) {\r\n        switch(cache.minute) {\r\n            case 1: minuteStr = '→/16'; break;\r\n            case 2: minuteStr = '→/8'; break;\r\n            case -1: minuteStr = '←/16'; break;\r\n            case -2: minuteStr = '←/8'; break;\r\n        }\r\n    }\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.surplusBeat === 0 ? <>&nbsp;</> : cache.surplusBeat}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : minuteStr}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailAlter = (props: {\r\n    detail: DetailAlter;\r\n}) => {\r\n\r\n    const type = props.detail.alterType;\r\n\r\n    const getDetailInfo = (): string => {\r\n        let ret = '-';\r\n        if (type != null) {\r\n            switch (type) {\r\n                case 'modulate': {\r\n\r\n                    const modRel = props.detail.modRel;\r\n                    if (modRel != null) {\r\n                        switch (modRel) {\r\n                            case 'domm': {\r\n                                const val = props.detail.dommVal;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                            case 'relative':\r\n                            case 'parallel': {\r\n                                ret = modRel;\r\n                            } break;\r\n                            case 'key': {\r\n                                const val = props.detail.keyAdj;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                        }\r\n                    }\r\n                } break;\r\n                case 'tempo' : {\r\n                    const tempoRel = props.detail.tempoRel;\r\n                    switch(tempoRel) {\r\n                        case 'diff': {\r\n                            const val = props.detail.tempoDiff;\r\n                            const sign = val > 0 ? '+' : ''; \r\n                            ret = `${tempoRel}: ${sign}${val}`;\r\n                        } break;\r\n                        case 'rate': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoRate}%`;\r\n                        } break;\r\n                        case 'abs': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoAbs}`;\r\n                        } break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                {type == null ? 'alter' : type}\r\n            </_Type>\r\n            <_Detail>\r\n                {getDetailInfo()}\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, Scale } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 2 | 1;\r\n\r\n/**\r\n * コードブロックのコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isSustainMode: boolean;\r\n    isCurrent: boolean;\r\n    keyIndex: number;\r\n    scale: Scale;\r\n}) => {\r\n\r\n    const minute = props.detail.minute;\r\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() => {\r\n\r\n        // const keySwitch = store.scoreState.keySwitch;\r\n        const chordBacking = props.detail.backing;\r\n        let degreeRoot: null | string = null;\r\n        let degreeOn: null | string = null;\r\n        let chordRoot: null | string = null;\r\n        let chordOn: null | string = null;\r\n\r\n        if (props.detail.root != null) {\r\n            degreeRoot = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            });\r\n            chordRoot = TheoryUtil.getRootName({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, props.keyIndex);\r\n\r\n            if (props.detail.on != null) {\r\n                degreeOn = TheoryUtil.getDegreeRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.on.isFlat\r\n                });\r\n                chordOn = TheoryUtil.getRootName({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.root.isFlat\r\n                }, props.keyIndex);\r\n            }\r\n        }\r\n\r\n        const diatonicList = TheoryUtil.getDiatonicDegreeList(props.scale);\r\n        const isDiatonic = diatonicList.includes(degreeRoot + symbolName);\r\n\r\n        return <_Wrap>\r\n            <_Degree\r\n                // isSwitch={keySwitch.sustainMode && props.isCurrent}\r\n                isSwitch={props.isSustainMode}\r\n                scaleRelation={degreeRoot != null && isDiatonic ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}{symbolName}{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeRoot>\r\n                    {/* <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord> */}\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={props.isSustainMode}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n            <_Backing>\r\n                {chordBacking.hasError ? <_Error /> : <>\r\n                    {chordBacking.voicingList.length === 0 ? '' : <_Voicing />}\r\n                    {chordBacking.voicingList.length === 0 ? '' : chordBacking.pattern == null ? '' : <_Pattern />}\r\n                </>}\r\n            </_Backing>\r\n        </_Wrap>\r\n    }\r\n        , [\r\n            props.scale,\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            props.isSustainMode,\r\n            props.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail,\r\n            props.detail.backing\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: TheoryUtil.ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 18px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #4e5163cc;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 2 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 1 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Backing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 6px;\r\n    /* background-color: #00a048; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _Error = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background-color: #af3838;\r\n`;\r\n\r\nconst _Voicing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 2px 0 0;\r\n    height: 4px;\r\n    border-radius: 4px 0 0 4px;\r\n    border: solid 1px #0000004e;\r\n    background-color: #acb6ca;\r\n`;\r\n\r\nconst _Pattern = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 0 0 2px;\r\n    height: 4px;\r\n    border-radius: 0 4px 4px 0;\r\n    border: solid 1px #0000004e;\r\n    background-color: #accab3;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    // const jsxList: JSX.Element[] = [];\r\n    // jsxList.push(<_Border key={0} />);\r\n    // jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    const value = props.detail.fixed;\r\n    return (\r\n        <_Wrap isStart={value === 'Start'}>\r\n            {/* {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()} */}\r\n            <_Label>{value}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div<{\r\n    isStart: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    border-left: 1px solid #00000083;\r\n    border-top: 1px solid #00000083;\r\n    border-right: 1px solid #00000083;\r\n    /* border: 1px solid #00000083; */\r\n    box-sizing: border-box;\r\n    background-color: #9b9b9b1f;\r\n    ${props => props.isStart ? css`\r\n        border-radius: 0 35px 0 0;\r\n    ` : css`\r\n        border-radius: 35px 0 0 0;\r\n    `}\r\n`;\r\n\r\n// const _Border = styled.div`\r\n//     display: inline-block;\r\n//     width: 10px;\r\n//     height: 100%;\r\n//     background-color: #b4b4b4;\r\n//     vertical-align: middle;\r\n// `;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    /* width: calc(100% - 10px); */\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #960000b0;\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    /* vertical-align: middle; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{TheoryUtil.KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.beatSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailSection } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailSection = (props: {\r\n    detail: DetailSection;\r\n}) => {\r\n    // const { store } = useContext(GlobalContext);\r\n\r\n    // const state = store.scoreState;\r\n    // const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    // const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Label>{curSection.labelName}</_Label> */}\r\n            <_Label>{props.detail.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcAlter = (props: {\r\n    detail: DetailAlter;\r\n    prevCache: ScoreCache.Element;\r\n    curCache: ScoreCache.Element;\r\n}) => {\r\n\r\n    const getType = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate': return 'Key';\r\n            case 'tempo': return 'Tempo';\r\n            case 'beat': return 'Beat';\r\n        }\r\n    }\r\n    const getDetail = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate':{\r\n                const prevKey = TheoryUtil.KEY12_SHARP_LIST[props.prevCache.keyIndex] + (props.prevCache.scale === 'major' ? '' : 'm');\r\n                const curKey = TheoryUtil.KEY12_SHARP_LIST[props.curCache.keyIndex] + (props.curCache.scale === 'major' ? '' : 'm');\r\n                return `${prevKey}→${curKey}`;\r\n            }\r\n            case 'tempo':{\r\n                const prevTempo = props.prevCache.bpm;\r\n                const curTempo = props.curCache.bpm;\r\n                return `${prevTempo}→${curTempo}`;\r\n            }\r\n            case 'beat':{\r\n                const prevBeat = props.prevCache.beatSignature;\r\n                const curBeat = props.curCache.beatSignature;\r\n                return `${prevBeat}→${curBeat}`;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Type>{getType()}</_Type>\r\n            <_Detail>{getDetail()}</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\ntype ChordDefBean = {\r\n    root: TheoryUtil.DegreeProps;\r\n    symbolKey: TheoryUtil.SymbolKey;\r\n}\r\n\r\nconst ChordEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n    }, [detail.root, detail.symbolKey]);\r\n\r\n    const getChord = (index: number, isFlat: boolean, symbolKey: TheoryUtil.SymbolKey): ChordDefBean => {\r\n        return { root: { index, isFlat }, symbolKey };\r\n    }\r\n\r\n    const createRow = (label: JSX.Element, chordList: ChordDefBean[]): JSX.Element => {\r\n        const listJsx: JSX.Element[] = [];\r\n        listJsx.push(<_Header key={listJsx.length}>{label}</_Header>);\r\n        chordList.forEach((chord) => {\r\n            const rootName = TheoryUtil.getDegreeRoot(chord.root);\r\n            const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey).name;\r\n            listJsx.push(\r\n                <_Item isActive={false} key={listJsx.length}>\r\n                    {rootName + symbolName}\r\n                </_Item>);\r\n        });\r\n        return <_Row>{listJsx}</_Row>;\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {createRow(<>triad</>, [\r\n                getChord(0, false, 'major'),\r\n                getChord(2, false, 'minor'),\r\n                getChord(4, false, 'minor'),\r\n                getChord(5, false, 'major'),\r\n                getChord(7, false, 'major'),\r\n                getChord(9, false, 'minor'),\r\n                getChord(11, false, 'minor-minus5'),\r\n            ])}\r\n            {/* {createRow(<>Tetrad</>, [\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'minor-7th'),\r\n                getChord(4, false, 'minor-7th'),\r\n                getChord(5, false, 'major-maj7th'),\r\n                getChord(7, false, 'major-min7th'),\r\n                getChord(9, false, 'minor-7th'),\r\n                getChord(11, false, 'minor7-minus5'),\r\n            ])} */}\r\n            {createRow(<>domm</>, [\r\n                getChord(9, false, 'major-min7th'),\r\n                getChord(11, false, 'major-min7th'),\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'major-min7th'),\r\n                getChord(4, false, 'major-min7th'),\r\n            ])}\r\n            {createRow(<>domm*</>, [\r\n                getChord(1, false, 'diminish'),\r\n                getChord(3, false, 'diminish'),\r\n                getChord(4, false, 'diminish'),\r\n                getChord(6, false, 'diminish'),\r\n                getChord(8, false, 'diminish'),\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    /* height: 160px; */\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    /* height: 100%; */\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport SymbolEditor from \"../tool/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailAlter from \"./form/elementDetailAlter\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcAlter from \"./calc/calcAlter\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { ScoreState } from \"../../../../../redux/store/score/scoreState\";\r\nimport ChordEditor from \"../tool/chordEditor\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n    element: ChordElement;\r\n    state: ScoreState;\r\n    setState: (state: ScoreState) => void;\r\n}) => {\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = props.state;\r\n    const keySwitch = state.keySwitch;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    // const chordList = store.scoreData.chordList;\r\n    // const element = chordList[props.index];\r\n    const element = props.element;\r\n    const cache = state.elementCacheList[props.index];\r\n    const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n    const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n    const isFocus = props.index >= distHead && props.index <= distTail;\r\n    const isRange = isFocus && distHead != distTail;\r\n    const isSameSection = isFocus || state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        props.setState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    const elementJson = JSON.stringify(element);\r\n\r\n    return useMemo(() => {\r\n        // console.log(`pos: ${props.index}`);\r\n        const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n        const isInactive = !(isSameSection || element.type === 'init');\r\n        return (\r\n            <_Wrap\r\n                ref={wrapRef}\r\n                isSelectable={element.type !== 'fixed'}\r\n                isActive={isFocus}\r\n                isInactive={isInactive}\r\n                isAdditional={['chord', 'section', 'alter', 'init'].includes(element.type)}\r\n            >\r\n                <_Head>\r\n                    {element.type !== 'chord' ? <></> : (\r\n                        <_CurKey>{TheoryUtil.getDisplayKeyScaleName(cache.keyIndex, cache.scale)}</_CurKey>\r\n                    )}\r\n                </_Head>\r\n\r\n                {/* 要素の入力フォーム */}\r\n                {['init', 'chord', 'section', 'alter'].includes(element.type) ? (\r\n                    <_Form\r\n                        ref={bodyRef}\r\n                        isActive={isFocus}\r\n                        isRange={isRange}\r\n                        isInactive={isInactive}\r\n                        type={element.type}\r\n                        isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                        onClick={() => {\r\n                            if (element.type === 'fixed') {\r\n                                return;\r\n                            }\r\n                            if (!state.keySwitch.distMode) {\r\n                                state.focusIndex = props.index;\r\n                                state.distIndex = state.focusIndex;\r\n                            } else {\r\n                                state.distIndex = props.index;\r\n                            }\r\n                            props.setState(state);\r\n                        }}\r\n                    >{(() => {\r\n                        switch (element.type) {\r\n                            case 'init': {\r\n                                const detail = element.detail as DetailInit;\r\n                                return (<ElementDetailInit detail={detail} />);\r\n                            }\r\n                            case 'section': {\r\n                                const detail = element.detail as DetailSection;\r\n                                return (<ElementDetailSection detail={detail} />);\r\n                            }\r\n                            case 'chord': {\r\n                                const detail = element.detail as DetailChord;\r\n                                return (<ElementDetailChord\r\n                                    detail={detail}\r\n                                    isCurrent={isFocus}\r\n                                    keyIndex={cache.keyIndex}\r\n                                    isSustainMode={isFocus && state.keySwitch.sustainMode}\r\n                                    scale={cache.scale}\r\n                                />);\r\n                            }\r\n                            case 'alter': {\r\n                                const detail = element.detail as DetailAlter;\r\n                                return (<ElementDetailAlter detail={detail} />);\r\n                            }\r\n                        }\r\n                    })()}\r\n                    </_Form>\r\n                ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n                {/* 入力フォーム下部の計算によって出力される情報 */}\r\n                {\r\n                    element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                        element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                            element.type === 'alter' ? (\r\n                                <CalcAlter\r\n                                    detail={element.detail as DetailAlter}\r\n                                    prevCache={state.elementCacheList[props.index - 1]}\r\n                                    curCache={cache}\r\n                                />\r\n                            ) :\r\n                                <></>\r\n                }\r\n                <>{!(isCurrent && chordDetail != null && state.keySwitch.chordMode) ? '' :\r\n                    <ChordEditor />\r\n                }</>\r\n                <>{!(isCurrent && chordDetail != null && chordDetail.root != null && state.keySwitch.symbolMode) ? '' :\r\n                    <SymbolEditor />\r\n                }</>\r\n                {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                    <_Operations>\r\n                        <_OperationItem>-</_OperationItem>\r\n                        <_OperationItem\r\n                        // onClick={() => dispatcher.score.addChordElement()}\r\n                        >+</_OperationItem>\r\n                    </_Operations>\r\n                )}\r\n            </_Wrap>\r\n        );\r\n    }, [\r\n        elementJson, isSameSection, isRange, isFocus,\r\n        keySwitch.chordMode, keySwitch.symbolMode, keySwitch.sustainMode\r\n    ]);\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isRange: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    /* border: solid 1px #00000049; */\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #df8484;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #44b168;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'alter' ? '' : css`\r\n        border: solid 1px #604fc0;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 4px;\r\n    ${props => props.isInactive ? '' : css`\r\n        /* background-color: #ebf1e2; */\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4c9df;\r\n        border: solid 1px #00000049;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n    ${props => !props.isRange ? '' : css`\r\n        background-color: #80d4e2;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isAdditional: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isAdditional ? '' : css`\r\n        /* background-color: #e8ff9549; */\r\n        background: linear-gradient(to bottom, transparent,transparent,transparent, #ffffff9e);\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #ffffff9b;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const cacheList = store.scoreState.elementCacheList;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (cacheList.length === chordList.length) {\r\n        for (let i = 0; i < cacheList.length; i++) {\r\n            list.push(\r\n                <ScoreElement key={list.length}\r\n                    index={i}\r\n                    element={chordList[i]}\r\n                    state={store.scoreState}\r\n                    setState={dispatcher.score.setScoreState}\r\n                />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {list}\r\n            {/* <_Frame> */}\r\n            {/* <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note> */}\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #d8d8d8;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    state.distIndex = state.focusIndex;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 46px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #97cce0dd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #929292;\r\n    /* border-radius: 20px 20px 20px 20px; */\r\n    border-radius: 2px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 25px;\r\n        font-size: 18px;\r\n        /* font-weight: 600; */\r\n        color: #4d4d4d;\r\n        /* background-color: #0000003a; */\r\n        line-height: 22px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 21px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #adadad39; */\r\n        line-height: 20px;\r\n    }\r\n`;","import { on } from \"stream\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\nimport { getKeyIndexFromPitcher, getNormalizeLenFromNotes } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nnamespace HarmonizeUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n        const state = store.scoreState;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        const reserveTasks = store.reserveTasks;\r\n        let firstTime = -1;\r\n        const update = () => {\r\n            // if (store.invalidate.harmonize) {\r\n            //     store.invalidate.harmonize();\r\n            // }\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = state.focusIndex; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                // 開始時のノーツの位置（時間）を保存する。\r\n                if (firstTime === -1) {\r\n                    firstTime = cache.pastSecond;\r\n                }\r\n\r\n\r\n                if (detail.root == null) continue;\r\n\r\n                // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\r\n                // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, cache.structList);\r\n\r\n                // const chordTime = 60 / cache.bpm * len;\r\n\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const chordTime = TheoryUtil.calcSustainMsec(\r\n                    detail.beatLen,\r\n                    minute,\r\n                    cache.bpm,\r\n                    cache.beatSignature\r\n                );\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        setTimeout(() => {\r\n                            update();\r\n                        }, 0);\r\n\r\n                    }, cache.pastSecond - firstTime - adjsut)\r\n                );\r\n            }\r\n\r\n            if (i === chordList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (cache.pastSecond - firstTime - adjsut))\r\n                );\r\n            }\r\n        }\r\n\r\n        // メロディを再生\r\n        if (!state.isSolo) {\r\n            previewMelody(firstTime / 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n        state.isPreview = true;\r\n        update();\r\n    }\r\n\r\n    const previewMelody = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const instrument = store.instruments.soundfontPlayer;\r\n\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = 0; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n\r\n            if (posTime < start) continue;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    dispatcher.melody.adjustScrollX();\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                    }, 0);\r\n                }, (posTime - start) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (posTime - start + lenTime) * 1000)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    // ハーモニーのプレビューを停止する。\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        state.isPreview = false;\r\n        // store.instruments.sampler.releaseAll();\r\n        // state.focusIndex = state.lastFocus;\r\n        reserveTasks.forEach(id => clearTimeout(id));\r\n        dispatcher.system.setReserveTasks([]);\r\n        dispatcher.score.setScoreState(state);\r\n\r\n        store.instruments.harmony?.stop();\r\n    }\r\n\r\n    // 選択中の要素のバッキングパターンを鳴らす\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.scoreState;\r\n        const reserveTasks = store.reserveTasks;\r\n        const cache = state.elementCacheList[state.focusIndex];\r\n        const curChord = store.scoreData.chordList[state.focusIndex];\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n            // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, cache.structList);\r\n            // const chordTime = 60 / cache.bpm * len;\r\n\r\n            const minute = detail.minute.head + detail.minute.tail;\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                detail.beatLen,\r\n                minute,\r\n                cache.bpm,\r\n                cache.beatSignature\r\n            );\r\n\r\n            BackingUtil.playBacking(store, store.reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.score.setScoreState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n    }\r\n}\r\n\r\nexport default HarmonizeUtil;\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\nimport { ChordBacking } from \"../../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\nimport { NoteKeySwitch } from \"../../../../../redux/store/score/scoreState\";\r\n\r\nnamespace BackingEditorInput {\r\n\r\n    export const main = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const data = store.scoreData;\r\n        const state = store.backingState;\r\n\r\n        if (state == null) return;\r\n\r\n        if (!state.isPreview) {\r\n            edit(e, state, keySwitch, dispatcher);\r\n        } else {\r\n\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const edit = (e: KeyboardEvent, state: BackingState.Editor, keySwitch: NoteKeySwitch, dispatcher: Dispatcher) => {\r\n\r\n        const pattern = state.pattern;\r\n\r\n        // 共通処理\r\n        common(e, state, dispatcher);\r\n\r\n        if (pattern != null) {\r\n            if (pattern.channelIndex === -1) {\r\n                patternNormalMode(e, state, pattern, dispatcher);\r\n            } else {\r\n                patternDetailMode(e, state, pattern, keySwitch.sustainMode, dispatcher);\r\n            }\r\n        }\r\n    }\r\n\r\n    const common = (e: KeyboardEvent, state: BackingState.Editor, dispatcher: Dispatcher) => {\r\n\r\n        switch (e.key) {\r\n            case 'b': {\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n            case 'z': {\r\n                const test: ChordBacking = {\r\n                    voicingList: BackingUtil.getVoicingListFromTable(state.voicingTable),\r\n                    pattern: state.pattern == null ? null : BackingUtil.buildPatternProps(state.pattern),\r\n                    hasError: state.hasError\r\n                }\r\n                console.log('source: ' + DataUtil.gZip(JSON.stringify(test)));\r\n                console.log('source: ' + JSON.stringify(test));\r\n            }\r\n                break;\r\n            case ' ': {\r\n                if (!state.hasError) {\r\n                    dispatcher.backing.testBacking();\r\n                }\r\n            }\r\n                break;\r\n            case 'Enter': {\r\n                dispatcher.backing.mappingEditorToScore();\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * パターン編集の通常モード\r\n     * @param e \r\n     * @param state \r\n     * @param pattern \r\n     * @param dispatcher \r\n     */\r\n    const patternNormalMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, dispatcher: Dispatcher) => {\r\n\r\n        const update = () => dispatcher.backing.setState(state);\r\n        switch (e.key) {\r\n            case 'ArrowLeft': {\r\n                dispatcher.backing.movePatternColumn(false);\r\n            }\r\n                break;\r\n            case 'ArrowRight': {\r\n                dispatcher.backing.movePatternColumn(true);\r\n            }\r\n                break;\r\n            case 'ArrowUp': {\r\n                dispatcher.backing.incrementVel(1);\r\n            }\r\n                break;\r\n            case 'ArrowDown': {\r\n                dispatcher.backing.incrementVel(-1);\r\n            }\r\n                break;\r\n            case 'a': {\r\n                dispatcher.backing.addPatternColumn();\r\n            }\r\n                break;\r\n            case 'w': {\r\n                dispatcher.backing.switchLayer();\r\n            }\r\n                break;\r\n            case 'e': {\r\n                dispatcher.backing.switchMode();\r\n            }\r\n                break;\r\n            case '1': {\r\n                dispatcher.backing.setCurrentDivRate(16);\r\n            }\r\n                break;\r\n            case '2': {\r\n                dispatcher.backing.setCurrentDivRate(8);\r\n            }\r\n                break;\r\n            case '3': {\r\n                dispatcher.backing.setCurrentDivRate(4);\r\n            }\r\n                break;\r\n            case '4': {\r\n                dispatcher.backing.setCurrentDivRate(2);\r\n            }\r\n                break;\r\n            case '5': {\r\n                dispatcher.backing.setCurrentDivRate(1);\r\n            }\r\n                break;\r\n            case '.': {\r\n                dispatcher.backing.toggleCurrentDivHalf();\r\n            }\r\n                break;\r\n            case 'Delete': {\r\n                dispatcher.backing.deleteColumn();\r\n            }\r\n                break;\r\n            case 's': {\r\n                pattern.channelIndex = 0;\r\n                update();\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * パターン編集の詳細モード\r\n     * @param e \r\n     * @param state \r\n     * @param pattern \r\n     * @param isEdit \r\n     * @param dispatcher \r\n     */\r\n    const patternDetailMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, isEdit: boolean, dispatcher: Dispatcher) => {\r\n\r\n        const update = () => dispatcher.backing.setState(state);\r\n        if (!isEdit) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft': {\r\n                    dispatcher.backing.movePatternColumn(false);\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    dispatcher.backing.movePatternColumn(true);\r\n                }\r\n                    break;\r\n                case 'ArrowUp': {\r\n                    dispatcher.backing.moveChannelIndex(false);\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.backing.moveChannelIndex(true);\r\n                }\r\n                    break;\r\n                case 's': {\r\n                    pattern.channelIndex = -1;\r\n                    update();\r\n                }\r\n                    break;\r\n                case 'a': {\r\n                    const curNotes = dispatcher.backing.getNotes();\r\n                    \r\n                    const hasStaccato = () => {\r\n                        const layer = pattern.layers[pattern.layerIndex];\r\n                        const search = layer.table.find((record) => {\r\n                            const cell = record[pattern.lenIndex];\r\n                            if (cell != null && cell.signal === 's') return cell;\r\n                        });\r\n                        return search != undefined;\r\n                    }\r\n                    // 同列にスタッカートがある場合、スタッカートを設定\r\n                    const signal = !hasStaccato() ? 'n' : 's';\r\n                    const notes: BackingState.NoteStatus | null = curNotes == null ? { signal, timing: 0, velAdj: 0 } : null;\r\n                    dispatcher.backing.setNotes(notes);\r\n                    dispatcher.backing.updateErrorState();\r\n                }\r\n                    break;\r\n            }\r\n        } else {\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const baseVel = layer.velocityList[pattern.layerIndex];\r\n            const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n            const cell = layer.table[channelIndex][pattern.lenIndex];\r\n\r\n            if (cell != null) {\r\n                let tempTiming = cell.timing == undefined ? 0 : cell.timing;\r\n                let tempVelAdj = cell.velAdj == undefined ? 0 : cell.velAdj;\r\n                const vel = baseVel + tempVelAdj;\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        if (vel < 10) {\r\n                            tempVelAdj++;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        if (vel > 1) {\r\n                            tempVelAdj--;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowLeft': {\r\n                        if (tempTiming > -10) {\r\n                            tempTiming--;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        if (tempTiming < 10) {\r\n                            tempTiming++;\r\n                        }\r\n                    }\r\n                        break;\r\n                }\r\n                if (tempVelAdj !== 0) {\r\n                    cell.velAdj = tempVelAdj;\r\n                } else {\r\n                    delete cell.velAdj;\r\n                }\r\n                if (tempTiming != 0) {\r\n                    cell.timing = tempTiming;\r\n                } else {\r\n                    delete cell.timing;\r\n                }\r\n                update();\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default BackingEditorInput;","import styled, { css } from \"styled-components\";\r\n\r\nexport namespace SideFormStyles {\r\n\r\n    export const ___CSS_FORM = css`\r\n        display: inline-block;\r\n        /* width: 100px; */\r\n        height: 25px;\r\n        background-color: #bdbdbd;\r\n        border: 1px solid #000;\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        color: #303030;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        text-align: center;\r\n    `;\r\n\r\n    export const ___CSS_TITLE = css`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 26px;\r\n        /* background-color: #f0f0f0; */\r\n        background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n        border: 1px solid #222222;\r\n        font-size: 20px;\r\n        color: #ffffff;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        box-sizing: border-box;\r\n        /* border: 1px solid #c50000; */\r\n        text-align: center;\r\n    `;\r\n\r\n    export const createNumberForm = (value: number, isEnable: boolean,\r\n         onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n         min: number, max:number, step:number) => {\r\n\r\n        return (\r\n            <_NumberForm isEnable={isEnable}>\r\n                <input\r\n                    type=\"number\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"range\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </_NumberForm>\r\n        );\r\n    }\r\n\r\n    const _NumberForm = styled.div<{\r\n        isEnable: boolean;\r\n    }>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 55px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 5px;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n    `;\r\n}","import { stat } from \"fs\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport BackingEditorInput from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    // プレビュー再生時\r\n    if (state.isPreview) {\r\n        switch (e.key) {\r\n            case ' ': {\r\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n        return;\r\n    } else {\r\n        if (store.scoreState.hideMenu === 'none') {\r\n            if (isElement) {\r\n                if (keySwitch.control) {\r\n                    switch (e.key) {\r\n                        case 'c': {\r\n                            const element = data.chordList[state.focusIndex];\r\n                            if (element.type === \"chord\") {\r\n                                const detail = element.detail as DetailChord;\r\n                                if (detail.root != null) {\r\n                                    dispatcher.score.cloneBacking();\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'x': {\r\n                            dispatcher.score.copyElementList();\r\n                        }\r\n                            break;\r\n                        case 'v': {\r\n                            if (state.copiedElementList != null) {\r\n                                dispatcher.score.pasteElementList();\r\n                            } else if (state.cloneBacking != null) {\r\n\r\n                                const element = data.chordList[state.focusIndex];\r\n                                if (element.type === \"chord\") {\r\n                                    const detail = element.detail as DetailChord;\r\n                                    if (detail.root != null) {\r\n                                        dispatcher.score.pastBacking();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 's': {\r\n                            // dispatcher.score.saveFile();\r\n                            DataUtil.saveFile(JSON.stringify(data), state);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.distMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.moveDist(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.moveDist(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.sustainMode) {\r\n                    switch (e.key) {\r\n                        case config.decRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(false);\r\n                        }\r\n                            break;\r\n                        case config.incRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(true);\r\n                        }\r\n                            break;\r\n                        case config.decBeat: {\r\n                            dispatcher.score.incrementBeatLen(false);\r\n                        }\r\n                            break;\r\n                        case config.incBeat: {\r\n                            dispatcher.score.incrementBeatLen(true);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minHeadMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, 1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(false, -1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.minTailMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, -1);\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.score.incrementMinuteValRelation(true, 1);\r\n                        }\r\n                            break;\r\n                    }\r\n                } else if (keySwitch.chordMode) {\r\n                    // switch (e.key) {\r\n                    //     case 'ArrowUp': {\r\n                    //         dispatcher.symbol.toNext(false);\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowDown': {\r\n                    //         dispatcher.symbol.toNext(true);\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowLeft': {\r\n                    //         dispatcher.symbol.toBase();\r\n                    //     }\r\n                    //         break;\r\n                    //     case 'ArrowRight': {\r\n                    //         dispatcher.symbol.toDerive();\r\n                    //     }\r\n                    //         break;\r\n                    // }\r\n                } else if (keySwitch.symbolMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.symbol.toNext(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.symbol.toNext(true);\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.symbol.toBase();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.symbol.toDerive();\r\n                        }\r\n                            break;\r\n                    }\r\n                } else {\r\n                    NoteBasicInput(e, store, dispatcher);\r\n                }\r\n            }\r\n        } else if (store.scoreState.hideMenu === 'backing') {\r\n            BackingEditorInput.main(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const state = store.scoreState;\r\n    if (!state.isPreview) {\r\n        // if (state.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case 'Control': {\r\n                keySwitch.control = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.distMode: {\r\n                if (!keySwitch.control) {\r\n                    keySwitch.distMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.edit1: {\r\n                if (!(keySwitch.control || keySwitch.distMode)) {\r\n                    keySwitch.sustainMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'v': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode)) {\r\n                    keySwitch.chordMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.edit2: {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode)) {\r\n                    keySwitch.symbolMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'd': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode)) {\r\n                    keySwitch.minHeadMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'g': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode || keySwitch.minHeadMode)) {\r\n                    keySwitch.minTailMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n        }\r\n        // }\r\n    }\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                }\r\n                    break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(cache.scale, Number(e.key) - 1);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.left: {\r\n            if(state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(false);\r\n            } else {\r\n                dispatcher.score.releaseRange(false);\r\n            }\r\n        }\r\n            break;\r\n        case config.right: {\r\n            if(state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(true);\r\n            } else {\r\n                dispatcher.score.releaseRange(true);\r\n            }\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.up: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.down: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'm': {\r\n            dispatcher.score.addAlterElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case ' ': {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        }\r\n            break;\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BeatSignature, DetailAlter as DetailAlter, AlterType, ModulateRelation, TempoRelation } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormAlter = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailAlter;\r\n\r\n    const type = detail.alterType;\r\n\r\n    const update = () => {\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const createAlertTypeItem = (value: AlterType | '-', isActive: boolean): JSX.Element => {\r\n        const type = value === '-' ? null : value;\r\n        return <_Form isActive={isActive}\r\n            onClick={() => {\r\n                //値が変わった時のみ処理を実行\r\n                if (detail.alterType !== type) {\r\n                    detail.alterType = type;\r\n                    // 全ての項目を初期化\r\n                    detail.modRel = null;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    detail.tempoRel = null;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    detail.beatSignature = '4/4';\r\n                    update();\r\n                }\r\n            }}> {value}</_Form >;\r\n    }\r\n\r\n    const createModulateRelationItem = (value: ModulateRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'modulate' && rel == detail.modRel}\r\n            onClick={() => {\r\n                if (detail.modRel !== rel) {\r\n                    detail.modRel = rel;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createTempoRelationItem = (value: TempoRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'tempo' && rel == detail.tempoRel}\r\n            onClick={() => {\r\n                if (detail.tempoRel !== rel) {\r\n                    detail.tempoRel = rel;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createBeatItem = (value: BeatSignature): JSX.Element => {\r\n        return <_Form isActive={detail.alterType === 'beat' && detail.beatSignature === value}\r\n            onClick={() => {\r\n                if (detail.beatSignature !== value) {\r\n                    detail.beatSignature = value;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const donmmItemJsxList = <_ParamDiv isEnable={detail.modRel === 'domm'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'domm' && value == detail.dommVal}\r\n            onClick={() => {\r\n                detail.dommVal = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>\r\n    })}</_ParamDiv>;\r\n\r\n    const keyAdjItemJsxList = <_ParamDiv isEnable={detail.modRel === 'key'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'key' && value == detail.keyAdj}\r\n            onClick={() => {\r\n                detail.keyAdj = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>;\r\n    })}</_ParamDiv>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Group isEnable={true}>\r\n                <_CategoryLabel>Type</_CategoryLabel>\r\n                {createAlertTypeItem('-', type == null)}\r\n                {createAlertTypeItem('modulate', type === 'modulate')}\r\n                {createAlertTypeItem('tempo', type === 'tempo')}\r\n                {createAlertTypeItem('beat', type === 'beat')}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'modulate'}>\r\n                <_CategoryLabel>Modulate</_CategoryLabel>\r\n                {createModulateRelationItem('-')}\r\n                {createModulateRelationItem('domm')}\r\n                {donmmItemJsxList}\r\n                {createModulateRelationItem('parallel')}\r\n                {createModulateRelationItem('relative')}\r\n                {createModulateRelationItem('key')}\r\n                {keyAdjItemJsxList}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'tempo'}>\r\n                <_CategoryLabel>Tempo</_CategoryLabel>\r\n                {createTempoRelationItem('-')}\r\n                {createTempoRelationItem('diff')}\r\n                {SideFormStyles.createNumberForm(detail.tempoDiff,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'diff',\r\n                    (e) => {\r\n                        detail.tempoDiff = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, -100, 100, 1)}\r\n                {createTempoRelationItem('rate')}\r\n                {SideFormStyles.createNumberForm(detail.tempoRate,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'rate',\r\n                    (e) => {\r\n                        detail.tempoRate = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n                {createTempoRelationItem('abs')}\r\n                {SideFormStyles.createNumberForm(detail.tempoAbs,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'abs',\r\n                    (e) => {\r\n                        detail.tempoAbs = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'beat'}>\r\n                <_CategoryLabel>Beat</_CategoryLabel>\r\n                {createBeatItem('2/4')}\r\n                {createBeatItem('4/4')}\r\n                {createBeatItem('3/4')}\r\n                {createBeatItem('6/8')}\r\n                {createBeatItem('9/8')}\r\n                {createBeatItem('12/8')}\r\n            </_Group>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormAlter;\r\n\r\nconst _Wrap = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        background-color: #b3b5c5;\r\n        `;\r\n\r\nconst _Group = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 0 0 0 4px;\r\n    ${props => props.isEnable ? '' : css`\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n`}\r\n        `;\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        margin-top: 1px;\r\n        width: 100%;\r\n        background-color: #c1cdd4;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\nconst _ParamDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n        margin: 1px;\r\n        background-color: #070707;\r\n        ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n        `;\r\nconst _ParamItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        width: 29px;\r\n        background-color: #dddddd;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\n\r\nconst _ValueForm = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 24px;\r\n        /* margin: 5px 0 0 0; */\r\n        text-align: left;\r\n        background-color: #ececec;\r\n\r\n        & * {\r\n            display: inline-block;\r\n            box-sizing: border-box;\r\n            vertical-align: top;\r\n    }\r\n        & input:nth-child(1) {\r\n            background-color: #dddddd;\r\n            width: 60px;\r\n            height: calc(100% - 4px);\r\n            margin: 2px 0 0 0;\r\n            border: 1px solid #9b9b9b;\r\n            border-radius: 4px;\r\n    }\r\n        & input:nth-child(2) {\r\n            margin-left: 5px;\r\n            background-color: #f00;\r\n            width: calc(100% - 70px);\r\n            height: 100%;\r\n    }\r\n        `;","import styled, { css } from \"styled-components\";\r\n\r\nconst JUDGE_INFO_LIST: {\r\n    value: number, label: string\r\n}[] = [\r\n        { value: -2, label: '-/8' },\r\n        { value: -1, label: '-/16' },\r\n        { value: 0, label: '±0' },\r\n        { value: 1, label: '+/16' },\r\n        { value: 2, label: '+/8' }\r\n    ];\r\n\r\nexport const MinuteForm = (props: {\r\n    isHead: boolean;\r\n    value: number;\r\n    setValue: (value: number) => void;\r\n}) => {\r\n\r\n    const rateMinus = props.value >= 0 ? 0 : Math.abs(props.value) * 50;\r\n    const ratePlus = props.value <= 0 ? 0 : Math.abs(props.value) * 50;\r\n\r\n    const createJudgeItem = (key: number, value: number, label: string) => {\r\n        const isActive = props.value === value;\r\n        return (\r\n            <_JudgeItem key={key} isActive={isActive} onClick={() => props.setValue(value)} >\r\n                {!isActive ? '' : label}\r\n            </_JudgeItem>\r\n        )\r\n    }\r\n    const isRed = Math.abs(props.value) === 1;\r\n\r\n    const JudgeJsxList = JUDGE_INFO_LIST.map((judge, i) => {\r\n        return createJudgeItem(i, judge.value, judge.label);\r\n    });\r\n\r\n    return (\r\n        <_Wrap isHead={props.isHead}>\r\n            <_View>\r\n                <_ViewFrame isLeft={true} isRed={isRed} rate={!props.isHead ? rateMinus : ratePlus}><div /></_ViewFrame>\r\n                <_ViewFrame isLeft={false} isRed={isRed} rate={!props.isHead ? ratePlus : rateMinus}><div /></_ViewFrame>\r\n            </_View>\r\n            <_Judge>{!props.isHead ? JudgeJsxList : JudgeJsxList.reverse()}</_Judge>\r\n        </_Wrap>\r\n    );\r\n};\r\n\r\nexport default MinuteForm;\r\n\r\nconst _Wrap = styled.div<{\r\n    isHead: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #bfd380;\r\n    text-align: left;\r\n`;\r\nconst _Judge = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 9;\r\n`;\r\n\r\nconst _JudgeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(20% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    background-color: #0000001a;\r\n    /* border: 1px solid #4d4d4d91; */\r\n    border-radius: 4px;\r\n    ${props => !props.isActive ? '' : css`\r\n        border: 1px solid #c00000c5;\r\n    `}\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    /* opacity: 0.15; */\r\n    &:hover {\r\n        background-color: #ffffff24;\r\n    }\r\n`;\r\nconst _View = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    /* position: absolute;\r\n    top: 0;\r\n    left: 0; */\r\n    z-index: 8;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ViewFrame = styled.div<{\r\n    isRed: boolean;\r\n    isLeft: boolean;\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 16px;\r\n    margin-top: 7px;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n\r\n    & div {\r\n        position: absolute;\r\n        top: 0;\r\n        height: 100%;\r\n        width: ${props => props.rate}%;\r\n        ${props => props.isRed ? css`\r\n            background: linear-gradient(to right, #0066ff, #7691a3);\r\n        ` : css`\r\n            background: linear-gradient(to left, #ff0000, #a37676);\r\n        `}\r\n        ${props => props.isLeft ? css`\r\n            right: 0;\r\n            border-radius: 10px 0 0 10px;\r\n        ` : css`\r\n            left: 0;\r\n            border-radius: 0 10px 10px 0;\r\n        `}\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\nimport MinuteForm from \"./minuteForm\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\n\r\n/**\r\n * コードブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i}\r\n                isExist={isExist}\r\n                isActive={detail.beatLen === i + 1}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    data.chordList = data.chordList.slice();\r\n                    detail.beatLen = (i + 1);\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.DEGREE_ALL.forEach((degree, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(degree);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(degree);\r\n        const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n        const isDiatonic = degree != null && scaleIndexies.includes(degree.index);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={isDiatonic}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || degree == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = degree == null ? null : { ...degree };\r\n                    if (degree == null) {\r\n                        detail.symbolKey = 'major';\r\n                    }\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n\r\n                    // キャッシュの更新\r\n                    const root = detail.root as TheoryUtil.DegreeProps;\r\n                    [cache.chordFullName, cache.structList] =\r\n                        BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, TheoryUtil.getSymbolFromKey(detail.symbolKey));\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = degree == null ? null : { ...degree };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n\r\n                        // キャッシュの更新\r\n                        const root = detail.root as TheoryUtil.DegreeProps;\r\n                        [cache.chordFullName, cache.structList] =\r\n                            BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, TheoryUtil.getSymbolFromKey(detail.symbolKey));\r\n                        dispatcher.score.setScoreState(state);\r\n                    }\r\n                }}\r\n            >\r\n                {degree == null ? '-' : <>\r\n                    {TheoryUtil.getDegreeRoot(degree)} ({TheoryUtil.getRootName(degree, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    /**\r\n     * シンコペーションの入力フォームを生成するコールバック\r\n     * @param isHead 頭対象フラグ（falseの場合後ろが対象）\r\n     * @returns JSX\r\n     */\r\n    const createMinuteForm = (isHead: boolean): JSX.Element => {\r\n        const minute = detail.minute;\r\n        const [value, setValue]: [number, (value: number) => void] = isHead ? [\r\n            minute.head,\r\n            (value: number) => {\r\n                minute.head = value;\r\n                dispatcher.score.setScoreData(store.scoreData);\r\n            }\r\n        ] : [\r\n            minute.tail,\r\n            (value: number) => {\r\n                minute.tail = value;\r\n                dispatcher.score.setScoreData(store.scoreData);\r\n            }\r\n        ];\r\n        return <MinuteForm value={value} setValue={setValue} isHead={isHead} />\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_CategoryLabel>{'Beat length'}</_CategoryLabel>\r\n                <_BeatDiv>\r\n                    {beatItemsJsx}\r\n                </_BeatDiv>\r\n                <_Minute>\r\n                    <_CategoryLabel>{'Minute head'}</_CategoryLabel>\r\n                    {createMinuteForm(true)}\r\n                    {/* <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                    <_CategoryLabel>{'Minute tail'}</_CategoryLabel>\r\n                    {createMinuteForm(false)}\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    {/* <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_RootDiv>\r\n                    {rootItemsJsx}\r\n                </_RootDiv>\r\n                <_SymbolDiv\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_SymbolDiv>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 100px; */\r\n    text-align: left;\r\n    background-color: #979797;\r\n`;\r\n\r\nconst _BeatDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 3px;\r\n        width: calc(100% - 6px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isActive ? '' : css`\r\n            /* border: solid 1px #fff; */\r\n        `}\r\n        box-sizing: border-box;\r\n        border-radius: 6px;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    margin-top: 5px;\r\n    width: 100%;\r\n    /* height: 360px; */\r\n    text-align: left;\r\n    /* background-color: #000000; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _RootDiv = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    margin: 0 0 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #e6e6e6; */\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #90bbcc;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #d1c521b8;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    color: #616161;\r\n    ${props => !props.isDiatonic ? '' : css`color: #ffffff;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #99999940;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #cc6363b8;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #6374ccb8;`}\r\n    }\r\n`;\r\n\r\nconst _SymbolDiv = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 93px);\r\n    margin: 0 1px 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    background-color: #a1cc90;\r\n    ${props => !props.isActive ? '' : css`background-color: #d1c521b8;`}\r\n    color: #fff;\r\n    ${props => !props.isDiatonic ? '' : css`color: #fff;`}\r\n    /* & span {\r\n        color: #f000;\r\n    } */\r\n    &:hover {\r\n        background-color: #dddddd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #cc6363b8;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const update = () => {\r\n        data.chordList = data.chordList.slice();\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const scaleItemJsxList: JSX.Element[] = TheoryUtil.SCALE_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? TheoryUtil.KEY12_MAJOR_SCALE_LIST : TheoryUtil.KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n    const rateItemJsxList: JSX.Element[] = TheoryUtil.BEAT_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.beatSignature === item} onClick={() => {\r\n                detail.beatSignature = item as BeatSignature;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            {SideFormStyles.createNumberForm(detail.bpm, true, (e) => {\r\n                detail.bpm = e.currentTarget.valueAsNumber;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }, 30, 220, 1)}\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 50%;\r\n    margin: 1px 0 0 0;\r\n\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 100%;\r\n    margin: 1px 0 0 0;\r\n    \r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    margin: 1px 0 0 0;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../../utils/dummyUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        DummyUtil.SECTION_CATEGORY.forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        const splitList = detail.labelName.split(' ');\r\n        DummyUtil.SECTION_NO.forEach((item) => {\r\n            const isActive = splitList[splitList.length - 1] === item.toString();\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(`${splitList[0]} ${item}`);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_SelectDiv>\r\n                <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n                <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n            </_SelectDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #b89b9b; */\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _SelectDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    background-color: #acacac;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(60% - 4px);\r\n    margin: 0 2px 0 2px;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(40% - 2px);\r\n    margin: 0 2px 0 0;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #6182b4; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #61b4b0; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormAlter from \"./sideFormAlter\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst HarmSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'alter': return <SideFormAlter />;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../redux/store/score/scoreCache\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\n\r\nconst StructViewer = (props: {\r\n    cache: ScoreCache.Element;\r\n}) => {\r\n    const cache = props.cache;\r\n    const indexList = cache.structList.map(struct => struct.soundIndex);\r\n    const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS :TheoryUtil.MINOR_SCALE_INTERVALS;\r\n    const scaleList = scaleIndexies.map(value => (cache.keyIndex + value) % 12);\r\n\r\n    const structJsxList:  JSX.Element[] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n\r\n        // 2オクターブ分表示\r\n        for (let i = 0; i < 14; i++) {\r\n            // 下の段（白鍵のチップ）\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = indexList.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            // 下の段（黒鍵のチップ）\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = indexList.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return structJsxList;\r\n    }, [indexList]);\r\n\r\n    return (\r\n        <_Wrap isUse={indexList.length > 0}>\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default StructViewer;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    /* border: 1px solid #ffffffda; */\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    ` : css`\r\n    background: radial-gradient(#d6cec3, #a89889);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    ` : css`\r\n        background: radial-gradient(#e7a144, #72552a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternDetail = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    /** 基準となるベロシティ */\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cell = layer.table[channelIndex][pattern.lenIndex];\r\n    const baseVel = layer.velocityList[pattern.lenIndex];\r\n    const timing = (cell == null || cell.timing == undefined) ? 0 : cell.timing;\r\n    const velAdj = (cell == null || cell.velAdj == undefined) ? 0 : cell.velAdj;\r\n\r\n    return (<_Wrap>\r\n        {\r\n            // ノーツが設定されていない場合は何も表示しない\r\n            cell == null ? <></> : (<>\r\n                <_DelayDiv>\r\n                    <_Label>delay</_Label>\r\n                    <_TimingValue type=\"range\" min={-10} max={10} step={1} value={timing} onChange={e => {\r\n                        cell.timing = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_DelayDiv>\r\n                <_VelocityDiv>\r\n                    <_Label>velocity</_Label>\r\n                    <_VelFrame isFocus={false}>\r\n                        <_VelItem value={baseVel} isEdit={false}/>\r\n                    </_VelFrame>\r\n                    <_VelFrame isFocus={store.scoreState.keySwitch.sustainMode}>\r\n                        <_VelItem value={baseVel + velAdj} isEdit={velAdj != 0} />\r\n                    </_VelFrame>\r\n                    {/* <_Value type=\"range\" min={-10} max={10} step={1} value={velAdj} onChange={e => {\r\n                        cell.velAdj = Number(e.target.value);\r\n                        update();\r\n                    }} /> */}\r\n                </_VelocityDiv>\r\n            </>)\r\n        }\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternDetail;\r\n\r\nconst VEL_DIV_WIDTH = 180;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    line-height: 18px;\r\n    margin-top: 14px;\r\n    margin-left: 5px;\r\n    width: 80px;\r\n    background-color: #868686;\r\n    color: #e7e7e7;\r\n    border: 1px solid #616161;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DelayDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - ${VEL_DIV_WIDTH + 1}px);\r\n    height: 100%;\r\n    background-color: #9c9c9c;\r\n`;\r\n\r\nconst _TimingValue = styled.input<{\r\n}>`\r\n    display: inline-block;\r\n    outline: none;\r\n    margin: 20px 0 0 8px;\r\n    width: calc(100% - 100px);\r\n    height: 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VelocityDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${VEL_DIV_WIDTH}px;\r\n    height: 100%;\r\n    margin-left: 1px;\r\n    /* background-color: #9a2020; */\r\n`;\r\n\r\nconst _VelFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 46px;\r\n    height: 100%;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffffff17;\r\n    `}\r\n    /* background-color: #63a0a1;\r\n    border-radius: 20px; */\r\n`;\r\n\r\nconst _VelItem = styled.div<{\r\n    value: number;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 5px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #ddc35cae;\r\n    `}\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate * adjustRate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {itemJsxList}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternPedal = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    // 左手のレイヤー時のみ固定表示\r\n    const layer = pattern.layers[0];\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n\r\n    let cur: BackingState.PedalAction = 'off';\r\n    pattern.pedalActs.forEach((pedal, i) => {\r\n        const isActive = pattern.layerIndex === 0 && pattern.lenIndex === i;\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n        let isUse = false;\r\n        const prev = cur;\r\n        if (prev === 'change') {\r\n            cur = 'on';\r\n        }\r\n        if (pedal != null) {\r\n            isUse = true;\r\n            cur = pedal;\r\n        }\r\n        itemJsxList.push(\r\n            <_Column key={i} rate={rate} isActive={isActive} isUse={isUse} onClick={() => {\r\n                if (prev === 'off') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'on'; break;\r\n                        case 'on': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'on') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = 'change'; break;\r\n                        case 'change': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'change') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                }\r\n                // 終端までnullで更新\r\n                if (i < pattern.pedalActs.length - 1) {\r\n                    for (let j = i + 1; j < pattern.pedalActs.length; j++) {\r\n                        pattern.pedalActs[j] = null;\r\n                    }\r\n                }\r\n                update();\r\n            }}><div><_Item action={cur} /></div></_Column>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternPedal;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n    /* background-color: #4e4e4e; */\r\n`;\r\n\r\n\r\nconst _Column = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #00635eac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #179483ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    white-space: normal;\r\n\r\n    &>div {\r\n        display: inline-block;\r\n        width: 10px;\r\n        height: calc(100% - 2px);\r\n        background-color: #ffffffa0;\r\n        border-radius: 6px;\r\n        margin: 1px 0;\r\n        ${props => props.isUse ? '' : css`\r\n            background-color: #ffffff2f;\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    action: BackingState.PedalAction;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 14px;\r\n    border: 1px solid #9c9c9c;\r\n    ${props => {\r\n        switch (props.action) {\r\n            case 'off': return css`\r\n                margin-top: 0;\r\n                background-color: #271db8;\r\n            `;\r\n            case 'change': return css`\r\n                margin-top: 15px;\r\n                background-color: #f3d631;\r\n            `;\r\n            case 'on': return css`\r\n                margin-top: 30px;\r\n                background-color: #e03030;\r\n            `;\r\n        }\r\n    }}\r\n    box-sizing: border-box;\r\n    border-radius: 6px;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n    const curLayer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n    const layerJsxList = useMemo(() => {\r\n\r\n        const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n        pattern.layers.forEach((layer, j) => {\r\n\r\n            const jsxLsit: JSX.Element[] = [];\r\n            for (let i = 0; i < channelCount; i++) {\r\n                const notesJsxLsit: JSX.Element[] = [];\r\n\r\n                layer.noteDivList.forEach((note, k) => {\r\n                    // データ上は下から数えるため、表示のループは逆回転する\r\n                    const channelIndex = (channelCount - 1) - i;\r\n                    const isActive = pattern.layerIndex === j && pattern.lenIndex === k;\r\n                    const cell = layer.table[channelIndex][k];\r\n                    const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                    const isUse = cell != null;\r\n                    // 前面にあるレイヤーのみエラー判定をする\r\n                    const isError = pattern.layerIndex !== j ? false :\r\n                        isUse && BackingUtil.checkOverlapBackLayer(pattern.layers, j, channelIndex, k);\r\n                    const isEdit = isActive && pattern.channelIndex === i;\r\n                    let rate = note.rate * adjustRate;\r\n                    if (note.isDot) rate /= 1.5;\r\n                    if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n                    let viewSignal: BackingState.NoteSignal | null = null;\r\n                    if (cell != null) {\r\n                        viewSignal = cell.signal;\r\n                        if (k > 0) {\r\n                            const prevCell = layer.table[channelIndex][k - 1];\r\n                            if (prevCell != null && prevCell.signal === 't') {\r\n                                viewSignal = 't';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const hasStaccato = () => {\r\n                        const search = layer.table.find((record) => {\r\n                            const cell = record[k];\r\n                            if (cell != null && cell.signal === 's') return cell;\r\n                        });\r\n                        return search != undefined;\r\n                    }\r\n                    notesJsxLsit.push(\r\n                        <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                            <_State\r\n                                // isUse={isUse}\r\n                                isError={isError}\r\n                                signal={viewSignal}\r\n                                isBack={pattern.layerIndex !== j}\r\n                                // クリック\r\n                                onClick={() => {\r\n                                    if (cell == null) {\r\n                                        // 同列にスタッカートがある場合、スタッカートを設定\r\n                                        const signal = !hasStaccato() ? 'n' : 's';\r\n                                        setNotesStatus({ signal, timing: 0, velAdj: 0 });\r\n                                    } else {\r\n                                        setNotesStatus(null);\r\n                                    }\r\n                                    curLayer.table = curLayer.table.slice();\r\n                                    update();\r\n                                    dispatcher.backing.updateErrorState();\r\n                                }}\r\n                                // 右クリック\r\n                                onContextMenu={() => {\r\n                                    pattern.channelIndex = i;\r\n                                    pattern.lenIndex = k;\r\n                                    update();\r\n                                }}\r\n                            />\r\n                        </_Notes>\r\n                    );\r\n                });\r\n                jsxLsit.push(\r\n                    <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                        {notesJsxLsit}\r\n                    </_Record>\r\n                );\r\n            }\r\n            layerJsxList[j] = jsxLsit;\r\n        });\r\n        return layerJsxList;\r\n    }, [\r\n        pattern.channels, pattern.layerIndex, pattern.lenIndex,\r\n        curLayer.noteDivList, curLayer.table, pattern.channelIndex\r\n    ]);\r\n\r\n    // 選択中のレイヤーを表に表示する\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    // isUse: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => props.signal == null ? '' : css<{\r\n    isBack: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n}>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        ${props => props.signal !== 's' ? '' : css`\r\n            border-radius: 8px;\r\n            background: linear-gradient(to bottom, #009e0d, #02fc49, #009e0d);\r\n        `}\r\n        ${props => props.signal !== 't' ? '' : css`\r\n            height: calc(100% - 8px);\r\n            margin: 4px 0 0 1px;\r\n            background: linear-gradient(to bottom, #9e4c00, #fc6a02, #9e4c00);\r\n        `}\r\n        // エラーあり\r\n        ${props => !props.isError ? '' : css`\r\n            opacity: 0.5;\r\n        `}\r\n        // 裏面のレイヤー\r\n        ${props => !props.isBack ? '' : css`\r\n            background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.5;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => props.signal == null ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternVelocity = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.velocityList.forEach((vel, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} >\r\n                <_Value value={vel} />\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternVelocity;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #001763ac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #173494ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Value = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 6px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    /* background-color: #5cceddaf; */\r\n    background: linear-gradient(to right, #00949e, #26dcf4, #00949e);\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternDetail from \"./patternDetail\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternPedal from \"./patternPedal\";\r\nimport PatternTable from \"./patternTable\";\r\nimport PatternVelocity from \"./patternVelocity\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const divs = layer.noteDivList;\r\n    const limitLen = BackingUtil.getLimitLen(chordInfo);\r\n    const useTotalLen = BackingUtil.getUsingLenFromDivs(divs, chordInfo);\r\n    const isLenOverError = 0 <= limitLen - useTotalLen;\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const viewRate = NOTES_1BAR_WIDTH / 4;\r\n\r\n    // メモリの数を算出\r\n    let memoriCount = chordInfo.beatLen * beatProps.beatMemoriCount;\r\n    memoriCount += chordInfo.minute.head + chordInfo.minute.tail;\r\n\r\n    const barMemoriCount = beatProps.beatMemoriCount === 4 ? 16 : 24;\r\n    const memoriWidth = NOTES_1BAR_WIDTH / barMemoriCount;\r\n    // メモリJSXの生成\r\n    const memoriJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < memoriCount + 1; i++) {\r\n        const pos = i;\r\n        let bean: { thickness: number, height: number, color: string } = { thickness: 1, height: 10, color: '#555' };\r\n        if (beatProps.beatMemoriCount === 4) {\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        } else {\r\n            switch (true) {\r\n                case pos % 24 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 6 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        }\r\n        memoriJsxList.push(\r\n            <_Memori\r\n                key={memoriJsxList.length}\r\n                width={memoriWidth}\r\n                height={bean.height}\r\n                color={bean.color}\r\n                thickness={bean.thickness}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n                <_MemoriList>{memoriJsxList}</_MemoriList>\r\n                {isLenOverError ? (\r\n                    <_ChordLenLine pos={limitLen * viewRate} />\r\n                ) : (\r\n                    // 定義した拍を超えた場合のみ表示\r\n                    <_OverCover pos={limitLen * viewRate} width={(useTotalLen - limitLen) * viewRate} />\r\n                )}\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n            {pattern.channelIndex === -1 ?\r\n                // ベロシティorペダル情報を表示\r\n                (pattern.mode === 'velocity' ? <PatternVelocity /> : <PatternPedal />) :\r\n                // セルごとの詳細情報を表示\r\n                <PatternDetail />\r\n            }\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\nconst _MemoriList = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    thickness: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.thickness}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _OverCover = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: ${props => props.width}px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #f8000053;\r\n    pointer-events: none;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;\r\n\r\nconst _ChordLenLine = styled.div<{\r\n    pos: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: 4px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #ffffffc7;\r\n`;","import { useContext } from \"react\";\r\nimport { Player } from \"soundfont-player\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    soundfont: Player | null;\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n    const channelCount = pattern.channels.length;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length + 1);\r\n        pattern.channelIndex = -1;\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length - 1);\r\n        pattern.channelIndex = -1;\r\n        update();\r\n    }\r\n\r\n    const preview = () => {\r\n        if (props.soundfont != null) {\r\n            props.soundfont.play(props.soundFullName, 0, { duration: 1 });\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap isError={props.soundFullName === '-'}>\r\n            <_Struct onClick={preview}>{props.soundFullName}</_Struct>\r\n            <_Option isEnable={channelCount > 1} onClick={deleteRecord}>-</_Option>\r\n            <_Option isEnable={channelCount < BackingUtil.CHANNEL_MAX} onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ff0000c3;\r\n    `}\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)<{\r\n    isEnable: boolean;\r\n}>`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n    // const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    const layerJsxList: JSX.Element[] = [];\r\n\r\n    if (state.pattern == null) return <></>;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channels = pattern.channels;\r\n    channels.forEach((channel, i) => {\r\n        let name = '-';\r\n        if (channel.octave !== -1) {\r\n            const structInfo = chordInfo.structList[channel.structIndex];\r\n            const soundIndex = structInfo.soundIndex;\r\n            const octave = channel.octave + structInfo.adjustOctave;\r\n            const keyList = !structInfo.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\r\n            name = keyList[soundIndex % 12] + octave;\r\n        }\r\n        channelJsxList.push(\r\n            <ChannelItem key={i}\r\n                soundfont={store.instruments.harmony}\r\n                index={i}\r\n                soundFullName={name}\r\n            />\r\n        );\r\n    });\r\n\r\n    pattern.layers.forEach((layer, i) => {\r\n        const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\r\n        layerJsxList.push(\r\n            <_LayerItem key={i} isActive={pattern.layerIndex === i}\r\n                onClick={() => {\r\n                    if (i !== pattern.layerIndex) {\r\n                        dispatcher.backing.switchLayer();\r\n                    }\r\n                }}\r\n            >{labelName}</_LayerItem>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        <_Header>\r\n            {layerJsxList}\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n            <_ModeItem isActive={pattern.mode === 'velocity'}\r\n                onClick={() => {\r\n                    pattern.mode = 'velocity';\r\n                    dispatcher.backing.setState(state);\r\n                }}\r\n            >Velocity</_ModeItem>\r\n            <_ModeItem isActive={pattern.mode === 'pedal'}\r\n                onClick={() => {\r\n                    pattern.mode = 'pedal';\r\n                    dispatcher.backing.setState(state);\r\n                }}\r\n            >Pedal</_ModeItem>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #929292;\r\n`;\r\n\r\nconst _LayerItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #dad600;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997;\r\n`;\r\n\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #4fe419;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternOptions = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        layer.noteDivList = layer.noteDivList.slice();\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, isEnable: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={isEnable} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, true, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const isPermit3ren = ['2/4', '4/4', '4/3'].includes(chordInfo.init.beatSignature);\r\n    const isPermitDot = BackingUtil.isPermitDot(cur);\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot,\r\n            isPermitDot,\r\n            () => {\r\n                cur.isDot = !cur.isDot;\r\n                update();\r\n            })}\r\n        {createItem('1/3', cur.div3 === 1,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 1) cur.div3 = 0;\r\n                else cur.div3 = 1;\r\n                update();\r\n            })}\r\n        {createItem('2/3', cur.div3 === 2,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 2) cur.div3 = 0;\r\n                else cur.div3 = 2;\r\n                update();\r\n            })}\r\n    </_WrapLen>;\r\n\r\n    /** テーブルの行 */\r\n    const tableRecord = layer.table[channelIndex];\r\n    const curCell = pattern.channelIndex === -1 ? null :\r\n        tableRecord[pattern.lenIndex];\r\n\r\n    const isEnableTai = () => {\r\n        if(tableRecord == null) return false;\r\n\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 's') return cell;\r\n        });\r\n        const hasStaccato = search != undefined;\r\n        let isExistNext = false;\r\n        if(pattern.lenIndex < tableRecord.length - 1 && tableRecord[pattern.lenIndex + 1] != null) {\r\n            isExistNext = true;\r\n        }\r\n        return !hasStaccato && isExistNext;\r\n    };\r\n\r\n    const isNormalRow = () => {\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 't') return cell;\r\n        });\r\n        return search == undefined;\r\n    };\r\n\r\n    const setRowStaccato = (isSet: boolean) => {\r\n        layer.table.forEach((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null) {\r\n                cell.signal = isSet ? 's' : 'n';\r\n            }\r\n        });\r\n    }\r\n\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', curCell == null,\r\n            true,\r\n            () => {\r\n                tableRecord[pattern.lenIndex] = null;\r\n                update();\r\n            })}\r\n        {createItem('□', curCell != null && curCell.signal === 'n',\r\n            true,\r\n            () => {\r\n                if (curCell != null) {\r\n                    if(curCell.signal === 's') {\r\n                        setRowStaccato(false);\r\n                    } else {\r\n                        curCell.signal = 'n';\r\n                    }\r\n                } else {\r\n                    tableRecord[pattern.lenIndex] = { signal: 'n', timing: 0, velAdj: 0 };\r\n                }\r\n                update();\r\n            })}\r\n        {createItem('・', curCell != null && curCell.signal === 's',\r\n            curCell != null && isNormalRow(),\r\n            () => {\r\n                setRowStaccato(true);\r\n                update();\r\n            })}\r\n        {createItem('⁀', curCell != null && curCell.signal === 't',\r\n            isEnableTai(),\r\n            () => {\r\n                const status = curCell as BackingState.NoteStatus;\r\n                status.signal = 't'\r\n                update();\r\n            })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternOptions;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternOptions from \"./patternOptions\";\r\n\r\n/**\r\n * バッキングエディタ画面のパターン部分\r\n * @returns コンポーネント\r\n */\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    /**\r\n     * USEスイッチ押下時の処理\r\n     */\r\n    const useSwitchAction = () => {\r\n        if (!isUsePattern) {\r\n            const table = state.voicingTable as boolean[][];\r\n            const voicingStructs = BackingUtil.buildChannels(table);\r\n            const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n            state.pattern = {\r\n                layerIndex: 0,\r\n                lenIndex: 0,\r\n                channelIndex: -1,\r\n                channels,\r\n                isUsePedal: false,\r\n                mode: \"velocity\",\r\n                pedalActs: [null],\r\n                layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n            } as BackingState.Pattern;\r\n            update();\r\n        } else {\r\n            state.pattern = null;\r\n            update();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* ヘッダー部分（パターン利用スイッチ） */}\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button\r\n                        isActive={isUsePattern}\r\n                        onClick={useSwitchAction}\r\n                    >Use</_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternOptions /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #e00000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #ff0000;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\n/**\r\n * ボイシングを定義するテーブルのコンポーネント\r\n * @returns コンポーネント\r\n */\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const table = state.voicingTable;\r\n    const pattern = state.pattern;\r\n    // 選択可能なチャンネル数\r\n    const channelLimitNum = pattern == null ? BackingUtil.OCTAVE_NUM * BackingUtil.STRUCT_NUM : pattern.channels.length;\r\n\r\n    // return useMemo(() => {\r\n\r\n    const chordInfo = state.chordInfo;\r\n    const structList = chordInfo.structList;\r\n    // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n    // const chordRootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n    // const rootName = TheoryUtil.getRootName(chordInfo.root, chordInfo.init.keyIndex);\r\n    // let chordFullName = rootName + symbol.name;\r\n\r\n    const rowJsxList: JSX.Element[] = [];\r\n\r\n    /** 選択数 */\r\n    let selectCount = 0;\r\n    // オクターブ（テーブル横）のループ\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const cellJsxList: JSX.Element[] = [];\r\n        // 構成音（テーブル縦）のループ\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = structList.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n            if (isSelected) {\r\n                selectCount++;\r\n            }\r\n\r\n            /** セルに表示する音程 */\r\n            const getSoundFullName = (): string => {\r\n                if (!isEnable) return '';\r\n                // const relation = symbol.structs[j];\r\n                // const interval = TheoryUtil.IntervalRelationProps[relation];\r\n                // const structIndex = (chordRootIndex + interval) % 12;\r\n                const sound = structList[j];\r\n                const octave = i + sound.adjustOctave;\r\n\r\n                const key12List = !sound.isFlat ?\r\n                    TheoryUtil.KEY12_SHARP_LIST :\r\n                    TheoryUtil.KEY12_FLAT_LIST\r\n                    ;\r\n                return `${key12List[sound.soundIndex]}${octave}`;\r\n            }\r\n\r\n            const name = getSoundFullName();\r\n            cellJsxList.push(\r\n                <_Cell key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    isOver={isSelected && selectCount > channelLimitNum}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: BackingState.ChannelParam[] = BackingUtil.buildChannels(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                        dispatcher.backing.updateErrorState();\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.harmony;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_Cell>\r\n            );\r\n        }\r\n        rowJsxList.push(\r\n            <_TableRow key={i}>\r\n                {cellJsxList}\r\n            </_TableRow>\r\n        );\r\n    }\r\n\r\n    /** 構成音リストのJSX */\r\n    const structJsxList = structList.map((sound, i) => {\r\n        const key12List = !sound.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\r\n\r\n        /** 表示する構成音の関係性 */\r\n        const getStructName = (): string => {\r\n            if (sound.relation == null) {\r\n                // オンコードの場合\r\n                return 'On';\r\n            } else if (sound.relation === 'p1') {\r\n                // ルート音の場合\r\n                return 'Root';\r\n            }\r\n            return sound.relation;\r\n        }\r\n        return (\r\n            <_StructItem key={i}\r\n                isOnChord={sound.relation == null}\r\n            >{getStructName()} [{key12List[sound.soundIndex]}]</_StructItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* コードの基本情報 */}\r\n            <_InfoDiv>\r\n                <_InfoItem>\r\n                    <_Label>Chord</_Label>\r\n                    <_Value>{chordInfo.chordFullName}</_Value>\r\n                </_InfoItem>\r\n                <_InfoItem>\r\n                    <_Label>Type</_Label>\r\n                    {/* <_Value>{symbol.attr}</_Value> */}\r\n                    <_Value>{chordInfo.symbolAttr}</_Value>\r\n                </_InfoItem>\r\n            </_InfoDiv>\r\n            <_EditorDiv>\r\n                {/* 構成音の情報 */}\r\n                <_StructDiv>\r\n                    {structJsxList}\r\n                </_StructDiv>\r\n                {/* ボイシングのテーブル */}\r\n                <_TableDiv>{rowJsxList}</_TableDiv>\r\n            </_EditorDiv>\r\n        </_Wrap>\r\n    );\r\n    // }, [table, channelLimitNum]);\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _InfoItem = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #89dada; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 8px);\r\n    width: 80px;\r\n    background-color: #69bcdd;\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #026c86;\r\n    border: 1px solid #303030;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 6px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #cccccc; */\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst _EditorDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _StructDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _StructItem = styled.div<{\r\n    isOnChord: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    color: white;\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    ${props => !props.isOnChord ? '' : css`\r\n        /* color: #e00000; */\r\n        background: linear-gradient(to bottom, #104f8a, #7699db, #104f8a);\r\n    `}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _TableDiv = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _TableRow = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Cell = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n    isOver: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    border: 1px solid #215e53;\r\n    border-radius: 4px;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #e5e747;\r\n    `}\r\n    ${props => !props.isOver ? '' : css`\r\n        background-color: #c40000;\r\n        color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #b9bb3f;\r\n        `}\r\n        ${props => !props.isOver ? '' : css`\r\n            background-color: #bb3f3f;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\n/**\r\n * バッキングエディタ画面\r\n * @returns コンポーネント\r\n */\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    useEffect(()=> {\r\n        console.log('backing start');\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_PrevireBrind isUse={state.isPreview} />\r\n            {/* ボイシングエディタ部分 */}\r\n            <VoicingChooser />\r\n            {/* パターンエディタ部分 */}\r\n            <PatternFrame />\r\n            {/* フッター部分 */}\r\n            <_FooterDiv>\r\n                {/* プレビュー再生 */}\r\n                <_Button isEnable={!state.hasError} onClick={() => {\r\n\r\n                    if (!state.isPreview) {\r\n                        dispatcher.backing.testBacking();\r\n                    } else {\r\n                        BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                    }\r\n                }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\r\n                {/* 編集を取り消しして閉じる */}\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Cancel</_Button>\r\n                {/* 編集を反映して閉じる */}\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.mappingEditorToScore();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/score/scoreData\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const cur = chordList[focusIndex];\r\n    const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={isBackingEnable}\r\n                onClick={() => {\r\n                    if (state.hideMenu === 'none') {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    } else if (state.hideMenu === 'backing') {\r\n                        dispatcher.backing.closeBackingEditor();\r\n                    }\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 7;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 8;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmClipboard = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    return (\r\n        <_Wrap>\r\n            <_Label>clipboard</_Label>\r\n            <_TypeDiv>\r\n                <_ModeItem isActive={state.cloneBacking != null}>Backing</_ModeItem>\r\n                <_ModeItem isActive={state.copiedElementList != null}>Elements</_ModeItem>\r\n            </_TypeDiv>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default HarmClipboard;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _TypeDiv = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #a8dbb3;\r\n    `}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #8f8f8f;\r\n    border-radius: 2px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst MEMORI_WIDTH = 12;\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        list.push(<_Margin key={list.length} />);\r\n        state.measureCacheList.forEach((cache) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {cache.barCount !== -1 ? <_Bar>{cache.barCount}</_Bar> : ''}\r\n                    {/* {<_Bar>{i}</_Bar>} */}\r\n                </_Memori>\r\n            );\r\n        });\r\n        list.push(<_Margin key={list.length} />);\r\n        return list;\r\n    }, [state.beatCacheList]);\r\n\r\n    const [beatJsxList, minuteJsxList] = useMemo(() => {\r\n        const beatJsxList: JSX.Element[] = [];\r\n        const minuteJsxList: JSX.Element[] = [];\r\n\r\n        const isChordFocus = dataList[focusIndex].type === 'chord';\r\n        const curChordIndex = cacheList[focusIndex].chordIndex;\r\n        // list.push(<_Start key={list.length}/>);\r\n        dataList.forEach((data, i) => {\r\n\r\n            const cache = state.elementCacheList[i];\r\n            if (data.type === 'chord' && Math.abs(cache.chordIndex - curChordIndex) <= 5) {\r\n\r\n                const detail = data.detail as DetailChord;\r\n                const sustain = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                let label = '';\r\n                let type: ItemType = 'ather';\r\n                if (!isChordFocus) {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                } else {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'cur';\r\n                        type = 'cur';\r\n                    } else if (cache.chordIndex === curChordIndex - 1) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                }\r\n\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatMemori = detail.beatLen * beatProps.beatMemoriCount;\r\n                const posMemori = 16 + cache.curTotalMemori;\r\n                beatJsxList.push(\r\n                    <_SustainItem key={beatJsxList.length}\r\n                        type={type}\r\n                        pos={posMemori} sustain={beatMemori + minute}\r\n                    >{label}</_SustainItem>\r\n                );\r\n                minuteJsxList.push(\r\n                    <_BeatItem key={beatJsxList.length}\r\n                        isActive={type === 'cur'}\r\n                        pos={posMemori + detail.minute.head} sustain={beatMemori}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        // list.push(<_Start key={list.length}/>);\r\n        return [beatJsxList, minuteJsxList];\r\n    }, [dataList.length, focusIndex, state.beatCacheList]);\r\n\r\n    const scrollPos = cacheList[focusIndex].curTotalMemori * MEMORI_WIDTH;\r\n    return (\r\n        <_Wrap>\r\n            <_ScrollFrame pos={scrollPos}>\r\n                <_Blocks>\r\n                    <_Beat>\r\n                        {beatJsxList}\r\n                    </_Beat>\r\n                    <_Minute>\r\n                        {minuteJsxList}\r\n                    </_Minute>\r\n                </_Blocks>\r\n                <_Measure>\r\n                    {memoriJsxList}\r\n                </_Measure>\r\n            </_ScrollFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _ScrollFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => -props.pos}px;\r\n    position: absolute;\r\n    height: 100%;\r\n    /* width: 100px;\r\n    background-color: #000; */\r\n    transition: left 0.5s;\r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n`;\r\n\r\ntype ItemType = 'cur' | 'prev' | 'next' | 'ather';\r\nconst _SustainItem = styled.div<{\r\n    pos: number;\r\n    sustain: number;\r\n    type: ItemType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(136, 163, 133);\r\n    ${props => {\r\n        switch (props.type) {\r\n            case 'cur': return css`\r\n                background-color: rgb(218, 107, 134);\r\n                /* color: #ffe551; */\r\n            `;\r\n            case 'prev': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 177, 221);\r\n            `;\r\n            case 'next': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 221, 171);\r\n            `;\r\n            case 'ather': return css`\r\n                background-color: rgb(192, 192, 192);\r\n            `;\r\n        }\r\n    }}\r\n    border-left: solid 1px #000;\r\n    border-top: solid 1px #000;\r\n    border-bottom: solid 1px #000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _BeatItem = styled.div<{\r\n    isActive: boolean;\r\n    pos: number;\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(224, 224, 224);\r\n    border-left: solid 1px #000;\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: rgb(233, 180, 228); */\r\n        /* color: #ffe551; */\r\n    `}\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Margin = styled.div`\r\n    display: inline-block;\r\n    width: ${MEMORI_WIDTH * 16}px;\r\n    height: 100%;\r\n    background-color: #d9ebe7;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${MEMORI_WIDTH}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection } from \"../../../../redux/store/score/scoreData\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport HarmSideForm from \"./side/harmSideForm\";\r\nimport { Timeline } from \"tone\";\r\nimport StructViewer from \"./info/structViewer\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport HarmClipboard from \"./initial/harmClipboard\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\n\r\n/**\r\n * ハーモナイズタブ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const state = store.scoreState;\r\n\r\n    const isMelody = store.scoreState.isMelody;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, harmonize: () => {\r\n                dispatcher.system.setInvalidate({\r\n                    ...store.invalidate, harmoniizeInvalidate: {}\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isMelody) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isMelody]);\r\n\r\n    // useEffect(() => {\r\n    //     HarmonizeUtil.updateHarmonizeCache(store, dispatcher)\r\n    // }, [chordList, chordList.length, init.bpm]);\r\n\r\n    const timelineJsx = state.elementCacheList.length === 0 ? <></> : <HarmMeasure />;\r\n    const structViewerJsx = state.elementCacheList.length === 0 ? <></> : <StructViewer cache={state.elementCacheList[state.focusIndex]} />;\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_SECTIONS><HarmSections /></_SECTIONS>\r\n            <_Left>\r\n                <_Head isEnable={!state.isPreview}>\r\n                    <HarmClipboard />\r\n                </_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP>{timelineJsx}</_TIMELINE_WRAP>\r\n                    <_INFO_WRAP>{structViewerJsx}</_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right isEnable={!state.isPreview}>\r\n                <HarmSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH + HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Head = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    position: absolute;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    /* background-color: #ddc2c2; */\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7a270028;\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyTimelineMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            mouse.lock = x;\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        // if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            if (mouse.pos !== x) {\r\n                // console.log(`★ move=== x: ${x}, pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n                mouse.pos = x;\r\n                update();\r\n            }\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            // update();\r\n\r\n            const lock = mouse.lock + refs.measure.scrollLeft;\r\n            const pos = mouse.pos + refs.measure.scrollLeft;\r\n            const notesList = store.scoreData.notesList;\r\n            let start = -1;\r\n            let end = -1;\r\n            for (let i = 0; i < notesList.length; i++) {\r\n                const notes = notesList[i];\r\n                const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                const [head, tail] = lock < pos ? [lock, pos] : [pos, lock];\r\n                if (head <= left && tail >= right) {\r\n                    if (start === -1) start = i;\r\n                } else {\r\n                    if (start !== -1) {\r\n                        end = i - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            if (start !== -1 && end === -1) {\r\n                end = notesList.length - 1;\r\n            }\r\n            state.focusIndex = start;\r\n            state.destIndex = end;\r\n            mouse.lock = -1;\r\n            // console.log(`★ up=== focus: ${state.focusIndex}, dist: ${state.distIndex}`);\r\n            dispatcher.melody.setState(state);\r\n            // const [head, tail] = mouse.lock < x ? [mouse.lock, x] : [x, mouse.lock];\r\n            // const width = tail - head;\r\n            // if (width > 5) {\r\n            //     mouse.width = width;\r\n            //     mouse.lock = -1;\r\n            //     mouse.pos = head;\r\n            //     update();\r\n            //     console.log(`★ up=== pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n            // }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyTimelineMouseOperation;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport MelodyUtil, { getNormalizeLenFromNotes } from \"../../../../utils/melodyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimelineMouseOperation from \"./util/melodyTimelineMouseOperation\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n    update: () => void;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n    const update = props.update;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        state.measureCacheList.forEach((cache, i) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            // 表示する小節数\r\n            const barCount = cache.barCount;\r\n\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    beatWidth={beatWidth}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {barCount !== -1 ? <_Bar>{barCount}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        });\r\n        return list;\r\n    }, [state.beatCacheList, barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        if (state.elementCacheList.length === 0) {\r\n            return jsxList;\r\n        }\r\n        let left = 0;\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                // console.log(state.elementCacheList.length);\r\n                const detail = element.detail as DetailChord;\r\n                const cache = state.elementCacheList[i];\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minuteLen = minute * 0.25;\r\n                const adjustRate = beatProps.beatMemoriCount / 4;\r\n                const width = beatWidth * (detail.beatLen * adjustRate + minuteLen);\r\n\r\n                if (chordRef.current != null) {\r\n                    const scroll = chordRef.current.scrollLeft;\r\n                    if (left + width - scroll >= 0 ||\r\n                        left - scroll <= chordRef.current.clientWidth) {\r\n                        const symbolNmae = TheoryUtil.getSymbolFromKey(detail.symbolKey)?.name;\r\n                        const degreeName = detail.root == null ? '-' :\r\n                            TheoryUtil.getDegreeRoot(detail.root) + symbolNmae;\r\n                        const chordName = detail.root == null ? '-' :\r\n                            TheoryUtil.getRootName(detail.root, init.keyIndex) + symbolNmae;\r\n                        jsxList.push(\r\n                            <_ChordItem key={jsxList.length}\r\n                                left={left}\r\n                                width={width}\r\n                                isActive={element == curChord}\r\n                                onClick={() => {\r\n                                    state.isMelody = false;\r\n                                    state.focusIndex = i;\r\n                                    dispatcher.score.setScoreState(state);\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                                }}\r\n                            >\r\n                                <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                            </_ChordItem>\r\n                        );\r\n                    }\r\n                }\r\n                left += width;\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_MeasureWrap ref={measureRef}>\r\n            <_MeasureInner\r\n                onMouseDown={e => MelodyTimelineMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseMove={e => MelodyTimelineMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseUp={e => MelodyTimelineMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseLeave={() => {\r\n                    const mouse = store.melodyState.timelineMouse;\r\n                    mouse.pos = -1;\r\n                    mouse.lock = -1;\r\n                    update();\r\n                }}\r\n            >\r\n                {measureJsxList}\r\n                <_MousePos\r\n                    left={mouseMeasurePos * beatWidth * rate}\r\n                    width={beatWidth * rate}\r\n                />\r\n            </_MeasureInner>\r\n        </_MeasureWrap>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _MeasureWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _MeasureInner = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* width: 100%; */\r\n    left: 0;\r\n    top: 0;\r\n    width: 10000px;\r\n    height: 100%;\r\n    &:hover {\r\n        background-color: #ff00b347;\r\n    }\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.left}px;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    pointer-events: none;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.beatWidth / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + TheoryUtil.IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #8f8f8f;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #adadad;\r\n    ${props => !props.isStruct ? '' : css`background-color: #ce6565;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #3b3b3b;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/score/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                state.isPreview = true;\r\n                dispatcher.melody.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.melody.setInstrument(soundFontPlayer);\r\n                    }).then(() => {\r\n                        state.isPreview = false;\r\n                        dispatcher.melody.setState(state);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #cacacada;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f7f7f7da;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e4e4e4da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #f7f7f7da;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={state.quantize === 4} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                {/* <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} /> */}\r\n                {/* <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} /> */}\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 9 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.destIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    const newLen = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.len) !== getNormalizeLenFromNotes(newLen)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.len = newLen;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    const newPos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.pos) !== getNormalizeLenFromNotes(newPos)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.pos = newPos;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.tableMouse;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                //履歴を作成\r\n                state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.melody.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.melody.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/score/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport MelodyUtil, {  } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n\r\n        // 選択しているノーツが1つである場合\r\n        const isSingle = state.focusIndex === state.destIndex;\r\n        const mouse = state.tableMouse;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.melody.copyNotes(); break;\r\n                    case 'v': dispatcher.melody.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.melody.allSelect();\r\n                    }\r\n                        break;\r\n                    case 's': dispatcher.score.saveFile(); break;\r\n                    case 'z': dispatcher.melody.undo(); break;\r\n                    case 'y': dispatcher.melody.redo(); break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.melody.incrementCurPitch(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.melody.incrementCurPitch(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveDestFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveDestFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.melody.incrementCurPitch(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.melody.incrementCurPitch(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(false);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(true);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.melody.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.melody.adjustScrollX(); break;\r\n                case 'e': dispatcher.melody.adjustScrollY(); break;\r\n                case 'z': {\r\n                   MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.melody.firstNotes();\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.melody.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.melody.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.melody.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.destIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/score/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport CacheUtil from \"../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const scoreState = store.scoreState;\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n    const [invalidate2, setInvalidate2] = useState<{}>({});\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.tableMouse;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n\r\n    const barCount = 150;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n    const rate = 1 / store.melodyState.quantize;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isMelody;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, melody: update\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    /**\r\n     * 画面上部のメモリJSXリスト\r\n     * 拍子のキャッシュから作成する\r\n     */\r\n    const measureJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        scoreState.measureCacheList.forEach((cache, i) => {\r\n\r\n            list.push(\r\n                <_Scale key={i} isHead={cache.rate === 4} beatWidth={state.beatWidth} />\r\n            );\r\n        });\r\n        return list;\r\n    }, [scoreState.beatCacheList, barCount]);\r\n\r\n    // const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    /**\r\n     * スケール区間のJSXリスト\r\n     * 背景色のラインを表現\r\n     * 転調でキーが変わる度に追加される\r\n     */\r\n    const scaleDivJsxList = useMemo(() => {\r\n        const divList: JSX.Element[] = [];\r\n        // console.log('**' + scoreState.scaleCacheList.length);\r\n        scoreState.scaleCacheList.forEach((scaleInfo, i) => {\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const scaleJsxList: JSX.Element[] = [];\r\n            for (let j = 0; j < PITCH_MAX; j++) {\r\n                const keyIndex = getKeyIndexFromPitcher(j);\r\n                scaleJsxList.push(\r\n                    <_ScaleLine key={j}\r\n                        isScale={scaleIndexies.includes(keyIndex)}\r\n                        isBase={keyIndex === scaleIndexies[0]}\r\n                    />\r\n                );\r\n            }\r\n\r\n            divList.push(\r\n                <_ScaleList key={i} width={state.beatWidth / 4 * scaleInfo.memoriCnt} isEven={i % 2 === 0}>\r\n                    {scaleJsxList}\r\n                </_ScaleList>\r\n            );\r\n        });\r\n        return divList;\r\n    }, [scoreState.scaleCacheList]);\r\n\r\n    /**\r\n     * 配置するノーツのJSXリスト\r\n     */\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        // let count = 0;\r\n        if (scoreState.scaleCacheList.length === 0) return list;//\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            const normalLeft = getNormalizeLenFromNotes(notes.pos);\r\n            const normalWidth = getNormalizeLenFromNotes(notes.len);\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const notesLeft = normalLeft * state.beatWidth;\r\n                const notesRight = notesLeft + normalWidth * state.beatWidth;\r\n                if (\r\n                    // !state.isPreview &&\r\n                    (notesRight - scroll < 0 || notesLeft - scroll > tableRef.current.clientWidth)\r\n                ) {\r\n                    continue;\r\n                }\r\n            }\r\n            const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n            // count++;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n\r\n            // クオンタイズ\r\n            const unitPos = getMinimumLenUnit(notes.pos);\r\n            const unitLen = getMinimumLenUnit(notes.len);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={normalLeft * state.beatWidth}\r\n                    width={normalWidth * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.melody.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\r\n                        isScale={isScale}\r\n                        isActive={isActive}\r\n                        isPreview={state.isPreview}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // console.log('cnt: ' + count);\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.destIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move]);\r\n\r\n    /**\r\n     * タイムラインを横にスクロールした際の処理\r\n     */\r\n    const sideScrollAction = () => {\r\n        const refs = store.refs.melody;\r\n\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const scrollLeft = refs.table.scrollLeft;\r\n            const scrollTop = refs.table.scrollTop;\r\n            refs.measure.scrollTo({ left: scrollLeft });\r\n            refs.chord.scrollTo({ left: scrollLeft });\r\n            refs.pitch.scrollTo({ top: scrollTop });\r\n        }\r\n        update();\r\n    };\r\n\r\n    /**\r\n     * マウスポインタがエリア外に出た際の処理\r\n     */\r\n    const mouseLeaveAction = () => {\r\n        console.log('leave!');\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n        update();\r\n    };\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header isEnable={!state.isPreview}>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                {(() => {\r\n                    const mouse = state.timelineMouse;\r\n                    if (mouse.lock === -1) {\r\n                        return mouse.pos === -1 ? <></> :\r\n                            <_MouseLinePos left={mouse.pos} />\r\n                    } else {\r\n                        const [head, tail] = mouse.lock < mouse.pos ? [mouse.lock, mouse.pos] : [mouse.pos, mouse.lock];\r\n                        const width = tail - head;\r\n                        return <_MouseRange left={head} width={width} />\r\n                    }\r\n                })()}\r\n                {\r\n\r\n                }\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                        update={() => setInvalidate2({})}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef} onScroll={sideScrollAction} >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleDivJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseLeave={mouseLeaveAction}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _MouseLine = css`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    width: 3px;\r\n`;\r\nconst _MouseLinePos = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #15ff00;\r\n`;\r\nconst _MouseLineLock = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #fbff00;\r\n`;\r\n\r\nconst _MouseRange = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    width: ${props => props.width}px;\r\n    background-color: #ffffff8b;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #464545;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n    /* background-color: #70ff7058; */\r\n`;\r\n\r\nconst _ScaleList = styled.div<{\r\n    width: number;\r\n    isEven: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    /* pointer-events: none; */\r\n    background-color: #70ff7021;\r\n    ${props => !props.isEven ? '' : css`\r\n        background-color: #708aff20;\r\n    `}\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #2727275a;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #00a6cf52;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `}\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `}\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb0040;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isPreview: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    opacity: 0.5;\r\n    ${props => props.isPreview && !props.isActive ? '' : css`    \r\n       opacity: 1;\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    ${props => !(props.isPreview && props.isActive) ? '' : css`\r\n        box-shadow: 0 0 32px 0 #ffffff92;\r\n    `}\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #7a270028;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport MelodyUtil, {  } from \"../../../utils/melodyUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    useEffect(() => {\r\n        const info = melody.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.melody.setInstrument(soundFontPlayer);\r\n            });\r\n\r\n        // acoustic_guitar_steel\r\n        //bright_acoustic_piano\r\n        Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\r\n            { gain: 2, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.score.setPiano(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    const switchMode = () => {\r\n        state.isMelody = !state.isMelody;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isMelody ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isMelody ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isMelody ? () => {\r\n\r\n        if (!state.isPreview) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        } else {\r\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    } : () => {\r\n\r\n        if (!melody.isPreview) {\r\n            dispatcher.melody.previewStart();\r\n        } else {\r\n           MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    }\r\n    /** アンサンブルの切替 */\r\n    const toggleEnsamble = !state.isMelody ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.melody.setState(melody);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode isEnable={!isPreview}>\r\n                    <_ModeItem isActive={!state.isMelody} onClick={() => {\r\n                        if (state.isMelody) switchMode();\r\n                    }}>Harmony</_ModeItem>\r\n                    <_ModeItem isActive={state.isMelody} onClick={() => {\r\n                        if (!state.isMelody) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch onClick={preview}><_SwitchInner isActive={isPreview}>Play</_SwitchInner> / <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner></_Switch>\r\n                    <_Switch onClick={toggleEnsamble}><_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner> / <_SwitchInner isActive={isSolo}>Solo</_SwitchInner></_Switch>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    const isPermit = !isPreview && state.hideMenu === 'none';\r\n                    if (isPermit) {\r\n                        switch (e.key) {\r\n                            case 'r': switchMode(); break;\r\n                        }\r\n                    }\r\n                }}>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isMelody} />\r\n                    <MelodyFrame isActive={state.isMelody} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div<{\r\n    isEnable: boolean\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #e1e4ca;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #eff3cf\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\nimport PreviewTab from \"./preview/previewTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    // { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    // { name: 'Preview', disable: !isAccept, cont: store.scoreData.chordList.length === 0 ? <></> : <PreviewTab data={store.scoreData} /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? TheoryUtil.DEGREE12_FLAT_LIST : TheoryUtil.DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    // sampler.releaseAll();\r\n\r\n                    const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = TheoryUtil.IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        // sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                // sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, isEnable: false, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, isEnable: false, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, isEnable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, isEnable: false, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length >= min && str.length <= max;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import { useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ValidateUtil from \"../../utils/validateUtil\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 400;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n    const [userId, setUserId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passConfirm, setPassConfirm] = useState('');\r\n    const [info, setInfo] = useState('');\r\n\r\n    const isButtonEnable = useMemo(() => {\r\n        return ValidateUtil.checkAll([\r\n            ValidateUtil.checkStringLength(userId, 4, 20),\r\n            ValidateUtil.checkStringLength(password, 4, 20),\r\n            ValidateUtil.checkStringLength(passConfirm, 4, 20),\r\n            \r\n        ]);\r\n    }, [isCreate, userId, password, passConfirm]);\r\n\r\n    /**\r\n     * 入力フォームのJSXを生成する\r\n     * @param title ラベル名\r\n     * @param value 値\r\n     * @param setter セッタの関数\r\n     * @returns JSX\r\n     */\r\n    const createFormJsx = (\r\n        title: string,\r\n        value: string,\r\n        setter: React.Dispatch<React.SetStateAction<string>>\r\n    ): JSX.Element => {\r\n        return (\r\n            <_Record>\r\n                <_Label>{title}</_Label>\r\n                <_TextField value={value} onChange={e => setter(e.target.value)} />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        if (isCreate) {\r\n\r\n            if (password != passConfirm) {\r\n                // setError(true);\r\n                // setMessage(`Confirmation passwords don't match.`);\r\n                // setLoading(false);\r\n                alert(`Confirmation passwords don't match.`);\r\n            } else {\r\n\r\n                (async () => {\r\n                    let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n                    let results = await response.json();\r\n                    console.log(JSON.stringify(results[0].cnt));\r\n                    const isExist = results[0].cnt > 0;\r\n                    if (isExist) {\r\n                        // setError(true);\r\n                        // setMessage('That user id has already been recorded.');\r\n                        alert('That user id has already been recorded.');\r\n                    } else {\r\n                        response = await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(id, pass) VALUES('${userId}', '${password}')`);\r\n                        results = await response.json();\r\n                        // setMessage('');\r\n                        alert('You have successfully created an account!');\r\n                        // setLoginType('login');\r\n                    }\r\n                    // setLoading(false);\r\n                })();\r\n            }\r\n\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {createFormJsx('user id', userId, setUserId)}\r\n            {createFormJsx('password', password, setPassword)}\r\n            {createFormJsx('password *', passConfirm, setPassConfirm)}\r\n            <_InfoDiv>{info}</_InfoDiv>\r\n            <_Footer>\r\n                <_ExecutableButton isEnable={true}>Clear</_ExecutableButton>\r\n                <_ExecutableButton isEnable={isButtonEnable} onClick={enterAction}>Enter</_ExecutableButton>\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #a9c5c7;\r\n    /* border: 1px solid #dadada; */\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #c73e3e75;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #d86262;\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    background-color: #91bdd6;\r\n    width: 100%;\r\n    height: 60px;\r\n    padding: 5px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: #222fa7;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport LoginFrame from \"../login/loginFrame\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton onClick={()=> {\r\n                    store.systemState.dialog = <LoginFrame />;\r\n                    dispatcher.system.setState(store.systemState);\r\n                }}>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useCallback, useEffect, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    const callback = useCallback(dispatcher.system.switchSplashToMain, []);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={callback} /\r\n                    >}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport SystemEntry from './system/contents/entry/systemEntry';\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    // 右クリック無効\r\n    document.oncontextmenu = function () { return false; }\r\n\r\n    // window.addEventListener(\"keydown\", function (e) {\r\n    //   // space and arrow keys\r\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n    //     e.preventDefault();\r\n    //   }\r\n    // }, false);\r\n\r\n    document.onkeydown = (e) => {\r\n      // if (!['F5'].includes(e.key)) {\r\n      //   return false;\r\n      // }\r\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n  }, []);\r\n  return (\r\n    <SystemEntry />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}