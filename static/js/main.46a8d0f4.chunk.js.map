{"version":3,"sources":["system/utils/dataUtil.tsx","system/redux/reducer.tsx","system/utils/theoryUtil.tsx","system/utils/backingUtil.tsx","system/utils/cacheUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/utils/instrumentsUtil.tsx","system/redux/store/state/dataHistory.tsx","system/utils/LibraryUtil.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/globalDialog.tsx","system/base/design/styles.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/contents/score/manage/chordProg/progUnitSearcher.tsx","system/contents/score/manage/chordProg/progStyle.tsx","system/contents/score/manage/chordProg/progBackingUtil.tsx","system/contents/score/manage/chordProg/progUtil.tsx","system/contents/score/manage/chordProg/progCustomFrame.tsx","system/utils/dummyUtil.tsx","system/contents/score/manage/chordProg/progOutputFrame.tsx","system/contents/score/manage/chordProg/progTemplateUtil.tsx","system/contents/score/manage/chordProg/progTemplateFrame.tsx","system/contents/score/manage/chordProg/chordProgDialog.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/tool/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailAlter.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcAlter.tsx","system/contents/score/edit/harmonize/tool/chordEditor.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/input/presetSelectorInput.tsx","system/contents/score/edit/harmonize/input/themaSelectorInput.tsx","system/contents/score/edit/harmonize/side/sideFromStyles.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/side/sideFormAlter.tsx","system/contents/score/edit/harmonize/side/minuteForm.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/harmSideForm.tsx","system/contents/score/edit/harmonize/info/structViewer.tsx","system/contents/backing/pattern/builder/patternDetail.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternPedal.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternVelocity.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternOptions.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/thema/presetSelectorFrame.tsx","system/contents/thema/themaSelectorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/initial/harmClipboard.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/initial/harmBackingLibrary.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/melody/util/melodyTimelineMouseOperation.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/home/homeChannel.tsx","system/contents/preview/scoreInfoTab.tsx","system/contents/preview/previewChannel.tsx","system/contents/custom/backing/treeUtil.tsx","system/contents/custom/backing/form/themaEditTabUtil.tsx","system/contents/custom/backing/form/attrFormTab.tsx","system/contents/custom/backing/form/baseFormTab.tsx","system/contents/custom/backing/form/methFormTab.tsx","system/contents/custom/backing/form/pattFormTab.tsx","system/contents/custom/backing/form/rootFormTab.tsx","system/contents/custom/backing/form/sustFormTab.tsx","system/contents/custom/backing/form/voicFormTab.tsx","system/contents/custom/backing/hierarchyNavi.tsx","system/contents/custom/backing/themaUtil.tsx","system/contents/custom/backing/backingLibraryTab.tsx","system/contents/custom/customChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getHashBuilder","Hashids","getHashedFromScoreSeq","scoreSeq","hash","encode","Base64","sendQueryRequestToAPI","hashedScoreSeq","hashids","Number","decode","hashedKey","queryType","sql","fetch","mode","method","headers","Accept","body","JSON","stringify","createQueryRequestInit","a","response","json","results","map","res","id","email","userSeq","DataUtil","val","content","encodeURIComponent","zlib","gzipSync","toString","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","plainData","state","fileHandle","createWritable","writable","text","gZip","write","close","getFile","alert","window","showSaveFilePicker","types","accept","then","handle","catch","console","log","ActionType","reducer","store","action","type","payload","SET_USER_ENV","userEnv","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","getBeatProps","keyIndex","scale","indexOf","relation","beatSignature","beatMemoriCount","barBeatCnt","SYMBOL_LIST","beatLen","minute","bpm","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","root","index","isFlat","symbolKey","props","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","baseKeyIndex","TheoryUtil","KEY12_FLAT_LIST","KEY12_SHARP_LIST","find","symbol","list","forEach","push","rootIndex","on","chordRootIndex","chordFullName","getRootName","chordOnIndex","onName","structList","struct","interval","soundIndex","adjustOctave","Math","floor","isFlatFromRelation","sameIndex","some","info","i","splice","unshift","sort","b","onIndex","sound","onChordIndex","tempList","length","divCount","Array","fill","table","channels","j","octave","structIndex","voicingList","editorPattern","channelSize","layers","layer","divs","noteDivList","signals","record","cell","x","y","status","notesList","vels","velocityList","slice","pedals","pedalActs","pedal","divIndex","voicingStructs","size","channel","reverse","scoreLayers","scoreLayer","notes","item","baseInfo","backing","pitchIndexList","chordTime","pattern","soundName","playHarmony","adjustRate","pedalRangeList","total","timeList","div","start","normal","rate","isDot","div3","sustain","undefined","divTime","pedalInfo","end","ignoreList","ig","timeInfo","timingAdj","timing","startTime","sustainTime","signal","inc","isNext","nextNotes","next","k","notesTail","velAdj","gain","setTimeout","dispatcher","harmonyFont","stop","isPreview","clearInterval","setState","memoriCount","head","tail","getUsingLenFromDivs","reduce","prev","cur","len","checkOverlapBackLayer","structCnt","col","isExist","voicing","voicingTable","patternProps","BackingUtil","buildChannels","getChannels","convertEditorLayerFromScore","channelIndex","lenIndex","layerIndex","detail","chordBacking","hasError","limitLen","getLimitLen","totalLen","chordInfo","init","baseLayer","backLayer","getDivRange","left","right","isOverlap","backLeft","backRight","note","includes","chordList","elementCacheList","sectionCacheList","beatCacheList","scaleCacheList","tempoCacheList","measureCacheList","totalMinute","sectionNo","sectionBeatSum","pastSecond","curSecond","chordIndex","curMemoriCount","totalBarCount","totalMemoriCount","beatRangeMemoriCount","totalBeat","totalMemoriBarCount","chordBlockNo","scaleMemoriCount","tempoMemoriCount","addTempoRange","beatRate","beatProps","memoriCnt","element","prevBeat","prevMemoriCount","prevBarCount","prevMinute","fixed","labelName","beatSum","rangeIndexStart","rangeIndexEnd","prevBar","calcSustainMsec","barMemoriCount","dispBarCount","barCount","alterType","modRel","dommVal","keyAdj","tempoRel","tempoDiff","tempoRate","tempoAbs","bar","surplusBeat","curTotalMemori","reffers","chordCacheList","createChordCacheList","score","setScoreState","cache","getSymbolFromKey","getChordDetails","backingError","hasBackingError","pos","curMemori","range","posTime","pastLen","last","CacheUtil","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len32","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","ml","getSortetdNotesLen","len32Cnt2","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","instrument","melodyFont","play","duration","soundFullName","stopPreview","melody","adjustScrollX","previewHarmony","data","focusIndex","lastFocus","update","firstTime","getTimeInfoFromNotesPos","lenTime","pitch","pitchIndex","destIndex","isSolo","system","setReserveTasks","cacheList","chordCache","pitchList","getPitchListFromVoicing","playBacking","tableMouse","curChord","MelodyUtil","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","PATTERN_HEADER_HEIGHT","PATTERN_BODY_HEIGHT","NOTES_1BAR_WIDTH","Dispatcher","dispatch","setUserEnv","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setInvalidate","saveFile","directScore","setHarmonyFont","soundfontPlayer","harmony","setInstruments","setScoreTabIndex","scoreTabIndex","clearCache","distIndex","initialBeat","setKeySwitch","keySwitch","setScoreData","moveElement","sub","moveDist","releaseRange","isTail","distHead","distTail","moveSection","curSectionIndex","curSectionInfo","curElementType","flashElement","incrementDegreeRoot","isUp","incrementBeatLen","updateHarmonizeCache","incrementMinuteVal","value","target","incrementMinuteValRelation","nearIndex","addChordElement","curBeatLen","addSectionElement","addAlterElement","removeElement","removeBacking","copyElementList","parse","copiedElementList","cloneBacking","pasteElementList","setDiatonicChord","diatonicIndex","chord","DIATONIC_MAJOR_SCALE_LIST","DIATONIC_MINOR_SCALE_LIST","setDefaultBacking","getDefaultBacking","pastBacking","openLibraryWnd","isPreset","hideMenu","symbolAttr","tabIndex","closeAction","closeLibraryWnd","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setMelodyFont","incrementCurPitch","isUpper","filter","dataHistory","add","normalLeft","scaleInfo","getKeyScaleFromNotesPos","scaleIndexies","MAJOR_SCALE_INTERVALS","MINOR_SCALE_INTERVALS","prevPitchIndex","tempPitchIndex","adjustScrollY","moveFocus","updateCurChord","moveDestFocus","beatWidth","searchedChord","width","addNotes","focus","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","posA","posB","undo","history","redo","openBackingEditor","getInitVoicingTable","getEditorPatternFromChordBacking","getVoicingListFromTable","checkEditorError","editor","isUpdate","mappingEditorToScore","closeBackingEditor","getInitialLayer","buildPatternProps","addPatternColumn","lenList","curLen","newLen","column","updateErrorState","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","isPermitDot","getNotes","setNotes","incrementVel","after","deleteColumn","switchLayer","switchMode","testBacking","thema","mappingEditorToThema","mappingSelectorToScore","this","DataHistory","ret","isChordElement","isUseLib","activeThemaIndex","isRangeSelect","attrsSearch","patts","patt","preset","voicCallback","pattVoicCallback","refer","attrs","master","fPatt","getAttrs","symbols","roots","minIdx","maxIdx","voics","voic","preUsies","preUse","depPatt","presKey","searchSustMeth","sustMet","condition","callback","defs","pattName","source","searchPattMeth","pattMet","pattCallback","sust","beat","patternList","pattIndex","depend","masterIdx","isBlank","pattIdx","isMatch","isDepend","conditionList","meths","meth","prenams","applyList","con","backingList","seq","dispName","LibraryUtil","initialStore","keyConfig","up","down","addChord","addSection","addChange","deleteCur","distMode","edit1","edit2","incRoot","decRoot","incBeat","decBeat","colorProps","entryBackground","editable","dialog","themaList","getDefaultLibs","isMelody","sustainMode","chordMode","symbolMode","control","minHeadMode","minTailMode","backingDataHistory","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","timelineMouse","soundfontInfo","scaleMode","resize","move","shift","notesCacheList","harmonize","measure","harmoniizeInvalidate","GloballDialog","useContext","GlobalContext","_Blind","onClick","styled","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","_CSS_LABEL_SMALL","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isEnable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","ChannelContents","_Contents","CSS_BUTTON_DISABLE","_Label","TabbedPane","tabRecordNum","isDisable","disable","TabLabel","_TabLabel","TabContents","UNIT_LIST","step","firstChord","secondChord","parseChord","baseBeat","keyList","split","charAt","newBeat","diatonicNo","diatonicProps","adjustKey","adjust","shortNameKey","substring","getSymbolFromShortName","shortName","ProgUnitSearcher","ProgStyle","CSS_LABEL_MIDIUM","select","progBackingUtil","patternConditions","voicingConditions","STEP_LIST","getDefaultChord","sectionName","backingNo","outputUnits","elementList","block","blockDetail","sample","BACKING_SAMPLE_LIST","conPa","unZip","conVo","ProgUtil","ProgCustomFrame","setStep","degreeFilters","setDegreeFilters","lastChord","setLastChord","setFocusIndex","stepList","useMemo","getFilteredStepList","stepOptionJsxList","disp","degreeOptionJsxListArray","DEGREE_FILTER_LIST","unitList","search","jsx","dispUnitJsx","tootTipStr","beatCycle","chordName","getDegreeRoot","divStr","_Span","_ChordName","_ProgItem","title","progUnitList","progJsxList","degreeChangeAction","e","_Frame","_TitleLabel","_Combobox","onChange","stepChangeAction","getLastChordName","_ListDiv","_ButtonDiv","_ExecutableButton","unitNum","reset","progUnit","insertProgUnit","_Record","RECORD_HEIGHT","span","DummyUtil","ProgOutputFrame","SECTION_CATEGORY","SECTION_NO","secCatOptionJsxList","secNoOptionJsxList","backingSampleJsxList","blockJsxList","isFixed","_Block","_FixedItem","_BackingLabel","updateOutputUnits","_ChordListDiv","_ChordItem","_ChordNameLabel","_ChordBeatDiv","jsxList","_BeatTip","getBeatTipsJsx","getInner","CSS_LABEL_SMALL","TEMPLATE_LIST","template","ProgTemplateUtil","ProgTemplateFrame","templateList","templateJsxList","isFocus","applyProgTemplate","ChordProgDialog","buildMode","setBuildType","getBlankBlockList","setOutputUnits","beatFilter","setBeatFilter","beatOptionJsxList","BEAT_DEF_LIST","chordDetail","templateBean","getInitialBlockList","createSwitchableButton","clickEvent","_SwitchableButton","beatComboboxEnable","distBeatFilter","_Header","_MainDiv","_LeftDiv","_BeatFormDiv","beatChangeAction","_SwitchDiv","getSwitchContJsx","_RightDiv","_Footer","buildScoreData","HEADER_HEIGHT","BEAT_HEIGHT","ManageTab","file","setFile","loginProps","login","cloudScoreList","setCloudScoreList","cloudScoreName","setCloudScoreName","cloudScoreShare","setCloudScoreShare","loadCloudScore","findUserScoreList","resList","url","getPreviewURL","share","modified","tempo","section","time","getStringFromDate","Date","lastModified","sectionNum","chordNum","fileInfo","scoreInfo","textValue","changeAction","createLabelRecord","labelValue","_Recored","_ItemnLabel","_ItemnValue","fileDisconnectAction","isDataConnect","cloudScoreListJsx","_Message","_CloudItem","_CName","_CHash","curCloudScore","uploadEnable","isExistEditingData","isSelectedScore","_Wrap","_ButtonsDiv","_Button","_Left","_CloudDiv","newScoreName","_ListFrame","findScore","_Right","showOpenFilePicker","fileContents","_DataInfoDiv","_ItemnInput","_ItemnURL","onContextMenu","navigator","clipboard","writeText","_ItemnCombobox","_ScoreInfoDiv","DATA_INFO_HEIGHT","input","SymbolEditor","curSymbol","baseSymbol","derives","getSymbolDerives","parentJsx","curJsx","childrenJsx","_Row","CalcChord","symbolName","chordRoot","chordOn","prevCache","isError","minuteStr","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","barRem","_Len","_Border","ElementDetailAlter","_Type","sign","getDetailInfo","ElementDetailChord","degreeRoot","degreeOn","isDiatonic","getDiatonicDegreeList","_Degree","isSwitch","isSustainMode","scaleRelation","isOnChordScale","_DegreeRoot","_Tip","lenType","valueType","abs","_TipItem","_Error","_Voicing","_Pattern","isCurrent","_DegreeSymbol","_DegreeOnChord","_Backing","ElementFixedBorder","isStart","ElementDetailInit","_Title","_Value","ElementDetailSection","CalcAlter","getType","prevKey","curKey","curCache","prevTempo","curTempo","curBeat","getDetail","ChordEditor","getChord","createRow","label","listJsx","rootName","ScoreElement","wrapRef","useRef","bodyRef","isRange","isSameSection","wrap","current","elementJson","isInactive","ref","isSelectable","isAdditional","_Head","_CurKey","getDisplayKeyScaleName","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","HarmSections","sections","curSectionNo","_Total","addProgAction","HarmonizeUtil","previewMelody","clearTimeout","edit","common","patternNormalMode","patternDetailMode","test","isEdit","baseVel","tempTiming","tempVelAdj","vel","curNotes","BackingEditorInput","PresetSelectorInput","field","moveList","listIndex","presetList","applyAction","ThemaSelectorInput","focusSide","voicIndex","filteredList","acceptVoic","moveSide","isPermitTest","NoteKeyDown","config","isElement","curType","libEnables","getEnableState","previewCurHarmony","NoteBasicInput","main","NoteKeySwitch","isPress","min","max","_NumberForm","SideFormStyles","SideFormAlter","createAlertTypeItem","createModulateRelationItem","rel","createTempoRelationItem","createBeatItem","donmmItemJsxList","_ParamDiv","_ParamItem","keyAdjItemJsxList","_Group","_CategoryLabel","createNumberForm","currentTarget","valueAsNumber","___CSS_TITLE","___CSS_FORM","JUDGE_INFO_LIST","MinuteForm","rateMinus","ratePlus","isRed","JudgeJsxList","judge","_JudgeItem","setValue","createJudgeItem","isHead","_View","_ViewFrame","isLeft","_Judge","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","DEGREE_ALL","degree","isRootActive","isOnActive","_RootItem","symbolItemsJsx","_SymbolItem","createMinuteForm","_Timing","_BeatDiv","_Minute","_RootDiv","_SymbolDiv","SideFormInit","scaleItemJsxList","SCALE_DEF_LIST","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","_TemplateItem","numberItemJsxList","splitList","_NumberItem","_DirectText","_SelectDiv","_TemplateFrame","_NumberFrame","_ItemBase","HarmSideForm","StructViewer","indexList","scaleList","structJsxList","curIndex","isScale","isUse","isBlack","_Struct","WIDTH","PatternDetail","_DelayDiv","_TimingValue","_VelocityDiv","_VelFrame","_VelItem","VEL_DIV_WIDTH","PatternLength","itemJsxList","PatternPedal","_Column","PatternTable","channelCount","curLayer","layerJsxList","jsxLsit","notesJsxLsit","setNotesStatus","viewSignal","prevCell","_Notes","isBack","_State","isEven","isFront","_Layer","zIndex","PatternVelocity","PatternBuilder","useTotalLen","isLenOverError","memoriWidth","memoriJsxList","bean","thickness","height","color","_Memori","_LengthDiv","_MeasureDiv","_MemoriList","_ChordLenLine","_OverCover","_Body","ChannelItem","soundfont","_Option","CHANNEL_MAX","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","structInfo","_LayerItem","_ModeItem","proops","PatternOptions","createItem","createRateItem","String","setRate","sizeJsxList","_ListItem","isPermit3ren","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","tableRecord","curCell","setRowStaccato","isSet","editModeJsx","_WrapEdit","hasStaccato","isExistNext","isEnableTai","option","PatternFrame","isUsePattern","_UseSwitch","isUsePedal","_Main","_StatusDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","channelLimitNum","OCTAVE_NUM","STRUCT_NUM","rowJsxList","selectCount","cellJsxList","isSelected","key12List","getSoundFullName","_Cell","isOver","_TableRow","_StructItem","isOnChord","_InfoItem","_EditorDiv","_StructDiv","_TableDiv","_InfoDiv","TIP_WIDTH","BackingEditorFrame","setSource","syncSource","_LabelFrame","_PrevireBrind","_FooterDiv","_SourceFrame","_TextArea","textarea","PresetSelectorFrame","setField","minIndex","maxIndex","inputCache","targetList","getPresetList","focusPreset","_PresetItem","_Preset","_Method","_ApplyItem","applyItem","_Result","apply","presetJsxList","applyJsxList","useCallback","chordElement","matchCondition","_BodyDiv","_Sum","_Rate","toFixed","ThemaSelectorFrame","updateBacking","voicingProps","v","join","soundList","isNone","fullName","getDistinctionFromRelate","dispLabel","pattJsxList","voicJsxList","HarmHideFrame","isOpen","enableState","Component","isVisible","HarmClipboard","_TypeDiv","MEMORI_WIDTH","HarmMeasure","dataList","_Margin","_Bar","beatJsxList","minuteJsxList","isChordFocus","curChordIndex","beatMemori","posMemori","_SustainItem","scrollPos","_ScrollFrame","_Blocks","_Measure","HarmBackingLibrary","themaName","HarmonizeTab","timelineJsx","structViewerJsx","scoreCache","sideFormEnable","onKeyDown","onKeyUp","_SectionsDiv","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_RIGHT_WIDTH","HARMONIZE_HEAD_WIDTH","MelodyTimelineMouseOperation","mouseDownEvent","timelineLength","button","rect","getBoundingClientRect","clientX","mouseMoveEvent","mouse","mouseUpEvent","scrollLeft","MelodyTimeline","measureRef","chordRef","barLength","measureJsxList","chordJsxList","minuteLen","scroll","clientWidth","symbolNmae","degreeName","_DegreeName","_ChordWrap","_MeasureWrap","_MeasureInner","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_MousePos","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","Soundfont","AudioContext","release","soundFontPlayer","QuantizeSwitch","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","getNextLeft","clientY","scrollTop","curPos","posX","lenWidth","newPos","prevFocus","MelodyInput","keyDownEvent","isSingle","keySwitchEvent","MelodyFrame","tableRef","pitchRef","setInvalidate2","isTune","scaleDivJsxList","divList","scaleJsxList","_ScaleLine","isBase","_ScaleList","notesJsxList","normalWidth","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_MouseLinePos","_MouseRange","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","_Test","editAnimation","keyframes","_MouseLine","TUNE_TIMELINE_WIDTH","_Scale","EditTab","isDirect","preview","toggleEnsamble","playJsx","_SwitchInner","stopJsx","ensambleJsx","soloJsx","_Mode","_Buttons","_Switch","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","items","degreeRootName","chordRootName","_Lane","_Box","HomeChannel","useAuth0","isAuthenticated","user","isLoading","userId","setUserId","userCount","setUserCount","scoreList","setScoreList","countUsers","cnt","findAllScore","registerLabel","registerAction","location","reload","scoreListJsx","open","_Owner","owner","dispnam","_CDate","lastmod","_MessageRecord","_ListInfoDiv","_ItemnForm","ScoreInfoTab","PreviewChannel","TreeUtil","parent","depth","children","node","parentNode","focusNode","buildElementNodeFromData","build","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","buildJsxRecords","spaceList","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","onDoubleClick","getLabelJsx","ThemaEditTabUtil","titleLabel","labelText","readOnly","_BorderText","_BorderPanel","innerJsx","buttons","_ListRecordFrame","records","dim","buttonJsxList","_ListRecordButton","_ListRecordItem","_ListRecordLabel","AttrFormTab","ThemaTreeContext","setFocusNode","setTreeDisable","setAttr","setSymbols","errorList","setErrorList","targetSymbolList","getSymbolsFromAttr","InputComboboxForm","createBlankCatList","SymbolAttributeList","_SymbolKey","BorderPanel","TextAreaView","ButtonDiv","attrData","isPattern","selfIndex","getChildIndex","LabelTextItem","newNode","createNode","BaseFormTab","setThamaData","setThemaName","themaData","InputTextForm","addThema","ListManager","MethFormTab","presetName","setPresetName","setPrenams","nextPresetSeq","setNextPresetSeq","isSustMeth","pre","p","prenam","PattFormTab","setBackingWnd","parentData","sustData","setPattName","setRefer","setRootIndex","setSymbolKsy","hasDepend","permitDependKeys","useDepend","matchChannel","parseInt","key12","idx","chordPattern","pattData","RootFormTab","setMinIdx","setMaxIdx","rootData","SustFormTab","setBeat","setHead","setTail","VoicFormTab","methData","setSymbolKey","depPattKey","setDepPattKey","setPreset","setPreUsies","symbolList","depPatts","curPattKey","editorUpdate","voicSrc","editorClose","voicData","HierarchyNavi","connect","isCreaet","addInfo","_Create","addBaseInfo","_Base","addMethInfo","_Meth","addSustInfo","_Sust","addPattInfo","_Patt","addAttrInfo","symbolNameList","_Attr","addRootInfo","nameList","_Root","addVoicInfo","_Voic","_TextField","ThemaUtil","innderJsx","setAttrJsx","_TypeLabel","_C_Symbol","getMainLabel","setRootJsx","setVoicJsx","setBaseJsx","setMethJsx","_P_Key","_P_Channel","_P_Master","_P_Depend","_NodeFrame","_CSS_FONT","createContext","BackingLibraryTab","getInitialThema","isBackingWnd","treeDisable","getDefsChildren","tabInner","contJsx","_TabContWrap","_TreeDiv","_TreeHead","_TreeBody","Frame","_PropsDiv","Provider","CustomChannel","MainFrame","basename","process","RouterManage","str","URLSearchParams","useLocation","get","path","exact","hashKey","DirectView","conteseq","getDecryptionedScoreSeq","to","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","remove","_NowLoading","_Copylight","fadeIn","TotalHeader","loginWithRedirect","logout","origin","findUserInfo","userList","userProps","authButtonJsx","_UserName","isEntry","_LoginButton","_ACCENT","_NORMAL","_Menu","_Language","_MenuItem","TOTAL_HEADER_WIDTH","SystemEntry","useReducer","App","document","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.46a8d0f4.chunk.js","sourcesContent":["import zlib from \"zlib\";\nimport { ScoreState } from \"../redux/store/score/scoreState\";\n// import { createClient } from \"@supabase/supabase-js\";\nimport { Base64 } from \"js-base64\";\nimport Hashids from 'hashids';\n\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\n\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\n\nnamespace DataUtil {\n    \n    // export const DB_SERVER_DOMAIN = 'http://localhost:5000';\n    // export const DB_SERVER_DOMAIN = 'https://licresia-demo01-server.glitch.me';\n    export const DB_SERVER_DOMAIN = 'https://licresia-server.glitch.me';\n    \n    // export const APP_SERVER_DOMAIN = 'http://localhost:4000';\n    // export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/licresia_demo_app';\n    export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\n\n    // const fetchData = async () => {\n    //     try {\n    //         // sampleテーブルから全カラムのデータをid順に取得\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\n\n    //         if (error) {\n    //             throw error;\n    //         }\n    //         if (data) {\n    //             console.log(data);\n    //         }\n    //     } catch (error: any) {\n    //         alert(error.message);\n    //     } finally {\n\n    //     }\n    // };\n\n    const getHashBuilder = () => {\n        return new Hashids('licresia-demo', 8);\n    }\n\n    export const getHashedFromScoreSeq = (scoreSeq: number) => {\n        const hashids = getHashBuilder();\n        const hash = hashids.encode(scoreSeq);\n        const hashedKey = Base64.encode(hash, true);\n        return hashedKey;\n    }\n\n    export const getDecryptionedScoreSeq = (hashedScoreSeq: string) => {\n        const hashids = getHashBuilder();\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedScoreSeq)));\n        return decryptioned;\n    }\n\n    export const getPreviewURL = (scoreSeq: number) => {\n        const hashedKey = getHashedFromScoreSeq(scoreSeq);\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\n        return url;\n    }\n\n    /**\n     * クエリリクエストを生成する\n     * @param sql \n     * @returns \n     */\n    const createQueryRequestInit = (sql: string): RequestInit => {\n        return {\n            mode: 'cors',\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ sql })\n        }\n    }\n\n    /**\n     * select/updateを指定してSQLを実行する。<br>\n     * selectの場合、結果をjsonで返す。\n     * @param queryType\n     * @param sql \n     * @returns \n     */\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\n            createQueryRequestInit(sql)\n        );\n    }\n\n    export const findUserList = async () => {\n        const response = await sendQueryRequestToAPI('select', `SELECT id FROM user_tbl`);\n        const results = await response.json();\n        return (results as { id: string }[]).map(res => res.id);\n    };\n\n    export const findUserInfo = async (email: string) => {\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\n        const results = await response.json();\n        return results as { seq: number, id: string }[];\n    };\n\n    export const findUserScoreList = async (userSeq: number) => {\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\n        const results = await response.json();\n        return results as any[];\n    };\n\n    export const findScore = async (scoreSeq: number) => {\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\n        const results = await response.json();\n        return results as any[];\n    };\n\n    /**\n     * 文字列を圧縮する\n     * @param val 圧縮前の文字列\n     * @returns 圧縮後の文字列\n     */\n    export const gZip = (val: string) => {\n        // エンコード\n        const content = encodeURIComponent(val);\n        // 圧縮\n        const result = zlib.gzipSync(content);\n        // Buffer => base64変換\n        const value = result.toString('base64');\n        return value;\n    }\n\n    /**\n     * 圧縮された文字列を複号する\n     * @param val 圧縮された文字列\n     * @returns 複号後の文字列\n     */\n    export const unZip = (val: string) => {\n        // base64 => Bufferに変換\n        const buffer = Buffer.from(val, 'base64')\n        // 復号化\n        const result = zlib.unzipSync(buffer)\n        // デコード\n        const str = decodeURIComponent(result.toString())\n        return str;\n    }\n\n    /**\n     * Date型の日時を文字列に変換する\n     * @param date Date型の日時\n     * @returns 文字列の日時\n     */\n    export const getStringFromDate = (date: Date) => {\n\n        const year_str = date.getFullYear().toString();\n        //月だけ+1すること\n        const month_str = (1 + date.getMonth()).toString();\n        const day_str = date.getDate().toString();\n        const hour_str = date.getHours().toString();\n        const minute_str = date.getMinutes().toString();\n        const second_str = date.getSeconds().toString();\n\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\n        format_str = format_str.replace(/YYYY/g, year_str);\n        format_str = format_str.replace(/MM/g, month_str);\n        format_str = format_str.replace(/DD/g, day_str);\n        format_str = format_str.replace(/hh/g, hour_str);\n        format_str = format_str.replace(/mm/g, minute_str);\n        format_str = format_str.replace(/ss/g, second_str);\n\n        return format_str;\n    };\n\n    export const saveFile = (plainData: string, state: ScoreState) => {\n        const options = {\n            types: [\n                {\n                    accept: {\n                        'text/plain': ['.lcrs'],\n                    },\n                },\n            ],\n        };\n        const fileHandle = state.fileHandle;\n        if (fileHandle != null) {\n            (async () => {\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\n                const writable = await fileHandle.createWritable();\n                //テキストデータの書き込み\n                const text = DataUtil.gZip(plainData);\n                await writable.write(text);\n                //ファイルを閉じる\n                await writable.close();\n                state.fileHandle = fileHandle;\n                // this.score.setScoreState({ ...state });\n                const file = await fileHandle.getFile();\n                alert('saved successfully!');\n            })();\n        } else {\n            window.showSaveFilePicker(options).then((handle) => {\n                (async () => {\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\n                    const writable = await handle.createWritable();\n                    //テキストデータの書き込み\n                    const text = DataUtil.gZip(plainData);\n                    await writable.write(text);\n                    //ファイルを閉じる\n                    await writable.close();\n                    state.fileHandle = handle;\n                    // this.score.setScoreState({ ...state });\n                })();\n            }).catch(() => {\n                console.log('キャンセルされました');\n            });\n        }\n    }\n}\n\nexport default DataUtil;","import { Store } from \"./store/store\";\n\n/**\n * ディスパッチメソッドの処理種別を定義します。\n */\nexport enum ActionType {\n    SET_USER_ENV,\n    SET_SYSTEM_STATE,\n    SET_SCORE_STATE,\n    SET_TUNE_STATE,\n    SET_SCORE_DATA,\n    SET_REFS,\n    SET_INSTRUMENTS,\n    SET_BACKING_STATE,\n    SET_RESERVE_TASKS,\n    SET_INVALIDATE,\n}\n\n/**\n * ディスパッチメソッドに指定するオブジェクトを定義します。\n */\nexport type Action = {\n    type: ActionType;\n    payload: any;\n}\n\nexport const reducer = (store: Store, action: Action): Store => {\n    const type = action.type;\n    const payload = action.payload;\n    switch (type) {\n        case ActionType.SET_USER_ENV:\n            store.userEnv = payload.userEnv;\n            break;\n        case ActionType.SET_SYSTEM_STATE:\n            store.systemState = payload.systemState;\n            break;\n        case ActionType.SET_SCORE_STATE:\n            store.scoreState = payload.scoreState;\n            break;\n        case ActionType.SET_SCORE_DATA:\n            store.scoreData = payload.scoreData;\n            break;\n        case ActionType.SET_TUNE_STATE:\n            store.melodyState = payload.tuneState;\n            break;\n        case ActionType.SET_REFS:\n            store.refs = payload.refs;\n            break;\n        case ActionType.SET_INSTRUMENTS:\n            store.instruments = payload.instruments;\n            break;\n        case ActionType.SET_BACKING_STATE:\n            store.backingState = payload.backingState;\n            break;\n        case ActionType.SET_RESERVE_TASKS:\n            store.reserveTasks = payload.reserveTasks;\n            break;\n        case ActionType.SET_INVALIDATE:\n            store.invalidate = payload.invalidate;\n            break;\n    }\n    return { ...store };\n}","import { BeatSignature, Scale } from \"../redux/store/score/scoreData\";\n\nnamespace TheoryUtil {\n\n    export const MAJOR_SCALE_INTERVALS = [0, 2, 4, 5, 7, 9, 11];\n    export const MINOR_SCALE_INTERVALS = [0, 2, 3, 5, 7, 8, 10];\n\n    export const KEY12_FLAT_LIST = [\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\n    ];\n    export const KEY12_SHARP_LIST = [\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\n    ];\n\n    export const DEGREE12_FLAT_LIST = [\n        'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\n    ];\n    // export const DEGREE12_FLAT_LIST = [\n    //     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\n    // ];\n    export const DEGREE12_SHARP_LIST = [\n        'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\n    ];\n\n    export const KEY12_MAJOR_SCALE_LIST = [\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\n    ];\n\n    export const KEY12_MINOR_SCALE_LIST = [\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\n    ];\n\n    export const getDisplayKeyScaleName = (keyIndex: number, scale: Scale) => {\n        return scale === 'major' ? KEY12_MAJOR_SCALE_LIST[keyIndex] :\n            KEY12_MINOR_SCALE_LIST[keyIndex] + 'm';\n    };\n\n    export const isFlat = (keyIndex: number, scale: Scale) => {\n        const scaleName = scale === 'major' ? KEY12_MAJOR_SCALE_LIST[keyIndex] :\n            KEY12_MINOR_SCALE_LIST[keyIndex];\n        return scaleName.indexOf('b') !== -1;\n    };\n\n    export const SCALE_DEF_LIST = ['major', 'minor'] as const;\n    export const BEAT_DEF_LIST = ['2/4', '4/4', '3/4', '6/8', '9/8', '12/8'] as const;\n\n    export type IntervalRelation =\n        'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\n        'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\n        'd7' | 'm7' | 'M7'\n        ;\n\n    export const isFlatFromRelation = (relation: IntervalRelation) => {\n        // 以下の場合#（シャープ）とする\n        switch (relation) {\n            case 'M2':\n            case 'M3':\n            case 'M6':\n            case 'M7':\n                return false;\n        }\n        return true;\n    }\n\n    export const SymbolAttributeList = [\"triad\", \"seventh\", \"add9th\", \"ninth\"] as const;\n\n    export type SymbolAttribute = typeof SymbolAttributeList[number];\n\n    export type SymbolParams = {\n        key: SymbolKey;\n        name: string;\n        base: null | SymbolKey;\n        attr?: SymbolAttribute;\n        structs: IntervalRelation[];\n    }\n\n    export type BeatProps = {\n        // mol: number;\n        // den: number;\n        // 1拍のメモリ（16分音符）の数\n        beatMemoriCount: number;\n        // 1小節の拍数\n        barBeatCnt: number;\n    }\n\n    /**\n     * 拍子より拍情報を取得する\n     * @param beatSignature 拍子\n     * @returns 拍情報\n     */\n    export const getBeatProps = (beatSignature: BeatSignature): BeatProps => {\n        switch (beatSignature) {\n            case '4/4': return { beatMemoriCount: 4, barBeatCnt: 4 };\n            case '2/4': return { beatMemoriCount: 4, barBeatCnt: 2 };\n            case '3/4': return { beatMemoriCount: 4, barBeatCnt: 3 };\n            case '6/8': return { beatMemoriCount: 6, barBeatCnt: 2 };\n            case '9/8': return { beatMemoriCount: 6, barBeatCnt: 3 };\n            case '12/8': return { beatMemoriCount: 6, barBeatCnt: 4 };\n        };\n        // return {} as BeatProps;\n    }\n\n    /**\n     * 拍の長さからコードの持続時間をミリ秒で算出する\n     * @param beatLen \n     * @param minute \n     * @param bpm \n     * @param beatSignature \n     * @returns \n     */\n    export const calcSustainMsec = (beatLen: number, minute: number, bpm: number, beatSignature: BeatSignature): number => {\n        const beatMemoriCount = getBeatProps(beatSignature).beatMemoriCount;\n        const minuteLen = minute * (1 / beatMemoriCount);\n        return 60000 / bpm * (beatLen + minuteLen);\n    }\n\n\n    export type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\n\n    export type SymbolKey =\n        'major' |\n        'minor' |\n        'suspend4th' |\n        'diminish' |\n        'augument' |\n        'major-maj7th' |\n        'major-min7th' |\n        'minor-7th' |\n        'minor-maj7th' |\n        'sus4-7th' |\n        'diminish-7th' |\n        'augument-7th' |\n        'major-add9th' |\n        'minor-add9th' |\n        'sixth-9th' |\n        'minor-minus5' |\n        'major-minus5' |\n        'minor7-minus5' |\n        'major-maj9th' |\n        'major-9th' |\n        'sixth' |\n        'minor-sixth'\n        ;\n\n    export type DegreeProps = {\n        index: number;\n        isFlat: boolean;\n    };\n\n    export type ChordProps = {\n        root: DegreeProps;\n        symbolKey: SymbolKey;\n    };\n\n    export const SYMBOL_LIST: readonly SymbolParams[] = [\n        {\n            key: 'major', name: '',\n            base: null,\n            structs: ['p1', 'M3', 'p5'],\n            attr: 'triad'\n        },\n        {\n            key: 'minor', name: 'm',\n            base: null,\n            structs: ['p1', 'm3', 'p5'],\n            attr: 'triad'\n        },\n        {\n            key: 'suspend4th', name: 'sus4',\n            base: null,\n            structs: ['p1', 'p4', 'p5'],\n            attr: 'triad'\n        },\n        {\n            key: 'diminish', name: 'dim',\n            base: null,\n            structs: ['p1', 'm3', 'd5'],\n            attr: 'triad'\n        },\n        {\n            key: 'diminish-7th', name: 'dim7',\n            base: 'diminish',\n            structs: ['p1', 'm3', 'd5', 'd7'],\n            attr: 'seventh'\n        },\n        {\n            key: 'augument', name: 'aug',\n            base: null,\n            structs: ['p1', 'M3', 'a5'],\n            attr: 'triad'\n        },\n        {\n            key: 'augument-7th', name: 'aug7',\n            base: 'augument',\n            structs: ['p1', 'M3', 'a5', 'm7']\n        },\n        {\n            key: 'minor-minus5', name: 'm(-5)',\n            base: null,\n            structs: ['p1', 'm3', 'd5'],\n            attr: 'triad'\n        },\n        {\n            key: 'major-minus5', name: '-5',\n            base: null,\n            structs: ['p1', 'M3', 'd5'],\n            attr: 'triad'\n        },\n        {\n            key: 'minor7-minus5', name: 'm7(-5)',\n            base: 'minor-minus5',\n            structs: ['p1', 'm3', 'd5', 'm7'],\n            attr: 'seventh'\n        },\n        {\n            key: 'major-maj7th', name: 'maj7',\n            base: 'major',\n            structs: ['p1', 'M3', 'p5', 'M7'],\n            attr: 'seventh'\n        },\n        {\n            key: 'major-min7th', name: '7',\n            base: 'major',\n            structs: ['p1', 'M3', 'p5', 'm7'],\n            attr: 'seventh'\n        },\n        {\n            key: 'minor-7th', name: 'm7',\n            base: 'minor',\n            structs: ['p1', 'm3', 'p5', 'm7'],\n            attr: 'seventh'\n        },\n        {\n            key: 'sus4-7th', name: '7sus4',\n            base: 'suspend4th',\n            structs: ['p1', 'p4', 'p5', 'm7']\n        },\n        {\n            key: 'minor-maj7th', name: 'mmaj7',\n            base: 'minor',\n            structs: ['p1', 'm3', 'p5', 'M7'],\n            attr: 'seventh'\n        },\n        {\n            key: 'major-add9th', name: 'add9',\n            base: 'major',\n            structs: ['p1', 'M2', 'M3', 'p5'],\n            attr: 'add9th'\n        },\n        {\n            key: 'minor-add9th', name: 'madd9',\n            base: 'minor',\n            structs: ['p1', 'M2', 'm3', 'p5'],\n            attr: 'add9th'\n        },\n        {\n            key: 'major-maj9th', name: 'maj9',\n            base: 'major-maj7th',\n            structs: ['p1', 'm3', 'p5'],\n            attr: 'add9th'\n        },\n        {\n            key: 'major-9th', name: '9',\n            base: 'major-min7th',\n            structs: ['p1', 'm3', 'p5']\n        },\n        {\n            key: 'sixth', name: '6',\n            base: 'major',\n            structs: ['p1', 'M3', 'p5', 'M6']\n        },\n        {\n            key: 'minor-sixth', name: 'm6',\n            base: 'minor',\n            structs: ['p1', 'm3', 'p5', 'M6']\n        },\n    ];\n\n    /** インターバルの関係性 */\n    export const IntervalRelationProps = {\n        'p1': 0,\n        'm2': 1,\n        'M2': 2,\n        'm3': 3,\n        'M3': 4,\n        'p4': 5,\n        'd5': 6,\n        'p5': 7,\n        'a5': 8,\n        'm6': 8,\n        'M6': 9,\n        'd7': 9,\n        'm7': 10,\n        'M7': 11\n    }\n\n    export const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\n        { root: { index: 0, isFlat: false }, symbolKey: 'major' },\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\n        { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\n        { root: { index: 5, isFlat: false }, symbolKey: 'major' },\n        { root: { index: 7, isFlat: false }, symbolKey: 'major' },\n        { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\n        { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\n    ];\n\n    export const DIATONIC_MINOR_SCALE_LIST: readonly ChordProps[] = [\n        { root: { index: 0, isFlat: false }, symbolKey: 'minor' },\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor-minus5' },\n        { root: { index: 3, isFlat: true }, symbolKey: 'major' },\n        { root: { index: 5, isFlat: false }, symbolKey: 'minor' },\n        { root: { index: 7, isFlat: false }, symbolKey: 'minor' },\n        { root: { index: 8, isFlat: true }, symbolKey: 'major' },\n        { root: { index: 10, isFlat: true }, symbolKey: 'major' },\n    ];\n\n\n\n    export const DEGREE_ALL: readonly (DegreeProps | null)[] = [\n        null,\n        { index: 0, isFlat: false },\n        { index: 1, isFlat: false },\n        { index: 1, isFlat: true },\n        { index: 2, isFlat: false },\n        { index: 3, isFlat: false },\n        { index: 3, isFlat: true },\n        { index: 4, isFlat: false },\n        { index: 5, isFlat: false },\n        { index: 6, isFlat: false },\n        { index: 6, isFlat: true },\n        { index: 7, isFlat: false },\n        { index: 8, isFlat: false },\n        { index: 8, isFlat: true },\n        { index: 9, isFlat: false },\n        { index: 10, isFlat: false },\n        { index: 10, isFlat: true },\n        { index: 11, isFlat: false }\n    ];\n\n    export const getDegreeRoot = (props: DegreeProps) => {\n        const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\n        return list[props.index];\n    }\n\n    export const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\n        'Ⅰ', 'Ⅰmaj7',\n        'Ⅱm', 'Ⅱm7',\n        'Ⅲm', 'Ⅲm7',\n        'Ⅳ', 'Ⅳmaj7',\n        'Ⅴ', 'Ⅴ7',\n        'Ⅵm', 'Ⅵm7',\n        'Ⅶm(-5)', 'Ⅶm7(-5)'\n    ];\n\n    export const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\n        'Ⅰm', 'Ⅰm7',\n        'Ⅱm(-5)', 'Ⅱm7(-5)',\n        'bⅢ', 'bⅢM7',\n        'Ⅳm', 'Ⅳm7',\n        'Ⅴm', 'Ⅴm7',\n        'bⅥ', 'bⅥM7',\n        'bⅦ', 'bⅦ7'\n    ];\n\n    export const getDiatonicDegreeList = (scale: Scale) => {\n        return scale === 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES :\n            DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\n    }\n\n    export const getRootName = (\n        props: DegreeProps,\n        baseKeyIndex: number\n    ): string => {\n        const list = props.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST;\n        return list[(baseKeyIndex + props.index) % 12];\n    }\n\n\n\n    export const getSymbolFromKey = (key: string): SymbolParams | undefined => {\n        return SYMBOL_LIST.find((symbol) => {\n            if (key === symbol.key) {\n                return symbol;\n            }\n        });\n        // return ret != undefined ? ret : SYMBOL_LIST[0];\n    }\n\n    export const getSymbolsFromAttr = (attr: SymbolAttribute): SymbolParams[] => {\n        const list: SymbolParams[] = [];\n        SYMBOL_LIST.forEach((symbol) => {\n            if (attr === symbol.attr) {\n                list.push(symbol);\n            }\n        });\n        return list;\n    }\n\n    export const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\n        let list: SymbolKey[] = [];\n        SYMBOL_LIST.forEach((symbol) => {\n            if (key === symbol.base) {\n                list.push(symbol.key);\n            }\n        });\n        return list;\n    }\n\n    export const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\n        return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\n    }\n}\n\nexport default TheoryUtil;\n\n","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\nimport BackingState from \"../redux/store/score/backing/backingState\";\nimport ScoreCache from \"../redux/store/score/scoreCache\";\nimport { BackingLayerData, BackingPatternProps, BackingSignalProps, BeatSignature, ChordBacking, DetailChord, DetailInit, PedalInfo, VoicingProps } from \"../redux/store/score/scoreData\";\nimport { Store } from \"../redux/store/store\";\nimport { playHarmony } from \"./melodyUtil\";\nimport TheoryUtil from \"./theoryUtil\";\n\nexport namespace BackingUtil {\n\n    // オクターブの数\n    export const OCTAVE_NUM = 8;\n    // 管理する構成音の数\n    export const STRUCT_NUM = 6;\n    // チャンネルの最大数\n    export const CHANNEL_MAX = 12;\n\n    export const getChordDetails = (\n        root: TheoryUtil.DegreeProps,\n        keyIndex: number,\n        on: null | TheoryUtil.DegreeProps,\n        symbol: TheoryUtil.SymbolParams\n    ): [\n            string, BackingState.StructInfo[]\n        ] => {\n\n        // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\n        const chordRootIndex = (root.index + keyIndex) % 12;\n        const rootName = TheoryUtil.getRootName(root, keyIndex);\n        let chordFullName = rootName + symbol.name;\n\n        let chordOnIndex = -1;\n        // オンコードが設定されている場合\n        if (on != null) {\n            const onName = TheoryUtil.getRootName(on, keyIndex);\n            chordFullName = `${chordFullName}/${onName}`;\n\n            chordOnIndex = (on.index + keyIndex) % 12;\n        }\n\n        // 構成音情報を算出\n        let structList: BackingState.StructInfo[] = symbol.structs.map(struct => {\n            const relation = struct;\n            const interval = TheoryUtil.IntervalRelationProps[relation];\n            const soundIndex = (chordRootIndex + interval) % 12;\n            const adjustOctave = Math.floor((chordRootIndex + interval) / 12);\n            const isFlat = TheoryUtil.isFlatFromRelation(relation);\n            return {\n                relation, soundIndex, isFlat, adjustOctave\n            }\n        });\n        // オンコードを考慮\n        if (chordOnIndex !== -1) {\n            let sameIndex = -1;\n            structList.some((info, i) => {\n                if (info.soundIndex === chordOnIndex) {\n                    sameIndex = i;\n                    return;\n                }\n            });\n            // オンコードが構成音と被っている場合リストから削除\n            if (sameIndex !== -1) {\n                structList.splice(sameIndex, 1);\n            }\n            // オンコードをリストに追加\n            structList.unshift({\n                relation: null,\n                soundIndex: chordOnIndex,\n                isFlat: false,\n                adjustOctave: 0\n            });\n            // 音程の昇順でソート\n            structList.sort((a, b) => {\n                return a.soundIndex - b.soundIndex;\n            });\n\n            /** ソート後のオンコードの場所 */\n            let onIndex = -1;\n            structList.some((sound, i) => {\n                if (sound.relation == null) {\n                    onIndex = i;\n                    return;\n                }\n            });\n            const onChordIndex = structList[onIndex].soundIndex;\n            const tempList: BackingState.StructInfo[] = [];\n            for (let i = onIndex; i < structList.length; i++) {\n                const sound = structList[i];\n                tempList.push(sound);\n            }\n            for (let i = 0; i < onIndex; i++) {\n                const sound = structList[i];\n                tempList.push(sound);\n            }\n            tempList.forEach(sound => {\n                sound.adjustOctave = 0;\n                if (sound.soundIndex < onChordIndex) {\n                    sound.adjustOctave = 1;\n                }\n            });\n            structList = tempList;\n        }\n        return [chordFullName, structList];\n    }\n\n    export const getInitialRecord = (divCount: number) => {\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\n    }\n\n    export const buildChannels = (table: boolean[][]): BackingState.ChannelParam[] => {\n        const channels: BackingState.ChannelParam[] = [];\n        for (let i = 0; i < table.length; i++) {\n            for (let j = 0; j < table[i].length; j++) {\n                if (table[i][j]) {\n                    channels.push({ octave: i, structIndex: j });\n                }\n            }\n        }\n        if (channels.length === 0) {\n            channels.push({ octave: -1, structIndex: 0 });\n        }\n        return channels;\n    }\n\n    export const getVoicingListFromTable = (table: boolean[][]) => {\n\n        const voicingList: VoicingProps[] = [];\n        // ボイシングを設定\n        if (table != null) {\n            for (let i = 0; i < table.length; i++) {\n                for (let j = 0; j < table[i].length; j++) {\n                    if (table[i][j]) {\n                        voicingList.push({ octave: i, struct: j });\n                    }\n                }\n            }\n        }\n        return voicingList;\n    }\n\n    export const buildPatternProps = (editorPattern: BackingState.Pattern): BackingPatternProps => {\n        const channelSize = editorPattern.channels.length;\n        const layers: BackingLayerData[] = [];\n        editorPattern.layers.forEach(layer => {\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\n            const signals: BackingSignalProps[] = [];\n            layer.table.forEach((record, i) => {\n                record.forEach((cell, j) => {\n                    if (cell != null) {\n                        signals.push({ x: j, y: i, status: cell });\n                    }\n                });\n            });\n            layers.push({ divs, notesList: signals, vels: layer.velocityList.slice() });\n        });\n        const pedals: PedalInfo[] = [];\n        editorPattern.pedalActs.forEach((pedal, i) => {\n            if (pedal != null) pedals.push({\n                divIndex: i, action: pedal\n            });\n        });\n        return { channelSize, pedals, layers };\n    }\n\n    export const getChannels = (voicingStructs: BackingState.ChannelParam[], size: number) => {\n        const channels: BackingState.ChannelParam[] = [];\n        for (let i = 0; i < size; i++) {\n            const channel: BackingState.ChannelParam = { octave: -1, structIndex: 0 };\n            if (i < voicingStructs.length) {\n                channel.octave = voicingStructs[i].octave;\n                channel.structIndex = voicingStructs[i].structIndex;\n            }\n            channels.push(channel);\n        }\n        return channels.reverse();\n    }\n\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\n\n        const layers: BackingState.Layer[] = [];\n        // console.log(JSON.stringify(scoreLayers));\n        scoreLayers.forEach(scoreLayer => {\n            const table: (BackingState.NoteStatus | null)[][] = [];\n            for (let i = 0; i < channelSize; i++) {\n                const record: (BackingState.NoteStatus | null)[] = [];\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\n                    record.push(notes == null ? null : notes.status);\n                }\n                table.push(record);\n            }\n            layers.push({\n                noteDivList: scoreLayer.divs,\n                table,\n                velocityList: scoreLayer.vels\n            });\n        });\n        // console.log(JSON.stringify(layers));\n        return layers;\n    }\n\n    export const getPitchListFromVoicing = (\n        voicingList: VoicingProps[],\n        structList: BackingState.StructInfo[]\n    ) => {\n        // return voicingList.map((item) => {\n        //     const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\n        //     return 12 * item.octave + rootIndex + interval;\n        // });\n        return voicingList.map((item) => {\n            // const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\n            // return 12 * item.octave + rootIndex + interval;\n            const struct = structList[item.struct];\n            const octave = item.octave + struct.adjustOctave;\n            return 12 * octave + struct.soundIndex;\n        });\n    }\n\n    export const playBacking = (\n        store: Store,\n        reserveTasks: NodeJS.Timeout[],\n        baseInfo: DetailInit,\n        backing: ChordBacking,\n        pitchIndexList: number[],\n        chordTime: number\n    ) => {\n        if (backing.pattern == null) {\n            pitchIndexList.forEach((index) => {\n                const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\n                const octave = Math.floor(index / 12);\n                const soundFullName = soundName + octave;\n                playHarmony(soundFullName, store, chordTime / 1000, 5);\n            });\n        } else {\n\n            const bpm = baseInfo.bpm;\n            const beatProps = TheoryUtil.getBeatProps(baseInfo.beatSignature);\n            const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (2 / 3);\n\n            const pattern = backing.pattern;\n            // const pedalIndexes = pattern.pedals === undefined ? null : pattern.pedals.map(pedal => pedal.divIndex);\n\n            /** ペダルの有効範囲を定義したリスト */\n            const pedalRangeList: { start: number, end: number, action: BackingState.PedalAction }[] = [];\n            pattern.layers.forEach((layer, i) => {\n                /** バッキング内で経過した時間（ノーツごとの開始時間） */\n                let total = 0;\n                const timeList: {\n                    start: number, sustain: number\n                }[] = layer.divs.map(div => {\n                    /** 開始時間 */\n                    const start = 60000 / bpm * total;\n                    let normal = 4 / div.rate * adjustRate;\n                    if (div.isDot) normal *= 1.5;\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\n                    total += normal;\n                    return { start, sustain: 60000 / bpm * normal };\n                });\n\n                // ペダル状態のキャッシュを作成\n                if (i === 0 && pattern.pedals != undefined) {\n                    timeList.forEach((divTime, j) => {\n                        const pedalInfo = pattern.pedals?.find((pedal) => {\n                            if (j === pedal.divIndex) return pedal;\n                        });\n                        if (pedalInfo != undefined) {\n\n                            if (pedalRangeList.length > 0) {\n                                pedalRangeList[pedalRangeList.length - 1].end = divTime.start;\n                            }\n                            pedalRangeList.push({\n                                start: divTime.start,\n                                end: chordTime,\n                                action: pedalInfo.action\n                            });\n                        }\n                    });\n                }\n\n                /** 除外リスト（タイで吸収されるノーツ） */\n                const ignoreList: { x: number, y: number }[] = [];\n                layer.notesList.forEach((notes) => {\n\n                    // 除外リストに含まれている場合、以降の処理をしない\n                    if (ignoreList.find(ig => {\n                        if (ig.x === notes.x && ig.y === notes.y) return ig;\n                    }) !== undefined) return;\n\n                    const timeInfo = timeList[notes.x];\n                    const timing = notes.status.timing == undefined ? 0 : notes.status.timing;\n                    const timingAdj = timing * (60000 / bpm * 1 / 32);\n                    const startTime = timeInfo.start + timingAdj;\n\n                    /** 持続時間 */\n                    let sustainTime = timeInfo.sustain;\n                    if (notes.status.signal === 's') {\n                        // スタッカートの場合半分の音価にする\n                        sustainTime *= 0.5;\n                    } else if (notes.status.signal === 't') {\n\n                        let inc = notes.x;\n                        let isNext = true;\n                        while (isNext) {\n                            inc++;\n                            // 次のノーツを探す\n                            const nextNotes = layer.notesList.find(next => {\n                                if (next.x === inc && next.y === notes.y) {\n                                    return next;\n                                }\n                            });\n                            if (nextNotes != undefined) {\n                                sustainTime += timeList[inc].sustain;\n                                // 次の要素を除外する\n                                ignoreList.push({ x: inc, y: notes.y });\n                                // 次のノーツがタイだったらループを継続\n                                isNext = nextNotes.status.signal === 't';\n                            }\n                        }\n                    }\n\n                    //ペダルを検出\n                    for (let k = 0; k < pedalRangeList.length; k++) {\n                        const pedal = pedalRangeList[k];\n                        const notesTail = startTime + timeInfo.sustain;\n                        if (pedal.action !== 'off' && notesTail > pedal.start &&\n                            notesTail <= pedal.end\n                        ) {\n                            // ペダルの持続時間で更新\n                            sustainTime = pedal.end - startTime;\n                            break;\n                        }\n                    }\n\n                    /** 音量 */\n                    const velAdj = notes.status.velAdj == undefined ? 0 : notes.status.velAdj;\n                    let gain = layer.vels[notes.x] + velAdj;\n                    if (gain < 1) gain = 1;\n                    if (gain > 10) gain = 10;\n                    gain *= 0.6;\n                    reserveTasks.push(\n                        setTimeout(() => {\n                            const index = pitchIndexList[notes.y];\n                            const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\n                            const octave = Math.floor(index / 12);\n                            const soundFullName = soundName + octave;\n                            playHarmony(soundFullName, store, sustainTime / 1000, gain);\n                        }, startTime)\n                    );\n                });\n            });\n        }\n    }\n\n    export const stopPreview = (store: Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\n        store.instruments.harmonyFont?.stop();\n        state.isPreview = false;\n        reserveTasks.forEach(id => clearInterval(id));\n        dispatcher.backing.setState(state);\n    }\n\n    export const getLimitLen = (beatLen: number, minute: BackingState.MinuteProps, beatSignature: BeatSignature) => {\n        // 16分音符の長さで割る\n        const memoriCount = TheoryUtil.getBeatProps(beatSignature).beatMemoriCount;\n        const minuteLen = minute.head / memoriCount + minute.tail / memoriCount;\n        return (beatLen + minuteLen);\n    }\n\n    export const getUsingLenFromDivs = (divs: BackingState.NoteDiv[], beatSignature: BeatSignature) => {\n        const beatProps = TheoryUtil.getBeatProps(beatSignature);\n        const adjustRate = 4 / beatProps.beatMemoriCount;\n        return divs.reduce((prev, cur) => {\n            let len = 1 / cur.rate * adjustRate;\n            if (cur.isDot) len *= 1.5;\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\n            return prev + len * 4;\n        }, 0);\n    }\n\n    export const getInitVoicingTable = (voicingList: VoicingProps[], structCnt: number): boolean[][] => {\n        const table = new Array<boolean[]>(8);\n        for (let i = 0; i < table.length; i++) {\n            table[i] = new Array<boolean>(6);\n            const col = table[i];\n            for (let j = 0; j < col.length; j++) {\n                // 構成音をオーバーしていた場合セットしない\n                if (j >= structCnt) continue;\n\n                const isExist = voicingList.find(voicing => {\n                    if (voicing.octave === i && voicing.struct === j) {\n                        return voicing;\n                    }\n                });\n                table[i][j] = isExist != null;\n            }\n        }\n        return table;\n    };\n\n    export const getEditorPatternFromChordBacking = (voicingTable: boolean[][], patternProps: BackingPatternProps | null) => {\n        let pattern: BackingState.Pattern | null = null;\n        if (patternProps != null) {\n            const voicingStructs = BackingUtil.buildChannels(voicingTable);\n            const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\n            const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);\n            let pedalActs: (null | BackingState.PedalAction)[] = [];\n            if (patternProps.pedals != undefined) {\n                for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\n                    const pedal = patternProps.pedals.find(pedal => {\n                        if (pedal.divIndex === i) return pedal;\n                    });\n                    if (pedal == undefined) pedalActs.push(null);\n                    else pedalActs.push(pedal.action);\n                }\n            } else {\n                for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\n                    if (i === 0) pedalActs.push('on');\n                    else pedalActs.push(null);\n                }\n            }\n            pattern = {\n                channelIndex: -1,\n                lenIndex: 0,\n                mode: 'velocity',\n                layerIndex: 0,\n                channels,\n                layers,\n                pedalActs\n            };\n        }\n        return pattern;\n    }\n\n    export const hasBackingError = (detail: DetailChord, beatSignature: BeatSignature, structCnt: number) => {\n        const chordBacking = detail.backing;\n        const voicingList = detail.backing.voicingList;\n        const pattern = chordBacking.pattern;\n        \n        let hasError = false;\n\n        // ボイシングが構成音に収まっているかチェック\n        voicingList.some(voicing => {\n            if(voicing.struct > structCnt - 1) {\n                hasError = true;\n                return true; // ループから脱出\n            }\n        });\n        if (pattern != null) {\n\n            const limitLen = BackingUtil.getLimitLen(detail.beatLen, detail.minute, beatSignature);\n            pattern.layers.forEach(layer => {\n\n                const totalLen = getUsingLenFromDivs(layer.divs, beatSignature);\n                // パターンがコードの長さを超えている場合\n                if (limitLen < totalLen) hasError = true;\n            });\n        }\n\n        return hasError;\n    }\n\n    export const checkEditorError = (\n        chordInfo: BackingState.ChordInfo,\n        voicingList: VoicingProps[],\n        pattern: null | BackingState.Pattern\n    ): boolean => {\n        let hasError = false;\n        if (pattern != null) {\n\n            // 選択しているボイシングがチャンネル数に満たない場合\n            if (voicingList.length < pattern.channels.length) hasError = true;\n\n            const limitLen = BackingUtil.getLimitLen(chordInfo.beatLen, chordInfo.minute, chordInfo.init.beatSignature);\n            pattern.layers.forEach(layer => {\n\n                const totalLen = getUsingLenFromDivs(layer.noteDivList, chordInfo.init.beatSignature);\n                // パターンがコードの長さを超えている場合\n                if (limitLen < totalLen) hasError = true;\n            });\n\n            // 裏レイヤーのノーツと重なっている場合\n            pattern.layers[0].table.forEach((record, i) => {\n                record.forEach((cell, j) => {\n                    if (cell != null) {\n                        if (checkOverlapBackLayer(pattern.layers, 0, i, j)) {\n                            hasError = true;\n                        }\n                    }\n                });\n            })\n        }\n\n        return hasError;\n    }\n\n    export const checkOverlapBackLayer = (layers: BackingState.Layer[], layerIndex: number, channelIndex: number, divIndex: number): boolean => {\n        const baseLayer = layers[layerIndex];\n        const backLayer = layers[layerIndex === 0 ? 1 : 0];\n        const [left, right] = getDivRange(baseLayer.noteDivList, divIndex);\n        // console.log(`left=${left}, right=${right}`);\n        let isOverlap = false;\n        for (let i = 0; i < backLayer.noteDivList.length; i++) {\n            if (backLayer.table[channelIndex][i] != null) {\n                const [backLeft, backRight] = getDivRange(backLayer.noteDivList, i);\n                if (right > backLeft && left < backRight) {\n                    isOverlap = true;\n                    break;\n                }\n            }\n        }\n        return isOverlap;\n    }\n\n    export const getDivRange = (divs: BackingState.NoteDiv[], divIndex: number): [number, number] => {\n        let [left, right] = [0, 0];\n\n        divs.slice(0, divIndex + 1).forEach((cur, i) => {\n            let len = 1 / cur.rate;\n            if (cur.isDot) len *= 1.5;\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\n            left = right;\n            right += len * 4;\n        });\n        return [left, right];\n    }\n\n    export const isPermitDot = (note: BackingState.NoteDiv) => {\n        return [8, 4, 2].includes(note.rate) && note.div3 === 0;\n    }\n\n    export const isPermit3ren = (note: BackingState.NoteDiv) => {\n        return [8, 4].includes(note.rate) && !note.isDot;\n    }\n}\n\nexport default BackingUtil;","import { symbolName } from \"typescript\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n/**\r\n * データを高速で参照するために、\r\n * 事前に計算したデータを保持するためのユーティリティを提供する\r\n */\r\nnamespace CacheUtil {\r\n\r\n    /**\r\n     * ハーモナイズのキャッシュを生成する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const updateHarmonizeCache = (store: Store, dispatcher: Dispatcher) => {\r\n        const chordList = store.scoreData.chordList;\r\n        const scoreState = store.scoreState;\r\n        const init = (chordList[0].detail as DetailInit);\r\n\r\n        const elementCacheList: ScoreCache.Element[] = [];\r\n        const sectionCacheList: ScoreCache.Section[] = [];\r\n        const beatCacheList: ScoreCache.BeatRange[] = [];\r\n        const scaleCacheList: ScoreCache.KeyScaleRange[] = [];\r\n        const tempoCacheList: ScoreCache.TempoRange[] = [];\r\n        const measureCacheList: ScoreCache.Measure[] = [];\r\n\r\n        // 初期値情報\r\n        let keyIndex = init.keyIndex;\r\n        let scale = init.scale;\r\n        let bpm = init.bpm;\r\n\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let sectionBeatSum = 0;\r\n        let pastSecond = 0;\r\n        let curSecond = 0;\r\n        let chordIndex = -1;\r\n        // let curTotalBeat = 0;\r\n        let curMemoriCount = 0;\r\n        let totalBarCount = 0;\r\n\r\n        // 経過した16分音符のカウント\r\n        let totalMemoriCount = 0;\r\n        let beatRangeMemoriCount = 0;\r\n        let totalBeat = 0;\r\n        let totalMemoriBarCount = 0;\r\n\r\n        let chordBlockNo = -1;\r\n\r\n        //拍キャッシュの産出に使う変数\r\n        let beatSignature = init.beatSignature;\r\n\r\n        let scaleMemoriCount = 0;\r\n        let tempoMemoriCount = 0;\r\n\r\n        const addScaleRange = () => {\r\n            scaleCacheList.push({\r\n                keyIndex,\r\n                scale,\r\n                memoriCnt: scaleMemoriCount\r\n            });\r\n            scaleMemoriCount = 0;\r\n        }\r\n        const addTempoRange = () => {\r\n            tempoCacheList.push({\r\n                bpm,\r\n                beatRate: beatProps.beatMemoriCount / 4,\r\n                memoriCnt: tempoMemoriCount\r\n            });\r\n            tempoMemoriCount = 0;\r\n        }\r\n\r\n\r\n        let beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        chordList.forEach((element, i) => {\r\n\r\n            const prevBeat = totalBeat;\r\n            // ブロック頭のメモリ\r\n            const prevMemoriCount = totalMemoriCount;\r\n            // ブロック頭の小節\r\n            const prevBarCount = totalBarCount;\r\n            const prevMinute = totalMinute;\r\n            const type = element.type;\r\n\r\n            switch (type) {\r\n                // 固定要素ブロック\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        pastSecond += curSecond;\r\n                    }\r\n                } break;\r\n\r\n                // セクション要素ブロック\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                } break;\r\n\r\n                // コード要素ブロック\r\n                case 'chord': {\r\n                    pastSecond += curSecond;\r\n                    // curTotalBeat += curSustain;\r\n\r\n                    const detail = element.detail as DetailChord;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    totalMinute += minute;\r\n                    chordIndex++;\r\n\r\n                    curMemoriCount = detail.beatLen * beatProps.beatMemoriCount + minute;\r\n\r\n                    const prevBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    totalBeat += detail.beatLen;\r\n                    const curBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    // 小節が変わった場合、合計小節をインクリメント\r\n                    if (prevBar !== curBar) {\r\n                        totalBarCount++\r\n                    }\r\n\r\n                    // スケールキャッシュの長さを加算\r\n                    scaleMemoriCount += curMemoriCount;\r\n                    tempoMemoriCount += curMemoriCount;\r\n\r\n                    // 時間の計算\r\n                    curSecond = TheoryUtil.calcSustainMsec(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        bpm,\r\n                        beatSignature\r\n                    );\r\n\r\n                    // メモリの加算\r\n                    for (let j = 0; j < curMemoriCount; j++) {\r\n                        let rate: ScoreCache.MeasureRate = 16;\r\n                        if (beatRangeMemoriCount % beatProps.beatMemoriCount === 0) rate = 4;\r\n                        else if (beatRangeMemoriCount % (beatProps.beatMemoriCount / (beatProps.beatMemoriCount / 2)) === 0) rate = 8;\r\n\r\n                        const barMemoriCount = beatProps.barBeatCnt * beatProps.beatMemoriCount;\r\n\r\n                        let dispBarCount = -1;\r\n                        if (beatRangeMemoriCount % barMemoriCount === 0) {\r\n                            // 拍子セクションの合計メモリ数が小節のメモリ数で割り切れる場合、小節数を表示する\r\n                            totalMemoriBarCount++;\r\n                            dispBarCount = totalMemoriBarCount;\r\n                        }\r\n                        measureCacheList.push({ rate, barCount: dispBarCount });\r\n                        totalMemoriCount++;\r\n                        beatRangeMemoriCount++;\r\n                    }\r\n\r\n                    // コードブロック連番の設定\r\n                    chordBlockNo++;\r\n                } break;\r\n\r\n                // アルター要素ブロックする\r\n                case 'alter': {\r\n                    const detail = element.detail as DetailAlter;\r\n                    switch (detail.alterType) {\r\n                        // 音階が変わる\r\n                        case 'modulate': {\r\n                            addScaleRange();\r\n                            switch (detail.modRel) {\r\n                                case 'domm': {\r\n                                    keyIndex = (keyIndex + 24 + 7 * detail.dommVal) % 12;\r\n                                } break;\r\n                                case 'key': {\r\n                                    keyIndex = (keyIndex + 12 + detail.keyAdj) % 12;\r\n                                } break;\r\n                                case 'parallel': {\r\n                                    keyIndex = (keyIndex + 12 + (scale === 'major' ? -1 : 1) * 3) % 12;\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                                case 'relative': {\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // テンポが変わる\r\n                        case 'tempo': {\r\n                            addTempoRange();\r\n                            switch (detail.tempoRel) {\r\n                                case 'diff': {\r\n                                    bpm += detail.tempoDiff;\r\n                                } break;\r\n                                case 'rate': {\r\n                                    bpm = Math.floor(bpm * 1 * (detail.tempoRate / 100));\r\n                                } break;\r\n                                case 'abs': {\r\n                                    bpm = detail.tempoAbs;\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // 拍子が変わる\r\n                        case 'beat': {\r\n                            addTempoRange();\r\n                            // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n                            beatCacheList.push({\r\n                                beatSignature,\r\n                                memoriCnt: beatRangeMemoriCount\r\n                            });\r\n\r\n                            beatSignature = detail.beatSignature;\r\n                            // 拍を初期化する（拍変更後はいかなる場合も0から数える）\r\n                            totalBeat = 0;\r\n                            beatRangeMemoriCount = 0;\r\n\r\n                            beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n                        } break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n\r\n            elementCacheList.push({\r\n                bar: prevBarCount,\r\n                surplusBeat: prevBeat % beatProps.barBeatCnt,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                scale,\r\n                bpm,\r\n                beatSignature,\r\n                sectionNo,\r\n                pastSecond,\r\n                chordIndex,\r\n                curTotalMemori: prevMemoriCount,\r\n                // chordFullName,\r\n                // structList,\r\n                chordBlockNo,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n        scaleCacheList.push({\r\n            keyIndex,\r\n            scale,\r\n            memoriCnt: scaleMemoriCount\r\n        });\r\n\r\n        beatCacheList.push({\r\n            beatSignature,\r\n            memoriCnt: beatRangeMemoriCount\r\n        });\r\n        addTempoRange();\r\n\r\n        scoreState.elementCacheList = elementCacheList;\r\n        scoreState.sectionCacheList = sectionCacheList;\r\n        scoreState.beatCacheList = beatCacheList;\r\n        scoreState.tempoCacheList = tempoCacheList;\r\n        scoreState.scaleCacheList = scaleCacheList;\r\n        scoreState.measureCacheList = measureCacheList;\r\n\r\n        scoreState.chordCacheList = createChordCacheList(chordList, elementCacheList);\r\n\r\n        dispatcher.score.setScoreState(scoreState);\r\n    }\r\n\r\n    export const createChordCacheList = (chordList: ChordElement[], elementCacheList: ScoreCache.Element[]) => {\r\n\r\n        const chordCacheList: ScoreCache.Chord[] = [];\r\n\r\n        chordList.forEach((element, i) => {\r\n\r\n            const type = element.type;\r\n            if (type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const cache = elementCacheList[i];\r\n\r\n\r\n                const keyIndex = cache.keyIndex;\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                const [chordFullName, structList] = detail.root != null ? BackingUtil.getChordDetails(\r\n                    detail.root,\r\n                    keyIndex,\r\n                    detail.on,\r\n                    symbol\r\n                ) : ['', []];\r\n\r\n                const backingError = BackingUtil.hasBackingError(detail, cache.beatSignature, structList.length);\r\n\r\n                chordCacheList.push({\r\n                    structList,\r\n                    chordFullName,\r\n                    backingError\r\n                });\r\n\r\n            }\r\n        });\r\n        return chordCacheList;\r\n    }\r\n\r\n    // export const getChordCache = (focusIndex: number, ) => {\r\n\r\n    // }\r\n\r\n\r\n    // export const updateMelodyCache = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    //     const notesList = store.scoreData.notesList;\r\n    //     const state = store.melodyState;\r\n\r\n    //     const notesCacheList: ScoreCache.NotesCache[] = [];\r\n\r\n    //     notesList.forEach((notes) => {\r\n    //         const startTime = 0;\r\n    //         const duration = 0;\r\n    //         notesCacheList.push({\r\n    //             startTime,\r\n    //             duration\r\n    //         });\r\n    //     });\r\n    // }\r\n\r\n    export const getKeyScaleFromNotesPos = (pos: number, scaleCacheList: ScoreCache.KeyScaleRange[]) => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let range: ScoreCache.KeyScaleRange | null = null;\r\n        // console.log(`count: ${scaleCacheList.length}`);\r\n        for (let i = 0; i < scaleCacheList.length; i++) {\r\n            const info = scaleCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                range = scaleCacheList[i - 1];\r\n                break;\r\n            }\r\n            tail += info.memoriCnt;\r\n            // console.log(`curPos: ${tail}`);\r\n        }\r\n        // console.log(`curMemori: ${curMemori}`);\r\n        return range === null ? scaleCacheList[scaleCacheList.length - 1] : range;\r\n    }\r\n\r\n    /**\r\n     * ノーツを再生する開始時間と持続時間を産出して返す\r\n     * @param pos ノーツの位置\r\n     * @param len ノーツの長さ\r\n     * @param tempoCacheList テンポのキャッシュリスト\r\n     * @returns \r\n     */\r\n    export const getTimeInfoFromNotesPos = (pos: number, len: number, tempoCacheList: ScoreCache.TempoRange[]): [number, number] => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let posTime = 0;\r\n        let pastLen = 0;\r\n        let last: ScoreCache.TempoRange | null = null;\r\n        for (let i = 0; i < tempoCacheList.length; i++) {\r\n            const info = tempoCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                last = tempoCacheList[i - 1];\r\n                break;\r\n            }\r\n            const beatLen = info.memoriCnt / 4;\r\n            posTime += 60 / info.bpm * beatLen;\r\n            pastLen += beatLen;\r\n            tail += info.memoriCnt;\r\n        }\r\n        if (last === null) {\r\n            last = tempoCacheList[tempoCacheList.length - 1];\r\n        }\r\n\r\n        const beatLen = (pos - pastLen) * last.beatRate;\r\n        posTime += 60 / last.bpm * beatLen;\r\n\r\n        const lenTime = 60 / last.bpm * len * last.beatRate;\r\n\r\n        return [posTime, lenTime];\r\n    }\r\n}\r\n\r\nexport default CacheUtil;\r\n","import { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/score/scoreData\";\nimport { Store } from \"../redux/store/store\";\nimport TheoryUtil from \"./theoryUtil\";\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\nimport BackingUtil from \"./backingUtil\";\nimport CacheUtil from \"./cacheUtil\";\n\nexport const PITCH_MAX = 60;\n\nexport const getKeyIndexFromPitcher = (index: number) => {\n    return (PITCH_MAX - 1 - index + 9) % 12;\n}\n\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\n    let total = 0;\n    total += (notes.len4 ?? 0);\n    total += (notes.len8 ?? 0) / 2;\n    total += (notes.len16 ?? 0) / 4;\n    total += (notes.len32 ?? 0) / 8;\n    total += (notes.len4div3 ?? 0) / 3;\n    total += (notes.len8div3 ?? 0) / 6;\n    return total;\n}\n\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\n    const ml: MelodyLength = {};\n    const len4 = (notes1.len4 ?? 0) + (notes2.len4 ?? 0);\n    if (len4 > 0) ml.len4 = len4;\n    const len8 = (notes1.len8 ?? 0) + (notes2.len8 ?? 0);\n    if (len8 > 0) ml.len8 = len8;\n    const len16 = (notes1.len16 ?? 0) + (notes2.len16 ?? 0);\n    if (len16 > 0) ml.len16 = len16;\n    const len32 = (notes1.len32 ?? 0) + (notes2.len32 ?? 0);\n    if (len32 > 0) ml.len32 = len32;\n    const len4div3 = (notes1.len4div3 ?? 0) + (notes2.len4div3 ?? 0);\n    if (len4div3 > 0) ml.len4 = len4div3;\n    const len8div3 = (notes1.len8div3 ?? 0) + (notes2.len8div3 ?? 0);\n    if (len8div3 > 0) ml.len8div3 = len8div3;\n    return getSortetdNotesLen(ml);\n}\n\nconst getSortetdNotesLen = (base: MelodyLength) => {\n    let len4 = base.len4 ?? 0;\n    let len8 = base.len8 ?? 0;\n    let len16 = base.len16 ?? 0;\n    let len32 = base.len32 ?? 0;\n    let len4div3 = base.len4div3 ?? 0;\n    let len8div3 = base.len8div3 ?? 0;\n\n    const ml: MelodyLength = {};\n\n    const len32Cnt2 = Math.floor(len32 / 2);\n    len32 -= len32Cnt2 * 2;\n    len16 += len32Cnt2;\n\n    const len8div3Cnt3 = Math.floor(len8div3 / 3);\n    len8div3 -= len8div3Cnt3 * 3;\n    len8 += len8div3Cnt3;\n\n    const len8div3Cnt2 = Math.floor(len8div3 / 2);\n    len8div3 -= len8div3Cnt2 * 2;\n    len4div3 += len8div3Cnt2;\n\n    const len4div3Cnt3 = Math.floor(len4div3 / 3);\n    len4div3 -= len4div3Cnt3 * 3;\n    len4 += len4div3Cnt3;\n\n    const len16Cnt2 = Math.floor(len16 / 2);\n    len16 -= len16Cnt2 * 2;\n    len8 += len16Cnt2;\n\n    const len8Cnt2 = Math.floor(len8 / 2);\n    len8 -= len8Cnt2 * 2;\n    len4 += len8Cnt2;\n\n    if (len4 > 0) ml.len4 = len4;\n    if (len8 > 0) ml.len8 = len8;\n    if (len16 > 0) ml.len16 = len16;\n    if (len32 > 0) ml.len32 = len32;\n    if (len4div3 > 0) ml.len4div3 = len4div3;\n    if (len8div3 > 0) ml.len8div3 = len8div3;\n\n    return ml;\n}\n\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\n\n    let len4 = 0;\n    let len8 = 0;\n    let len16 = 0;\n    let len32 = 0;\n    let len4div3 = 0;\n    let len8div3 = 0;\n\n    switch (quantize) {\n        case 1: len4 = count; break;\n        case 2: len8 = count; break;\n        case 3: len4div3 = count; break;\n        case 4: len16 = count; break;\n        case 8: len32 = count; break;\n        case 6: len8div3 = count; break;\n    }\n\n    const ml: MelodyLength = {};\n    if (len4 > 0) ml.len4 = len4;\n    if (len8 > 0) ml.len8 = len8;\n    if (len16 > 0) ml.len16 = len16;\n    if (len32 > 0) ml.len32 = len32;\n    if (len4div3 > 0) ml.len4div3 = len4div3;\n    if (len8div3 > 0) ml.len8div3 = len8div3;\n    return getSortetdNotesLen(ml);\n}\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\n//     // let normal = a;\n//     let len4 = 0;\n//     let len8 = 0;\n//     let len16 = 0;\n//     let len4div3 = 0;\n//     let len8div3 = 0;\n\n//     normal *= 12;\n\n//     len4 = Math.floor(normal / 12);\n//     normal -= len4 * 12;\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\n//         len8 = Math.floor(normal / 12 * 2);\n//         normal -= len8 * 12 / 2;\n//     }\n//     len4div3 = Math.floor(normal / 12 * 3);\n//     normal -= len4div3 * 12 / 3;\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\n//         len16 = Math.floor(normal / 12 * 4);\n//         normal -= len16 * 12 / 4;\n//     }\n//     len8div3 = Math.floor(normal / 12 * 6);\n//     return {\n//         len4, len8, len16, len4div3, len8div3\n//     };\n// }\n\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\n\n    if ((notes.len32 ?? 0) > 0) return 8;\n    else if ((notes.len8div3 ?? 0) > 0) return 6;\n    else if ((notes.len16 ?? 0) > 0) return 4;\n    else if ((notes.len4div3 ?? 0) > 0) return 3;\n    else if ((notes.len8 ?? 0) > 0) return 2;\n    else if ((notes.len4 ?? 0) > 0) return 1;\n    else return 0;\n}\n\nexport const playSoundfont = (i: number, store: Store) => {\n    const keyIndex = ((59 - i) + 9) % 12;\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\n    const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\n    const instrument = store.instruments.melodyFont;\n    if (instrument != null) {\n        instrument.stop();\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\n    }\n}\n\nexport const playHarmony = (soundFullName: string, store: Store, duration: number, gain: number) => {\n    const instrument = store.instruments.harmonyFont;\n    if (instrument != null) {\n        instrument.play(soundFullName, 0, { gain, duration });\n    } else {\n        // alert('null');\n    }\n}\n\nexport const stopPiano = (store: Store) => {\n    const instrument = store.instruments.harmonyFont;\n    if (instrument != null) {\n        instrument.stop();\n    }\n}\n\nexport const searchCurChord = (store: Store, focusIndex: number) => {\n    const state = store.melodyState;\n    const chordList = store.scoreData.chordList;\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\n    let left = 0;\n    const searchedChord = chordList.find((element) => {\n        if (element.type === 'chord') {\n            const detail = element.detail as DetailChord;\n            const width = detail.beatLen * state.beatWidth;\n            if (x >= left && x < left + width) {\n                return element;\n            }\n            left += width;\n        }\n    });\n    return searchedChord == undefined ? null : searchedChord;\n}\n\nnamespace MelodyUtil {\n\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\n\n        const state = store.melodyState;\n        state.isPreview = false;\n        // state.focusIndex = state.lastFocus;\n        // state.distIndex = state.focusIndex;\n        reserveTasks.forEach(id => clearInterval(id));\n        // store.instruments.sampler.releaseAll();\n        dispatcher.melody.setState(state);\n        dispatcher.melody.adjustScrollX();\n    }\n\n    /**\n     * プレビュー再生を開始する\n     * @param store ストア\n     * @param dispatcher ディスパッチャー\n     */\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\n\n        const state = store.melodyState;\n        const scoreState = store.scoreState;\n        const data = store.scoreData;\n        const reserveTasks: NodeJS.Timeout[] = [];\n        const instrument = store.instruments.melodyFont;\n\n        // 開始するフォーカス（非選択時は最初から）\n        const start = state.focusIndex === -1 ? 0 : state.focusIndex;\n\n        // プレビュー開始時のフォーカスを保持する\n        state.lastFocus = state.focusIndex;\n        state.isPreview = true;\n        const update = store.invalidate.melody as () => void;\n        let firstTime = -1;\n        for (let i = start; i < data.notesList.length; i++) {\n            const notes = data.notesList[i];\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\n            const pos = getNormalizeLenFromNotes(notes.pos);\n            const len = getNormalizeLenFromNotes(notes.len);\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\n            const pitch = notes.pitchIndex;\n            // const time = 60 / bpm * pos;\n\n            // 開始時のノーツの位置（時間）を保存する。\n            if (firstTime === -1) {\n                // ノーツ非選択時は先頭から流す\n                if (state.focusIndex === -1) {\n                    firstTime = 0;\n                } else {\n                    firstTime = posTime;\n                }\n            }\n\n            const keyIndex = getKeyIndexFromPitcher(pitch);\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\n\n            reserveTasks.push(\n                setTimeout(() => {\n                    // state.mouseState.curChord = searchCurChord(store, i);\n\n                    // dispatcher.tune.setState(state);\n                    if (instrument != null) {\n                        instrument.stop();\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\n                    }\n                    setTimeout(() => {\n                        state.focusIndex = i;\n                        state.destIndex = state.focusIndex;\n                        update();\n                        dispatcher.melody.adjustScrollX();\n                        // dispatcher.melody.setState(state);\n                    }, 0);\n                }, (posTime - firstTime) * 1000)\n            );\n\n            // 終端ノーツの処理\n            if (i === data.notesList.length - 1) {\n                reserveTasks.push(\n                    setTimeout(() => {\n                        stopPreview(store, dispatcher, reserveTasks);\n                    }, (posTime - firstTime + lenTime) * 1000)\n                );\n            }\n        }\n\n        // ハーモニーを再生\n        if (!state.isSolo) {\n            previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\n        }\n\n\n        dispatcher.system.setReserveTasks(reserveTasks);\n        dispatcher.melody.setState(state);\n    }\n\n    const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\n        const state = store.scoreState;\n        const update = store.invalidate.melody as () => void;\n        // const sampler = store.instruments.sampler;\n        const cacheList = state.elementCacheList;\n        const chordList = store.scoreData.chordList;\n        // const reserveTasks = store.reserveTasks;\n        // const init = chordList[0].detail as DetailInit;\n        const adjsut = 0;\n        for (let i = 3; i < chordList.length; i++) {\n            const cache = cacheList[i];\n            const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\n            const element = chordList[i];\n            if (element.type === 'chord') {\n                if (cache.pastSecond < start) continue;\n\n                const detail = element.detail as DetailChord;\n\n                if (detail.root == null) return;\n\n                // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\n                // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\n                // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\n\n                const backing = detail.backing;\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\n\n                // const chordTime = 60 / cache.bpm * len;\n                const minute = detail.minute.head + detail.minute.tail;\n                const chordTime = TheoryUtil.calcSustainMsec(\n                    detail.beatLen,\n                    minute,\n                    cache.bpm,\n                    cache.beatSignature\n                );\n                reserveTasks.push(\n                    setTimeout(() => {\n                        // sampler.releaseAll();\n                        // stopPiano(store);\n\n                        // const pickingDelay = 60 / init.bpm * 0.1 * 1000;\n                        // const div = pickingDelay / pitchList.length;\n\n                        // pitchList.forEach((index, j) => {\n                        //     const soundName = KEY12_SHARP_LIST[index % 12];\n                        //     const octave = Math.floor(index / 12);\n                        //     const soundFullName = soundName + octave;\n                        //     playPiano(soundFullName, store, chordTime);\n                        // });\n\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\n\n                        setTimeout(() => {\n                            store.melodyState.tableMouse.curChord = element;\n                            update();\n                            // dispatcher.melody.setState(store.melodyState);\n                        }, 0);\n                    }, cache.pastSecond - start - adjsut)\n                );\n            }\n        }\n    }\n\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\n\n        const state = store.melodyState;\n        const chordList = store.scoreData.chordList;\n        const cacheList = store.scoreState.elementCacheList;\n        const cache = cacheList[3];\n        const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\n        const init = chordList[0].detail as DetailInit;\n        const curChord = state.tableMouse.curChord;\n        const reserveTasks = store.reserveTasks;\n        if (curChord != null) {\n\n            const detail = curChord.detail as DetailChord;\n\n            if (detail.root == null) return;\n\n            // const rootIndex = (detail.root.index + init.keyIndex) % 12;\n            // const onIndex = detail.on == null ? -1 : ((detail.on.index + init.keyIndex) % 12);\n            // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\n\n            const backing = detail.backing;\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\n            // const chordTime = 60 / init.bpm * len;\n            const minute = detail.minute.head + detail.minute.tail;\n            const chordTime = TheoryUtil.calcSustainMsec(\n                detail.beatLen,\n                minute,\n                init.bpm,\n                init.beatSignature\n            );\n\n            BackingUtil.playBacking(store, reserveTasks, init, backing, pitchList, chordTime);\n\n            reserveTasks.push(setTimeout(() => {\n                state.isPreview = false;\n                dispatcher.melody.setState(state);\n            }, chordTime));\n            state.isPreview = true;\n            dispatcher.melody.setState(state);\n\n        }\n    }\n\n    export type Quantize = 32 | 16| 8 | 4;\n\n    export const isEnableQuantize = (quantize: Quantize, notes: MelodyLength) => {\n\n    }\n}\n\nexport default MelodyUtil;","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { Action, ActionType } from \"../reducer\";\nimport { RefsCache } from \"../store/refsCache\";\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailAlter, DetailChord, DetailInit, DetailSection, Scale, ScoreData, MelodyNotes, VoicingProps, BackingPatternProps } from \"../store/score/scoreData\";\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/score/scoreState\";\nimport { Store } from \"../store/store\";\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/score/melodyState\";\nimport Soundfont from 'soundfont-player';\nimport { SystemState } from \"../store/systemState\";\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\nimport MelodyUtil, { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont } from \"../../utils/melodyUtil\";\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\nimport { Invalidate } from \"../store/invalidate\";\nimport BackingState from \"../store/score/backing/backingState\";\nimport BackingUtil from \"../../utils/backingUtil\";\nimport CacheUtil from \"../../utils/cacheUtil\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport TheoryUtil from \"../../utils/theoryUtil\";\nimport ScoreCache from \"../store/score/scoreCache\";\nimport { UserEnv } from \"../store/userEnv\";\nimport { Instruments } from \"../store/instrument\";\n\nexport class Dispatcher {\n\n    private store: Store;\n    private dispatch: Function;\n\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\n        this.store = store;\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\n    }\n\n    public system = {\n        setUserEnv: (userEnv: UserEnv) => {\n            this.dispatch(ActionType.SET_USER_ENV, { userEnv });\n        },\n\n        setState: (systemState: SystemState) => {\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\n        },\n\n        switchSplashToMain: () => {\n            const systemState = this.store.systemState;\n            systemState.isSplash = false;\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\n        },\n\n        setMainTabIndex: (index: number) => {\n            const systemState = this.store.systemState;\n            systemState.mainChannelIndex = index;\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\n        },\n\n        setRefs: (refs: RefsCache) => {\n            this.dispatch(ActionType.SET_REFS, { refs });\n        },\n\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\n        },\n\n        setInvalidate: (invalidate: Invalidate) => {\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\n        }\n    }\n\n    public score = {\n        saveFile: () => {\n            // プレビュー時は保存できない\n            const isDirect = this.store.systemState.directScore != undefined;\n            if (isDirect) return;\n\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const options = {\n                types: [\n                    {\n                        accept: {\n                            'text/plain': ['.lcrs'],\n                        },\n                    },\n                ],\n            };\n            const fileHandle = state.fileHandle;\n            if (fileHandle != null) {\n                (async () => {\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\n                    const writable = await fileHandle.createWritable();\n                    //テキストデータの書き込み\n                    const text = DataUtil.gZip(JSON.stringify(data));\n                    await writable.write(text);\n                    //ファイルを閉じる\n                    await writable.close();\n                    state.fileHandle = fileHandle;\n                    this.score.setScoreState({ ...state });\n                    const file = await fileHandle.getFile();\n                    // alert('saved successfully!');\n                    console.log('saved successfully!');\n                })();\n            } else {\n                window.showSaveFilePicker(options).then((handle) => {\n                    (async () => {\n                        //ファイルへ書き込むための FileSystemWritableFileStream を作成\n                        const writable = await handle.createWritable();\n                        //テキストデータの書き込み\n                        const text = DataUtil.gZip(JSON.stringify(data));\n                        await writable.write(text);\n                        //ファイルを閉じる\n                        await writable.close();\n                        state.fileHandle = handle;\n                        this.score.setScoreState({ ...state });\n                    })();\n                }).catch(() => {\n                    console.log('キャンセルされました');\n                });\n            }\n        },\n\n        setHarmonyFont: (soundfontPlayer: Soundfont.Player) => {\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\n                instruments: {\n                    ...this.store.instruments, harmony: soundfontPlayer\n                }\n            });\n        },\n\n        setInstruments: (instruments: Instruments) => {\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\n                instruments\n            });\n        },\n\n        setScoreTabIndex: (index: number) => {\n            const systemState = this.store.systemState;\n            systemState.scoreTabIndex = index;\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\n        },\n\n        setScoreState: (scoreState: ScoreState) => {\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\n        },\n\n        clearCache: () => {\n            const scoreState = this.store.scoreState;\n            scoreState.focusIndex = -1;\n            scoreState.distIndex = -1;\n            scoreState.initialBeat = 4;\n            scoreState.elementCacheList = [];\n            scoreState.beatCacheList = [];\n            scoreState.chordCacheList = [];\n            scoreState.scaleCacheList = [];\n            scoreState.tempoCacheList = [];\n            scoreState.measureCacheList = [];\n            scoreState.sectionCacheList = [];\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\n        },\n\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\n            const state = this.store.scoreState;\n            state.keySwitch = keySwitch;\n            this.score.setScoreState(state);\n        },\n\n        setScoreData: (scoreData: ScoreData) => {\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\n        },\n\n        moveElement: (isNext: boolean) => {\n            const state = this.store.scoreState;\n            const list = this.store.scoreData.chordList;\n            const sub = isNext ? 1 : -1;\n            if (list[state.focusIndex + sub].type !== 'fixed') {\n                state.focusIndex += sub;\n                state.distIndex = state.focusIndex;\n                this.score.setScoreState(state);\n            }\n        },\n\n        /**\n         * 選択範囲の終点を移動する\n         * @param isNext \n         */\n        moveDist: (isNext: boolean) => {\n            const state = this.store.scoreState;\n            const list = this.store.scoreData.chordList;\n            const sub = isNext ? 1 : -1;\n            if (list[state.distIndex + sub].type !== 'fixed') {\n                state.distIndex += sub;\n                this.score.setScoreState(state);\n            }\n        },\n\n        releaseRange: (isTail: boolean) => {\n            const state = this.store.scoreState;\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\n            state.focusIndex = !isTail ? distHead : distTail;\n            state.distIndex = state.focusIndex;\n            this.score.setScoreState(state);\n        },\n\n        moveSection: (isNext: boolean) => {\n            const state = this.store.scoreState;\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\n            const sectionCacheList = state.sectionCacheList;\n            const curSectionInfo = sectionCacheList[curSectionIndex];\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\n            if (!isNext) {\n                // alert('prev');\n                if (curElementType === 'section' && curSectionIndex > 0) {\n                    // 1つ前のセクションの先頭に移動\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\n                } else {\n                    // 今のセクションの先頭に移動\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\n                }\n            } else {\n                // alert('next');\n                if (curSectionIndex < sectionCacheList.length - 1) {\n                    // 次のセクションの先頭に移動\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\n                } else {\n                    // 今のセクションの終端に移動\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\n                }\n            }\n            state.distIndex = state.focusIndex;\n            this.score.setScoreState(state);\n        },\n\n        flashElement: (index: number) => {\n            // const state = this.store.scoreState;\n            // const cache = state.elementCacheList[index];\n\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\n\n            // bodyRef.style.backgroundColor = '#ffef5f';\n            // setTimeout(() => {\n            //     bodyRef.style.backgroundColor = '';\n            // }, 10);\n        },\n\n        incrementDegreeRoot: (isUp: boolean) => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\n            const sub = isUp ? 1 : -1;\n            if (detail.root == null) {\n                if (isUp) {\n                    detail.root = { index: 0, isFlat: false };\n                    this.score.setScoreData(data);\n                    this.score.flashElement(state.focusIndex);\n                }\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\n                detail.root.index += sub;\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\n                this.score.setScoreData(data);\n                this.score.flashElement(state.focusIndex);\n            } else if (detail.root.index + sub === -1) {\n                detail.root = null;\n                detail.symbolKey = 'major';\n                this.score.setScoreData(data);\n                this.score.flashElement(state.focusIndex);\n            }\n            // キャッシュの更新\n            const cache = state.elementCacheList[state.focusIndex];\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\n            if (detail.root != null) {\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\n                [chordCache.chordFullName, chordCache.structList] =\n                    BackingUtil.getChordDetails(detail.root, cache.keyIndex, detail.on, symbol);\n            } else {\n                chordCache.chordFullName = '';\n                chordCache.structList = [];\n            }\n            this.score.setScoreState(state);\n        },\n\n        incrementBeatLen: (isUp: boolean) => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const chordList = data.chordList.slice();\n            const detail = chordList[state.focusIndex].detail as DetailChord;\n            const sub = isUp ? 1 : -1;\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\n                detail.beatLen += sub;\n                data.chordList = chordList;\n                this.score.setScoreData(data);\n                // キャッシュの更新\n                // setTimeout(() => {\n                CacheUtil.updateHarmonizeCache(this.store, this);\n                // }, 1);\n                this.score.flashElement(state.focusIndex);\n            }\n        },\n\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\n            const data = this.store.scoreData;\n            const cur = data.chordList[pos];\n            const detail = cur.detail as DetailChord;\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\n            target += value;\n            if (target >= -2 && target <= 2) {\n                if (!isTail) detail.minute.head = target;\n                else detail.minute.tail = target;\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\n                data.chordList = data.chordList.slice();\n                this.score.setScoreData(data);\n                // キャッシュの更新\n                CacheUtil.updateHarmonizeCache(this.store, this);\n            }\n        },\n\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\n            const focusIndex = this.store.scoreState.focusIndex;\n            const chordList = this.store.scoreData.chordList;\n\n            let nearIndex = -1;\n            if (!isTail) {\n                for (let i = focusIndex - 1; i > 2; i--) {\n                    if (chordList[i].type === 'chord') {\n                        nearIndex = i;\n                        break;\n                    }\n                }\n            } else {\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\n                    if (chordList[i].type === 'chord') {\n                        nearIndex = i;\n                        break;\n                    }\n                }\n            }\n            if (nearIndex != -1) {\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\n            }\n        },\n\n        addChordElement: () => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const cur = data.chordList[state.focusIndex];\n\n            // 拍の初期値を取得\n            const beatSignature = state.elementCacheList[state.focusIndex].beatSignature;\n            const initialBeat = TheoryUtil.getBeatProps(beatSignature).barBeatCnt;\n            let curBeatLen = initialBeat;\n            if (cur.type === 'chord') {\n                const curChord = cur.detail as DetailChord;\n                // 後にシンコペーションが設定されている場合は追加できない\n                if (curChord.minute.tail != 0) return;\n\n                curBeatLen = curChord.beatLen;\n            }\n            const element = {\n                type: 'chord', detail: {\n                    beatLen: curBeatLen,\n                    minute: { head: 0, tail: 0 },\n                    // degreeIndex: 0,\n                    // isFlat: false,\n                    root: null,\n                    on: null,\n                    symbolKey: 'major',\n                    backing: {\n                        voicingList: [],\n                        pattern: null,\n                        hasError: false\n                    }\n                } as DetailChord\n            } as ChordElement;\n            data.chordList.splice(state.focusIndex + 1, 0, element);\n            this.score.setScoreData(data);\n\n            // キャッシュの更新\n            CacheUtil.updateHarmonizeCache(this.store, this);\n\n            // const cache = state.elementCacheList[state.focusIndex + 1];\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\n            // const baseWidth = wrapRef.clientWidth;\n            // wrapRef.style.width = '0';\n            // setTimeout(() => {\n            //     wrapRef.style.width = `${baseWidth}px`;\n            // }, 1);\n            // setTimeout(() => {\n            //     wrapRef.style.width = '';\n            // }, 1000);\n        },\n\n        addSectionElement: () => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const element = {\n                type: 'section', detail: {\n                    labelName: 'Section'\n                } as DetailSection\n            } as ChordElement;\n            data.chordList.splice(state.focusIndex + 1, 0, element);\n            this.score.setScoreData(data);\n\n            // キャッシュの更新\n            CacheUtil.updateHarmonizeCache(this.store, this);\n        },\n\n        addAlterElement: () => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const element = {\n                type: 'alter', detail: {\n                    alterType: null,\n                    modRel: null,\n                    dommVal: 0,\n                    keyAdj: 0,\n                    tempoRel: null,\n                    tempoDiff: 0,\n                    tempoRate: 1,\n                    tempoAbs: 0,\n                    beatSignature: '4/4'\n                } as DetailAlter\n            } as ChordElement;\n            data.chordList.splice(state.focusIndex + 1, 0, element);\n            this.score.setScoreData(data);\n\n            // キャッシュの更新\n            CacheUtil.updateHarmonizeCache(this.store, this);\n        },\n\n        removeElement: () => {\n            const state = this.store.scoreState;\n            // const cache = state.elementCacheList[state.focusIndex];\n\n            const data = this.store.scoreData;\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\n\n            for (let i = distHead; i <= distTail; i++) {\n                const element = data.chordList[i];\n                const sectionNo = this.store.scoreState.elementCacheList[i].sectionNo;\n                // 先頭のセクション要素が含まれている場合削除しない\n                if (element.type === 'section' && sectionNo === 0) {\n                    return;\n                }\n            }\n            data.chordList.splice(distHead, (distTail - distHead) + 1);\n            this.score.setScoreData(data);\n            state.focusIndex = distHead - 1;\n            state.distIndex = state.focusIndex;\n            this.score.setScoreState(state);\n            // キャッシュの更新\n            CacheUtil.updateHarmonizeCache(this.store, this);\n\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\n            // // reffer.style.width = '300px';\n            // wrapRef.style.opacity = '0';\n            // wrapRef.style.overflow = 'hidden';\n            // // wrapRef.style.padding = '0';\n            // wrapRef.style.width = `${wrapRef.clientWidth}px`;\n            // setTimeout(() => {\n            //     wrapRef.style.width = '0';\n            // }, 1);\n            // setTimeout(() => {\n            //     wrapRef.style.opacity = '';\n            //     wrapRef.style.width = '';\n            //     wrapRef.style.overflow = '';\n            //     // wrapRef.style.padding = '';\n            //     const data = this.store.scoreData;\n            //     data.chordList.splice(state.focusIndex, 1);\n            //     this.score.setScoreData(data);\n            //     state.focusIndex--;\n            //     this.score.setScoreState(state);\n            //     // setTimeout(() => {\n            //     //     reffer.style.opacity = '';\n            //     //     reffer.style.width = '';\n            //     //     const data = this.store.scoreData;\n            //     //     data.chordList.splice(state.focusIndex, 1);\n            //     //     this.score.setScoreData(data);\n            //     // }, 200);\n            // }, 200);\n        },\n\n        removeBacking: () => {\n            const state = this.store.scoreState;\n            // const cache = state.elementCacheList[state.focusIndex];\n\n            const data = this.store.scoreData;\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\n\n            for (let i = distHead; i <= distTail; i++) {\n                const element = data.chordList[i];\n                // コード要素のみ処理\n                if (element.type === 'chord') {\n                    const chord = element.detail as DetailChord;\n                    chord.backing = { voicingList: [], pattern: null };\n                }\n            }\n            this.score.setScoreData(data);\n            this.score.setScoreState({ ...state });\n\n            // キャッシュの更新\n            CacheUtil.updateHarmonizeCache(this.store, this);\n        },\n\n        copyElementList: () => {\n            const state = this.store.scoreState;\n            // const cache = state.elementCacheList[state.focusIndex];\n\n            const data = this.store.scoreData;\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\n\n            const list: ChordElement[] = [];\n            for (let i = distHead; i <= distTail; i++) {\n                const element = data.chordList[i];\n                list.push(JSON.parse(JSON.stringify(element)));\n            }\n            console.log(list.length);\n            state.copiedElementList = list;\n            state.cloneBacking = null;\n            this.score.setScoreState(state);\n        },\n\n        pasteElementList: () => {\n            const state = this.store.scoreState;\n\n            const data = this.store.scoreData;\n            const list = state.copiedElementList;\n            if (list == null) return;\n\n            console.log(list.length);\n            list.forEach((element, i) => {\n                data.chordList.splice(state.focusIndex + 1 + i, 0, element);\n            });\n            this.score.setScoreData(data);\n            state.focusIndex++;\n            state.distIndex = state.focusIndex + list.length - 1;\n            state.copiedElementList = null;\n            this.score.setScoreState(state);\n            // キャッシュの更新\n            CacheUtil.updateHarmonizeCache(this.store, this);\n        },\n\n        // incrementSymbol: (isUp: boolean) => {\n        //     const state = this.store.scoreState;\n        //     const data = this.store.scoreData;\n        //     const detail = data.chordList[state.focusIndex].detail as DetailChord;\n        //     const sub = isUp ? 1 : -1;\n        //     if (detail.root == null) {\n        //         detail.root = { index: 0, isFlat: false };\n        //         this.score.setScoreData(data);\n        //     } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\n        //         detail.root.index += sub;\n        //         detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\n        //         this.score.setScoreData(data);\n        //     }\n        // },\n\n        setDiatonicChord: (scale: Scale, diatonicIndex: number) => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\n            const scaleList = scale === 'major' ? TheoryUtil.DIATONIC_MAJOR_SCALE_LIST : TheoryUtil.DIATONIC_MINOR_SCALE_LIST;\n            const chord = scaleList[diatonicIndex];\n            const root: TheoryUtil.DegreeProps = { ...chord.root };\n            detail.root = root;\n            detail.symbolKey = chord.symbolKey;\n            // オンコードの設定を解除\n            detail.on = null;\n            this.score.setScoreData(data);\n\n            // キャッシュの更新\n            const cache = state.elementCacheList[state.focusIndex];\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\n            [chordCache.chordFullName, chordCache.structList] =\n                BackingUtil.getChordDetails(root, cache.keyIndex, null, symbol);\n            chordCache.backingError =\n                BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\n            this.score.setScoreState(state);\n        },\n\n        setDefaultBacking: () => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\n            if (symbol.attr != undefined) {\n                detail.backing = getDefaultBacking(symbol.attr);\n                this.score.setScoreData(data);\n            }\n        },\n\n        cloneBacking: () => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\n            state.copiedElementList = null;\n            this.score.setScoreState(state);\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\n        },\n\n        pastBacking: () => {\n            const state = this.store.scoreState;\n            if (state.cloneBacking != null) {\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\n                const data = this.store.scoreData;\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\n                this.score.setScoreData(data);\n            }\n        },\n\n        openLibraryWnd: (isPreset: boolean) => {\n            const state = this.store.scoreState;\n            if (!isPreset) {\n                state.hideMenu = 'library';\n\n                // バッキングを作成\n                const chordList = this.store.scoreData.chordList;\n                const focusIndex = this.store.scoreState.focusIndex;\n                const chord = chordList[focusIndex].detail as DetailChord;\n                const cache = state.elementCacheList[state.focusIndex];\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\n                const structList = chordCache.structList;\n                const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\n                const chordInfo: BackingState.ChordInfo = {\n                    symbolAttr: symbol.attr,\n                    chordFullName: chordCache.chordFullName,\n                    structList,\n                    beatLen: chord.beatLen,\n                    minute: chord.minute,\n                    init: { ...cache }\n                };\n\n                // エラーチェックのためにテーブルからリストへ逆変換\n                // const voicingList = BackingUtil.getVoicingListFromTable([]);\n                // const hasError = BackingUtil.checkEditorError(chordInfo, voicingList, null);\n                this.backing.setState({\n                    chordInfo,\n                    tabIndex: 0,\n                    voicingTable: [],\n                    pattern: null,\n                    isPreview: false,\n                    hasError: false,\n                    closeAction: () => { }\n                });\n            }\n            else state.hideMenu = 'preset';\n\n            this.score.setScoreState(state);\n\n        },\n\n        closeLibraryWnd: () => {\n            const state = this.store.scoreState;\n            state.hideMenu = 'none';\n            this.score.setScoreState(state);\n        },\n    }\n\n    public symbol = {\n\n        toNext: (isUp: boolean) => {\n            const state = this.store.scoreState;\n            const mng = state.symbolMng as SymbolDiagram;\n            const data = this.store.scoreData;\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\n            const sub = isUp ? 1 : -1;\n            const index = mng.index + sub;\n            if (index >= 0 && index <= mng.curLine.length - 1) {\n                mng.index += sub;\n                detail.symbolKey = mng.curLine[mng.index];\n                this.score.setScoreData(data);\n\n                // キャッシュの更新\n                const root = detail.root as TheoryUtil.DegreeProps;\n                const cache = state.elementCacheList[state.focusIndex];\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\n                [chordCache.chordFullName, chordCache.structList] =\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\n                this.score.setScoreState(state);\n            }\n        },\n\n        toBase: () => {\n            const state = this.store.scoreState;\n            const mng = state.symbolMng as SymbolDiagram;\n            const data = this.store.scoreData;\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\n            if (mng.parentLine.length > 0) {\n                detail.symbolKey = mng.parentLine[0];\n                this.score.setScoreData(data);\n\n                // キャッシュの更新\n                const root = detail.root as TheoryUtil.DegreeProps;\n                const cache = state.elementCacheList[state.focusIndex];\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\n                [chordCache.chordFullName, chordCache.structList] =\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\n                chordCache.backingError =\n                    BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\n                this.score.setScoreState(state);\n            }\n        },\n\n        toDerive: () => {\n            const state = this.store.scoreState;\n            const mng = state.symbolMng as SymbolDiagram;\n            const data = this.store.scoreData;\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\n            if (mng.childrenLine.length > 0) {\n                detail.symbolKey = mng.childrenLine[0];\n                this.score.setScoreData(data);\n\n                // キャッシュの更新\n                const root = detail.root as TheoryUtil.DegreeProps;\n                const cache = state.elementCacheList[state.focusIndex];\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\n                [chordCache.chordFullName, chordCache.structList] =\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\n                chordCache.backingError =\n                    BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\n                this.score.setScoreState(state);\n            }\n        },\n\n    }\n\n    /**\n     * メロディ画面のディスパッチ\n     */\n    public melody = {\n\n        setState: (tuneState: MelodyState) => {\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\n        },\n\n        /**\n         * 全てのノーツを選択する\n         */\n        allSelect: () => {\n            const state = this.store.melodyState;\n            const notesList = this.store.scoreData.notesList;\n            if (notesList.length > 0) {\n                state.focusIndex = 0;\n                state.destIndex = notesList.length - 1;\n                this.melody.setState(state);\n            }\n        },\n\n        setNotesList: (notesList: MelodyNotes[]) => {\n            const data = this.store.scoreData;\n            data.notesList = notesList;\n            this.score.setScoreData(data);\n        },\n\n        setMelodyFont: (soundfontPlayer: Soundfont.Player) => {\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\n                instruments: {\n                    ...this.store.instruments, soundfontPlayer\n                }\n            });\n        },\n\n        /**\n         * 選択中のノーツの音程を変更する\n         * @param isUpper\n         * @param mode \n         * @returns \n         */\n        incrementCurPitch: (isUpper: boolean, mode: MelodyPitchMode) => {\n            const scoreState = this.store.scoreState;\n            const state = this.store.melodyState;\n            const focusIndex = state.focusIndex;\n            const distIndex = state.destIndex;\n            const notesList = this.store.scoreData.notesList;\n\n            // フォーカスされていない場合は処理しない\n            if (focusIndex === -1) return;\n\n            if (focusIndex !== distIndex) {\n\n                const targetList = notesList.filter(\n                    (notes, i) => i >= focusIndex && i <= distIndex\n                );\n\n                targetList.forEach(notes => {\n                    notes.pitchIndex += 1 * (isUpper ? -1 : 1);\n                });\n\n                // 履歴を作成\n                state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\n                this.melody.setNotesList(notesList.slice());\n            } else {\n                const cur = notesList[focusIndex];\n                // const init = this.store.scoreData.chordList[0].detail as DetailInit;\n                const normalLeft = getNormalizeLenFromNotes(cur.pos);\n                const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\n                const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\n                const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\n\n                const prevPitchIndex = cur.pitchIndex;\n                const interval = mode !== 'octave' ? 1 : 12;\n                let tempPitchIndex = cur.pitchIndex;\n\n                while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\n                    tempPitchIndex += interval * (isUpper ? -1 : 1);\n\n                    if (mode !== 'scale' ||\n                        (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\n                    ) {\n                        cur.pitchIndex = tempPitchIndex;\n                        break;\n                    }\n                }\n\n                // 値が変わっていた場合のみ処理する\n                if (prevPitchIndex !== cur.pitchIndex) {\n                    playSoundfont(cur.pitchIndex, this.store);\n                    // 履歴を作成\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\n                    this.melody.setNotesList(notesList.slice());\n\n                    this.melody.adjustScrollY();\n                }\n\n            }\n        },\n\n        /**\n         * キースイッチを設定する\n         * @param keySwitch \n         */\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\n            const state = this.store.melodyState;\n            state.keySwitch = keySwitch;\n            this.melody.setState(state);\n        },\n\n        /**\n         * フォーカスを移動する\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\n         */\n        moveFocus: (isNext: boolean) => {\n            const state = this.store.melodyState;\n            const data = this.store.scoreData;\n            const notesList = data.notesList;\n\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\n            if (state.focusIndex === -1) {\n                if (notesList.length > 0) {\n                    state.focusIndex = state.lastFocus;\n                    state.destIndex = state.focusIndex;\n                    this.melody.setState(state);\n                }\n            } else {\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\n                    state.focusIndex += (isNext ? 1 : -1);\n                    state.destIndex = state.focusIndex;\n                    this.melody.setState(state);\n                }\n            }\n\n            this.melody.adjustScrollX();\n            this.melody.updateCurChord(state.focusIndex);\n        },\n\n        /**\n         * 複数選択From～ToのToを移動する\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\n         * @returns \n         */\n        moveDestFocus: (isNext: boolean) => {\n            const state = this.store.melodyState;\n            const data = this.store.scoreData;\n            const notesList = data.notesList;\n\n            if (state.focusIndex === -1) return;\n\n            if (!isNext ? state.destIndex > 0 : state.destIndex < notesList.length - 1) {\n                state.destIndex += (isNext ? 1 : -1);\n                this.melody.setState(state);\n            }\n            this.melody.adjustScrollX();\n        },\n\n        /**\n         * ノーツのエリアのコードを更新する\n         * @param focusIndex ノーツのフォーカス\n         */\n        updateCurChord: (focusIndex: number) => {\n            const state = this.store.melodyState;\n            const chordList = this.store.scoreData.chordList;\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\n            let left = 0;\n            const searchedChord = chordList.find((element) => {\n                if (element.type === 'chord') {\n                    const detail = element.detail as DetailChord;\n                    const width = detail.beatLen * state.beatWidth;\n                    if (x >= left && x < left + width) {\n                        // alert(`x=${x}, left=${left}`);\n                        return element;\n                    }\n                    left += width;\n                }\n            });\n            state.tableMouse.curChord = searchedChord == undefined ? null : searchedChord;\n            this.melody.setState(state);\n        },\n\n        /**\n         * フォーカスの後ろに新しいノーツを追加する\n         * @returns \n         */\n        addNotes: () => {\n            const state = this.store.melodyState;\n            const focus = state.focusIndex;\n            if (focus === -1) return;\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\n\n            const data = this.store.scoreData;\n            const notesList = data.notesList;\n            const cur = notesList[focus];\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\n            const nextNormalPos = focus === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\n            // 新しい要素の位置\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\n\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\n                data.notesList.splice(focus + 1, 0, {\n                    pos,\n                    pitchIndex: cur.pitchIndex,\n                    len: getNotesLenFromQuantize(state.quantize, 1)\n                });\n                this.score.setScoreData(data);\n                state.focusIndex++;\n                state.destIndex = state.focusIndex;\n                this.melody.setState(state);\n            }\n\n            this.melody.adjustScrollX();\n        },\n\n        /**\n         * ノーツを削除する\n         */\n        removeNotes: () => {\n            const state = this.store.melodyState;\n            const notesList = this.store.scoreData.notesList;\n            // 履歴を作成\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\n            // 対象の開始と終了のインデックスを取得\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\n            // 削除する個数\n            const delNum = end - start + 1;\n            notesList.splice(start, delNum);\n            this.melody.setNotesList(notesList);\n            // 削除後は対象の開始インデックスの１つ前を選択\n            state.focusIndex = start - 1;\n            state.destIndex = state.focusIndex;\n            this.melody.setState(state);\n            this.melody.adjustScrollX();\n        },\n\n        /**\n         * 複数選択を解除する\n         * @param isTail 解除時複数選択のどこにフォーカスを移すか（trueの場合終端を選択）\n         */\n        releaseRange: (isTail: boolean) => {\n            const state = this.store.melodyState;\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\n            state.focusIndex = (!isTail ? start : end);\n            state.destIndex = state.focusIndex;\n            this.melody.setState(state);\n            this.melody.adjustScrollX();\n            this.melody.updateCurChord(state.focusIndex);\n        },\n\n        resizeNotes: (isSpread: boolean) => {\n\n            const state = this.store.melodyState;\n            if (state.focusIndex === -1) return;\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\n\n            const data = this.store.scoreData;\n            const notesList = data.notesList;\n            const cur = notesList[state.focusIndex];\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\n            const resizeNormal = 1 / state.quantize;\n            const condition = !isSpread ?\n                // 縮めることが可能か\n                curLenNormal > resizeNormal :\n                // 広げることが可能か\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\n            if (condition) {\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\n                data.notesList = notesList.slice();\n                this.score.setScoreData(data);\n            }\n        },\n\n        moveNotes: (isBehind: boolean) => {\n\n            const state = this.store.melodyState;\n            if (state.focusIndex === -1) return;\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\n\n            const data = this.store.scoreData;\n            const notesList = data.notesList;\n\n            const distIndex = state.destIndex;\n            const focusIndex = state.focusIndex;\n\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\n            const moveNormal = 1 / state.quantize;\n\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\n\n            const condition = !isBehind ?\n                // 前に移動可能か\n                curNormalLeft - moveNormal >= prevNormalRight :\n                // 後に移動可能か\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\n            // 移動可能かを判定\n            if (condition) {\n                for (let i = start; i <= end; i++) {\n                    const cur = notesList[i];\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\n                }\n                data.notesList = notesList.slice();\n                this.score.setScoreData(data);\n            }\n        },\n\n        firstNotes: () => {\n            const state = this.store.melodyState;\n            const notesList = this.store.scoreData.notesList;\n\n            if (notesList.length > 0) {\n                state.focusIndex = 0;\n                state.destIndex = state.focusIndex;\n                this.melody.setState(state);\n                this.melody.adjustScrollX();\n                // this.tune.adjustScrollY();\n            }\n        },\n\n        adjustScrollX: () => {\n            const state = this.store.melodyState;\n            const table = this.store.refs.melody.table;\n            const focusIndex = state.destIndex;\n            if (focusIndex !== -1 && table != null) {\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\n            }\n        },\n\n        adjustScrollY: () => {\n            const state = this.store.melodyState;\n            const table = this.store.refs.melody.table;\n            if (state.focusIndex !== -1 && table != null) {\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\n            }\n        },\n\n        previewStart: () => {\n            const state = this.store.melodyState;\n            // if (state.focusIndex === -1) return;\n\n            MelodyUtil.previewStart(this.store, this);\n        },\n\n        copyNotes: () => {\n\n            const state = this.store.melodyState;\n            const notesList = this.store.scoreData.notesList;\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\n            const num = focusEnd - focusStart + 1;\n\n            const cloneNotesList: MelodyNotes[] = [];\n            const base = notesList[focusStart].pos;\n            const baseUnit = getMinimumLenUnit(base);\n            for (let i = 0; i < num; i++) {\n                const notes = notesList[i + focusStart];\n                const unit = getMinimumLenUnit(notes.pos);\n                const useUnit = baseUnit > unit ? baseUnit : unit;\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\n                console.log(JSON.stringify(pos));\n                cloneNotesList.push({\n                    pitchIndex: notes.pitchIndex,\n                    pos,\n                    len: { ...notes.len }\n                });\n            }\n            state.cloneNotesList = cloneNotesList;\n            // notesList.splice(state.focusIndex, num);\n            // this.tune.setNotesList(notesList);\n            // state.focusIndex = focusStart - 1;\n            // state.distIndex = state.focusIndex;\n            this.melody.setState(state);\n            // alert(JSON.stringify(state.cloneNotesList));\n        },\n\n        pasteNotes: () => {\n            // alert('pasteNotes');\n\n            const state = this.store.melodyState;\n            if (state.focusIndex === -1) return;\n\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\n\n            const data = this.store.scoreData;\n            const notesList = data.notesList;\n            const cur = notesList[state.focusIndex];\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\n            const pastList: MelodyNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\n            pastList.forEach(notes => {\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\n            });\n            // ペーストするノーツの最後（右端）の要素\n            const pastLast = pastList[pastList.length - 1];\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\n                data.notesList = notesList.concat(pastList);\n                // ノーツ配置後は座標の昇順でソートする\n                data.notesList.sort((a, b) => {\n                    const posA = getNormalizeLenFromNotes(a.pos);\n                    const posB = getNormalizeLenFromNotes(b.pos);\n                    return posA === posB ? 0 : (\n                        posA < posB ? -1 : 1\n                    );\n                });\n                this.score.setScoreData(data);\n\n                state.focusIndex++;\n                state.destIndex = state.focusIndex + pastList.length - 1;\n                this.melody.setState(state);\n            }\n\n            // this.tune.adjustScrollX();\n        },\n\n        undo: () => {\n            const state = this.store.melodyState;\n            const data = this.store.scoreData;\n            const history = state.dataHistory;\n            console.log(`undo start ★ length: ${history.list.length}, cur: ${history.cur}`);\n            const prev = history.undo();\n            if (prev != null) {\n                if (history.cur === 0) {\n                    console.log('first undo');\n                    history.list.unshift(JSON.stringify(data.notesList));\n                    history.cur = 1;\n                }\n                data.notesList = JSON.parse(prev);\n                if (state.focusIndex >= data.notesList.length - 1) {\n                    state.focusIndex = data.notesList.length - 1;\n                    state.destIndex = state.focusIndex;\n                }\n                this.score.setScoreData(data);\n            }\n            console.log(`undo end ★ length: ${history.list.length}, cur: ${history.cur}`);\n        },\n\n        redo: () => {\n            const state = this.store.melodyState;\n            const data = this.store.scoreData;\n            const history = state.dataHistory;\n            console.log(`redo start ★ length: ${history.list.length}, cur: ${history.cur}`);\n            const next = history.redo();\n            if (next != null) {\n                data.notesList = JSON.parse(next);\n                if (state.focusIndex >= data.notesList.length - 1) {\n                    state.focusIndex = data.notesList.length - 1;\n                    state.destIndex = state.focusIndex;\n                }\n                this.score.setScoreData(data);\n            }\n            console.log(`redo end ★ length: ${history.list.length}, cur: ${history.cur}`);\n        }\n    }\n\n    public backing = {\n\n        openBackingEditor: () => {\n            const state = this.store.scoreState;\n            const data = this.store.scoreData;\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\n            const cache = state.elementCacheList[state.focusIndex];\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\n            const chordBacking = detail.backing;\n            const structList = chordCache.structList;\n            // const cache = state.elementCacheList[state.focusIndex];\n            state.hideMenu = 'backing';\n            this.score.setScoreState(state);\n\n            const voicingTable = BackingUtil.getInitVoicingTable(detail.backing.voicingList, structList.length);\n            const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, chordBacking.pattern);\n\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\n            const chordInfo: BackingState.ChordInfo = {\n                symbolAttr: symbol.attr,\n                chordFullName: chordCache.chordFullName,\n                structList,\n                beatLen: detail.beatLen,\n                minute: detail.minute,\n                init: { ...cache }\n            };\n            // エラーチェックのためにテーブルからリストへ逆変換\n            const voicingList = BackingUtil.getVoicingListFromTable(voicingTable);\n            const hasError = BackingUtil.checkEditorError(chordInfo, voicingList, pattern);\n\n            const updateAction = (editor: BackingState.Editor, isUpdate: boolean) => {\n                if (isUpdate) {\n                    this.backing.mappingEditorToScore(editor);\n                }\n                this.backing.closeBackingEditor();\n            }\n            // バッキングステートの初期化\n            this.backing.setState({\n                chordInfo,\n                tabIndex: 0,\n                voicingTable,\n                pattern,\n                isPreview: false,\n                hasError,\n                closeAction: updateAction\n                // editType: 'normal'\n            });\n        },\n\n        closeBackingEditor: () => {\n            const state = this.store.scoreState;\n            state.hideMenu = 'none';\n            this.score.setScoreState(state);\n            setTimeout(() => {\n                this.backing.setState(null);\n            }, 50);\n        },\n\n        setState: (backingState: null | BackingState.Editor) => {\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\n        },\n\n        getInitialLayer: (): BackingState.Layer => {\n            return {\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\n                table: [[null]],\n                velocityList: [5]\n            } as BackingState.Layer;\n        },\n\n        /**\n         * エディタで設定したバッキング情報を譜面データに反映\n         */\n        mappingEditorToScore: (editor: BackingState.Editor) => {\n            const scoreState = this.store.scoreState;\n            const data = this.store.scoreData;\n            const focus = scoreState.focusIndex;\n            const detail = data.chordList[focus].detail as DetailChord;\n            // const editor = this.store.backingState as BackingState.Editor;\n            console.log(editor);\n            detail.backing = {\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\n                // hasError: editor.hasError\n            };\n            this.score.setScoreData(data);\n\n            // エラーの反映\n            const cache = scoreState.elementCacheList[focus];\n            const scoreCache = scoreState.chordCacheList[cache.chordBlockNo];\n            scoreCache.backingError = editor.hasError;\n            this.score.setScoreState(scoreState);\n        },\n\n        addPatternColumn: () => {\n\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n\n            const layer = pattern.layers[pattern.layerIndex];\n            const lenList = layer.noteDivList;\n            const curLen = lenList[pattern.lenIndex];\n            const newLen: BackingState.NoteDiv = { rate: curLen.rate, div3: curLen.div3, isDot: curLen.isDot };\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\n            layer.noteDivList = lenList.slice();\n\n            // テーブル追加\n            layer.table.forEach((column) => {\n                column.splice(pattern.lenIndex + 1, 0, null);\n            });\n\n            // ベロシティ追加\n            layer.velocityList.splice(pattern.lenIndex + 1, 0, 5);\n\n            // ペダル追加\n            if (pattern.layerIndex === 0) {\n                pattern.pedalActs.splice(pattern.lenIndex + 1, 0, null);\n            }\n\n            this.backing.updateErrorState();\n            this.backing.setState(state);\n        },\n\n        movePatternColumn: (isRight: boolean) => {\n\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            const layer = pattern.layers[pattern.layerIndex];\n\n            let tempIndex = pattern.lenIndex;\n            tempIndex += 1 * (isRight ? 1 : -1);\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\n                pattern.lenIndex = tempIndex;\n            }\n            this.backing.setState(state);\n        },\n\n        moveChannelIndex: (isDown: boolean) => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            const index = pattern.channelIndex;\n\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\n                pattern.channelIndex += (!isDown ? -1 : 1);\n            }\n            this.backing.setState(state);\n        },\n\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            const layer = pattern.layers[pattern.layerIndex];\n            const cur = layer.noteDivList[pattern.lenIndex];\n            cur.rate = rate;\n            cur.isDot = false;\n            cur.div3 = 0;\n            layer.noteDivList = layer.noteDivList.slice();\n            this.backing.updateErrorState();\n            this.backing.setState(state);\n        },\n\n        toggleCurrentDivHalf: () => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            const layer = pattern.layers[pattern.layerIndex];\n            const cur = layer.noteDivList[pattern.lenIndex];\n            if (BackingUtil.isPermitDot(cur)) {\n                cur.isDot = !cur.isDot;\n                layer.noteDivList = layer.noteDivList.slice();\n                this.backing.setState(state);\n                this.backing.updateErrorState();\n            }\n        },\n\n\n        getNotes: () => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            const layer = pattern.layers[pattern.layerIndex];\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\n        },\n\n        setNotes: (notes: BackingState.NoteStatus | null) => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            const layer = pattern.layers[pattern.layerIndex];\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\n            layer.table = layer.table.slice();\n            this.backing.updateErrorState();\n            this.backing.setState(state);\n        },\n\n        incrementVel: (value: number) => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            const layer = pattern.layers[pattern.layerIndex];\n            const after = layer.velocityList[pattern.lenIndex] + value;\n            if (after >= 1 && after <= 10) {\n                layer.velocityList[pattern.lenIndex] = after;\n                this.backing.setState(state);\n            }\n        },\n\n        deleteColumn: () => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            const layer = pattern.layers[pattern.layerIndex];\n            // 2つ以上要素がないと消せない\n            if (layer.noteDivList.length >= 2) {\n                layer.noteDivList.splice(pattern.lenIndex, 1);\n                layer.table.forEach((column) => {\n                    column.splice(pattern.lenIndex, 1);\n                });\n                layer.velocityList.splice(pattern.lenIndex, 1);\n                // for(let i = 0; i < pattern.channels.length; i ++) {\n                //     layer.table[i].splice(pattern.lenIndex, 1);\n                // }\n                if (pattern.layerIndex === 0) {\n                    // 終端までnullで更新\n                    if (pattern.lenIndex < pattern.pedalActs.length - 1) {\n                        for (let j = pattern.lenIndex + 1; j < pattern.pedalActs.length; j++) {\n                            pattern.pedalActs[j] = null;\n                        }\n                    }\n                    pattern.pedalActs.splice(pattern.lenIndex, 1);\n                }\n\n                if (pattern.lenIndex > 0) {\n                    pattern.lenIndex--;\n                }\n                this.backing.setState(state);\n            }\n            this.backing.updateErrorState();\n        },\n\n        /**\n         * 左右レイヤーを切り替える\n         */\n        switchLayer: () => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\n            pattern.lenIndex = 0;\n            pattern.channelIndex = -1;\n            this.backing.setState(state);\n        },\n\n        /**\n         * 音量orペダルのモードを切り替える\n         */\n        switchMode: () => {\n            const state = this.store.backingState as BackingState.Editor;\n            const pattern = state.pattern as BackingState.Pattern;\n            if (pattern.mode === 'velocity') pattern.mode = 'pedal';\n            else if (pattern.mode === 'pedal') pattern.mode = 'velocity';\n            this.backing.setState(state);\n        },\n\n        /**\n         * バッキングのプレビュー再生をする\n         */\n        testBacking: () => {\n            const editor = this.store.backingState as BackingState.Editor;\n            const reserveTasks = this.store.reserveTasks;\n            const chordInfo = editor.chordInfo;\n            const init = chordInfo.init;\n\n            // const rootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\n            // const onIndex = chordInfo.on == null ? -1 : ((chordInfo.on.index + chordInfo.init.keyIndex) % 12);\n            // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\n            // const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\n            // const chordTime = 60 / init.bpm * len;\n\n            const chordTime = TheoryUtil.calcSustainMsec(\n                chordInfo.beatLen,\n                chordInfo.minute.head + chordInfo.minute.tail,\n                init.bpm,\n                init.beatSignature\n            );\n            const backing: ChordBacking = {\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern)\n            };\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordInfo.structList);\n\n            BackingUtil.playBacking(this.store, reserveTasks, init, backing, pitchList, chordTime);\n\n            reserveTasks.push(setTimeout(() => {\n                editor.isPreview = false;\n                this.backing.setState(editor);\n            }, chordTime));\n\n            editor.isPreview = true;\n            this.backing.setState(editor);\n        },\n\n        updateErrorState: () => {\n            const editor = this.store.backingState as BackingState.Editor;\n            const voicingList = BackingUtil.getVoicingListFromTable(editor.voicingTable);\n            editor.hasError = BackingUtil.checkEditorError(editor.chordInfo, voicingList, editor.pattern);\n            this.backing.setState(editor);\n        },\n    }\n\n    public thema = {\n        openBackingEditor: (\n            beatLen: number, head: number, tail: number,\n            symbolKey: TheoryUtil.SymbolKey, rootIndex: number, backing: ChordBacking,\n            update: (editor: BackingState.Editor) => void,\n            close: () => void\n        ) => {\n            const symbol = TheoryUtil.getSymbolFromKey(symbolKey) as TheoryUtil.SymbolParams;\n            const voicingTable = BackingUtil.getInitVoicingTable(backing.voicingList, symbol.structs.length);\n            const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, backing.pattern);\n\n            const [chordFullName, structList] = BackingUtil.getChordDetails(\n                { index: rootIndex, isFlat: false } as TheoryUtil.DegreeProps,\n                0,\n                null,\n                symbol\n            );\n            const chordInfo: BackingState.ChordInfo = {\n                symbolAttr: symbol.attr,\n                chordFullName: chordFullName,\n                structList,\n                beatLen,\n                minute: { head, tail },\n                init: {\n                    beatSignature: \"4/4\",\n                    bpm: 100,\n                    keyIndex: 0,\n                    scale: \"major\"\n                }\n            };\n            // エラーチェックのためにテーブルからリストへ逆変換\n            const voicingList = BackingUtil.getVoicingListFromTable(voicingTable);\n            const hasError = BackingUtil.checkEditorError(chordInfo, voicingList, pattern);\n\n            const closeAction = (editor: BackingState.Editor, isUpdate: boolean) => {\n                if (isUpdate) {\n                    update(editor);\n                }\n                close();\n                this.backing.setState(null);\n            }\n            // バッキングステートの初期化\n            this.backing.setState({\n                chordInfo,\n                tabIndex: 0,\n                voicingTable,\n                pattern,\n                isPreview: false,\n                hasError,\n                closeAction\n                // editType: 'thema-pattern'\n            });\n        },\n\n        mappingEditorToThema: (editor: BackingState.Editor) => {\n            console.log(editor);\n            if (editor.pattern != null) {\n                const pattern = BackingUtil.buildPatternProps(editor.pattern)\n            }\n        },\n\n        /**\n         * セレクタで選択したバッキング情報を譜面データに反映\n         */\n        mappingSelectorToScore: (voicingList: VoicingProps[], pattern: BackingPatternProps | null) => {\n            const scoreState = this.store.scoreState;\n            const data = this.store.scoreData;\n            const focus = scoreState.focusIndex;\n            const detail = data.chordList[focus].detail as DetailChord;\n\n            detail.backing = { voicingList, pattern };\n            this.score.setScoreData(data);\n\n            // エラーの反映\n            // const cache = scoreState.elementCacheList[focus];\n            // const scoreCache = scoreState.chordCacheList[cache.chordBlockNo];\n            // scoreCache.backingError = editor.hasError;\n            // this.score.setScoreState(scoreState);\n        },\n    }\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport Soundfont from 'soundfont-player';\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: TheoryUtil.SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null,\r\n        // hasError: false\r\n    };\r\n    return backing;\r\n}","\r\n\r\n/**\r\n * データの履歴を管理するクラス\r\n */\r\nclass DataHistory {\r\n\r\n    cur: number;\r\n    list: string[];\r\n\r\n    constructor() {\r\n        this.cur = -1;\r\n        this.list = [];\r\n    }\r\n\r\n\r\n    add(data: string) {\r\n        // console.log(`add start ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n        // if (this.list[this.cur] === data) {\r\n        //     console.log('same...');\r\n        //     return;\r\n        // }\r\n        if (this.cur > -1) {\r\n            this.list.splice(0, this.cur + 1);\r\n            this.cur = -1;\r\n            console.log('restert');\r\n        }\r\n        this.list.unshift(data);\r\n        // console.log(`add end ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n    }\r\n\r\n    undo(): null | string {\r\n        let ret = null;\r\n        if (this.cur < this.list.length - 1) {\r\n            this.cur++;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    redo(): null | string {\r\n        let ret = null;\r\n        if (this.cur > 0) {\r\n            this.cur--;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import ThemaUtil from \"../contents/custom/backing/themaUtil\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport { BackingPatternProps, ChordBacking, DetailChord, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n// import Sample from \"../assets/sample.lcrt\";\r\n\r\n\r\nnamespace LibraryUtil {\r\n\r\n    export type EnableState = {\r\n        /** コード要素選択中 */\r\n        isChordElement: boolean;\r\n        /** ライブラリ利用有無 */\r\n        isUseLib: boolean;\r\n        /** 範囲選択有無 */\r\n        isRangeSelect: boolean;\r\n    }\r\n\r\n    export type Condition = {\r\n        beatLen: number;\r\n        head: number;\r\n        tail: number;\r\n        rootIndex: number;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n    }\r\n\r\n    export type PattItemProps = {\r\n        key: number;\r\n        dispName: string;\r\n        refer: number;\r\n        source: BackingPatternProps | null;\r\n    };\r\n\r\n    export type VoicItemProps = {\r\n        pattIdx: number;\r\n        dispName: string;\r\n        // soundFullNameList: string[];\r\n        source: VoicingProps[];\r\n    };\r\n\r\n    export type PresetDef = {\r\n\r\n    }\r\n\r\n    export type Apply = {\r\n        condition: Condition;\r\n        backing: null | ChordBacking;\r\n    };\r\n    export type PresetItemProps = {\r\n        method: ThemaUtil.Method;\r\n        dispName: string;\r\n        applyList: Apply[];\r\n    };\r\n\r\n    export const getEnableState = (store: Store): EnableState => {\r\n        const chordList = store.scoreData.chordList;\r\n        const state = store.scoreState;\r\n        const cur = chordList[state.focusIndex];\r\n\r\n        const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n        const isUseLib = store.systemState.activeThemaIndex !== -1;\r\n        const isRangeSelect = state.focusIndex !== state.distIndex;\r\n\r\n        return {\r\n            isChordElement: isBackingEnable, isUseLib, isRangeSelect\r\n        };\r\n    }\r\n\r\n    const attrsSearch = (\r\n        patts: ThemaUtil.LevelPatt[] | null,\r\n        patt: ThemaUtil.LevelPatt,\r\n        symbol: TheoryUtil.SymbolParams,\r\n        rootIndex: number,\r\n        preset: null | number,\r\n        voicCallback: (voic: ThemaUtil.LevelVoic) => void,\r\n        pattVoicCallback: (patt: ThemaUtil.LevelPatt, voic: ThemaUtil.LevelVoic) => void\r\n    ) => {\r\n        const getAttrs = () => {\r\n            if (preset == null || patts == null || patt.refer === -1) return patt.attrs;\r\n            else {\r\n                const master = patts.find(fPatt => patt.refer === fPatt.key);\r\n                return master == undefined ? [] : master.attrs;\r\n            }\r\n        }\r\n        getAttrs().forEach((attr) => {\r\n            const isMatchAttr = symbol.attr === attr.attr && attr.symbols.includes(symbol.key);\r\n            if (!isMatchAttr) return 1;\r\n            attr.roots.forEach(root => {\r\n                // console.log(`rootIndex: ${rootIndex}, minIdx:${root.minIdx}～maxIdx:${root.maxIdx}`);\r\n                const isMatchRoot = rootIndex >= root.minIdx && rootIndex <= root.maxIdx;\r\n                if (!isMatchRoot) return 1;\r\n                // console.log(`passed`);\r\n                root.voics.forEach(voic => {\r\n                    if (preset != null && !voic.preUsies.map(preUse => {\r\n                        return `${preUse.depPatt === -1 ? patt.key : preUse.depPatt},${preUse.presKey}`;\r\n                    }).includes(`${patt.key},${preset}`)) return 1;\r\n                    voicCallback(voic);\r\n                    pattVoicCallback(patt, voic);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    export const searchSustMeth = (\r\n        sustMet: ThemaUtil.LevelMethod,\r\n        condition: Condition,\r\n        preset: null | number,\r\n        callback: (voic: ThemaUtil.LevelVoic) => void\r\n    ) => {\r\n        // サスティンメソッドでない場合処理しない\r\n        if (sustMet.method !== 'sustain') return;\r\n\r\n        const symbol = TheoryUtil.getSymbolFromKey(condition.symbolKey) as TheoryUtil.SymbolParams;\r\n        const rootIndex = condition.rootIndex;\r\n\r\n        const attrs = sustMet.defs as ThemaUtil.LevelAttr[];\r\n        // attrs.forEach((attr) => {\r\n        //     const isMatchAttr = symbol.attr === attr.attr && attr.symbols.includes(symbol.key);\r\n        //     if (!isMatchAttr) return 1;\r\n        //     attr.roots.forEach(root => {\r\n        //         const isMatchRoot = rootIndex >= root.minIdx && rootIndex <= root.maxIdx;\r\n        //         if (!isMatchRoot) return 1;\r\n        //         root.voics.forEach(voic => {\r\n        //             callback(voic);\r\n        //         });\r\n        //     });\r\n        // });\r\n        const dummyPatt: ThemaUtil.LevelPatt = {\r\n            attrs, key: -1, refer: -1, pattName: '', source: { channelSize: 0, layers: [], pedals: [] }\r\n        }\r\n        attrsSearch(null, dummyPatt, symbol, rootIndex, preset, callback, () => { });\r\n    };\r\n\r\n    export const searchPattMeth = (\r\n        pattMet: ThemaUtil.LevelMethod,\r\n        condition: Condition,\r\n        preset: null | number,\r\n        pattCallback: (voic: ThemaUtil.LevelPatt) => void,\r\n        voicCallback: (voic: ThemaUtil.LevelVoic) => void,\r\n        pattVoicCallback: (patt: ThemaUtil.LevelPatt, voic: ThemaUtil.LevelVoic) => void\r\n    ) => {\r\n        // パターンメソッドでない場合処理しない\r\n        if (pattMet.method !== 'pattern') return;\r\n\r\n        const symbol = TheoryUtil.getSymbolFromKey(condition.symbolKey) as TheoryUtil.SymbolParams;\r\n        const rootIndex = condition.rootIndex;\r\n\r\n        const susts = pattMet.defs as ThemaUtil.LevelSust[];\r\n        susts.forEach(sust => {\r\n            const isMatchSust = condition.beatLen === sust.beat && condition.head === sust.head && condition.tail === sust.tail;\r\n            if (!isMatchSust) return 1;\r\n            sust.patts.forEach(patt => {\r\n                // patt.attrs.forEach((attr) => {\r\n                //     const isMatchAttr = symbol.attr === attr.attr && attr.symbols.includes(symbol.key);\r\n                //     if (!isMatchAttr) return 1;\r\n                //     attr.roots.forEach(root => {\r\n                //         const isMatchRoot = rootIndex >= root.minIdx && rootIndex <= root.maxIdx;\r\n                //         if (!isMatchRoot) return 1;\r\n                //         root.voics.forEach(voic => {\r\n                //             voicCallback(voic);\r\n                //         });\r\n                //     });\r\n                // });\r\n                attrsSearch(sust.patts, patt, symbol, rootIndex, preset, voicCallback, pattVoicCallback);\r\n                pattCallback(patt);\r\n            });\r\n        });\r\n    };\r\n\r\n    export const getDistinctionFromRelate = (struct: BackingState.StructInfo) => {\r\n        switch (struct.relation) {\r\n            case 'p1': return 1;\r\n            case 'M2':\r\n            case 'm2':\r\n                return 9;\r\n            case 'm3':\r\n            case 'M3':\r\n                return 3;\r\n            case 'p4':\r\n            case 'p5':\r\n            case 'a5':\r\n            case 'd5':\r\n                return 5;\r\n            case 'm7':\r\n            case 'M7':\r\n                return 7;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    /**\r\n     * ボイシングを許容するかどうか判定する\r\n     * @param voic ボイシング情報\r\n     * @param patternList パターン情報リスト\r\n     * @param pattIndex 選択中のパターン連番\r\n     * @returns 許容するかどうか\r\n     */\r\n    export const acceptVoic = (voic: VoicItemProps, patternList: PattItemProps[], pattIndex: number) => {\r\n        const curPatt = patternList[pattIndex];\r\n        const depend = curPatt.refer;\r\n        let masterIdx = -1;\r\n        patternList.some((patt, i) => {\r\n            if (depend !== -1 && patt.key === depend) {\r\n                masterIdx = i;\r\n                return;\r\n            }\r\n        });\r\n        const isBlank = voic.pattIdx === -1;\r\n        const isMatch = voic.pattIdx === pattIndex;\r\n        const isDepend = masterIdx === voic.pattIdx;\r\n        return isBlank || isMatch || isDepend;\r\n    }\r\n\r\n    export const getPresetList = (thema: ThemaUtil.LevelBase, conditionList: Condition[]): PresetItemProps[] => {\r\n        const list: PresetItemProps[] = [];\r\n        thema.meths.forEach(meth => {\r\n            meth.prenams.forEach(preset => {\r\n                const applyList = conditionList.map(con => {\r\n                    const backingList: ChordBacking[] = [];\r\n                    switch (meth.method) {\r\n                        case 'sustain': {\r\n                            searchSustMeth(meth, con, preset.seq, (voic: ThemaUtil.LevelVoic) => {\r\n                                backingList.push({\r\n                                    pattern: null,\r\n                                    voicingList: voic.source\r\n                                });\r\n                            });\r\n                        } break;\r\n                        case 'pattern': {\r\n                            searchPattMeth(meth, con, preset.seq, () => { }, () => { },\r\n                                (patt: ThemaUtil.LevelPatt, voic: ThemaUtil.LevelVoic) => {\r\n                                    backingList.push({\r\n                                        pattern: patt.source,\r\n                                        voicingList: voic.source\r\n                                    });\r\n                                });\r\n                        } break;\r\n                    }\r\n                    const backing = backingList.length === 0 ? null : backingList[0];\r\n                    const apply: Apply = {\r\n                        condition: con,\r\n                        backing\r\n                    };\r\n                    return apply;\r\n                });\r\n                list.push({\r\n                    method: meth.method,\r\n                    dispName: preset.name,\r\n                    applyList\r\n                });\r\n            });\r\n        });\r\n        return list;\r\n    }\r\n\r\n    export const matchCondition = (a: Condition, b: Condition) => {\r\n        return a.beatLen === b.beatLen && a.head === b.head && a.tail === b.tail &&\r\n            a.rootIndex === b.rootIndex && a.symbolKey === b.symbolKey;\r\n    }\r\n\r\n    export const getDefaultLibs = (): ThemaUtil.LevelBase[] => {\r\n        const list: ThemaUtil.LevelBase[] = [];\r\n        return list;\r\n    }\r\n}\r\n\r\nexport default LibraryUtil;","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\nimport { RefsCache as RefsCache } from \"./refsCache\"\nimport { Instruments } from \"./instrument\"\nimport { ScoreData } from \"./score/scoreData\"\nimport { ScoreState } from \"./score/scoreState\"\nimport { SystemState } from \"./systemState\"\nimport { MelodyState } from \"./score/melodyState\"\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\nimport { Invalidate } from \"./invalidate\"\nimport DataHistory from \"./state/dataHistory\"\nimport BackingState from \"./score/backing/backingState\"\nimport LibraryUtil from \"../../utils/LibraryUtil\"\n\n/**\n * システムで使用するステート群\n */\nexport type Store = {\n    userEnv: UserEnv;\n    systemState: SystemState;\n    scoreState: ScoreState;\n    backingState: null | BackingState.Editor;\n    melodyState: MelodyState;\n    scoreData: ScoreData;\n    instruments: Instruments;\n    refs: RefsCache;\n    reserveTasks: NodeJS.Timeout[];\n    invalidate: Invalidate;\n}\n\nexport const initialStore: Store = {\n    userEnv: {\n        keyConfig: getDefaultKeyConfig(),\n        colorProps: themaColorNormal,\n    },\n    systemState: {\n        directScore: null,\n        isSplash: true,\n        mainChannelIndex: 0,\n        scoreTabIndex: 0,\n        editable: true,\n        dialog: null,\n        themaList: LibraryUtil.getDefaultLibs(),\n        activeThemaIndex: -1,\n        cache: null\n    },\n    backingState: null,\n    scoreState: {\n        fileHandle: null,\n        isMelody: false,\n        initialBeat: 4,\n        focusIndex: -1,\n        distIndex: -1,\n        elementCacheList: [],\n        chordCacheList: [],\n        sectionCacheList: [],\n        scaleCacheList: [],\n        tempoCacheList: [],\n        beatCacheList: [],\n        measureCacheList: [],\n        keySwitch: {\n            distMode: false,\n            sustainMode: false,\n            chordMode: false,\n            symbolMode: false,\n            control: false,\n            minHeadMode: false,\n            minTailMode: false\n        },\n        symbolMng: null,\n        hideMenu: 'none',\n        isPreview: false,\n        isSolo: false,\n        cloneBacking: null,\n        copiedElementList: null,\n        backingDataHistory: new DataHistory(),\n    },\n    melodyState: {\n        focusIndex: -1,\n        destIndex: -1,\n        lastFocus: -1,\n        quantize: 1,\n        beatWidth: 120,\n        tableMouse: {\n            isPut: false,\n            lock: { x: 0, y: 0 },\n            width: 0,\n            prevRight: 0,\n            nextLeft: 0,\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\n            curChord: null,\n            mousePitchIndex: -1,\n            mouseMeasurePos: -1\n        },\n        timelineMouse: {\n            pos: -1,\n            isPut: false,\n            lock: -1,\n            width: 0,\n        },\n        soundfontInfo: {\n            name: 'violin',\n            gain: 9\n        },\n        keySwitch: {\n            scaleMode: false,\n            octave: false,\n            resize: false,\n            move: false,\n            shift: false,\n            control: false,\n        },\n        isPreview: false,\n        isSolo: false,\n        cloneNotesList: [],\n\n        dataHistory: new DataHistory(),\n        notesCacheList: []\n    },\n    scoreData: {\n        chordList: [],\n        notesList: []\n    },\n    instruments: {\n        // sampler: getDefaultSampler(),\n        harmonyFont: null,\n        melodyFont: null\n    },\n\n    refs: {\n        harmonize: {\n            note: {} as HTMLDivElement\n        },\n        melody: {\n            table: null,\n            measure: null,\n            chord: null,\n            pitch: null,\n        }\n    },\n    reserveTasks: [],\n    invalidate: {\n        harmoniizeInvalidate: {},\n        harmonize: null,\n        melody: null\n    },\n}","import { ColorProps } from \"../../base/design/colorProps\";\n\nexport type UserEnv = {\n    login?: LoginProps;\n    keyConfig: KeyConfig;\n    colorProps: ColorProps;\n}\n\nexport type LoginProps = {\n    seq: number;\n    id: string;\n}\n\nexport type KeyConfig = {\n    note: {\n        left: string;\n        right: string;\n        up: string;\n        down: string;\n        addChord: string;\n        addSection: string;\n        addChange: string;\n        deleteCur: string;\n        distMode: string;\n        edit1: string;\n        incRoot: string;\n        decRoot: string;\n        incBeat: string;\n        decBeat: string;\n        edit2: string;\n    }\n}\n\nexport const getDefaultKeyConfig = (): KeyConfig => {\n    return {\n        note: {\n            left: 'ArrowLeft',\n            right: 'ArrowRight',\n            up: 'ArrowUp',\n            down: 'ArrowDown',\n            addChord: 'a',\n            addSection: 's',\n            addChange: 'm',\n            deleteCur: 'Delete',\n            distMode: 'Shift',\n            edit1: 'f',\n            edit2: 'c',\n            incRoot: 'ArrowUp',\n            decRoot: 'ArrowDown',\n            incBeat: 'ArrowRight',\n            decBeat: 'ArrowLeft',\n        }\n    };\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const dialog = store.systemState.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.systemState.dialog = null;\r\n            dispatcher.system.setState(store.systemState);\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import styled, { css } from \"styled-components\";\n\nnamespace Styles {\n\n    export const FONT_SMALL = 16;\n    export const FONT_MIDIUM = 22;\n    export const FONT_LARGE = 32;\n\n    export const CSS_LABEL = css`\n        display: inline-block;\n        font-weight: 600;\n        text-align: center;\n        color: black;\n        box-sizing: border-box;\n    `;\n    \n    export const CSS_LABEL_SMALL = css`\n        ${CSS_LABEL}\n        height: 22px;\n        font-size: ${FONT_SMALL}px;\n        line-height: 18px;\n    `;\n\n    export const CSS_LABEL_MIDIUM = css`\n        ${CSS_LABEL}\n        height: 30px;\n        font-size: ${FONT_MIDIUM}px;\n        line-height: 26px;\n    `;\n\n    export const CSS_BUTTON_DISABLE = css`\n        pointer-events: none;\n        opacity: 0.5;\n    `;\n}\nexport default Styles;\n\nexport const _WrapperFrame = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const _Object = styled.div`\n    display: inline-block;\n`;\n\nexport const _Record = styled.div`\n    display: inline-block;\n    width: 100%;\n`;\n\nexport const _CSS_LABEL_SMALL = css`\n    display: inline-block;\n    height: 22px;\n    font-size: 18px;\n    font-weight: 600;\n    color: black;\n    line-height: 18px;\n`;\n\n\nexport const _CSS_LABEL_MIDIUM = css`\n    display: inline-block;\n    height: 30px;\n    font-size: 24px;\n    font-weight: 600;\n    text-align: center;\n    color: black;\n    line-height: 24px;\n    box-sizing: border-box;\n`;\n\nexport const _CSS_DISABLE = css`\n    opacity: 0.6;\n    pointer-events: none;\n`;\n\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\ntype TabbedPaneProps = {\n    activeNo: number;\n    tabElements: TabElements[];\n    selectTabIndex?: Function;\n    tabRecordNum?: number;\n}\n\ntype TabElements = {\n    name: string;\n    disable: boolean;\n    cont: JSX.Element;\n}\n\nexport const TabbedPane = (props: TabbedPaneProps) => {\n    const [activeNo, setActiveNo] = useState(props.activeNo);\n\n    // タブ押下時の処理\n    const selectTabIndex = (index: number) => {\n        if (props.selectTabIndex != undefined) {\n            props.selectTabIndex(index);\n        } else {\n            setActiveNo(index);\n        }\n    };\n\n    const tabRecordNum = props.tabRecordNum ?? 1;\n\n    useEffect(() => {\n        setActiveNo(props.activeNo);\n    }, [props.activeNo]);\n\n    return (\n        <>\n            <_LabelList tabRecordNum={tabRecordNum}>\n                {/* {tabList} */}\n                {\n                    props.tabElements.map((tab, index) => {\n                        return <TabLabel\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\n                            selectTab={() => selectTabIndex(index)}\n                        />\n                    })\n                }\n            </_LabelList>\n            <_ContList tabRecordNum={tabRecordNum}>\n                {/* {contList} */}\n                {\n                    props.tabElements.map((tab, index) => {\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\n                    })\n                }\n            </_ContList>\n        </>\n    );\n}\n\nconst TabLabel = (props: {\n    name: string;\n    isActive: boolean;\n    isDisable: boolean;\n    selectTab: Function;\n}) => {\n    return (\n        <_TabLabel\n            isDisable={props.isDisable}\n            isActive={props.isActive}\n            onClick={() => props.selectTab()}>\n            {props.name}\n        </_TabLabel>\n    );\n}\n\nconst TabContents = (props: {\n    isActive: boolean;\n    cont: JSX.Element;\n}) => {\n    // return props.isActive ?\n    //     <div className=\"tab-cont\">{props.cont}</div>\n    //     :\n    //     <></>\n    //     ;\n    return (\n        <_Contents isActive={props.isActive}>\n            {props.cont}\n        </_Contents>\n    );\n}\n\nconst _LabelList = styled.div<{\n    tabRecordNum: number;\n}>`\n    display: inline-block;\n    height: ${props => 35 * props.tabRecordNum}px;\n`;\nconst _ContList = styled.div<{\n    tabRecordNum: number;\n}>`\n    display: block;\n    background-color: #999999;\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\n    border-radius: 0 6px 6px 6px;\n    box-shadow: 0 2px 0 0 #000b3a48;\n`;\n\nconst _Contents = styled.div<{\n    isActive: boolean;\n}>`\n    margin: 3px 0 0 3px;\n    width: calc(100% - 6px);\n    height: calc(100% - 6px);\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\n`;\n\nconst _TabLabel = styled.div<{\n    isDisable: boolean;\n    isActive: boolean;\n}>`\n    display: inline-block;\n    /* width: 100px; */\n    padding: 0 10px;\n    \n    ${props => {\n        if (props.isActive) {\n            return css`\n                color: #ebebeb;\n                padding: 0 35px;\n                background-color: #999999;\n                height: 35px;\n                font-size: 24px;\n                border-radius: 3px 15px 0 0;\n                text-shadow: 1px 2px 3px #00000065;\n            `;\n        } else {\n            return css`\n                height: 100%;\n                color: #555;\n                /* background-color: #90909b; */\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\n                height: 30px;\n                font-size: 18px;\n                margin-top: 5px;\n                border-radius: 3px 10px 0 0;\n                ${!props.isDisable ? '' : css`\n                    pointer-events: none;\n                    opacity: 0.7;\n                `}\n            `;\n        }\n    }}\n    /* opacity: 0.7; */\n    user-select: none;\n    margin-right: 6px;\n    font-weight: 600;\n    box-sizing: border-box;\n    line-height: 30px;\n    vertical-align: bottom;\n    transition: padding 100ms;\n`;","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport ProgUtil from \"./progUtil\";\n\n/**\n * コード進行のサンプルを検索するユーティリティ\n */\nnamespace ProgUnitSearcher {\n\n    export type ChordItemBean = {\n        root: TheoryUtil.DegreeProps;\n        symbolKey: TheoryUtil.SymbolKey;\n        beatLen: number;\n    }\n\n    export type UnitBean = {\n        condition: UnitCondition;\n        chordList: ChordItemBean[];\n    }\n\n    /**\n     * ダイアトニックスケールの連番でコードを指定する\n     * @param scaleIndex スケールの連番\n     * @param beatLen 拍\n     */\n    const getDiatonicChord = (scaleIndex: number, beatLen: number): ChordItemBean => {\n        const chord = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\n        return { root: { index: chord.root.index, isFlat: false }, symbolKey: chord.symbolKey, beatLen };\n    }\n\n    export type UnitCondition = {\n        beat: BeatSignature;\n        step: number;\n        firstChord: ProgUtil.DegreeFilter;\n        secondChord: ProgUtil.DegreeFilter;\n    }\n\n    /**\n     * コード進行を検索する\n     * @param condition \n     * @returns フィルターしたリスト\n     */\n    export const search = (condition: UnitCondition) => {\n        return UNIT_LIST.filter((unit) => (\n            (unit.condition.beat === condition.beat) &&\n            (condition.step === 0 || unit.condition.step === condition.step) &&\n            (condition.firstChord === '' || unit.condition.firstChord === condition.firstChord) &&\n            (condition.secondChord === '' || unit.condition.secondChord === condition.secondChord)\n        ));\n    }\n\n    export const parseChord = (source: string): ChordItemBean[] => {\n        let baseBeat = -1;\n        const keyList = source.split(' ');\n        let hasError = false;\n        const chordList: ChordItemBean[] = [];\n        keyList.some((key, i) => {\n            const head = key.charAt(0);\n            if (head === '@') {\n                const newBeat = Number(key.charAt(1));\n                baseBeat = newBeat;\n            } else if (['1', '2', '3', '4', '5', '6', '7'].includes(head)) {\n                const diatonicNo = Number(head) - 1;\n\n                let chord: null | ProgUnitSearcher.ChordItemBean = null;\n                const diatonicProps = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[diatonicNo];\n                if (key.length === 1) {\n                    chord = {\n                        root: diatonicProps.root, symbolKey: diatonicProps.symbolKey, beatLen: baseBeat\n                    }\n                } else {\n                    const adjustKey = key.charAt(1);\n                    const adjust = adjustKey === '#' ? 1 : adjustKey === 'b' ? -1 : 0;\n                    const shortNameKey = key.substring(2);\n                    const symbol = getSymbolFromShortName(shortNameKey);\n                    if (symbol != undefined) {\n                        const root = { ...diatonicProps.root };\n                        root.index += adjust;\n                        root.isFlat = adjust === -1;\n                        chord = {\n                            root, symbolKey: symbol.key, beatLen: baseBeat\n                        }\n                    }\n                }\n\n                if (chord == null) {\n                    hasError = true;\n                    return true;\n                } else {\n                    chordList.push(chord);\n                }\n            } else {\n                hasError = true;\n                return true;\n            }\n\n        });\n        return chordList;\n    }\n\n    const getSymbolFromShortName = (shortName: string): undefined | TheoryUtil.SymbolParams => {\n        return TheoryUtil.SYMBOL_LIST.find(symbol => {\n            if ('*' + symbol.name === shortName) return symbol;\n        });\n    }\n\n    const UNIT_LIST: UnitBean[] = [\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 1 5 6 3 4 1 2 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 1 5 6 3 4 3 2 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 1 5 6 3 4 1 2 5 1')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 1 5 6 5 4 1 2 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@4 1 5 6 4 1 5 6 4')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 1 5 7b* 6n*7 2 1#*dim 2 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅳ' },\n            chordList: parseChord('@4 1 4 5 6 2 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\n            chordList: parseChord('@4 1 6 2 5 1 6 2 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\n            chordList: parseChord('@4 1 6 4 5 1 6 4 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 4 5 3 6 4 5 3 6')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 4n*maj7 5 3n*m7 6 4n*maj7 5 3n*m7 6')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 4n*maj7 5 3n*m7 6 2n*m7 3n*7 6 6n*7')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 2n*m7 5 3n*m7 6 2n*m7 3n*7 6n*sus4 6')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\n            chordList: parseChord('@2 6 4 5 1 6 4 5 1')\n        },\n        {\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\n            chordList: parseChord('@4 6 4 5 1 6 4 5 1')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\n            chordList: parseChord('@2 6 4 1 5 6 4 1 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\n            chordList: parseChord('@4 6 4 1 5 6 4 1 5')\n        },\n        {\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅴ' },\n            chordList: parseChord('@2 6 5 4 3n*m7 2n*m7 6 2#*dim 3n*7')\n        },\n    ];\n}\n\nexport default ProgUnitSearcher;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\n\r\nnamespace ProgStyle {\r\n\r\n\r\n    /** 実行ボタン */\r\n    export const _TitleLabel = styled.div<{\r\n    }>`\r\n        ${Styles.CSS_LABEL_MIDIUM};\r\n        background-color: #f0f0f049;\r\n        width: 120px;\r\n        text-align: center;\r\n        border-radius: 10px;\r\n        color: #2c2c2c;\r\n        border: solid 1px #ffffff79;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n\r\n    /** コンボボックス */\r\n    export const _Combobox = styled.select<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: black;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n\r\n    /** ラベル */\r\n    export const _Label = styled.div<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: #002bc5;\r\n        font-weight: 600;\r\n        background-color: #e1f9fa;\r\n        padding-left: 4px;\r\n        border-radius: 4px;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n}\r\n\r\nexport default ProgStyle;","import { ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport { ScoreState } from \"../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * コード進行生成のバッキング関連のユーティリティ\r\n */\r\n namespace progBackingUtil {\r\n\r\n    export type Props = {\r\n        name: string;\r\n        patternConditions: PatternCondition[];\r\n    }\r\n    export type VoicingCondition = {\r\n        attr: TheoryUtil.SymbolAttribute;\r\n        source: string;\r\n    }\r\n    export type PatternCondition = {\r\n        beatLen: number;\r\n        source: string;\r\n        voicingConditions: VoicingCondition[];\r\n    }\r\n\r\n    export const BACKING_SAMPLE_LIST: Props[] = [\r\n        {\r\n            name: 'none',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'barrade-01',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTwRKCIBD9Gu4FOnbVvDTTrS9ghIyGsJHNyb4+BCkxb416YWD3LW/fY0FJhjAuLlQpLk/ixc0JkTRGeG92d86o1C6E4gxZMBPNQTH+dOGNQ9ICRKV6JMZum+Qozl1e0pbXEzeNQzWFvoXIFQqdV+AiZ9MLd1FTSTx/YilG1btf3PR1f1d7haoCro9Cw0hR6FMbnDRQeHgLLFqLUlH58dHaaKEgbkKVQXXDZcquAxsGWnpWvArrNmDdzsXqnTe57xh1k9uNDunSg9ZmnLVo7mnBq7zbUqyhVrKK1qVYQ63R4j/D/wq7vgHgSWwr/AUAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqAW7wdQFAL14+prfAAAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYl1oTHG4wdQEAGcWLSt8AAAA='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA9WVwVLDIBCGn4a7XcB4bc3Fmd58AqbBioPECdtO69NLINGAdexBYLwwsOzPB7sskGZDAHbPwhipH9W7dCNC17cE7l3vTXZC22AifEO8c6eOD6aTp2C+CZ5ih6o3kydA6DYt4W2Y1+IshwsrpaZB4LQFFoTKtj0Gy5PbiwxWp6Qzv/GIRH333e/ychnU7Hc1Doc/QM/BNT1Ku1UWk2DGKTpHI4sCD3P0vbdVeyP0Zwp9Br0rqldl9pH6KPW6e1lkYHGWUxSFwtRVRF0VotIqVIiokIs63zI391Wt3NnGDI8nH/swui22mLG0ryivbKX9X9RXvgy0zA1K7i2vQo1fQVrlPSpFZVWocYRZlQiXokIVKqtCjfPKq0Q4G/XH341OPxwkP5xvPwCCCyaGNwsAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGuES60JCW7AohbsBlMXAA68b5wLAQAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGtEglpjXGpNcLjB1AUAqgEeTAsBAAA='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'barrade-02',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTXQ+CIBT9NbwbxPRV86Wtt34BUzIaYQty2a+PQFLMuT7tgQ3OPZdzOZcLwgRAmG2JEJSv2YXqE0AxBnChdweaEy4tBHACDDln1VLk9GzhwDJJplgpGiaEdhumAKc2zklNjwM39aEjUU0JkU1kMi2VRTa6FmpRnYmcfmgkhrO7vOHr/pzt/BGlonLFpOr54btceyepiDo5Aw1bskIQfu+CaYKhKrZnovCyK8rjfNcxsfOWRnXmqc4mUkWeKpxIFXqq6Feqrt861n7927S1C3vljc7I/IUZeeunTeV+8EX30TMS848koseHwfEGYxcM0ysSYVFzcwUAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqAWba+oCACBiEqvfAAAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqDUGqTV1AQCUaWUN3wAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2V0W7CIBSGn4b7eUrFW11vTHbnExCLjgWpEWbUp5dC2cA1y1YSuPGiLRzOz8dJfwCRFQLYvlMpmdjwGzM9VC3nCF5N68haKpQLoXqFbHLLz2vZsosLv7hMutW8k0MmgGuSBtWNGxf0yk4jMz2GTlQPS1g4IVdNp11kZ9bCXNQoK88nFjGuDvPGp3uqi6i9L2SnmXrjSj/4IHbXNeopTfWnN47NVnwvqfhynzWfTdX8wOU+Up+ZWLYfgXmCWgbqLKLOMlFxEWoVUSETtS5CJUWoEFGrTNR5Hqrfx2bs+yjv/65/cPDtH+glwXJ/vQNw0h2Ak06z/6gnnWa5nFDGf3GtOImKf1LhL7WmUafWWidRycS9hod9Zd93wUPW69YJAAA=',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqMXpBlMc5pq6AADXs/OfCwEAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqCXFXGOQWlMXACkdNMwLAQAA'\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: '8beat-01',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTSw7CIBQ8DXulJbht7cbEnScgLVYMUlOwsZ5e5BUtTeNGU1bAMMM83gfRHGFcnphSXB7Eg9sTSrIU4a3dXXnFpAYIkRw5ciW6nar4HeAVMFlpRKMGJsawpQUiBdxL1vN25qUp1DIzhLABodBFYwA52lg4oFaZeH/qLObVY978c5HVPj+qMVzvhTaTfIRZ7oOTNszcfAIdW4taMfmugiuCoxpxEaoO1B2XWXUeJXH0l8F1HcUVR3FNlnH19bZ3n9YnFnv5w0qC8L7OSPrTjKT/79OwY9YL1S6cDhxlOpZyDf+aROhT4gm0eAKCqPtePgYAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGsEUmvqAgBJsewgswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2V0Q6CIBSGn4b7Omp2W3nT1l1PwJSKRtiEXPb0IWhJc67N5bnpRuBwDh+w3x8SrwlAeqJSMrHnD2ZGJFiFBDamd2UZFcqFSLQmNjnj5VZm7O7CM5dJU81z2WQCuG6ckChx84JWrOhZ6TNUUN1sYekKuUpy7SIHsxfmoqYyaPmxRfRXd/P6l/tXo1S3upC5ZmrHlf7Qga+uyhspTfWtFY7NVvwoqXipz4rPpmp+4fLoVZdMrLJzRzydszTUOQoVUKgBCjVEoUYo1AUKNZ6G2v7HZu5t5fU917rqbyNvu4NvQDjqDQhHudl01V96oe9KcxR/mIrq+z6g+P5UVECh+jccoJz1Z9RBV4KOC9nvE4/6Z+UECwAA',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmuCww2mLgAeyOCMswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: '8beat-02',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTQQ6CMBB8Te9SJHgFuZh48wUNVKypxdCFiK+3dqlSwsXE0Attp7M7y26HpDmhtLwwpbg8iSc3JxJnW0L3ZnfnFZMaIZLkxJIr0R9UxR8Ib5DJShCNGpmU4jYtSFLgvWQDbxcyzaGWwVjCDgOFLhpA5Gxq4YiayNjpp1ZiOXrKW04XONr1RzXA9VFomPXD7/LgnTQw6FwDLVuLWjH5mYIdgqWCuAlVe9E9l1l1nTRx8i+jahRElQZRjddRdfM2d9+nnxjsrY9r4pX3o0eg7f5oEZttrTfuv7Zopbn7zqJBnLWWKg2i6nc4DuIs5yr7fQFCZXGQ9AYAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGsEUmvqAgBJsewgswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2VwU4DIRCGn4a7nQXx2roXE28+AelixSBrFtrYPn0ps+jSEBMTw8TEE+wwPx/L/jvD5IYBbF+Uc9o+mZOOT6xbcwb3cfauB2U9hpjYsJQ8mMODG/QHhm8wU22DGd2cCYBT2TPR47pVRz1VdroOTSrMR7hDofH9GDDyHM+iMRqVXebLhKirl3n17f7VJOrsCzcG7R+ND1c+KN11LJ58UGGfjZOyvdk5ZT/dl8yXUoN5M25XqA/arofXhXkW7zJTVyRUIKF2JFROQhUk1FsSqmxDzf9xXPsq5Zd7vviqPoriuD/sAWHa/2ILSLtVxfyP1NEmVbishyuSytSKKkioZZ8Dkj7XigokVE5CLb9rR3LDrai8DfXbjgPziHORBbI/A9v3xeToDAAA',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmuCww2mLgAeyOCMswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'arpeggio-01',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'arpeggio-02',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'rock-01',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: '16beat-01',\r\n            patternConditions: []\r\n        },\r\n    ];\r\n }\r\n\r\n export default progBackingUtil;","import { BackingPatternProps, BeatSignature, ChordElement, DetailChord, DetailFixed, DetailInit, DetailSection, FixedItem, ScoreData, VoicingProps } from \"../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport progBackingUtil from \"./progBackingUtil\";\r\n\r\n/**\r\n * コード進行生成のユーティリティ\r\n */\r\nnamespace ProgUtil {\r\n\r\n    /** 生成方法 */\r\n    export type BuildType = 'blank' | 'custom' | 'template';\r\n\r\n    export const STEP_LIST = [0, 2, 3, 4] as const;\r\n    export type Step = typeof STEP_LIST[number];\r\n\r\n    /**\r\n     * ブロックに設定するプロパティ\r\n     */\r\n    export type UnitProps = {\r\n        type: BlockType;\r\n        detail: SectionProps | FixedItem;\r\n    }\r\n\r\n    export type BlockType = 'fixed' | 'section';\r\n\r\n    export type SectionProps = {\r\n        sectionName: string;\r\n        sectionNo: string;\r\n        chordList: DetailChord[];\r\n        backingNo: number;\r\n    }\r\n\r\n    export const DEGREE_FILTER_LIST = [\r\n        '', 'Ⅰ', 'Ⅴ', 'Ⅳ', 'Ⅵm', 'Ⅱm', 'Ⅲm'\r\n    ] as const;\r\n    export type DegreeFilter = typeof DEGREE_FILTER_LIST[number];\r\n\r\n    /**\r\n     * 初期状態のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getInitialBlockList = (): UnitProps[] => {\r\n        return [\r\n            { type: 'fixed', detail: 'Start' },\r\n            { type: 'fixed', detail: 'End' },\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Blank選択時のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getBlankBlockList = (): UnitProps[] => {\r\n        return [\r\n            { type: 'fixed', detail: 'Start' },\r\n            {\r\n                type: 'section',\r\n                detail: {\r\n                    sectionName: 'Section',\r\n                    sectionNo: '',\r\n                    chordList: [\r\n                        getDefaultChord()\r\n                    ],\r\n                    backingNo: 0\r\n                }\r\n            },\r\n            { type: 'fixed', detail: 'End' },\r\n        ];\r\n    }\r\n\r\n    export const getDefaultChord = (): DetailChord => {\r\n        return {\r\n            beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n            backing: {\r\n                voicingList: [],\r\n                pattern: null,\r\n                // hasError: false\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拍子より選択可能なステップリストを絞り込む\r\n     * @param beat ステップの拍\r\n     * @returns 絞り込んだリスト\r\n     */\r\n    export const getFilteredStepList = (beat: BeatSignature) => {\r\n        return STEP_LIST.filter((item) => {\r\n            // 0は空白表示なので必ず加える\r\n            if (item === 0) return true;\r\n\r\n            switch (beat) {\r\n                case '4/4':\r\n                case '6/8': {\r\n                    if (item === 3) return false;\r\n                }\r\n                    break;\r\n                case '3/4':\r\n                case '9/8': {\r\n                    if (item !== 3) return false;\r\n                }\r\n                    break;\r\n                case '2/4':\r\n                case '6/8': {\r\n                    if (item !== 2) return false;\r\n                }\r\n                    break;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * ブロックリストより譜面データを生成する\r\n     * @param outputUnits ユニットリスト\r\n     * @returns 譜面データ\r\n     */\r\n    export const buildScoreData = (outputUnits: UnitProps[]): ScoreData => {\r\n        const elementList: ChordElement[] = [];\r\n        // イニシャル要素を設定\r\n        const initElement: DetailInit = {\r\n            keyIndex: 0,\r\n            bpm: 100,\r\n            scale: \"major\",\r\n            beatSignature: \"4/4\"\r\n        }\r\n        elementList.push({ type: 'init', detail: initElement });\r\n        outputUnits.forEach((block) => {\r\n            if (block.type === 'fixed') {\r\n                const fixed = block.detail as FixedItem;\r\n                // 固定ブロックの処理\r\n                elementList.push({ type: 'fixed', detail: { fixed } });\r\n            } else {\r\n                const blockDetail = block.detail as SectionProps;\r\n                const getSectionFullName = () => {\r\n                    return blockDetail.sectionName;\r\n                }\r\n                // セクションブロックの処理\r\n                elementList.push({ type: 'section', detail: {labelName: getSectionFullName()} });\r\n\r\n                // サンプルバッキングの適用\r\n                const sample = progBackingUtil.BACKING_SAMPLE_LIST[blockDetail.backingNo];\r\n                blockDetail.chordList.forEach((chord) => {\r\n                    const detail = chord;\r\n\r\n                    let voicingList: VoicingProps[] = [];\r\n                    let pattern: BackingPatternProps | null = null;\r\n                    sample.patternConditions.some(conPa => {\r\n                        if(conPa.beatLen === detail.beatLen) {\r\n                            // console.log(DataUtil.unZip(conPa.source));\r\n                            pattern = JSON.parse(DataUtil.unZip(conPa.source));\r\n\r\n                            conPa.voicingConditions.some(conVo => {\r\n                                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                                if(conVo.attr === symbol.attr) {\r\n                                    voicingList = JSON.parse(DataUtil.unZip(conVo.source));\r\n                                    return true;\r\n                                }\r\n                            });\r\n                            return true;\r\n                        }\r\n                    });\r\n                    detail.backing.voicingList = voicingList;\r\n                    detail.backing.pattern = pattern;\r\n\r\n                    elementList.push({ type: 'chord', detail });\r\n                });\r\n            }\r\n        });\r\n        return { chordList: elementList, notesList: [] };\r\n    }\r\n}\r\n\r\nexport default ProgUtil;","import { useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../../base/design/styles\";\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\nimport DummyUtil from \"../../../../utils/dummyUtil\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport ProgUnitSearcher from \"./progUnitSearcher\";\nimport ProgStyle from \"./progStyle\";\nimport ProgUtil from \"./progUtil\";\n\n/**\n * コード進行を編集する画面\n * @param props 引数\n * @returns コンポーネント\n */\nconst ProgCustomFrame = (props: {\n    /** 拍子フィルターの値 */\n    beat: '' | BeatSignature;\n    /** ユニット数 */\n    unitNum: number;\n    /** 出力リストを初期化するコールバック関数 */\n    reset: () => void;\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\n    insertProgUnit: (sectionName: string, sectionNo: string, chordList: ProgUnitSearcher.ChordItemBean[]) => void;\n}) => {\n\n    const [step, setStep] = useState<ProgUtil.Step>(0);\n    const [degreeFilters, setDegreeFilters] = useState<(ProgUtil.DegreeFilter)[]>(['', '']);\n\n    /** ブロックの最後のコード */\n    const [lastChord, setLastChord] = useState<ProgUnitSearcher.ChordItemBean | null>(null);\n\n    // const [progUnitList, setProgUnitList] = useState<ProgSearcher.UnitBean[]>([]);\n    const [focusIndex, setFocusIndex] = useState(-1);\n\n    const stepList = useMemo(() => {\n        return props.beat === '' ? [0] : ProgUtil.getFilteredStepList(props.beat);\n    }, [props.beat]);\n\n    /** 拍ステップ絞り込みのコンボボックス */\n    const stepOptionJsxList = useMemo(() => {\n        // console.log(stepList.length);\n        return stepList.map((val, i) => {\n            // 0の場合は表示しない制御\n            const disp = val === 0 ? '' : val;\n            return (\n                <option key={i} value={val}>{disp}</option>\n            );\n        });\n    }, [stepList]);\n\n    /** ディグリーネーム絞り込みのコンボボックス */\n    const degreeOptionJsxListArray: JSX.Element[][] = useMemo(() => {\n        return [ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\n            // 先頭のフィルター\n            return (<option key={i} value={filter}>{filter}</option>);\n        }), ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\n            // 2番目のフィルター\n            return (<option key={i} value={filter}>{filter}</option>);\n        })];\n    }, [degreeFilters]);\n\n    /** リストに表示する進行ユニットのJSX */\n    const [progUnitList, progJsxList] = useMemo(() => {\n        if (props.beat === '') return [[], []];\n        const beat = props.beat as BeatSignature;\n        // フィルタリングしたユニットリスト\n        const unitList = ProgUnitSearcher.search({\n            beat: props.beat,\n            step, firstChord: degreeFilters[0], secondChord: degreeFilters[1]\n        });\n        const jsx = unitList.map((unit, i) => {\n            const isActive = focusIndex === i;\n\n            /** 表示する進行ユニット */\n            const dispUnitJsx: JSX.Element[] = [];\n            /** 表示する進行ユニット */\n            let tootTipStr: string = '';\n            let totalBeat = 0;\n            const beatCycle = TheoryUtil.getBeatProps(beat).barBeatCnt;\n            unit.chordList.forEach((chord, j) => {\n                const degreeRoot = TheoryUtil.getDegreeRoot(chord.root);\n                const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\n                const symbolName = symbol.name;\n                const chordName = degreeRoot + symbolName;\n                if (j !== 0) {\n                    const divStr = totalBeat % beatCycle === 0 ? ' | ' : '・';\n                    dispUnitJsx.push(<_Span key={dispUnitJsx.length}>{divStr}</_Span>);\n                    tootTipStr += divStr;\n                }\n                let isMatch = false;\n                if (j === 0) {\n                    isMatch = degreeFilters[0] !== '';\n                } else if (j === 1) {\n                    isMatch = degreeFilters[1] !== '';\n                }\n                dispUnitJsx.push(<_ChordName key={dispUnitJsx.length} isMatch={isMatch}>{chordName}</_ChordName>);\n                tootTipStr += chordName;\n                totalBeat += chord.beatLen;\n                // console.log(totalBeat);\n            });\n            return (\n                <_ProgItem key={i} isActive={isActive} title={tootTipStr} onClick={() => {\n                    setFocusIndex(i);\n                }}>{dispUnitJsx}</_ProgItem>\n            )\n        });\n        return [unitList, jsx];\n    }, [props.beat, step, degreeFilters, focusIndex]);\n\n    /**\n     * 拍ステップ変更時の処理\n     * @param e イベント\n     */\n    const stepChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        setStep(Number(e.target.value) as ProgUtil.Step);\n        setFocusIndex(-1);\n    }\n\n    /**\n     * ディグリーフィルター変更時の処理\n     * @param e イベント\n     */\n    const degreeChangeAction = (e: React.ChangeEvent<HTMLSelectElement>, index: number) => {\n        const value = e.target.value as ProgUtil.DegreeFilter;\n        degreeFilters[index] = value;\n        if (index === 0 && value === '') {\n            degreeFilters[1] = '';\n        }\n        setDegreeFilters(degreeFilters.slice());\n        setFocusIndex(-1);\n    }\n\n\n    /**\n     * リセットボタン押下時の処理\n     */\n    const resetAction = () => {\n        setStep(0);\n        setDegreeFilters(['', '']);\n        props.reset();\n    };\n\n    /**\n     * 追加ボタン押下時の処理\n     */\n    const insertAction = () => {\n        const progUnit = progUnitList[focusIndex];\n        props.insertProgUnit('Section', '', progUnit.chordList);\n        setFocusIndex(-1);\n        setStep(0);\n        setDegreeFilters(['', '']);\n\n        const chord = progUnit.chordList[progUnit.chordList.length - 1];\n        setLastChord(chord);\n    };\n\n    /**\n     * ユニットの最後のコードネームを取得\n     */\n    const getLastChordName = () => {\n        let name = '-';\n        if (lastChord != null) {\n            const rootName = TheoryUtil.getDegreeRoot(lastChord.root);\n            const symbol = TheoryUtil.getSymbolFromKey(lastChord.symbolKey) as TheoryUtil.SymbolParams;\n            name = rootName + symbol.name;\n        }\n        return name;\n    }\n\n    return (\n        <_Frame isEnable={props.beat !== ''}>\n            {/* 拍ステップコンボボックス */}\n            <_Record>\n                <ProgStyle._TitleLabel>Step</ProgStyle._TitleLabel>\n                <ProgStyle._Combobox isEnable={true} width={80} value={step} onChange={(e) => {\n                    stepChangeAction(e);\n                }}>{stepOptionJsxList}</ProgStyle._Combobox>\n                <ProgStyle._TitleLabel>Last</ProgStyle._TitleLabel>\n                <ProgStyle._Label isEnable={true} width={80} >{getLastChordName()}</ProgStyle._Label>\n            </_Record>\n            {/* ディグリーネームフィルターコンボボックス */}\n            <_Record>\n                <ProgStyle._TitleLabel>Chord</ProgStyle._TitleLabel>\n                <ProgStyle._Combobox isEnable={true} width={80} value={degreeFilters[0]} onChange={(e) => {\n                    degreeChangeAction(e, 0);\n                }}>{degreeOptionJsxListArray[0]}</ProgStyle._Combobox>\n                <ProgStyle._Combobox isEnable={degreeFilters[0] !== ''} width={80} value={degreeFilters[1]} onChange={(e) => {\n                    degreeChangeAction(e, 1);\n                }}>{degreeOptionJsxListArray[1]}</ProgStyle._Combobox>\n            </_Record>\n            {/* 進行ユニットリスト */}\n            <_ListDiv><div>{progJsxList}</div></_ListDiv>\n            {/* 実行ボタン */}\n            <_ButtonDiv>\n                <_ExecutableButton isEnable={props.unitNum > 0} onClick={resetAction}>Reset</_ExecutableButton>\n                <_ExecutableButton isEnable={focusIndex !== -1} onClick={insertAction}>Add</_ExecutableButton>\n            </_ButtonDiv>\n        </_Frame>\n    );\n}\n\nexport default ProgCustomFrame;\n\nconst BUTTON_DIV_HEIGHT = 40;\nconst RECORD_HEIGHT = 40;\n\nconst _Frame = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n`;\n\n/**\n * 条件レコード\n */\nconst _Record = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${RECORD_HEIGHT}px;\n    /* background-color: #d5eae4; */\n    /* margin: 2px 0 0 0; */\n    text-align: left;\n    & *{\n        margin: 5px 0 0 5px;\n    }\n`;\n\n/**\n * 進行リスト\n */\nconst _ListDiv = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: calc(100% - ${RECORD_HEIGHT * 2 + BUTTON_DIV_HEIGHT}px);\n    /* background-color: #babaa8; */\n    text-align: left;\n    & >div{\n        display: inline-block;\n        width: calc(100% - 8px);\n        height: calc(100% - 8px);\n        margin: 4px 0 0 4px;\n        background-color: #dde0e7;\n        box-sizing: border-box;\n        border: 1px solid #797979;\n        overflow-y: auto;\n        \n        &::-webkit-scrollbar {\n            width: 10px;\n            height: 10px;\n        }\n        &::-webkit-scrollbar-thumb {\n            border-radius: 5px;\n            background: #1959A8;\n        }\n        &::-webkit-scrollbar-track {\n            border-radius: 5px;\n            box-shadow: 0 0 4px #aaa inset;\n        }\n    }\n`;\n\nconst _ProgItem = styled.div<{\n    isActive: boolean;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM}\n    display: inline-block;\n    width: 100%;\n    background-color: #00000010;\n    ${props => !props.isActive ? '' : css`\n        background-color: #f6ff0062;\n    `}\n    text-align: left;\n    margin: 2px 0 0 0;\n    padding: 0 0 0 5px;\n    overflow: hidden;\n`;\n\nconst _ChordName = styled.span<{\n    isMatch: boolean;\n}>`\n    color: #000f59;\n    ${props => !props.isMatch ? '' : css`\n        color: #a0000d;\n        /* background-color: #5eff0061; */\n    `}\n`;\nconst _Span = styled.span<{\n}>`\n    color: #0000005d;\n`;\n\n/**\n * ボタンエリア（画面汎用）\n */\nconst _ButtonDiv = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${BUTTON_DIV_HEIGHT}px;\n    /* background-color: #94babd; */\n    text-align: center;\n    & *{\n        margin: 5px 0 0 5px;\n    }\n`;\n\n/**\n * 実行ボタン\n */\nconst _ExecutableButton = styled.div<{\n    isEnable: boolean;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM};\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\n    background-color: #737d94;\n    width: 130px;\n    text-align: center;\n    border-radius: 4px;\n    border: solid 1px #505971;\n    box-sizing: border-box;\n    &:hover {\n        background-color: #8da0b0;\n    }\n`;","namespace DummyUtil {\r\n\r\n    export const SECTION_CATEGORY = ['Section', 'Intro', 'A', 'B', 'C', 'D', 'Outro'];\r\n    export const SECTION_NO = ['', '1', '2', '3', '4', '5', '6'];\r\n}\r\n\r\nexport default DummyUtil;","import { useContext, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../../base/design/styles\";\nimport { DetailChord, DetailFixed, DetailSection, FixedItem } from \"../../../../redux/store/score/scoreData\";\nimport DummyUtil from \"../../../../utils/dummyUtil\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport progBackingUtil from \"./progBackingUtil\";\nimport ProgStyle from \"./progStyle\";\nimport ProgUtil from \"./progUtil\";\n\n/**\n * コード進行の出力画面のコンポーネント\n * @param props ブロックリスト\n * @returns コンポーネント\n */\nconst ProgOutputFrame = (props: {\n    outputUnits: ProgUtil.UnitProps[];\n    updateOutputUnits: () => void;\n}) => {\n    // const { store, dispatcher } = useContext(GlobalContext);\n\n    const [\n        /** セクションカテゴリのoptionリスト */\n        secCatOptionJsxList,\n        /** セクション連番のoptionリスト */\n        secNoOptionJsxList,\n    ] = useMemo(() => {\n        const catList = DummyUtil.SECTION_CATEGORY.map((val, i) => {\n            return (\n                <option key={i} value={val}>{val}</option>\n            );\n        });\n        const noList = DummyUtil.SECTION_NO.map((val, i) => {\n            return (\n                <option key={i} value={val}>{val}</option>\n            );\n        });\n        return [catList, noList];\n    }, []);\n\n    const backingSampleJsxList = progBackingUtil.BACKING_SAMPLE_LIST.map((sample, i) => {\n        return (\n            <option key={i} value={i}>{sample.name}</option>\n        );\n    });\n\n    const blockJsxList = props.outputUnits.map((block, i) => {\n        const isFixed = block.type === 'fixed';\n        const getInner = () => {\n            if (isFixed) {\n                return <_FixedItem>{(block.detail as FixedItem)}</_FixedItem>;\n            } else {\n                const detail = block.detail as ProgUtil.SectionProps;\n                const chordList = detail.chordList;\n                const getChordListJsx = () => {\n                    return chordList.map((chord, j) => {\n                        const getBeatTipsJsx = () => {\n                            const jsxList: JSX.Element[] = [];\n                            for (let k = 0; k < chord.beatLen; k++) {\n                                jsxList.push(<_BeatTip key={k} />);\n                            }\n                            return jsxList;\n                        }\n                        let chordName = 'none';\n                        if (chord.root !== null) {\n                            const degreeRoot = TheoryUtil.getDegreeRoot({\n                                index: chord.root.index,\n                                isFlat: chord.root.isFlat\n                            });\n                            const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey)?.name;\n                            chordName = degreeRoot + symbolName;\n                        }\n                        return (\n                            <_ChordItem key={j}>\n                                <_ChordNameLabel>{chordName}</_ChordNameLabel>\n                                <_ChordBeatDiv>{getBeatTipsJsx()}</_ChordBeatDiv>\n                            </_ChordItem>\n                        );\n                    });\n                }\n                return (<>\n                    <_Record>\n                        <_BackingLabel>Section</_BackingLabel>\n                        <_Combobox isEnable={true} width={180} value={detail.sectionName} onChange={(e) => {\n                            detail.sectionName = e.target.value;\n                            props.updateOutputUnits();\n                        }}>{secCatOptionJsxList}</_Combobox>\n                        <_Combobox isEnable={true} width={60} value={detail.sectionNo} onChange={(e) => {\n                            detail.sectionNo = e.target.value;\n                            props.updateOutputUnits();\n                        }}>{secNoOptionJsxList}</_Combobox>\n                    </_Record>\n                    <_Record>\n                        {/* <_SectionItem>{labelName}</_SectionItem> */}\n                        <_BackingLabel>Backing</_BackingLabel>\n                        <_Combobox\n                            isEnable={true} width={180}\n                            value={detail.backingNo}\n                            onChange={(e) => {\n                                detail.backingNo = Number(e.target.value);\n                                props.updateOutputUnits();\n                            }}>{backingSampleJsxList}</_Combobox>\n                    </_Record>\n                    <_ChordListDiv>{getChordListJsx()}</_ChordListDiv>\n                </>);\n            }\n        };\n        return (\n            <_Block key={i} isFixed={isFixed}>{getInner()}</_Block>\n        );\n    });\n    return (\n        <_Frame>\n            {blockJsxList}\n        </_Frame>\n    );\n}\n\nexport default ProgOutputFrame;\n\n\nconst _Frame = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    overflow-y: auto;\n    \n    &::-webkit-scrollbar {\n        width: 10px;\n        height: 10px;\n    }\n    &::-webkit-scrollbar-thumb {\n        border-radius: 5px;\n        background: #1959A8;\n    }\n    &::-webkit-scrollbar-track {\n        border-radius: 5px;\n        box-shadow: 0 0 4px #aaa inset;\n    }\n`;\n\nconst _Block = styled.div<{\n    isFixed: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 10px);\n    background-color: #e8e4c5;\n    margin: 5px 0 0 5px;\n    box-sizing: border-box;\n    /* border: 1px solid #7e7e7ee8; */\n    text-align: left;\n    ${props => !props.isFixed ? '' : css`\n        text-align: left;\n    `}\n`;\n\nconst _FixedItem = styled.div<{\n}>`\n    ${Styles.CSS_LABEL_SMALL}\n    width: 200px;\n    background-color: #b14272;\n    border-radius: 2px 15px 15px 2px;\n    color: white;\n    margin: 5px 0 5px 5px;\n`;\n\nconst _SectionItem = styled.div<{\n}>`\n    ${Styles.CSS_LABEL_SMALL}\n    width: 120px;\n    background-color: #4297b1;\n    color: white;\n    border-radius: 2px;\n    margin: 5px 0 0 5px;\n`;\n\nconst RECORD_HEIGHT = 22;\nconst _Record = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${RECORD_HEIGHT}px;\n    /* background-color: #5b6e69; */\n    margin: 2px 0 0 0;\n    text-align: left;\n    /* padding: 5px 0 0 0; */\n`;\nconst _BackingLabel = styled.div<{\n}>`\n    ${Styles.CSS_LABEL_SMALL}\n    width: 90px;\n    background-color: #95b6d1;\n    color: white;\n    border-radius: 8px;\n    margin: 0 0 0 5px;\n`;\n\nexport const _Combobox = styled.select<{\n    isEnable: boolean;\n    width: number;\n}>`\n    ${Styles.CSS_LABEL_SMALL}\n    font-weight: inherit;\n    text-align: left;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    width: ${props => props.width}px;\n    margin: 0 0 0 5px;\n    box-sizing: border-box;\n`;\n\nconst _ChordListDiv = styled.div<{\n}>`\n    display: inline-block;\n    width: calc(100% - 10px);\n    /* height: 100px; */\n    padding: 0 5px 5px 0;\n    background-color: #c2d6dd1e;\n    border: solid 2px #ab4343;\n    border-radius: 8px;\n    box-sizing: border-box;\n    margin: 5px 0 5px 5px;\n    text-align: left;\n`;\n\nconst _ChordItem = styled.div<{\n}>`\n    display: inline-block;\n    height: 45px;\n    background-color: #676767;\n    color: white;\n    border-radius: 2px;\n    margin: 5px 0 0 5px;\n`;\n\nconst _ChordNameLabel = styled.div<{\n}>`\n    ${Styles.CSS_LABEL_SMALL}\n    padding: 0 20px;\n    /* background-color: #b38282; */\n    color: white;\n`;\n\nconst _ChordBeatDiv = styled.div<{\n}>`\n    display: block;\n    height: 25px;\n    min-width: 100%;\n    /* background-color: #c5adad; */\n    text-align: center;\n`;\n\nconst _BeatTip = styled.div<{\n}>`\n    display: inline-block;\n    width: 8px;\n    height: calc(100% - 12px);\n    margin: 6px 2px 0 2px;\n    background-color: #ddd796;\n    border-radius: 2px;\n`;\n","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\nimport ProgUnitSearcher from \"./progUnitSearcher\";\n\n/**\n * コード進行のテンプレートを検索するユーティリティ\n */\nnamespace ProgTemplateUtil {\n\n\n    export type TemplateBean = {\n        name: string;\n        condition: TemplateCondition;\n        unitList: UnitItemBean[];\n    }\n\n    export type UnitItemBean = {\n        sectionName: string;\n        chordList: ProgUnitSearcher.ChordItemBean[];\n    }\n\n    export type TemplateCondition = {\n        beat: BeatSignature;\n    }\n\n    /**\n     * テンプレートを検索する\n     * @param condition \n     * @returns フィルターしたリスト\n     */\n    export const search = (condition: TemplateCondition) => {\n        console.log(JSON.stringify(condition));\n        return TEMPLATE_LIST.filter((template) => (\n            (template.condition.beat === condition.beat)\n        ));\n    }\n    \n    const TEMPLATE_LIST: TemplateBean[] = [\n        {\n            name: 'major minimum 01 [Ⅰ→Ⅳ～]',\n            condition: { beat: '4/4' },\n            unitList: [\n                {\n                    sectionName: 'A',\n                    chordList: ProgUnitSearcher.parseChord('@4 1 4 5 @2 1 5 @4 6 4 5 1')\n                }\n            ]\n        },\n        {\n            name: 'major minimum 02 [Ⅰ→Ⅴ～]',\n            condition: { beat: '4/4' },\n            unitList: [\n                {\n                    sectionName: 'A',\n                    chordList: ProgUnitSearcher.parseChord('@2 1 5 6 3 4 1 2 5 1 5 3n*7 6 2 3 4n*m 1')\n                }\n            ]\n        },\n        {\n            name: 'minor minimum 01 [Ⅵ→Ⅴ～]',\n            condition: { beat: '4/4' },\n            unitList: [\n                {\n                    sectionName: 'A',\n                    chordList: ProgUnitSearcher.parseChord('@2 6 5 4 3n*m7 2n*m7 6 7n*7 3n*7 6')\n                }\n            ]\n        },\n        {\n            name: 'minor minimum 02 [Ⅱm→Ⅴ～]',\n            condition: { beat: '4/4' },\n            unitList: [\n                {\n                    sectionName: 'A',\n                    chordList: ProgUnitSearcher.parseChord('@2 2n*m7 5 1 6 2n*m7 3n*7 6 6n*7 2n*m7 5 3n*m7 6 2n*m7 3n*7 6n*sus4 6')\n                }\n            ]\n        },\n        {\n            name: 'major short 01 [Ⅰ→Ⅴ～]',\n            condition: { beat: '4/4' },\n            unitList: [\n                {\n                    sectionName: 'A',\n                    chordList: ProgUnitSearcher.parseChord('@2 1 5 6 3n*m7 4 1 2n*m7 5 1 5 6 3 4 1 2n*7 3n*7')\n                },\n                {\n                    sectionName: 'B',\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 4 5 1n*sus4 1')\n                }\n            ]\n        },\n        {\n            name: 'major short 02 [Ⅳ→Ⅴ～]',\n            condition: { beat: '4/4' },\n            unitList: [\n                {\n                    sectionName: 'A',\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 2n*m7 5 1 @2 5n*m 1n*7 @4 4n*maj7 5 @2 1 5 @4 6 2n*m7 5 6n*sus4 6n*')\n                }\n            ]\n        },\n        {\n            name: 'major short 03 [Ⅰ→Ⅵm～]',\n            condition: { beat: '4/4' },\n            unitList: [\n                {\n                    sectionName: 'A',\n                    chordList: ProgUnitSearcher.parseChord('@4 1 1 6 6 4 4 5 5 1 1 6 6 4 4 5 5')\n                },\n                {\n                    sectionName: 'B',\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 4 5 1n*sus4 1')\n                }\n            ]\n        },\n        {\n            name: 'minor short 01 [Ⅵ→Ⅳ～]',\n            condition: { beat: '4/4' },\n            unitList: [\n                {\n                    sectionName: 'A',\n                    chordList: ProgUnitSearcher.parseChord('@2 6 4 5 1 6 4 5 1 6 4 5 1 2 3n*m7 4n*maj7 3n*7')\n                },\n                {\n                    sectionName: 'B',\n                    chordList: ProgUnitSearcher.parseChord('@4 4 5 3 6 2 3 6n*sus4 6')\n                }\n            ]\n        },\n    ];\n}\n\nexport default ProgTemplateUtil;","import { useContext, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../../base/design/styles\";\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport ProgTemplateUtil from \"./progTemplateUtil\";\nimport ProgUnitSearcher from \"./progUnitSearcher\";\n\nconst ProgTemplateFrame = (props: {\n    /** 拍子フィルターの値 */\n    beat: '' | BeatSignature;\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\n    applyProgTemplate: (template: ProgTemplateUtil.TemplateBean) => void;\n}) => {\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const [focusIndex, setFocusIndex] = useState(-1);\n\n    const templateList = ProgTemplateUtil.search({\n        beat: props.beat as BeatSignature\n    });\n\n    const templateJsxList = useMemo(() => {\n        return templateList.map((template, i) => {\n            return (\n                <_Item key={i}\n                    isFocus={i === focusIndex}\n                    onClick={() => {\n                        setFocusIndex(i);\n                        props.applyProgTemplate(templateList[i]);\n                    }}\n                >{template.name}</_Item>\n            );\n        });\n    }, [templateList, focusIndex]);\n\n    return (\n        <_Frame>\n            {templateJsxList}\n        </_Frame>\n    );\n}\n\nexport default ProgTemplateFrame;\n\n\nconst _Frame = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n`;\n\nconst _Item = styled.div<{\n    isFocus: boolean;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM}\n    display: inline-block;\n    width: 100%;\n    background-color: #00000010;\n    ${props => !props.isFocus ? '' : css`\n        background-color: #f6ff0062;\n    `}\n    text-align: left;\n    margin: 2px 0 0 0;\n    padding: 0 0 0 5px;\n    color: #eb0000;\n`;\n","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../../base/design/styles\";\nimport { BeatSignature, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport ProgCustomFrame from \"./progCustomFrame\";\nimport ProgOutputFrame from \"./progOutputFrame\";\nimport ProgUnitSearcher from \"./progUnitSearcher\";\nimport ProgStyle from \"./progStyle\";\nimport ProgTemplateFrame from \"./progTemplateFrame\";\nimport ProgUtil from \"./progUtil\";\nimport ProgTemplateUtil from \"./progTemplateUtil\";\n\n/**\n * コード進行を構成して譜面のベースを作成するダイアログ\n * @param props 引数\n * @returns コンポーネント\n */\nconst ChordProgDialog = (props: {\n    setScoreData: (scoreData: ScoreData) => void;\n}) => {\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    /** 生成モード（ブランク、カスタム、テンプレート） */\n    const [buildMode, setBuildType] = useState<ProgUtil.BuildType>('blank');\n    /** 出力する進行ユニットのリスト */\n    const [outputUnits, setOutputUnits] = useState(ProgUtil.getBlankBlockList());\n    /** 拍子フィルター */\n    const [beatFilter, setBeatFilter] = useState<'' | BeatSignature>('');\n\n    /**\n     * Closeボタン押下時の処理\n     */\n    const closeAction = () => {\n        store.systemState.dialog = null;\n        dispatcher.system.setState(store.systemState);\n    };\n\n    /**\n     * Startボタン押下時の処理\n     */\n    const startAction = () => {\n        const scoreData = ProgUtil.buildScoreData(outputUnits);\n        props.setScoreData(scoreData);\n        closeAction();\n        // Editタブに遷移\n        store.systemState.scoreTabIndex = 1;\n        dispatcher.system.setState(store.systemState);\n    };\n\n    const getSwitchContJsx = () => {\n        switch (buildMode) {\n            case 'blank': return <></>;\n            case 'custom': return <ProgCustomFrame\n                beat={beatFilter}\n                unitNum={outputUnits.length - 2}\n                reset={() => { setOutputUnits(ProgUtil.getInitialBlockList()) }}\n                insertProgUnit={insertProgUnit}\n            />;\n            case 'template': return <ProgTemplateFrame\n                beat={beatFilter}\n                applyProgTemplate={applyProgTemplate}\n            />;\n        }\n    };\n\n    /** 拍フィルターのオプションリストJSX */\n    const beatOptionJsxList = useMemo(() => {\n        if (buildMode === 'blank') {\n            return [(\n                <option key={0} value={''}></option>\n            )];\n        } else {\n            return [''].concat(TheoryUtil.BEAT_DEF_LIST).map((val, i) => {\n                return (\n                    <option key={i} value={val}>{val}</option>\n                );\n            });\n        }\n    }, [buildMode]);\n\n    const beatChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        setBeatFilter(e.target.value as BeatSignature);\n    }\n\n    /** リストから選択中のコード進行ブロックを出力に追加する */\n    const insertProgUnit = (sectionName: string, sectionNo: string, chordList: ProgUnitSearcher.ChordItemBean[]) => {\n        const detail: ProgUtil.SectionProps = {\n            sectionName, sectionNo,\n            chordList: chordList.map((chord) => {\n                const chordDetail = ProgUtil.getDefaultChord();\n                chordDetail.beatLen = chord.beatLen;\n                chordDetail.symbolKey = chord.symbolKey;\n                chordDetail.root = chord.root;\n                return chordDetail;\n            }),\n            backingNo: 1\n        }\n        const block: ProgUtil.UnitProps = { type: 'section', detail }\n        outputUnits.splice(outputUnits.length - 1, 0, block);\n        setOutputUnits(outputUnits.slice());\n    }\n\n    const applyProgTemplate = (templateBean: ProgTemplateUtil.TemplateBean) => {\n        outputUnits.splice(0);\n        ProgUtil.getInitialBlockList().forEach(progUnit => {\n            outputUnits.push(progUnit);\n        });\n        templateBean.unitList.forEach((unit) => {\n            insertProgUnit(unit.sectionName, '', unit.chordList);\n        });\n    }\n\n    /**\n     * 切り替え式ボタンのJSXを返すクロージャ\n     * @param labelName ラベル名\n     * @param clickEvent 押下時の処理\n     * @param isActive 選択中かどうか\n     * @returns JSX\n     */\n    const createSwitchableButton = (\n        labelName: string,\n        isActive: boolean,\n        clickEvent: () => void\n    ) => {\n        return (\n            <_SwitchableButton isActive={isActive}\n                onClick={clickEvent}\n            >{labelName}</_SwitchableButton>\n        );\n    }\n\n    const beatComboboxEnable = outputUnits.length <= 2;\n\n    // Blankモードの時は空白を表示\n    const distBeatFilter = buildMode === 'blank' ? '' : beatFilter;\n    return (\n        <_Frame >\n            <_Header>\n                {createSwitchableButton('Blank', buildMode === 'blank', () => {\n                    setOutputUnits(ProgUtil.getBlankBlockList());\n                    setBuildType('blank');\n                })}\n                {createSwitchableButton('Custom', buildMode === 'custom', () => {\n                    setOutputUnits(ProgUtil.getInitialBlockList());\n                    setBuildType('custom');\n                })}\n                {createSwitchableButton('Template', buildMode === 'template', () => {\n                    setOutputUnits(ProgUtil.getInitialBlockList());\n                    setBuildType('template');\n                })}\n            </_Header>\n            <_MainDiv>\n                <_LeftDiv isEnable={buildMode !== 'blank'}>\n                    <_BeatFormDiv>\n                        <ProgStyle._TitleLabel>Beat</ProgStyle._TitleLabel>\n                        <ProgStyle._Combobox value={distBeatFilter} isEnable={beatComboboxEnable} width={150}\n                            onChange={(e) => {\n                                beatChangeAction(e);\n                            }}>{beatOptionJsxList}</ProgStyle._Combobox>\n                    </_BeatFormDiv>\n                    {/* モードによって切り替えるコンテンツ（カスタムorテンプレート） */}\n                    <_SwitchDiv>{getSwitchContJsx()}</_SwitchDiv>\n                </_LeftDiv>\n                <_RightDiv>\n                    <ProgOutputFrame\n                        outputUnits={outputUnits}\n                        updateOutputUnits={() => { setOutputUnits(outputUnits.slice()) }}\n                    />\n                </_RightDiv>\n            </_MainDiv>\n            <_Footer>\n                {/* ダイアログを閉じる */}\n                <_ExecutableButton isEnable={true} onClick={closeAction}>Cancel</_ExecutableButton>\n                {/* 譜面を生成 */}\n                <_ExecutableButton isEnable={outputUnits.length >= 3} onClick={startAction}>Start</_ExecutableButton>\n            </_Footer>\n        </_Frame>\n    );\n}\n\nexport default ChordProgDialog;\n\nconst HEADER_HEIGHT = 50;\nconst FOOTER_HEIGHT = 50;\nconst BEAT_HEIGHT = 40;\n\nconst _Frame = styled.div<{\n}>`\n    display: inline-block;\n    position: absolute;\n    left: 50px;\n    top: 50px;\n    width: 1024px;\n    height: 768px;\n    z-index: 11;\n    /* top: 100px;\n    left: 100px; */\n    /* width: calc(100% - 200px);\n    height: calc(100% - 200px); */\n    background-color: #929292;\n    border: solid 2px #404250;\n    border-radius: 8px;\n    /* border: 1px solid #dadada; */\n`;\n\n/**\n * ヘッダー\n */\nconst _Header = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${HEADER_HEIGHT}px;\n    background-color: #7d8d97;\n    text-align: center;\n`;\n\n/**\n * メインコンポーネント\n */\nconst _MainDiv = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: calc(100% - ${HEADER_HEIGHT + FOOTER_HEIGHT}px);\n    /* background-color: #7d8d97; */\n    text-align: left;\n`;\n\n/**\n * 左側のコンポーネント\n */\nconst _LeftDiv = styled.div<{\n    isEnable: boolean;\n}>`\n   display: inline-block;\n   vertical-align: top;\n   width: calc(50% - 6px);\n   height: calc(100% - 8px);\n   background-color: #bdced8;\n   text-align: left;\n   margin: 4px 2px 4px 4px;\n   ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n`;\n\n/**\n * 拍選択\n */\nconst _BeatFormDiv = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${BEAT_HEIGHT}px;\n    /* background-color: #b4c7ba; */\n    padding: 5px 0 0 5px;\n    box-sizing: border-box;\n`;\n\nconst _BeatSelect = styled.select<{\n}>`\n    display: inline-block;\n    height: 30px;\n    font-size: ${Styles.FONT_MIDIUM}px;\n    text-align: left;\n    color: black;\n    vertical-align: top;\n    line-height: 24px;\n    width: 210px;\n    box-sizing: border-box;\n    margin: 0 0 0 5px;\n`;\n\n\n/**\n * テンプレートとカスタムの切り替えコンテンツ表示\n */\nconst _SwitchDiv = styled.div<{\n}>`\n    display: inline-block;\n    background-color: #cedbd7;\n    border: 1px solid #696969;\n    box-sizing: border-box;\n    margin: 5px 0 0 5px;\n    width: calc(100% - 10px);\n    height: calc(100% - ${BEAT_HEIGHT + 10}px);\n`;\n\n/**\n * 右側のコンポーネント\n */\nconst _RightDiv = styled.div<{\n}>`\n    display: inline-block;\n    vertical-align: top;\n    width: calc(50% - 6px);\n    height: calc(100% - 8px);\n    background-color: #bdced8;\n    text-align: left;\n    margin: 4px 4px 4px 2px;\n`;\n\n/**\n * フッター\n */\nconst _Footer = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${HEADER_HEIGHT}px;\n    background-color: #d1d1d1;\n    text-align: right;\n    & *{\n        margin: 10px 5px 0 0;\n    }\n`;\n\n/**\n * スイッチボタン\n */\nconst _SwitchableButton = styled.div<{\n    isActive: boolean;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM};\n    background-color: #5083c5;\n    ${props => !props.isActive ? '' : css`\n        background-color: #c5b950;\n    `};\n    width: 200px;\n    margin: 10px 5px 0 0;\n    text-align: center;\n    border-radius: 4px;\n    border: solid 1px #375176;\n    box-sizing: border-box;\n    &:hover {\n        background-color: #77a7e6;\n    ${props => !props.isActive ? '' : css`\n            background-color: #c5b950;\n    `};\n}\n`;\n\n/**\n * 実行ボタン\n */\nconst _ExecutableButton = styled.div<{\n    isEnable: boolean;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM};\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\n    background-color: #5c9253;\n    width: 130px;\n    text-align: center;\n    border-radius: 4px;\n    border: solid 1px #2d5625;\n    box-sizing: border-box;\n    &:hover {\n        background-color: #7eaf75;\n    }\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/score/scoreData\";\nimport CacheUtil from \"../../../utils/cacheUtil\";\nimport DataUtil from \"../../../utils/dataUtil\";\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\nimport TheoryUtil from \"../../../utils/theoryUtil\";\nimport { GlobalContext } from \"../../entry/systemEntry\";\nimport ChordProgDialog from \"./chordProg/chordProgDialog\";\nimport ScoreBuilder from \"./scoreBuilder\";\n\ntype ShareType = '' | 'url' | 'free' | 'dl';\n\nconst ManageTab = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const [file, setFile] = useState<null | File>(null);\n\n    const fileHandle = store.scoreState.fileHandle;\n    const scoreData = store.scoreData;\n    const tabIndex = store.systemState.scoreTabIndex;\n\n    const loginProps = store.userEnv.login;\n\n    const [cloudScoreList, setCloudScoreList] = useState<null | {\n        seq: number, name: string, hash: string, url: string, share: string\n    }[]>(null);\n    const [focusIndex, setFocusIndex] = useState(-1);\n    const [cloudScoreName, setCloudScoreName] = useState('-');\n    const [cloudScoreShare, setCloudScoreShare] = useState<ShareType>('');\n\n    useEffect(() => {\n        loadCloudScore();\n    }, [loginProps]);\n\n    const loadCloudScore = () => {\n        if (loginProps != undefined) {\n            DataUtil.findUserScoreList(loginProps.seq).then((resList) => {\n                setCloudScoreList(resList.map((res) => {\n                    const seq = res['seq'];\n                    const hash = DataUtil.getHashedFromScoreSeq(seq);\n                    const url = DataUtil.getPreviewURL(seq);\n                    return { seq, name: res['dispnam'], hash, url, share: res['share'] };\n                }));\n                console.log('load');\n            });\n        }\n    }\n\n    const [fileInfo, scoreInfo]: [{\n        name: string;\n        size: string;\n        modified: string;\n    }, {\n        key: string;\n        tempo: string;\n        rate: string;\n        section: string;\n        chord: string;\n        bar: string;\n        time: string;\n        notes: string;\n    }] = useMemo(() => {\n        let name = '-';\n        let size = '-';\n        let modified = '-';\n        let key = '-';\n        let tempo = '-';\n        let rate = '-';\n        let section = '-';\n        let chord = '-';\n        let bar = '-';\n        let time = '-';\n        let notes = '-';\n        if (tabIndex === 0) {\n            if (file != null) {\n                name = file.name;\n                size = `${file.size.toString()} byte`;\n                modified = DataUtil.getStringFromDate(new Date(file.lastModified));\n            }\n            if (scoreData.chordList.length > 0) {\n                const init = scoreData.chordList[0].detail as DetailInit;\n                key = `${TheoryUtil.KEY12_MAJOR_SCALE_LIST[init.keyIndex]} ${init.scale}`;\n                tempo = init.bpm.toString();\n                rate = init.beatSignature;\n                let sectionNum = 0;\n                let chordNum = 0;\n                scoreData.chordList.forEach(chord => {\n                    switch (chord.type) {\n                        case 'section': sectionNum++; break;\n                        case 'chord': chordNum++; break;\n                    }\n                });\n                section = sectionNum.toString();\n                chord = chordNum.toString();\n\n                const cacheList = store.scoreState.elementCacheList;\n                if (cacheList.length > 0) {\n                    const last = cacheList[cacheList.length - 1];\n                    time = `${last.pastSecond / 1000}s`;\n                    bar = `${last.bar} (${last.surplusBeat})`;\n                }\n                notes = scoreData.notesList.length.toString();\n            }\n        }\n        return [{\n            name, size, modified\n        }, {\n            key, tempo, rate, section, chord, bar, time, notes\n        }]\n    }, [tabIndex, scoreData, file]);\n\n    useEffect(() => {\n        if (tabIndex === 0 && fileHandle != null) {\n            fileHandle.getFile().then(file => {\n                setFile(file);\n            });\n        }\n    }, [tabIndex]);\n\n    const setScoreData = ((data: ScoreData) => {\n        store.scoreState.focusIndex = 2;\n        store.scoreState.distIndex = store.scoreState.focusIndex;\n        dispatcher.score.setScoreState({ ...store.scoreState });\n        // dispatcher.score.setScoreTabIndex(1);\n        dispatcher.score.setScoreData(data);\n        // キャッシュの更新\n        store.scoreData = data;\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\n    });\n\n    /**\n     * ラベルアイテムを生成する\n     * @param labelName ラベル名\n     * @param labelValue 値\n     * @returns JSX\n     */\n    const createLabelRecord = (labelName: string, labelValue: string) => {\n        return (\n            <_Recored>\n                <_ItemnLabel>{labelName}</_ItemnLabel>\n                <_ItemnValue>{labelValue}</_ItemnValue>\n            </_Recored>\n        );\n    }\n    /**\n     * テキストアイテムを生成する\n     * @param labelName ラベル名\n     * @param textValue 値\n     * @returns JSX\n     */\n    const createTextRecord = (labelName: string, textValue: string, changeAction: (e: React.ChangeEvent<HTMLInputElement>) => void) => {\n        return (\n            <_Recored>\n                <_ItemnLabel>{labelName}</_ItemnLabel>\n                <_ItemnInput\n                    type=\"text\" value={textValue}\n                    isEnable={focusIndex !== -1}\n                    onChange={changeAction}\n                />\n            </_Recored>\n        );\n    }\n\n    const searchLocalFileAction = () => {\n        (async () => {\n            const [fileHandle] = await window.showOpenFilePicker();\n            const file = await fileHandle.getFile();\n            const fileContents = await file.text();\n            // console.log(fileContents);\n            store.scoreState.fileHandle = fileHandle;\n            setFile(file);\n            const text = DataUtil.unZip(fileContents);\n            // const text = fileContents;\n            console.log(text);\n            setScoreData(JSON.parse(text));\n        })();\n    }\n\n    const fileDisconnectAction = () => {\n        store.scoreState.fileHandle = null;\n        dispatcher.score.setScoreState({ ...store.scoreState });\n        // キャッシュの更新\n        store.scoreData = scoreData;\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\n        setFile(null);\n    };\n\n    const isDataConnect = fileHandle != null;\n\n\n    const cloudScoreListJsx = loginProps == undefined ? <></> : cloudScoreList == null ? (\n        <_Message>Now loading your cloud score...</_Message>\n    ) : cloudScoreList.map((score, i) => {\n\n        return <_CloudItem key={i} isActive={i === focusIndex} onClick={() => {\n            setFocusIndex(i);\n            const cur = cloudScoreList[i];\n            if (cur != null) {\n                setCloudScoreName(cur.name);\n            }\n        }}><_CName>{score.name}</_CName><_CHash> [{score.hash}]</_CHash></_CloudItem>\n    });\n\n\n    const uploadActioon = () => {\n        setCloudScoreList(null);\n        if (loginProps != undefined && cloudScoreList != null) {\n            const newScoreName = `new [${loginProps.id}] score`;\n            DataUtil.sendQueryRequestToAPI('update', `INSERT INTO scoretbl(user_seq, dispnam, data)\n                VALUES(${loginProps.seq}, '${newScoreName}', '${DataUtil.gZip(JSON.stringify(scoreData))}')\n            `).then(() => {\n                setFocusIndex(cloudScoreList.length);\n                setCloudScoreName(newScoreName);\n                loadCloudScore();\n            })\n        }\n    }\n\n    const overwriteActioon = () => {\n        setCloudScoreList(null);\n        if (curCloudScore != null) {\n            DataUtil.sendQueryRequestToAPI('update', `\n                UPDATE scoretbl SET\n                dispnam = '${cloudScoreName}',\n                share = '${cloudScoreShare}',\n                lastmod = datetime('now', 'localtime'),\n                data = '${DataUtil.gZip(JSON.stringify(scoreData))}'\n                WHERE seq = ${curCloudScore.seq}\n            `).then(() => {\n                loadCloudScore();\n            })\n        }\n    }\n    const deleteActioon = () => {\n        setCloudScoreList(null);\n        if (curCloudScore != null) {\n            DataUtil.sendQueryRequestToAPI('update', `DELETE FROM scoretbl WHERE seq = ${curCloudScore.seq}\n            `).then(() => {\n                setFocusIndex(-1);\n                loadCloudScore();\n            })\n        }\n    }\n\n    const downloadAction = () => {\n        if (curCloudScore != undefined) {\n            DataUtil.findScore(curCloudScore.seq).then((resList) => {\n                if (resList.length > 0) {\n                    const source = resList[0]['data'];\n                    const text = DataUtil.unZip(source);\n                    setScoreData(JSON.parse(text));\n                }\n            });\n        }\n    }\n    const curCloudScore = cloudScoreList == null ? null : cloudScoreList[focusIndex];\n    const uploadEnable = scoreData.chordList.length > 0 && focusIndex === -1;\n    const isExistEditingData = scoreData.chordList.length > 0;\n\n    const isSelectedScore = focusIndex !== -1;\n    return (\n        <_Wrap>\n            <_ButtonsDiv>\n                <_Button isEnable={!isDataConnect && !isExistEditingData} onClick={() => {\n                    store.systemState.dialog = <ChordProgDialog setScoreData={setScoreData} />;\n                    dispatcher.system.setState(store.systemState);\n                }}>new score</_Button>\n            </_ButtonsDiv>\n            <_MainDiv>\n                <_Left>\n                    <_CloudDiv isEnable={true}>\n\n                        <_ButtonsDiv>\n                            <_Button isEnable={loginProps != undefined && uploadEnable} onClick={uploadActioon}>upload</_Button>\n                            <_Button isEnable={loginProps != undefined && isSelectedScore} onClick={() => {\n                                setFocusIndex(-1);\n                            }}>release</_Button>\n                        </_ButtonsDiv>\n                        <_ListFrame isEnable={loginProps != undefined}>\n                            {cloudScoreListJsx}\n                        </_ListFrame>\n                        <_ButtonsDiv>\n                            <_Button isEnable={loginProps != undefined && isSelectedScore && isExistEditingData} onClick={overwriteActioon}>overwrite</_Button>\n                            <_Button isEnable={loginProps != undefined && isSelectedScore && !isExistEditingData} onClick={downloadAction}>download</_Button>\n                            <_Button isEnable={loginProps != undefined && isSelectedScore} onClick={deleteActioon}>delete</_Button>\n                        </_ButtonsDiv>\n                    </_CloudDiv>\n                </_Left>\n                <_Right>\n                    {/* <_Source value={source} onChange={e => setSource(e.target.value)} /> */}\n\n                    <_ButtonsDiv>\n                        <_Button isEnable={!isDataConnect && !isExistEditingData} onClick={searchLocalFileAction}>load file</_Button>\n                        <_Button isEnable={isDataConnect} onClick={fileDisconnectAction}>disconnect</_Button>\n                        <_Button isEnable={isExistEditingData} onClick={() => {\n                            dispatcher.score.clearCache();\n                            if (isDataConnect) {\n                                fileDisconnectAction();\n                            }\n                            dispatcher.score.setScoreData({ notesList: [], chordList: [] });\n                        }}>clear</_Button>\n                    </_ButtonsDiv>\n                    <_DataInfoDiv isEnable={isDataConnect}>\n                        <_TitleLabel>Local</_TitleLabel>\n                        {createLabelRecord('file', fileInfo.name)}\n                        {createLabelRecord('size', fileInfo.size)}\n                        {createLabelRecord('last', fileInfo.modified)}\n                        {/* {createLabelRecord('size', fileInfo.size)}\n                        {createLabelRecord('modified', fileInfo.modified)} */}\n                    </_DataInfoDiv>\n                    <_DataInfoDiv isEnable={focusIndex !== -1}>\n                        <_TitleLabel>Cloud</_TitleLabel>\n                        {createTextRecord('name', curCloudScore == null ? '-' : cloudScoreName, (e) => {\n                            setCloudScoreName(e.target.value);\n                        })}\n                        <_Recored>\n                            <_ItemnLabel>url</_ItemnLabel>\n                            <_ItemnURL onContextMenu={() => {\n                                navigator.clipboard.writeText(curCloudScore == null ? '-' : curCloudScore.url).then(() => {\n                                    alert('Copied clipboad!');\n                                });\n                            }}>{curCloudScore == null ? '-' : curCloudScore.url}</_ItemnURL>\n                        </_Recored>\n                        {/* {createLabelRecord('url', curCloudScore == null ? '-' : curCloudScore.url)} */}\n                        <_Recored>\n                            <_ItemnLabel>share</_ItemnLabel>\n                            <_ItemnCombobox\n                                isEnable={focusIndex !== -1}\n                                value={cloudScoreShare}\n                                onChange={(e) => {\n                                    setCloudScoreShare(e.target.value as ShareType);\n                                }}\n                            >\n                                <option value={'url'}>URL only</option>\n                                <option value={'free'}>Home publish</option>\n                                <option value={'dl'}>Download OK</option>\n                            </_ItemnCombobox>\n                        </_Recored>\n                    </_DataInfoDiv>\n                    <_ScoreInfoDiv isEnable={isExistEditingData}>\n                        <_TitleLabel>SCORE</_TitleLabel>\n                        {createLabelRecord('key', scoreInfo.key)}\n                        {createLabelRecord('tempo', scoreInfo.tempo)}\n                        {createLabelRecord('rate', scoreInfo.rate)}\n                        {createLabelRecord('section', scoreInfo.section)}\n                        {createLabelRecord('chord', scoreInfo.chord)}\n                        {createLabelRecord('bar', scoreInfo.bar)}\n                        {createLabelRecord('time', scoreInfo.time)}\n                        {createLabelRecord('notes', scoreInfo.notes)}\n                    </_ScoreInfoDiv>\n                </_Right>\n            </_MainDiv>\n        </_Wrap >\n    );\n}\n\nexport default ManageTab;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    background-color: #7e7e7e;\n    text-align: left;\n`;\n\nconst _MainDiv = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: calc(100% - 40px);\n`;\n\nconst _Left = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 50%;\n    height: 100%;\n    /* background-color: #8a6b6b; */\n    text-align: left;\n    vertical-align: top;\n`;\n\nconst _Right = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 50%;\n    height: 100%;\n    /* background-color: #969696; */\n    text-align: left;\n    vertical-align: top;\n`;\n\nconst _Link = styled.div`\n    \n    display: inline-block;\n    width: calc(100% - 50px);\n    height: 50px;\n    margin: 20px 25px;\n    border: 2px solid #cacaca;\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\n    background-color: #000;\n    color: #ccc;\n    font-size: 30px;\n    font-weight: 600;\n    text-align: left;\n    box-sizing: border-box;\n    padding-left: 20px;\n    border-radius: 6px;\n\n    &:hover {\n        background-color: #616161;\n    }\n`;\n\n// const _Source = styled.textarea`\n//     display: inline-block;\n//     width: calc(100% - 8px);\n//     margin: 4px 0 0 4px;\n//     height: calc(100% - 44px);\n//     /* background-color: #7e7e7e; */\n//     text-align: left;\n//     font-size: 20px;\n//     resize: none;\n//     box-sizing: border-box;\n//     color: #060053;\n// `;\n\nconst _InfoDiv = styled.div`\n    display: inline-block;\n    position: relative;\n    width: calc(100% - 8px);\n    margin: 4px 0 4px 4px;\n    height: calc(100% - 48px);\n    background-color: #ffffff;\n    box-sizing: border-box;\n    color: #060053;\n`;\n\nconst DATA_INFO_HEIGHT = 180;\n\nconst _DataInfoDiv = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: ${DATA_INFO_HEIGHT}px;\n    margin: 4px 0 4px 4px;\n    background-color: #9da5af;\n    border: solid 1px #1b00b3;\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.3;\n    `}\n    border-radius: 4px;\n    box-sizing: border-box;\n    color: #060053;\n`;\n\nconst _ScoreInfoDiv = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: calc(100% - ${DATA_INFO_HEIGHT * 2 + 40 + 20}px);\n    margin: 0 0 4px 4px;\n    background-color: #acacac;\n    border: solid 1px #1b00b3;\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.3;\n    `}\n    border-radius: 4px;\n    box-sizing: border-box;\n    color: #060053;\n    overflow: hidden;\n`;\n\nconst _CloudDiv = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: calc(100% - 8px);\n    margin: 4px 0 4px 4px;\n    background-color: #acacac;\n    border: solid 1px #1b00b3;\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.3;\n    `}\n    border-radius: 4px;\n    box-sizing: border-box;\n    color: #060053;\n    overflow: hidden;\n`;\n\nconst _TitleLabel = styled.div`\n    display: inline-block;\n    height: 40px;\n    font-size: 30px;\n    font-weight: 600;\n    color: #1c2c95;\n    /* background-color: #3f80cf57; */\n    padding: 0 10px;\n`;\nconst _Recored = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 35px;\n    /* background-color: #3fcf7b56; */\n    padding: 4px 0 0 10px;\n`;\nconst _ItemnLabel = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: 140px;\n    font-size: 24px;\n    line-height: 24px;\n    font-weight: 600;\n    color: #08106e;\n    border: solid 1px #1b00b3;\n    box-sizing: border-box;\n    /* background-color: #85a2c5; */\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\n    border-radius: 4px;\n    text-align: center;\n    vertical-align: top;\n`;\nconst _ItemnValue = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #ffffff;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #808080;\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    white-space: nowrap;\n    overflow: hidden;\n`;\nconst _ItemnURL = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 18px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #01f52a;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #808080;\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    white-space: nowrap;\n    overflow: hidden;\n`;\n\nconst _ItemnInput = styled.input<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #1f1f1f;\n    border: solid 1px #000;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #dbdbdb;\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n`;\n\nconst _ItemnCombobox = styled.select<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #1f1f1f;\n    border: solid 1px #000;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #dbdbdb;\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n`;\n\nconst _ButtonsDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    /* background-color: #888888; */\n    box-sizing: border-box;\n    text-align: left;\n    white-space: nowrap;\n`;\n\nconst _Button = styled.div<{\n    isEnable: boolean;\n}>`\n    ${_CSS_LABEL_MIDIUM}\n    /* width: 160px; */\n    padding: 0 40px;\n    /* line-height: 25px; */\n    box-sizing: border-box;\n    background-color: #a8a8a8;\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\n    border: 1px solid #1a2b3f;\n    color: #1a2b3f;\n    border-radius: 4px;\n    margin: 5px 0 0 4px;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        /* background-color: #98bfc2; */\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\n    }\n`;\n\n\nconst _ListFrame = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: calc(100% - 92px);\n    margin: 4px 0 0 4px;\n    background-color: #d3d3c5;\n    border: 1px solid #e60000;\n    border-radius: 4px;\n    box-sizing: border-box;\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.3;\n        pointer-events: none;\n    `}\n`;\n\nconst _Message = styled.div<{\n}>`\n    display: inline-block;\n    color: #d60000;\n    font-size: 24px;\n    /* font-weight: 600; */\n    /* background-color: white; */\n    margin: 0 0 0 4px;\n`;\n\nconst _CloudItem = styled.div<{\n    isActive: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    font-size: 28px;\n    font-weight: 600;\n    border-bottom: 1px solid #888888;\n    /* background-color: white; */\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\n    ${props => !props.isActive ? '' : css`\n        background: linear-gradient(to bottom, transparent, #fdff8484);\n    `}\n    margin: 2px 0 0 0;\n    padding: 0 0 0 4px;\n    box-sizing: border-box;\n    padding-left: 4px;\n    overflow: hidden;\n    white-space: nowrap;\n    &:hover {\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\n        ${props => !props.isActive ? '' : css`\n            background: linear-gradient(to bottom, transparent, #feffcd99);\n        `}\n    }\n`;\nconst _CName = styled.span` color: #00532c; `;\nconst _CHash = styled.span` color: #b9000042; `;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : TheoryUtil.getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: TheoryUtil.SymbolKey[] = [];\r\n        const parentLine: TheoryUtil.SymbolKey[] = [];\r\n        const childrenLine: TheoryUtil.SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = TheoryUtil.getSymbolDerives(baseSymbol.key);\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = TheoryUtil.getSymbolDerives(curSymbol.key);\r\n        TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\nimport { DetailChord } from \"../../../../../../redux/store/score/scoreData\";\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\n\nconst CalcChord = (props: {\n    index: number;\n    detail: DetailChord;\n}) => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const state = store.scoreState;\n    const chordList = store.scoreData.chordList;\n    const element = chordList[props.index];\n    const cache = state.elementCacheList[props.index];\n\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\n\n    let degreeRoot: null | string = null;\n    let degreeOn: null | string = null;\n    let chordRoot: null | string = null;\n    let chordOn: null | string = null;\n    if (props.detail.root != null) {\n        degreeRoot = TheoryUtil.getDegreeRoot({\n            index: props.detail.root.index,\n            isFlat: props.detail.root.isFlat\n        });\n        chordRoot = TheoryUtil.getRootName({\n            index: props.detail.root.index,\n            isFlat: TheoryUtil.isFlat(cache.keyIndex, cache.scale)\n        }, cache.keyIndex);\n\n        if (props.detail.on != null) {\n            degreeOn = TheoryUtil.getDegreeRoot({\n                index: props.detail.on.index,\n                isFlat: props.detail.on.isFlat\n            });\n            chordOn = TheoryUtil.getRootName({\n                index: props.detail.on.index,\n                isFlat: props.detail.on.isFlat\n            }, cache.keyIndex);\n        }\n    }\n\n    let bar = -1;\n    const prevCache = state.elementCacheList[props.index - 1];\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\n    // 実際の小節は1から数える\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\n        // 見た目上１から数えるため\n        bar = cache.bar + 1;\n    }\n    // 小節変更タイミングで、余りの拍がある（頭でない）場合エラー\n    const isError = bar !== -1 && cache.surplusBeat !== 0;\n\n    let chordName = '-';\n    if (chordRoot != null) {\n        chordName = `${chordRoot}${symbolName}`;\n        if(chordOn != null) {\n            chordName += `/${chordOn}`;\n        }\n    }\n\n    let minuteStr = '';\n    if(cache.minute !== 0) {\n        switch(cache.minute) {\n            case 1: minuteStr = '→/16'; break;\n            case 2: minuteStr = '→/8'; break;\n            case -1: minuteStr = '←/16'; break;\n            case -2: minuteStr = '←/8'; break;\n        }\n    }\n    return (\n        <_Detail>\n            <_Chord>{chordName}</_Chord>\n            {/* <_Backing>\n            </_Backing> */}\n            <_Pos>\n                <_Section\n                    isError={isError}\n                >\n                    {bar === -1 ? <>&nbsp;</> : bar}\n                </_Section>\n                <_Beat>\n                    <span>\n                        {cache.surplusBeat === 0 ? <>&nbsp;</> : cache.surplusBeat}\n                    </span>\n                    {cache.minute === 0 ? '' : minuteStr}\n                </_Beat>\n                <_PastSecond>\n                    {Math.round(cache.pastSecond / 100) / 10}s\n                </_PastSecond>\n            </_Pos>\n        </_Detail>\n    );\n}\n\nexport default CalcChord;\n\n\n\nconst _Section = styled.div<{\n    isError: boolean;\n}>`\n    font-size: 12px;\n    font-weight: 600;\n    color: #c72929;\n    ${props => !props.isError ? '' : css`\n        background-color: #ee5959;\n        color: #ffffff;\n        /* border: 2px solid #c72929; */\n        border-radius: 2px;\n    `}\n    box-sizing: border-box;\n`;\nconst _PastSecond = styled.div`\n    font-size: 12px;\n    font-weight: 600;\n    color: #000000a0;\n    box-sizing: border-box;\n`;\n\nconst _Beat = styled.div``;\n\nconst _Detail = styled.div`\n    display: inline-block;\n    position: absolute;\n    z-index: 4;\n    width: 100%;\n    height: 50px;\n    // background-color: #00ff2a11;\n    bottom: 0;\n    left: 0;\n    box-sizing: border-box;\n    text-align: center;\n    box-sizing: border-box;\n`;\n\nconst _Chord = styled.div`\n    display: inline-block;\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\n    width: 100%;\n    height: 18px;\n    // background-color: #ffc4001c;\n    font-size: 12px;\n    font-weight: 600;\n    color: #2b2b2b;\n`;\n\nconst _Backing = styled.div`\n    display: inline-block;\n    width: 56px;\n    height: 30px;\n    background-color: #1100ff1c;\n`;\n\nconst _Pos = styled.div`\n    display: inline-block;\n    position: absolute;\n    z-index: 5;\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\n    height: 100%;\n    // background-color: #0000ff11;\n    top: 0;\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\n    box-sizing: border-box;\n    text-align: center;\n    \n    & ${_Section} {\n    }\n    & ${_Beat} {\n        font-size: 12px;\n        color: #333;\n        & span {\n            color: #00a;\n            font-weight: 600;\n        }\n    }\n`;\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailAlter = (props: {\r\n    detail: DetailAlter;\r\n}) => {\r\n\r\n    const type = props.detail.alterType;\r\n\r\n    const getDetailInfo = (): string => {\r\n        let ret = '-';\r\n        if (type != null) {\r\n            switch (type) {\r\n                case 'modulate': {\r\n\r\n                    const modRel = props.detail.modRel;\r\n                    if (modRel != null) {\r\n                        switch (modRel) {\r\n                            case 'domm': {\r\n                                const val = props.detail.dommVal;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                            case 'relative':\r\n                            case 'parallel': {\r\n                                ret = modRel;\r\n                            } break;\r\n                            case 'key': {\r\n                                const val = props.detail.keyAdj;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                        }\r\n                    }\r\n                } break;\r\n                case 'tempo' : {\r\n                    const tempoRel = props.detail.tempoRel;\r\n                    switch(tempoRel) {\r\n                        case 'diff': {\r\n                            const val = props.detail.tempoDiff;\r\n                            const sign = val > 0 ? '+' : ''; \r\n                            ret = `${tempoRel}: ${sign}${val}`;\r\n                        } break;\r\n                        case 'rate': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoRate}%`;\r\n                        } break;\r\n                        case 'abs': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoAbs}`;\r\n                        } break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                {type == null ? 'alter' : type}\r\n            </_Type>\r\n            <_Detail>\r\n                {getDetailInfo()}\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useMemo } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\nimport { DetailChord, Scale } from \"../../../../../../redux/store/score/scoreData\";\nimport BackingUtil from \"../../../../../../utils/backingUtil\";\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\n\ntype TipLenType = 'short' | 'normal' | 'long';\ntype TipValueType = 0 | 2 | 1;\n\n/**\n * コードブロックのコンポーネント\n * @param props 引数\n * @returns コンポーネント\n */\nconst ElementDetailChord = (props: {\n    detail: DetailChord;\n    isSustainMode: boolean;\n    isCurrent: boolean;\n    cache: ScoreCache.Element;\n    chordCacheList: ScoreCache.Chord[];\n    keyIndex: number;\n    scale: Scale;\n}) => {\n\n    const minute = props.detail.minute;\n    const symbol = TheoryUtil.getSymbolFromKey(props.detail.symbolKey) as TheoryUtil.SymbolParams;\n    const symbolName = symbol.name;\n    const chordBacking = props.detail.backing;\n    const cache = props.cache;\n    const chordCache = props.chordCacheList[cache.chordBlockNo];\n\n    const backingError = chordCache != undefined ? chordCache.backingError : false;\n\n    return useMemo(() => {\n\n        // const keySwitch = store.scoreState.keySwitch;\n        let degreeRoot: null | string = null;\n        let degreeOn: null | string = null;\n        let chordRoot: null | string = null;\n        let chordOn: null | string = null;\n\n        if (props.detail.root != null) {\n            degreeRoot = TheoryUtil.getDegreeRoot({\n                index: props.detail.root.index,\n                isFlat: props.detail.root.isFlat\n            });\n            chordRoot = TheoryUtil.getRootName({\n                index: props.detail.root.index,\n                isFlat: props.detail.root.isFlat\n            }, props.keyIndex);\n\n            if (props.detail.on != null) {\n                degreeOn = TheoryUtil.getDegreeRoot({\n                    index: props.detail.on.index,\n                    isFlat: props.detail.on.isFlat\n                });\n                chordOn = TheoryUtil.getRootName({\n                    index: props.detail.on.index,\n                    isFlat: props.detail.root.isFlat\n                }, props.keyIndex);\n            }\n        }\n        const diatonicList = TheoryUtil.getDiatonicDegreeList(props.scale);\n        const isDiatonic = diatonicList.includes(degreeRoot + symbolName);\n\n        return <_Wrap>\n            <_Degree\n                // isSwitch={keySwitch.sustainMode && props.isCurrent}\n                isSwitch={props.isSustainMode}\n                scaleRelation={degreeRoot != null && isDiatonic ? 'diatonic' : 'none'}\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\n            >\n                {degreeRoot == null ? 'none' : (<>\n                    <_DegreeRoot>{degreeRoot}{symbolName}{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeRoot>\n                    {/* <_DegreeSymbol>{symbolName}</_DegreeSymbol>\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord> */}\n                </>)}\n            </_Degree>\n            {/* <_Chord>\n                {chordRoot == null ? '-' : (<>\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\n                </>)}\n            </_Chord> */}\n            <_Tip isSwitch={props.isSustainMode}>\n                {(() => {\n                    const jsxList: JSX.Element[] = [];\n                    for (let i = 0; i < props.detail.beatLen; i++) {\n                        let lenType: TipLenType = 'normal';\n                        let valueType: TipValueType = 0;\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\n                            const target = i === 0 ? minute.head : minute.tail;\n                            if (target !== 0) {\n                                lenType = target > 0 ? 'long' : 'short';\n                                valueType = Math.abs(target) as TipValueType;\n                            }\n                        }\n                        jsxList.push(\n                            <_TipItem\n                                key={i}\n                                lenType={lenType}\n                                valueType={valueType}\n                            />\n                        );\n                    }\n                    return jsxList;\n                })()}\n            </_Tip>\n            <_Backing>\n                {backingError ? <_Error /> : <>\n                    {chordBacking.voicingList.length === 0 ? '' : <_Voicing />}\n                    {chordBacking.voicingList.length === 0 ? '' : chordBacking.pattern == null ? '' : <_Pattern />}\n                </>}\n            </_Backing>\n        </_Wrap>\n    }\n        , [\n            props.scale,\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\n            props.detail.on?.index,\n            props.detail.symbolKey,\n            props.isSustainMode,\n            props.keyIndex,\n            props.detail.minute.head,\n            props.detail.minute.tail,\n            props.detail.backing,\n            backingError\n        ]);\n}\n\nexport default ElementDetailChord;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: 100%;\n    /* border: 1px solid #c5c5cc; */\n    /* padding: 4px; */\n    box-sizing: border-box;\n    /* background-color: #00000013; */\n`;\n\n\nconst _DegreeRoot = styled.div``;\nconst _DegreeSymbol = styled.div``;\nconst _DegreeOnChord = styled.div``;\nconst _Degree = styled.div<{\n    isSwitch: boolean;\n    scaleRelation: TheoryUtil.ScaleRelation;\n    isOnChordScale: boolean;\n}>`\n    display: block;\n    /* width: 100%; */\n    height: 25px;\n    /* background-color: #f700d616; */\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\n    font-size: 18px;\n    /* color: #4e516394; */\n    text-align: center;\n\n    & * {\n        display: inline-block;\n    }\n\n    & ${_DegreeRoot} {\n        color: #4e5163cc;\n        ${props =>\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\n                css`color: #70000093;`\n    }\n        font-weight: 600;\n    }\n    & ${_DegreeSymbol} {\n        color: #4e5163cc;\n        ${props =>\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\n                css`color: #70000093;`\n    }\n    }\n    & ${_DegreeOnChord} {\n        color: #4e5163cc;\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\n        font-weight: 600;\n    }\n`;\n\nconst _Chord = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 22px;\n    /* background-color: #d37979b2; */\n    font-size: 14px;\n    /* font-weight: 600; */\n    color: #9c5f74;\n    text-align: center;\n`;\n\nconst _Tip = styled.div<{\n    isSwitch: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 18px;\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\n    /* background-color: #d8ccccb1; */\n    text-align: center;\n`;\n\nconst _TipItem = styled.div<{\n    lenType: TipLenType;\n    valueType: TipValueType;\n}>`\n    display: inline-block;\n    width: 8px;\n    ${props => props.lenType === 'short' ? css`\n        width: 4px;\n    ` : props.lenType === 'long' ? css`\n        width: 12px;\n    ` : ''}\n    height: calc(100% - 4px);\n    margin: 2px 2px 0 2px;\n    background-color: #e0e0e088;\n    ${props => props.valueType === 2 ? css`\n        background-color: #db828287;\n    ` : props.valueType === 1 ? css`\n        background-color: #9394dd87;\n    ` : ''}\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\n    border: solid 1px #0000004e;\n    /* border-radius: 2px; */\n    box-sizing: border-box;\n`;\n\nconst _Backing = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 6px;\n    /* background-color: #00a048; */\n    text-align: center;\n`;\n\nconst _Error = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    margin-top: 2px;\n    height: 4px;\n    border-radius: 4px;\n    background-color: #af3838;\n`;\n\nconst _Voicing = styled.div<{\n}>`\n    display: inline-block;\n    width: 40%;\n    margin: 2px 2px 0 0;\n    height: 4px;\n    border-radius: 4px 0 0 4px;\n    border: solid 1px #0000004e;\n    background-color: #acb6ca;\n`;\n\nconst _Pattern = styled.div<{\n}>`\n    display: inline-block;\n    width: 40%;\n    margin: 2px 0 0 2px;\n    height: 4px;\n    border-radius: 0 4px 4px 0;\n    border: solid 1px #0000004e;\n    background-color: #accab3;\n`;","import styled, { css } from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    // const jsxList: JSX.Element[] = [];\r\n    // jsxList.push(<_Border key={0} />);\r\n    // jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    const value = props.detail.fixed;\r\n    return (\r\n        <_Wrap isStart={value === 'Start'}>\r\n            {/* {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()} */}\r\n            <_Label>{value}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div<{\r\n    isStart: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    border-left: 1px solid #00000083;\r\n    border-top: 1px solid #00000083;\r\n    border-right: 1px solid #00000083;\r\n    /* border: 1px solid #00000083; */\r\n    box-sizing: border-box;\r\n    background-color: #9b9b9b1f;\r\n    ${props => props.isStart ? css`\r\n        border-radius: 0 35px 0 0;\r\n    ` : css`\r\n        border-radius: 35px 0 0 0;\r\n    `}\r\n`;\r\n\r\n// const _Border = styled.div`\r\n//     display: inline-block;\r\n//     width: 10px;\r\n//     height: 100%;\r\n//     background-color: #b4b4b4;\r\n//     vertical-align: middle;\r\n// `;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    /* width: calc(100% - 10px); */\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #960000b0;\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    /* vertical-align: middle; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{TheoryUtil.KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.beatSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailSection } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailSection = (props: {\r\n    detail: DetailSection;\r\n}) => {\r\n    // const { store } = useContext(GlobalContext);\r\n\r\n    // const state = store.scoreState;\r\n    // const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    // const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Label>{curSection.labelName}</_Label> */}\r\n            <_Label>{props.detail.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcAlter = (props: {\r\n    detail: DetailAlter;\r\n    prevCache: ScoreCache.Element;\r\n    curCache: ScoreCache.Element;\r\n}) => {\r\n\r\n    const getType = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate': return 'Key';\r\n            case 'tempo': return 'Tempo';\r\n            case 'beat': return 'Beat';\r\n        }\r\n    }\r\n    const getDetail = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate':{\r\n                const prevKey = TheoryUtil.KEY12_SHARP_LIST[props.prevCache.keyIndex] + (props.prevCache.scale === 'major' ? '' : 'm');\r\n                const curKey = TheoryUtil.KEY12_SHARP_LIST[props.curCache.keyIndex] + (props.curCache.scale === 'major' ? '' : 'm');\r\n                return `${prevKey}→${curKey}`;\r\n            }\r\n            case 'tempo':{\r\n                const prevTempo = props.prevCache.bpm;\r\n                const curTempo = props.curCache.bpm;\r\n                return `${prevTempo}→${curTempo}`;\r\n            }\r\n            case 'beat':{\r\n                const prevBeat = props.prevCache.beatSignature;\r\n                const curBeat = props.curCache.beatSignature;\r\n                return `${prevBeat}→${curBeat}`;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Type>{getType()}</_Type>\r\n            <_Detail>{getDetail()}</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\ntype ChordDefBean = {\r\n    root: TheoryUtil.DegreeProps;\r\n    symbolKey: TheoryUtil.SymbolKey;\r\n}\r\n\r\nconst ChordEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n    }, [detail.root, detail.symbolKey]);\r\n\r\n    const getChord = (index: number, isFlat: boolean, symbolKey: TheoryUtil.SymbolKey): ChordDefBean => {\r\n        return { root: { index, isFlat }, symbolKey };\r\n    }\r\n\r\n    const createRow = (label: JSX.Element, chordList: ChordDefBean[]): JSX.Element => {\r\n        const listJsx: JSX.Element[] = [];\r\n        listJsx.push(<_Header key={listJsx.length}>{label}</_Header>);\r\n        chordList.forEach((chord) => {\r\n            const rootName = TheoryUtil.getDegreeRoot(chord.root);\r\n            const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\r\n            const symbolName = symbol.name;\r\n            listJsx.push(\r\n                <_Item isActive={false} key={listJsx.length}>\r\n                    {rootName + symbolName}\r\n                </_Item>);\r\n        });\r\n        return <_Row>{listJsx}</_Row>;\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {createRow(<>triad</>, [\r\n                getChord(0, false, 'major'),\r\n                getChord(2, false, 'minor'),\r\n                getChord(4, false, 'minor'),\r\n                getChord(5, false, 'major'),\r\n                getChord(7, false, 'major'),\r\n                getChord(9, false, 'minor'),\r\n                getChord(11, false, 'minor-minus5'),\r\n            ])}\r\n            {/* {createRow(<>Tetrad</>, [\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'minor-7th'),\r\n                getChord(4, false, 'minor-7th'),\r\n                getChord(5, false, 'major-maj7th'),\r\n                getChord(7, false, 'major-min7th'),\r\n                getChord(9, false, 'minor-7th'),\r\n                getChord(11, false, 'minor7-minus5'),\r\n            ])} */}\r\n            {createRow(<>domm</>, [\r\n                getChord(9, false, 'major-min7th'),\r\n                getChord(11, false, 'major-min7th'),\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'major-min7th'),\r\n                getChord(4, false, 'major-min7th'),\r\n            ])}\r\n            {createRow(<>domm*</>, [\r\n                getChord(1, false, 'diminish'),\r\n                getChord(3, false, 'diminish'),\r\n                getChord(4, false, 'diminish'),\r\n                getChord(6, false, 'diminish'),\r\n                getChord(8, false, 'diminish'),\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    /* height: 160px; */\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    /* height: 100%; */\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useEffect, useMemo, useRef } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/score/scoreData\";\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\nimport SymbolEditor from \"../tool/symbolEditor\";\nimport CalcChord from \"./calc/calcChord\";\nimport CalcSection from \"./calc/calcSection\";\nimport ElementDetailAlter from \"./form/elementDetailAlter\";\nimport ElementDetailChord from \"./form/elementDetailChord\";\nimport ElementFixedBorder from \"./elementFixedBorder\";\nimport ElementDetailInit from \"./form/elementDetailInit\";\nimport ElementDetailSection from \"./form/elementDetailSection\";\nimport CalcAlter from \"./calc/calcAlter\";\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\nimport { ScoreState } from \"../../../../../redux/store/score/scoreState\";\nimport ChordEditor from \"../tool/chordEditor\";\n\nconst ScoreElement = (props: {\n    index: number;\n    element: ChordElement;\n    state: ScoreState;\n    setState: (state: ScoreState) => void;\n}) => {\n\n    const wrapRef = useRef({} as HTMLDivElement);\n    const bodyRef = useRef({} as HTMLDivElement);\n\n    const state = props.state;\n    const keySwitch = state.keySwitch;\n    const isCurrent = state.focusIndex == props.index;\n    // const chordList = store.scoreData.chordList;\n    // const element = chordList[props.index];\n    const element = props.element;\n    const cache = state.elementCacheList[props.index];\n    const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\n    const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\n    const isFocus = props.index >= distHead && props.index <= distTail;\n    const isRange = isFocus && distHead != distTail;\n    const isSameSection = isFocus || state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\n\n    useEffect(() => {\n        cache.reffers.wrap = wrapRef.current;\n        cache.reffers.body = bodyRef.current;\n        props.setState(state);\n    }, [state.elementCacheList.length]);\n\n    const elementJson = JSON.stringify(element);\n\n    const isError = () => {\n        let ret = false;\n        if (element.type === 'chord') {\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\n            ret = chordCache.backingError;\n        }\n        return ret;\n    }\n\n    return useMemo(() => {\n        // console.log(`pos: ${props.index}`);\n        const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\n        const isInactive = !(isSameSection || element.type === 'init');\n        return (\n            <_Wrap\n                ref={wrapRef}\n                isSelectable={element.type !== 'fixed'}\n                isActive={isFocus}\n                isInactive={isInactive}\n                isAdditional={['chord', 'section', 'alter', 'init'].includes(element.type)}\n            >\n                <_Head>\n                    {element.type !== 'chord' ? <></> : (\n                        <_CurKey>{TheoryUtil.getDisplayKeyScaleName(cache.keyIndex, cache.scale)}</_CurKey>\n                    )}\n                </_Head>\n\n                {/* 要素の入力フォーム */}\n                {['init', 'chord', 'section', 'alter'].includes(element.type) ? (\n                    <_Form\n                        ref={bodyRef}\n                        isActive={isFocus}\n                        isRange={isRange}\n                        isInactive={isInactive}\n                        type={element.type}\n                        isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\n                        onClick={() => {\n                            if (element.type === 'fixed') {\n                                return;\n                            }\n                            if (!state.keySwitch.distMode) {\n                                state.focusIndex = state.distIndex = props.index;\n                            } else {\n                                state.distIndex = props.index;\n                            }\n                            props.setState(state);\n                        }}\n                    >{(() => {\n                        switch (element.type) {\n                            case 'init': {\n                                const detail = element.detail as DetailInit;\n                                return (<ElementDetailInit detail={detail} />);\n                            }\n                            case 'section': {\n                                const detail = element.detail as DetailSection;\n                                return (<ElementDetailSection detail={detail} />);\n                            }\n                            case 'chord': {\n                                const detail = element.detail as DetailChord;\n                                return (<ElementDetailChord\n                                    detail={detail}\n                                    isCurrent={isFocus}\n                                    cache={cache}\n                                    chordCacheList={state.chordCacheList}\n                                    keyIndex={cache.keyIndex}\n                                    isSustainMode={isFocus && state.keySwitch.sustainMode}\n                                    scale={cache.scale}\n                                />);\n                            }\n                            case 'alter': {\n                                const detail = element.detail as DetailAlter;\n                                return (<ElementDetailAlter detail={detail} />);\n                            }\n                        }\n                    })()}\n                    </_Form>\n                ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\n\n                {/* 入力フォーム下部の計算によって出力される情報 */}\n                {\n                    element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\n                        element.type === 'section' ? (<CalcSection index={props.index} />) :\n                            element.type === 'alter' ? (\n                                <CalcAlter\n                                    detail={element.detail as DetailAlter}\n                                    prevCache={state.elementCacheList[props.index - 1]}\n                                    curCache={cache}\n                                />\n                            ) :\n                                <></>\n                }\n                <>{!(isCurrent && chordDetail != null && state.keySwitch.chordMode) ? '' :\n                    <ChordEditor />\n                }</>\n                <>{!(isCurrent && chordDetail != null && chordDetail.root != null && state.keySwitch.symbolMode) ? '' :\n                    <SymbolEditor />\n                }</>\n                {['fixed', 'init'].includes(element.type) ? <></> : (\n                    <_Operations>\n                        <_OperationItem>-</_OperationItem>\n                        <_OperationItem\n                        // onClick={() => dispatcher.score.addChordElement()}\n                        >+</_OperationItem>\n                    </_Operations>\n                )}\n            </_Wrap>\n        );\n    }, [\n        elementJson, isSameSection, isRange, isFocus,\n        keySwitch.chordMode, keySwitch.symbolMode, keySwitch.sustainMode,\n        isError(), cache.keyIndex, cache.scale\n    ]);\n}\n\nexport default ScoreElement;\n\nconst _NextLine = styled.div`\n    display: block;\n    width: 1px;\n    height: 10px;\n    background-color: #ad0c0c;\n`;\n\nconst _Form = styled.div<{\n    isActive: boolean;\n    isRange: boolean;\n    isInactive: boolean;\n    //常に表示させるかどうか\n    isAnytime: boolean;\n    type: TypeDetail;\n}>`\n    display: inline-block;\n    /* position: relative; */\n    min-width: 80px;\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\n    /* border: solid 1px #00000049; */\n    ${props => props.type !== 'section' ? '' : css`\n        border: solid 1px #df8484;\n    ` }\n    ${props => props.type !== 'init' ? '' : css`\n        border: solid 1px #44b168;\n        height: 85px;\n    ` }\n    ${props => props.type !== 'alter' ? '' : css`\n        border: solid 1px #604fc0;\n    ` }\n\n    opacity: 0.4;\n    border-radius: 4px;\n    ${props => props.isInactive ? '' : css`\n        /* background-color: #ebf1e2; */\n        opacity: 1;\n    ` }\n    ${props => !props.isAnytime ? '' : css`\n        opacity: 1;\n    ` }\n    box-sizing: border-box;\n    padding: 4px;\n    transition: background-color 100ms;\n    ${props => !props.isActive ? '' : css`\n        background-color: #e4c9df;\n        border: solid 1px #00000049;\n        box-shadow: 0 0 8px 0 #000b3a48;\n    `}\n    ${props => !props.isRange ? '' : css`\n        background-color: #80d4e2;\n        box-shadow: 0 0 8px 0 #000b3a48;\n    `}\n`;\n\nconst _Operations = styled.div``;\nconst _OperationItem = styled.div``;\n\nconst _Wrap = styled.div<{\n    // 選択可能か\n    isSelectable: boolean;\n    isActive: boolean;\n    isInactive: boolean;\n    isAdditional: boolean;\n}>`\n    display: inline-block;\n    position: relative;\n    height: ${ELEMENT_HEIGHT}px;\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\n    box-sizing: border-box;\n    /* margin: 10px 5px 5px 5px; */\n    border-bottom: 1px solid #47438678;\n    margin-bottom: 4px;\n    vertical-align: top;\n    /* width: 1px; */\n    transition: width 500ms, opacity 300ms;\n    /* border: 1px solid #00000015; */\n    ${props => props.isInactive || !props.isAdditional ? '' : css`\n        /* background-color: #e8ff9549; */\n        background: linear-gradient(to bottom, transparent,transparent,transparent, #ffffff9e);\n    `}\n\n    & ${_Operations} {\n        display: none;\n        position: absolute;\n        z-index: 5;\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\n        height: 44px;\n        /* background-color: #0000ff11; */\n        top: ${35}px;\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\n\n        /* background-color: #0400d84e; */\n        & ${_OperationItem} {\n            display: inline-block;\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\n            background-color: #ebebeb6e;\n            border: 1px solid #818181;\n            margin: 1px 0;\n            font-size: 15px;\n            font-weight: 600;\n            text-align: center;\n            color: #818181;\n            box-sizing: border-box;\n            line-height: 15px;\n\n            &:hover {\n                background-color: #fffb0b9d\n            }\n        }\n    }\n\n    &:hover {\n        ${props => !props.isSelectable ? '' : css<{\n    isActive: boolean;\n}>`\n            & ${_Form} {\n                ${props => props.isActive ? '' : css`background-color: #ffffff9b;`}\n                opacity: 1;\n            }\n            & ${_Operations} {\n                display: inline-block;\n            }\n        `}\n    }\n`;\n\nconst _CurKey = styled.div``;\nconst _Head = styled.div`\n    display: inline-block;\n    /* position: relative; */\n    width: 100%;\n    height: ${ELEMENT_HEAD_WIDTH}px;\n    /* background-color: #eca8813b; */\n\n    & ${_CurKey} {\n        display: inline-block;\n        position: absolute;\n        top: -2px;\n        left: 10px;\n        width: 50px;\n        font-size: 12px;\n        color: #ca0000;\n        /* background-color: #fff; */\n    }\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (cacheList.length === chordList.length) {\r\n        for (let i = 0; i < cacheList.length; i++) {\r\n            list.push(\r\n                <ScoreElement key={list.length}\r\n                    index={i}\r\n                    element={chordList[i]}\r\n                    state={store.scoreState}\r\n                    setState={dispatcher.score.setScoreState}\r\n                />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {list}\r\n            {/* <_Frame> */}\r\n            {/* <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note> */}\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    /* overflow: auto; */\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #d8d8d8;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    state.distIndex = state.focusIndex;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 46px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #97cce0dd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #929292;\r\n    /* border-radius: 20px 20px 20px 20px; */\r\n    border-radius: 2px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 25px;\r\n        font-size: 18px;\r\n        /* font-weight: 600; */\r\n        color: #4d4d4d;\r\n        /* background-color: #0000003a; */\r\n        line-height: 22px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 21px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #adadad39; */\r\n        line-height: 20px;\r\n    }\r\n`;","import { on } from \"stream\";\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\nimport { DetailChord } from \"../redux/store/score/scoreData\";\nimport { Store } from \"../redux/store/store\";\nimport BackingUtil from \"./backingUtil\";\nimport CacheUtil from \"./cacheUtil\";\nimport { getKeyIndexFromPitcher, getNormalizeLenFromNotes } from \"./melodyUtil\";\nimport TheoryUtil from \"./theoryUtil\";\n\nnamespace HarmonizeUtil {\n\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\n        const state = store.scoreState;\n        // const sampler = store.instruments.sampler;\n        const cacheList = state.elementCacheList;\n        const chordList = store.scoreData.chordList;\n        const reserveTasks = store.reserveTasks;\n        let firstTime = -1;\n        const update = () => {\n            // if (store.invalidate.harmonize) {\n            //     store.invalidate.harmonize();\n            // }\n            dispatcher.score.setScoreState(state);\n        }\n        // const reserveTasks = store.reserveTasks;\n        // const init = chordList[0].detail as DetailInit;\n        const adjsut = 0;\n        for (let i = state.focusIndex; i < chordList.length; i++) {\n            const cache = cacheList[i];\n            const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\n            const element = chordList[i];\n\n            /**\n             * 要素の切り替わり時の処理をタスクに追加する\n             * @param callback 実行する処理\n             */\n            const addProgAction = (callback: () => void) => {\n                reserveTasks.push(\n                    setTimeout(() => {\n                        callback();\n                    }, cache.pastSecond - firstTime - adjsut)\n                );\n            }\n\n            if (element.type === 'chord') {\n                const detail = element.detail as DetailChord;\n                // 開始時のノーツの位置（時間）を保存する。\n                if (firstTime === -1) {\n                    firstTime = cache.pastSecond;\n                }\n\n                // コードが指定されてい場合\n                if (detail.root == null) {\n                    addProgAction(()=> {\n                        state.focusIndex = i;\n                        state.distIndex = state.focusIndex;\n                        update();\n                    });\n                }\n\n                // バッキングエラーがない場合\n                if (!chordCache.backingError) {\n                    const backing = detail.backing;\n                    const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\n\n                    // const chordTime = 60 / cache.bpm * len;\n\n                    const minute = detail.minute.head + detail.minute.tail;\n                    const chordTime = TheoryUtil.calcSustainMsec(\n                        detail.beatLen,\n                        minute,\n                        cache.bpm,\n                        cache.beatSignature\n                    );\n\n                    addProgAction(()=> {\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\n                        state.focusIndex = i;\n                        state.distIndex = state.focusIndex;\n                        setTimeout(() => {\n                            update();\n                        }, 0);\n                    });\n                } else {\n                    // バッキングエラーがある場合プレビューを止める\n                    reserveTasks.push(\n                        setTimeout(() => {\n                            HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\n                        }, (cache.pastSecond - firstTime - adjsut))\n                    );\n                }\n            }\n\n            // 終端の要素を処理\n            if (i === chordList.length - 1) {   \n                addProgAction(()=> {\n                    HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\n                });\n            }\n        }\n\n        // メロディを再生\n        if (!state.isSolo) {\n            previewMelody(firstTime / 1000, store, dispatcher, reserveTasks);\n        }\n\n        state.isPreview = true;\n        update();\n    }\n\n    const previewMelody = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\n\n        const state = store.melodyState;\n        const scoreState = store.scoreState;\n        const data = store.scoreData;\n        const instrument = store.instruments.melodyFont;\n\n        const update = store.invalidate.melody as () => void;\n        let firstTime = -1;\n        for (let i = 0; i < data.notesList.length; i++) {\n            const notes = data.notesList[i];\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\n            const pos = getNormalizeLenFromNotes(notes.pos);\n            const len = getNormalizeLenFromNotes(notes.len);\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\n\n            if (posTime < start) continue;\n\n            // 開始時のノーツの位置（時間）を保存する。\n            if (firstTime === -1) {\n                // ノーツ非選択時は先頭から流す\n                if (state.focusIndex === -1) {\n                    firstTime = 0;\n                } else {\n                    firstTime = posTime;\n                }\n            }\n\n            const pitch = notes.pitchIndex;\n            // const time = 60 / bpm * pos;\n\n            const keyIndex = getKeyIndexFromPitcher(pitch);\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\n\n            reserveTasks.push(\n                setTimeout(() => {\n                    // state.mouseState.curChord = searchCurChord(store, i);\n\n                    // dispatcher.tune.setState(state);\n                    dispatcher.melody.adjustScrollX();\n                    if (instrument != null) {\n                        instrument.stop();\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\n                    }\n                    setTimeout(() => {\n                        state.focusIndex = i;\n                        state.destIndex = state.focusIndex;\n                        update();\n                    }, 0);\n                }, (posTime - start) * 1000)\n            );\n\n            // 終端ノーツの処理\n            // if (i === data.notesList.length - 1) {\n            //     reserveTasks.push(\n            //         setTimeout(() => {\n            //             stopPreview(store, dispatcher, reserveTasks);\n            //         }, (posTime - start + lenTime) * 1000)\n            //     );\n            // }\n        }\n    }\n\n    // ハーモニーのプレビューを停止する。\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\n        const state = store.scoreState;\n        state.isPreview = false;\n        // store.instruments.sampler.releaseAll();\n        // state.focusIndex = state.lastFocus;\n        reserveTasks.forEach(id => clearTimeout(id));\n        dispatcher.system.setReserveTasks([]);\n        dispatcher.score.setScoreState(state);\n\n        store.instruments.harmonyFont?.stop();\n    }\n\n    // 選択中の要素のバッキングパターンを鳴らす\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\n\n        const state = store.scoreState;\n        const reserveTasks = store.reserveTasks;\n        const cache = state.elementCacheList[state.focusIndex];\n        const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\n        const curChord = store.scoreData.chordList[state.focusIndex];\n        if (curChord != null) {\n\n            const detail = curChord.detail as DetailChord;\n\n            if (detail.root == null) return;\n\n            // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\n            // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\n            // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\n\n            const backing = detail.backing;\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\n            // const chordTime = 60 / cache.bpm * len;\n\n            const minute = detail.minute.head + detail.minute.tail;\n            const chordTime = TheoryUtil.calcSustainMsec(\n                detail.beatLen,\n                minute,\n                cache.bpm,\n                cache.beatSignature\n            );\n\n            BackingUtil.playBacking(store, store.reserveTasks, cache, backing, pitchList, chordTime);\n\n            reserveTasks.push(setTimeout(() => {\n                state.isPreview = false;\n                dispatcher.score.setScoreState(state);\n            }, chordTime));\n            state.isPreview = true;\n            dispatcher.score.setScoreState(state);\n        }\n    }\n}\n\nexport default HarmonizeUtil;\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\nimport { Store } from \"../../../../../redux/store/store\";\nimport { KeyboardEvent } from \"react\";\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\nimport BackingUtil from \"../../../../../utils/backingUtil\";\nimport { ChordBacking } from \"../../../../../redux/store/score/scoreData\";\nimport DataUtil from \"../../../../../utils/dataUtil\";\nimport { NoteKeySwitch } from \"../../../../../redux/store/score/scoreState\";\n\nnamespace BackingEditorInput {\n\n    export const main = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\n\n        const config = store.userEnv.keyConfig.note;\n        const keySwitch = store.scoreState.keySwitch;\n        // alert(e.key);\n        // alert(config.nextElement);\n\n        const data = store.scoreData;\n        const state = store.backingState;\n\n        if (state == null || state.tabIndex === 1) return;\n\n        if (!state.isPreview) {\n            edit(e, state, keySwitch, dispatcher);\n        } else {\n\n            switch (e.key) {\n                case ' ': {\n                    BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\n                }\n                    break;\n            }\n        }\n    }\n\n    const edit = (e: KeyboardEvent, state: BackingState.Editor, keySwitch: NoteKeySwitch, dispatcher: Dispatcher) => {\n\n        const pattern = state.pattern;\n\n        // 共通処理\n        common(e, state, dispatcher);\n\n        if (pattern != null) {\n            if (pattern.channelIndex === -1) {\n                patternNormalMode(e, state, pattern, dispatcher);\n            } else {\n                patternDetailMode(e, state, pattern, keySwitch.sustainMode, dispatcher);\n            }\n        }\n    }\n\n    const common = (e: KeyboardEvent, state: BackingState.Editor, dispatcher: Dispatcher) => {\n\n        switch (e.key) {\n            case 'b': {\n                // dispatcher.backing.closeBackingEditor();\n                state.closeAction(state, false);\n            } break;\n            case 'z': {\n                const voicingList = BackingUtil.getVoicingListFromTable(state.voicingTable);\n                const pattern = state.pattern == null ? null : BackingUtil.buildPatternProps(state.pattern);\n                const test: ChordBacking = { voicingList, pattern };\n                console.log('voicingList: ' + DataUtil.gZip(JSON.stringify(voicingList)));\n                console.log('pattern: ' + DataUtil.gZip(JSON.stringify(pattern)));\n                console.log('source: ' + DataUtil.gZip(JSON.stringify(test)));\n                console.log('source: ' + JSON.stringify(test));\n            } break;\n            case ' ': {\n                if (!state.hasError) {\n                    dispatcher.backing.testBacking();\n                }\n            } break;\n            case 'Enter': {\n                // dispatcher.backing.mappingEditorToScore();\n                // dispatcher.backing.closeBackingEditor();\n                state.closeAction(state, true);\n            } break;\n        }\n    }\n\n    /**\n     * パターン編集の通常モード\n     * @param e \n     * @param state \n     * @param pattern \n     * @param dispatcher \n     */\n    const patternNormalMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, dispatcher: Dispatcher) => {\n\n        const update = () => dispatcher.backing.setState(state);\n        switch (e.key) {\n            case 'ArrowLeft': {\n                dispatcher.backing.movePatternColumn(false);\n            } break;\n            case 'ArrowRight': {\n                dispatcher.backing.movePatternColumn(true);\n            } break;\n            case 'ArrowUp': {\n                dispatcher.backing.incrementVel(1);\n            } break;\n            case 'ArrowDown': {\n                dispatcher.backing.incrementVel(-1);\n            } break;\n            case 'a': {\n                dispatcher.backing.addPatternColumn();\n            } break;\n            case 'w': {\n                dispatcher.backing.switchLayer();\n            } break;\n            case 'e': {\n                dispatcher.backing.switchMode();\n            } break;\n            case '1': {\n                dispatcher.backing.setCurrentDivRate(16);\n            } break;\n            case '2': {\n                dispatcher.backing.setCurrentDivRate(8);\n            } break;\n            case '3': {\n                dispatcher.backing.setCurrentDivRate(4);\n            } break;\n            case '4': {\n                dispatcher.backing.setCurrentDivRate(2);\n            } break;\n            case '5': {\n                dispatcher.backing.setCurrentDivRate(1);\n            } break;\n            case '.': {\n                dispatcher.backing.toggleCurrentDivHalf();\n            } break;\n            case 'Delete': {\n                dispatcher.backing.deleteColumn();\n            } break;\n            case 's': {\n                pattern.channelIndex = 0;\n                update();\n            } break;\n        }\n    }\n\n    /**\n     * パターン編集の詳細モード\n     * @param e \n     * @param state \n     * @param pattern \n     * @param isEdit \n     * @param dispatcher \n     */\n    const patternDetailMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, isEdit: boolean, dispatcher: Dispatcher) => {\n\n        const update = () => dispatcher.backing.setState(state);\n        if (!isEdit) {\n            switch (e.key) {\n                case 'ArrowLeft': {\n                    dispatcher.backing.movePatternColumn(false);\n                }\n                    break;\n                case 'ArrowRight': {\n                    dispatcher.backing.movePatternColumn(true);\n                }\n                    break;\n                case 'ArrowUp': {\n                    dispatcher.backing.moveChannelIndex(false);\n                }\n                    break;\n                case 'ArrowDown': {\n                    dispatcher.backing.moveChannelIndex(true);\n                }\n                    break;\n                case 's': {\n                    pattern.channelIndex = -1;\n                    update();\n                }\n                    break;\n                case 'a': {\n                    const curNotes = dispatcher.backing.getNotes();\n\n                    const hasStaccato = () => {\n                        const layer = pattern.layers[pattern.layerIndex];\n                        const search = layer.table.find((record) => {\n                            const cell = record[pattern.lenIndex];\n                            if (cell != null && cell.signal === 's') return cell;\n                        });\n                        return search != undefined;\n                    }\n                    // 同列にスタッカートがある場合、スタッカートを設定\n                    const signal = !hasStaccato() ? 'n' : 's';\n                    const notes: BackingState.NoteStatus | null = curNotes == null ? { signal, timing: 0, velAdj: 0 } : null;\n                    dispatcher.backing.setNotes(notes);\n                    dispatcher.backing.updateErrorState();\n                }\n                    break;\n            }\n        } else {\n\n            const layer = pattern.layers[pattern.layerIndex];\n            const baseVel = layer.velocityList[pattern.lenIndex];\n            const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\n            const cell = layer.table[channelIndex][pattern.lenIndex];\n\n            if (cell != null) {\n                let tempTiming = cell.timing == undefined ? 0 : cell.timing;\n                let tempVelAdj = cell.velAdj == undefined ? 0 : cell.velAdj;\n                const vel = baseVel + tempVelAdj;\n                switch (e.key) {\n                    case 'ArrowUp': {\n                        if (vel < 10) {\n                            tempVelAdj++;\n                        }\n                    }\n                        break;\n                    case 'ArrowDown': {\n                        if (vel > 1) {\n                            tempVelAdj--;\n                        }\n                    }\n                        break;\n                    case 'ArrowLeft': {\n                        if (tempTiming > -10) {\n                            tempTiming--;\n                        }\n                    }\n                        break;\n                    case 'ArrowRight': {\n                        if (tempTiming < 10) {\n                            tempTiming++;\n                        }\n                    }\n                        break;\n                }\n                if (tempVelAdj !== 0) {\n                    cell.velAdj = tempVelAdj;\n                } else {\n                    delete cell.velAdj;\n                }\n                if (tempTiming != 0) {\n                    cell.timing = tempTiming;\n                } else {\n                    delete cell.timing;\n                }\n                update();\n            }\n        }\n    }\n}\nexport default BackingEditorInput;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\nimport { Store } from \"../../../../../redux/store/store\";\nimport { KeyboardEvent } from \"react\";\nimport PresetSelectorFrame from \"../../../../thema/presetSelectorFrame\";\n\nnamespace PresetSelectorInput {\n\n    export const main = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\n\n        const config = store.userEnv.keyConfig.note;\n        const keySwitch = store.scoreState.keySwitch;\n        // alert(`[${e.key}]`);\n        // alert(config.nextElement);\n\n        const cache = store.systemState.cache as PresetSelectorFrame.CachePorps;\n        const update = () => {\n            // cache.updateBacking();\n            cache.invalidate();\n        }\n        const field = cache.field;\n\n        const moveList = (isDown: boolean) => {\n            if (!isDown && field.listIndex >= 1) {\n                field.listIndex--;\n                update();\n            } else if (isDown && field.listIndex < cache.presetList.length - 1) {\n                field.listIndex++;\n                update();\n            }\n        }\n\n        switch (e.key) {\n            case 'Enter': {\n                cache.applyAction();\n            } break;\n            case 'e': {\n                dispatcher.score.closeLibraryWnd();\n            } break;\n            case 'ArrowUp': {\n                moveList(false);\n            } break;\n            case 'ArrowDown': {\n                moveList(true);\n            } break;\n        }\n    }\n}\nexport default PresetSelectorInput;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\nimport { Store } from \"../../../../../redux/store/store\";\nimport { KeyboardEvent } from \"react\";\nimport ThemaSelectorFrame from \"../../../../thema/themaSelectorFrame\";\nimport LibraryUtil from \"../../../../../utils/LibraryUtil\";\n\nnamespace ThemaSelectorInput {\n\n    export const main = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\n\n        const config = store.userEnv.keyConfig.note;\n        const keySwitch = store.scoreState.keySwitch;\n        // alert(`[${e.key}]`);\n        // alert(config.nextElement);\n\n        const cache = store.systemState.cache as ThemaSelectorFrame.CachePorps;\n        const update = () => {\n            // cache.updateBacking();\n            cache.invalidate();\n        }\n        const field = cache.field;\n\n        const moveList = (isDown: boolean) => {\n            if (field.focusSide === 0) {\n                // パターン\n                if (!isDown && field.pattIndex >= 1) {\n                    field.pattIndex--;\n                    field.voicIndex = 0;\n                    update();\n                } else if (isDown && field.pattIndex < cache.patternList.length - 1) {\n                    field.pattIndex++;\n                    field.voicIndex = 0;\n                    update();\n                }\n            } else {\n                // ボイシング\n                const patternList = cache.patternList;\n                const filteredList = cache.voicingList.filter((voic) => {\n                    return LibraryUtil.acceptVoic(voic, patternList, field.pattIndex);\n                });\n                if (!isDown && field.voicIndex >= 1) {\n                    field.voicIndex--;\n                    update();\n                } else if (isDown && field.voicIndex < filteredList.length - 1) {\n                    field.voicIndex++;\n                    update();\n                }\n            }\n        }\n\n        const moveSide = (isRight: boolean) => {\n            if (!isRight) {\n                if (field.focusSide === 1) {\n                    field.focusSide = 0;\n                    update();\n                }\n            } else {\n                if (field.focusSide === 0) {\n                    field.focusSide = 1;\n                    update();\n                }\n            }\n        }\n\n        if (!cache.isPreview) {\n            switch (e.key) {\n                case 'e': {\n                    dispatcher.score.closeLibraryWnd();\n                } break;\n                case 'Enter': {\n                    const pattern = cache.patternList[field.pattIndex];\n                    const voicing = cache.voicingList.filter(voic => {\n                        return LibraryUtil.acceptVoic(voic, cache.patternList, field.pattIndex);\n                    })[field.voicIndex];\n                    dispatcher.thema.mappingSelectorToScore(voicing.source, pattern.source);\n                    dispatcher.score.closeLibraryWnd();\n                } break;\n                case 'ArrowLeft': {\n                    moveSide(false);\n                } break;\n                case 'ArrowRight': {\n                    moveSide(true);\n                } break;\n                case 'ArrowUp': {\n                    moveList(false);\n                } break;\n                case 'ArrowDown': {\n                    moveList(true);\n                } break;\n            }\n        }\n        // プレビュー中か否かに影響されない\n        switch (e.key) {\n            case ' ': {\n                if (cache.isPermitTest()) {\n                    cache.testBacking();\n                }\n            } break;\n        }\n    }\n\n}\nexport default ThemaSelectorInput;","import styled, { css } from \"styled-components\";\r\n\r\nexport namespace SideFormStyles {\r\n\r\n    export const ___CSS_FORM = css`\r\n        display: inline-block;\r\n        /* width: 100px; */\r\n        height: 25px;\r\n        background-color: #bdbdbd;\r\n        border: 1px solid #000;\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        color: #303030;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        text-align: center;\r\n    `;\r\n\r\n    export const ___CSS_TITLE = css`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 26px;\r\n        /* background-color: #f0f0f0; */\r\n        background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n        border: 1px solid #222222;\r\n        font-size: 20px;\r\n        color: #ffffff;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        box-sizing: border-box;\r\n        /* border: 1px solid #c50000; */\r\n        text-align: center;\r\n    `;\r\n\r\n    export const createNumberForm = (value: number, isEnable: boolean,\r\n         onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n         min: number, max:number, step:number) => {\r\n\r\n        return (\r\n            <_NumberForm isEnable={isEnable}>\r\n                <input\r\n                    type=\"number\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"range\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </_NumberForm>\r\n        );\r\n    }\r\n\r\n    const _NumberForm = styled.div<{\r\n        isEnable: boolean;\r\n    }>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 55px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 5px;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n    `;\r\n}","import { KeyboardEvent } from \"react\";\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\nimport { Store } from \"../../../../../redux/store/store\";\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\nimport BackingEditorInput from \"./backingEditorInput\";\nimport { NoteBasicInput } from \"./noteBasicInput\";\nimport PresetSelectorInput from \"./presetSelectorInput\";\nimport ThemaSelectorInput from \"./themaSelectorInput\";\n\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\n\n    const config = store.userEnv.keyConfig.note;\n    const keySwitch = store.scoreState.keySwitch;\n    // alert(e.key);\n    // alert(config.nextElement);\n\n    const data = store.scoreData;\n    const state = store.scoreState;\n    const curType = data.chordList[state.focusIndex].type;\n    const isElement = curType !== 'init'\n\n\n    // プレビュー再生時\n    if (state.isPreview) {\n        switch (e.key) {\n            case ' ': {\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\n            }\n                break;\n        }\n        return;\n    } else {\n        switch (store.scoreState.hideMenu) {\n            case 'none': {\n                if (isElement) {\n                    if (keySwitch.control) {\n                        switch (e.key) {\n                            case 'c': {\n                                const element = data.chordList[state.focusIndex];\n                                if (element.type === \"chord\") {\n                                    const detail = element.detail as DetailChord;\n                                    if (detail.root != null) {\n                                        dispatcher.score.cloneBacking();\n                                    }\n                                }\n                            }\n                                break;\n                            case 'x': {\n                                dispatcher.score.copyElementList();\n                            }\n                                break;\n                            case 'v': {\n                                if (state.copiedElementList != null) {\n                                    dispatcher.score.pasteElementList();\n                                } else if (state.cloneBacking != null) {\n\n                                    const element = data.chordList[state.focusIndex];\n                                    if (element.type === \"chord\") {\n                                        const detail = element.detail as DetailChord;\n                                        if (detail.root != null) {\n                                            dispatcher.score.pastBacking();\n                                        }\n                                    }\n                                }\n                            }\n                                break;\n                            case 's': {\n                                dispatcher.score.saveFile();\n                                // DataUtil.saveFile(JSON.stringify(data), state);\n                            }\n                                break;\n                        }\n                    } else if (keySwitch.distMode) {\n                        switch (e.key) {\n                            case 'ArrowLeft': {\n                                dispatcher.score.moveDist(false);\n                            }\n                                break;\n                            case 'ArrowRight': {\n                                dispatcher.score.moveDist(true);\n                            }\n                                break;\n                        }\n                    } else if (keySwitch.sustainMode) {\n                        switch (e.key) {\n                            case config.decRoot: {\n                                dispatcher.score.incrementDegreeRoot(false);\n                            }\n                                break;\n                            case config.incRoot: {\n                                dispatcher.score.incrementDegreeRoot(true);\n                            }\n                                break;\n                            case config.decBeat: {\n                                dispatcher.score.incrementBeatLen(false);\n                            }\n                                break;\n                            case config.incBeat: {\n                                dispatcher.score.incrementBeatLen(true);\n                            }\n                                break;\n                        }\n                    } else if (keySwitch.minHeadMode) {\n                        switch (e.key) {\n                            case 'ArrowLeft': {\n                                dispatcher.score.incrementMinuteValRelation(false, 1);\n                            }\n                                break;\n                            case 'ArrowRight': {\n                                dispatcher.score.incrementMinuteValRelation(false, -1);\n                            }\n                                break;\n                        }\n                    } else if (keySwitch.minTailMode) {\n                        switch (e.key) {\n                            case 'ArrowLeft': {\n                                dispatcher.score.incrementMinuteValRelation(true, -1);\n                            }\n                                break;\n                            case 'ArrowRight': {\n                                dispatcher.score.incrementMinuteValRelation(true, 1);\n                            }\n                                break;\n                        }\n                    } else if (keySwitch.chordMode) {\n                        // switch (e.key) {\n                        //     case 'ArrowUp': {\n                        //         dispatcher.symbol.toNext(false);\n                        //     }\n                        //         break;\n                        //     case 'ArrowDown': {\n                        //         dispatcher.symbol.toNext(true);\n                        //     }\n                        //         break;\n                        //     case 'ArrowLeft': {\n                        //         dispatcher.symbol.toBase();\n                        //     }\n                        //         break;\n                        //     case 'ArrowRight': {\n                        //         dispatcher.symbol.toDerive();\n                        //     }\n                        //         break;\n                        // }\n                    } else if (keySwitch.symbolMode) {\n                        switch (e.key) {\n                            case 'ArrowUp': {\n                                dispatcher.symbol.toNext(false);\n                            }\n                                break;\n                            case 'ArrowDown': {\n                                dispatcher.symbol.toNext(true);\n                            }\n                                break;\n                            case 'ArrowLeft': {\n                                dispatcher.symbol.toBase();\n                            }\n                                break;\n                            case 'ArrowRight': {\n                                dispatcher.symbol.toDerive();\n                            }\n                                break;\n                        }\n                    } else {\n                        NoteBasicInput(e, store, dispatcher);\n                    }\n                }\n            } break;\n            case 'backing': {\n                BackingEditorInput.main(e, store, dispatcher);\n            } break;\n            case 'library': {\n                ThemaSelectorInput.main(e, store, dispatcher);\n            } break;\n            case 'preset': {\n                PresetSelectorInput.main(e, store, dispatcher);\n            }\n        }\n    }\n}\n\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\n\n    const state = store.scoreState;\n    if (!state.isPreview) {\n        // if (state.hideMenu === 'none') {\n        const config = store.userEnv.keyConfig.note;\n        const keySwitch = store.scoreState.keySwitch;\n        // alert(e.key);\n        // alnfig.nextElement);\n        switch (e.key) {\n            case 'Control': {\n                keySwitch.control = isPress;\n                dispatcher.score.setKeySwitch(keySwitch);\n            }\n                break;\n            case config.distMode: {\n                if (!keySwitch.control) {\n                    keySwitch.distMode = isPress;\n                    dispatcher.score.setKeySwitch(keySwitch);\n                }\n            }\n                break;\n            case config.edit1: {\n                if (!(keySwitch.control || keySwitch.distMode)) {\n                    keySwitch.sustainMode = isPress;\n                    dispatcher.score.setKeySwitch(keySwitch);\n                }\n            }\n                break;\n            case 'v': {\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode)) {\n                    keySwitch.chordMode = isPress;\n                    dispatcher.score.setKeySwitch(keySwitch);\n                }\n            }\n                break;\n            case config.edit2: {\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode)) {\n                    keySwitch.symbolMode = isPress;\n                    dispatcher.score.setKeySwitch(keySwitch);\n                }\n            }\n                break;\n            case 'd': {\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode)) {\n                    keySwitch.minHeadMode = isPress;\n                    dispatcher.score.setKeySwitch(keySwitch);\n                }\n            }\n                break;\n            case 'g': {\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode || keySwitch.minHeadMode)) {\n                    keySwitch.minTailMode = isPress;\n                    dispatcher.score.setKeySwitch(keySwitch);\n                }\n            }\n                break;\n        }\n        // }\n    }\n    if (isPress) {\n        NoteKeyDown(e, store, dispatcher);\n    }\n\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport LibraryUtil from \"../../../../../utils/LibraryUtil\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const element = data.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n    const curType = element.type;\r\n    const isElement = curType !== 'init'\r\n\r\n    const libEnables = LibraryUtil.getEnableState(store);\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                } break;\r\n                case 'e': {\r\n                    if (libEnables.isUseLib && libEnables.isChordElement && !libEnables.isRangeSelect) {\r\n                        dispatcher.score.openLibraryWnd(false);\r\n                    }\r\n                } break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                } break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(cache.scale, Number(e.key) - 1);\r\n                } break;\r\n            }\r\n        } break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.left: {\r\n            if (state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(false);\r\n            } else {\r\n                dispatcher.score.releaseRange(false);\r\n            }\r\n        } break;\r\n        case config.right: {\r\n            if (state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(true);\r\n            } else {\r\n                dispatcher.score.releaseRange(true);\r\n            }\r\n        } break;\r\n        // セクションの移動\r\n        case config.up: {\r\n            dispatcher.score.moveSection(false);\r\n        } break;\r\n        case config.down: {\r\n            dispatcher.score.moveSection(true);\r\n        } break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        } break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        } break;\r\n        case 'm': {\r\n            dispatcher.score.addAlterElement();\r\n        } break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeElement();\r\n        } break;\r\n        case 'e': {\r\n            if (libEnables.isUseLib && libEnables.isRangeSelect) {\r\n                dispatcher.score.openLibraryWnd(true);\r\n            }\r\n        } break;\r\n        case 'n': {\r\n            dispatcher.score.removeBacking();\r\n        } break;\r\n        case ' ': {\r\n            // if (!chordCache.backingError) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n            // }\r\n        } break;\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BeatSignature, DetailAlter as DetailAlter, AlterType, ModulateRelation, TempoRelation } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormAlter = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailAlter;\r\n\r\n    const type = detail.alterType;\r\n\r\n    const update = () => {\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const createAlertTypeItem = (value: AlterType | '-', isActive: boolean): JSX.Element => {\r\n        const type = value === '-' ? null : value;\r\n        return <_Form isActive={isActive}\r\n            onClick={() => {\r\n                //値が変わった時のみ処理を実行\r\n                if (detail.alterType !== type) {\r\n                    detail.alterType = type;\r\n                    // 全ての項目を初期化\r\n                    detail.modRel = null;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    detail.tempoRel = null;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    detail.beatSignature = '4/4';\r\n                    update();\r\n                }\r\n            }}> {value}</_Form >;\r\n    }\r\n\r\n    const createModulateRelationItem = (value: ModulateRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'modulate' && rel == detail.modRel}\r\n            onClick={() => {\r\n                if (detail.modRel !== rel) {\r\n                    detail.modRel = rel;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createTempoRelationItem = (value: TempoRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'tempo' && rel == detail.tempoRel}\r\n            onClick={() => {\r\n                if (detail.tempoRel !== rel) {\r\n                    detail.tempoRel = rel;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createBeatItem = (value: BeatSignature): JSX.Element => {\r\n        return <_Form isActive={detail.alterType === 'beat' && detail.beatSignature === value}\r\n            onClick={() => {\r\n                if (detail.beatSignature !== value) {\r\n                    detail.beatSignature = value;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const donmmItemJsxList = <_ParamDiv isEnable={detail.modRel === 'domm'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'domm' && value == detail.dommVal}\r\n            onClick={() => {\r\n                detail.dommVal = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>\r\n    })}</_ParamDiv>;\r\n\r\n    const keyAdjItemJsxList = <_ParamDiv isEnable={detail.modRel === 'key'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'key' && value == detail.keyAdj}\r\n            onClick={() => {\r\n                detail.keyAdj = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>;\r\n    })}</_ParamDiv>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Group isEnable={true}>\r\n                <_CategoryLabel>Type</_CategoryLabel>\r\n                {createAlertTypeItem('-', type == null)}\r\n                {createAlertTypeItem('modulate', type === 'modulate')}\r\n                {createAlertTypeItem('tempo', type === 'tempo')}\r\n                {createAlertTypeItem('beat', type === 'beat')}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'modulate'}>\r\n                <_CategoryLabel>Modulate</_CategoryLabel>\r\n                {createModulateRelationItem('-')}\r\n                {createModulateRelationItem('domm')}\r\n                {donmmItemJsxList}\r\n                {createModulateRelationItem('parallel')}\r\n                {createModulateRelationItem('relative')}\r\n                {createModulateRelationItem('key')}\r\n                {keyAdjItemJsxList}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'tempo'}>\r\n                <_CategoryLabel>Tempo</_CategoryLabel>\r\n                {createTempoRelationItem('-')}\r\n                {createTempoRelationItem('diff')}\r\n                {SideFormStyles.createNumberForm(detail.tempoDiff,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'diff',\r\n                    (e) => {\r\n                        detail.tempoDiff = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, -100, 100, 1)}\r\n                {createTempoRelationItem('rate')}\r\n                {SideFormStyles.createNumberForm(detail.tempoRate,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'rate',\r\n                    (e) => {\r\n                        detail.tempoRate = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n                {createTempoRelationItem('abs')}\r\n                {SideFormStyles.createNumberForm(detail.tempoAbs,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'abs',\r\n                    (e) => {\r\n                        detail.tempoAbs = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'beat'}>\r\n                <_CategoryLabel>Beat</_CategoryLabel>\r\n                {createBeatItem('2/4')}\r\n                {createBeatItem('4/4')}\r\n                {createBeatItem('3/4')}\r\n                {createBeatItem('6/8')}\r\n                {createBeatItem('9/8')}\r\n                {createBeatItem('12/8')}\r\n            </_Group>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormAlter;\r\n\r\nconst _Wrap = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        background-color: #b3b5c5;\r\n        `;\r\n\r\nconst _Group = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 0 0 0 4px;\r\n    ${props => props.isEnable ? '' : css`\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n`}\r\n        `;\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        margin-top: 1px;\r\n        width: 100%;\r\n        background-color: #c1cdd4;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\nconst _ParamDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n        margin: 1px;\r\n        background-color: #070707;\r\n        ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n        `;\r\nconst _ParamItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        width: 29px;\r\n        background-color: #dddddd;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\n\r\nconst _ValueForm = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 24px;\r\n        /* margin: 5px 0 0 0; */\r\n        text-align: left;\r\n        background-color: #ececec;\r\n\r\n        & * {\r\n            display: inline-block;\r\n            box-sizing: border-box;\r\n            vertical-align: top;\r\n    }\r\n        & input:nth-child(1) {\r\n            background-color: #dddddd;\r\n            width: 60px;\r\n            height: calc(100% - 4px);\r\n            margin: 2px 0 0 0;\r\n            border: 1px solid #9b9b9b;\r\n            border-radius: 4px;\r\n    }\r\n        & input:nth-child(2) {\r\n            margin-left: 5px;\r\n            background-color: #f00;\r\n            width: calc(100% - 70px);\r\n            height: 100%;\r\n    }\r\n        `;","import styled, { css } from \"styled-components\";\r\n\r\nconst JUDGE_INFO_LIST: {\r\n    value: number, label: string\r\n}[] = [\r\n        { value: -2, label: '-/8' },\r\n        { value: -1, label: '-/16' },\r\n        { value: 0, label: '±0' },\r\n        { value: 1, label: '+/16' },\r\n        { value: 2, label: '+/8' }\r\n    ];\r\n\r\nexport const MinuteForm = (props: {\r\n    isHead: boolean;\r\n    value: number;\r\n    setValue: (value: number) => void;\r\n}) => {\r\n\r\n    const rateMinus = props.value >= 0 ? 0 : Math.abs(props.value) * 50;\r\n    const ratePlus = props.value <= 0 ? 0 : Math.abs(props.value) * 50;\r\n\r\n    const createJudgeItem = (key: number, value: number, label: string) => {\r\n        const isActive = props.value === value;\r\n        return (\r\n            <_JudgeItem key={key} isActive={isActive} onClick={() => props.setValue(value)} >\r\n                {!isActive ? '' : label}\r\n            </_JudgeItem>\r\n        )\r\n    }\r\n    const isRed = Math.abs(props.value) === 1;\r\n\r\n    const JudgeJsxList = JUDGE_INFO_LIST.map((judge, i) => {\r\n        return createJudgeItem(i, judge.value, judge.label);\r\n    });\r\n\r\n    return (\r\n        <_Wrap isHead={props.isHead}>\r\n            <_View>\r\n                <_ViewFrame isLeft={true} isRed={isRed} rate={!props.isHead ? rateMinus : ratePlus}><div /></_ViewFrame>\r\n                <_ViewFrame isLeft={false} isRed={isRed} rate={!props.isHead ? ratePlus : rateMinus}><div /></_ViewFrame>\r\n            </_View>\r\n            <_Judge>{!props.isHead ? JudgeJsxList : JudgeJsxList.reverse()}</_Judge>\r\n        </_Wrap>\r\n    );\r\n};\r\n\r\nexport default MinuteForm;\r\n\r\nconst _Wrap = styled.div<{\r\n    isHead: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #bfd380;\r\n    text-align: left;\r\n`;\r\nconst _Judge = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 9;\r\n`;\r\n\r\nconst _JudgeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(20% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    background-color: #0000001a;\r\n    /* border: 1px solid #4d4d4d91; */\r\n    border-radius: 4px;\r\n    ${props => !props.isActive ? '' : css`\r\n        border: 1px solid #c00000c5;\r\n    `}\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    /* opacity: 0.15; */\r\n    &:hover {\r\n        background-color: #ffffff24;\r\n    }\r\n`;\r\nconst _View = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    /* position: absolute;\r\n    top: 0;\r\n    left: 0; */\r\n    z-index: 8;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ViewFrame = styled.div<{\r\n    isRed: boolean;\r\n    isLeft: boolean;\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 16px;\r\n    margin-top: 7px;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n\r\n    & div {\r\n        position: absolute;\r\n        top: 0;\r\n        height: 100%;\r\n        width: ${props => props.rate}%;\r\n        ${props => props.isRed ? css`\r\n            background: linear-gradient(to right, #0066ff, #7691a3);\r\n        ` : css`\r\n            background: linear-gradient(to left, #ff0000, #a37676);\r\n        `}\r\n        ${props => props.isLeft ? css`\r\n            right: 0;\r\n            border-radius: 10px 0 0 10px;\r\n        ` : css`\r\n            left: 0;\r\n            border-radius: 0 10px 10px 0;\r\n        `}\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\nimport { SideFormStyles } from \"./sideFromStyles\";\nimport MinuteForm from \"./minuteForm\";\nimport BackingUtil from \"../../../../../utils/backingUtil\";\n\n/**\n * コードブロック選択時のサイド要素エディタ\n * @param props 引数\n * @returns コンポーネント\n */\nconst SideFormChord = (props: {\n}) => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const state = store.scoreState;\n    const cur = store.scoreData.chordList[state.focusIndex];\n    const detail = cur.detail as DetailChord;\n    const cache = state.elementCacheList[state.focusIndex];\n    const chordCache = state.chordCacheList[cache.chordBlockNo];\n\n    const beatItemsJsx: JSX.Element[] = [];\n    for (let i = 0; i < 4; i++) {\n        const isExist = detail.beatLen >= (i + 1);\n        beatItemsJsx.push(\n            <_BeatItem key={i}\n                isExist={isExist}\n                isActive={detail.beatLen === i + 1}\n                onClick={() => {\n                    const data = store.scoreData;\n                    data.chordList = data.chordList.slice();\n                    detail.beatLen = (i + 1);\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\n                    dispatcher.score.setScoreData(data);\n                }}>\n                <span></span>\n            </_BeatItem>\n        );\n    }\n\n    const rootItemsJsx: JSX.Element[] = [];\n    TheoryUtil.DEGREE_ALL.forEach((degree, i) => {\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(degree);\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(degree);\n        const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\n        const isDiatonic = degree != null && scaleIndexies.includes(degree.index);\n        rootItemsJsx.push(\n            <_RootItem key={i}\n                isRootActive={isRootActive}\n                isOnActive={isOnActive}\n                isDiatonic={isDiatonic}\n                onClick={() => {\n                    const data = store.scoreData;\n                    // 分母が設定済みの箇所を上書きする\n                    if (isOnActive || degree == null) {\n                        detail.on = null;\n                    }\n                    detail.root = degree == null ? null : { ...degree };\n                    if (degree == null) {\n                        detail.symbolKey = 'major';\n                    }\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\n                    dispatcher.score.setScoreData(data);\n\n                    // キャッシュの更新\n                    const root = detail.root as TheoryUtil.DegreeProps;\n                    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\n                    [chordCache.chordFullName, chordCache.structList] =\n                        BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\n                    dispatcher.score.setScoreState(state);\n                }}\n                onContextMenu={() => {\n                    const data = store.scoreData;\n                    // ルートが未設定の箇所にのみ設定可能\n                    if (detail.root != null && !isRootActive) {\n                        // 設定済みの箇所をクリックで解除\n                        if (isOnActive) {\n                            detail.on = null;\n                        } else {\n                            detail.on = degree == null ? null : { ...degree };\n                        }\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\n                        dispatcher.score.setScoreData(data);\n\n                        // キャッシュの更新\n                        const root = detail.root as TheoryUtil.DegreeProps;\n                        const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\n                        [chordCache.chordFullName, chordCache.structList] =\n                            BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\n                        dispatcher.score.setScoreState(state);\n                    }\n                }}\n            >\n                {degree == null ? '-' : <>\n                    {TheoryUtil.getDegreeRoot(degree)} ({TheoryUtil.getRootName(degree, cache.keyIndex)})\n                </>}\n            </_RootItem>\n        );\n    });\n\n    const symbolItemsJsx: JSX.Element[] = [];\n    TheoryUtil.SYMBOL_LIST.forEach((symbol, i) => {\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\n        symbolItemsJsx.push(\n            <_SymbolItem key={i}\n                isActive={isActive}\n                isDiatonic={true}\n                onClick={() => {\n                    const data = store.scoreData;\n                    detail.symbolKey = symbol.key;\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\n                    dispatcher.score.setScoreData(data);\n\n                    // キャッシュの更新\n                    const root = detail.root as TheoryUtil.DegreeProps;\n                    [chordCache.chordFullName, chordCache.structList] =\n                        BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\n                    dispatcher.score.setScoreState(state);\n                }}\n            >\n                [{symbol.name}]\n            </_SymbolItem>\n        );\n    });\n\n    /**\n     * シンコペーションの入力フォームを生成するコールバック\n     * @param isHead 頭対象フラグ（falseの場合後ろが対象）\n     * @returns JSX\n     */\n    const createMinuteForm = (isHead: boolean): JSX.Element => {\n        const minute = detail.minute;\n        const [value, setValue]: [number, (value: number) => void] = isHead ? [\n            minute.head,\n            (value: number) => {\n                // minute.head = value;\n                // dispatcher.score.setScoreData(store.scoreData);\n                const adjust = value - minute.head;\n                dispatcher.score.incrementMinuteValRelation(false, adjust);\n            }\n        ] : [\n            minute.tail,\n            (value: number) => {\n                // minute.tail = value;\n                // dispatcher.score.setScoreData(store.scoreData);\n                const adjust = value - minute.tail;\n                dispatcher.score.incrementMinuteValRelation(true, adjust);\n            }\n        ];\n        return <MinuteForm value={value} setValue={setValue} isHead={isHead} />\n    }\n\n    return (\n        <_Wrap>\n            <_Timing>\n                <_CategoryLabel>{'Beat length'}</_CategoryLabel>\n                <_BeatDiv>\n                    {beatItemsJsx}\n                </_BeatDiv>\n                <_Minute>\n                    <_CategoryLabel>{'Minute head'}</_CategoryLabel>\n                    {createMinuteForm(true)}\n                    {/* <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\n                        value={detail.minute.head}\n                        onChange={(e) => {\n                            const data = store.scoreData;\n                            data.chordList = data.chordList.slice();\n                            detail.minute.head = Number(e.target.value);\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\n                            dispatcher.score.setScoreData(data);\n                        }}\n                    /> */}\n                    <_CategoryLabel>{'Minute tail'}</_CategoryLabel>\n                    {createMinuteForm(false)}\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\n                    {/* <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\n                        value={detail.minute.tail}\n                        onChange={(e) => {\n                            const data = store.scoreData;\n                            data.chordList = data.chordList.slice();\n                            detail.minute.tail = Number(e.target.value);\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\n                            dispatcher.score.setScoreData(data);\n                        }}\n                    /> */}\n                </_Minute>\n            </_Timing>\n            <_Chord>\n                <_RootDiv>\n                    {rootItemsJsx}\n                </_RootDiv>\n                <_SymbolDiv\n                    isDisable={detail.root == null}\n                >\n                    {symbolItemsJsx}\n                </_SymbolDiv>\n            </_Chord>\n        </_Wrap>\n    );\n}\n\nexport default SideFormChord;\n\n\nconst _CategoryLabel = styled.div`\n    ${SideFormStyles.___CSS_TITLE}\n    margin-top: 4px;\n`;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    text-align: left;\n    background-color: #8a8a8a;\n`;\n\nconst _Timing = styled.div`\n    display: inline-block;\n    width: 100%;\n    /* height: 100px; */\n    text-align: left;\n    background-color: #979797;\n`;\n\nconst _BeatDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 25px;\n    text-align: left;\n    background-color: #afafaf;\n`;\nconst _BeatItem = styled.div<{\n    isExist: boolean;\n    isActive: boolean;\n}>`\n    display: inline-block;\n    width: 25%;\n    height: 20px;\n    text-align: left;\n    background-color: #696969;\n\n    & span{\n        display: inline-block;\n        margin: 2px 0 0 3px;\n        width: calc(100% - 6px);\n        height: calc(100% - 4px);\n        background-color: #9b8585;\n        ${props => !props.isActive ? '' : css`\n            /* border: solid 1px #fff; */\n        `}\n        box-sizing: border-box;\n        border-radius: 6px;\n        ${props => !props.isExist ? '' : css`\n            /* background-color: #ebf37eb7; */\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\n        `}\n    }\n`;\n\nconst _Minute = styled.div`\n    display: inline-block;\n    width: 100%;\n    text-align: left;\n    background-color: #cecece;\n`;\n\nconst _Chord = styled.div`\n    display: inline-block;\n    margin-top: 5px;\n    width: 100%;\n    /* height: 360px; */\n    text-align: left;\n    /* background-color: #000000; */\n    & * {\n        vertical-align: top;\n    }\n`;\n\nconst _RootDiv = styled.div`\n    display: inline-block;\n    width: 90px;\n    margin: 0 0 0 1px;\n    height: 100%;\n    text-align: left;\n    /* background-color: #e6e6e6; */\n`;\nconst _RootItem = styled.div<{\n    isRootActive: boolean;\n    isOnActive: boolean;\n    isDiatonic: boolean;\n}>`\n    display: inline-block;\n    margin: 1px 0 0 0;\n    width: 100%;\n    height: 25px;\n    text-align: left;\n    background-color: #90bbcc;\n    ${props => !props.isRootActive ? '' : css`background-color: #d1c521b8;`}\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\n    border: 1px solid #000;\n    border-radius: 2px;\n    box-sizing: border-box;\n    color: #616161;\n    ${props => !props.isDiatonic ? '' : css`color: #ffffff;`}\n    font-size: 16px;\n    font-weight: 600;\n    line-height: 20px;\n    text-align: center;\n    & span {\n        color: #9e9e9e;\n    }\n    &:hover {\n        background-color: #99999940;\n        ${props => !props.isRootActive ? '' : css`background-color: #cc6363b8;`}\n        ${props => !props.isOnActive ? '' : css`background-color: #6374ccb8;`}\n    }\n`;\n\nconst _SymbolDiv = styled.div<{\n    isDisable: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 93px);\n    margin: 0 1px 0 1px;\n    height: 100%;\n    text-align: left;\n    ${props => !props.isDisable ? '' : css`\n        opacity: 0.3;\n        pointer-events: none;\n    `}\n`;\n\nconst _SymbolItem = styled.div<{\n    isActive: boolean;\n    isDiatonic: boolean;\n}>`\n    ${SideFormStyles.___CSS_FORM}\n    margin: 1px 0 0 0;\n    width: 100%;\n    background-color: #a1cc90;\n    ${props => !props.isActive ? '' : css`background-color: #d1c521b8;`}\n    color: #fff;\n    ${props => !props.isDiatonic ? '' : css`color: #fff;`}\n    /* & span {\n        color: #f000;\n    } */\n    &:hover {\n        background-color: #dddddd40;\n        ${props => !props.isActive ? '' : css`background-color: #cc6363b8;`}\n    }\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const update = () => {\r\n        data.chordList = data.chordList.slice();\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const scaleItemJsxList: JSX.Element[] = TheoryUtil.SCALE_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? TheoryUtil.KEY12_MAJOR_SCALE_LIST : TheoryUtil.KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n    const rateItemJsxList: JSX.Element[] = TheoryUtil.BEAT_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.beatSignature === item} onClick={() => {\r\n                detail.beatSignature = item as BeatSignature;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            {SideFormStyles.createNumberForm(detail.bpm, true, (e) => {\r\n                detail.bpm = e.currentTarget.valueAsNumber;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }, 30, 220, 1)}\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 50%;\r\n    margin: 1px 0 0 0;\r\n\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 100%;\r\n    margin: 1px 0 0 0;\r\n    \r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    margin: 1px 0 0 0;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../../utils/dummyUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        DummyUtil.SECTION_CATEGORY.forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        const splitList = detail.labelName.split(' ');\r\n        DummyUtil.SECTION_NO.forEach((item) => {\r\n            const isActive = splitList[splitList.length - 1] === item.toString();\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(`${splitList[0]} ${item}`);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_SelectDiv>\r\n                <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n                <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n            </_SelectDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #b89b9b; */\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _SelectDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    background-color: #acacac;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(60% - 4px);\r\n    margin: 0 2px 0 2px;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(40% - 2px);\r\n    margin: 0 2px 0 0;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #6182b4; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #61b4b0; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormAlter from \"./sideFormAlter\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst HarmSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'alter': return <SideFormAlter />;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../../../../../redux/store/score/scoreCache\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\n\r\nconst TIP_COUNT = 14;\r\n\r\nconst StructViewer = (props: {\r\n    cache: ScoreCache.Element;\r\n    structList: BackingState.StructInfo[];\r\n}) => {\r\n    const cache = props.cache;\r\n    const structList = props.structList;\r\n    const indexList = structList.map(struct => struct.soundIndex + struct.adjustOctave * 12);\r\n    const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n    const scaleList = scaleIndexies.map(value => (cache.keyIndex + value) % 12);\r\n\r\n    const structJsxList: JSX.Element[] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n\r\n        // 2オクターブ分表示\r\n        for (let i = 0; i < TIP_COUNT; i++) {\r\n            // 下の段（白鍵のチップ）\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = indexList.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            // 上の段（黒鍵のチップ）\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = indexList.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return structJsxList;\r\n    }, [indexList]);\r\n\r\n    return (\r\n        <_Wrap isUse={indexList.length > 0}>\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default StructViewer;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    /* border: 1px solid #ffffffda; */\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    ` : css`\r\n    background: radial-gradient(#d6cec3, #a89889);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    ` : css`\r\n        background: radial-gradient(#e7a144, #72552a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternDetail = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    /** 基準となるベロシティ */\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cell = layer.table[channelIndex][pattern.lenIndex];\r\n    const baseVel = layer.velocityList[pattern.lenIndex];\r\n    const timing = (cell == null || cell.timing == undefined) ? 0 : cell.timing;\r\n    const velAdj = (cell == null || cell.velAdj == undefined) ? 0 : cell.velAdj;\r\n\r\n    return (<_Wrap>\r\n        {\r\n            // ノーツが設定されていない場合は何も表示しない\r\n            cell == null ? <></> : (<>\r\n                <_DelayDiv>\r\n                    <_Label>delay</_Label>\r\n                    <_TimingValue type=\"range\" min={-10} max={10} step={1} value={timing} onChange={e => {\r\n                        cell.timing = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_DelayDiv>\r\n                <_VelocityDiv>\r\n                    <_Label>velocity</_Label>\r\n                    <_VelFrame isFocus={false}>\r\n                        <_VelItem value={baseVel} isEdit={false}/>\r\n                    </_VelFrame>\r\n                    <_VelFrame isFocus={store.scoreState.keySwitch.sustainMode}>\r\n                        <_VelItem value={baseVel + velAdj} isEdit={velAdj != 0} />\r\n                    </_VelFrame>\r\n                    {/* <_Value type=\"range\" min={-10} max={10} step={1} value={velAdj} onChange={e => {\r\n                        cell.velAdj = Number(e.target.value);\r\n                        update();\r\n                    }} /> */}\r\n                </_VelocityDiv>\r\n            </>)\r\n        }\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternDetail;\r\n\r\nconst VEL_DIV_WIDTH = 180;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    line-height: 18px;\r\n    margin-top: 14px;\r\n    margin-left: 5px;\r\n    width: 80px;\r\n    background-color: #868686;\r\n    color: #e7e7e7;\r\n    border: 1px solid #616161;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DelayDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - ${VEL_DIV_WIDTH + 1}px);\r\n    height: 100%;\r\n    background-color: #9c9c9c;\r\n`;\r\n\r\nconst _TimingValue = styled.input<{\r\n}>`\r\n    display: inline-block;\r\n    outline: none;\r\n    margin: 20px 0 0 8px;\r\n    width: calc(100% - 100px);\r\n    height: 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VelocityDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${VEL_DIV_WIDTH}px;\r\n    height: 100%;\r\n    margin-left: 1px;\r\n    /* background-color: #9a2020; */\r\n`;\r\n\r\nconst _VelFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 46px;\r\n    height: 100%;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffffff17;\r\n    `}\r\n    /* background-color: #63a0a1;\r\n    border-radius: 20px; */\r\n`;\r\n\r\nconst _VelItem = styled.div<{\r\n    value: number;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 5px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #ddc35cae;\r\n    `}\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate * adjustRate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {itemJsxList}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternPedal = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    // 左手のレイヤー時のみ固定表示\r\n    const layer = pattern.layers[0];\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n\r\n    let cur: BackingState.PedalAction = 'off';\r\n    pattern.pedalActs.forEach((pedal, i) => {\r\n        const isActive = pattern.layerIndex === 0 && pattern.lenIndex === i;\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n        let isUse = false;\r\n        const prev = cur;\r\n        if (prev === 'change') {\r\n            cur = 'on';\r\n        }\r\n        if (pedal != null) {\r\n            isUse = true;\r\n            cur = pedal;\r\n        }\r\n        itemJsxList.push(\r\n            <_Column key={i} rate={rate} isActive={isActive} isUse={isUse} onClick={() => {\r\n                if (prev === 'off') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'on'; break;\r\n                        case 'on': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'on') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = 'change'; break;\r\n                        case 'change': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'change') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                }\r\n                // 終端までnullで更新\r\n                if (i < pattern.pedalActs.length - 1) {\r\n                    for (let j = i + 1; j < pattern.pedalActs.length; j++) {\r\n                        pattern.pedalActs[j] = null;\r\n                    }\r\n                }\r\n                update();\r\n            }}><div><_Item action={cur} /></div></_Column>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternPedal;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n    /* background-color: #4e4e4e; */\r\n`;\r\n\r\n\r\nconst _Column = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #00635eac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #179483ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    white-space: normal;\r\n\r\n    &>div {\r\n        display: inline-block;\r\n        width: 10px;\r\n        height: calc(100% - 2px);\r\n        background-color: #ffffffa0;\r\n        border-radius: 6px;\r\n        margin: 1px 0;\r\n        ${props => props.isUse ? '' : css`\r\n            background-color: #ffffff2f;\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    action: BackingState.PedalAction;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 14px;\r\n    border: 1px solid #9c9c9c;\r\n    ${props => {\r\n        switch (props.action) {\r\n            case 'off': return css`\r\n                margin-top: 0;\r\n                background-color: #271db8;\r\n            `;\r\n            case 'change': return css`\r\n                margin-top: 15px;\r\n                background-color: #f3d631;\r\n            `;\r\n            case 'on': return css`\r\n                margin-top: 30px;\r\n                background-color: #e03030;\r\n            `;\r\n        }\r\n    }}\r\n    box-sizing: border-box;\r\n    border-radius: 6px;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n    const curLayer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n    const layerJsxList = useMemo(() => {\r\n\r\n        const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n        pattern.layers.forEach((layer, j) => {\r\n\r\n            const jsxLsit: JSX.Element[] = [];\r\n            for (let i = 0; i < channelCount; i++) {\r\n                const notesJsxLsit: JSX.Element[] = [];\r\n\r\n                layer.noteDivList.forEach((note, k) => {\r\n                    // データ上は下から数えるため、表示のループは逆回転する\r\n                    const channelIndex = (channelCount - 1) - i;\r\n                    const isActive = pattern.layerIndex === j && pattern.lenIndex === k;\r\n                    const cell = layer.table[channelIndex][k];\r\n                    const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                    const isUse = cell != null;\r\n                    // 前面にあるレイヤーのみエラー判定をする\r\n                    const isError = pattern.layerIndex !== j ? false :\r\n                        isUse && BackingUtil.checkOverlapBackLayer(pattern.layers, j, channelIndex, k);\r\n                    const isEdit = isActive && pattern.channelIndex === i;\r\n                    let rate = note.rate * adjustRate;\r\n                    if (note.isDot) rate /= 1.5;\r\n                    if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n                    let viewSignal: BackingState.NoteSignal | null = null;\r\n                    if (cell != null) {\r\n                        viewSignal = cell.signal;\r\n                        if (k > 0) {\r\n                            const prevCell = layer.table[channelIndex][k - 1];\r\n                            if (prevCell != null && prevCell.signal === 't') {\r\n                                viewSignal = 't';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const hasStaccato = () => {\r\n                        const search = layer.table.find((record) => {\r\n                            const cell = record[k];\r\n                            if (cell != null && cell.signal === 's') return cell;\r\n                        });\r\n                        return search != undefined;\r\n                    }\r\n                    notesJsxLsit.push(\r\n                        <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                            <_State\r\n                                // isUse={isUse}\r\n                                isError={isError}\r\n                                signal={viewSignal}\r\n                                isBack={pattern.layerIndex !== j}\r\n                                // クリック\r\n                                onClick={() => {\r\n                                    if (cell == null) {\r\n                                        // 同列にスタッカートがある場合、スタッカートを設定\r\n                                        const signal = !hasStaccato() ? 'n' : 's';\r\n                                        setNotesStatus({ signal, timing: 0, velAdj: 0 });\r\n                                    } else {\r\n                                        setNotesStatus(null);\r\n                                    }\r\n                                    curLayer.table = curLayer.table.slice();\r\n                                    update();\r\n                                    dispatcher.backing.updateErrorState();\r\n                                }}\r\n                                // 右クリック\r\n                                onContextMenu={() => {\r\n                                    pattern.channelIndex = i;\r\n                                    pattern.lenIndex = k;\r\n                                    update();\r\n                                }}\r\n                            />\r\n                        </_Notes>\r\n                    );\r\n                });\r\n                jsxLsit.push(\r\n                    <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                        {notesJsxLsit}\r\n                    </_Record>\r\n                );\r\n            }\r\n            layerJsxList[j] = jsxLsit;\r\n        });\r\n        return layerJsxList;\r\n    }, [\r\n        pattern.channels, pattern.layerIndex, pattern.lenIndex,\r\n        curLayer.noteDivList, curLayer.table, pattern.channelIndex\r\n    ]);\r\n\r\n    // 選択中のレイヤーを表に表示する\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    // isUse: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => props.signal == null ? '' : css<{\r\n    isBack: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n}>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        ${props => props.signal !== 's' ? '' : css`\r\n            border-radius: 8px;\r\n            background: linear-gradient(to bottom, #009e0d, #02fc49, #009e0d);\r\n        `}\r\n        ${props => props.signal !== 't' ? '' : css`\r\n            height: calc(100% - 8px);\r\n            margin: 4px 0 0 1px;\r\n            background: linear-gradient(to bottom, #9e4c00, #fc6a02, #9e4c00);\r\n        `}\r\n        // エラーあり\r\n        ${props => !props.isError ? '' : css`\r\n            opacity: 0.5;\r\n        `}\r\n        // 裏面のレイヤー\r\n        ${props => !props.isBack ? '' : css`\r\n            background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.5;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => props.signal == null ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternVelocity = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.velocityList.forEach((vel, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} >\r\n                <_Value value={vel} />\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternVelocity;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #001763ac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #173494ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Value = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 6px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    /* background-color: #5cceddaf; */\r\n    background: linear-gradient(to right, #00949e, #26dcf4, #00949e);\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternDetail from \"./patternDetail\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternPedal from \"./patternPedal\";\r\nimport PatternTable from \"./patternTable\";\r\nimport PatternVelocity from \"./patternVelocity\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const divs = layer.noteDivList;\r\n    const limitLen = BackingUtil.getLimitLen(chordInfo.beatLen, chordInfo.minute, chordInfo.init.beatSignature);\r\n    const useTotalLen = BackingUtil.getUsingLenFromDivs(divs, chordInfo.init.beatSignature);\r\n    const isLenOverError = 0 <= limitLen - useTotalLen;\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const viewRate = NOTES_1BAR_WIDTH / 4;\r\n\r\n    // メモリの数を算出\r\n    let memoriCount = chordInfo.beatLen * beatProps.beatMemoriCount;\r\n    memoriCount += chordInfo.minute.head + chordInfo.minute.tail;\r\n\r\n    const barMemoriCount = beatProps.beatMemoriCount === 4 ? 16 : 24;\r\n    const memoriWidth = NOTES_1BAR_WIDTH / barMemoriCount;\r\n    // メモリJSXの生成\r\n    const memoriJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < memoriCount + 1; i++) {\r\n        const pos = i;\r\n        let bean: { thickness: number, height: number, color: string } = { thickness: 1, height: 10, color: '#555' };\r\n        if (beatProps.beatMemoriCount === 4) {\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        } else {\r\n            switch (true) {\r\n                case pos % 24 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 6 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        }\r\n        memoriJsxList.push(\r\n            <_Memori\r\n                key={memoriJsxList.length}\r\n                width={memoriWidth}\r\n                height={bean.height}\r\n                color={bean.color}\r\n                thickness={bean.thickness}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n                <_MemoriList>{memoriJsxList}</_MemoriList>\r\n                {isLenOverError ? (\r\n                    <_ChordLenLine pos={limitLen * viewRate} />\r\n                ) : (\r\n                    // 定義した拍を超えた場合のみ表示\r\n                    <_OverCover pos={limitLen * viewRate} width={(useTotalLen - limitLen) * viewRate} />\r\n                )}\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n            {pattern.channelIndex === -1 ?\r\n                // ベロシティorペダル情報を表示\r\n                (pattern.mode === 'velocity' ? <PatternVelocity /> : <PatternPedal />) :\r\n                // セルごとの詳細情報を表示\r\n                <PatternDetail />\r\n            }\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\nconst _MemoriList = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    thickness: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.thickness}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _OverCover = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: ${props => props.width}px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #f8000053;\r\n    pointer-events: none;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;\r\n\r\nconst _ChordLenLine = styled.div<{\r\n    pos: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: 4px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #ffffffc7;\r\n`;","import { useContext } from \"react\";\r\nimport { Player } from \"soundfont-player\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    soundfont: Player | null;\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n    const channelCount = pattern.channels.length;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length + 1);\r\n        pattern.channelIndex = -1;\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length - 1);\r\n        pattern.channelIndex = -1;\r\n        update();\r\n    }\r\n\r\n    const preview = () => {\r\n        if (props.soundfont != null) {\r\n            props.soundfont.play(props.soundFullName, 0, { duration: 1 });\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap isError={props.soundFullName === '-'}>\r\n            <_Struct onClick={preview}>{props.soundFullName}</_Struct>\r\n            <_Option isEnable={channelCount > 1} onClick={deleteRecord}>-</_Option>\r\n            <_Option isEnable={channelCount < BackingUtil.CHANNEL_MAX} onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ff0000c3;\r\n    `}\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)<{\r\n    isEnable: boolean;\r\n}>`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    \r\n`;","import { useContext } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport ChannelItem from \"./channelItem\";\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\nimport { _CSS_LABEL_MIDIUM } from \"../../../../base/design/styles\";\n\nconst PatternChannel = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const state = store.backingState as BackingState.Editor;\n    const chordInfo = state.chordInfo;\n    // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\n    // const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\n\n    const channelJsxList: JSX.Element[] = [];\n    const layerJsxList: JSX.Element[] = [];\n\n    if (state.pattern == null) return <></>;\n\n    const pattern = state.pattern as BackingState.Pattern;\n    const channels = pattern.channels;\n    channels.forEach((channel, i) => {\n        let name = '-';\n        if (channel.octave !== -1) {\n            const structInfo = chordInfo.structList[channel.structIndex];\n            const soundIndex = structInfo.soundIndex;\n            const octave = channel.octave + structInfo.adjustOctave;\n            const keyList = !structInfo.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\n            name = keyList[soundIndex % 12] + octave;\n        }\n        channelJsxList.push(\n            <ChannelItem key={i}\n                soundfont={store.instruments.harmonyFont}\n                index={i}\n                soundFullName={name}\n            />\n        );\n    });\n\n    pattern.layers.forEach((layer, i) => {\n        const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\n        layerJsxList.push(\n            <_LayerItem key={i} isActive={pattern.layerIndex === i}\n                onClick={() => {\n                    if (i !== pattern.layerIndex) {\n                        dispatcher.backing.switchLayer();\n                    }\n                }}\n            >{labelName}</_LayerItem>\n        );\n    });\n\n    return (<>\n        <_Header>\n            {layerJsxList}\n        </_Header>\n        <_Body>\n            {channelJsxList}\n        </_Body>\n        <_Footer>\n            <_ModeItem isActive={pattern.mode === 'velocity'}\n                onClick={() => {\n                    pattern.mode = 'velocity';\n                    dispatcher.backing.setState(state);\n                }}\n            >Velocity</_ModeItem>\n            <_ModeItem isActive={pattern.mode === 'pedal'}\n                onClick={() => {\n                    pattern.mode = 'pedal';\n                    dispatcher.backing.setState(state);\n                }}\n            >Pedal</_ModeItem>\n        </_Footer>\n    </>);\n}\n\nexport default PatternChannel;\n\nconst _Header = styled.div`\n    /* display: inline-block; */\n    width: 100%;\n    height: ${PATTERN_HEADER_HEIGHT}px;\n    background-color: #929292;\n`;\n\nconst _LayerItem = styled.div<{\n    isActive: boolean;\n}>`\n    display: inline-block;\n    height: 22px;\n    width: calc(100% - 4px);\n    margin: 2px 0 0 2px;\n    box-sizing: border-box;\n    text-align: center;\n    \n    font-size: 14px;\n    font-weight: 600;\n    color: #3b3b3b;\n    line-height: 20px;\n    background-color: #b8b8b8;\n    border: 1px solid #7a7a7a;\n    border-radius: 2px;\n\n    ${proops => !proops.isActive ? '' : css`\n        background-color: #dad600;\n        color: #c40000;\n    `}\n\n    &:hover {\n        background-color: #d4d4d4;\n    }\n`;\n\nconst _Body = styled.div`\n/* display: inline-block; */\n    width: 100%;\n    height: ${PATTERN_BODY_HEIGHT}px;\n    background-color: #97d3cec8;\n`;\nconst _Footer = styled.div`\n/* display: inline-block; */\n    width: 100%;\n    height: ${PATTERN_FOOTER_HEIGHT}px;\n    background-color: #898997;\n`;\n\n\nconst _ModeItem = styled.div<{\n    isActive: boolean;\n}>`\n    display: inline-block;\n    height: 22px;\n    width: calc(100% - 4px);\n    margin: 2px 0 0 2px;\n    box-sizing: border-box;\n    text-align: center;\n    \n    font-size: 14px;\n    font-weight: 600;\n    color: #3b3b3b;\n    line-height: 20px;\n    background-color: #b8b8b8;\n    border: 1px solid #7a7a7a;\n    border-radius: 2px;\n\n    ${proops => !proops.isActive ? '' : css`\n        background-color: #4fe419;\n        color: #c40000;\n    `}\n\n    &:hover {\n        background-color: #d4d4d4;\n    }\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternOptions = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        layer.noteDivList = layer.noteDivList.slice();\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, isEnable: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={isEnable} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, true, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const isPermit3ren = ['2/4', '4/4', '4/3'].includes(chordInfo.init.beatSignature);\r\n    const isPermitDot = BackingUtil.isPermitDot(cur);\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot,\r\n            isPermitDot,\r\n            () => {\r\n                cur.isDot = !cur.isDot;\r\n                update();\r\n            })}\r\n        {createItem('1/3', cur.div3 === 1,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 1) cur.div3 = 0;\r\n                else cur.div3 = 1;\r\n                update();\r\n            })}\r\n        {createItem('2/3', cur.div3 === 2,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 2) cur.div3 = 0;\r\n                else cur.div3 = 2;\r\n                update();\r\n            })}\r\n    </_WrapLen>;\r\n\r\n    /** テーブルの行 */\r\n    const tableRecord = layer.table[channelIndex];\r\n    const curCell = pattern.channelIndex === -1 ? null :\r\n        tableRecord[pattern.lenIndex];\r\n\r\n    const isEnableTai = () => {\r\n        if(tableRecord == null) return false;\r\n\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 's') return cell;\r\n        });\r\n        const hasStaccato = search != undefined;\r\n        let isExistNext = false;\r\n        if(pattern.lenIndex < tableRecord.length - 1 && tableRecord[pattern.lenIndex + 1] != null) {\r\n            isExistNext = true;\r\n        }\r\n        return !hasStaccato && isExistNext;\r\n    };\r\n\r\n    const isNormalRow = () => {\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 't') return cell;\r\n        });\r\n        return search == undefined;\r\n    };\r\n\r\n    const setRowStaccato = (isSet: boolean) => {\r\n        layer.table.forEach((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null) {\r\n                cell.signal = isSet ? 's' : 'n';\r\n            }\r\n        });\r\n    }\r\n\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', curCell == null,\r\n            true,\r\n            () => {\r\n                tableRecord[pattern.lenIndex] = null;\r\n                update();\r\n            })}\r\n        {createItem('□', curCell != null && curCell.signal === 'n',\r\n            true,\r\n            () => {\r\n                if (curCell != null) {\r\n                    if(curCell.signal === 's') {\r\n                        setRowStaccato(false);\r\n                    } else {\r\n                        curCell.signal = 'n';\r\n                    }\r\n                } else {\r\n                    tableRecord[pattern.lenIndex] = { signal: 'n', timing: 0, velAdj: 0 };\r\n                }\r\n                update();\r\n            })}\r\n        {createItem('・', curCell != null && curCell.signal === 's',\r\n            curCell != null && isNormalRow(),\r\n            () => {\r\n                setRowStaccato(true);\r\n                update();\r\n            })}\r\n        {createItem('⁀', curCell != null && curCell.signal === 't',\r\n            isEnableTai(),\r\n            () => {\r\n                const status = curCell as BackingState.NoteStatus;\r\n                status.signal = 't'\r\n                update();\r\n            })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternOptions;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\nimport { useContext } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\nimport BackingUtil from \"../../../utils/backingUtil\";\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\nimport { GlobalContext } from \"../../entry/systemEntry\";\nimport PatternBuilder from \"./builder/patternBuilder\";\nimport PatternChannel from \"./channel/patternChannel\";\nimport PatternOptions from \"./patternOptions\";\n\n/**\n * バッキングエディタ画面のパターン部分\n * @returns コンポーネント\n */\nconst PatternFrame = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const state = store.backingState as BackingState.Editor;\n    const chordInfo = state.chordInfo;\n\n    const isUsePattern = state.pattern != null;\n\n    const update = () => {\n        dispatcher.backing.setState(state);\n    }\n\n    /**\n     * USEスイッチ押下時の処理\n     */\n    const useSwitchAction = () => {\n        if (!isUsePattern) {\n            const table = state.voicingTable as boolean[][];\n            const voicingStructs = BackingUtil.buildChannels(table);\n            const channels = BackingUtil.getChannels(voicingStructs, 1);\n            state.pattern = {\n                layerIndex: 0,\n                lenIndex: 0,\n                channelIndex: -1,\n                channels,\n                isUsePedal: false,\n                mode: \"velocity\",\n                pedalActs: [null],\n                layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\n            } as BackingState.Pattern;\n            update();\n        } else {\n            state.pattern = null;\n            update();\n        }\n    }\n\n    return (\n        <_Wrap>\n            {/* ヘッダー部分（パターン利用スイッチ） */}\n            <_Header>\n                <_UseSwitch>\n                    <_Label>Pattern</_Label>\n                    <_Button\n                        isActive={isUsePattern}\n                        onClick={useSwitchAction}\n                    >Use</_Button>\n                </_UseSwitch>\n            </_Header>\n            <_Main isActive={isUsePattern}>\n                {!isUsePattern ? <></> : (<>\n                    <_StatusDiv><PatternOptions /></_StatusDiv>\n                    <_MainDiv>\n                        <_ChannelDiv>\n                            <PatternChannel />\n                        </_ChannelDiv>\n                        <_BuilderDiv>\n                            <PatternBuilder />\n                        </_BuilderDiv>\n                    </_MainDiv>\n                </>)}\n            </_Main>\n        </_Wrap>\n    )\n}\n\nexport default PatternFrame;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    width: 100%;\n    /* height: 300px; */\n    background-color: #001279;\n\n    & *{\n        /* display: inline-block;\n        width: 100%; */\n    }\n`;\n\nconst _Header = styled.div`\n    height: 30px;\n    background-color: #a5d1c3;\n`;\n\n\nconst _Label = styled.div``;\nconst _UseSwitch = styled.div`\n    display: inline-block;\n    width: 200px;\n    height: 100%;\n    /* background-color: #7986d1; */\n\n    & * {\n        display: inline-block;\n        height: calc(100% - 4px);\n        margin-top: 2px;\n        box-sizing: border-box;        \n    }\n\n    & ${_Label} {\n        width: 80px;\n        font-size: 20px;\n        color: #f1fffb;\n        font-weight: 600;\n        /* background-color: #00000028; */\n        margin: 2px 2px 0 2px;\n        line-height: 22px;\n        text-align: center;\n    }\n`;\n\nconst _Button = styled.div<{\n    isActive: boolean;\n}>`\n    width: 100px;\n    font-size: 20px;\n    color: white;\n    font-weight: 600;\n    background-color: #ff008023;\n    border: solid 1px #555;\n    border-radius: 4px;\n    line-height: 20px;\n    text-align: center;\n\n    ${props => !props.isActive ? '' : css`\n        /* background-color: #b1dfc979; */\n        color: #e00000;\n    `}\n\n    &:hover {\n        background-color: #ff008039;\n    }\n`;\n\nconst _Main = styled.div<{\n    isActive: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    overflow: hidden;\n    height: ${PATTERN_FRAME_HEIGHT}px;\n    ${props => props.isActive ? '' : css`\n        height: 0;\n    `}\n    transition: height 100ms;\n`;\n\nconst _StatusDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: ${PATTERN_STATUS_HEIGHT}px;\n    background-color: #8d98d4;\n    text-align: left;\n`;\n\nconst _MainDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    background-color: #d48d8d;\n\n    /* & *{\n        display: inline-block;\n        height: 100%;\n    } */\n`;\n\nconst _ChannelDiv = styled.div`\n    display: inline-block;\n    width: 100px;\n    background-color: #ff0000;\n    vertical-align: top;\n`;\n\nconst _BuilderDiv = styled.div`\n    display: inline-block;\n    width: calc(100% - 100px);\n    background-color: #76af90;\n    vertical-align: top;\n`;","\nimport { useContext, useMemo } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\nimport BackingUtil from \"../../../utils/backingUtil\";\nimport TheoryUtil from \"../../../utils/theoryUtil\";\nimport { GlobalContext } from \"../../entry/systemEntry\";\n\n/**\n * ボイシングを定義するテーブルのコンポーネント\n * @returns コンポーネント\n */\nconst VoicingChooser = () => {\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const state = store.backingState as BackingState.Editor;\n    const table = state.voicingTable;\n    const pattern = state.pattern;\n    // 選択可能なチャンネル数\n    const channelLimitNum = pattern == null ? BackingUtil.OCTAVE_NUM * BackingUtil.STRUCT_NUM : pattern.channels.length;\n\n    // return useMemo(() => {\n\n    const chordInfo = state.chordInfo;\n    const structList = chordInfo.structList;\n\n    const rowJsxList: JSX.Element[] = [];\n\n    /** 選択数 */\n    let selectCount = 0;\n    // オクターブ（テーブル横）のループ\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\n        const cellJsxList: JSX.Element[] = [];\n        // 構成音（テーブル縦）のループ\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\n            let isEnable: boolean = structList.length > j;\n            let isSelected: boolean = table[i][j];\n            if (isSelected) {\n                selectCount++;\n            }\n\n            /** セルに表示する音程 */\n            const getSoundFullName = (): string => {\n                if (!isEnable) return '';\n                // const relation = symbol.structs[j];\n                // const interval = TheoryUtil.IntervalRelationProps[relation];\n                // const structIndex = (chordRootIndex + interval) % 12;\n                const sound = structList[j];\n                const octave = i + sound.adjustOctave;\n\n                const key12List = !sound.isFlat ?\n                    TheoryUtil.KEY12_SHARP_LIST :\n                    TheoryUtil.KEY12_FLAT_LIST\n                    ;\n                return `${key12List[sound.soundIndex]}${octave}`;\n            }\n\n            const name = getSoundFullName();\n            cellJsxList.push(\n                <_Cell key={j}\n                    isEnable={isEnable}\n                    isSelected={isSelected}\n                    isOver={isSelected && selectCount > channelLimitNum}\n                    onClick={() => {\n                        table[i][j] = !isSelected;\n                        if (pattern != null) {\n                            const voicingStructs: BackingState.ChannelParam[] = BackingUtil.buildChannels(table);\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\n                        }\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\n                        dispatcher.backing.updateErrorState();\n                    }}\n                    onContextMenu={() => {\n                        const soundfont = store.instruments.harmonyFont;\n                        if (soundfont != null) {\n                            soundfont.play(name, 0, { duration: 1 });\n                        }\n                    }}\n                >\n                    {name}\n                </_Cell>\n            );\n        }\n        rowJsxList.push(\n            <_TableRow key={i}>\n                {cellJsxList}\n            </_TableRow>\n        );\n    }\n\n    /** 構成音リストのJSX */\n    const structJsxList = structList.map((sound, i) => {\n        const key12List = !sound.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\n\n        /** 表示する構成音の関係性 */\n        const getStructName = (): string => {\n            if (sound.relation == null) {\n                // オンコードの場合\n                return 'On';\n            } else if (sound.relation === 'p1') {\n                // ルート音の場合\n                return 'Root';\n            }\n            return sound.relation;\n        }\n        return (\n            <_StructItem key={i}\n                isOnChord={sound.relation == null}\n            >{getStructName()} [{key12List[sound.soundIndex]}]</_StructItem>\n        );\n    });\n\n    return (\n        <_Wrap>\n            {/* コードの基本情報 */}\n            <_InfoDiv>\n                <_InfoItem>\n                    <_Label>Chord</_Label>\n                    <_Value>{chordInfo.chordFullName}</_Value>\n                </_InfoItem>\n                <_InfoItem>\n                    <_Label>Attr</_Label>\n                    {/* <_Value>{symbol.attr}</_Value> */}\n                    <_Value>{chordInfo.symbolAttr}</_Value>\n                </_InfoItem>\n            </_InfoDiv>\n            <_EditorDiv>\n                {/* 構成音の情報 */}\n                <_StructDiv>\n                    {structJsxList}\n                </_StructDiv>\n                {/* ボイシングのテーブル */}\n                <_TableDiv>{rowJsxList}</_TableDiv>\n            </_EditorDiv>\n        </_Wrap>\n    );\n    // }, [table, channelLimitNum]);\n}\n\nexport default VoicingChooser;\n\nconst TIP_WIDTH = 60;\nconst TIP_HEIGHT = 22;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    width: 600px;\n`;\n\nconst _InfoDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 30px;\n    background-color: #338f8f;\n`;\n\nconst _InfoItem = styled.div`\n    display: inline-block;\n    width: 50%;\n    height: 100%;\n    /* background-color: #89dada; */\n`;\n\nconst _Label = styled.div`\n    display: inline-block;\n    margin-top: 4px;\n    margin-left: 5px;\n    height: calc(100% - 8px);\n    width: 80px;\n    background-color: #69bcdd;\n    font-size: 18px;\n    line-height: 18px;\n    font-weight: 600;\n    color: #026c86;\n    border: 1px solid #303030;\n    border-radius: 2px;\n    box-sizing: border-box;\n    text-align: center;\n`;\n\nconst _Value = styled.div`\n    display: inline-block;\n    margin-top: 4px;\n    margin-left: 6px;\n    height: calc(100% - 8px);\n    /* background-color: #cccccc; */\n    font-size: 18px;\n    line-height: 18px;\n    font-weight: 600;\n    color: #ffffff;\n`;\n\nconst _EditorDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\n    background-color: #c09e05;\n    border: solid 1px #888;\n    border-radius: 5px;\n    box-sizing: border-box;\n\n    & *{\n        vertical-align: top;\n        height: 100%;\n    }\n`;\n\nconst _StructDiv = styled.div`\n    display: inline-block;\n    width: calc(100% - ${TIP_WIDTH * 8}px);\n    /* width: 100px; */\n    background-color: #8fb5bc;\n`;\n\nconst _StructItem = styled.div<{\n    isOnChord: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 2px);\n    height: ${TIP_HEIGHT}px;\n    margin-top: 1px;\n    /* width: 100px; */\n    /* background-color: #8fb5bc; */\n    color: white;\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\n    ${props => !props.isOnChord ? '' : css`\n        /* color: #e00000; */\n        background: linear-gradient(to bottom, #104f8a, #7699db, #104f8a);\n    `}\n    font-size: 16px;\n    font-weight: 600;\n    padding-left: 5px;\n    box-sizing: border-box;\n`;\n\nconst _TableDiv = styled.div`\n    display: inline-block;\n    background-color: #a7acd8;\n`;\n\nconst _TableRow = styled.div`\n    display: inline-block;\n    width: ${TIP_WIDTH}px;\n    height: 100%;\n    /* margin-left: 1px; */\n    background-color: #a7d8c4;\n    padding-bottom: 2px;\n    box-sizing: border-box;\n`;\n\nconst _Cell = styled.div<{\n    isEnable: boolean;\n    isSelected: boolean;\n    isOver: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 1px);\n    height: ${TIP_HEIGHT}px;\n    margin: 1px 0 0 1px;\n    background-color: #409ca3;\n    border: 1px solid #215e53;\n    border-radius: 4px;\n    color: #01004e;\n    ${props => !props.isSelected ? '' : css`\n        background-color: #e5e747;\n    `}\n    ${props => !props.isOver ? '' : css`\n        background-color: #c40000;\n        color: #ffffff;\n    `}\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.5;\n        pointer-events: none;\n    `}\n    /* border: 1px solid #ffffff; */\n    box-sizing: border-box;\n\n    font-size: 16px;\n    line-height: 20px;\n    font-weight: 600;\n    text-align: center;\n\n    &:hover {\n        background-color: #117dbb;\n        ${props => !props.isSelected ? '' : css`\n            background-color: #b9bb3f;\n        `}\n        ${props => !props.isOver ? '' : css`\n            background-color: #bb3f3f;\n        `}\n    }\n`;\n\n","\nimport { useContext, useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\nimport Styles from \"../../base/design/styles\";\nimport BackingState from \"../../redux/store/score/backing/backingState\";\nimport { ChordBacking } from \"../../redux/store/score/scoreData\";\nimport BackingUtil from \"../../utils/backingUtil\";\nimport { GlobalContext } from \"../entry/systemEntry\";\nimport PatternFrame from \"./pattern/patternFrame\";\nimport VoicingChooser from \"./voicing/voicingChooser\";\n\n/**\n * バッキングエディタ画面\n * @returns コンポーネント\n */\nconst BackingEditorFrame = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const state = store.backingState as BackingState.Editor;\n\n    const [source, setSource] = useState('');\n\n    useEffect(() => {\n        console.log('backing start');\n    }, []);\n\n    const syncSource = () => {\n        const chordBacking = {\n            voicingList: BackingUtil.getVoicingListFromTable(state.voicingTable),\n            pattern: state.pattern == null ? null : BackingUtil.buildPatternProps(state.pattern)\n        }\n        setSource(JSON.stringify(chordBacking));\n    };\n\n    return (\n        <_Frame>\n            <_LabelFrame>\n                <_Label\n                    isActive={state.tabIndex === 0}\n                    onClick={() => {\n                        dispatcher.backing.setState({ ...state, tabIndex: 0 });\n                    }}\n                ><div>Editor</div></_Label>\n                <_Label\n                    isActive={state.tabIndex === 1}\n                    onClick={() => {\n                        syncSource();\n                        dispatcher.backing.setState({ ...state, tabIndex: 1 });\n                    }}\n                ><div>Source</div></_Label>\n            </_LabelFrame>\n            <_Wrap>\n                {state.tabIndex === 0 ? (<>\n                    <_PrevireBrind isUse={state.isPreview} />\n                    {/* ボイシングエディタ部分 */}\n                    <VoicingChooser />\n                    {/* パターンエディタ部分 */}\n                    <PatternFrame />\n                    {/* フッター部分 */}\n                    <_FooterDiv>\n                        {/* プレビュー再生 */}\n                        <_Button isEnable={!state.hasError} onClick={() => {\n\n                            if (!state.isPreview) {\n                                dispatcher.backing.testBacking();\n                            } else {\n                                BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\n                            }\n                        }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\n                        {/* 編集を取り消しして閉じる */}\n                        <_Button isEnable={!state.isPreview} onClick={() => {\n                            state.closeAction(state, false);\n                        }}>Cancel</_Button>\n                        {/* 編集を反映して閉じる */}\n                        <_Button isEnable={!state.isPreview} onClick={() => {\n                            state.closeAction(state, true);\n                        }}>Update</_Button>\n                    </_FooterDiv>\n                </>) : (<>\n                    <_SourceFrame>\n                        <_TextArea value={source} onChange={(e) => {\n                            setSource(e.target.value);\n                        }} />\n                    </_SourceFrame>\n                    {/* フッター部分 */}\n                    <_FooterDiv>\n                        <_Button isEnable={true} onClick={() => {\n                            syncSource();\n                        }}>Reset</_Button>\n                        <_Button isEnable={true} onClick={() => {\n                            try {\n                                const chordBacking = JSON.parse(source) as ChordBacking;\n                                const voicingTable = BackingUtil.getInitVoicingTable(chordBacking.voicingList, state.chordInfo.structList.length);\n                                const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, chordBacking.pattern);\n                                dispatcher.backing.setState({ ...state, voicingTable, pattern, tabIndex: 0 });\n                            } catch {\n                                alert('error');\n                                dispatcher.backing.setState({ ...state, tabIndex: 0 });\n                            }\n                        }}>Aplly</_Button>\n                    </_FooterDiv>\n                </>)}\n            </_Wrap>\n        </_Frame>\n    )\n}\n\nexport default BackingEditorFrame;\n\nconst _Frame = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 630px;\n    background-color: #a1a1a1;\n`;\n\nconst _LabelFrame = styled.div<{\n}>`\n    display: inline-block;\n    position: relative;\n    width: 30px;\n    padding: 2px 0 0 2px;\n    box-sizing: border-box;\n    vertical-align: top;\n    /* background-color: #f17379; */\n`;\nconst _Label = styled.div<{\n    isActive: boolean;\n}>`\n    display: block;\n    width: 25px;\n    height: 100px;\n    background-color: #99afb3;\n    ${props => !props.isActive ? '' : css`\n        background-color: #b8dae0;\n    `}\n    border-left: 1px solid #5a5a5a;\n    border-top: 1px solid #5a5a5a;\n    border-bottom: 1px solid #5a5a5a;\n    margin: 2px 0 0 2px;\n    border-radius: 8px 0 0 8px;\n    font-size: 16px;\n    font-weight: 600;\n    color: #5a5a5a;\n    text-align: center;\n    line-height: 16px;\n    box-sizing: border-box;\n    \n    & div {\n        width: 100px;\n        transform-origin: top left;\n        transform: rotate(-90deg) translateX(-100%);\n        /* background-color: #fff; */\n    }\n\n    &:hover {\n        background-color: #b2bcbe;\n        ${props => !props.isActive ? '' : css`\n            background-color: #b8dae0;\n        `}\n    }\n`;\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 600px;\n    /* background-color: #bd4646; */\n`;\n\nconst _FooterDiv = styled.div`\n    display: inline-block;\n    height: 30px;\n    width: 100%;\n    /* background-color: #bd4646; */\n    text-align: right;\n`;\n\nconst _Button = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: 100px;\n    height: 26px;\n    margin: 2px 2px 0 0;\n    font-size: 20px;\n    color: white;\n    font-weight: 600;\n    background-color: #0051ff21;\n    border: solid 1px #555;\n    border-radius: 4px;\n    box-sizing: border-box;\n    line-height: 20px;\n    text-align: center;\n\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.5;\n        pointer-events: none;\n    `}\n\n    &:hover {\n        background-color: #ff008039;\n    }\n`;\n\nconst _PrevireBrind = styled.div<{\n    isUse: boolean;\n}>`\n    position: absolute;\n    display: ${props => props.isUse ? 'block' : 'none'};\n    z-index: 80;\n    width: 100%;\n    height: calc(100% - 30px);\n    background-color: #7a270028;\n`;\n\nconst _SourceFrame = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 600px;\n    height: 400px;\n    background-color: #b4aeae;\n`;\n\nconst _TextArea = styled.textarea`\n    display: inline-block;\n    font-size: ${Styles.FONT_SMALL}px;\n    color: #0a0038;\n    background-color: #b7bcd3;\n    resize: none;\n    width: calc(100% - 8px);\n    height: calc(100% - 8px);\n    box-sizing: border-box;\n    margin: 4px 0 0 4px;\n    outline: none;\n`;","import { useContext, useEffect, useMemo, useState, useCallback } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport { ChordBacking, DetailChord } from \"../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport LibraryUtil from \"../../utils/LibraryUtil\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nnamespace PresetSelectorFrame {\r\n\r\n    export type CachePorps = {\r\n        field: Field;\r\n        presetList: LibraryUtil.PresetItemProps[];\r\n        applyAction: () => void;\r\n        invalidate: () => void;\r\n    };\r\n\r\n    type TargetProps = {\r\n        index: number;\r\n        condition: LibraryUtil.Condition;\r\n    }\r\n\r\n    type Field = {\r\n        listIndex: number;\r\n    }\r\n    /**\r\n     * プリセットセレクタ画面\r\n     * @returns コンポーネント\r\n     */\r\n    export const Component = () => {\r\n\r\n        const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n        const backing = store.backingState as BackingState.Editor;\r\n\r\n        const [field, setField] = useState<Field>({\r\n            listIndex: 0,\r\n        });\r\n\r\n        const chordList = store.scoreData.chordList;\r\n        const state = store.scoreState;\r\n        const [minIndex, maxIndex] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n\r\n        const systemState = store.systemState;\r\n        const themaList = systemState.themaList;\r\n        const thema = themaList[systemState.activeThemaIndex];\r\n\r\n        useEffect(() => {\r\n            console.log('preset start');\r\n\r\n            return () => {\r\n                console.log('preset end');\r\n\r\n                // キャッシュを削除\r\n                dispatcher.system.setState({\r\n                    ...store.systemState,\r\n                    cache: null\r\n                });\r\n            }\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            // キーボード操作のためのキャッシュを作成\r\n            const inputCache: CachePorps = {\r\n                field,\r\n                presetList,\r\n                applyAction,\r\n                invalidate,\r\n            };\r\n            dispatcher.system.setState({\r\n                ...store.systemState,\r\n                cache: inputCache\r\n            });\r\n        }, []);\r\n\r\n        const invalidate = () => {\r\n            setField({ ...field });\r\n        };\r\n\r\n        /**\r\n         * プレビュー再生を行う\r\n         */\r\n        const testBacking = (index: number) => {\r\n            console.log(backing.isPreview);\r\n            if (!backing.isPreview) {\r\n                const applyItem = presetList[field.listIndex].applyList[index];\r\n                const chordBacking = applyItem.backing as ChordBacking;\r\n                const symbol = TheoryUtil.getSymbolFromKey(applyItem.condition.symbolKey) as TheoryUtil.SymbolParams;\r\n                backing.chordInfo = {\r\n                    ...backing.chordInfo,\r\n                    beatLen: applyItem.condition.beatLen,\r\n                    minute: {\r\n                        head: applyItem.condition.head,\r\n                        tail: applyItem.condition.tail,\r\n                    },\r\n                    // structList: symbol.structs,\r\n                    // init: {\r\n\r\n                    // }\r\n                }\r\n                const voicingTable = BackingUtil.getInitVoicingTable(chordBacking.voicingList, symbol.structs.length);\r\n                const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, chordBacking.pattern);\r\n                dispatcher.backing.setState({ ...backing, voicingTable, pattern });\r\n                dispatcher.backing.testBacking();\r\n            } else {\r\n                BackingUtil.stopPreview(store, backing, dispatcher, store.reserveTasks);\r\n            }\r\n        };\r\n\r\n        const [targetList, presetList]: [TargetProps[], LibraryUtil.PresetItemProps[]] = useMemo(() => {\r\n\r\n            const targetList: TargetProps[] = [];\r\n            const conditionList: LibraryUtil.Condition[] = [];\r\n            chordList.forEach((element, i) => {\r\n\r\n                if (i >= minIndex && i <= maxIndex && element.type === 'chord') {\r\n                    const chord = element.detail as DetailChord;\r\n                    if (chord.root == null) return 1;\r\n\r\n                    const cache = state.elementCacheList[i];\r\n                    // console.log(`degreeIndex: ${chord.root.index}, scaleIndex: ${cache.keyIndex}`);\r\n                    const rootIndex = (chord.root.index + cache.keyIndex) % 12;\r\n\r\n                    const condition: LibraryUtil.Condition = {\r\n                        beatLen: chord.beatLen,\r\n                        head: chord.minute.head,\r\n                        tail: chord.minute.tail,\r\n                        rootIndex,\r\n                        symbolKey: chord.symbolKey,\r\n                    };\r\n                    // 同じ条件がリストに存在しない場合のみ追加する\r\n                    if (conditionList.find(con => {\r\n                        return con.beatLen === condition.beatLen && con.head === condition.head && con.tail === condition.tail &&\r\n                            con.rootIndex === condition.rootIndex && con.symbolKey === condition.symbolKey;\r\n                    }) == undefined) {\r\n                        conditionList.push(condition);\r\n                    }\r\n                    targetList.push({\r\n                        index: i,\r\n                        condition\r\n                    });\r\n                }\r\n            });\r\n\r\n            return [targetList, LibraryUtil.getPresetList(thema, conditionList)];\r\n        }, []);\r\n\r\n\r\n        const [presetJsxList, applyJsxList, rate]: [JSX.Element[], JSX.Element[], number] = useMemo(() => {\r\n            if (presetList.length === 0) return [[], [], 0];\r\n            const focusPreset = presetList[field.listIndex];\r\n            return [\r\n                presetList.map((preset, i) => {\r\n\r\n                    return (\r\n                        <_PresetItem key={i}\r\n                            isFocus={field.listIndex === i}\r\n                            onClick={() => {\r\n                                field.listIndex = i;\r\n                                invalidate();\r\n                            }}\r\n                        ><_Preset>{preset.dispName}</_Preset> <_Method>[{preset.method}]</_Method></_PresetItem>\r\n                    );\r\n                }),\r\n                focusPreset.applyList.map((target, i) => {\r\n                    const con = target.condition;\r\n                    const sust = `[${con.beatLen}* ${con.tail},${con.tail}]`;\r\n                    const chordName = TheoryUtil.KEY12_SHARP_LIST[con.rootIndex] + TheoryUtil.getSymbolFromKey(con.symbolKey)?.name;\r\n                    const isMatch = target.backing != null;\r\n                    return (\r\n                        <_ApplyItem\r\n                            key={i}\r\n                            isMatch={isMatch}\r\n                            onClick={() => {\r\n                                if (isMatch) {\r\n                                    testBacking(i);\r\n                                }\r\n                            }}\r\n                        ><_Result isMatch={isMatch}>{isMatch ? 'OK' : 'NG'}</_Result> {sust} {chordName}</_ApplyItem>\r\n                    );\r\n                }),\r\n                focusPreset.applyList.filter(apply => {\r\n                    return apply.backing != null;\r\n                }).length / focusPreset.applyList.length\r\n            ];\r\n        }, [field.listIndex]);\r\n\r\n        const applyAction = useCallback(() => {\r\n\r\n            const applyList = presetList[field.listIndex].applyList;\r\n\r\n            targetList.forEach((target) => {\r\n                const chordElement = chordList[target.index].detail as DetailChord;\r\n                const apply = applyList.find(apply => {\r\n                    return LibraryUtil.matchCondition(apply.condition, target.condition);\r\n                });\r\n                if (apply != undefined && apply.backing != null) {\r\n                    chordElement.backing = apply.backing;\r\n                }\r\n            });\r\n\r\n            dispatcher.score.closeLibraryWnd();\r\n        }, [field.listIndex]);\r\n\r\n        return (\r\n            <_Wrap>\r\n                <_BodyDiv>\r\n                    {presetList.length === 0 ? (\r\n                        <_Message>Preset does not exist...</_Message>\r\n                    ) : (<>\r\n                        <_ListDiv>\r\n                            <_Header>Preset</_Header>\r\n                            {presetJsxList}\r\n                        </_ListDiv>\r\n                        <_ListDiv>\r\n                            <_Header>Apply</_Header>\r\n                            <_Sum>Matching Rate: <_Rate>{(rate * 100).toFixed(1)}%</_Rate></_Sum>\r\n                            {applyJsxList}\r\n                        </_ListDiv>\r\n                    </>)}\r\n                </_BodyDiv>\r\n                <_FooterDiv>\r\n                    {/* 選択を反映せずに閉じる */}\r\n                    <_Button isEnable={true} onClick={() => {\r\n                        dispatcher.score.closeLibraryWnd();\r\n                    }}>Cancel</_Button>\r\n                    {/* 選択を反映して閉じる */}\r\n                    <_Button\r\n                        isEnable={presetList.length > 0}\r\n                        onClick={applyAction}\r\n                    >Apply</_Button>\r\n                </_FooterDiv>\r\n            </_Wrap>\r\n        )\r\n    }\r\n}\r\nexport default PresetSelectorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 630px;\r\n    height: 400px;\r\n    background-color: #d4d5ca;\r\n    border: 1px solid #121212;\r\n    box-sizing: border-box;\r\n`;\r\nconst FOOTER_WIDTH = 30;\r\nconst _BodyDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${FOOTER_WIDTH}px);\r\n    /* background-color: #4d5e53; */\r\n`;\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${FOOTER_WIDTH}px;\r\n    background-color: #c7c7c7;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #4d5e53; */\r\n    /* border: 1px solid #121212; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    background-color: #3c4a99c3;\r\n    box-sizing: border-box;\r\n    border: 1px solid #f0f0f0;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    background-color: #d1dad4c8;\r\n    box-sizing: border-box;\r\n    border: 1px solid #676767;\r\n    color: #000786;\r\n    text-align: left;\r\n    padding-left: 4px;\r\n`;\r\n\r\nconst _PresetItem = styled(_Item) <{\r\n    isFocus: boolean;\r\n}>`\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #e6dd5bc5;\r\n    `}\r\n`;\r\n\r\nconst _Method = styled.span`\r\n    color: #00054b86;\r\n`;\r\nconst _Preset = styled.span`\r\n    color: #b90000;\r\n`;\r\n\r\nconst _ApplyItem = styled(_Item) <{\r\n    isMatch: boolean;\r\n}>`\r\n    background-color: #79b98f;\r\n    ${props => !props.isMatch ? '' : css`\r\n        background-color: #7eda5a;\r\n        &:hover {\r\n            background-color: #abeb92da;\r\n        }\r\n    `}\r\n\r\n    \r\n`;\r\nconst _Result = styled.span<{\r\n    isMatch: boolean;\r\n}>`\r\n    ${props => !props.isMatch ? '' : css`\r\n        color: #e61426;\r\n    `}\r\n`;\r\n\r\nconst _Sum = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 100%;\r\n    /* height: 32px; */\r\n    background-color: #eaecca;\r\n    box-sizing: border-box;\r\n    border: 1px solid #676767;\r\n    color: #6e6f91;\r\n    text-align: left;\r\n    padding-left: 4px;\r\n`;\r\nconst _Rate = styled.span<{\r\n}>`\r\n    color: #be003f;\r\n`;\r\n\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    /* background-color: #d1dad4c8; */\r\n    color: #a10000;\r\n    text-align: left;\r\n    padding-left: 4px;\r\n`;","import { useContext, useEffect, useMemo, useState, useCallback } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport { BackingPatternProps, DetailChord, VoicingProps } from \"../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport LibraryUtil from \"../../utils/LibraryUtil\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport ThemaUtil from \"../custom/backing/themaUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nnamespace ThemaSelectorFrame {\r\n\r\n    export type CachePorps = {\r\n        patternList: LibraryUtil.PattItemProps[];\r\n        voicingList: LibraryUtil.VoicItemProps[];\r\n        field: Field;\r\n        invalidate: () => void;\r\n        // updateBacking: () => void;\r\n        testBacking: () => void;\r\n        isPermitTest: () => boolean;\r\n        isPreview: boolean;\r\n    };\r\n\r\n    type Field = {\r\n        focusSide: number;\r\n        pattIndex: number;\r\n        voicIndex: number;\r\n    }\r\n\r\n    /**\r\n     * ライブラリセレクタ画面\r\n     * @returns コンポーネント\r\n     */\r\n    export const Component = () => {\r\n\r\n        const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n        const [field, setField] = useState<Field>({\r\n            focusSide: 0,\r\n            pattIndex: 0,\r\n            voicIndex: 0\r\n        });\r\n\r\n        const invalidate = () => {\r\n            setField({ ...field });\r\n        };\r\n\r\n        const chordList = store.scoreData.chordList;\r\n        const systemState = store.systemState;\r\n        const focusIndex = store.scoreState.focusIndex;\r\n        const chord = chordList[focusIndex].detail as DetailChord;\r\n        const state = store.scoreState;\r\n        const cache = state.elementCacheList[state.focusIndex];\r\n        const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n        const structList = chordCache.structList;\r\n\r\n        const degreeRootIndex = chord.root?.index as number;\r\n        const rootIndex = (degreeRootIndex + cache.keyIndex) % 12;\r\n\r\n        const backing = store.backingState as BackingState.Editor;\r\n        const themaList = systemState.themaList;\r\n        const thema = themaList[systemState.activeThemaIndex];\r\n\r\n        useEffect(() => {\r\n            console.log('thema start');\r\n            console.log(thema);\r\n\r\n            return () => {\r\n                console.log('thema end');\r\n\r\n                // キャッシュを削除\r\n                dispatcher.system.setState({\r\n                    ...store.systemState,\r\n                    cache: null\r\n                });\r\n            }\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            // キーボード操作のためのキャッシュを作成\r\n            const inputCache: CachePorps = {\r\n                patternList,\r\n                voicingList,\r\n                field,\r\n                invalidate,\r\n                // updateBacking,\r\n                testBacking,\r\n                isPermitTest,\r\n                isPreview: false\r\n            };\r\n            dispatcher.system.setState({\r\n                ...store.systemState,\r\n                cache: inputCache\r\n            });\r\n        }, []);\r\n\r\n\r\n        useEffect(() => {\r\n            updateBacking();\r\n            const cache = store.systemState.cache as CachePorps;\r\n            if (cache != null) {\r\n                // cache.updateBacking = updateBacking;\r\n                cache.testBacking = testBacking;\r\n                cache.isPermitTest = isPermitTest;\r\n                cache.isPreview = backing.isPreview;\r\n            }\r\n        }, [field, backing.isPreview]);\r\n\r\n        /**\r\n         * バッキングの状態を更新する\r\n         */\r\n        const updateBacking = () => {\r\n            if (isPermitTest()) {\r\n                const patternProps = patternList[field.pattIndex].source;\r\n                const voicingProps = voicingList.filter(voic=>{\r\n                    return LibraryUtil.acceptVoic(voic, patternList, field.pattIndex);\r\n                })[field.voicIndex].source;\r\n                const voicingTable = BackingUtil.getInitVoicingTable(voicingProps, structList.length);\r\n                const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, patternProps);\r\n                dispatcher.backing.setState({ ...backing, voicingTable, pattern });\r\n            } else {\r\n                dispatcher.backing.setState({ ...backing, voicingTable: [], pattern: null });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * プレビュー再生を行う\r\n         */\r\n        const testBacking = useCallback(() => {\r\n            console.log('test');\r\n            if (!backing.isPreview) {\r\n                dispatcher.backing.testBacking();\r\n            } else {\r\n                BackingUtil.stopPreview(store, backing, dispatcher, store.reserveTasks);\r\n            }\r\n        }, [store]);\r\n\r\n        /**\r\n         * プレビュー再生が可能な状態か判断する\r\n         * @returns プレビュー再生が可能か\r\n         */\r\n        const isPermitTest = () => {\r\n            return field.voicIndex > 0;\r\n        }\r\n\r\n        const [patternList, voicingList] = useMemo(() => {\r\n\r\n            const patternList: LibraryUtil.PattItemProps[] = [];\r\n            const voicingList: LibraryUtil.VoicItemProps[] = [];\r\n\r\n            // 空のボイシングを先頭に追加\r\n            voicingList.push({ pattIdx: -1, dispName: 'none', source: [] });\r\n\r\n            //検索条件\r\n            const condition: LibraryUtil.Condition = {\r\n                symbolKey: chord.symbolKey,\r\n                rootIndex,\r\n                beatLen: chord.beatLen,\r\n                head: chord.minute.head,\r\n                tail: chord.minute.tail\r\n            };\r\n\r\n            // シンプルバッキング\r\n            const sustMet = thema.meths[0];\r\n            LibraryUtil.searchSustMeth(sustMet, condition, null, (voic: ThemaUtil.LevelVoic) => {\r\n                const dispName = voic.source.map(v => `[${v.octave}-${v.struct}]`).join(',');\r\n                voicingList.push({\r\n                    pattIdx: patternList.length,\r\n                    dispName,\r\n                    source: voic.source\r\n                });\r\n            });\r\n            patternList.push({\r\n                dispName: 'none',\r\n                source: null,\r\n                key: -1,\r\n                refer: -1\r\n            });\r\n\r\n            // パターンバッキング\r\n            const pattMet = thema.meths[1];\r\n            LibraryUtil.searchPattMeth(pattMet, condition, null, (patt: ThemaUtil.LevelPatt) => {\r\n                patternList.push({\r\n                    dispName: patt.pattName,\r\n                    source: patt.source,\r\n                    key: patt.key,\r\n                    refer: patt.refer\r\n                });\r\n            }, (voic: ThemaUtil.LevelVoic) => {\r\n                // const dispName = voic.source.map(v => `[${v.octave}-${v.struct}]`).join(',');\r\n                const soundList = voic.source.map(v => {\r\n                    const struct = structList[v.struct];\r\n                    return TheoryUtil.KEY12_SHARP_LIST[struct.soundIndex] + (v.octave + struct.adjustOctave);\r\n                });\r\n                voicingList.push({\r\n                    pattIdx: patternList.length,\r\n                    dispName: soundList.join('-'),\r\n                    source: voic.source\r\n                });\r\n            }, () => { });\r\n            return [patternList, voicingList];\r\n        }, []);\r\n\r\n        const [pattJsxList, voicJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n            return [\r\n                // パターンのJSXリスト\r\n                patternList.map((patt, i) => {\r\n                    return (\r\n                        <_Item key={i}\r\n                            isFocus={field.pattIndex === i}\r\n                            isNone={i === 0}\r\n                            onClick={() => {\r\n                                field.focusSide = 0;\r\n                                field.pattIndex = i;\r\n                                // パターンが変わったらボイシングの選択をリセット\r\n                                if (field.pattIndex !== i) {\r\n                                    field.voicIndex = 0;\r\n                                }\r\n                                invalidate();\r\n                                updateBacking();\r\n                            }}\r\n                        >{patt.dispName}</_Item>\r\n                    )\r\n                }),\r\n                // ボイシングのJSXリスト\r\n                voicingList.filter((voic) => {\r\n                    return LibraryUtil.acceptVoic(voic, patternList, field.pattIndex);\r\n                }).map((voic, i): JSX.Element => {\r\n                    const soundList = voic.source.map((v, i) => {\r\n                        const struct = structList[v.struct];\r\n                        const fullName = TheoryUtil.KEY12_SHARP_LIST[struct.soundIndex] + (v.octave + struct.adjustOctave);\r\n                        return (<span key={i}>\r\n                            <_Struct\r\n                                interval={LibraryUtil.getDistinctionFromRelate(struct)}\r\n                            >{fullName}</_Struct>{i < voic.source.length - 1 ? '-' : ''}\r\n                        </span>);\r\n                    });\r\n                    const dispLabel: JSX.Element = i === 0 ? <>none</> : <>{soundList}</>;\r\n                    return (\r\n                        <_Item key={i}\r\n                            isFocus={field.voicIndex === i}\r\n                            isNone={i === 0}\r\n                            onClick={() => {\r\n                                field.focusSide = 1;\r\n                                field.voicIndex = i;\r\n                                invalidate();\r\n                                updateBacking();\r\n                            }}\r\n                        >{dispLabel}</_Item>\r\n                    )\r\n                })\r\n            ];\r\n        }, [field.pattIndex, field.voicIndex]);\r\n\r\n        return (\r\n            <_Wrap>\r\n                <_PrevireBrind isUse={backing.isPreview} />\r\n                <_BodyDiv>\r\n                    <_ListDiv isFocus={field.focusSide === 0}>\r\n                        <_Header>Pattern</_Header>\r\n                        {pattJsxList}\r\n                    </_ListDiv>\r\n                    <_ListDiv isFocus={field.focusSide === 1}>\r\n                        <_Header>Voicing</_Header>\r\n                        {voicJsxList}\r\n                    </_ListDiv>\r\n                </_BodyDiv>\r\n                <_FooterDiv>\r\n                    {/* プレビュー再生 */}\r\n                    <_Button isEnable={isPermitTest()} onClick={testBacking}>\r\n                        {!backing?.isPreview ? 'Test' : 'Stop'}\r\n                    </_Button>\r\n                    {/* 選択を反映せずに閉じる */}\r\n                    <_Button isEnable={!backing.isPreview} onClick={() => {\r\n                        dispatcher.score.closeLibraryWnd();\r\n                    }}>Cancel</_Button>\r\n                    {/* 選択を反映して閉じる */}\r\n                    <_Button isEnable={!backing.isPreview} onClick={() => {\r\n                        const pattern = patternList[field.pattIndex];\r\n                        const voicing = voicingList.filter(voic=>{\r\n                            return LibraryUtil.acceptVoic(voic, patternList, field.pattIndex);\r\n                        })[field.voicIndex];\r\n                        dispatcher.thema.mappingSelectorToScore(voicing.source, pattern.source);\r\n                        dispatcher.score.closeLibraryWnd();\r\n                    }}>Apply</_Button>\r\n                </_FooterDiv>\r\n            </_Wrap>\r\n        )\r\n    }\r\n}\r\nexport default ThemaSelectorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 630px;\r\n    height: 400px;\r\n    background-color: #d4d5ca;\r\n    border: 1px solid #121212;\r\n    box-sizing: border-box;\r\n`;\r\nconst FOOTER_WIDTH = 30;\r\nconst _BodyDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${FOOTER_WIDTH}px);\r\n    /* background-color: #4d5e53; */\r\n`;\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${FOOTER_WIDTH}px;\r\n    background-color: #c7c7c7;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _ListDiv = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #4d5e53; */\r\n    /* border: 1px solid #121212; */\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffffff45;\r\n        /* border: 1px solid #eb0000; */\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    background-color: #3c4a99c3;\r\n    box-sizing: border-box;\r\n    border: 1px solid #f0f0f0;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\nconst _Item = styled.div<{\r\n    isFocus: boolean;\r\n    isNone: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    background-color: #d1dad4c8;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #e6dd5bc5;\r\n    `}\r\n    box-sizing: border-box;\r\n    border: 1px solid #676767;\r\n    color: #000786;\r\n    ${props => !props.isNone ? '' : css`\r\n        color: #850000;\r\n    `}\r\n    text-align: left;\r\n    padding-left: 4px;\r\n`;\r\nconst _Struct = styled.span<{\r\n    interval: number;\r\n}>`\r\n    color: ${props => {\r\n        switch (props.interval) {\r\n            case 1: return '#960000';\r\n            case 3: return '#000877';\r\n            case 5: return '#007a06';\r\n            case 7: return '#742e00';\r\n            case 9: return '#005e5e';\r\n        }\r\n    }};\r\n`;\r\n\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/score/scoreData\";\r\nimport LibraryUtil from \"../../../../utils/LibraryUtil\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PresetSelectorFrame from \"../../../thema/presetSelectorFrame\";\r\nimport ThemaSelectorFrame from \"../../../thema/themaSelectorFrame\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu !== 'none';\r\n\r\n    const enableState = LibraryUtil.getEnableState(store);\r\n\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {(() => {\r\n                    switch (state.hideMenu) {\r\n                        case 'none': return <></>;\r\n                        case 'backing': return <BackingEditorFrame />\r\n                        case 'library': return <ThemaSelectorFrame.Component />\r\n                        case 'preset': return <PresetSelectorFrame.Component />\r\n                    }\r\n                })()}\r\n                {/* {store.backingState == null ? <></> : <BackingEditorFrame />} */}\r\n            </_Contents>\r\n            <_LabelFrame>\r\n                <_Label\r\n                    isEnable={enableState.isChordElement}\r\n                    isVisible={['backing', 'none'].includes(state.hideMenu)}\r\n                    onClick={() => {\r\n                        if (state.hideMenu === 'none') {\r\n                            dispatcher.backing.openBackingEditor();\r\n                        } else {\r\n                            dispatcher.backing.closeBackingEditor();\r\n                        }\r\n                    }}>\r\n                    <div>Backing</div>\r\n                </_Label>\r\n                <_Label\r\n                    // 複数選択していない場合\r\n                    isEnable={\r\n                        enableState.isUseLib &&\r\n                        enableState.isChordElement &&\r\n                        !enableState.isRangeSelect\r\n                    }\r\n                    isVisible={['library', 'none'].includes(state.hideMenu)}\r\n                    onClick={() => {\r\n                        if (state.hideMenu === 'none') {\r\n                            dispatcher.score.openLibraryWnd(false);\r\n                        } else {\r\n                            dispatcher.score.closeLibraryWnd();\r\n                        }\r\n                    }}>\r\n                    <div>Library</div>\r\n                </_Label>\r\n                <_Label\r\n                    // 複数選択している場合\r\n                    isEnable={enableState.isRangeSelect && enableState.isUseLib}\r\n                    isVisible={['preset', 'none'].includes(state.hideMenu)}\r\n                    onClick={() => {\r\n                        if (state.hideMenu === 'none') {\r\n                            dispatcher.score.openLibraryWnd(true);\r\n                        } else {\r\n                            dispatcher.score.closeLibraryWnd();\r\n                        }\r\n                    }}>\r\n                    <div>Preset</div>\r\n                </_Label>\r\n            </_LabelFrame>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 7;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 8;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '630px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _LabelFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n`;\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n}>`\r\n    display: block;\r\n    width: 25px;\r\n    height: 110px;\r\n    margin-top: 4px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    ${props => props.isVisible ? '' : css`\r\n        opacity: 0;\r\n    `}\r\n    \r\n    & div {\r\n        width: 110px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmClipboard = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    return (\r\n        <_Wrap>\r\n            <_Label>clipboard</_Label>\r\n            <_TypeDiv>\r\n                <_ModeItem isActive={state.cloneBacking != null}>Backing</_ModeItem>\r\n                <_ModeItem isActive={state.copiedElementList != null}>Elements</_ModeItem>\r\n            </_TypeDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmClipboard;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _TypeDiv = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #a8dbb3;\r\n    `}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #8f8f8f;\r\n    border-radius: 2px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst MEMORI_WIDTH = 12;\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        list.push(<_Margin key={list.length} />);\r\n        state.measureCacheList.forEach((cache) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {cache.barCount !== -1 ? <_Bar>{cache.barCount}</_Bar> : ''}\r\n                    {/* {<_Bar>{i}</_Bar>} */}\r\n                </_Memori>\r\n            );\r\n        });\r\n        list.push(<_Margin key={list.length} />);\r\n        return list;\r\n    }, [state.beatCacheList]);\r\n\r\n    const [beatJsxList, minuteJsxList] = useMemo(() => {\r\n        const beatJsxList: JSX.Element[] = [];\r\n        const minuteJsxList: JSX.Element[] = [];\r\n\r\n        const isChordFocus = dataList[focusIndex].type === 'chord';\r\n        const curChordIndex = cacheList[focusIndex].chordIndex;\r\n        // list.push(<_Start key={list.length}/>);\r\n        dataList.forEach((data, i) => {\r\n\r\n            const cache = state.elementCacheList[i];\r\n            if (data.type === 'chord' && Math.abs(cache.chordIndex - curChordIndex) <= 5) {\r\n\r\n                const detail = data.detail as DetailChord;\r\n                const sustain = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                let label = '';\r\n                let type: ItemType = 'ather';\r\n                if (!isChordFocus) {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                } else {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'cur';\r\n                        type = 'cur';\r\n                    } else if (cache.chordIndex === curChordIndex - 1) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                }\r\n\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatMemori = detail.beatLen * beatProps.beatMemoriCount;\r\n                const posMemori = 16 + cache.curTotalMemori;\r\n                beatJsxList.push(\r\n                    <_SustainItem key={beatJsxList.length}\r\n                        type={type}\r\n                        pos={posMemori} sustain={beatMemori + minute}\r\n                    >{label}</_SustainItem>\r\n                );\r\n                minuteJsxList.push(\r\n                    <_BeatItem key={beatJsxList.length}\r\n                        isActive={type === 'cur'}\r\n                        pos={posMemori + detail.minute.head} sustain={beatMemori}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        // list.push(<_Start key={list.length}/>);\r\n        return [beatJsxList, minuteJsxList];\r\n    }, [dataList.length, focusIndex, state.beatCacheList]);\r\n\r\n    const scrollPos = cacheList[focusIndex].curTotalMemori * MEMORI_WIDTH;\r\n    return (\r\n        <_Wrap>\r\n            <_ScrollFrame pos={scrollPos}>\r\n                <_Blocks>\r\n                    <_Beat>\r\n                        {beatJsxList}\r\n                    </_Beat>\r\n                    <_Minute>\r\n                        {minuteJsxList}\r\n                    </_Minute>\r\n                </_Blocks>\r\n                <_Measure>\r\n                    {memoriJsxList}\r\n                </_Measure>\r\n            </_ScrollFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _ScrollFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => -props.pos}px;\r\n    position: absolute;\r\n    height: 100%;\r\n    /* width: 100px;\r\n    background-color: #000; */\r\n    transition: left 0.5s;\r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n`;\r\n\r\ntype ItemType = 'cur' | 'prev' | 'next' | 'ather';\r\nconst _SustainItem = styled.div<{\r\n    pos: number;\r\n    sustain: number;\r\n    type: ItemType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(136, 163, 133);\r\n    ${props => {\r\n        switch (props.type) {\r\n            case 'cur': return css`\r\n                background-color: rgb(218, 107, 134);\r\n                /* color: #ffe551; */\r\n            `;\r\n            case 'prev': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 177, 221);\r\n            `;\r\n            case 'next': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 221, 171);\r\n            `;\r\n            case 'ather': return css`\r\n                background-color: rgb(192, 192, 192);\r\n            `;\r\n        }\r\n    }}\r\n    border-left: solid 1px #000;\r\n    border-top: solid 1px #000;\r\n    border-bottom: solid 1px #000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _BeatItem = styled.div<{\r\n    isActive: boolean;\r\n    pos: number;\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(224, 224, 224);\r\n    border-left: solid 1px #000;\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: rgb(233, 180, 228); */\r\n        /* color: #ffe551; */\r\n    `}\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Margin = styled.div`\r\n    display: inline-block;\r\n    width: ${MEMORI_WIDTH * 16}px;\r\n    height: 100%;\r\n    background-color: #d9ebe7;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${MEMORI_WIDTH}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useState, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmBackingLibrary = () => {\r\n\r\n    const { store,dispatcher } = useContext(GlobalContext);\r\n\r\n    const systemState = store.systemState;\r\n    const list = store.systemState.themaList;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>backing-library</_Label>\r\n            <_Combobox\r\n                value={systemState.activeThemaIndex}\r\n                onChange={(e) => {\r\n                    systemState.activeThemaIndex = Number(e.target.value);\r\n                    dispatcher.system.setState(systemState);\r\n                }}\r\n            >{[<option key={-1} value={-1}>{''}</option>].concat(list.map((thema, i) => {\r\n                const name = thema.themaName;\r\n                return <option key={i} value={i}>{name}</option>\r\n            }))}</_Combobox>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmBackingLibrary;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* vertical-align: top; */\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _Combobox = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    width: 320px;\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 8px;\r\n    font-size: 18px;\r\n    /* line-height: 32px; */\r\n    color: #1100d0;\r\n    border: solid 1px #000;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;\r\n\r\n","import styled from \"styled-components\";\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\nimport HarmNote from \"./harmNote\";\nimport HarmSections from \"./harmSections\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport { KeyboardEvent, useContext, useEffect, useRef, useState } from \"react\";\nimport { NoteKeySwitch } from \"./input/noteInput\";\nimport HarmSideForm from \"./side/harmSideForm\";\nimport StructViewer from \"./info/structViewer\";\nimport HarmHideFrame from \"./harmHideFrame\";\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\nimport HarmClipboard from \"./initial/harmClipboard\";\nimport HarmMeasure from \"./measure/harmMeasure\";\nimport HarmBackingLibrary from \"./initial/harmBackingLibrary\";\n\n/**\n * ハーモナイズタブ\n * @param props 引数\n * @returns コンポーネント\n */\nconst HarmonizeTab = (props: {\n    isActive: boolean;\n}) => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\n    const [invalidate, setInvalidate] = useState<{}>({});\n\n    const state = store.scoreState;\n\n    const isMelody = store.scoreState.isMelody;\n\n    useEffect(() => {\n        dispatcher.system.setInvalidate({\n            ...store.invalidate, harmonize: () => {\n                dispatcher.system.setInvalidate({\n                    ...store.invalidate, harmoniizeInvalidate: {}\n                });\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n        if (!isMelody) {\n            wrapRef.current.focus();\n        }\n    }, [isMelody]);\n\n\n    const cache = state.elementCacheList[state.focusIndex];\n    const element = store.scoreData.chordList[state.focusIndex];\n    \n    const timelineJsx = state.elementCacheList.length === 0 ? <></> : <HarmMeasure />;\n\n    let structViewerJsx = <></>;\n    if (state.elementCacheList.length > 0) {\n        const scoreCache = state.chordCacheList[cache.chordBlockNo];\n        const structList = element.type === 'chord' ? scoreCache.structList : [];\n        structViewerJsx = <StructViewer cache={cache} structList={structList} />;\n    }\n\n    /** サイドフォームの活性状態 */\n    const sideFormEnable = !state.isPreview && state.hideMenu === 'none';\n    return (\n        <_Wrap\n            tabIndex={999}\n            ref={wrapRef}\n            isActive={props.isActive}\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\n        >\n            <_SectionsDiv isEnable={sideFormEnable}><HarmSections /></_SectionsDiv>\n            <_Left>\n                <_Head isEnable={!state.isPreview}>\n                    <HarmClipboard />\n                    <HarmBackingLibrary />\n                </_Head>\n                <_Middle>\n                    <HarmHideFrame />\n                    <_Main>\n                        <HarmNote />\n                    </_Main>\n                    <_PrevireBrind isUse={state.isPreview} />\n                </_Middle>\n                <_Foot>\n                    <_TIMELINE_WRAP>{timelineJsx}</_TIMELINE_WRAP>\n                    <_INFO_WRAP>{structViewerJsx}</_INFO_WRAP>\n                </_Foot>\n            </_Left>\n            <_Right isEnable={sideFormEnable}>\n                <HarmSideForm />\n            </_Right>\n        </_Wrap>\n    );\n}\nexport default HarmonizeTab;\n\nconst _Wrap = styled.div<{\n    isActive: boolean;\n}>`\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\n    width: 100%;\n    height: 100%;\n    outline: none;\n`;\n\nconst _SectionsDiv = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\n    height: 100%;\n    background-color: #d8d8d8;\n    border-right: 1px solid #3e3f57;\n    box-sizing: border-box;\n    vertical-align: top;\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\n`;\n\nconst _Left = styled.div`\n    display: inline-block;\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH + HARMONIZE_SECTIONS_WIDTH}px);\n    height: 100%;\n    background-color: #c7c7c7;\n    vertical-align: top;\n`;\nconst _Right = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\n    height: 100%;\n    background-color: #d6d6d6;\n    vertical-align: top;\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\n`;\n\nconst _Head = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${HARMONIZE_HEAD_WIDTH}px;\n    background-color: #d4d4d4;\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\n`;\n\nconst _Middle = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\n    background-color: #e0e0e0;\n    overflow: auto;\n    \n    &::-webkit-scrollbar {\n        width: 10px;\n        height: 10px;\n    }\n    &::-webkit-scrollbar-thumb {\n        border-radius: 5px;\n        background: #1959A8;\n    }\n    &::-webkit-scrollbar-track {\n        border-radius: 5px;\n        box-shadow: 0 0 4px #aaa inset;\n    }\n`;\n\nconst _Main = styled.div`\n    position: absolute;\n    margin-left: 25px;\n    width: calc(100% - 25px);\n    min-height: 100%;\n    vertical-align: top;\n    /* overflow: auto; */\n`;\n\nconst _Foot = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: ${HARMONIZE_FOOT_WIDTH}px;\n    background-color: #cacaca;\n    & * {\n        vertical-align: top;\n    }\n`;\nconst _TIMELINE_WRAP = styled.div`\n    display: inline-block;\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\n    height: 100%;\n    /* background-color: #ddc2c2; */\n`;\nconst _INFO_WRAP = styled.div`\n    display: inline-block;\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\n    height: 100%;\n    background-color: #757575;\n`;\n\nconst _PrevireBrind = styled.div<{\n    isUse: boolean;\n}>`\n    position: absolute;\n    display: ${props => props.isUse ? 'block' : 'none'};\n    z-index: 80;\n    width: 100%;\n    height: 100%;\n    background-color: #7a270028;\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyTimelineMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            mouse.lock = x;\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        // if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            if (mouse.pos !== x) {\r\n                // console.log(`★ move=== x: ${x}, pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n                mouse.pos = x;\r\n                update();\r\n            }\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            // update();\r\n\r\n            const lock = mouse.lock + refs.measure.scrollLeft;\r\n            const pos = mouse.pos + refs.measure.scrollLeft;\r\n            const notesList = store.scoreData.notesList;\r\n            let start = -1;\r\n            let end = -1;\r\n            for (let i = 0; i < notesList.length; i++) {\r\n                const notes = notesList[i];\r\n                const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                const [head, tail] = lock < pos ? [lock, pos] : [pos, lock];\r\n                if (head <= left && tail >= right) {\r\n                    if (start === -1) start = i;\r\n                } else {\r\n                    if (start !== -1) {\r\n                        end = i - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            if (start !== -1 && end === -1) {\r\n                end = notesList.length - 1;\r\n            }\r\n            state.focusIndex = start;\r\n            state.destIndex = end;\r\n            mouse.lock = -1;\r\n            // console.log(`★ up=== focus: ${state.focusIndex}, dist: ${state.distIndex}`);\r\n            dispatcher.melody.setState(state);\r\n            // const [head, tail] = mouse.lock < x ? [mouse.lock, x] : [x, mouse.lock];\r\n            // const width = tail - head;\r\n            // if (width > 5) {\r\n            //     mouse.width = width;\r\n            //     mouse.lock = -1;\r\n            //     mouse.pos = head;\r\n            //     update();\r\n            //     console.log(`★ up=== pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n            // }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyTimelineMouseOperation;","import { useContext, useEffect, useMemo, useRef } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport ScoreCache from \"../../../../redux/store/score/scoreCache\";\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\nimport MelodyUtil, { getNormalizeLenFromNotes } from \"../../../../utils/melodyUtil\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport MelodyTimelineMouseOperation from \"./util/melodyTimelineMouseOperation\";\n\nconst MelodyTimeline = (props: {\n    barLength: number;\n    beatWidth: number;\n    curChord: ChordElement | null;\n    timelineLength: number;\n    mouseMeasurePos: number;\n    update: () => void;\n}) => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const measureRef = useRef<null | HTMLDivElement>(null);\n    const chordRef = useRef<null | HTMLDivElement>(null);\n\n    const state = store.scoreState;\n    const update = props.update;\n\n    const chordList = store.scoreData.chordList;\n    const barLength = props.barLength;\n    const beatWidth = props.beatWidth;\n    const curChord = props.curChord;\n    const timelineLength = props.timelineLength;\n    const mouseMeasurePos = props.mouseMeasurePos;\n    const rate = 1 / store.melodyState.quantize;\n    const init = store.scoreData.chordList[0].detail as DetailInit;\n\n    useEffect(() => {\n        store.refs.melody.measure = measureRef.current;\n        store.refs.melody.chord = chordRef.current;\n    }, []);\n\n    const measureJsxList = useMemo(() => {\n        const jsxList: JSX.Element[] = [];\n        state.measureCacheList.forEach(cache => {\n\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\n            switch (true) {\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\n            }\n            // 表示する小節数\n            const barCount = cache.barCount;\n\n            jsxList.push(\n                <_Memori\n                    key={jsxList.length}\n                    beatWidth={beatWidth}\n                    width={bean.width}\n                    height={bean.height}\n                    color={bean.color}\n                >\n                    {barCount !== -1 ? <_Bar>{barCount}</_Bar> : ''}\n                </_Memori>\n            );\n        });\n        return jsxList;\n    }, [state.beatCacheList, barLength]);\n\n    const chordJsxList: JSX.Element[] = useMemo(() => {\n        const jsxList: JSX.Element[] = [];\n        if (state.elementCacheList.length === 0) {\n            return jsxList;\n        }\n        let left = 0;\n        chordList.forEach((element, i) => {\n            if (element.type === 'chord') {\n                // console.log(state.elementCacheList.length);\n                const detail = element.detail as DetailChord;\n                const cache = state.elementCacheList[i];\n                const minute = detail.minute.head + detail.minute.tail;\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\n                const minuteLen = minute * 0.25;\n                const adjustRate = beatProps.beatMemoriCount / 4;\n                const width = beatWidth * (detail.beatLen * adjustRate + minuteLen);\n\n                if (chordRef.current != null) {\n                    const scroll = chordRef.current.scrollLeft;\n                    if (left + width - scroll >= 0 ||\n                        left - scroll <= chordRef.current.clientWidth) {\n                        const symbolNmae = TheoryUtil.getSymbolFromKey(detail.symbolKey)?.name;\n                        const degreeName = detail.root == null ? '-' :\n                            TheoryUtil.getDegreeRoot(detail.root) + symbolNmae;\n                        const chordName = detail.root == null ? '-' :\n                            TheoryUtil.getRootName(detail.root, init.keyIndex) + symbolNmae;\n                        jsxList.push(\n                            <_ChordItem key={jsxList.length}\n                                left={left}\n                                width={width}\n                                isActive={element == curChord}\n                                onClick={() => {\n                                    state.isMelody = false;\n                                    state.focusIndex = state.distIndex = i;\n                                    dispatcher.score.setScoreState(state);\n                                }}\n                                onContextMenu={() => {\n                                    MelodyUtil.previewCurHarmony(store, dispatcher);\n                                }}\n                            >\n                                <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\n                            </_ChordItem>\n                        );\n                    }\n                }\n                left += width;\n            }\n        });\n        return jsxList;\n    }, [chordList, curChord]);\n\n    return (<>\n        <_Chord ref={chordRef}>\n            <_ChordWrap width={timelineLength}>\n                {chordJsxList}\n            </_ChordWrap>\n        </_Chord>\n        <_MeasureWrap ref={measureRef}>\n            <_MeasureInner\n                onMouseDown={e => MelodyTimelineMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\n                onMouseMove={e => MelodyTimelineMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\n                onMouseUp={e => MelodyTimelineMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\n                onMouseLeave={() => {\n                    const mouse = store.melodyState.timelineMouse;\n                    mouse.pos = -1;\n                    mouse.lock = -1;\n                    update();\n                }}\n            >\n                {measureJsxList}\n                <_MousePos\n                    left={mouseMeasurePos * beatWidth * rate}\n                    width={beatWidth * rate}\n                />\n            </_MeasureInner>\n        </_MeasureWrap>\n    </>);\n}\n\nconst getExtendMeasure = (measureList: ScoreCache.Measure[]): ScoreCache.Measure[] => {\n    const list: ScoreCache.Measure[] = [];\n\n    return list;\n}\n\nexport default MelodyTimeline;\n\nconst _MeasureWrap = styled.div`\n    display: inline-block;\n    position: relative;\n    background: linear-gradient(to bottom, #ffffff, #808080);\n    width: 100%;\n    height: 40px;\n    text-align: left;\n    border-top: solid 2px #000;\n    white-space: nowrap;\n    overflow: hidden;\n`;\n\nconst _MeasureInner = styled.div`\n    display: inline-block;\n    position: absolute;\n    /* width: 100%; */\n    left: 0;\n    top: 0;\n    width: 10000px;\n    height: 100%;\n    &:hover {\n        background-color: #ff00b347;\n    }\n`;\n\n\nconst _MousePos = styled.div<{\n    left: number;\n    width: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    z-index: 10;\n    left: ${props => props.left}px;\n    top: 0px;\n    width: ${props => props.width}px;\n    height: 100%;\n    background-color: #ffff006c;\n`;\n\nconst _Chord = styled.div`\n    display: inline-block;\n    position: relative;\n    background-color: #c0c0c0;\n    width: 100%;\n    height: calc(100% - 40px);\n    text-align: left;\n    white-space: nowrap;\n    overflow: hidden;\n`;\n\nconst _ChordWrap = styled.div<{\n    width: number;\n}>`\n    width: ${props => props.width}px;\n    height: 100%;\n    overflow: hidden;\n`;\n\nconst _ChordItem = styled.div<{\n    left: number;\n    width: number;\n    isActive: boolean;\n}>`\n    display: inline-block;\n    position: absolute;\n    left: ${props => props.left}px;\n    width: ${props => props.width - 1}px;\n    height: calc(100% - 2px);\n    box-sizing: border-box;\n    border: 1px solid #646464;\n    border-left: 4px solid #940000;\n    background-color: #ffffff22;\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\n    margin: 1px 0 0 1px;\n    \n    font-size: 18px;\n    font-weight: 600;\n    text-align: center;\n\n    &:hover {\n        background-color: #fffb0037;\n    }\n`;\n\nconst _DegreeName = styled.span`\n    color: #d80000;\n`;\nconst _ChordName = styled.span`\n    color: #0000007d;\n`;\n\nconst _Scale = styled.div<{\n    isHead: boolean;\n    beatWidth: number;\n}>`\n    display: inline-block;\n    position: relative;\n    pointer-events: none;\n    /* background-color: #ffffffbe; */\n    width: ${props => props.beatWidth / 4}px;\n    vertical-align: bottom;\n    margin-top: 25px;\n    height: ${props => props.isHead ? '15px' : '10px'};\n    box-sizing: border-box;\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\n`;\n\nconst _Memori = styled.div<{\n    width: number;\n    height: number;\n    color: string;\n    beatWidth: number;\n}>`\n    display: inline-block;\n    position: relative;\n    width: ${props => props.beatWidth / 4}px;\n    height: ${props => props.height}px;\n    border-left: solid ${props => props.width}px ${props => props.color};\n    box-sizing: border-box;\n    vertical-align: top;\n`;\n\nconst _Bar = styled.div<{\n}>`\n    display: inline-block;\n    position: absolute;\n    z-index: 10;\n    left: -5px;\n    top: 18px;\n    font-size: 16px;\n    font-weight: 600;\n    color: #dd0000;\n`;","import { useContext, useMemo } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\n\n\nconst MelodyPitchList = (props: {\n    mousePitchIndex: number;\n    curChord: ChordElement | null;\n}) => {\n    const { store, dispatcher } = useContext(GlobalContext);\n    const init = store.scoreData.chordList[0].detail as DetailInit;\n\n    // 左端の音程リストのJSXリスト\n    const pitchItemJsxList = useMemo(() => {\n        const structIndexList: number[] = [];\n        if (props.curChord != null) {\n            const detail = props.curChord.detail as DetailChord;\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\n            const root = detail.root;\n            if (root != null && symbol != null) {\n                symbol.structs.forEach((struct) => {\n                    structIndexList.push((root.index + init.keyIndex + TheoryUtil.IntervalRelationProps[struct]) % 12);\n                });\n            }\n        }\n\n        const list: JSX.Element[] = [];\n        for (let i = 0; i < 60; i++) {\n            const keyIndex = ((59 - i) + 9) % 12;\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\n            const octaveName = getOctaveName(octave);\n            list.push(\n                <_PitchItem key={i}\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\n                    isStruct={structIndexList.includes(keyIndex)}\n                    isActive={i === props.mousePitchIndex}\n                    onClick={() => {\n                        const instrument = store.instruments.melodyFont;\n                        if (instrument != null) {\n                            instrument.stop();\n                            instrument.play(soundName + octave, 0, { duration: 1 });\n                        }\n                    }}\n                >\n                    {/* {octaveName} */}\n                    {soundName}\n                </_PitchItem>\n            );\n        }\n        return list;\n    }, [props.mousePitchIndex, props.curChord]);\n\n    return (<>\n        <_OctaveWrap>\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\n        </_OctaveWrap>\n        <_PitchWrap>\n            {pitchItemJsxList}\n        </_PitchWrap>\n    </>);\n};\n\nexport default MelodyPitchList;\n\nconst getOctaveName = (num: number) => {\n    switch (num) {\n        case 0: return 'low';\n        case 1: return 'mid1';\n        case 2: return 'mid2';\n        case 3: return 'hi';\n        case 4: return 'hihi';\n        default: return '';\n    }\n}\n\nconst _OctaveWrap = styled.div`\n    display: inline-block;\n    width: 30px;\n    height: 100%;\n    vertical-align: top;\n`;\n\nconst _PitchWrap = styled.div`\n    display: inline-block;\n    width: calc(100% - 30px);\n    height: 100%;\n    vertical-align: top;\n`;\n\nconst _OctaveItem = styled.div<{\n    isActive: boolean;\n}>`\n    display: inline-block;\n    border: 1px solid black;\n    width: 100%;\n    height: 360px;\n    background-color: #8f8f8f;\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\n    box-sizing: border-box;\n\n    font-size: 18px;\n    color: #dfdfdf;\n    font-weight: 600;\n    & div {\n        width: 360px;\n        transform-origin: top left;\n        transform: rotate(-90deg) translateX(-50%);\n        /* background-color: #fff; */\n    }\n`;\n\nconst _PitchItem = styled.div<{\n    isScale: boolean;\n    isActive: boolean;\n    isStruct: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 20px);\n    border: 1px solid black;\n    ${props => !props.isScale ? '' : css`\n        width: 100%;\n    `}\n    height: ${TUNE_PITCH_HEIGHT}px;\n    background-color: #adadad;\n    ${props => !props.isStruct ? '' : css`background-color: #e25d5d;`}\n    ${props => !props.isActive ? '' : css<{\n        isStruct: boolean;\n    }>`\n        background-color: #cece60;\n        ${props => !props.isStruct ? '' : css`background-color: #e28c45;`}\n    `}\n    box-sizing: border-box;\n\n    padding-left: 5px;\n    line-height: 28px;\n    font-size: 18px;\n    color: #3b3b3b;\n    font-weight: 600;\n`;\n","import { useContext } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\nimport Soundfont from 'soundfont-player';\nimport { SoundfontInfo } from \"../../../../../redux/store/score/melodyState\";\n\n\nconst InstrumentSwitch = (props: {\n    labelName: string;\n    icon: JSX.Element;\n    soundfontInfo: SoundfontInfo;\n}) => {\n    const { store, dispatcher } = useContext(GlobalContext);\n    const state = store.melodyState;\n\n    return (\n        <_Wrap\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\n            onClick={() => {\n                // state.quantize = props.value;\n                // dispatcher.tune.setState(state);\n\n                state.soundfontInfo = props.soundfontInfo;\n                state.isPreview = true;\n                dispatcher.melody.setState(state);\n\n                const info = props.soundfontInfo;\n                Soundfont.instrument(new AudioContext(), info.name,\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\n                        const instruments = store.instruments;\n                        instruments.melodyFont = soundFontPlayer;\n                        dispatcher.score.setInstruments(instruments);\n                    }).then(() => {\n                        state.isPreview = false;\n                        dispatcher.melody.setState(state);\n                    });\n            }}\n        >\n            <_Icon>{props.icon}</_Icon>\n            <_Label>{props.labelName}</_Label>\n        </_Wrap>\n    );\n}\n\nexport default InstrumentSwitch;\n\nconst _Wrap = styled.div<{\n    isActive: boolean;\n}>`\n    display: inline-block;\n    width: 85px;\n    height: 40px;\n    text-align: center;\n    border: 1px solid #4b4b4b;\n    background-color: #cacacada;\n    ${props => !props.isActive ? '' : css`\n        background-color: #f7f7f7da;\n    `}\n    border-radius: 6px;\n    margin-left: 4px;\n    box-sizing: border-box;\n\n    &:hover {\n        background-color: #e4e4e4da;\n        ${props => !props.isActive ? '' : css`\n            background-color: #f7f7f7da;\n        `}\n    }\n`;\n\n\nconst _Icon = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 30px;\n    /* background-color: #ff0000da; */\n    font-size: 20px;\n    color: #4b4b4b;\n    text-align: center;\n    /* padding-top: 5px; */\n    box-sizing: border-box;\n`;\n\nconst _Label = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 10px;\n    /* background-color: #0400ffdc; */\n    font-size: 16px;\n    font-weight: 600;\n    line-height: 0;\n    color: #3b3b3b;\n    text-align: center;\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\n\n\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\nimport { BsPerson } from 'react-icons/bs'\nimport ControlButton from \"./item/controlButton\";\n\nconst MelodyHeader = () => {\n    const { store, dispatcher } = useContext(GlobalContext);\n    const state = store.melodyState;\n\n    return (<>\n        <_OperationDiv>\n            <_QuantizeSelector>\n                <QuantizeSwitch labelName={'32'} isDisable={false} isActive={state.quantize === 8} callback={() => {\n                    state.quantize = 8;\n                    dispatcher.melody.setState(state);\n                }} />\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\n                    state.quantize = 4;\n                    dispatcher.melody.setState(state);\n                }} />\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\n                    state.quantize = 2;\n                    dispatcher.melody.setState(state);\n                }} />\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\n                    state.quantize = 1;\n                    dispatcher.melody.setState(state);\n                }} />\n                <QuantizeSwitch labelName={'/3'} isDisable={![1, 2, 3, 6].includes(state.quantize)} isActive={[3, 6].includes(state.quantize)} callback={() => {\n                    if ([3, 6].includes(state.quantize)) {\n                        state.quantize /= 3;\n                        dispatcher.melody.setState(state);\n                    } else {\n                        state.quantize *= 3;\n                        dispatcher.melody.setState(state);\n                    }\n                }} />\n            </_QuantizeSelector>\n            <_Control>\n                {/* <ControlButton labelName={'Up'} isDisable={false} callback={() => {\n                    const list = store.scoreData.notesList;\n                    list.forEach(notes => {\n                        notes.pitchIndex--;\n                    });\n                    dispatcher.melody.setNotesList(list.slice());\n                }} />\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\n                    const list = store.scoreData.notesList;\n                    list.forEach(notes => {\n                        notes.pitchIndex++;\n                    });\n                    dispatcher.melody.setNotesList(list.slice());\n                }} /> */}\n                {/* <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\n                    dispatcher.tune.setNotesList([]);\n                }} /> */}\n            </_Control>\n        </_OperationDiv>\n        <_InstrumentSelector>\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 9 }} />\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"guitar\" soundfontInfo={{ name: 'overdriven_guitar', gain: 4 }} />\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 4 }} />\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\n            <InstrumentSwitch icon={<BsPerson />} labelName=\"choir\" soundfontInfo={{ name: 'choir_aahs', gain: 6 }} />\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\n        </_InstrumentSelector>\n    </>);\n}\n\nexport default MelodyHeader;\n\nconst _OperationDiv = styled.div<{\n}>`\n    display: block;\n    padding: 4px 4px 4px 0;\n    background-color: #bbbbbb;\n`;\n\nconst _QuantizeSelector = styled.div<{\n}>`\n    display: inline-block;\n    /* margin-left: 20px; */\n`;\nconst _Control = styled.div<{\n}>`\n    display: inline-block;\n    margin-left: 20px;\n`;\n\nconst _InstrumentSelector = styled.div<{\n}>`\n    display: inline-block;\n    /* padding: 4px 4px 4px 0; */\n    background-color: #e4e4e486;\n`;\n\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, MelodyNotes } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.destIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    const newLen = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.len) !== getNormalizeLenFromNotes(newLen)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.len = newLen;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    const newPos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.pos) !== getNormalizeLenFromNotes(newPos)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.pos = newPos;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.tableMouse;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                //履歴を作成\r\n                state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.melody.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.melody.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/score/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport MelodyUtil, { } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n\r\n        // 選択しているノーツが1つである場合\r\n        const isSingle = state.focusIndex === state.destIndex;\r\n        const mouse = state.tableMouse;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.melody.copyNotes(); break;\r\n                    case 'v': dispatcher.melody.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.melody.allSelect();\r\n                    }\r\n                        break;\r\n                    case 's': dispatcher.score.saveFile(); break;\r\n                    case 'z': dispatcher.melody.undo(); break;\r\n                    case 'y': dispatcher.melody.redo(); break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.melody.incrementCurPitch(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.melody.incrementCurPitch(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveDestFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveDestFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.melody.incrementCurPitch(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.melody.incrementCurPitch(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(false);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(true);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.melody.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.melody.adjustScrollX(); break;\r\n                case 'e': dispatcher.melody.adjustScrollY(); break;\r\n                case 'z': {\r\n                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.melody.firstNotes();\r\n                }\r\n                    break;\r\n                case '0': {\r\n                    state.quantize = 8;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else if([2, 1].includes(state.quantize)) {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.melody.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.melody.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.melody.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.destIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport MelodyTimeline from \"./melodyTimeline\";\nimport MelodyPitchList from \"./melodyPitchList\";\nimport MelodyHeader from \"./melodyHeader\";\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\nimport { Side } from \"../../../../redux/store/score/melodyState\";\nimport MelodyInput from \"../harmonize/input/melodyInput\";\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\nimport CacheUtil from \"../../../../utils/cacheUtil\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\n\n\nconst MelodyFrame = (props: {\n    isActive: boolean;\n}) => {\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const scoreState = store.scoreState;\n    const state = store.melodyState;\n\n    const wrapRef = useRef<null | HTMLDivElement>(null);\n    const tableRef = useRef<null | HTMLDivElement>(null);\n    const pitchRef = useRef<null | HTMLDivElement>(null);\n\n    const [invalidate, setInvalidate] = useState<{}>({});\n    const [invalidate2, setInvalidate2] = useState<{}>({});\n    const update = () => setInvalidate({});\n\n    const mouse = state.tableMouse;\n    const isPut = mouse.isPut;\n    const notesState = mouse.notesState;\n    const curChord = mouse.curChord;\n    const mouseMeasurePos = mouse.mouseMeasurePos;\n    const mousePitchIndex = mouse.mousePitchIndex;\n    const width = mouse.width;\n    const lock = mouse.lock;\n    const refs = store.refs.melody;\n\n    const barCount = 150;\n\n    const timelineLength = barCount * state.beatWidth * 4;\n    const notesList = store.scoreData.notesList;\n    const rate = 1 / store.melodyState.quantize;\n\n    // const rate = 4 / state.quantize;\n\n    const isTune = store.scoreState.isMelody;\n\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\n\n    useEffect(() => {\n        dispatcher.system.setRefs({\n            ...store.refs, melody: {\n                ...store.refs.melody,\n                table: tableRef.current,\n                pitch: pitchRef.current\n            }\n        });\n\n        dispatcher.system.setInvalidate({\n            ...store.invalidate, melody: update\n        });\n    }, []);\n\n    useEffect(() => {\n        if (isTune && wrapRef.current != null) {\n            wrapRef.current.focus();\n        }\n    }, [isTune]);\n\n    /**\n     * 画面上部のメモリJSXリスト\n     * 拍子のキャッシュから作成する\n     */\n    const measureJsxList = useMemo(() => {\n        const list: JSX.Element[] = [];\n        scoreState.measureCacheList.forEach((cache, i) => {\n\n            list.push(\n                <_Scale key={i} isHead={cache.rate === 4} beatWidth={state.beatWidth} />\n            );\n        });\n        return list;\n    }, [scoreState.beatCacheList, barCount]);\n\n    // const init = store.scoreData.chordList[0].detail as DetailInit;\n\n    /**\n     * スケール区間のJSXリスト\n     * 背景色のラインを表現\n     * 転調でキーが変わる度に追加される\n     */\n    const scaleDivJsxList = useMemo(() => {\n        const divList: JSX.Element[] = [];\n        // console.log('**' + scoreState.scaleCacheList.length);\n        scoreState.scaleCacheList.forEach((scaleInfo, i) => {\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\n            const scaleJsxList: JSX.Element[] = [];\n            for (let j = 0; j < PITCH_MAX; j++) {\n                const keyIndex = getKeyIndexFromPitcher(j);\n                scaleJsxList.push(\n                    <_ScaleLine key={j}\n                        isScale={scaleIndexies.includes(keyIndex)}\n                        isBase={keyIndex === scaleIndexies[0]}\n                    />\n                );\n            }\n\n            divList.push(\n                <_ScaleList key={i} width={state.beatWidth / 4 * scaleInfo.memoriCnt} isEven={i % 2 === 0}>\n                    {scaleJsxList}\n                </_ScaleList>\n            );\n        });\n        return divList;\n    }, [scoreState.scaleCacheList]);\n\n    /**\n     * 配置するノーツのJSXリスト\n     */\n    const notesJsxList = useMemo(() => {\n        const list: JSX.Element[] = [];\n        // notesList.forEach((notes, i) => {\n        // let count = 0;\n        if (scoreState.scaleCacheList.length === 0) return list;//\n        for (let i = 0; i < notesList.length; i++) {\n            const notes = notesList[i];\n            const normalLeft = getNormalizeLenFromNotes(notes.pos);\n            const normalWidth = getNormalizeLenFromNotes(notes.len);\n            if (tableRef.current != null) {\n                const scroll = tableRef.current.scrollLeft;\n                const notesLeft = normalLeft * state.beatWidth;\n                const notesRight = notesLeft + normalWidth * state.beatWidth;\n                if (\n                    // !state.isPreview &&\n                    (notesRight - scroll < 0 || notesLeft - scroll > tableRef.current.clientWidth)\n                ) {\n                    continue;\n                }\n            }\n            const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\n            // count++;\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\n            const isActive = focusStart <= i && focusEnd >= i;\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\n            const isScale = scaleIndexies.includes(keyIndex);\n\n            // クオンタイズ\n            const unitPos = getMinimumLenUnit(notes.pos);\n            const unitLen = getMinimumLenUnit(notes.len);\n            list.push(\n                <_NotesWrap key={i}\n                    left={normalLeft * state.beatWidth}\n                    width={normalWidth * state.beatWidth}\n                    side={notesState.side}\n                    isActive={isActive}\n                    isScale={state.keySwitch.scaleMode}\n                    isResize={state.keySwitch.resize}\n                    isMove={state.keySwitch.move}\n                    isOctave={state.keySwitch.octave}\n                    isPreview={state.isPreview}\n                    onContextMenu={() => {\n                        dispatcher.melody.removeNotes();\n                    }}\n                >\n                    <_Notes\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\n                        isScale={isScale}\n                        isActive={isActive}\n                        isPreview={state.isPreview}\n                    >\n                        {/* {notes.posX} */}\n                    </_Notes>\n                </_NotesWrap>\n            );\n        }\n        // console.log('cnt: ' + count);\n        // });\n        return list;\n    }, [notesList, notesList.length, state.focusIndex, state.destIndex, notesState, state.isPreview,\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move, refs.table?.scrollLeft]);\n\n    /**\n     * タイムラインを横にスクロールした際の処理\n     */\n    const sideScrollAction = () => {\n\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\n            const scrollLeft = refs.table.scrollLeft;\n            const scrollTop = refs.table.scrollTop;\n            refs.measure.scrollTo({ left: scrollLeft });\n            refs.chord.scrollTo({ left: scrollLeft });\n            refs.pitch.scrollTo({ top: scrollTop });\n        }\n        update();\n    };\n\n    /**\n     * マウスポインタがエリア外に出た際の処理\n     */\n    const mouseLeaveAction = () => {\n        console.log('leave!');\n        if (mouse.notesState.index !== -1) {\n            mouse.notesState.index = -1;\n            mouse.notesState.isResize = false;\n            mouse.notesState.side = 'normal';\n        }\n        mouse.mouseMeasurePos = -1;\n        mouse.mousePitchIndex = -1;\n        update();\n    };\n\n    return (\n        <_Wrap\n            tabIndex={999}\n            ref={wrapRef}\n            isActive={props.isActive}\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\n        >\n            <_Header isEnable={!state.isPreview}>\n                <MelodyHeader />\n            </_Header>\n            <_Body>\n                {(() => {\n                    const mouse = state.timelineMouse;\n                    if (mouse.lock === -1) {\n                        return mouse.pos === -1 ? <></> :\n                            <_MouseLinePos left={mouse.pos} />\n                    } else {\n                        const [head, tail] = mouse.lock < mouse.pos ? [mouse.lock, mouse.pos] : [mouse.pos, mouse.lock];\n                        const width = tail - head;\n                        return <_MouseRange left={head} width={width} />\n                    }\n                })()}\n                {\n\n                }\n                <_Timeline>\n                    <MelodyTimeline\n                        barLength={barCount}\n                        beatWidth={state.beatWidth}\n                        curChord={curChord}\n                        timelineLength={timelineLength}\n                        mouseMeasurePos={mouseMeasurePos}\n                        update={() => setInvalidate2({})}\n                    />\n                </_Timeline>\n                <_Pitch ref={pitchRef}>\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\n                </_Pitch>\n                <_TableWrap ref={tableRef} onScroll={sideScrollAction} >\n                    <_TableMeasure\n                        width={timelineLength}\n                    >\n                        {measureJsxList}\n                    </_TableMeasure>\n                    <_TablePitch\n                        width={timelineLength}\n                    >\n                        {scaleDivJsxList}\n                    </_TablePitch>\n                    <_TableNotes\n                        width={timelineLength}\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\n                        onMouseLeave={mouseLeaveAction}\n                    >\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\n                        />}\n                        {notesJsxList}\n                    </_TableNotes>\n                    <_PrevireBrind\n                        isUse={state.isPreview}\n                        width={timelineLength}\n                    />\n                </_TableWrap>\n            </_Body>\n        </_Wrap>\n    );\n}\n\nexport default MelodyFrame;\n\nconst _Wrap = styled.div<{\n    isActive: boolean;\n}>`\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\n    width: 100%;\n    height: 100%;\n    outline: none;\n`;\n\nconst editAnimation = keyframes`\n  0%,100% {\n    opacity: 0.2;\n  }\n  50% {\n    opacity: 1;\n  }\n`;\n\nconst _Test = styled.div<{\n    x: number;\n    y: number;\n    width: number;\n    lenType: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    left: ${props => props.x}px;\n    top: ${props => props.y}px;\n    width: ${props => props.width}px;\n    height: ${props => {\n        switch (props.lenType) {\n            case 4: return TUNE_PITCH_HEIGHT;\n            case 8: return TUNE_PITCH_HEIGHT - 6;\n            case 16: return TUNE_PITCH_HEIGHT - 12;\n            default: return TUNE_PITCH_HEIGHT - 14;\n        }\n    }}px;\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\n    border: 1px solid #fbffd9;\n    \n    animation: ${editAnimation} .8s linear infinite;\n`;\n\nconst _Header = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${TUNE_HEADER_WIDTH}px;\n    background-color: #b3b3b3;\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\n`;\nconst _Body = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\n    background-color: #464646;\n`;\n\nconst _MouseLine = css`\n    display: inline-block;\n    position: absolute;\n    pointer-events: none;\n    z-index: 99;\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\n    height: calc(100% - 42px);\n    width: 3px;\n`;\nconst _MouseLinePos = styled.div<{\n    left: number;\n}>`\n    ${_MouseLine}\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\n    background-color: #15ff00;\n`;\nconst _MouseLineLock = styled.div<{\n    left: number;\n}>`\n    ${_MouseLine}\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\n    background-color: #fbff00;\n`;\n\nconst _MouseRange = styled.div<{\n    left: number;\n    width: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    pointer-events: none;\n    z-index: 99;\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\n    height: calc(100% - 42px);\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\n    width: ${props => props.width}px;\n    background-color: #ffffff8b;\n`;\n\nconst _Timeline = styled.div`\n    display: inline-block;\n    margin-left: ${TUNE_PITCH_WIDTH}px;\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\n    height: ${TUNE_TIMELINE_WIDTH}px;\n    background-color: #534b81;\n    overflow-y: hidden;\n`;\n\nconst _Pitch = styled.div`\n    display: inline-block;\n    width: ${TUNE_PITCH_WIDTH}px;\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\n    background-color: #464545;\n    vertical-align: top;\n    overflow-y: hidden;\n`;\n\nconst _TableWrap = styled.div`\n    display: inline-block;\n    position: relative;\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\n    background-color: #bdbdbd;\n    vertical-align: top;\n    overflow: scroll;\n    &::-webkit-scrollbar {\n        width: 10px;\n        height: 10px;\n    }\n    &::-webkit-scrollbar-thumb {\n        border-radius: 5px;\n        background: #1959A8;\n    }\n    &::-webkit-scrollbar-track {\n        border-radius: 5px;\n        box-shadow: 0 0 4px #aaa inset;\n    }\n`;\n\nconst _TableMeasure = styled.div<{\n    width: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 3;\n    width: ${props => props.width}px;\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\n    white-space: nowrap;\n`;\n\nconst _TablePitch = styled.div<{\n    width: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    /* z-index: 6; */\n    width: ${props => props.width}px;\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\n    /* pointer-events: none; */\n    /* background-color: #70ff7058; */\n`;\n\nconst _ScaleList = styled.div<{\n    width: number;\n    isEven: boolean;\n}>`\n    display: inline-block;\n    position: relative;\n    top: 0;\n    left: 0;\n    /* z-index: 6; */\n    width: ${props => props.width}px;\n    height: 100%;\n    /* pointer-events: none; */\n    background-color: #70ff7021;\n    ${props => !props.isEven ? '' : css`\n        background-color: #708aff20;\n    `}\n`;\n\n// 音階を区別するバックの横線\nconst _ScaleLine = styled.div<{\n    isScale: boolean;\n    isBase: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\n    margin: 1px 0 0 0;\n    background-color: #00000024;\n    /* border-bottom: 1px solid #00000018; */\n    ${props => !props.isScale ? '' : css`\n        background-color: #d1d1d11f;\n    `}\n    ${props => !props.isBase ? '' : css`\n        background-color: #e0e0e0;\n    `}\n`;\n\nconst _TableNotes = styled.div<{\n    width: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 5;\n    width: ${props => props.width}px;\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\n    cursor: crosshair;\n`;\n\n\nconst _Scale = styled.div<{\n    isHead: boolean;\n    beatWidth: number;\n}>`\n    display: inline-block;\n    /* background-color: #ffffffbe; */\n    width: ${props => props.beatWidth / 4}px;\n    vertical-align: top;\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\n    box-sizing: border-box;\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\n`;\n\n\nconst _NotesWrap = styled.div<{\n    left: number;\n    width: number;\n    isActive: boolean;\n    isResize: boolean;\n    isMove: boolean;\n    isOctave: boolean;\n    isScale: boolean;\n    isPreview: boolean;\n    side: Side;\n}>`\n    display: inline-block;\n    position: absolute;\n    z-index: 9;\n    left: ${props => props.left}px;\n    top: 0;\n    width: ${props => props.width}px;\n    height: 100%;\n    cursor: default;\n    background-color: #2727275a;\n    box-sizing: border-box;\n\n    // アクティブ時\n    ${props => !props.isActive ? '' : css`\n        background-color: #00a6cf52;\n    `}\n    // スケールモードON\n    ${props => !(props.isActive && props.isScale) ? '' : css`\n        background-color: #00cf4552;\n    `}\n    // オクターブモードON\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\n        background-color: #ffa9a952;\n    `}\n    /* border-left: 1px solid #ff0000b2; */\n    ${props => props.isActive ? props.side === 'left' ? css`\n        border-left: 3px solid #0026ffb1;\n        cursor : col-resize;\n        background-color: #1900ff52;\n    ` : props.side === 'right' ? css`\n        border-right: 3px solid #0026ffb1;\n        cursor : col-resize;\n        background-color: #ff00006e;\n    ` : '' : ''}\n\n    // キーボードによるリサイズモードON\n    ${props => !(props.isActive && props.isResize) ? '' : css`\n        border-right: 3px solid #0026ffb1;\n        background-color: #ff00006e;\n    `}\n    // キーボードによる移動モードON\n    ${props => !(props.isActive && props.isMove) ? '' : css`\n        border-left: 3px solid #0026ffb1;\n        background-color: #1900ff52;\n    `}\n    // プレビューモード\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\n        background-color: #fffb0040;\n    `}\n`;\nconst _Notes = styled.div<{\n    y: number;\n    lenType: number;\n    isScale: boolean;\n    isActive: boolean;\n    isPreview: boolean;\n}>`\n    display: inline-block;\n    position: absolute;\n    z-index: 10;\n    top: ${props => props.y}px;\n    width: 100%;\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\n    /* background-color: red; */\n    /* background: linear-gradient(to bottom, ${props => {\n        switch (props.lenType) {\n            case 4: return '#f8525232, #ff0000, #f8525232';\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\n        }\n    }}); */\n    border-radius: 15px 0 0 15px;\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\n    ${props => props.isScale ? '' : css`    \n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\n    `}\n    opacity: 0.5;\n    ${props => props.isPreview && !props.isActive ? '' : css`    \n       opacity: 1;\n    `}\n    /* border: 1px solid #000; */\n    box-sizing: border-box;\n    font-size: 12px;\n    color: #000000;\n    box-shadow: 0 0 22px 0 #0000007d;\n    ${props => !(props.isPreview && props.isActive) ? '' : css`\n        box-shadow: 0 0 32px 0 #ffffff92;\n    `}\n    &:hover {\n        opacity: 0.8;\n    }\n`;\n\nconst _PrevireBrind = styled.div<{\n    width: number;\n    isUse: boolean;\n}>`\n    position: absolute;\n    display: ${props => props.isUse ? 'block' : 'none'};\n    z-index: 80;\n    width: ${props => props.width}px;\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\n    background-color: #7a270028;\n`;\n\n// const _Scroll = styled.div<{\n//     left: number;\n// }>`\n//     position: absolute;\n//     left: ${props => props.left}px;\n//     top: 0px;\n//     z-index: 20;\n//     width: 4px;\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\n//     background-color: #00f;\n// `;","import { useContext, useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { GlobalContext } from \"../../entry/systemEntry\";\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\nimport Soundfont from 'soundfont-player';\nimport MelodyFrame from \"./melody/melodyFrame\";\nimport Styles, { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\nimport MelodyUtil, { } from \"../../../utils/melodyUtil\";\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\n\nconst EditTab = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const state = store.scoreState;\n    const melody = store.melodyState;\n\n    const isDirect = store.systemState.directScore != undefined;\n\n    useEffect(() => {\n        const info = melody.soundfontInfo;\n        if (store.instruments.melodyFont == null && store.instruments.harmonyFont == null) {\n            const instruments = store.instruments;\n            Soundfont.instrument(new AudioContext(), info.name,\n                { gain: info.gain, release: 0.5 }).then((melodyFont) => {\n                    // dispatcher.melody.setMelodyFont(soundFontPlayer);\n\n                    instruments.melodyFont = melodyFont;\n                    // acoustic_guitar_steel\n                    //bright_acoustic_piano\n                    //electric_grand_piano\n                    Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\n                        { gain: 2, release: 0.5 }).then((harmonyFont) => {\n                            // dispatcher.score.setHarmonyFont(soundFontPlayer);\n\n                            instruments.harmonyFont = harmonyFont;\n                            dispatcher.score.setInstruments(instruments);\n                        });\n                });\n        }\n\n    }, []);\n\n    const switchMode = () => {\n        state.isMelody = !state.isMelody;\n        dispatcher.score.setScoreState(state);\n    };\n\n    if (store.scoreData.chordList.length === 0) {\n        return <></>;\n    }\n\n    const isPreview = !state.isMelody ? state.isPreview : store.melodyState.isPreview;\n    const isSolo = !state.isMelody ? state.isSolo : melody.isSolo;\n    const preview = !state.isMelody ? () => {\n\n        if (!state.isPreview) {\n            HarmonizeUtil.previewStart(store, dispatcher);\n        } else {\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\n        }\n    } : () => {\n\n        if (!melody.isPreview) {\n            dispatcher.melody.previewStart();\n        } else {\n            MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\n        }\n    }\n    /** アンサンブルの切替 */\n    const toggleEnsamble = !state.isMelody ? () => {\n        state.isSolo = !state.isSolo;\n        dispatcher.score.setScoreState(state);\n    } : () => {\n        melody.isSolo = !melody.isSolo;\n        dispatcher.melody.setState(melody);\n    }\n\n    const playJsx = <_SwitchInner isActive={isPreview}>Play</_SwitchInner>;\n    const stopJsx = <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner>;\n    const ensambleJsx = <_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner>;\n    const soloJsx = <_SwitchInner isActive={isSolo}>Solo</_SwitchInner>;\n\n    return (\n        <_Wrap>\n            <_Header isEnable={state.hideMenu === 'none'}>\n                <_Mode isEnable={!isPreview}>\n                    <_ModeItem isActive={!state.isMelody} onClick={() => {\n                        if (state.isMelody) switchMode();\n                    }}>Harmony</_ModeItem>\n                    <_ModeItem isActive={state.isMelody} onClick={() => {\n                        if (!state.isMelody) switchMode();\n                    }}>Melody</_ModeItem>\n                </_Mode>\n                <_Buttons>\n                    <_Switch isEnable={true} onClick={preview}>{playJsx} / {stopJsx}</_Switch>\n                    <_Switch isEnable={!state.isPreview} onClick={toggleEnsamble}>{ensambleJsx} / {soloJsx}</_Switch>\n                    <_Button isEnable={!isDirect} onClick={dispatcher.score.saveFile}>Save</_Button>\n                </_Buttons>\n            </_Header>\n            <_Body\n                tabIndex={999}\n                onKeyDown={(e) => {\n                    const isPermit = !isPreview && state.hideMenu === 'none';\n                    if (isPermit) {\n                        switch (e.key) {\n                            case 'r': switchMode(); break;\n                        }\n                    }\n                }}>\n                <_Main>\n                    <HarmonizeTab isActive={!state.isMelody} />\n                    <MelodyFrame isActive={state.isMelody} />\n                </_Main>\n            </_Body>\n        </_Wrap>\n    );\n}\nexport default EditTab;\n\nconst _Wrap = styled.div`\n    width: 100%;\n    height: 100%;\n    outline: none;\n`;\n\nconst _Header = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 35px;\n    background-color: #ececec;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n`;\n\nconst _Mode = styled.div<{\n    isEnable: boolean\n}>`\n    display: inline-block;\n    /* width: 300px; */\n    height: 100%;\n    text-align: center;\n    margin-right: 20px;\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\n`;\nconst _ModeItem = styled.div<{\n    isActive: boolean;\n}>`\n    display: inline-block;\n    /* width: 300px; */\n    width: 120px;\n    height: calc(100% - 8px);\n    /* background-color: #e0ff6f55; */\n    ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\n    margin: 4px 0 0 4px;\n\n    font-size: 18px;\n    font-weight: 600;\n    color: #505050;\n    border-radius: 5px;\n    border: 1px solid #969696;\n    box-sizing: border-box;\n    &:hover {\n        background-color: #e0ff6f55;\n        ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\n    }\n`;\nconst _Buttons = styled.div`\n    display: inline-block;\n    /* width: 300px; */\n    height: 100%;\n    /* background-color: #e0ff6f55; */\n\n    & * {\n        margin: 3px 0 0 5px;\n    }\n`;\n\nconst _Button = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    /* width: 300px; */\n    width: 150px;\n    height: calc(100% - 8px);\n    background-color: #cae4e3;\n    margin: 4px 0 0 24px;\n    text-align: center;\n\n    font-size: 18px;\n    font-weight: 600;\n    color: #000000cf;\n    border-radius: 5px;\n    border: 1px solid #969696;\n    box-sizing: border-box;\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\n    &:hover {\n        background-color: #dceceb\n    }\n`;\n\nconst _Switch = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    /* width: 300px; */\n    width: 220px;\n    height: calc(100% - 8px);\n    background-color: #e1e4ca;\n    margin: 4px 0 0 4px;\n    text-align: center;\n\n    font-size: 18px;\n    font-weight: 600;\n    color: #000000cf;\n    border-radius: 5px;\n    border: 1px solid #969696;\n    box-sizing: border-box;\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\n    &:hover {\n        background-color: #eff3cf\n    }\n`;\n\nconst _SwitchInner = styled.span<{\n    isActive: boolean;\n}>`\n    color: #00109e6e;\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\n`;\n\nconst _Body = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: calc(100% - 35px);\n    background-color: #c50000;\n    outline: none;\n`;\n\nconst _Main = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    background-color: #dddddd;\n    vertical-align: top;\n`;\n\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\nimport PreviewTab from \"./preview/previewTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    // { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    // { name: 'Preview', disable: !isAccept, cont: store.scoreData.chordList.length === 0 ? <></> : <PreviewTab data={store.scoreData} /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? TheoryUtil.DEGREE12_FLAT_LIST : TheoryUtil.DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey) as TheoryUtil.SymbolParams;\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    // sampler.releaseAll();\r\n\r\n                    const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = TheoryUtil.IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        // sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                // sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useAuth0 } from \"@auth0/auth0-react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport { GlobalContext } from \"../entry/systemEntry\";\n\ntype scoreProps = {\n    dispnam: string;\n    seq: number;\n    owner: string;\n    lastmod: string;\n}\n\nconst HomeChannel = () => {\n\n    const { isAuthenticated, user, isLoading } = useAuth0();\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const [userId, setUserId] = useState('-');\n    const [userCount, setUserCount] = useState(0);\n\n    const [scoreList, setScoreList] = useState<scoreProps[]>([]);\n\n    const loginProps = store.userEnv.login;\n\n    let email = '-';\n    if (isAuthenticated && user != undefined) {\n        email = user.email ?? '-';\n    }\n\n    useEffect(() => {\n        if (store.systemState.directScore == null) {\n            countUsers().then(cnt => {\n                setUserCount(24 + cnt);\n                findAllScore().then((resList) => {\n                    setScoreList(resList as scoreProps[]);\n                });\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        if (!loginProps) {\n            setUserId('');\n        } else {\n            setUserId(loginProps.id);\n        }\n    }, [loginProps, isAuthenticated]);\n\n    const createUser = () => {\n        if (user != undefined) {\n            DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(email, id) VALUES('${user.email}', '${userId}')`).then(() => {\n                window.location.reload();\n            });\n        }\n    }\n\n    const updateUser = () => {\n        DataUtil.sendQueryRequestToAPI('update', `UPDATE user_tbl SET id = '${userId}' WHERE seq = ${loginProps?.seq}`).then(() => {\n            window.location.reload();\n        });\n    }\n\n    const registerLabel = loginProps == undefined ? 'create' : 'update';\n    const registerAction = loginProps == undefined ? createUser : updateUser;\n\n    const scoreListJsx = scoreList.map((score, i) => {\n        return (\n            <_CloudItem key={i} onClick={() => {\n                window.open(DataUtil.getPreviewURL(score.seq), '_blank');\n            }}>\n                <_Owner>{`${score.owner}`}</_Owner>\n                <_CName>{`${score.dispnam}`}</_CName><_CDate>{score.lastmod}</_CDate>\n            </_CloudItem>\n        );\n    });\n\n    return (<_Wrap>\n        <_Left>\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\n            <_Recored>\n                <_TitleLabel>User Data</_TitleLabel>\n            </_Recored>\n            <_ListInfoDiv isEnable={isAuthenticated && !isLoading}>\n                <_Recored>\n                    <_ItemnLabel>e-mail</_ItemnLabel>\n                    <_ItemnValue>{email}</_ItemnValue>\n                </_Recored>\n                <_Recored>\n                    <_ItemnLabel>user id</_ItemnLabel>\n                    <_ItemnForm type=\"text\" value={userId} onChange={(e) => {\n                        setUserId(e.target.value);\n                    }} />\n                </_Recored>\n                <_ButtonsDiv>\n                    <_Button isEnable={true} onClick={registerAction}>{registerLabel}</_Button>\n                </_ButtonsDiv>\n            </_ListInfoDiv>\n        </_Left>\n        <_Right>\n            <_MessageRecord>{scoreList.length} licresia scores have been published.</_MessageRecord>\n            <_ListFrame>{scoreListJsx}</_ListFrame>\n\n        </_Right>\n    </_Wrap>);\n}\n\nexport default HomeChannel;\n\n\nexport const countUsers = async () => {\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\n    const results = await response.json();\n    return (results as any[])[0]['cnt'] as number;\n};\n\nexport const findAllScore = async () => {\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\n        SELECT seq, (select id from user_tbl where seq = score.user_seq) as owner, dispnam, lastmod\n        FROM scoretbl score\n        WHERE share <> 'url'\n        ORDER BY lastmod desc\n    `);\n    const results = await response.json();\n    return results as any[];\n};\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: calc(100% - 8px);\n    margin: 4px 0 0 4px;\n    background-color: #ccc;\n`;\n\nconst _Left = styled.div`\n    display: inline-block;\n    width: 50%;\n    height: 100%;\n    background-color: #bbcac7;\n`;\n\n\nconst _MessageRecord = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    font-size: 22px;\n    font-weight: 600;\n    color: #cd0202;\n    background-color: #ffffff3d;\n    padding: 0 0 0 10px;\n    box-sizing: border-box;\n`;\n\nconst _ListInfoDiv = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: 400px;\n    margin: 4px 0 4px 4px;\n    background-color: #acacac;\n    border: solid 1px #1b00b3;\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.3;\n        pointer-events: none;\n    `}\n    border-radius: 4px;\n    box-sizing: border-box;\n    color: #060053;\n`;\n\nconst _TitleLabel = styled.div`\n    display: inline-block;\n    height: 40px;\n    font-size: 30px;\n    font-weight: 600;\n    color: #1c2c95;\n    /* background-color: #3f80cf57; */\n    padding: 0 10px;\n`;\nconst _Recored = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 35px;\n    /* background-color: #3fcf7b56; */\n    padding: 4px 0 0 10px;\n`;\n\nconst _ItemnLabel = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: 140px;\n    font-size: 24px;\n    line-height: 24px;\n    font-weight: 600;\n    color: #08106e;\n    border: solid 1px #1b00b3;\n    box-sizing: border-box;\n    /* background-color: #85a2c5; */\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\n    border-radius: 4px;\n    text-align: center;\n`;\n\nconst _ItemnValue = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 24px;\n    line-height: 30px;\n    user-select: text;\n    /* font-weight: 600; */\n    color: #ffffff;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #808080;\n    text-align: left;\n`;\n\nconst _ItemnForm = styled.input`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 24px;\n    line-height: 24px;\n    /* font-weight: 600; */\n    color: #1a1a1a;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #e9e9e9;\n    text-align: left;\n`;\n\nconst _ButtonsDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    /* background-color: #888888; */\n    box-sizing: border-box;\n    text-align: left;\n`;\n\nconst _Button = styled.div<{\n    isEnable: boolean;\n}>`\n    ${_CSS_LABEL_MIDIUM}\n    /* width: 160px; */\n    padding: 0 40px;\n    /* line-height: 25px; */\n    box-sizing: border-box;\n    background-color: #a8a8a8;\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\n    border: 1px solid #1a2b3f;\n    color: #1a2b3f;\n    border-radius: 4px;\n    margin: 5px 0 0 4px;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        /* background-color: #98bfc2; */\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\n    }\n`;\n\n\n\nconst _Right = styled.div`\n    display: inline-block;\n    width: 50%;\n    height: 100%;\n    background-color: #bbbfca;\n    vertical-align: top;\n`;\nconst _ListFrame = styled.div<{\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: calc(100% - 42px);\n    margin: 4px 0 0 4px;\n    background-color: #d3d3c5;\n    border: 1px solid #e60000;\n    border-radius: 4px;\n    box-sizing: border-box;\n    overflow-y: auto;\n`;\nconst _CloudItem = styled.div<{\n}>`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    /* height: 60px; */\n    border-bottom: 1px solid #888888;\n    /* background-color: white; */\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\n    margin: 2px 0 0 0;\n    padding: 0 0 0 4px;\n    box-sizing: border-box;\n    /* padding-left: 4px; */\n    &:hover {\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\n    }\n`;\n\nconst _Owner = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 20px;\n    line-height: 21px;\n    font-size: 18px;\n    font-weight: 600;\n    color: #c9494f;\n    overflow: hidden;\n    white-space: nowrap;\n`;\nconst _CName = styled.div<{\n}>`\n    display: inline-block;\n    width: calc(100% - 250px);\n    height: 35px;\n    font-size: 24px;\n    line-height: 36px;\n    font-weight: 600;\n    color: #47417c;\n    /* background-color: #f8f8e8; */\n    overflow: hidden;\n    white-space: nowrap;\n`;\nconst _CDate = styled.div<{\n}>`\n    display: inline-block;\n    width: 250px;\n    height: 35px;\n    font-size: 24px;\n    line-height: 36px;\n    font-weight: 600;\n    color: #417c49;\n    /* background-color: #f8f8e8; */\n    overflow: hidden;\n    white-space: nowrap;\n`;","import { useAuth0 } from \"@auth0/auth0-react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport { GlobalContext } from \"../entry/systemEntry\";\n\n\nconst ScoreInfoTab = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const [userId, setUserId] = useState('-');\n\n    const directScore = store.systemState.directScore;\n\n    const [owner, name] = directScore == null ? ['-', '-'] : [directScore.owner, directScore.name];\n\n    return (<_Wrap>\n        <_Left>\n            <_Recored>\n                <_TitleLabel>Score Data</_TitleLabel>\n            </_Recored>\n            <_ListInfoDiv isEnable={true}>\n                <_Recored>\n                    <_ItemnLabel>owner</_ItemnLabel>\n                    <_ItemnValue>{owner}</_ItemnValue>\n                </_Recored>\n                <_Recored>\n                    <_ItemnLabel>name</_ItemnLabel>\n                    <_ItemnValue>{name}</_ItemnValue>\n                </_Recored>\n                <_Button isEnable={true} onClick={() => {\n                    saveFile(JSON.stringify(store.scoreData));\n                }}>Download</_Button>\n            </_ListInfoDiv>\n        </_Left>\n    </_Wrap>);\n}\n\nexport default ScoreInfoTab;\n\nconst saveFile = (plainData: string) => {\n    const options = {\n        types: [\n            {\n                accept: {\n                    'text/plain': ['.lcrs'],\n                },\n            },\n        ],\n    };\n    window.showSaveFilePicker(options).then((handle) => {\n        (async () => {\n            //ファイルへ書き込むための FileSystemWritableFileStream を作成\n            const writable = await handle.createWritable();\n            //テキストデータの書き込み\n            const text = DataUtil.gZip(plainData);\n            await writable.write(text);\n            //ファイルを閉じる\n            await writable.close();\n        })();\n    }).catch(() => {\n        console.log('キャンセルされました');\n    });\n}\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: calc(100% - 8px);\n    margin: 4px 0 0 4px;\n    background-color: #ccc;\n`;\n\nconst _Left = styled.div`\n    display: inline-block;\n    width: 50%;\n    height: 100%;\n    background-color: #bbcac7;\n`;\n\nconst _ListInfoDiv = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: 400px;\n    margin: 4px 0 4px 4px;\n    background-color: #acacac;\n    border: solid 1px #1b00b3;\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.3;\n        pointer-events: none;\n    `}\n    border-radius: 4px;\n    box-sizing: border-box;\n    color: #060053;\n`;\n\nconst _TitleLabel = styled.div`\n    display: inline-block;\n    height: 40px;\n    font-size: 30px;\n    font-weight: 600;\n    color: #1c2c95;\n    /* background-color: #3f80cf57; */\n    padding: 0 10px;\n`;\nconst _Recored = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 35px;\n    /* background-color: #3fcf7b56; */\n    padding: 4px 0 0 10px;\n`;\n\nconst _ItemnLabel = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: 140px;\n    font-size: 24px;\n    line-height: 24px;\n    font-weight: 600;\n    color: #08106e;\n    border: solid 1px #1b00b3;\n    box-sizing: border-box;\n    /* background-color: #85a2c5; */\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\n    border-radius: 4px;\n    text-align: center;\n`;\n\nconst _ItemnValue = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 24px;\n    line-height: 30px;\n    user-select: text;\n    /* font-weight: 600; */\n    color: #ffffff;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #808080;\n    text-align: left;\n`;\n\nconst _ItemnForm = styled.input`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 24px;\n    line-height: 24px;\n    /* font-weight: 600; */\n    color: #1a1a1a;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #e9e9e9;\n    text-align: left;\n`;\n\nconst _ButtonsDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    background-color: #888888;\n    box-sizing: border-box;\n    text-align: left;\n`;\n\nconst _Button = styled.div<{\n    isEnable: boolean;\n}>`\n    ${_CSS_LABEL_MIDIUM}\n    /* width: 160px; */\n    padding: 0 40px;\n    /* line-height: 25px; */\n    box-sizing: border-box;\n    background-color: #a8a8a8;\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\n    border: 1px solid #1a2b3f;\n    color: #1a2b3f;\n    border-radius: 4px;\n    margin: 5px 0 0 4px;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        /* background-color: #98bfc2; */\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\n    }\n`;","import { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\nimport { GlobalContext } from \"../entry/systemEntry\";\nimport EditTab from \"../score/edit/editTab\";\nimport ScoreInfoTab from \"./scoreInfoTab\";\n\nconst PreviewChannel = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    return (\n        <_Wrap>\n            <TabbedPane\n                tabElements={[\n                    { name: 'Info', disable: false, cont: <ScoreInfoTab /> },\n                    { name: 'View', disable: false, cont: <EditTab /> },\n                ]}\n                activeNo={store.systemState.scoreTabIndex}\n            />\n        </_Wrap>\n    );\n}\n\nexport default PreviewChannel;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\n    background-color: transparent;\n    /* background-color: #c3d8dd6f; */\n    /* border: solid 1px black;\n    border-radius: 5px; */\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\n`;","import { useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        isActive={(isDisable && isCurrent) || (!isDisable && isRelationNode())}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={()=>{\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #cecece;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #a58c8c;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: block;\r\n    /* position: relative; */\r\n    background-color: #ffffff47;\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #ff454546;\r\n    `}\r\n    ${props => props.isActive ? '' : css`\r\n        background-color: transparent;\r\n        opacity: 0.5;\r\n    `}\r\n    /* width: calc(100% - 10px); */\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import styled, { css } from \"styled-components\";\nimport Styles, { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\nimport { Dispatcher } from \"../../../../redux/dispatcher/dispatcher\";\nimport ThemaUtil from \"../themaUtil\";\nimport TreeUtil from \"../treeUtil\";\n\nnamespace ThemaEditTabUtil {\n\n    export type ComponentArgs = {\n        node: TreeUtil.ElementNode;\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\n        invalidate: () => void;\n        setThamaData: React.Dispatch<React.SetStateAction<ThemaUtil.LevelBase>>;\n        setBackingWnd: (flg: boolean) => void;\n        dispatcher: Dispatcher;\n        treeDisable: boolean;\n        setTreeDisable: (treeDisable: boolean) => void;\n    }\n\n    export const InputTextForm = (props: {\n        titleLabel: string;\n        value: string;\n        isEnable?: boolean;\n        setValue: (value: string) => void;\n    }) => {\n        return (\n            <_Record isEnable={props.isEnable ?? true}>\n                <_ItemnLabel>{props.titleLabel}</_ItemnLabel>\n                <_ItemnInput type=\"text\" value={props.value} onChange={(e) => {\n                    props.setValue(e.target.value);\n                }} />\n            </_Record>\n        );\n    }\n\n    export type ComboboxItemProps = { value: string, labelText: string };\n    export const createBlankCatList = (list: ComboboxItemProps[]) => {\n        return [{ value: '', labelText: '' }].concat(list);\n    }\n    export const InputComboboxForm = (props: {\n        titleLabel: string;\n        value: string;\n        isEnable?: boolean;\n        setValue: (value: string) => void;\n        list: ComboboxItemProps[];\n    }) => {\n        return (\n            <_Record isEnable={props.isEnable ?? true}>\n                <_ItemnLabel>{props.titleLabel}</_ItemnLabel>\n                <_ItemnCombobox value={props.value} onChange={(e) => {\n                    props.setValue(e.target.value);\n                }} >{props.list.map((item, i) => {\n                    return <option key={i} value={item.value}>{item.labelText}</option>\n                })}</_ItemnCombobox>\n            </_Record>\n        );\n    }\n\n    export const LabelTextItem = (props: {\n        titleLabel: string;\n        value: string;\n    }) => {\n        return (\n            <_Record isEnable={true}>\n                <_ItemnLabel>{props.titleLabel}</_ItemnLabel>\n                <_ItemnInput readOnly type=\"text\" value={props.value} />\n            </_Record>\n        );\n    }\n\n    export const TextAreaView = (props: {\n        value: string;\n        height?: number;\n    }) => {\n        const height = props.height ?? 150;\n        return (\n            <_TextArea\n                readOnly\n                value={props.value}\n                height={height}\n            />\n        );\n    }\n\n    export const BorderPanel = (props: {\n        title: string;\n        isEnable?: boolean;\n        innerJsx: JSX.Element;\n    }) => {\n        // const title = props.title ?? 'title pl';\n        return (<>\n            <_BorderText>{props.title}</_BorderText>\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\n        </>);\n    }\n\n    export type ButtonProps = {\n        name: string;\n        isEnable?: boolean;\n        callback: () => void;\n    }\n    export const ButtonDiv = (props: {\n        buttons: ButtonProps[]\n    }) => {\n        return (\n            <_Record isEnable={true}>\n                {props.buttons.map((button, i) => {\n                    return (\n                        <_Button\n                            key={i}\n                            isEnable={button.isEnable ?? true}\n                            onClick={button.callback}\n                        >{button.name}</_Button>\n                    );\n                })}\n            </_Record>\n        );\n    }\n\n    export type ListButtonProps = {\n        label: string;\n        width: number;\n        isEnable?: boolean;\n        callback: () => void;\n    }\n\n    export const ListManager = (props: {\n        height: number;\n        records: {\n            label: string;\n            buttons: ListButtonProps[];\n        }[]\n    }) => {\n        return (\n            <_ListRecordFrame height={props.height}>\n                {props.records.map((record, i) => {\n                    const dim = record.buttons.map(button => button.width).reduce((a, b) => a + b + 2);\n                    const buttonJsxList = record.buttons.map((button, i) => {\n                        return <_ListRecordButton\n                            key={i}\n                            width={button.width}\n                            isEnable={button.isEnable ?? true}\n                            onClick={button.callback}\n                        >{button.label}</_ListRecordButton>\n                    });\n                    return (\n                        <_ListRecordItem key={i}>\n                            <_ListRecordLabel dim={dim + 2}>{record.label}</_ListRecordLabel>{buttonJsxList}\n                        </_ListRecordItem>\n                    );\n                })}\n            </_ListRecordFrame>\n        );\n    }\n}\n\nexport default ThemaEditTabUtil;\n\nconst _Record = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    /* background-color: #b3b4c4; */\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n`;\n\nconst _ItemnLabel = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: 140px;\n    font-size: 24px;\n    line-height: 28px;\n    font-weight: 600;\n    color: #08106e;\n    border: solid 1px #1b00b3;\n    box-sizing: border-box;\n    /* background-color: #85a2c5; */\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\n    border-radius: 4px;\n    text-align: center;\n    vertical-align: top;\n    margin-left: 4px;\n    margin-top: 2px;\n`;\n\nconst _ItemnInput = styled.input<{\n    readOnly?: boolean;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 150px);\n    margin-top: 2px;\n    margin-left: 4px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #1f1f1f;\n    border: solid 1px #000;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #dbdbdb;\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    ${props => !props.readOnly ? '' : css`\n        color: #020075;\n        border: none;\n        outline: none;\n        background-color: transparent;\n    `}\n`;\n\nconst _ItemnCombobox = styled.select<{\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 150px);\n    margin-top: 2px;\n    margin-left: 4px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #1f1f1f;\n    border: solid 1px #000;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #dbdbdb;\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n`;\n\nconst _ButtonsDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    /* background-color: #888888; */\n    box-sizing: border-box;\n    text-align: left;\n    white-space: nowrap;\n`;\n\nconst _Button = styled.div<{\n    isEnable: boolean;\n}>`\n    ${_CSS_LABEL_MIDIUM}\n    /* width: 160px; */\n    padding: 0 40px;\n    /* line-height: 25px; */\n    box-sizing: border-box;\n    background-color: #a8a8a8;\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\n    border: 1px solid #1a2b3f;\n    color: #1a2b3f;\n    border-radius: 4px;\n    margin-left: 4px;\n    margin-top: 2px;\n    margin: 5px 0 0 4px;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        /* background-color: #98bfc2; */\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\n    }\n`;\n\n\nconst _BorderText = styled.div<{\n}>`\n    ${_CSS_LABEL_SMALL}\n    color: #990000;\n    /* background-color: #0a0a0a40; */\n    font-style: italic;\n    margin: 4px 0 0 8px;\n`;\nconst _BorderPanel = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    margin: 0 0 0 6px;\n    padding: 4px;\n    width: calc(100% - 12px);\n    background-color: #d4d6bc;\n    border: 1px solid #000;\n    box-sizing: border-box;\n    border-radius: 4px;\n    text-align: left;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n`;\n\nconst _TextArea = styled.textarea<{\n    height: number;\n}>`\n    display: inline-block;\n    font-size: ${Styles.FONT_SMALL}px;\n    color: #0a0038;\n    background-color: #b7bcd3;\n    resize: none;\n    width: calc(100% - 8px);\n    height: ${props => props.height}px;\n    box-sizing: border-box;\n    margin: 0 0 0 4px;\n    outline: none;\n`;\n\nconst _ListRecordFrame = styled.div<{\n    height: number;\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: ${props => props.height}px;\n    margin: 4px 0 0 4px;\n    border: solid 2px #850000;\n    background-color: #bcbcbc;\n    box-sizing: border-box;\n    padding: 0 0 2px 0;\n    overflow-y: auto;\n`;\n\nconst _ListRecordItem = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 30px;\n    ${Styles.CSS_LABEL_SMALL};\n    margin: 2px 0 0 0;\n    background-color: #fff7dc;\n    text-align: left;\n    box-sizing: border-box;\n    padding-left: 4px;\n`;\n\nconst _ListRecordLabel = styled.div<{\n    dim: number;\n}>`\n    display: inline-block;\n    width: calc(100% - ${props => props.dim}px);\n    height: 100%;\n    color: #9c1e1e;\n    text-align: left;\n`;\n\nconst _ListRecordButton = styled.div<{\n    width: number;\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: ${props => props.width}px;\n    height: 100%;\n    color: #110549;\n    text-align: center;\n    background-color: #93bec3;\n    border-radius: 4px;\n    border: solid 1px #274154;\n    box-sizing: border-box;\n    margin: 0 1px;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        background-color: #b7d6d9;\n    }\n`;","import { useState, useContext, useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../../base/design/styles\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\nimport ThemaUtil from \"../themaUtil\";\nimport TreeUtil from \"../treeUtil\";\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\n\nconst AttrFormTab = (props: {\n    isPattern: boolean;\n}) => {\n    const { node, invalidate, setFocusNode, setTreeDisable } = useContext(ThemaTreeContext);\n\n    const parentNode = node.parent as TreeUtil.ElementNode;\n\n    const [attr, setAttr] = useState<'' | TheoryUtil.SymbolAttribute>('');\n    const [symbols, setSymbols] = useState<TheoryUtil.SymbolKey[]>([]);\n\n    const [errorList, setErrorList] = useState<string[]>([]);\n\n    useEffect(() => {\n        if (node.data == null) {\n            setAttr('');\n            setSymbols([]);\n        } else {\n            const data = node.data as ThemaUtil.LevelAttr;\n            setAttr(data.attr);\n            setSymbols(data.symbols.slice());\n        }\n    }, [node]);\n\n    useEffect(() => {\n        const list: string[] = [];\n        if (attr === '' || symbols.length === 0) {\n            list.push('target is none.');\n        }\n        setErrorList(list);\n    }, [attr, symbols]);\n\n    const targetSymbolList = attr === '' ? [] : TheoryUtil.getSymbolsFromAttr(attr);\n    return (<>\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"attribute\" value={attr} setValue={(value: string) => {\n            setAttr(value as TheoryUtil.SymbolAttribute);\n            setSymbols([]);\n        }} list={ThemaEditTabUtil.createBlankCatList(TheoryUtil.SymbolAttributeList.map(item => ({ value: item, labelText: item })))} />\n        <_ListDiv>\n            {targetSymbolList.map((symbol, i) => (\n                <_SymbolItem key={i}\n                    isActive={symbols.includes(symbol.key)}\n                    onClick={() => {\n                        if (!symbols.includes(symbol.key)) symbols.push(symbol.key);\n                        else symbols.splice(symbols.indexOf(symbol.key), 1);\n                        setSymbols(symbols.slice());\n                    }}\n                ><_SymbolKey>{symbol.key}</_SymbolKey> [{symbol.name}]</_SymbolItem>\n            ))}\n        </_ListDiv>\n        <ThemaEditTabUtil.BorderPanel\n            title=\"selft element\"\n            innerJsx={<>\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Update',\n                        isEnable: errorList.length === 0,\n                        callback: () => {\n                            if (node.data == null) {\n                                const attrData: ThemaUtil.LevelAttr = {\n                                    attr: attr as TheoryUtil.SymbolAttribute,\n                                    symbols: symbols.slice(),\n                                    roots: []\n                                };\n                                node.data = attrData;\n                                if (!props.isPattern) {\n                                    const parentData = parentNode.data as ThemaUtil.LevelMethod;\n                                    (parentData.defs as ThemaUtil.LevelAttr[]).push(attrData);\n                                } else {\n                                    const parentData = parentNode.data as ThemaUtil.LevelPatt;\n                                    parentData.attrs.push(attrData);\n                                }\n                                setTreeDisable(false);\n                            } else {\n                                const data = node.data as ThemaUtil.LevelAttr;\n                                data.attr = attr as TheoryUtil.SymbolAttribute;\n                                data.symbols = symbols;\n                                invalidate();\n                            }\n                        }\n                    },\n                    {\n                        name: 'Del',\n                        isEnable: true, callback: () => {\n                            setFocusNode(parentNode);\n                            const selfIndex = TreeUtil.getChildIndex(node);\n                            parentNode.children.splice(selfIndex, 1);\n                            if (!props.isPattern) {\n                                const parentData = parentNode.data as ThemaUtil.LevelMethod;\n                                (parentData.defs as ThemaUtil.LevelAttr[]).splice(selfIndex, 1);\n                            } else {\n                                const parentData = parentNode.data as ThemaUtil.LevelPatt;\n                                parentData.attrs.splice(selfIndex, 1);\n                            }\n                            setTreeDisable(false);\n                            invalidate();\n                        }\n                    },\n                ]} />\n            </>}\n        />\n        <ThemaEditTabUtil.BorderPanel\n            title=\"children element\"\n            isEnable={node.data != null}\n            innerJsx={<>\n                <ThemaEditTabUtil.LabelTextItem titleLabel=\"Child\" value={'Root Element'} />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Add',\n                        isEnable: true, callback: () => {\n                            // const rootData: ThemaUtil.LevelRoot = {\n                            //     minIdx: 0,\n                            //     maxIdx: 11,\n                            //     voics: []\n                            // };\n                            // data.roots.push(rootData);\n                            const newNode = TreeUtil.createNode(null, node);\n                            node.children.push(newNode);\n                            setFocusNode(newNode);\n                            setTreeDisable(true);\n                        }\n                    },\n                    {\n                        name: 'Del',\n                        isEnable: true, callback: () => {\n                            const data = node.data as ThemaUtil.LevelAttr;\n                            node.children = [];\n                            data.roots = [];\n                            invalidate();\n                        }\n                    },\n                ]} />\n            </>}\n        />\n    </>);\n}\n\nexport default AttrFormTab;\n\n\nconst _ListDiv = styled.div`\n    display: inline-block;\n    background-color: #e3ecee;\n    width: calc(100% - 8px);\n    min-height: 50px;\n    margin: 4px 0 0 4px;\n    box-sizing: border-box;\n    border: 1px solid #26242c;\n    padding: 0 4px 4px 0;\n`;\n\nconst _SymbolItem = styled.div<{\n    isActive: boolean;\n}>`\n    display: inline-block;\n    background-color: #a2bcc2;\n    ${props => !props.isActive ? '' : css`\n        background-color: #dee058;\n    `}\n    ${Styles.CSS_LABEL_SMALL}\n    color: #4f59b3;\n    padding: 0 10px;\n    margin: 4px 0 0 4px;\n    box-sizing: border-box;\n    border: 1px solid #697ab3;\n    border-radius: 5px;\n    &:hover {\n        background-color: #c2d5da;\n        ${props => !props.isActive ? '' : css`\n            background-color:#c2c461;\n        `}\n    }\n`;\n\nconst _SymbolKey = styled.span`\n    color: #d65d5d;\n`;","import { useState, useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Styles from \"../../../../base/design/styles\";\nimport DataUtil from \"../../../../utils/dataUtil\";\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\nimport ThemaUtil from \"../themaUtil\";\nimport TreeUtil from \"../treeUtil\";\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\n\nconst BaseFormTab = (props: {\n    themaList: ThemaUtil.LevelBase[];\n    addThema: (thema: ThemaUtil.LevelBase) => void;\n}) => {\n    const { node, invalidate, setThamaData } = useContext(ThemaTreeContext);\n    const data = node.data as ThemaUtil.LevelBase;\n    const [themaName, setThemaName] = useState(data.themaName);\n\n    const [errorList, setErrorList] = useState<string[]>([]);\n\n    useEffect(() => {\n        const list: string[] = [];\n        if (themaName === '') {\n            list.push('name is empty.');\n        }\n        setErrorList(list);\n    }, [themaName]);\n\n    return (<>\n        <ThemaEditTabUtil.ButtonDiv buttons={[\n            {\n                name: 'Export',\n                isEnable: true, callback: () => {\n                    const options = {\n                        types: [\n                            {\n                                accept: {\n                                    'text/plain': ['.lcrt'],\n                                },\n                            },\n                        ],\n                    };\n\n                    window.showSaveFilePicker(options).then((handle) => {\n                        (async () => {\n                            //ファイルへ書き込むための FileSystemWritableFileStream を作成\n                            const writable = await handle.createWritable();\n                            //テキストデータの書き込み\n                            const text = DataUtil.gZip(JSON.stringify(data));\n                            await writable.write(text);\n                            //ファイルを閉じる\n                            await writable.close();\n                        })();\n                    }).catch(() => {\n                        console.log('キャンセルされました');\n                    });\n\n                }\n            },\n            {\n                name: 'Import',\n                isEnable: true, callback: () => {\n                    (async () => {\n                        const [fileHandle] = await window.showOpenFilePicker();\n                        const file = await fileHandle.getFile();\n                        const fileContents = await file.text();\n                        const text = DataUtil.unZip(fileContents);\n                        const themaData = JSON.parse(text);\n                        setThamaData(themaData);\n                        node.data = themaData;\n                        console.log(JSON.stringify(node.data));\n                        invalidate();\n                    })();\n                }\n            }\n        ]} />\n        {/* <ThemaEditTabUtil.ButtonDiv buttons={[\n            {\n                name: 'Clear',\n                isEnable: true, callback: () => {\n                    data.meths[0].defs = [];\n                    data.meths[1].defs = [];\n                    invalidate();\n                }\n            }\n        ]} /> */}\n        <ThemaEditTabUtil.InputTextForm titleLabel=\"name\" value={themaName} setValue={(value: string) => {\n            setThemaName(value);\n        }} />\n        <ThemaEditTabUtil.BorderPanel\n            title=\"selft operatioon\"\n            innerJsx={<>\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Update',\n                        isEnable: errorList.length === 0,\n                        callback: () => {\n                            data.themaName = themaName;\n                            invalidate();\n                        }\n                    },\n                ]} />\n            </>}\n        />\n        <ThemaEditTabUtil.BorderPanel\n            title=\"install\"\n            innerJsx={<>\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Install',\n                        isEnable: !props.themaList.map(thema => thema.themaName).includes(data.themaName),\n                        callback: () => {\n                            props.addThema(data);\n                        }\n                    }\n                ]} />\n                <ThemaEditTabUtil.ListManager\n                    height={140}\n                    records={props.themaList.map((thema, i) => {\n                        return {\n                            label: thema.themaName, buttons: [\n                                {\n                                    label: '↓', width: 30,\n                                    isEnable: i < props.themaList.length - 1,\n                                    callback: () => {\n                                        const cache = props.themaList[i];\n                                        props.themaList[i] = props.themaList[i + 1];\n                                        props.themaList[i + 1] = cache;\n                                        invalidate();\n                                    },\n                                },\n                                {\n                                    label: '↑', width: 30,\n                                    isEnable: i > 0,\n                                    callback: () => {\n                                        const cache = props.themaList[i];\n                                        props.themaList[i] = props.themaList[i - 1];\n                                        props.themaList[i - 1] = cache;\n                                        invalidate();\n                                    },\n                                },\n                                {\n                                    label: 'Load', width: 50, isEnable: false, callback: () => {\n\n                                    },\n                                },\n                                {\n                                    label: 'Delete', width: 60, callback: () => {\n                                        props.themaList.splice(i, 1);\n                                        invalidate();\n                                    },\n                                },\n                            ]\n                        };\n                    })}\n                />\n            </>}\n        />\n    </>);\n}\n\nexport default BaseFormTab;\n\n","import { useState, useContext, useEffect, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport Styles from \"../../../../base/design/styles\";\nimport DataUtil from \"../../../../utils/dataUtil\";\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\nimport ThemaUtil from \"../themaUtil\";\nimport TreeUtil from \"../treeUtil\";\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\n\nconst MethFormTab = (props: {\n}) => {\n    const { node, setFocusNode, invalidate, setTreeDisable } = useContext(ThemaTreeContext);\n    const data = node.data as ThemaUtil.LevelMethod;\n\n    const [presetName, setPresetName] = useState<string>('');\n    const [prenams, setPrenams] = useState<ThemaUtil.Prenam[]>([]);\n\n    const [nextPresetSeq, setNextPresetSeq] = useState(-1);\n\n    const incrementNextPresetSeq = () => { setNextPresetSeq(nextPresetSeq + 1) };\n\n    const isSustMeth = node == node.parent?.children[0];\n\n    useEffect(() => {\n        setPrenams(data.prenams.slice());\n\n        setNextPresetSeq(data.prenams.length === 0 ? 0 : (\n            // 最大値 + 1を帰す\n            data.prenams.map(pre => pre.seq).reduce((prev, cur) => {\n                return prev < cur ? cur : prev;\n            }, -1) + 1\n        ));\n    }, [node]);\n\n    return (<>\n        <ThemaEditTabUtil.LabelTextItem titleLabel=\"Method\" value={isSustMeth ? 'Sustain' : 'Pattern'} />\n        <ThemaEditTabUtil.BorderPanel\n            title=\"preset define\"\n            innerJsx={<>\n                <ThemaEditTabUtil.InputTextForm titleLabel=\"Preset\" value={presetName} setValue={(value: string) => {\n                    setPresetName(value);\n                }} />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Add',\n                        isEnable: presetName !== '' && !prenams.map(p => p.name).includes(presetName),\n                        callback: () => {\n                            prenams.push({\n                                name: presetName,\n                                seq: nextPresetSeq\n                            });\n                            setPrenams(prenams.slice());\n                            setPresetName('');\n                            incrementNextPresetSeq();\n                        }\n                    },\n                ]} />\n                <ThemaEditTabUtil.ListManager\n                    height={140}\n                    records={prenams.map((prenam, i) => {\n                        return {\n                            label: `${prenam.seq}: ${prenam.name}`, buttons: [\n                                {\n                                    label: '↓', width: 30,\n                                    isEnable: i < prenams.length - 1,\n                                    callback: () => {\n                                        const cache = prenams[i];\n                                        prenams[i] = prenams[i + 1];\n                                        prenams[i + 1] = cache;\n                                        setPrenams(prenams.slice());\n                                    },\n                                },\n                                {\n                                    label: '↑', width: 30,\n                                    isEnable: i > 0,\n                                    callback: () => {\n                                        const cache = prenams[i];\n                                        prenams[i] = prenams[i - 1];\n                                        prenams[i - 1] = cache;\n                                        setPrenams(prenams.slice());\n                                    },\n                                },\n                                {\n                                    label: 'Delete', width: 60, callback: () => {\n                                        prenams.splice(i, 1);\n                                        setPrenams(prenams.slice());\n                                    },\n                                },\n                            ]\n                        };\n                    })} />\n            </>} />\n        <ThemaEditTabUtil.BorderPanel\n            title=\"selft operatioon\"\n            innerJsx={<>\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Update',\n                        isEnable: true, callback: () => {\n                            data.prenams = prenams.slice();\n                            invalidate();\n                        }\n                    },\n                ]} />\n            </>}\n        />\n        <ThemaEditTabUtil.BorderPanel\n            title=\"children operatioon\"\n            innerJsx={<>\n                <ThemaEditTabUtil.LabelTextItem titleLabel=\"Child\" value={(isSustMeth ? 'Sustain' : 'Pattern') + ' Element'} />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Add',\n                        isEnable: true, callback: () => {\n                            // let newData: any = null;\n                            // if (isSustMeth) {\n                            //     const attrData: ThemaUtil.LevelAttr = {\n                            //         attr: 'triad',\n                            //         symbols: [],\n                            //         roots: []\n                            //     };\n                            //     (data.defs as ThemaUtil.LevelAttr[]).push(attrData);\n                            //     newData = attrData;\n                            // } else {\n                            //     const sustData: ThemaUtil.LevelSust = {\n                            //         beat: 4,\n                            //         head: 0,\n                            //         tail: 0,\n                            //         patts: []\n                            //     };\n                            //     (data.defs as ThemaUtil.LevelSust[]).push(sustData);\n                            //     newData = sustData;\n                            // }\n                            const newNode = TreeUtil.createNode(null, node);\n                            node.children.push(newNode);\n                            setFocusNode(newNode);\n                            setTreeDisable(true);\n                        }\n                    },\n                    {\n                        name: 'Del',\n                        isEnable: true, callback: () => {\n                            node.children = [];\n                            data.defs = [];\n                            invalidate();\n                        }\n                    },\n                ]} />\n            </>}\n        />\n    </>);\n}\n\nexport default MethFormTab;\n\n","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\nimport { BackingPatternProps, ChordBacking } from \"../../../../redux/store/score/scoreData\";\nimport BackingUtil from \"../../../../utils/backingUtil\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\nimport ThemaUtil from \"../themaUtil\";\nimport TreeUtil from \"../treeUtil\";\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\n\nconst PattFormTab = () => {\n\n    const { node, invalidate, setFocusNode, dispatcher, setBackingWnd, setTreeDisable } = useContext(ThemaTreeContext);\n\n    const parentNode = node.parent as TreeUtil.ElementNode;\n    const parentData = parentNode.data as ThemaUtil.LevelSust;\n    const sustData = node.parent?.data as ThemaUtil.LevelSust;\n    const metData = node.parent?.parent?.data as ThemaUtil.LevelMethod;\n\n    const [pattName, setPattName] = useState('');\n    // const [key, setKey] = useState('');\n    const [refer, setRefer] = useState('');\n    const [rootIndex, setRootIndex] = useState(0);\n    const [symbolKey, setSymbolKsy] = useState<TheoryUtil.SymbolKey>('major');\n    const [source, setSource] = useState<string>('');\n\n    const [errorList, setErrorList] = useState<string[]>([]);\n\n    // ツリー選択時の初期化\n    useEffect(() => {\n        if (node.data == null) {\n            setPattName('');\n            // setKey('');\n            setRefer('');\n            setRootIndex(0);\n            setSymbolKsy('major');\n            setSource('');\n        } else {\n            const data = node.data as ThemaUtil.LevelPatt;\n            setPattName(data.pattName);\n            // setKey(data.key);\n            setRefer(data.refer === -1 ? '' : data.refer.toString());\n            setRootIndex(0);\n            setSymbolKsy('major');\n            setSource(JSON.stringify(data.source));\n        }\n    }, [node]);\n\n    const key = useMemo(() => {\n\n        if (node.data == null) {\n            return parentData.patts.map(patt => patt.key).reduce((prev, cur) => {\n                return prev < cur ? cur : prev;\n            }, -1) + 1;\n        } else {\n            const data = node.data as ThemaUtil.LevelPatt;\n            return data.key;\n        }\n    }, [node]);\n\n    useEffect(() => {\n        const list: string[] = [];\n        if (pattName === '') {\n            list.push('name is empty.');\n        }\n        if (source === '') {\n            list.push('source is empty.');\n        }\n        setErrorList(list);\n    }, [pattName, key, refer, source]);\n\n    /** ディペンドされているパターンの有無 */\n    const hasDepend = useMemo(()=> {\n        let result = false;\n        if(node.data != null) {\n            const data = node.data as ThemaUtil.LevelPatt;\n            return parentData.patts.find(patt=> {\n                return patt.refer === data.key;\n            }) != undefined;\n        }\n        return result;\n    }, [node]);\n\n    /** ディペンドを許可するパターンのキーリスト */\n    const permitDependKeys: number[] = useMemo(() => {\n        if (source === '') return [];\n        const channelSize = (JSON.parse(source) as BackingPatternProps).channelSize;\n        return sustData.patts.filter(patt => {\n            const useDepend = patt.refer !== -1;\n            const matchChannel = patt.source.channelSize === channelSize;\n            return patt.key !== key && matchChannel && !useDepend;\n        }).map(patt => {\n            return patt.key;\n        });\n    }, [node, source]);\n\n    /** チャンネルサイズを取得 */\n    const getChannelSize = () => {\n        if (source === '') return '-';\n        else {\n            const pattern = JSON.parse(source) as BackingPatternProps;\n            return pattern.channelSize;\n        }\n    }\n\n    const getInitialPattern = () => ({\n        channelSize: 1,\n        layers: [\n            {\n                divs: [{ rate: 4, div3: 0, isDot: false }],\n                notesList: [],\n                vels: [5]\n            },\n            {\n                divs: [{ rate: 4, div3: 0, isDot: false }],\n                notesList: [],\n                vels: [5]\n            }\n        ]\n    });\n\n    /** 子要素の有無 */\n    const hasChild = () => {\n        if (node.data != null) {\n            const data = node.data as ThemaUtil.LevelPatt;\n            return data.attrs.length >= 1;\n        }\n        return false;\n    }\n\n    return (<>\n        <ThemaEditTabUtil.LabelTextItem\n            titleLabel=\"key\" value={key.toString()}\n        />\n        <ThemaEditTabUtil.InputTextForm titleLabel=\"name\" value={pattName} setValue={(value: string) => {\n            setPattName(value);\n        }} />\n        <ThemaEditTabUtil.BorderPanel\n            title=\"source\"\n            isEnable={true}\n            innerJsx={<>\n                <ThemaEditTabUtil.InputComboboxForm titleLabel=\"root\" value={rootIndex.toString()} setValue={(value: string) => {\n                    setRootIndex(Number.parseInt(value));\n                }} list={TheoryUtil.KEY12_SHARP_LIST.map((key12, idx) => (\n                    { value: idx.toString(), labelText: key12 }\n                ))} />\n                <ThemaEditTabUtil.InputComboboxForm titleLabel=\"symbol\" value={symbolKey} setValue={(value: string) => {\n                    setSymbolKsy(value as TheoryUtil.SymbolKey);\n                }} list={TheoryUtil.SYMBOL_LIST.map((symbol) => (\n                    { value: symbol.key, labelText: `${symbol.key}: [${symbol.name}]` }\n                ))} />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Edit',\n                        isEnable: true, callback: () => {\n                            const pattern = source === '' ? getInitialPattern() : JSON.parse(source);\n                            const chordBacking: ChordBacking = {\n                                pattern,\n                                voicingList: []\n                            }\n                            dispatcher.thema.openBackingEditor(\n                                sustData.beat, sustData.head, sustData.tail, symbolKey, rootIndex, chordBacking,\n                                (editor: BackingState.Editor) => {\n                                    if (editor.pattern != null) {\n                                        const chordPattern = BackingUtil.buildPatternProps(editor.pattern);\n                                        setSource(JSON.stringify(chordPattern));\n                                    }\n                                },\n                                () => {\n                                    setBackingWnd(false);\n                                }\n                            );\n                            setBackingWnd(true);\n                        }\n                    },\n                ]} />\n                <ThemaEditTabUtil.TextAreaView value={source} />\n                <ThemaEditTabUtil.LabelTextItem\n                    titleLabel=\"channel\"\n                    value={(() => {\n                        return getChannelSize()\n                    })().toString()}\n                />\n            </>}\n        />\n        <ThemaEditTabUtil.InputComboboxForm\n            titleLabel=\"depend\" value={refer}\n            // ディペンドされていないかつ、子要素が存在しない場合のみ活性化\n            isEnable={!hasDepend && !hasChild()}\n            setValue={(value: string) => {\n                setRefer(value);\n            }} list={[''].concat(permitDependKeys.map(p => p.toString())).map(key => (\n                { value: key, labelText: key }\n            ))} />\n        <ThemaEditTabUtil.BorderPanel\n            title=\"selft operatioon\"\n            innerJsx={<>\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Update',\n                        isEnable: errorList.length === 0,\n                        callback: () => {\n                            if (node.data == null) {\n                                const pattData: ThemaUtil.LevelPatt = {\n                                    pattName,\n                                    source: JSON.parse(source),\n                                    key,\n                                    refer: refer === '' ? -1 : Number(refer),\n                                    attrs: []\n                                };\n                                node.data = pattData;\n                                parentData.patts.push(pattData);\n                                setTreeDisable(false);\n                            } else {\n                                const data = node.data as ThemaUtil.LevelPatt;\n                                data.pattName = pattName;\n                                data.source = JSON.parse(source);\n                                data.key = key;\n                                data.refer = refer === '' ? -1 : Number(refer);\n                                invalidate();\n                            }\n                        }\n                    },\n                    {\n                        name: 'Del',\n                        isEnable: true, callback: () => {\n                            setFocusNode(parentNode);\n                            const selfIndex = TreeUtil.getChildIndex(node);\n                            if(node.data != null) {\n                                const data = node.data as ThemaUtil.LevelPatt;\n                                // 他のパターンからディペンドされていた場合、解除する\n                                parentData.patts.forEach(patt=> {\n                                    if(patt.refer === data.key) patt.refer = -1;\n                                });\n                            }\n                            parentNode.children.splice(selfIndex, 1);\n                            parentData.patts.splice(selfIndex, 1);\n                            setTreeDisable(false);\n                            invalidate();\n                        }\n                    },\n                ]} />\n            </>}\n        />\n        <ThemaEditTabUtil.BorderPanel\n            title=\"children operatioon\"\n            isEnable={node.data != null && refer === ''}\n            innerJsx={<>\n                <ThemaEditTabUtil.LabelTextItem titleLabel=\"Child\" value={'Attribute Element'} />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Add',\n                        isEnable: true,\n                        callback: () => {\n                            // const attrData: ThemaUtil.LevelAttr = {\n                            //     attr: 'triad',\n                            //     symbols: [],\n                            //     roots: []\n                            // };\n                            // data.attrs.push(attrData);\n                            const newNode = TreeUtil.createNode(null, node);\n                            node.children.push(newNode);\n                            setFocusNode(newNode);\n                            setTreeDisable(true);\n                        }\n                    },\n                    {\n                        name: 'Del',\n                        isEnable: true,\n                        callback: () => {\n                            const data = node.data as ThemaUtil.LevelPatt;\n                            node.children = [];\n                            data.attrs = [];\n                            invalidate();\n                        }\n                    },\n                ]} />\n            </>}\n        />\n    </>);\n}\n\nexport default PattFormTab;\n","import { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\nimport ThemaUtil from \"../themaUtil\";\nimport TreeUtil from \"../treeUtil\";\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\n\nconst RootFormTab = () => {\n    const { node, setFocusNode, invalidate, setTreeDisable } = useContext(ThemaTreeContext);\n\n    const parentNode = node.parent as TreeUtil.ElementNode;\n    const parentData = parentNode.data as ThemaUtil.LevelAttr;\n    // const data = node.data as ThemaUtil.LevelRoot;\n\n    const [minIdx, setMinIdx] = useState<string>('');\n    const [maxIdx, setMaxIdx] = useState<string>('');\n\n    const [errorList, setErrorList] = useState<string[]>([]);\n\n    useEffect(() => {\n        if (node.data == null) {\n            setMinIdx('');\n            setMaxIdx('');\n        } else{\n            const data = node.data as ThemaUtil.LevelRoot;\n            setMinIdx(data.minIdx.toString());\n            setMaxIdx(data.maxIdx.toString());\n        }\n    }, [node]);\n\n    useEffect(() => {\n        const list: string[] = [];\n        if (minIdx === '' || maxIdx === '') {\n            list.push('min or max form is null.');\n            // return;\n        } else if (Number(minIdx) > Number(maxIdx)) {\n            list.push('min is upper than max.');\n        }\n        setErrorList(list);\n    }, [minIdx, maxIdx]);\n\n    return (<>\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"minIdx\" value={minIdx.toString()} setValue={(value: string) => {\n            setMinIdx(value);\n        }} list={ThemaEditTabUtil.createBlankCatList(TheoryUtil.KEY12_SHARP_LIST.map((key12, idx) => (\n            { value: idx.toString(), labelText: key12 }\n        )))} />\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"maxIdx\" value={maxIdx.toString()} setValue={(value: string) => {\n            setMaxIdx(value);\n        }} list={ThemaEditTabUtil.createBlankCatList(TheoryUtil.KEY12_SHARP_LIST.map((key12, idx) => (\n            { value: idx.toString(), labelText: key12 }\n        )))} />\n        <ThemaEditTabUtil.BorderPanel\n            title=\"selft operatioon\"\n            innerJsx={<>\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Update',\n                        isEnable: errorList.length === 0,\n                        callback: () => {\n                            if (node.data == null) {\n                                const rootData: ThemaUtil.LevelRoot = {\n                                    minIdx: Number(minIdx),\n                                    maxIdx: Number(maxIdx),\n                                    voics: []\n                                };\n                                node.data = rootData;\n                                parentData.roots.push(rootData);\n                                setTreeDisable(false);\n                            } else {\n                                const data = node.data as ThemaUtil.LevelRoot;\n                                data.minIdx = Number(minIdx);\n                                data.maxIdx = Number(maxIdx);\n                                invalidate();\n                            }\n                        }\n                    },\n                    {\n                        name: 'Del',\n                        isEnable: true, callback: () => {\n                            setFocusNode(parentNode);\n                            const selfIndex = TreeUtil.getChildIndex(node);\n                            parentNode.children.splice(selfIndex, 1);\n                            parentData.roots.splice(selfIndex, 1);\n                            setTreeDisable(false);\n                            invalidate();\n                        }\n                    },\n                ]} />\n            </>}\n        />\n        <ThemaEditTabUtil.BorderPanel\n            title=\"children operatioon\"\n            isEnable={node.data != null}\n            innerJsx={<>\n                <ThemaEditTabUtil.LabelTextItem titleLabel=\"Child\" value={'Voicing Element'} />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Add',\n                        isEnable: true,\n                        callback: () => {\n                            // const voicData: ThemaUtil.LevelVoic = {\n                            //     source: [],\n                            //     presets: []\n                            // };\n                            // data.voics.push(voicData);\n                            const newNode = TreeUtil.createNode(null, node);\n                            node.children.push(newNode);\n                            setFocusNode(newNode);\n                            setTreeDisable(true);\n                        }\n                    },\n                    {\n                        name: 'Del',\n                        isEnable: true,\n                        callback: () => {\n                            const data = node.data as ThemaUtil.LevelRoot;\n                            node.children = [];\n                            data.voics = [];\n                            invalidate();\n                        }\n                    },\n                ]} />\n            </>}\n        />\n    </>);\n}\n\nexport default RootFormTab;\n","import { useState, useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ChordBacking } from \"../../../../redux/store/score/scoreData\";\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\nimport ThemaUtil from \"../themaUtil\";\nimport TreeUtil from \"../treeUtil\";\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\n\nconst SustFormTab = (props: {\n}) => {\n    const { node, invalidate, setFocusNode, setTreeDisable } = useContext(ThemaTreeContext);\n    const data = node.data as ThemaUtil.LevelSust;\n\n    const parentNode = node.parent as TreeUtil.ElementNode;\n    const parentData = parentNode.data as ThemaUtil.LevelMethod;\n\n    const [beat, setBeat] = useState('');\n    const [head, setHead] = useState('');\n    const [tail, setTail] = useState('');\n\n    const [errorList, setErrorList] = useState<string[]>([]);\n\n    useEffect(() => {\n        if (node.data == null) {\n            setBeat('');\n            setHead('0');\n            setTail('0');\n        } else {\n            const data = node.data as ThemaUtil.LevelSust;\n            setBeat(data.beat.toString());\n            setHead(data.head.toString());\n            setTail(data.tail.toString());\n        }\n    }, [node]);\n\n    useEffect(() => {\n        const list: string[] = [];\n        if (beat === '') {\n            list.push('beat is empty.');\n        }\n        if (head === '') {\n            list.push('head is empty.');\n        }\n        if (tail === '') {\n            list.push('tail is empty.');\n        }\n        setErrorList(list);\n    }, [beat, head, tail]);\n\n    return (<>\n\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"beat\" value={beat.toString()}\n            list={['', 1, 2, 3, 4].map(v => ({ value: v.toString(), labelText: v.toString() }))}\n            setValue={(value: string) => {\n                setBeat(value);\n            }} />\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"head\" value={head.toString()}\n            list={['', -2, -1, 0, 1, 2].map(v => ({ value: v.toString(), labelText: v.toString() }))}\n            setValue={(value: string) => {\n                setHead(value);\n            }} />\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"tail\" value={tail.toString()}\n            list={['', -2, -1, 0, 1, 2].map(v => ({ value: v.toString(), labelText: v.toString() }))}\n            setValue={(value: string) => {\n                setTail(value);\n            }} />\n        <ThemaEditTabUtil.BorderPanel\n            title=\"selft element\"\n            innerJsx={<>\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Update',\n                        isEnable: errorList.length === 0,\n                        callback: () => {\n                            if (node.data == null) {\n                                const sustData: ThemaUtil.LevelSust = {\n                                    beat: Number(beat),\n                                    head: Number(head),\n                                    tail: Number(tail),\n                                    patts: []\n                                };\n                                node.data = sustData;\n                                (parentData.defs as ThemaUtil.LevelSust[]).push(sustData);\n                                setTreeDisable(false);\n                            } else {\n                                const data = node.data as ThemaUtil.LevelSust;\n                                data.beat = Number(beat);\n                                data.head = Number(head);\n                                data.tail = Number(tail);\n                                invalidate();\n                            }\n                            invalidate();\n                        }\n                    },\n                    {\n                        name: 'Del',\n                        isEnable: true, callback: () => {\n                            setFocusNode(parentNode);\n                            const selfIndex = TreeUtil.getChildIndex(node);\n                            parentNode.children.splice(selfIndex, 1);\n                            parentData.defs.splice(selfIndex, 1);\n                            setTreeDisable(false);\n                            invalidate();\n                        }\n                    },\n                ]} />\n            </>}\n        />\n        <ThemaEditTabUtil.BorderPanel\n            title=\"children element\"\n            isEnable={node.data != null}\n            innerJsx={<>\n                <ThemaEditTabUtil.LabelTextItem titleLabel=\"Child\" value={'Pattern Element'} />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Add',\n                        isEnable: true, callback: () => {\n                            const newNode = TreeUtil.createNode(null, node);\n                            node.children.push(newNode);\n                            setFocusNode(newNode);\n                            setTreeDisable(true);\n                        }\n                    },\n                    {\n                        name: 'Del',\n                        isEnable: true, callback: () => {\n                            node.children = [];\n                            data.patts = [];\n                            invalidate();\n                        }\n                    },\n                ]} />\n            </>}\n        />\n    </>);\n}\n\nexport default SustFormTab;\n\n","import { useContext, useState, useEffect, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\nimport { ChordBacking, VoicingProps } from \"../../../../redux/store/score/scoreData\";\nimport BackingUtil from \"../../../../utils/backingUtil\";\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\nimport ThemaUtil from \"../themaUtil\";\nimport TreeUtil from \"../treeUtil\";\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\n\nconst VoicFormTab = (props: {\n    isPattern: boolean;\n}) => {\n    const { node, invalidate, dispatcher, setBackingWnd, setFocusNode, setTreeDisable } = useContext(ThemaTreeContext);\n    // const data = node.data as ThemaUtil.LevelVoic;\n    const methData = !props.isPattern ?\n        // method sustain\n        node.parent?.parent?.parent?.data as ThemaUtil.LevelMethod :\n        // method pattern\n        node.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod;\n    const sustData = !props.isPattern ? null : node.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelSust;\n    const pattData = !props.isPattern ? null : node.parent?.parent?.parent?.data as ThemaUtil.LevelPatt;\n    const attrData = node.parent?.parent?.data as ThemaUtil.LevelAttr;\n    const rootData = node.parent?.data as ThemaUtil.LevelRoot;\n\n    // if(props.isPattern) console.log(data.source); \n    const [rootIndex, setRootIndex] = useState(0);\n    const [symbolKey, setSymbolKey] = useState<TheoryUtil.SymbolKey>('major');\n    const [source, setSource] = useState('');\n    const [depPattKey, setDepPattKey] = useState('');\n    const [preset, setPreset] = useState('');\n    const [preUsies, setPreUsies] = useState<ThemaUtil.PresetUse[]>([]);\n\n    const [errorList, setErrorList] = useState<string[]>([]);\n\n\n    /** 親要素の条件でフィルターしたシンボルリスト */\n    const symbolList = useMemo(() => {\n        return TheoryUtil.SYMBOL_LIST.filter(\n            (symbol) => attrData.symbols.includes(symbol.key)\n        );\n    }, []);\n    useEffect(() => {\n        if (node.data == null) {\n            setRootIndex(rootData.minIdx);\n            setSymbolKey(symbolList[0].key);\n            setSource('');\n            setDepPattKey('');\n            setPreset('');\n            setPreUsies([]);\n        } else {\n            const data = node.data as ThemaUtil.LevelVoic;\n            setRootIndex(rootData.minIdx);\n            setSymbolKey(symbolList[0].key);\n            setSource(JSON.stringify(data.source));\n            setDepPattKey('');\n            setPreset('');\n            setPreUsies(data.preUsies.slice());\n        }\n    }, [node]);\n\n    const depPatts = useMemo(() => {\n        if (sustData == null || pattData == null) {\n            return null;\n        } else {\n            const curPattKey = pattData.key;\n            return sustData.patts.filter(patt => {\n                return patt.key !== curPattKey && patt.refer === curPattKey;\n            });\n        }\n    }, [node]);\n\n    useEffect(() => {\n        const list: string[] = [];\n        if (source === '') {\n            list.push('source is null.');\n        }\n        setErrorList(list);\n    }, [source]);\n\n    const editorUpdate = (editor: BackingState.Editor) => {\n        const voicSrc = BackingUtil.getVoicingListFromTable(editor.voicingTable);\n        setSource(JSON.stringify(voicSrc));\n        setBackingWnd(false);\n    };\n    const editorClose = () => {\n        setBackingWnd(false);\n    };\n\n    const getPresetNameFromKey = (seq: number) => {\n        const target = methData.prenams.find(prenam => prenam.seq === seq) as ThemaUtil.Prenam;\n        return target.name;\n    }\n\n    return (<>\n        <ThemaEditTabUtil.BorderPanel\n            title=\"source\"\n            isEnable={true}\n            innerJsx={<>\n                <ThemaEditTabUtil.InputComboboxForm titleLabel=\"root\" value={rootIndex.toString()} setValue={(value: string) => {\n                    setRootIndex(Number.parseInt(value));\n                }} list={TheoryUtil.KEY12_SHARP_LIST.filter((key12, i) => {\n                    return i >= rootData.minIdx && i <= rootData.maxIdx;\n                }).map((key12, idx) => (\n                    // フィルターしたリストから連番を取得するため、ルートの最小値を加算\n                    { value: (idx + rootData.minIdx).toString(), labelText: key12 }\n                ))} />\n                <ThemaEditTabUtil.InputComboboxForm titleLabel=\"symbol\" value={symbolKey} setValue={(value: string) => {\n                    setSymbolKey(value as TheoryUtil.SymbolKey);\n                }} list={symbolList.map((symbol) => (\n                    { value: symbol.key, labelText: `${symbol.key}: [${symbol.name}]` }\n                ))} />\n                <ThemaEditTabUtil.LabelTextItem\n                    titleLabel=\"channel\"\n                    value={pattData == null ? '-' : pattData.source.channelSize.toString()}\n                />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Edit',\n                        isEnable: true,\n                        callback: () => {\n                            const voicingList = JSON.parse(source !== '' ? source : '[]') as VoicingProps[];\n                            if (pattData == null || sustData == null) {\n                                // サスティンバッキング\n                                const chordBacking: ChordBacking = {\n                                    pattern: null,\n                                    voicingList\n                                }\n                                dispatcher.thema.openBackingEditor(\n                                    4, 0, 0, symbolKey, rootIndex, chordBacking,\n                                    editorUpdate,\n                                    editorClose\n                                );\n                            } else {\n                                // パターンバッキング\n                                const chordBacking: ChordBacking = {\n                                    pattern: pattData.source,\n                                    voicingList\n                                }\n                                dispatcher.thema.openBackingEditor(\n                                    sustData.beat, sustData.head, sustData.tail, symbolKey, rootIndex, chordBacking,\n                                    editorUpdate,\n                                    editorClose\n                                );\n                            }\n                            setBackingWnd(true);\n                        }\n                    },\n                ]} />\n                <ThemaEditTabUtil.TextAreaView value={source} />\n                {/* <ThemaEditTabUtil.LabelTextItem\n                    titleLabel=\"List\"\n                    value={(() => {\n                        return source.map(v => {\n                            return `${v.octave}-${v.struct}`;\n                        }).join(', ');\n                    })()}\n                /> */}\n            </>}\n        />\n        <ThemaEditTabUtil.BorderPanel\n            title=\"preset use\"\n            innerJsx={<>\n                <ThemaEditTabUtil.InputComboboxForm\n                    titleLabel=\"Depend\"\n                    // パターンメソッドの時のみ活性化\n                    isEnable={pattData != null}\n                    value={depPattKey}\n                    setValue={(value: string) => {\n                        setDepPattKey(value);\n                    }}\n                    list={[{ value: '', labelText: '' }].concat((depPatts ?? []).map(patt => ({\n                        labelText: `${patt.key}: ${patt.pattName}`,\n                        value: patt.key.toString()\n                    })))}\n                />\n                <ThemaEditTabUtil.InputComboboxForm\n                    titleLabel=\"Preset\" value={preset}\n                    setValue={(value: string) => {\n                        setPreset(value);\n                    }}\n                    list={[{ value: '', labelText: '' }].concat(methData.prenams.filter(prenam => {\n                        // return !preUsies.map(preUse => `${preUse.depPatt},${preUse.presKey}`).includes(`${depPattKey === '' ? -1 : depPattKey},${prenam.seq}`);\n                        return !preUsies.map(preUse => preUse.presKey).includes(prenam.seq);\n                    }).map(preset => ({\n                        labelText: `${preset.seq}: ${preset.name}`,\n                        value: preset.seq.toString()\n                    })))}\n                />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Add',\n                        isEnable: preset !== '',\n                        callback: () => {\n                            preUsies.push({\n                                depPatt: depPattKey === '' ? -1 : Number(depPattKey),\n                                presKey: Number(preset)\n                            });\n                            setPreUsies(preUsies.slice());\n                            setDepPattKey('');\n                            setPreset('');\n                        }\n                    },\n                ]} />\n                <ThemaEditTabUtil.ListManager\n                    height={100}\n                    records={preUsies.map((preUse, i) => {\n                        return {\n                            label: `${preUse.depPatt === -1 ? '' : preUse.depPatt + '@'}[${getPresetNameFromKey(preUse.presKey)}]`,\n                            buttons: [\n                                {\n                                    label: '↓', width: 30,\n                                    isEnable: i < preUsies.length - 1,\n                                    callback: () => {\n                                        const cache = preUsies[i];\n                                        preUsies[i] = preUsies[i + 1];\n                                        preUsies[i + 1] = cache;\n                                        setPreUsies(preUsies.slice());\n                                    },\n                                },\n                                {\n                                    label: '↑', width: 30,\n                                    isEnable: i > 0,\n                                    callback: () => {\n                                        const cache = preUsies[i];\n                                        preUsies[i] = preUsies[i - 1];\n                                        preUsies[i - 1] = cache;\n                                        setPreUsies(preUsies.slice());\n                                    },\n                                },\n                                {\n                                    label: 'Delete', width: 60, callback: () => {\n                                        preUsies.splice(i, 1);\n                                        setPreUsies(preUsies.slice());\n                                    },\n                                },\n                            ]\n                        };\n                    })}\n                />\n            </>}\n        />\n        <ThemaEditTabUtil.BorderPanel\n            title=\"selft element\"\n            innerJsx={<>\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\n                <ThemaEditTabUtil.ButtonDiv buttons={[\n                    {\n                        name: 'Update',\n                        isEnable: errorList.length === 0,\n                        callback: () => {\n                            if (node.data == null) {\n                                const voicData: ThemaUtil.LevelVoic = {\n                                    source: JSON.parse(source),\n                                    preUsies: preUsies.slice()\n                                };\n                                node.data = voicData;\n                                rootData.voics.push(voicData);\n                                setTreeDisable(false);\n                            } else {\n                                const data = node.data as ThemaUtil.LevelVoic;\n                                data.source = JSON.parse(source);\n                                data.preUsies = preUsies.slice();\n                                invalidate();\n                            }\n                        }\n                    },\n                    {\n                        name: 'Del',\n                        isEnable: true, callback: () => {\n                            const parentNode = node.parent as TreeUtil.ElementNode;\n                            const parentData = parentNode.data as ThemaUtil.LevelRoot;\n                            setFocusNode(parentNode);\n                            const selfIndex = TreeUtil.getChildIndex(node);\n                            parentNode.children.splice(selfIndex, 1);\n                            parentData.voics.splice(selfIndex, 1);\n                            setTreeDisable(false);\n                            invalidate();\n                        }\n                    },\n                ]} />\n            </>}\n        />\n    </>);\n}\n\nexport default VoicFormTab;","import { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport Styles from \"../../../base/design/styles\";\nimport TheoryUtil from \"../../../utils/theoryUtil\";\nimport ThemaUtil from \"./themaUtil\";\nimport TreeUtil from \"./treeUtil\";\n\nconst HierarchyNavi = (props: {\n    cur: TreeUtil.ElementNode | null;\n}) => {\n\n    const jsx = useMemo(() => {\n        if (props.cur == null) return <></>;\n        const list: JSX.Element[] = [];\n\n        const connect = (isCreaet: boolean, addInfo: () => void) => {\n            list.push(<span key={list.length}>{` > `}</span>);\n            if (isCreaet) list.push(<_Create key={list.length}>Create...</_Create>);\n            else {\n                addInfo();\n            }\n        }\n\n        /**\n         * 基本情報のJSXを追加する\n         * @param data データ\n         */\n        const addBaseInfo = (data: ThemaUtil.LevelBase) => {\n            list.push(<_Base key={list.length}>[{data.themaName}]</_Base>);\n        }\n        /**\n         * メソッド情報のJSXを追加する\n         * @param data データ\n         */\n        const addMethInfo = (data: ThemaUtil.LevelMethod) => {\n            connect(data == null, () => {\n                list.push(<_Meth key={list.length}>[{data.method}]</_Meth>);\n            });\n        }\n        /**\n         * 拍情報のJSXを追加する\n         * @param data データ\n         */\n        const addSustInfo = (data: ThemaUtil.LevelSust) => {\n            connect(data == null, () => {\n                list.push(<_Sust key={list.length}>[{data.beat}* ({data.head},{data.tail})]</_Sust>);\n            });\n\n        }\n        /**\n         * パターン情報のJSXを追加する\n         * @param data データ\n         */\n        const addPattInfo = (data: ThemaUtil.LevelPatt) => {\n            connect(data == null, () => {\n                list.push(<_Patt key={list.length}>{data.key}: [{data.pattName} channel: {data.source.channelSize}]</_Patt>);\n            });\n        }\n        /**\n         * 属性情報のJSXを追加する\n         * @param data データ\n         */\n        const addAttrInfo = (data: ThemaUtil.LevelAttr) => {\n            connect(data == null, () => {\n                const symbolNameList = data.symbols.map(symbol => (\n                    `[${TheoryUtil.getSymbolFromKey(symbol)?.name}]`\n                ));\n                list.push(<_Attr key={list.length}>@{data.attr}: {symbolNameList.join(', ')}</_Attr>);\n            });\n        }\n        /**\n         * ルート情報のJSXを追加する\n         * @param data データ\n         */\n        const addRootInfo = (data: ThemaUtil.LevelRoot) => {\n            connect(data ==null, () => {\n                const nameList = TheoryUtil.KEY12_SHARP_LIST;\n                list.push(<_Root key={list.length}>[{nameList[data.minIdx]}～{nameList[data.maxIdx]}]</_Root>);\n            });\n        }\n        /**\n         * ボイシング情報のJSXを追加する\n         * @param data データ\n         */\n        const addVoicInfo = (data: ThemaUtil.LevelVoic) => {\n            connect(data == null, () => {\n                list.push(<_Voic key={list.length}>[{data.source.map(v => {\n                    return `${v.octave}-${v.struct}`;\n                }).join(', ')}]</_Voic>);\n            });\n        }\n\n        // 選択されたノードに応じて、階層構造を表示する\n        switch (props.cur.depth) {\n            case 0: {\n                addBaseInfo(props.cur.data as ThemaUtil.LevelBase);\n            } break;\n            case 1: {\n                addBaseInfo(props.cur.parent?.data as ThemaUtil.LevelBase);\n                addMethInfo(props.cur.data as ThemaUtil.LevelMethod);\n            } break;\n            case 2: {\n                addBaseInfo(props.cur.parent?.parent?.data as ThemaUtil.LevelBase);\n\n                const methData = props.cur.parent?.data as ThemaUtil.LevelMethod;\n                addMethInfo(methData);\n                switch (methData.method) {\n                    case 'sustain': {\n                        addAttrInfo(props.cur.data as ThemaUtil.LevelAttr);\n                    } break;\n                    case 'pattern': {\n                        addSustInfo(props.cur.data as ThemaUtil.LevelSust);\n                    } break;\n                }\n            } break;\n            case 3: {\n                addBaseInfo(props.cur.parent?.parent?.parent?.data as ThemaUtil.LevelBase);\n\n                const methData = props.cur.parent?.parent?.data as ThemaUtil.LevelMethod;\n                addMethInfo(methData);\n                switch (methData.method) {\n                    case 'sustain': {\n                        addAttrInfo(props.cur.parent?.data as ThemaUtil.LevelAttr);\n                        addRootInfo(props.cur.data as ThemaUtil.LevelRoot);\n                    } break;\n                    case 'pattern': {\n                        addSustInfo(props.cur.parent?.data as ThemaUtil.LevelSust);\n                        addPattInfo(props.cur.data as ThemaUtil.LevelPatt);\n                    } break;\n                }\n            } break;\n            case 4: {\n                addBaseInfo(props.cur.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelBase);\n\n                const methData = props.cur.parent?.parent?.parent?.data as ThemaUtil.LevelMethod;\n                addMethInfo(methData);\n                switch (methData.method) {\n                    case 'sustain': {\n                        addAttrInfo(props.cur.parent?.parent?.data as ThemaUtil.LevelAttr);\n                        addRootInfo(props.cur.parent?.data as ThemaUtil.LevelRoot);\n                        addVoicInfo(props.cur.data as ThemaUtil.LevelVoic);\n                    } break;\n                    case 'pattern': {\n                        addSustInfo(props.cur.parent?.parent?.data as ThemaUtil.LevelSust);\n                        addPattInfo(props.cur.parent?.data as ThemaUtil.LevelPatt);\n                        addAttrInfo(props.cur.data as ThemaUtil.LevelAttr);\n                    } break;\n                }\n            } break;\n            case 5: {\n                addBaseInfo(props.cur.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelBase);\n\n                const methData = props.cur.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod;\n                addMethInfo(methData);\n                switch (methData.method) {\n                    case 'sustain': {\n\n                    } break;\n                    case 'pattern': {\n                        addSustInfo(props.cur.parent?.parent?.parent?.data as ThemaUtil.LevelSust);\n                        addPattInfo(props.cur.parent?.parent?.data as ThemaUtil.LevelPatt);\n                        addAttrInfo(props.cur.parent?.data as ThemaUtil.LevelAttr);\n                        addRootInfo(props.cur.data as ThemaUtil.LevelRoot);\n                    } break;\n                }\n            } break;\n            case 6: {\n                addBaseInfo(props.cur.parent?.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelBase);\n\n                const methData = props.cur.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod;\n                addMethInfo(methData);\n                switch (methData.method) {\n                    case 'sustain': {\n\n                    } break;\n                    case 'pattern': {\n                        addSustInfo(props.cur.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelSust);\n                        addPattInfo(props.cur.parent?.parent?.parent?.data as ThemaUtil.LevelPatt);\n                        addAttrInfo(props.cur.parent?.parent?.data as ThemaUtil.LevelAttr);\n                        addRootInfo(props.cur.parent?.data as ThemaUtil.LevelRoot);\n                        addVoicInfo(props.cur.data as ThemaUtil.LevelVoic);\n                    } break;\n                }\n            } break;\n        }\n        return list;\n    }, [props.cur]);\n\n    return (\n        <_Wrap>\n            <_TextField>{jsx}</_TextField>\n        </_Wrap>\n    );\n};\n\nexport default HierarchyNavi;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    background-color: #eeeeee3b;\n    border: 1px solid #402cad;\n    width: calc(100% - 8px);\n    height: calc(100% - 8px);\n    margin: 4px 0 0 4px;\n    box-sizing: border-box;\n    overflow: hidden;\n    /* text-align: right; */\n`;\n\nconst _TextField = styled.div`\n    ${Styles.CSS_LABEL_MIDIUM}\n    margin: 0 0 0 4px;\n    color: #0000005a;\n    font-weight: 400;\n`;\nconst _Create = styled.span`\n    color: #e69d00;\n`;\n\nconst _Base = styled.span`\n    color: #0c6900;\n`;\n\nconst _Meth = styled.span`\n    color: #23237e;\n`;\n\nconst _Sust = styled.span`\n    color: #7e5723;\n`;\nconst _Patt = styled.span`\n    color: #7e7223;\n`;\nconst _Attr = styled.span`\n    color: #7e2323;\n`;\nconst _Root = styled.span`\n    color: #79237e;\n`;\nconst _Voic = styled.span`\n    color: #237c7e;\n`;","import styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport { BackingPatternProps, VoicingProps } from \"../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport TreeUtil from \"./treeUtil\";\r\n\r\nnamespace ThemaUtil {\r\n\r\n    export type Method = 'sustain' | 'pattern';\r\n\r\n    export type LevelAttr = {\r\n        attr: TheoryUtil.SymbolAttribute;\r\n        symbols: TheoryUtil.SymbolKey[];\r\n        roots: LevelRoot[];\r\n    }\r\n    export type LevelRoot = {\r\n        minIdx: number;\r\n        maxIdx: number;\r\n        voics: LevelVoic[];\r\n    }\r\n    export type PresetUse = {\r\n        presKey: number;\r\n        depPatt: number;\r\n    }\r\n    export type LevelVoic = {\r\n        source: VoicingProps[];\r\n        preUsies: PresetUse[];\r\n    }\r\n\r\n    export type LevelPatt = {\r\n        key: number;\r\n        pattName: string;\r\n        source: BackingPatternProps;\r\n        refer: number;\r\n        attrs: LevelAttr[];\r\n    }\r\n    export type LevelSust = {\r\n        beat: number;\r\n        head: number;\r\n        tail: number;\r\n        patts: LevelPatt[];\r\n    }\r\n\r\n    export type Prenam = {\r\n        seq: number;\r\n        name: string;\r\n    }\r\n    export type LevelMethod = {\r\n        method: Method;\r\n        prenams: Prenam[];\r\n        defs: LevelAttr[] | LevelSust[];\r\n    }\r\n\r\n    export type LevelBase = {\r\n        themaName: string;\r\n        meths: LevelMethod[];\r\n    }\r\n\r\n    export const getLabelJsx = (node: TreeUtil.ElementNode, isActive: boolean) => {\r\n        let innderJsx = <></>;\r\n\r\n        const setBaseJsx = () => {\r\n            const data = node.data as ThemaUtil.LevelBase;\r\n            innderJsx = (<>\r\n                <_TypeLabel type='base'>Base</_TypeLabel>\r\n                <_Label>{data.themaName}</_Label>\r\n            </>);\r\n        }\r\n        const setMethJsx = () => {\r\n            const data = node.data as ThemaUtil.LevelMethod;\r\n            innderJsx = (<>\r\n                <_TypeLabel type='method'>Method</_TypeLabel>\r\n                <_Label>{data.method}</_Label>\r\n            </>);\r\n        }\r\n        const setAttrJsx = () => {\r\n            const getMainLabel = () => {\r\n                if (node.data == null) {\r\n                    return <_Label><_Create>Create...</_Create></_Label>\r\n                } else {\r\n                    const data = node.data as ThemaUtil.LevelAttr;\r\n                    const list = data.symbols.map(symbol => (\r\n                        `[${TheoryUtil.getSymbolFromKey(symbol)?.name}]`\r\n                    ));\r\n                    return <_Label>@{data.attr}: <_C_Symbol>{list.join(', ')}</_C_Symbol></_Label>;\r\n                }\r\n            };\r\n            innderJsx = (<>\r\n                <_TypeLabel type='attr'>Attribute</_TypeLabel>\r\n                {getMainLabel()}\r\n            </>);\r\n        }\r\n        const setSustJsx = () => {\r\n            const getMainLabel = () => {\r\n                if (node.data == null) {\r\n                    return <_Label><_Create>Create...</_Create></_Label>\r\n                } else {\r\n                    const data = node.data as ThemaUtil.LevelSust;\r\n                    return <_Label>[{data.beat}* ({data.head},{data.tail})]</_Label>\r\n                }\r\n            };\r\n            innderJsx = (<>\r\n                <_TypeLabel type='sustain'>Sustain</_TypeLabel>\r\n                {getMainLabel()}\r\n            </>);\r\n        }\r\n        const setRootJsx = () => {\r\n            const getMainLabel = () => {\r\n                if (node.data == null) {\r\n                    return <_Label><_Create>Create...</_Create></_Label>\r\n                } else {\r\n                    const data = node.data as ThemaUtil.LevelRoot;\r\n                    const nameList = TheoryUtil.KEY12_SHARP_LIST;\r\n                    return <_Label>[{nameList[data.minIdx]}～{nameList[data.maxIdx]}]</_Label>;\r\n                }\r\n            };\r\n            innderJsx = (<>\r\n                <_TypeLabel type='root'>Root</_TypeLabel>\r\n                {getMainLabel()}\r\n            </>);\r\n        }\r\n        const setPattJsx = () => {\r\n            const getMainLabel = () => {\r\n                if (node.data == null) {\r\n                    return <_Label><_Create>Create...</_Create></_Label>\r\n                } else {\r\n                    const data = node.data as ThemaUtil.LevelPatt;\r\n                    const refers = (node.parent?.data as LevelSust).patts.map(patt => patt.refer);\r\n                    // 参照されていた場合masterを表示\r\n                    const master = !refers.includes(data.key) ? '' : ' master';\r\n                    const depend = data.refer === -1 ? '' : ` depend: ${data.refer}`;\r\n                    return (<_Label>\r\n                        <_P_Key>{data.key}</_P_Key>: [{data.pattName} <_P_Channel> channel: {data.source.channelSize}</_P_Channel>]\r\n                        <_P_Master>{master}</_P_Master>\r\n                        <_P_Depend>{depend}</_P_Depend>\r\n                    </_Label>);\r\n                }\r\n            };\r\n            innderJsx = (<>\r\n                <_TypeLabel type='pattern'>Pattern</_TypeLabel>\r\n                {getMainLabel()}\r\n            </>);\r\n        }\r\n        const setVoicJsx = () => {\r\n            const getMainLabel = () => {\r\n                if (node.data == null) {\r\n                    return <_Label><_Create>Create...</_Create></_Label>\r\n                } else {\r\n                    const data = node.data as ThemaUtil.LevelVoic;\r\n                    return <_Label>[{data.source.map(v => {\r\n                        return `${v.octave}-${v.struct}`;\r\n                    }).join(', ')}]</_Label>\r\n                }\r\n            };\r\n            innderJsx = (<>\r\n                <_TypeLabel type='voicing'>Voicing</_TypeLabel>\r\n                {getMainLabel()}\r\n            </>);\r\n        }\r\n        switch (node.depth) {\r\n            case 0: setBaseJsx(); break;\r\n            case 1: setMethJsx(); break;\r\n            case 2: {\r\n                const method = (node.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'sustain': setAttrJsx(); break;\r\n                    case 'pattern': setSustJsx(); break;\r\n                }\r\n            } break;\r\n            case 3: {\r\n                const method = (node.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'sustain': setRootJsx(); break;\r\n                    case 'pattern': setPattJsx(); break;\r\n                }\r\n            } break;\r\n            case 4: {\r\n                const method = (node.parent?.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'sustain': setVoicJsx(); break;\r\n                    case 'pattern': setAttrJsx(); break;\r\n                }\r\n            } break;\r\n            case 5: {\r\n                const method = (node.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'pattern': setRootJsx(); break;\r\n                }\r\n            } break;\r\n            case 6: {\r\n                const method = (node.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'pattern': setVoicJsx(); break;\r\n                }\r\n            } break;\r\n        }\r\n        return <_NodeFrame isActive={isActive}>{innderJsx}</_NodeFrame>\r\n    }\r\n\r\n    export const getInitialThema = (): LevelBase => {\r\n        return {\r\n            themaName: 'test',\r\n            meths: [\r\n                {\r\n                    method: 'sustain',\r\n                    prenams: [],\r\n                    defs: [\r\n                    ]\r\n                },\r\n                {\r\n                    method: 'pattern',\r\n                    prenams: [],\r\n                    defs: [\r\n                    ]\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\r\n\r\nexport default ThemaUtil;\r\n\r\n\r\nconst _CSS_FONT = css`\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    height: calc(100% - 8px);\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _TypeLabel = styled.div<{\r\n    type: 'base' | 'method' | 'pattern' | 'sustain' | 'attr' | 'root' | 'voicing'\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    ${_CSS_FONT}\r\n    color: #660000;\r\n    background-color: ${props => {\r\n        switch (props.type) {\r\n            case 'base': return '#6fa480';\r\n            case 'method': return '#7779a2';\r\n            case 'sustain': return '#c7a67e';\r\n            case 'pattern': return '#9b77a2';\r\n            case 'attr': return '#b67575';\r\n            case 'root': return '#a2a177';\r\n            case 'voicing': return '#779ea2';\r\n        }\r\n    }};\r\n    padding: 0 15px;\r\n    border-radius: 5px;\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    ${_CSS_FONT}\r\n    color: #6d1717;\r\n    background-color: #ffffff49;\r\n    padding: 0 10px;\r\n    margin-left: 5px;\r\n`;\r\nconst _C_Symbol = styled.span`\r\n    color: #959595;\r\n`;\r\nconst _P_Master = styled.span`\r\n    color: #d40101;\r\n`;\r\nconst _P_Depend = styled.span`\r\n    color: #0300cc;\r\n`;\r\nconst _Create = styled.span`\r\n    color: #fff9c2;\r\n`;\r\nconst _P_Channel = styled.span`\r\n    color: #d3701381;\r\n`;\r\nconst _P_Key = styled.span`\r\n    color: #868686;\r\n`;\r\n\r\nconst _NodeFrame = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    padding: 0 5px;\r\n    height: 100%;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fffb0077;\r\n    `}\r\n`;","import { useContext, useState, useEffect, useMemo, createContext, KeyboardEvent } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport BackingEditorFrame from \"../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport BackingEditorInput from \"../../score/edit/harmonize/input/backingEditorInput\";\r\nimport AttrFormTab from \"./form/attrFormTab\";\r\nimport BaseFormTab from \"./form/baseFormTab\";\r\nimport MethFormTab from \"./form/methFormTab\";\r\nimport PattFormTab from \"./form/pattFormTab\";\r\nimport RootFormTab from \"./form/rootFormTab\";\r\nimport SustFormTab from \"./form/sustFormTab\";\r\nimport ThemaEditTabUtil from \"./form/themaEditTabUtil\";\r\nimport VoicFormTab from \"./form/voicFormTab\";\r\nimport HierarchyNavi from \"./hierarchyNavi\";\r\nimport ThemaUtil from \"./themaUtil\";\r\nimport TreeUtil from \"./treeUtil\";\r\n\r\n\r\nexport const ThemaTreeContext = createContext({} as ThemaEditTabUtil.ComponentArgs);\r\n\r\nconst BackingLibraryTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [themaData, setThamaData] = useState(ThemaUtil.getInitialThema());\r\n    // const [isDispEditor, setDispEditor] = useState(true);\r\n\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    const [isBackingWnd, setBackingWnd] = useState(false);\r\n    const [treeDisable, setTreeDisable] = useState(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    // テーマファイルをデータノードに変換する\r\n    const rootDataNode = useMemo(() => {\r\n        const rootNode: TreeUtil.DataNode = {\r\n            data: themaData,\r\n            children: themaData.meths.map(type => {\r\n                const getDefsChildren = () => {\r\n                    switch (type.method) {\r\n                        case 'sustain': {\r\n                            return (type.defs as ThemaUtil.LevelAttr[]).map(attr => ({\r\n                                data: attr,\r\n                                children: attr.roots.map(root => ({\r\n                                    data: root,\r\n                                    children: root.voics.map(voic => ({\r\n                                        data: voic,\r\n                                        children: []\r\n                                    }))\r\n                                }))\r\n                            }));\r\n                        }\r\n                        case 'pattern': {\r\n                            return (type.defs as ThemaUtil.LevelSust[]).map(sust => ({\r\n                                data: sust,\r\n                                children: sust.patts.map(patt => ({\r\n                                    data: patt,\r\n                                    children: patt.attrs.map(attr => ({\r\n                                        data: attr,\r\n                                        children: attr.roots.map(roots => ({\r\n                                            data: roots,\r\n                                            children: roots.voics.map(voic => ({\r\n                                                data: voic,\r\n                                                children: []\r\n                                            }))\r\n                                        }))\r\n                                    }))\r\n                                }))\r\n                            }));\r\n                        }\r\n                    }\r\n                }\r\n                return {\r\n                    data: type,\r\n                    children: getDefsChildren()\r\n                }\r\n            })\r\n        }\r\n        return rootNode;\r\n    }, [themaData]);\r\n\r\n    const activeNo = useMemo<number>(() => {\r\n        if (focusNode != null) {\r\n            switch (focusNode.depth) {\r\n                case 0: {\r\n                    return 0;\r\n                }\r\n                case 1: {\r\n                    return 1;\r\n                }\r\n                case 2: {\r\n                    const method = (focusNode.parent?.data as ThemaUtil.LevelMethod).method;\r\n                    return method === 'sustain' ? 4 : 2;\r\n                }\r\n                case 3: {\r\n                    const method = (focusNode.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                    return method === 'sustain' ? 5 : 3;\r\n                }\r\n                case 4: {\r\n                    const method = (focusNode.parent?.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                    return method === 'sustain' ? 6 : 4;\r\n                }\r\n                case 5: {\r\n                    return 5;\r\n                }\r\n                case 6: {\r\n                    return 6;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }, [focusNode]);\r\n\r\n    const tabInner = (tabIndex: number, contJsx: JSX.Element) => {\r\n        return (\r\n            activeNo === tabIndex ? <_TabContWrap>{contJsx}</_TabContWrap> : <></>\r\n        )\r\n    }\r\n    // const tabProps: {\r\n\r\n    // }[] = [];\r\n    // const getTabContList = () => {\r\n    //     tabProps.map((props) => {\r\n\r\n    //         return {\r\n    //             name: 'base',\r\n    //             disable: true,\r\n    //             cont: tabInner(0, <BaseFormTab />\r\n    //             )\r\n    //         };\r\n    //     });\r\n    // };\r\n    // const tabContList = getTabContList();\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e: KeyboardEvent) => {\r\n                BackingEditorInput.main(e, store, dispatcher);\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <HierarchyNavi cur={focusNode}/>\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return ThemaUtil.getLabelJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={treeDisable}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <ThemaTreeContext.Provider value={{\r\n                    node: focusNode as TreeUtil.ElementNode,\r\n                    setFocusNode: setFocusNode,\r\n                    invalidate: () => { setInvalidate({}) },\r\n                    setBackingWnd,\r\n                    dispatcher,\r\n                    treeDisable,\r\n                    setThamaData,\r\n                    setTreeDisable\r\n                }}>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            {\r\n                                name: 'base', disable: true, cont: tabInner(0, <BaseFormTab\r\n                                    themaList={store.systemState.themaList}\r\n                                    addThema={(thema: ThemaUtil.LevelBase) => {\r\n                                        const themaList = store.systemState.themaList;\r\n                                        themaList.push(JSON.parse(JSON.stringify(thema)));\r\n                                        dispatcher.system.setState({ ...store.systemState, themaList });\r\n                                    }}\r\n                                />)\r\n                            },\r\n                            { name: 'Method', disable: true, cont: tabInner(1, <MethFormTab />) },\r\n                            { name: 'Sustain', disable: true, cont: tabInner(2, <SustFormTab />) },\r\n                            { name: 'Pattern', disable: true, cont: tabInner(3, <PattFormTab />) },\r\n                            { name: 'Attribute', disable: true, cont: tabInner(4, <AttrFormTab isPattern={focusNode?.depth === 4} />) },\r\n                            { name: 'Root', disable: true, cont: tabInner(5, <RootFormTab />) },\r\n                            { name: 'voicing', disable: true, cont: tabInner(6, <VoicFormTab isPattern={focusNode?.depth === 6} />) },\r\n                        ]}\r\n                        tabRecordNum={2}\r\n                        activeNo={activeNo}\r\n                        selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n                    />\r\n                </ThemaTreeContext.Provider>\r\n            </_PropsDiv>\r\n            <_Blind isVisible={isBackingWnd}>\r\n                <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n            </_Blind>\r\n        </_Wrap >\r\n    );\r\n}\r\nexport default BackingLibraryTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c3d8dd;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #532fc0; */\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n    padding: 6px 6px 6px 0;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;","import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport BackingLibraryTab from \"./backing/backingLibraryTab\";\r\n\r\n\r\nconst CustomChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Backing-Library', disable: true, cont: <BackingLibraryTab /> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={0}\r\n                // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CustomChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\nimport { GlobalContext } from \"./systemEntry\";\nimport { AiFillHome } from 'react-icons/ai';\nimport { CgOptions, CgPiano } from 'react-icons/cg';\nimport { GiMusicalScore } from 'react-icons/gi';\nimport { ImPlay } from 'react-icons/im';\nimport { VscSettingsGear } from 'react-icons/vsc';\nimport ScoreChannel from \"../score/scoreChannel\";\nimport SettingChannel from \"../setting/settingChannel\";\nimport PerformChannel from \"../perform/performChannel\";\nimport HomeChannel from \"../home/homeChannel\";\nimport PreviewChannel from \"../preview/previewChannel\";\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport { ScoreData } from \"../../redux/store/score/scoreData\";\nimport CacheUtil from \"../../utils/cacheUtil\";\nimport CustomChannel from \"../custom/customChannel\";\n\nconst MainFrame = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    return (\n        <HashRouter basename={process.env.PUBLIC_URL}>\n            <RouterManage />\n        </HashRouter>\n    );\n}\n\nexport default MainFrame;\n\nconst RouterManage = () => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const query = new URLSearchParams(useLocation().search);\n    const str = query.get('v') as string;\n\n    const isDirect = store.systemState.directScore != null;\n    return (\n        <Switch>\n            <Route path=\"/\" exact>\n                <_Wrap>\n                    {/* <DraggableDialog /> */}\n                    {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\n                    <ChannelPane\n                        tabElements={[\n                            { name: 'Home', icon: <AiFillHome />, isEnable: !isDirect, cont: <HomeChannel /> },\n                            { name: 'Perform', icon: <CgPiano />, isEnable: false, cont: <PerformChannel /> },\n                            { name: 'Score', icon: <GiMusicalScore />, isEnable: !isDirect, cont: <ScoreChannel /> },\n                            { name: 'Custom', icon: <VscSettingsGear />, isEnable: !isDirect, cont: <CustomChannel /> },\n                            { name: 'Setting', icon: <CgOptions />, isEnable: false, cont: <SettingChannel /> },\n                            { name: 'Preview', icon: <ImPlay />, isEnable: isDirect, cont: !isDirect ? <></> : <PreviewChannel /> }\n                        ]}\n                        activeNo={store.systemState.mainChannelIndex}\n                        selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\n                    />\n                </_Wrap>\n            </Route>\n            <Route path=\"/test\" exact >\n                <_Wrap>\n                </_Wrap>\n            </Route>\n            <Route path=\"/preview\" exact >\n                <DirectView hashKey={str} />\n            </Route>\n        </Switch>\n    );\n}\n\nconst DirectView = (props: {\n    hashKey: string;\n}) => {\n\n    const { store, dispatcher } = useContext(GlobalContext);\n    const conteseq = DataUtil.getDecryptionedScoreSeq(props.hashKey);\n\n    const setScoreData = (owner: string, dispnam: string, data: ScoreData) => {\n        store.scoreState.focusIndex = 2;\n        store.scoreState.distIndex = store.scoreState.focusIndex;\n        dispatcher.score.setScoreState({ ...store.scoreState });\n        // dispatcher.score.setScoreTabIndex(1);\n        dispatcher.score.setScoreData(data);\n        // キャッシュの更新\n        store.scoreData = data;\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\n        store.systemState.mainChannelIndex = 5;\n        store.systemState.scoreTabIndex = 0;\n        store.systemState.directScore = {\n            owner, name: dispnam\n        };\n        dispatcher.system.setState(store.systemState);\n    };\n\n    useEffect(() => {\n        DataUtil.findScore(conteseq).then(resList => {\n            if (resList.length > 0) {\n                const source = resList[0]['data'];\n                const owner = resList[0]['owner'];\n                const dispnam = resList[0]['dispnam'];\n                const text = DataUtil.unZip(source);\n                setScoreData(owner, dispnam, JSON.parse(text));\n            }\n        });\n    }, []);\n    if (store.systemState.directScore == null) {\n        return <></>;\n    } else {\n        return <Redirect to=\"/\" />;\n        // return <MainFrame />;\n    }\n}\n\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\n    background-color: transparent;\n    /* background-color: #c3d8dd6f; */\n    /* border: solid 1px black;\n    border-radius: 5px; */\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","import styled, { css } from \"styled-components\";\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\nimport { ImUser } from 'react-icons/im'\nimport { MdOutlineLanguage } from 'react-icons/md'\nimport { useContext, useEffect, useState } from \"react\";\nimport { GlobalContext } from \"./systemEntry\";\nimport LoginFrame from \"../login/loginFrame\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport PatternOptions from \"../backing/pattern/patternOptions\";\n\nconst TotalHeader = () => {\n\n    const { loginWithRedirect, isAuthenticated, logout, user } = useAuth0();\n    const { store, dispatcher } = useContext(GlobalContext);\n\n    const [userId, setUserId] = useState('');\n\n    useEffect(() => {\n        console.log(window.location.origin);\n        if (user != undefined && user.email != undefined) {\n            DataUtil.findUserInfo(user.email).then(userList => {\n                console.log(userList);\n                if (userList.length > 0) {\n                    const userProps = userList[0];\n                    store.userEnv.login = {\n                        seq: userProps.seq,\n                        id: userProps.id\n                    }\n                    dispatcher.system.setUserEnv(store.userEnv);\n                    setUserId('@' + userProps.id);\n                } else {\n                    setUserId('unregistered');\n                }\n            });\n        }\n        console.log(user);\n    }, [user]);\n\n    const authButtonJsx = !isAuthenticated ? (\n        <_LoginButton onClick={() => {\n            // store.systemState.dialog = <LoginFrame />;\n            // dispatcher.system.setState(store.systemState);\n            console.log(window.location.origin);\n            loginWithRedirect();\n        }}>\n            <div><ImUser /></div>\n            Login / Sign up\n        </_LoginButton>\n    ) : (<>\n        <_UserName isEntry={store.userEnv.login != undefined}>{userId}</_UserName>\n        <_LoginButton onClick={() => {\n            logout();\n        }}>\n            <div><ImUser /></div>\n            Logout\n        </_LoginButton>\n    </>);\n    return (\n        <_Wrap>\n            <_Label>\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\n            </_Label>\n            <_Menu>\n                {authButtonJsx}\n                <_Language>\n                    <div><MdOutlineLanguage /></div>\n                </_Language>\n            </_Menu>\n        </_Wrap>\n    );\n}\n\nexport default TotalHeader;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: ${TOTAL_HEADER_WIDTH}px;\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\n    /* background-color: #c2c2c2; */\n    box-shadow: 0 0 8px 0 #000b3a48;\n`;\n\nconst _Label = styled.div`\n    display: inline-block;\n    margin: 2px 0 0 10px;\n    width: 200px;\n    height: calc(100% - 4px);\n    /* background-color: #00000013; */\n    font-size: 34px;\n    font-weight: 600;\n    line-height: 36px;\n    text-shadow: 1px 2px 3px #8080806a;\n`;\n\nconst _NORMAL = styled.span`\n    color: #ffffff;\n`;\nconst _ACCENT = styled.span`\n    font-size: 34px;\n    color: #da4242;\n`;\n\n\n\nconst _Menu = styled.div`\n    display: inline-block;\n    /* width: 300px; */\n    height: 100%;\n    position: absolute;\n    right: 30px;\n    /* background-color: #ff00002b; */\n`\n\nconst _MenuItem = styled.div`\n    background-color: #c9c7c7;\n    &:hover {\n        background-color: #cf9bae;\n    }\n    transition: background-color 800ms;\n`\n\nconst _LoginButton = styled(_MenuItem)`\n    display: inline-block;\n    /* width: 240px; */\n    padding: 0 30px;\n    margin: 5px 10px 0 0;\n    height: calc(100% - 10px);\n    border-radius: 20px;\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\n    /* background-color: #adadad; */\n    /* border: 1px solid #7e7e7e; */\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\n    /* text-shadow: 1px 2px 3px #808080ba; */\n    text-align: center;\n    font-size: 22px;\n    font-weight: 600;\n    line-height: 28px;\n    color: #ffffff;\n    vertical-align: top;\n\n    & div {\n        display: inline-block;\n        /* background-color: #0000007d; */\n        margin: 2px 5px 0 0;\n        vertical-align: top;\n    }\n`;\n\nconst _UserName = styled.div<{\n    isEntry: boolean;\n}>`\n    display: inline-block;\n    /* width: 240px; */\n    margin: 5px 20px 0 0;\n    height: calc(100% - 10px);\n    text-align: center;\n    font-size: 22px;\n    font-weight: 600;\n    line-height: 28px;\n    color: #003a86;\n    ${props => props.isEntry ? '' : css`\n        color: #96000057;\n    `}\n    vertical-align: top;\n`;\n\nconst _Language = styled(_MenuItem)`\n    display: inline-block;\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\n    margin: 3px 0 0 0;\n    border-radius: 50%;\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\n    /* background-color: #48aa9d; */\n    /* border: 1px solid #7e7e7e; */\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\n    /* text-shadow: 1px 2px 3px #808080ba; */\n    /* text-align: center; */\n    font-size: 28px;\n    font-weight: 600;\n    color: #ffffff;\n    & div {\n        display: inline-block;\n        margin: 2px 0 0 5px;\n        /* background-color: #0000007d; */\n        vertical-align: top;\n    }\n`;","import { createContext, useCallback, useEffect, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    const callback = useCallback(dispatcher.system.switchSplashToMain, []);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={callback} /\r\n                    >}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport SystemEntry from './system/contents/entry/systemEntry';\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    // 右クリック無効\r\n    document.oncontextmenu = function () { return false; }\r\n\r\n    // window.addEventListener(\"keydown\", function (e) {\r\n    //   // space and arrow keys\r\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n    //     e.preventDefault();\r\n    //   }\r\n    // }, false);\r\n\r\n    document.onkeydown = (e) => {\r\n      // if (!['F5'].includes(e.key)) {\r\n      //   return false;\r\n      // }\r\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n  }, []);\r\n  return (\r\n    <SystemEntry />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\n\nconst REACT_APP_AUTH0_DOMAIN = 'dev-a0p0m4lr.us.auth0.com';\nconst REACT_APP_AUTH0_CLIENT_ID = 'ABaWpYVBZwTr3tkyxhq1kWh2YwT4epew';\n\nReactDOM.render(\n  <Auth0Provider\n    domain={REACT_APP_AUTH0_DOMAIN}\n    clientId={REACT_APP_AUTH0_CLIENT_ID}\n    redirectUri={window.location.origin}\n    // redirectUri={window.location.origin}\n  >\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Auth0Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}