{"version":3,"sources":["system/redux/reducer.tsx","system/utils/theoryUtils.tsx","system/utils/backingUtil.tsx","system/utils/instrumentsUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/redux/store/state/dataHistory.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/sysModalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/base/design/styles.tsx","system/contents/score/manage/scoreBuilder.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/input/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChange.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcChange.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/noteSideForm.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/score/edit/harmonize/initial/initialBeat.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternStatus.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/item/controlButton.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionType","SCALE_INDEX","ROOT_ALL","index","isFlat","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","getDegreeRoot","props","KEY12_FLAT_LIST","KEY12_SHARP_LIST","getChordRoot","baseKeyIndex","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SYMBOL_LIST","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_LIST","root","symbolKey","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","getSymbolFromKey","ret","find","symbol","undefined","getSymbolDerives","list","forEach","push","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","getDefaultBacking","voicingList","struct","octave","pattern","divCount","Array","fill","table","channels","i","length","j","structIndex","editorPattern","channelSize","layers","layer","divs","noteDivList","signals","record","cell","x","y","status","notesList","voicingStructs","size","channel","reverse","scoreLayers","console","log","JSON","stringify","scoreLayer","notes","velocityList","rootIndex","map","item","interval","bpm","backing","pitchIndexList","chordTime","soundName","Math","floor","playPiano","startTimeList","total","div","normal","rate","isDot","div3","startTime","sustainTime","setTimeout","state","dispatcher","piano","stop","isPreview","id","clearInterval","setState","getLimitLen","chordInfo","minute","beatLen","head","tail","getTotalLenFromDivs","reduce","prev","cur","len","checkOverlapBackLayer","hasError","limitLen","totalLen","layerIndex","channelIndex","divIndex","baseLayer","backLayer","getDivRange","left","right","isOverlap","backLeft","backRight","slice","BackingUtil","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","getSortetdNotesLen","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","keyIndex","instrument","soundfontPlayer","play","duration","soundFullName","stopPreview","focusIndex","lastFocus","distIndex","sampler","releaseAll","tune","adjustScrollX","previewHarmony","start","cacheList","elementCacheList","chordList","init","detail","cache","element","pastSecond","pitchList","getPitchListFromVoicing","playBacking","mouseState","curChord","previewCurHarmony","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","PATTERN_HEADER_HEIGHT","PATTERN_BODY_HEIGHT","NOTES_1BAR_WIDTH","Dispatcher","dispatch","system","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setReserveTasks","setInvalidate","score","setPiano","setScoreTabIndex","scoreTabIndex","setScoreState","setKeySwitch","keySwitch","setScoreData","moveElement","isNext","sub","moveSection","curSectionIndex","sectionNo","sectionCacheList","curSectionInfo","curElementType","rangeIndexStart","rangeIndexEnd","incrementDegreeRoot","isUp","data","includes","incrementBeatLen","incrementMinuteVal","pos","isTail","value","target","incrementMinuteValRelation","nearIndex","addChordElement","initialBeat","on","splice","addSectionElement","labelName","addChangeElement","changeType","modulateRelation","domminantValue","keyAdjust","tempoRelation","tempoDiff","tempoRate","tempoAbsolute","beatSignature","removeCurElement","wrapRef","reffers","wrap","body","style","opacity","overflow","width","clientWidth","incrementSymbol","setDiatonicChord","scaleIndex","chord","setDefaultBacking","cloneBacking","parse","pastBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setInstrument","incrementCurNoteKey","isUpper","mode","scaleIndexies","prevPitchIndex","pitchIndex","tempPitchIndex","adjustScrollY","moveFocus","updateCurChord","moveDistFocus","beatWidth","searchedChord","addNotes","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","releaseRange","end","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","melody","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","firstTime","pitch","time","isSolo","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","sort","a","b","posA","posB","openBackingEditor","hideMenu","voicingTable","getInitVoicingTable","patternProps","buildChannels","lenIndex","isUsePedal","getChannels","convertEditorLayerFromScore","closeBackingEditor","getInitialLayer","col","isExist","voicing","mappingEditorToScore","editor","getVoicingListFromTable","buildPatternProps","addPatternColumn","lenList","newLen","column","updateErrorState","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","getNotes","setNotes","deleteColumn","changeLayer","testBacking","checkError","this","DataHistory","manager","initialStore","userEnv","keyConfig","note","prevElement","nextElement","prevSection","nextSection","addChord","addSection","addChange","deleteCur","editMode","incRoot","decRoot","incBeat","decBeat","symbolMode","colorProps","entryBackground","dialogMode","isTune","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","soundfontInfo","gain","scaleMode","resize","move","shift","control","dataHistory","getInitialData","Sampler","toDestination","harmonize","measure","harmoniizeInvalidate","SysModalDialog","useContext","GlobalContext","isDisplay","_Blind","_Frame","styled","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isDisable","disable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","onClick","_Icon","_Label","ChannelContents","_Contents","css","TabbedPane","TabLabel","_TabLabel","TabContents","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ScoreBuilder","curIndex","addChordDiatonic","getScoreData","fixed","ManageTab","source","setSource","_Wrap","_Left","_Link","scale","timeSignature","builder","_Right","_Source","onChange","e","_ButtonsDiv","_Button","textarea","SymbolEditor","curSymbol","baseSymbol","derives","parentJsx","curJsx","childrenJsx","_Header","_Row","CalcChord","symbolName","chordRoot","bar","prevCache","isError","beat","chordName","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","beatSum","barRem","_Len","_Border","ElementDetailChange","_Type","ElementDetailChord","degreeRoot","degreeOn","useMemo","_Degree","isSwitch","isCurrent","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Tip","jsxList","lenType","valueType","abs","_TipItem","ElementFixedBorder","ElementDetailInit","_Title","_Value","_Record","ElementDetailSection","CalcChange","ScoreElement","useRef","bodyRef","current","isFocus","isSameSection","chordDetail","ref","isSelectable","isInactive","isChord","_Head","_CurKey","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","_Note","HarmonizeUtil","update","clearTimeout","NoteKeyDown","config","isElement","Number","NoteBasicInput","signal","timing","velAdj","backingEditorInput","NoteKeySwitch","isPress","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","isRootActive","isOnActive","_RootItem","isDiatonic","onContextMenu","symbolItemsJsx","_SymbolItem","_Timing","_LabelBeat","_Minute","_LabelMinute","_MinuteItem","isReverse","step","min","max","_Root","_Symbol","input","SideFormInit","scaleItemJsxList","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_TempoWrap","currentTarget","valueAsNumber","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","toString","_NumberItem","_DirectText","_TemplateFrame","_NumberFrame","_ItemBase","NoteSideForm","HarmMeasure","dataList","curBeatJsx","prevBeatJsx","nextBeatJsx","curMinuteJsx","prevMinuteJsx","nextMinuteJsx","memoriJsxList","prevIndex","nextIndex","temp","add","sustain","adjust","bean","height","color","_Memori","_Bar","_Prev","_Start","_Cur","_Next","_Blocks","_Measure","BEAT_WIDTH","ChordInfo","scaleList","structJsxList","tipJsxList","relation","getIntervalValues","_InfoItem","isScale","isUse","isBlack","_Struct","WIDTH","InitialBeatTip","_WrapTip","PatternLength","itemJsxList","isEdit","PatternTable","channelCount","layerJsxList","jsxLsit","notesJsxLsit","k","setNotesStatus","_Notes","isBack","_State","isEven","isFront","jsx","_Layer","zIndex","PatternBuilder","useTotalLen","isLenOverError","_LengthDiv","_MeasureDiv","_MemoriList","_ChordLenLine","_OverCover","_Body","_Footer","ChannelItem","_Option","isEnable","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","soundIndex","_LayerItem","proops","PatternStatus","createItem","callback","createRateItem","String","setRate","sizeJsxList","CHANNEL_MAX","_ListItem","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","selectedCell","editModeJsx","_WrapEdit","select","option","PatternFrame","isUsePattern","_UseSwitch","_Main","_StatusDiv","_MainDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","voicingLaneJsxList","channelLimitNum","OCTAVE_NUM","STRUCT_NUM","isSelected","chordIndex","_VoicingItem","isOver","soundfont","_VoicingLane","relationJsxList","_Relation","_Info","TIP_WIDTH","BackingEditorFrame","_PrevireBrind","_FooterDiv","HarmHideFrame","isOpen","isBackingEnable","HarmonizeTab","focus","prevBeat","totalBeat","prevMinute","totalMinute","sectionBeatSum","beatRate","getBeatRate","tabIndex","onKeyDown","onKeyUp","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_HEAD_WIDTH","HarmSections","sections","curSectionNo","section","_Total","MelodyTimeline","measureRef","chordRef","barLength","timelineLength","measureJsxList","barJsx","_Scale","isHead","chordJsxList","symbolNmae","degreeName","_ChordItem","_DegreeName","_ChordName","_ChordWrap","_MousePos","span","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","info","Soundfont","AudioContext","release","then","soundFontPlayer","QuantizeSwitch","ControlButton","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","mouseDownEvent","button","mouse","getNextLeft","next","rect","getBoundingClientRect","clientX","scrollLeft","clientY","scrollTop","mouseMoveEvent","curPos","posX","lenWidth","prevFocus","mouseUpEvent","MelodyInput","keyDownEvent","isSingle","alert","keySwitchEvent","MelodyFrame","tableRef","pitchRef","barCount","scaleLineJsxList","_ScaleLine","isBase","notesJsxList","scroll","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","onMouseDown","onMouseMove","onMouseUp","_Test","editAnimation","keyframes","EditTab","switchMode","preview","toggleEnsamble","_Mode","_ModeItem","_Buttons","_Switch","_SwitchInner","_SECTIONS","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","label","items","degree","degreeRootName","chordRootName","triggerAttack","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","fadeIn","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","Provider","App","document","oncontextmenu","window","addEventListener","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+IAKYA,E,4ECHCC,EAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAYjCC,EAA4C,CACrD,KACA,CAAEC,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,EAAGC,QAAQ,GACpB,CAAED,MAAO,GAAIC,QAAQ,GACrB,CAAED,MAAO,GAAIC,QAAQ,GACrB,CAAED,MAAO,GAAIC,QAAQ,IAIZC,EAAqB,CAC9B,SAAK,UAAM,SAAK,UAAM,SAAK,SAAK,UAAM,SAAK,UAAM,SAAK,UAAM,UAKnDC,EAAsB,CAC/B,SAAK,UAAM,SAAK,UAAM,SAAK,SAAK,UAAM,SAAK,UAAM,SAAK,UAAM,UAGnDC,EAAgB,SAACC,GAE1B,OADaA,EAAMJ,OAASC,EAAqBC,GACrCE,EAAML,QAGTM,EAAkB,CAC3B,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAEnDC,EAAmB,CAC5B,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAGnDC,EAAe,SAACH,EAAoBI,GAE7C,OADaJ,EAAMJ,OAASK,EAAkBC,IACjCE,EAAeJ,EAAML,OAAS,KAIlCU,EAAyB,CAClC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAKnDC,EAAyB,CAClC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KA0CnDC,EAAuC,CAChD,CACIC,IAAK,QAASC,KAAM,GACpBC,KAAM,KACNC,QAAS,CAAC,KAAM,KAAM,MACtBC,KAAM,SAEV,CACIJ,IAAK,QAASC,KAAM,IACpBC,KAAM,KACNC,QAAS,CAAC,KAAM,KAAM,MACtBC,KAAM,SAEV,CACIJ,IAAK,aAAcC,KAAM,OACzBC,KAAM,KACNC,QAAS,CAAC,KAAM,KAAM,MACtBC,KAAM,SAEV,CACIJ,IAAK,WAAYC,KAAM,MACvBC,KAAM,KACNC,QAAS,CAAC,KAAM,KAAM,MACtBC,KAAM,SAEV,CACIJ,IAAK,eAAgBC,KAAM,OAC3BC,KAAM,WACNC,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BC,KAAM,WAEV,CACIJ,IAAK,WAAYC,KAAM,MACvBC,KAAM,KACNC,QAAS,CAAC,KAAM,KAAM,MACtBC,KAAM,SAEV,CACIJ,IAAK,eAAgBC,KAAM,OAC3BC,KAAM,WACNC,QAAS,CAAC,KAAM,KAAM,KAAM,OAEhC,CACIH,IAAK,eAAgBC,KAAM,QAC3BC,KAAM,KACNC,QAAS,CAAC,KAAM,KAAM,MACtBC,KAAM,SAEV,CACIJ,IAAK,gBAAiBC,KAAM,SAC5BC,KAAM,eACNC,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BC,KAAM,WAEV,CACIJ,IAAK,eAAgBC,KAAM,OAC3BC,KAAM,QACNC,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BC,KAAM,WAEV,CACIJ,IAAK,eAAgBC,KAAM,IAC3BC,KAAM,QACNC,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BC,KAAM,WAEV,CACIJ,IAAK,YAAaC,KAAM,KACxBC,KAAM,QACNC,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BC,KAAM,WAEV,CACIJ,IAAK,WAAYC,KAAM,QACvBC,KAAM,aACNC,QAAS,CAAC,KAAM,KAAM,OAE1B,CACIH,IAAK,eAAgBC,KAAM,QAC3BC,KAAM,QACNC,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BC,KAAM,WAEV,CACIJ,IAAK,eAAgBC,KAAM,OAC3BC,KAAM,QACNC,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BC,KAAM,UAEV,CACIJ,IAAK,eAAgBC,KAAM,QAC3BC,KAAM,QACNC,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BC,KAAM,UAEV,CACIJ,IAAK,eAAgBC,KAAM,OAC3BC,KAAM,eACNC,QAAS,CAAC,KAAM,KAAM,MACtBC,KAAM,UAEV,CACIJ,IAAK,YAAaC,KAAM,IACxBC,KAAM,eACNC,QAAS,CAAC,KAAM,KAAM,QAUjBE,EAAwB,CACjC,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,GACN,GAAM,IAGGC,EAAmD,CAC5D,CAAEC,KAAM,CAAEpB,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAChD,CAAED,KAAM,CAAEpB,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAChD,CAAED,KAAM,CAAEpB,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAChD,CAAED,KAAM,CAAEpB,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAChD,CAAED,KAAM,CAAEpB,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAChD,CAAED,KAAM,CAAEpB,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAChD,CAAED,KAAM,CAAEpB,MAAO,GAAIC,QAAQ,GAASoB,UAAW,iBAGxCC,EAAoC,CAC7C,SAAK,aACL,UAAM,WACN,UAAM,WACN,SAAK,aACL,SAAK,UACL,UAAM,WACN,cAAU,gBAaDC,EAAmB,SAACV,GAC7B,IAAMW,EAAMZ,EAAYa,MAAK,SAACC,GAC1B,GAAIb,IAAQa,EAAOb,IACf,OAAOa,KAGf,YAAcC,GAAPH,EAAmBA,EAAMZ,EAAY,IAGnCgB,EAAmB,SAACf,GAC7B,IAAIgB,EAAoB,GAMxB,OALAjB,EAAYkB,SAAQ,SAACJ,GACbb,IAAQa,EAAOX,MACfc,EAAKE,KAAKL,EAAOb,QAGlBgB,I,SD7RChC,O,uCAAAA,I,qCAAAA,I,mCAAAA,I,mCAAAA,I,uBAAAA,I,qCAAAA,I,yCAAAA,I,yCAAAA,I,oCAAAA,M,KAoBL,IEfA,EFeMmC,EAAU,SAACC,EAAcC,GAClC,IAAMC,EAAOD,EAAOC,KACdC,EAAUF,EAAOE,QACvB,OAAQD,GACJ,KAAKtC,EAAWwC,iBACZJ,EAAMK,YAAcF,EAAQE,YAC5B,MACJ,KAAKzC,EAAW0C,gBACZN,EAAMO,WAAaJ,EAAQI,WAC3B,MACJ,KAAK3C,EAAW4C,eACZR,EAAMS,UAAYN,EAAQM,UAC1B,MACJ,KAAK7C,EAAW8C,eACZV,EAAMW,YAAcR,EAAQS,UAC5B,MACJ,KAAKhD,EAAWiD,SACZb,EAAMc,KAAOX,EAAQW,KACrB,MACJ,KAAKlD,EAAWmD,gBACZf,EAAMgB,YAAcb,EAAQa,YAC5B,MACJ,KAAKpD,EAAWqD,kBACZjB,EAAMkB,aAAef,EAAQe,aAC7B,MACJ,KAAKtD,EAAWuD,kBACZnB,EAAMoB,aAAejB,EAAQiB,aAC7B,MACJ,KAAKxD,EAAWyD,eACZrB,EAAMsB,WAAanB,EAAQmB,WAGnC,OAAO,eAAKtB,I,QGoCHuB,EAAoB,SAACvC,GAC9B,IAAIwC,EAA8B,GAClC,OAAQxC,GACJ,IAAK,QAASwC,EAAc,CACxB,CAAEC,OAAQ,EAAGC,OAAQ,GACrB,CAAED,OAAQ,EAAGC,OAAQ,GACrB,CAAED,OAAQ,EAAGC,OAAQ,IAOtB,MACH,IAAK,UAYL,IAAK,SAAUF,EAAc,CACzB,CAAEC,OAAQ,EAAGC,OAAQ,GACrB,CAAED,OAAQ,EAAGC,OAAQ,GACrB,CAAED,OAAQ,EAAGC,OAAQ,GACrB,CAAED,OAAQ,EAAGC,OAAQ,IAa7B,MAJ8B,CAC1BF,cACAG,QAAS,Q,YDzHU,aAAG,EAEH,aAAG,EAEF,cAAG,GAEE,mBAAG,SAACC,GAC7B,OAAO,IAAIC,MAAsCD,GAAUE,KAAK,OAG1C,gBAAG,SAACC,GAE1B,IADA,IAAMC,EAAwC,GACrCC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IAC9B,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAME,GAAGC,OAAQC,IAC7BJ,EAAME,GAAGE,IACTH,EAASlC,KAAK,CAAE4B,OAAQO,EAAGG,YAAaD,IAOpD,OAHwB,IAApBH,EAASE,QACTF,EAASlC,KAAK,CAAE4B,QAAS,EAAGU,YAAa,IAEtCJ,GAGyB,0BAAG,SAACD,GAEpC,IAAMP,EAA8B,GAEpC,GAAa,MAATO,EACA,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IAC9B,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAME,GAAGC,OAAQC,IAC7BJ,EAAME,GAAGE,IACTX,EAAY1B,KAAK,CAAE4B,OAAQO,EAAGR,OAAQU,IAKtD,OAAOX,GAGmB,oBAAG,SAACa,GAC9B,IAAMC,EAAcD,EAAcL,SAASE,OACrCK,EAA6B,GAanC,OAZAF,EAAcE,OAAO1C,SAAQ,SAAA2C,GACzB,IAAMC,EAA+BD,EAAME,YACrCC,EAAgC,GACtCH,EAAMT,MAAMlC,SAAQ,SAAC+C,EAAQX,GACzBW,EAAO/C,SAAQ,SAACgD,EAAMV,GACN,MAARU,GACAF,EAAQ7C,KAAK,CAAEgD,EAAGX,EAAGY,EAAGd,EAAGe,OAAQH,UAI/CN,EAAOzC,KAAK,CAAE2C,OAAMQ,UAAWN,OAE5B,CAAEL,cAAaC,WAGF,cAAG,SAACW,EAA6CC,GAErE,IADA,IAAMnB,EAAwC,GACrCC,EAAI,EAAGA,EAAIkB,EAAMlB,IAAK,CAC3B,IAAMmB,EAAqC,CAAE1B,QAAS,EAAGU,YAAa,GAClEH,EAAIiB,EAAehB,SACnBkB,EAAQ1B,OAASwB,EAAejB,GAAGP,OACnC0B,EAAQhB,YAAcc,EAAejB,GAAGG,aAE5CJ,EAASlC,KAAKsD,GAElB,OAAOpB,EAASqB,WAGoB,8BAAG,SAACf,EAAqBgB,GAE7D,IAAMf,EAA+B,GAmBrC,OAlBAgB,QAAQC,IAAIC,KAAKC,UAAUJ,IAC3BA,EAAYzD,SAAQ,SAAA8D,GAEhB,IADA,IAAM5B,EAA8C,GADtB,WAErBE,GAEL,IADA,IAAMW,EAA6C,GAHzB,WAIjBT,GACL,IAAMyB,EAAQD,EAAWV,UAAUzD,MAAK,SAAAoE,GAAK,OAAIA,EAAMd,IAAMX,GAAKyB,EAAMb,IAAMd,KAC9EW,EAAO9C,KAAc,MAAT8D,EAAgB,KAAOA,EAAMZ,SAFpCb,EAAI,EAAGA,EAAIwB,EAAWlB,KAAKP,OAAQC,IAAM,EAAzCA,GAITJ,EAAMjC,KAAK8C,IANNX,EAAI,EAAGA,EAAIK,EAAaL,IAAM,EAA9BA,GAQTM,EAAOzC,KAAK,CACR4C,YAAaiB,EAAWlB,KACxBV,QACA8B,aAAc,QAGtBN,QAAQC,IAAIC,KAAKC,UAAUnB,IACpBA,GAGyB,0BAAG,SAACf,EAA6BsC,EAAmBrE,GACpF,OAAO+B,EAAYuC,KAAI,SAACC,GACpB,IAAMC,EAAWhF,EAAsBQ,EAAOV,QAAQiF,EAAKvC,SAC3D,OAAO,GAAKuC,EAAKtC,OAASoC,EAAYG,MAItB,cAAG,SAACjE,EAAcoB,EAAgC8C,EAAaC,EAAuBC,EAA0BC,GAC7G,MAAnBF,EAAQxC,QACRyC,EAAevE,SAAQ,SAAC9B,EAAOoE,GAC3B,IAAMmC,EAAYhG,EAAiBP,EAAQ,IACrC2D,EAAS6C,KAAKC,MAAMzG,EAAQ,IAElC0G,EADsBH,EAAY5C,EACT1B,EAAOqE,MAGpBF,EAAQxC,QAChBY,OAAO1C,SAAQ,SAAA2C,GACnB,IAAMkC,EAA0B,GAC5BC,EAAQ,EACZnC,EAAMC,KAAK5C,SAAQ,SAAA+E,GACfF,EAAc5E,KAAK,GAAKoE,EAAMS,GAC9B,IAAIE,EAAS,EAAID,EAAIE,KACjBF,EAAIG,MAAOF,GAAU,IAChBD,EAAII,KAAO,IAAGH,GAAU,EAAID,EAAII,MACzCL,GAASE,KAEbrC,EAAMS,UAAUpD,SAAQ,SAAA+D,GAEpB,IAAMqB,EAAYP,EAAcd,EAAMd,GAChCoC,EAAcb,EAAYY,EAChC7D,EAAatB,KACTqF,YAAW,WACP,IAAMpH,EAAQqG,EAAeR,EAAMb,GAC7BuB,EAAYhG,EAAiBP,EAAQ,IACrC2D,EAAS6C,KAAKC,MAAMzG,EAAQ,IAElC0G,EADsBH,EAAY5C,EACT1B,EAAOkF,KACrB,IAAZD,WAQC,cAAG,SAACjF,EAAcoF,EAA4BC,EAAwBjE,GAAoC,IAAD,EAC7H,UAAApB,EAAMgB,YAAYsE,aAAlB,SAAyBC,OACzBH,EAAMI,WAAY,EAClBpE,EAAavB,SAAQ,SAAA4F,GAAE,OAAIC,cAAcD,MACzCJ,EAAWlB,QAAQwB,SAASP,IAlJzB,IAqJMQ,EAAW,cAAG,SAACC,GACxB,IAAMC,EAASD,EAAUC,OACzB,OAAQD,EAAUE,QAAUD,EAAOE,KAAOF,EAAOG,MAGxCC,EAAmB,sBAAG,SAACzD,GAChC,OAAOA,EAAK0D,QAAO,SAACC,EAAMC,GACtB,IAAIC,EAAM,EAAID,EAAIvB,KAGlB,OAFIuB,EAAItB,QAAOuB,GAAO,KACL,IAAbD,EAAIrB,OAAYsB,GAAOD,EAAIrB,KAAO,GAC/BoB,EAAa,EAANE,IACf,IAiCMC,GA9BU,aAAG,SAACV,EAAmCrE,EAA6BG,GACvF,IAAI6E,GAAW,EACf,GAAe,MAAX7E,EAAiB,CAGbH,EAAYU,OAASP,EAAQK,SAASE,SAAQsE,GAAW,GAE7D,IAAMC,EAAWb,EAAYC,GAC7BlE,EAAQY,OAAO1C,SAAQ,SAAA2C,GAEnB,IAAMkE,EAAWR,EAAoB1D,EAAME,aAEvC+D,EAAWC,IAAUF,GAAW,MAIxC7E,EAAQY,OAAO,GAAGR,MAAMlC,SAAQ,SAAC+C,EAAQX,GACrCW,EAAO/C,SAAQ,SAACgD,EAAMV,GACP,MAARU,GACI0D,EAAsB5E,EAAQY,OAAQ,EAAGN,EAAGE,KAC3CqE,GAAW,SAO/B,OAAOA,GAGuB,wBAAG,SAACjE,EAA8BoE,EAAoBC,EAAsBC,GAC1G,IAAMC,EAAYvE,EAAOoE,GACnBI,EAAYxE,EAAsB,IAAfoE,EAAmB,EAAI,GAFwF,EAGlHK,EAAYF,EAAUpE,YAAamE,GAH+E,mBAGjII,EAHiI,KAG3HC,EAH2H,KAIxI3D,QAAQC,IAAR,eAAoByD,EAApB,mBAAmCC,IAEnC,IADA,IAAIC,GAAY,EACPlF,EAAI,EAAGA,EAAI8E,EAAUrE,YAAYR,OAAQD,IAC9C,GAAuC,MAApC8E,EAAUhF,MAAM6E,GAAc3E,GAAY,CAAC,IAAD,EACX+E,EAAYD,EAAUrE,YAAaT,GADxB,mBAClCmF,EADkC,KACxBC,EADwB,KAEzC,GAAGH,EAAQE,GAAYH,EAAOI,EAAW,CACrCF,GAAY,EACZ,OAIZ,OAAOA,IAGEH,EAAW,cAAG,SAACvE,EAA8BoE,GAAwC,IACzFI,EAAgB,EAAVC,EAAa,EASxB,OAPAzE,EAAK6E,MAAM,EAAGT,EAAW,GAAGhH,SAAQ,SAACwG,EAAKpE,GACtC,IAAIqE,EAAM,EAAID,EAAIvB,KACduB,EAAItB,QAAOuB,GAAO,KACL,IAAbD,EAAIrB,OAAYsB,GAAOD,EAAIrB,KAAO,GACtCiC,EAAOC,EACPA,GAAe,EAANZ,KAEN,CAACW,EAAMC,I,CAhOLK,M,KAoOFA,I,IAAAA,IEjOFC,EAAyB,SAACzJ,GACnC,OAAQ0J,GAAgB1J,EAAQ,GAAK,IAG5B2J,EAA2B,SAAC9D,GACrC,IAAIe,EAAQ,EAMZ,OALAA,GAASf,EAAM+D,KACfhD,GAASf,EAAMgE,KAAO,EACtBjD,GAASf,EAAMiE,MAAQ,EACvBlD,GAASf,EAAMkE,SAAW,EAC1BnD,GAASf,EAAMmE,SAAW,GAIjBC,EAAqB,SAACC,EAAsBC,GACrD,OAAOC,EAAmB,CACtBR,KAAMM,EAAON,KAAOO,EAAOP,KAC3BC,KAAMK,EAAOL,KAAOM,EAAON,KAC3BC,MAAOI,EAAOJ,MAAQK,EAAOL,MAC7BC,SAAUG,EAAOH,SAAWI,EAAOJ,SACnCC,SAAUE,EAAOF,SAAWG,EAAOH,YAI9BI,EAAqB,SAACrJ,GAE/B,IAAMsJ,EAAe7D,KAAKC,MAAM1F,EAAKiJ,SAAW,GAChDjJ,EAAKiJ,UAA2B,EAAfK,EACjBtJ,EAAK8I,MAAQQ,EAEb,IAAMC,EAAe9D,KAAKC,MAAM1F,EAAKiJ,SAAW,GAChDjJ,EAAKiJ,UAA2B,EAAfM,EACjBvJ,EAAKgJ,UAAYO,EAEjB,IAAMC,EAAe/D,KAAKC,MAAM1F,EAAKgJ,SAAW,GAChDhJ,EAAKgJ,UAA2B,EAAfQ,EACjBxJ,EAAK6I,MAAQW,EAEb,IAAMC,EAAYhE,KAAKC,MAAM1F,EAAK+I,MAAQ,GAC1C/I,EAAK+I,OAAqB,EAAZU,EACdzJ,EAAK8I,MAAQW,EAEb,IAAMC,EAAWjE,KAAKC,MAAM1F,EAAK8I,KAAO,GAIxC,OAHA9I,EAAK8I,MAAmB,EAAXY,EACb1J,EAAK6I,MAAQa,EAEN1J,GAGE2J,EAA0B,SAACC,EAAkBC,GAEtD,IAAIhB,EAAO,EACPC,EAAO,EACPC,EAAQ,EACRC,EAAW,EACXC,EAAW,EAEf,OAAQW,GACJ,KAAK,EAAGf,EAAOgB,EAAO,MACtB,KAAK,EAAGf,EAAOe,EAAO,MACtB,KAAK,EAAGb,EAAWa,EAAO,MAC1B,KAAK,EAAGd,EAAQc,EAAO,MACvB,KAAK,EAAGZ,EAAWY,EAEvB,OAAOR,EAAmB,CACtBR,OAAMC,OAAMC,QAAOC,WAAUC,cA+BxBa,EAAoB,SAAChF,GAE9B,OAAIA,EAAMmE,SAAW,EAAU,EACtBnE,EAAMiE,MAAQ,EAAU,EACxBjE,EAAMkE,SAAW,EAAU,EAC3BlE,EAAMgE,KAAO,EAAU,EACvBhE,EAAM+D,KAAO,EAAU,EACpB,GAGHkB,EAAgB,SAAC5G,EAAWjC,GACrC,IAAM8I,GAAa,GAAK7G,EAAK,GAAK,GAC5BP,EAAS6C,KAAKC,OAAQ,GAAKvC,EAAK,GAAK,IAAM,EAC3CqC,EAAYhG,EAAiBwK,EAAW,IACxCC,EAAa/I,EAAMgB,YAAYgI,gBACnB,MAAdD,IACAA,EAAWxD,OACXwD,EAAWE,KAAK3E,EAAY5C,EAAQ,EAAG,CAAEwH,SAAU,OAI9CzE,EAAY,SAAC0E,EAAuBnJ,EAAckJ,GAC3D,IAAMH,EAAa/I,EAAMgB,YAAYsE,MACnB,MAAdyD,GACAA,EAAWE,KAAKE,EAAe,EAAG,CAAED,cAwF/BE,EAAc,SAACpJ,EAAcqF,EAAwBjE,GAE9D,IAAMgE,EAAQpF,EAAMW,YACpByE,EAAMI,WAAY,EAClBJ,EAAMiE,WAAajE,EAAMkE,UACzBlE,EAAMmE,UAAYnE,EAAMiE,WACxBjI,EAAavB,SAAQ,SAAA4F,GAAE,OAAIC,cAAcD,MACzCzF,EAAMgB,YAAYwI,QAAQC,aAC1BpE,EAAWqE,KAAK/D,SAASP,GACzBC,EAAWqE,KAAKC,iBAGPC,EAAiB,SAACC,EAAe7J,EAAcqF,EAAwBjE,GAQhF,IAPA,IAAMgE,EAAQpF,EAAMO,WAEduJ,GADU9J,EAAMgB,YAAYwI,QAChBpE,EAAM2E,kBAClBC,EAAYhK,EAAMS,UAAUuJ,UAE5BC,EAAOD,EAAU,GAAGE,OANyF,WAQ1GjI,GACL,IAAMkI,EAAQL,EAAU7H,GAClBmI,EAAUJ,EAAU/H,GAC1B,GAAqB,UAAjBmI,EAAQlK,KAAkB,CAC1B,GAAIiK,EAAME,WAAaR,EAAO,iBAE9B,IAAMK,EAASE,EAAQF,OAEvB,GAAmB,MAAfA,EAAO/K,KAAc,MAAM,CAAN,UAEzB,IAAM2E,GAAaoG,EAAO/K,KAAKpB,MAAQkM,EAAKnB,UAAY,GAClDrJ,EAASH,EAAiB4K,EAAO9K,WACjCkH,EAAM4D,EAAOnE,QAAUmE,EAAOpE,OAAOE,KAAOkE,EAAOpE,OAAOG,KAE1D9B,EAAU+F,EAAO/F,QACjBmG,EAAY/C,EAAYgD,wBAAwBpG,EAAQ3C,YAAasC,EAAWrE,GAEhF4E,EAAY,GAAK4F,EAAK/F,IAAMoC,EAClClF,EAAatB,KACTqF,YAAW,WAImB8E,EAAK/F,IACJoG,EAAUpI,OASrCqF,EAAYiD,YAAYxK,EAAOoB,EAAc6I,EAAK/F,IAAKC,EAASmG,EAAWjG,GAE3ErE,EAAMW,YAAY8J,WAAWC,SAAWN,EACxC/E,EAAWqE,KAAK/D,SAAS3F,EAAMW,eAyDhCwJ,EAAME,WAAaR,EA9FnB,MACN5H,EAAI,EAAGA,EAAI+H,EAAU9H,OAAQD,IAAK,CAAC,IAAD,IAAlCA,GAAkC,oDAmGlC0I,EAAoB,SAAC3K,EAAcqF,GAE5C,IAAMD,EAAQpF,EAAMW,YAEdsJ,EADYjK,EAAMS,UAAUuJ,UACX,GAAGE,OACpBQ,EAAWtF,EAAMqF,WAAWC,SAC5BtJ,EAAepB,EAAMoB,aAC3B,GAAgB,MAAZsJ,EAAkB,CAElB,IAAMR,EAASQ,EAASR,OAExB,GAAmB,MAAfA,EAAO/K,KAAc,OAEzB,IAAM2E,GAAaoG,EAAO/K,KAAKpB,MAAQkM,EAAKnB,UAAY,GAClDrJ,EAASH,EAAiB4K,EAAO9K,WACjCkH,EAAM4D,EAAOnE,QAAUmE,EAAOpE,OAAOE,KAAOkE,EAAOpE,OAAOG,KAE1D9B,EAAU+F,EAAO/F,QACjBmG,EAAY/C,EAAYgD,wBAAwBpG,EAAQ3C,YAAasC,EAAWrE,GAChF4E,EAAY,GAAK4F,EAAK/F,IAAMoC,EAElCiB,EAAYiD,YAAYxK,EAAOoB,EAAc6I,EAAK/F,IAAKC,EAASmG,EAAWjG,GAE3EjD,EAAatB,KAAKqF,YAAW,WACzBC,EAAMI,WAAY,EAClBH,EAAWqE,KAAK/D,SAASP,KACd,IAAZf,IACHe,EAAMI,WAAY,EAClBH,EAAWqE,KAAK/D,SAASP,KC3UpBwF,EAAmB,IACnBC,EAAoB,GAKpBC,EAAwB,GACxBC,EAAsB,IAKtBC,EAAmB,ICjCnBC,EAKT,WAAYjL,EAAckL,GAAmC,IAAD,gCAHpDlL,WAGoD,OAFpDkL,cAEoD,OAKrDC,OAAS,CAEZxF,SAAU,SAACtF,GACP,EAAK6K,SAAStN,EAAWwC,iBAAkB,CAAEC,iBAGjD+K,mBAAoB,WAChB,IAAM/K,EAAc,EAAKL,MAAMK,YAC/BA,EAAYgL,UAAW,EACvB,EAAKH,SAAStN,EAAWwC,iBAAkB,CAAEC,iBAGjDiL,gBAAiB,SAACvN,GACd,IAAMsC,EAAc,EAAKL,MAAMK,YAC/BA,EAAYkL,iBAAmBxN,EAC/B,EAAKmN,SAAStN,EAAWwC,iBAAkB,CAAEC,iBAGjDmL,QAAS,SAAC1K,GACN,EAAKoK,SAAStN,EAAWiD,SAAU,CAAEC,UAGzC2K,gBAAiB,SAACrK,GACd,EAAK8J,SAAStN,EAAWuD,kBAAmB,CAAEC,kBAGlDsK,cAAe,SAACpK,GACZ,EAAK4J,SAAStN,EAAWyD,eAAgB,CAAEC,iBAhCS,KAoCrDqK,MAAQ,CACXC,SAAU,SAAC5C,GACP,EAAKkC,SAAStN,EAAWmD,gBAAiB,CACtCC,YAAY,2BACL,EAAKhB,MAAMgB,aADP,IACoBsE,MAAO0D,OAK9C6C,iBAAkB,SAAC9N,GACf,IAAMsC,EAAc,EAAKL,MAAMK,YAC/BA,EAAYyL,cAAgB/N,EAC5B,EAAKmN,SAAStN,EAAWwC,iBAAkB,CAAEC,iBAGjD0L,cAAe,SAACxL,GACZ,EAAK2K,SAAStN,EAAW0C,gBAAiB,CAAEC,gBAGhDyL,aAAc,SAACC,GACX,IAAM7G,EAAQ,EAAKpF,MAAMO,WACzB6E,EAAM6G,UAAYA,EAClB,EAAKN,MAAMI,cAAc3G,IAG7B8G,aAAc,SAACzL,GACX,EAAKyK,SAAStN,EAAW4C,eAAgB,CAAEC,eAG/C0L,YAAa,SAACC,GACV,IAAMhH,EAAQ,EAAKpF,MAAMO,WAEnB8L,EAAMD,EAAS,GAAK,EACgB,UAF7B,EAAKpM,MAAMS,UAAUuJ,UAEzB5E,EAAMiE,WAAagD,GAAKnM,OAC7BkF,EAAMiE,YAAcgD,EACpB,EAAKV,MAAMI,cAAc3G,KAIjCkH,YAAa,SAACF,GACV,IAAMhH,EAAQ,EAAKpF,MAAMO,WACnBgM,EAAkBnH,EAAM2E,iBAAiB3E,EAAMiE,YAAYmD,UAC3DC,EAAmBrH,EAAMqH,iBACzBC,EAAiBD,EAAiBF,GAClCI,EAAiB,EAAK3M,MAAMS,UAAUuJ,UAAU5E,EAAMiE,YAAYnJ,KACnEkM,EAWGG,EAAkBE,EAAiBvK,OAAS,EAE5CkD,EAAMiE,WAAaoD,EAAiBF,EAAkB,GAAGK,gBAGzDxH,EAAMiE,WAAaqD,EAAeG,cAZlCzH,EAAMiE,WAFa,YAAnBsD,GAAgCJ,EAAkB,EAE/BE,EAAiBF,EAAkB,GAAGK,gBAGtCF,EAAeE,gBAa1C,EAAKjB,MAAMI,cAAc3G,IAG7B0H,oBAAqB,SAACC,GAClB,IAAM3H,EAAQ,EAAKpF,MAAMO,WACnByM,EAAO,EAAKhN,MAAMS,UAClByJ,EAAS8C,EAAKhD,UAAU5E,EAAMiE,YAAYa,OAC1CmC,EAAMU,EAAO,GAAK,EACL,MAAf7C,EAAO/K,MACP+K,EAAO/K,KAAO,CAAEpB,MAAO,EAAGC,QAAQ,GAClC,EAAK2N,MAAMO,aAAac,IACjB9C,EAAO/K,KAAKpB,MAAQsO,GAAO,GAAKnC,EAAO/K,KAAKpB,MAAQsO,GAAO,KAClEnC,EAAO/K,KAAKpB,OAASsO,EACrBnC,EAAO/K,KAAKnB,QAAU+O,IAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIE,SAAS/C,EAAO/K,KAAKpB,OAC3E,EAAK4N,MAAMO,aAAac,KAIhCE,iBAAkB,SAACH,GACf,IAAM3H,EAAQ,EAAKpF,MAAMO,WACnByM,EAAO,EAAKhN,MAAMS,UAClBuJ,EAAYgD,EAAKhD,UAAU1C,QAC3B4C,EAASF,EAAU5E,EAAMiE,YAAYa,OACrCmC,EAAMU,EAAO,GAAK,EACpB7C,EAAOnE,QAAUsG,GAAO,GAAKnC,EAAOnE,QAAUsG,GAAO,IACrDnC,EAAOnE,SAAWsG,EAClBW,EAAKhD,UAAYA,EACjB,EAAK2B,MAAMO,aAAac,KAIhCG,mBAAoB,SAACC,EAAaC,EAAiBC,GAC/C,IAAMN,EAAO,EAAKhN,MAAMS,UAElByJ,EADM8C,EAAKhD,UAAUoD,GACRlD,OACfqD,EAAUF,EAA8BnD,EAAOpE,OAAOG,KAAnCiE,EAAOpE,OAAOE,MACrCuH,GAAUD,KACK,IAAOC,GAAU,KACvBF,EACAnD,EAAOpE,OAAOG,KAAOsH,EADbrD,EAAOpE,OAAOE,KAAOuH,EAGlCP,EAAKhD,UAAYgD,EAAKhD,UAAU1C,QAChC,EAAKqE,MAAMO,aAAac,KAIhCQ,2BAA4B,SAACH,EAAiBC,GAC1C,IAAMjE,EAAa,EAAKrJ,MAAMO,WAAW8I,WACnCW,EAAY,EAAKhK,MAAMS,UAAUuJ,UAEnCyD,GAAa,EACjB,GAAKJ,GAQD,IAAK,IAAIpL,EAAIoH,EAAa,EAAGpH,EAAI+H,EAAU9H,OAAS,EAAGD,IACnD,GAA0B,UAAtB+H,EAAU/H,GAAG/B,KAAkB,CAC/BuN,EAAYxL,EACZ,YAVR,IAAK,IAAIA,EAAIoH,EAAa,EAAGpH,EAAI,EAAGA,IAChC,GAA0B,UAAtB+H,EAAU/H,GAAG/B,KAAkB,CAC/BuN,EAAYxL,EACZ,OAWM,GAAdwL,IACA,EAAK9B,MAAMwB,mBAAmB9D,EAAYgE,EAAQC,GAClD,EAAK3B,MAAMwB,mBAAmBM,GAAYJ,GAASC,KAI3DI,gBAAiB,WACb,IAAMtI,EAAQ,EAAKpF,MAAMO,WACnByM,EAAO,EAAKhN,MAAMS,UAClB2J,EAAU,CACZlK,KAAM,QAASgK,OAAQ,CACnBnE,QAASX,EAAMuI,YACf7H,OAAQ,CAAEE,KAAM,EAAGC,KAAM,GAGzB9G,KAAM,KACNyO,GAAI,KACJxO,UAAW,QACX+E,QAAS,CACL3C,YAAa,GACbG,QAAS,QAIrBqL,EAAKhD,UAAU6D,OAAOzI,EAAMiE,WAAa,EAAG,EAAGe,GAC/C,EAAKuB,MAAMO,aAAac,IAc5Bc,kBAAmB,WACf,IAAM1I,EAAQ,EAAKpF,MAAMO,WACnByM,EAAO,EAAKhN,MAAMS,UAMxBuM,EAAKhD,UAAU6D,OAAOzI,EAAMiE,WAAa,EAAG,EAL5B,CACZnJ,KAAM,UAAWgK,OAAQ,CACrB6D,UAAW,aAInB,EAAKpC,MAAMO,aAAac,IAG5BgB,iBAAkB,WACd,IAAM5I,EAAQ,EAAKpF,MAAMO,WACnByM,EAAO,EAAKhN,MAAMS,UAcxBuM,EAAKhD,UAAU6D,OAAOzI,EAAMiE,WAAa,EAAG,EAb5B,CACZnJ,KAAM,SAAUgK,OAAQ,CACpB+D,WAAY,KACZC,iBAAkB,KAClBC,eAAgB,EAChBC,UAAW,EACXC,cAAe,KACfC,UAAW,EACXC,UAAW,EACXC,cAAe,EACfC,cAAe,SAIvB,EAAK9C,MAAMO,aAAac,IAG5B0B,iBAAkB,WACd,IAAMtJ,EAAQ,EAAKpF,MAAMO,WACnB6J,EAAU,EAAKpK,MAAMS,UAAUuJ,UAAU5E,EAAMiE,YAC/CmD,EAAY,EAAKxM,MAAMO,WAAWwJ,iBAAiB3E,EAAMiE,YAAYmD,UAC3E,GAAqB,YAAjBpC,EAAQlK,MAAoC,IAAdsM,EAAlC,CAGA,IAAMrC,EAAQ/E,EAAM2E,iBAAiB3E,EAAMiE,YAErCsF,EAAUxE,EAAMyE,QAAQC,KACd1E,EAAMyE,QAAQE,KAE9BH,EAAQI,MAAMC,QAAU,IACxBL,EAAQI,MAAME,SAAW,SAEzBN,EAAQI,MAAMG,MAAd,UAAyBP,EAAQQ,YAAjC,MACAhK,YAAW,WACPwJ,EAAQI,MAAMG,MAAQ,MACvB,GACH/J,YAAW,WACPwJ,EAAQI,MAAMC,QAAU,GACxBL,EAAQI,MAAMG,MAAQ,GACtBP,EAAQI,MAAME,SAAW,GAEzB,IAAMjC,EAAO,EAAKhN,MAAMS,UACxBuM,EAAKhD,UAAU6D,OAAOzI,EAAMiE,WAAY,GACxC,EAAKsC,MAAMO,aAAac,GACxB5H,EAAMiE,aACN,EAAKsC,MAAMI,cAAc3G,KAQ1B,OAGPgK,gBAAiB,SAACrC,GACd,IAAM3H,EAAQ,EAAKpF,MAAMO,WACnByM,EAAO,EAAKhN,MAAMS,UAClByJ,EAAS8C,EAAKhD,UAAU5E,EAAMiE,YAAYa,OAC1CmC,EAAMU,EAAO,GAAK,EACL,MAAf7C,EAAO/K,MACP+K,EAAO/K,KAAO,CAAEpB,MAAO,EAAGC,QAAQ,GAClC,EAAK2N,MAAMO,aAAac,IACjB9C,EAAO/K,KAAKpB,MAAQsO,GAAO,GAAKnC,EAAO/K,KAAKpB,MAAQsO,GAAO,KAClEnC,EAAO/K,KAAKpB,OAASsO,EACrBnC,EAAO/K,KAAKnB,QAAU+O,IAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIE,SAAS/C,EAAO/K,KAAKpB,OAC3E,EAAK4N,MAAMO,aAAac,KAIhCqC,iBAAkB,SAACC,GACf,IAAMlK,EAAQ,EAAKpF,MAAMO,WACnByM,EAAO,EAAKhN,MAAMS,UAClByJ,EAAS8C,EAAKhD,UAAU5E,EAAMiE,YAAYa,OAC1CqF,EAAQrQ,EAA0BoQ,GACxCpF,EAAO/K,KAAP,eAAmBoQ,EAAMpQ,MACzB+K,EAAO9K,UAAYmQ,EAAMnQ,UACzB,EAAKuM,MAAMO,aAAac,IAG5BwC,kBAAmB,WACf,IAAMpK,EAAQ,EAAKpF,MAAMO,WACnByM,EAAO,EAAKhN,MAAMS,UAClByJ,EAAS8C,EAAKhD,UAAU5E,EAAMiE,YAAYa,OAC1CzK,EAASH,EAAiB4K,EAAO9K,gBACpBM,GAAfD,EAAOT,OACPkL,EAAO/F,QAAU5C,EAAkB9B,EAAOT,MAC1C,EAAK2M,MAAMO,aAAac,KAIhCyC,aAAc,WACV,IAAMrK,EAAQ,EAAKpF,MAAMO,WAEnB2J,EADO,EAAKlK,MAAMS,UACJuJ,UAAU5E,EAAMiE,YAAYa,OAChD9E,EAAMqK,aAAehM,KAAKiM,MAAMjM,KAAKC,UAAUwG,EAAO/F,UACtD,EAAKwH,MAAMI,cAAc3G,GACzB7B,QAAQC,IAAR,2BAAgCC,KAAKC,UAAU0B,EAAMqK,iBAGzDE,YAAa,WACT,IAAMvK,EAAQ,EAAKpF,MAAMO,WACzB,GAA0B,MAAtB6E,EAAMqK,aAAsB,CAC5BlM,QAAQC,IAAR,2BAAgCC,KAAKC,UAAU0B,EAAMqK,gBACrD,IAAMzC,EAAO,EAAKhN,MAAMS,UACTuM,EAAKhD,UAAU5E,EAAMiE,YAAYa,OACzC/F,QAAUV,KAAKiM,MAAMjM,KAAKC,UAAU0B,EAAMqK,eACjD,EAAK9D,MAAMO,aAAac,MAzUwB,KA+UrDvN,OAAS,CAEZmQ,OAAQ,SAAC7C,GACL,IAAM3H,EAAQ,EAAKpF,MAAMO,WACnBsP,EAAMzK,EAAM0K,UACZ9C,EAAO,EAAKhN,MAAMS,UAClByJ,EAAS8C,EAAKhD,UAAU5E,EAAMiE,YAAYa,OAC1CmC,EAAMU,EAAO,GAAK,EAClBhP,EAAQ8R,EAAI9R,MAAQsO,EACtBtO,GAAS,GAAKA,GAAS8R,EAAIE,QAAQ7N,OAAS,IAC5C2N,EAAI9R,OAASsO,EACbnC,EAAO9K,UAAYyQ,EAAIE,QAAQF,EAAI9R,OACnC,EAAK4N,MAAMI,cAAc3G,GACzB,EAAKuG,MAAMO,aAAac,KAIhCgD,OAAQ,WACJ,IAAM5K,EAAQ,EAAKpF,MAAMO,WACnBsP,EAAMzK,EAAM0K,UACZ9C,EAAO,EAAKhN,MAAMS,UAClByJ,EAAS8C,EAAKhD,UAAU5E,EAAMiE,YAAYa,OAC5C2F,EAAII,WAAW/N,OAAS,IACxBgI,EAAO9K,UAAYyQ,EAAII,WAAW,GAClC,EAAKtE,MAAMO,aAAac,KAIhCkD,SAAU,WACN,IAAM9K,EAAQ,EAAKpF,MAAMO,WACnBsP,EAAMzK,EAAM0K,UACZ9C,EAAO,EAAKhN,MAAMS,UAClByJ,EAAS8C,EAAKhD,UAAU5E,EAAMiE,YAAYa,OAC5C2F,EAAIM,aAAajO,OAAS,IAC1BgI,EAAO9K,UAAYyQ,EAAIM,aAAa,GACpC,EAAKxE,MAAMO,aAAac,MAlXwB,KAwXrDtD,KAAO,CAEV/D,SAAU,SAAC/E,GACP,EAAKsK,SAAStN,EAAW8C,eAAgB,CAAEE,eAG/CwP,UAAW,WACP,IAAMhL,EAAQ,EAAKpF,MAAMW,YACnBsC,EAAY,EAAKjD,MAAMS,UAAUwC,UACnCA,EAAUf,OAAS,IACnBkD,EAAMiE,WAAa,EACnBjE,EAAMmE,UAAYtG,EAAUf,OAAS,EACrC,EAAKwH,KAAK/D,SAASP,KAI3BiL,aAAc,SAACpN,GACX,IAAM+J,EAAO,EAAKhN,MAAMS,UACxBuM,EAAK/J,UAAYA,EACjB,EAAK0I,MAAMO,aAAac,IAG5BsD,cAAe,SAACtH,GACZ,EAAKkC,SAAStN,EAAWmD,gBAAiB,CACtCC,YAAY,2BACL,EAAKhB,MAAMgB,aADP,IACoBgI,uBAKvCuH,oBAAqB,SAACC,EAAkBC,GAEpC,IAAMpH,EAAa,EAAKrJ,MAAMW,YAAY0I,WAC1C,IAAoB,IAAhBA,EAAJ,CAWA,IATA,IAAMY,EAAO,EAAKjK,MAAMS,UAAUuJ,UAAU,GAAGE,OACzCwG,EAAgB7S,EAAYkG,KAAI,SAAAuJ,GAAK,OAAKrD,EAAKnB,SAAWwE,GAAS,MACnErK,EAAY,EAAKjD,MAAMS,UAAUwC,UAEjCoD,EAAMpD,EAAUoG,GAChBsH,EAAiBtK,EAAIuK,WACrB3M,EAAoB,WAATwM,EAAoB,EAAI,GACrCI,EAAiBxK,EAAIuK,WAElBJ,EAAUnK,EAAIuK,WAAa,EAAIvK,EAAIuK,WAAanJ,IAGnD,GAFAoJ,GAAkB5M,GAAYuM,GAAW,EAAI,GAEhC,UAATC,GACU,UAATA,GAAoBC,EAAczD,SAASzF,EAAuBqJ,IACrE,CACExK,EAAIuK,WAAaC,EACjB,MAKJF,IAAmBtK,EAAIuK,aACvB/H,EAAcxC,EAAIuK,WAAY,EAAK5Q,OAEnC,EAAK0J,KAAK2G,aAAapN,EAAUqE,SAEjC,EAAKoC,KAAKoH,mBAIlB9E,aAAc,SAACC,GACX,IAAM7G,EAAQ,EAAKpF,MAAMW,YACzByE,EAAM6G,UAAYA,EAClB,EAAKvC,KAAK/D,SAASP,IAGvB2L,UAAW,SAAC3E,GACR,IAAMhH,EAAQ,EAAKpF,MAAMW,YAEnBsC,EADO,EAAKjD,MAAMS,UACDwC,WAGG,IAAtBmC,EAAMiE,WACFpG,EAAUf,OAAS,IACnBkD,EAAMiE,WAAajE,EAAMkE,UACzBlE,EAAMmE,UAAYnE,EAAMiE,WACxB,EAAKK,KAAK/D,SAASP,KAGlBgH,EAAgChH,EAAMiE,WAAapG,EAAUf,OAAS,EAA7DkD,EAAMiE,WAAa,KAC7BjE,EAAMiE,YAAe+C,EAAS,GAAK,EACnChH,EAAMmE,UAAYnE,EAAMiE,WACxB,EAAKK,KAAK/D,SAASP,IAI3B,EAAKsE,KAAKC,gBACV,EAAKD,KAAKsH,eAAe5L,EAAMiE,aAGnC4H,cAAe,SAAC7E,GACZ,IAAMhH,EAAQ,EAAKpF,MAAMW,YAEnBsC,EADO,EAAKjD,MAAMS,UACDwC,WAEG,IAAtBmC,EAAMiE,cAEL+C,EAA+BhH,EAAMmE,UAAYtG,EAAUf,OAAS,EAA3DkD,EAAMmE,UAAY,KAC5BnE,EAAMmE,WAAc6C,EAAS,GAAK,EAClC,EAAK1C,KAAK/D,SAASP,IAEvB,EAAKsE,KAAKC,kBAGdqH,eAAgB,SAAC3H,GACb,IAAMjE,EAAQ,EAAKpF,MAAMW,YACnBqJ,EAAY,EAAKhK,MAAMS,UAAUuJ,UACjClH,EAAI4E,EAAyB,EAAK1H,MAAMS,UAAUwC,UAAUoG,GAAY+D,KAAOhI,EAAM8L,UACvFjK,EAAO,EACLkK,EAAgBnH,EAAUxK,MAAK,SAAC4K,GAClC,GAAqB,UAAjBA,EAAQlK,KAAkB,CAC1B,IACMgP,EADS9E,EAAQF,OACFnE,QAAUX,EAAM8L,UACrC,GAAIpO,GAAKmE,GAAQnE,EAAImE,EAAOiI,EAExB,OAAO9E,EAEXnD,GAAQiI,MAGhB9J,EAAMqF,WAAWC,cAA4BhL,GAAjByR,EAA6B,KAAOA,EAChE,EAAKzH,KAAK/D,SAASP,IAGvBgM,SAAU,WACN,IAAMhM,EAAQ,EAAKpF,MAAMW,YACzB,IAA0B,IAAtByE,EAAMiE,WAAV,CAEA,IAAM2D,EAAO,EAAKhN,MAAMS,UAClBwC,EAAY+J,EAAK/J,UACjBoD,EAAMpD,EAAUmC,EAAMiE,YACtB+D,EAAMpF,EAAmB3B,EAAI+G,IAAK/G,EAAIC,KACtC+K,EAAgB3J,EAAyB0F,GACzCkE,EAAgBlM,EAAMiE,aAAepG,EAAUf,OAAS,GAAK,EAAIwF,EAAyBzE,EAAUmC,EAAMiE,WAAa,GAAG+D,KAC1HmE,EAAiBF,EAAgB,EAAIjM,EAAMsD,WAE1B,IAAnB4I,GAAwBC,GAAkBD,KAC1CtE,EAAK/J,UAAU4K,OAAOzI,EAAMiE,WAAa,EAAG,EAAG,CAC3C+D,MACAwD,WAAYvK,EAAIuK,WAChBtK,IAAKmC,EAAwBrD,EAAMsD,SAAU,KAEjD,EAAKiD,MAAMO,aAAac,GACxB5H,EAAMiE,aACNjE,EAAMmE,UAAYnE,EAAMiE,WACxB,EAAKK,KAAK/D,SAASP,IAGvB,EAAKsE,KAAKC,kBAGd6H,YAAa,WACT,IAAMpM,EAAQ,EAAKpF,MAAMW,YACnBsC,EAAY,EAAKjD,MAAMS,UAAUwC,UAFxB,EAGMmC,EAAMiE,WAAajE,EAAMmE,UAAY,CAACnE,EAAMiE,WAAYjE,EAAMmE,WAAa,CAACnE,EAAMmE,UAAWnE,EAAMiE,YAHzG,mBAGRQ,EAHQ,KAIT4H,EAJS,KAIM5H,EAAQ,EAC7B5G,EAAU4K,OAAOhE,EAAO4H,GACxB,EAAK/H,KAAK2G,aAAapN,GACvBmC,EAAMiE,WAAaQ,EAAQ,EAC3BzE,EAAMmE,UAAYnE,EAAMiE,WACxB,EAAKK,KAAK/D,SAASP,GACnB,EAAKsE,KAAKC,iBAGd+H,aAAc,SAACrE,GACX,IAAMjI,EAAQ,EAAKpF,MAAMW,YADM,EAEVyE,EAAMiE,WAAajE,EAAMmE,UAAY,CAACnE,EAAMiE,WAAYjE,EAAMmE,WAAa,CAACnE,EAAMmE,UAAWnE,EAAMiE,YAFzF,mBAExBQ,EAFwB,KAEjB8H,EAFiB,KAG/BvM,EAAMiE,WAAegE,EAAiBsE,EAAR9H,EAC9BzE,EAAMmE,UAAYnE,EAAMiE,WACxB,EAAKK,KAAK/D,SAASP,GACnB,EAAKsE,KAAKC,gBACV,EAAKD,KAAKsH,eAAe5L,EAAMiE,aAGnCuI,YAAa,SAACC,GAEV,IAAMzM,EAAQ,EAAKpF,MAAMW,YACzB,IAA0B,IAAtByE,EAAMiE,WAAV,CAEA,IAAM2D,EAAO,EAAKhN,MAAMS,UAClBwC,EAAY+J,EAAK/J,UACjBoD,EAAMpD,EAAUmC,EAAMiE,YACtByI,EAAepK,EAAyBrB,EAAIC,KAC5CyL,EAAiBrK,EAAyBrB,EAAI+G,KAAO0E,EACrDR,EAAgBlM,EAAMiE,aAAepG,EAAUf,OAAS,GAAK,EAAIwF,EAAyBzE,EAAUmC,EAAMiE,WAAa,GAAG+D,KAC1H4E,EAAe,EAAI5M,EAAMsD,SAO/B,GANmBmJ,GAII,IAAnBP,GAAwBS,EAAiBC,GAAgBV,EAFzDQ,EAAeE,EAIJ,CACX,IAAMnN,EAAS6C,EAAyBrB,EAAIC,KAAO0L,GAAgBH,EAAW,GAAK,GACnFxL,EAAIC,IAAMmC,EAAwBrD,EAAMsD,SAAU7D,EAASO,EAAMsD,UACjEsE,EAAK/J,UAAYA,EAAUqE,QAC3B,EAAKqE,MAAMO,aAAac,MAIhCiF,UAAW,SAACC,GAER,IAAM9M,EAAQ,EAAKpF,MAAMW,YACzB,IAA0B,IAAtByE,EAAMiE,WAAV,CAEA,IAAM2D,EAAO,EAAKhN,MAAMS,UAClBwC,EAAY+J,EAAK/J,UAEjBsG,EAAYnE,EAAMmE,UAClBF,EAAajE,EAAMiE,WATK,EAWTE,EAAYF,EAAa,CAACA,EAAYE,GAAa,CAACA,EAAWF,GAXtD,mBAWvBQ,EAXuB,KAWhB8H,EAXgB,KAYxBQ,EAA4B,IAAVtI,EAAc,EAAInC,EAAyBzE,EAAU4G,EAAQ,GAAGuD,KACpF1F,EAAyBzE,EAAUmC,EAAMiE,WAAa,GAAG/C,KACvD8L,EAAiBT,IAAQ1O,EAAUf,OAAS,GAAK,EAAIwF,EAAyBzE,EAAU0O,EAAM,GAAGvE,KACjGiF,EAAa,EAAIjN,EAAMsD,SAEvB4J,EAAgB5K,EAAyBzE,EAAU4G,GAAOuD,KAC1D2E,EAAiBrK,EAAyBzE,EAAU0O,GAAKvE,KAAO1F,EAAyBzE,EAAU0O,GAAKrL,KAQ9G,GANmB4L,GAIK,IAApBE,GAAyBL,EAAiBM,GAAcD,EAFxDE,EAAgBD,GAAcF,EAInB,CACX,IAAK,IAAIlQ,EAAI4H,EAAO5H,GAAK0P,EAAK1P,IAAK,CAC/B,IAAMoE,EAAMpD,EAAUhB,GAChB4C,EAAS6C,EAAyBrB,EAAI+G,KAAOiF,GAAcH,EAAW,GAAK,GACjF7L,EAAI+G,IAAM3E,EAAwBrD,EAAMsD,SAAU7D,EAASO,EAAMsD,UAErEsE,EAAK/J,UAAYA,EAAUqE,QAC3B,EAAKqE,MAAMO,aAAac,MAIhCuF,WAAY,WACR,IAAMnN,EAAQ,EAAKpF,MAAMW,YACP,EAAKX,MAAMS,UAAUwC,UAEzBf,OAAS,IACnBkD,EAAMiE,WAAa,EACnBjE,EAAMmE,UAAYnE,EAAMiE,WACxB,EAAKK,KAAK/D,SAASP,GACnB,EAAKsE,KAAKC,kBAKlBA,cAAe,WACX,IAAMvE,EAAQ,EAAKpF,MAAMW,YACnBoB,EAAQ,EAAK/B,MAAMc,KAAK0R,OAAOzQ,MAC/BsH,EAAajE,EAAMmE,UACzB,IAAoB,IAAhBF,GAA8B,MAATtH,EAAe,CACpC,IAAM0Q,EAAS/K,EAAyB,EAAK1H,MAAMS,UAAUwC,UAAUoG,GAAY+D,KAAOhI,EAAM8L,UAChGnP,EAAM2Q,SAAS,CAAEzL,KAAMwL,EAAS,IAAKE,SAAU,aAIvD7B,cAAe,WACX,IAAM1L,EAAQ,EAAKpF,MAAMW,YACnBoB,EAAQ,EAAK/B,MAAMc,KAAK0R,OAAOzQ,MACrC,IAA0B,IAAtBqD,EAAMiE,YAA8B,MAATtH,EAAe,CAC1C,IAAM6Q,EAAS,EAAK5S,MAAMS,UAAUwC,UAAUmC,EAAMiE,YAAYuH,WAAa/F,EAC7E9I,EAAM2Q,SAAS,CAAEG,IAAKD,EAAS7Q,EAAM+Q,aAAe,EAAGH,SAAU,aAIzEI,aAAc,YAEgB,IADZ,EAAK/S,MAAMW,YACf0I,YF/fM,SAACrJ,EAAcqF,GAEvC,IAAMD,EAAQpF,EAAMW,YACdqM,EAAOhN,EAAMS,UACbW,EAAiC,GACjC2H,EAAa/I,EAAMgB,YAAYgI,gBAE/B9E,EADO8I,EAAKhD,UAAU,GAAGE,OACdhG,IACjBkB,EAAMkE,UAAYlE,EAAMiE,WACxBjE,EAAMI,WAAY,EAElB,IADA,IAAIwN,GAAa,EAViD,WAWzD/Q,GACL,IAAM2B,EAAQoJ,EAAK/J,UAAUhB,GACvBmL,EAAM1F,EAAyB9D,EAAMwJ,KACrC9G,EAAMoB,EAAyB9D,EAAM0C,KACrC2M,EAAQrP,EAAMgN,WACdsC,EAAO,GAAKhP,EAAMkJ,GAGL,IAAf4F,IACAA,EAAYE,GAGhB9R,EAAatB,KACTqF,YAAW,WAMP,GALAC,EAAMiE,WAAapH,EACnBmD,EAAMmE,UAAYnE,EAAMiE,WAExBhE,EAAWqE,KAAK/D,SAASP,GACzBC,EAAWqE,KAAKC,gBACE,MAAdZ,EAAoB,CACpB,IAAMD,EAAWtB,EAAuByL,GAClC3O,EAAYhG,EAAiBwK,EAAW,IACxCpH,EAAS6C,KAAKC,OAAQ,GAAKyO,EAAS,GAAK,IAAM,EACrDlK,EAAWxD,OACXwD,EAAWE,KAAK3E,EAAY5C,EAAQ,EAAG,CAAEwH,SAAU,GAAKhF,EAAMoC,OAE9C,KAApB4M,EAAOF,KAGX/Q,IAAM+K,EAAK/J,UAAUf,OAAS,GAC9Bd,EAAatB,KACTqF,YAAW,WACPiE,EAAYpJ,EAAOqF,EAAYjE,KACM,KAArC8R,EAAOF,EAAY,GAAK9O,EAAMoC,MAjCrCrE,EAAImD,EAAMiE,WAAYpH,EAAI+K,EAAK/J,UAAUf,OAAQD,IAAM,EAAvDA,GAuCJmD,EAAM+N,QACPvJ,EAA2B,IAAZoJ,EAAkBhT,EAAOqF,EAAYjE,GAIxDiE,EAAW8F,OAAOM,gBAAgBrK,GAClCiE,EAAWqE,KAAK/D,SAASP,GEycjB2N,CAAa,EAAK/S,MAAO,IAG7BoT,UAAW,WAUP,IARA,IAAMhO,EAAQ,EAAKpF,MAAMW,YACnBsC,EAAY,EAAKjD,MAAMS,UAAUwC,UAH1B,EAIkBmC,EAAMiE,WAAajE,EAAMmE,UAAY,CAACnE,EAAMiE,WAAYjE,EAAMmE,WAAa,CAACnE,EAAMmE,UAAWnE,EAAMiE,YAJrH,mBAINgK,EAJM,KAKPC,EALO,KAKUD,EAAa,EAE9BE,EAA8B,GAC9BzU,EAAOmE,EAAUoQ,GAAYjG,IAC7BoG,EAAW5K,EAAkB9J,GAC1BmD,EAAI,EAAGA,EAAIqR,EAAKrR,IAAK,CAC1B,IAAM2B,EAAQX,EAAUhB,EAAIoR,GACtBI,EAAO7K,EAAkBhF,EAAMwJ,KAC/BsG,EAAUF,EAAWC,EAAOD,EAAWC,EACvCE,EAAYjM,EAAyB9D,EAAMwJ,KAAO1F,EAAyB5I,GAC3EsO,EAAM3E,EAAwBiL,EAASC,GAAa,EAAID,IAC9DnQ,QAAQC,IAAR,sBAA2BmQ,EAA3B,oBAAgDD,IAChDnQ,QAAQC,IAAIC,KAAKC,UAAU0J,IAC3BmG,EAAezT,KAAK,CAChB8Q,WAAYhN,EAAMgN,WAClBxD,MACA9G,IAAI,eAAM1C,EAAM0C,OAGxBlB,EAAMmO,eAAiBA,EAKvB,EAAK7J,KAAK/D,SAASP,IAIvBwO,WAAY,WAGR,IAAMxO,EAAQ,EAAKpF,MAAMW,YACzB,IAA0B,IAAtByE,EAAMiE,WAAV,CAEA,IAAM2D,EAAO,EAAKhN,MAAMS,UAClBwC,EAAY+J,EAAK/J,UACjBoD,EAAMpD,EAAUmC,EAAMiE,YACtBwK,EAAU7L,EAAmB3B,EAAI+G,IAAK/G,EAAIC,KAC1CgL,EAAgBlM,EAAMiE,aAAepG,EAAUf,OAAS,GAAK,EAAIwF,EAAyBzE,EAAUmC,EAAMiE,WAAa,GAAG+D,KAC1H0G,EAAwBrQ,KAAKiM,MAAMjM,KAAKC,UAAU0B,EAAMmO,iBAC9DO,EAASjU,SAAQ,SAAA+D,GACbA,EAAMwJ,IAAMpF,EAAmBpE,EAAMwJ,IAAKyG,MAG9C,IAAME,EAAWD,EAASA,EAAS5R,OAAS,GACtCqP,EAAiB7J,EAAyBqM,EAAS3G,KAAO1F,EAAyBqM,EAASzN,KAElG/C,QAAQC,IAAR,oBAAyB+N,EAAzB,uBAAsDD,MAC/B,IAAnBA,GAAwBC,GAAkBD,KAC1CtE,EAAK/J,UAAYA,EAAU+Q,OAAOF,GAElC9G,EAAK/J,UAAUgR,MAAK,SAACC,EAAGC,GACpB,IAAMC,EAAO1M,EAAyBwM,EAAE9G,KAClCiH,EAAO3M,EAAyByM,EAAE/G,KACxC,OAAOgH,IAASC,EAAO,EACnBD,EAAOC,GAAQ,EAAI,KAG3B,EAAK1I,MAAMO,aAAac,GAExB5H,EAAMiE,aACNjE,EAAMmE,UAAYnE,EAAMiE,WAAayK,EAAS5R,OAAS,EACvD,EAAKwH,KAAK/D,SAASP,OAptB6B,KA2tBrDjB,QAAU,CAEbmQ,kBAAmB,WACf,IAAMlP,EAAQ,EAAKpF,MAAMO,WACnByM,EAAO,EAAKhN,MAAMS,UAClByJ,EAAS8C,EAAKhD,UAAU5E,EAAMiE,YAAYa,OAC1CD,EAAO+C,EAAKhD,UAAU,GAAGE,OAE/B9E,EAAMmP,SAAW,UACjB,EAAK5I,MAAMI,cAAc3G,GACzB,IAAMoP,EAAe,EAAKrQ,QAAQsQ,oBAAoBvK,EAAO/F,QAAQ3C,aAEjEG,EAAuC,KAC3C,GAA8B,MAA1BuI,EAAO/F,QAAQxC,QAAiB,CAChC,IAAM+S,EAAexK,EAAO/F,QAAQxC,QAC9BuB,EAAiBqE,EAAYoN,cAAcH,GAGjD7S,EAAU,CACNiF,cAAe,EACfgO,SAAU,EACVC,YAAY,EACZlO,WAAY,EACZ3E,SAPauF,EAAYuN,YAAY5R,EAAgBwR,EAAapS,aAQlEC,OAPWgF,EAAYwN,4BAA4BL,EAAapS,YAAaoS,EAAanS,SAUlG,EAAK4B,QAAQwB,SAAS,CAClBE,UAAW,CACP1G,KAAO+K,EAAO/K,KACdyO,GAAK1D,EAAO0D,GACZ7H,QAASmE,EAAOnE,QAChBD,OAAQoE,EAAOpE,OACf1G,UAAW8K,EAAO9K,UAClB6K,KAAK,eAAMA,IAEfuK,eACA7S,UACA6D,WAAW,EACXgB,UAAU,KAIlBwO,mBAAoB,WAChB,IAAM5P,EAAQ,EAAKpF,MAAMO,WACzB6E,EAAMmP,SAAW,OACjB,EAAK5I,MAAMI,cAAc3G,IAG7BO,SAAU,SAACzE,GACP,EAAKgK,SAAStN,EAAWqD,kBAAmB,CAAEC,kBAGlD+T,gBAAiB,WACb,MAAO,CACHvS,YAAa,CAAC,CAAEoC,KAAM,EAAGC,OAAO,EAAOC,KAAM,IAC7CjD,MAAO,CAAC,CAAC,OACT8B,aAAc,CAAC,KAIvB4Q,oBAAqB,SAACjT,GAElB,IADA,IAAMO,EAAQ,IAAIF,MAAiB,GAD4B,WAEtDI,GACLF,EAAME,GAAK,IAAIJ,MAAe,GAE9B,IADA,IAAMqT,EAAMnT,EAAME,GAJyC,WAKlDE,GACL,IAAMgT,EAAU3T,EAAYhC,MAAK,SAAA4V,GAC7B,GAAIA,EAAQ1T,SAAWO,GAAKmT,EAAQ3T,SAAWU,EAC3C,OAAOiT,KAGfrT,EAAME,GAAGE,GAAgB,MAAXgT,GANThT,EAAI,EAAGA,EAAI+S,EAAIhT,OAAQC,IAAM,EAA7BA,IAHJF,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IAAM,EAA/BA,GAYT,OAAOF,GAIXsT,qBAAsB,WAClB,IAAM9U,EAAa,EAAKP,MAAMO,WACxByM,EAAO,EAAKhN,MAAMS,UAClByJ,EAAS8C,EAAKhD,UAAUzJ,EAAW8I,YAAYa,OAC/CoL,EAAS,EAAKtV,MAAMkB,aAE1BgJ,EAAO/F,QAAU,CACb3C,YAAa+F,EAAYgO,wBAAwBD,EAAOd,cACxD7S,QAA2B,MAAlB2T,EAAO3T,QAAkB,KAAO4F,EAAYiO,kBAAkBF,EAAO3T,UAElF,EAAKgK,MAAMO,aAAac,IAkB5ByI,iBAAkB,WAEd,IAAMrQ,EAAQ,EAAKpF,MAAMkB,aACnBS,EAAUyD,EAAMzD,QAEhBa,EAAQb,EAAQY,OAAOZ,EAAQgF,YAC/B+O,EAAUlT,EAAME,YAChBiT,EAA+B,CAAE7Q,KAAM4Q,EAAQ/T,EAAQiT,UAAU9P,KAAME,KAAM,EAAGD,OAAO,GAC7F2Q,EAAQ7H,OAAOlM,EAAQiT,SAAW,EAAG,EAAGe,GACxCnT,EAAMT,MAAMlC,SAAQ,SAAC+V,GACjBA,EAAO/H,OAAOlM,EAAQiT,SAAW,EAAG,EAAG,SAE3C,EAAKzQ,QAAQ0R,mBACb,EAAK1R,QAAQwB,SAASP,IAG1B0Q,kBAAmB,SAACC,GAEhB,IAAM3Q,EAAQ,EAAKpF,MAAMkB,aACnBS,EAAUyD,EAAMzD,QAChBa,EAAQb,EAAQY,OAAOZ,EAAQgF,YAEjCqP,EAAYrU,EAAQiT,UACxBoB,GAAa,GAAKD,EAAU,GAAK,KAChB,GAAKC,GAAaxT,EAAME,YAAYR,OAAS,IAC1DP,EAAQiT,SAAWoB,GAEvB,EAAK7R,QAAQwB,SAASP,IAG1B6Q,iBAAkB,SAACC,GACf,IAAM9Q,EAAQ,EAAKpF,MAAMkB,aACnBS,EAAUyD,EAAMzD,QAChB5D,EAAQ4D,EAAQiF,cAEjBsP,EAAqBnY,EAAQ4D,EAAQK,SAASE,OAAS,EAA9CnE,EAAQ,KAClB4D,EAAQiF,cAAkBsP,EAAc,GAAJ,GAExC,EAAK/R,QAAQwB,SAASP,IAG1B+Q,kBAAmB,SAACrR,GAChB,IAAMM,EAAQ,EAAKpF,MAAMkB,aACnBS,EAAUyD,EAAMzD,QACRA,EAAQY,OAAOZ,EAAQgF,YACnBjE,YAAYf,EAAQiT,UAClC9P,KAAOA,EACX,EAAKX,QAAQ0R,mBACb,EAAK1R,QAAQwB,SAASP,IAG1BgR,qBAAsB,WAClB,IAAMhR,EAAQ,EAAKpF,MAAMkB,aACnBS,EAAUyD,EAAMzD,QAEhB0E,EADQ1E,EAAQY,OAAOZ,EAAQgF,YACnBjE,YAAYf,EAAQiT,UACtCvO,EAAItB,OAASsB,EAAItB,MACjB,EAAKZ,QAAQwB,SAASP,GACtB,EAAKjB,QAAQ0R,oBAIjBQ,SAAU,WACN,IACM1U,EADQ,EAAK3B,MAAMkB,aACHS,QAEtB,OADcA,EAAQY,OAAOZ,EAAQgF,YACxB5E,MAAMJ,EAAQK,SAASE,OAAS,EAAIP,EAAQiF,cAAcjF,EAAQiT,WAGnF0B,SAAU,SAAC1S,GACP,IAAMwB,EAAQ,EAAKpF,MAAMkB,aACnBS,EAAUyD,EAAMzD,QACRA,EAAQY,OAAOZ,EAAQgF,YAC/B5E,MAAMJ,EAAQK,SAASE,OAAS,EAAIP,EAAQiF,cAAcjF,EAAQiT,UAAYhR,EACpF,EAAKO,QAAQ0R,mBACb,EAAK1R,QAAQwB,SAASP,IAG1BmR,aAAc,WACV,IAAMnR,EAAQ,EAAKpF,MAAMkB,aACnBS,EAAUyD,EAAMzD,QAChBa,EAAQb,EAAQY,OAAOZ,EAAQgF,YAEjCnE,EAAME,YAAYR,QAAU,IAC5BM,EAAMT,MAAMlC,SAAQ,SAAC+V,GACjBA,EAAO/H,OAAOlM,EAAQiT,SAAU,MAEpCpS,EAAME,YAAYmL,OAAOlM,EAAQiT,SAAU,GAIvCjT,EAAQiT,SAAW,GACnBjT,EAAQiT,WAEZ,EAAKzQ,QAAQwB,SAASP,IAE1B,EAAKjB,QAAQ0R,oBAGjBW,YAAa,WACT,IAAMpR,EAAQ,EAAKpF,MAAMkB,aACnBS,EAAUyD,EAAMzD,QACtBA,EAAQgF,WAAoC,IAAvBhF,EAAQgF,WAAmB,EAAI,EACpDhF,EAAQiT,SAAW,EACnBjT,EAAQiF,cAAgB,EACxB,EAAKzC,QAAQwB,SAASP,IAG1BqR,YAAa,WACT,IAAMxM,EAAO,EAAKjK,MAAMS,UAAUuJ,UAAU,GAAGE,OACzCoL,EAAS,EAAKtV,MAAMkB,aACpBE,EAAe,EAAKpB,MAAMoB,aAC1ByE,EAAYyP,EAAOzP,UAEnB/B,GAAa+B,EAAU1G,KAAKpB,MAAQ8H,EAAUoE,KAAKnB,UAAY,GAC/DrJ,EAASH,EAAiBuG,EAAUzG,WACpCkH,EAAMT,EAAUE,QAAUF,EAAUC,OAAOE,KAAOH,EAAUC,OAAOG,KACnE5B,EAAY,GAAK4F,EAAK/F,IAAMoC,EAC5BnC,EAAwB,CAC1B3C,YAAa+F,EAAYgO,wBAAwBD,EAAOd,cACxD7S,QAA2B,MAAlB2T,EAAO3T,QAAkB,KAAO4F,EAAYiO,kBAAkBF,EAAO3T,UAE5E2I,EAAY/C,EAAYgD,wBAAwBpG,EAAQ3C,YAAasC,EAAWrE,GAEtF8H,EAAYiD,YAAY,EAAKxK,MAAOoB,EAAc6I,EAAK/F,IAAKC,EAASmG,EAAWjG,GAEhFjD,EAAatB,KAAKqF,YAAW,WACzBmQ,EAAO9P,WAAY,EACnB,EAAKrB,QAAQwB,SAAS2P,KACX,IAAZjR,IAEHiR,EAAO9P,WAAY,EACnB,EAAKrB,QAAQwB,SAAS2P,IAG1BO,iBAAkB,WACd,IAAMP,EAAS,EAAKtV,MAAMkB,aACpBM,EAAc+F,EAAYgO,wBAAwBD,EAAOd,cAC/Dc,EAAO9O,SAAWe,EAAYmP,WAAWpB,EAAOzP,UAAWrE,EAAa8T,EAAO3T,SAC/E,EAAKwC,QAAQwB,SAAS2P,KAh9B1BqB,KAAK3W,MAAQA,EACb2W,KAAKzL,SAAW,SAAChL,EAAkBC,GAAnB,OAAuC+K,EAAS,CAAEhL,OAAMC,e,ECrBtEyW,M,KAOqB,eAAG,WAC1B,MAAO,CACHvQ,KAAM,EACNzG,KAAM,KAIK,SAAG,SAACiX,EAAiB7J,IACf,IAAjB6J,EAAQxQ,IACRwQ,EAAQjX,KAAKE,KAAKkN,GAGlB6J,EAAQxQ,KAAO,GAIN,OAAG,SAACwQ,GAQjB,OAPqB,IAAjBA,EAAQxQ,IACRwQ,EAAQxQ,IAAMwQ,EAAQjX,KAAKsC,OAAS,EAEjC2U,EAAQxQ,IAAM,GACbwQ,EAAQxQ,MAGTwQ,EAAQjX,KAAKiX,EAAQxQ,MAIrBuQ,I,+UAAAA,KCTFE,GAAsB,CAC/BC,QAAS,CACLC,UCHG,CACHC,KAAM,CACFC,YAAa,YACbC,YAAa,aACbC,YAAa,UACbC,YAAa,YACbC,SAAU,IACVC,WAAY,IACZC,UAAW,IACXC,UAAW,SACXC,SAAU,QACVC,QAAS,UACTC,QAAS,YACTC,QAAS,aACTC,QAAS,YACTC,WAAY,MDXhBC,WE7BoC,CACxCC,gBAAiB,YF8BjB5X,YAAa,CACTgL,UAAU,EACVE,iBAAkB,EAClBO,cAAe,EACfoM,WAAY,QAEhBhX,aAAc,KACdX,WAAY,CACR4X,QAAQ,EACRxK,YAAa,EACbtE,YAAa,EACbU,iBAAkB,GAClB0C,iBAAkB,GAClBR,UAAW,CACPyL,UAAU,EACVK,YAAY,GAEhBjI,UAAW,KACXyE,SAAU,OACV/O,WAAW,EACX2N,QAAQ,EACR1D,aAAc,MAElB9O,YAAa,CACT0I,YAAa,EACbE,WAAY,EACZD,WAAY,EACZZ,SAAU,EACVwI,UAAW,IACXzG,WAAY,CACR2N,OAAO,EACPC,KAAM,CAAEvV,EAAG,EAAGC,EAAG,GACjBmM,MAAO,EACPoJ,UAAW,EACXC,SAAU,EACVC,WAAY,CAAEza,OAAQ,EAAG0a,KAAM,SAAUC,UAAU,EAAOC,QAAQ,GAClEjO,SAAU,KACVkO,iBAAkB,EAClBC,iBAAkB,GAEtBC,cAAe,CACXja,KAAM,SACNka,KAAM,GAEV9M,UAAW,CACP+M,WAAW,EACXtX,QAAQ,EACRuX,QAAQ,EACRC,MAAM,EACNC,OAAO,EACPC,SAAS,GAEb5T,WAAW,EACX2N,QAAQ,EACRI,eAAgB,GAEhB8F,YAAazC,GAAY0C,kBAE7B7Y,UAAW,CACPuJ,UAAW,GACX/G,UAAW,IAEfjC,YAAa,CACTwI,QLjFG,IAAI+P,IAAQ,CACf,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,+DACN,GAAM,iEACPC,gBK0DClU,MAAO,KACP0D,gBAAiB,MAGrBlI,KAAM,CACF2Y,UAAW,CACPxC,KAAM,IAEVzE,OAAQ,CACJzQ,MAAO,KACP2X,QAAS,KACTnK,MAAO,KACP0D,MAAO,OAGf7R,aAAc,GACdE,WAAY,CACRqY,qBAAsB,GACtBF,UAAW,KACXjH,OAAQ,O,QGhGDoH,GAhBQ,WAAO,IAAD,EAEKC,qBAAWC,IAAjC9Z,EAFiB,EAEjBA,MAGF+Z,GALmB,EAEV1U,WAGY,SADdrF,EAAMK,YAAY6X,YAG/B,OACI,eAAC8B,GAAD,CAAQD,UAAWA,EAAnB,SACI,eAACE,GAAD,OASND,GAASE,IAAOtV,IAAV,iKAGG,SAAAxG,GAAK,OAAIA,EAAM2b,UAAY,QAAU,UAO9CE,GAASC,IAAOtV,IAAV,6NChBCuV,GAAc,SAAC/b,GAA6B,IAAD,EACpBgc,mBAAShc,EAAMic,UADK,mBAC7CA,EAD6C,KACnCC,EADmC,KAgBpD,OAJAC,qBAAU,WACND,EAAYlc,EAAMic,YACnB,CAACjc,EAAMic,WAGN,uCACI,eAACG,GAAD,UAEQpc,EAAMqc,YAAY1W,KAAI,SAAC2W,EAAK3c,GACxB,OAAO,eAAC,GAAD,CACSc,KAAM6b,EAAI7b,KAAM8b,KAAMD,EAAIC,KAAMC,SAAU7c,GAASsc,EAAUQ,UAAWH,EAAII,QACxFC,UAAW,kBAnBZ,SAAChd,QACQ2B,GAAxBtB,EAAM4c,eACN5c,EAAM4c,eAAejd,GAErBuc,EAAYvc,GAeqBid,CAAejd,KAD3BA,QAMrB,eAACkd,GAAD,UAEQ7c,EAAMqc,YAAY1W,KAAI,SAAC2W,EAAK3c,GACxB,OAAO,eAAC,GAAD,CAA6Bmd,KAAMR,EAAIQ,KAAMN,SAAU7c,IAAUsc,GAA3Ctc,YAQ/Cod,GAAe,SAAC/c,GAOlB,OACI,gBAACgd,GAAD,CACIR,SAAUxc,EAAMwc,SAChBS,QAAS,kBAAMjd,EAAM2c,aAFzB,UAII,eAACO,GAAD,UAAQld,EAAMuc,OACd,eAACY,GAAD,UAASnd,EAAMS,WAKrB2c,GAAkB,SAACpd,GAIrB,OACI,eAACqd,GAAD,CAAWb,SAAUxc,EAAMwc,SAA3B,SACKxc,EAAM8c,QAKbV,GAAaN,IAAOtV,IAAV,yTAYVqW,GAAYf,IAAOtV,IAAV,kRAWT6W,GAAYvB,IAAOtV,IAAV,+MAST,SAAAxG,GAAK,OAAKA,EAAMwc,SAAiCc,YAAxC,kDAAkBA,YAAlB,6CAGTN,GAAQlB,IAAOtV,IAAV,qXAQL,SAAAxG,GACE,OAAIA,EAAMwc,SACCc,YAAP,iIAKOA,YAAP,wHAWN,SAAAtd,GAAK,OAAIA,EAAMwc,SAAW,GAAKc,YAAtB,uRAiBTJ,IALYI,YAAH,6FAKDxB,IAAOtV,IAAV,gQAYL2W,GAASrB,IAAOtV,IAAV,kO,0BC/JC+W,GAAa,SAACvd,GAA4B,IAAD,EAClBgc,mBAAShc,EAAMic,UADG,mBAC3CA,EAD2C,KACjCC,EADiC,KAgBlD,OAJAC,qBAAU,WACND,EAAYlc,EAAMic,YACnB,CAACjc,EAAMic,WAGN,uCACI,eAAC,GAAD,UAGQjc,EAAMqc,YAAY1W,KAAI,SAAC2W,EAAK3c,GACxB,OAAO,eAAC,GAAD,CACSc,KAAM6b,EAAI7b,KAAM+b,SAAU7c,GAASsc,EAAUQ,UAAWH,EAAII,QACxEC,UAAW,kBApBZ,SAAChd,QACQ2B,GAAxBtB,EAAM4c,eACN5c,EAAM4c,eAAejd,GAErBuc,EAAYvc,GAgBqBid,CAAejd,KAD3BA,QAMrB,eAAC,GAAD,UAGQK,EAAMqc,YAAY1W,KAAI,SAAC2W,EAAK3c,GACxB,OAAO,eAAC,GAAD,CAAyBmd,KAAMR,EAAIQ,KAAMN,SAAU7c,IAAUsc,GAA3Ctc,YAQ3C6d,GAAW,SAACxd,GAMd,OACI,eAACyd,GAAD,CACIhB,UAAWzc,EAAMyc,UACjBD,SAAUxc,EAAMwc,SAChBS,QAAS,kBAAMjd,EAAM2c,aAHzB,SAIK3c,EAAMS,QAKbid,GAAc,SAAC1d,GASjB,OACI,eAAC,GAAD,CAAWwc,SAAUxc,EAAMwc,SAA3B,SACKxc,EAAM8c,QAKbV,GAAaN,IAAOtV,IAAV,6EAIVqW,GAAYf,IAAOtV,IAAV,4LAQT6W,GAAYvB,IAAOtV,IAAV,8HAMT,SAAAxG,GAAK,OAAKA,EAAMwc,SAAiCc,YAAxC,kDAAkBA,YAAlB,6CAGTG,GAAY3B,IAAOtV,IAAV,oUAOT,SAAAxG,GACE,OAAIA,EAAMwc,SACCc,YAAP,6TAUOA,YAAP,uWAQOtd,EAAMyc,UAAiBa,YAAxB,4HAAmB,OC7GxBK,IAzBgB7B,IAAOtV,IAAV,+FAMHsV,IAAOtV,IAAV,0DAIGsV,IAAOtV,IAAV,4EAKY8W,YAAH,qKAUIA,YAAH,4NAWjBM,GAAeN,YAAH,4ECUVO,GAnCX,WAAYhS,GAAmB,IAAD,gCAJtBxJ,eAIsB,OAFtByb,cAEsB,OAcvB5E,SAAW,SAACvR,EAAiB5G,EAAmBC,GAEnD,IAAMK,EAASH,EAAiBF,GAC1B+E,OAAuCzE,GAAfD,EAAOT,KAAoB,CAAEwC,YAAa,GAAIG,QAAS,MAASJ,EAAkB9B,EAAOT,MACvH,EAAKyB,UAAUuJ,UAAU6D,OAAO,EAAKqO,SAAU,EAAG,CAC9Chc,KAAM,QAASgK,OAAQ,CACnBnE,UAASD,OAAQ,CAAEE,KAAM,EAAGC,KAAM,GAAK9G,OAAMyO,GAAI,KAAMxO,YACvD+E,aAGR,EAAK+X,YAxBqB,KA2BvBC,iBAAmB,SAACpW,EAAiBuJ,GACxC,IAAMC,EAAQrQ,EAA0BoQ,GACxC,EAAKgI,SAASvR,EAASwJ,EAAMpQ,KAAMoQ,EAAMnQ,YA7Bf,KAgCvBgd,aAAe,WAAQ,OAAO,EAAK3b,WA/BtCkW,KAAKlW,UAAY,CACbuJ,UAAW,CACP,CAAE9J,KAAM,OAAQgK,OAAQD,GACxB,CAAE/J,KAAM,QAASgK,OAAQ,CAAEmS,MAAO,UAClC,CAAEnc,KAAM,UAAWgK,OAAQ,CAAE6D,UAAW,YACxC,CAAE7N,KAAM,QAASgK,OAAQ,CAAEmS,MAAO,SAEtCpZ,UAAW,IAGf0T,KAAKuF,SAAW,GCyFTI,GAzGG,WAAO,IAAD,EAEUzC,qBAAWC,IAAjC9Z,EAFY,EAEZA,MAAOqF,EAFK,EAELA,WAFK,EAIQ+U,mBAAiB,IAJzB,mBAIbmC,EAJa,KAILC,EAJK,KAMpB,OACI,gBAACC,GAAD,WACI,gBAACC,GAAD,WACI,eAACC,GAAD,CAAOtB,QAAS,WAoBZmB,EAAU/Y,KAAKC,UAlBS,CACpBsG,UAAW,CACP,CAAE9J,KAAM,OAAQgK,OAAQ,CAAEpB,SAAU,EAAG5E,IAAK,IAAK0Y,MAAO,QAASC,cAAe,QAChF,CAAE3c,KAAM,QAASgK,OAAQ,CAAEmS,MAAO,UAClC,CAAEnc,KAAM,UAAWgK,OAAQ,CAAE6D,UAAW,YACxC,CACI7N,KAAM,QAASgK,OAAQ,CACnBnE,QAAS,EAAGD,OAAQ,CAAEE,KAAM,EAAGC,KAAM,GAAK9G,KAAM,KAAMyO,GAAI,KAAMxO,UAAW,QAC3E+E,QAAS,CACL3C,YAAa,GACbG,QAAS,QAIrB,CAAEzB,KAAM,QAASgK,OAAQ,CAAEmS,MAAO,SAEtCpZ,UAAW,OAlBnB,oCAsBA,eAAC0Z,GAAD,CAAOtB,QAAS,WACZ,IAAMyB,EAAU,IAAIb,GAAa,CAAEnT,SAAU,EAAG5E,IAAK,IAAK0Y,MAAO,QAASC,cAAe,QACzFC,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BK,EAAU/Y,KAAKC,UAAUoZ,EAAQV,kBAnBrC,sHAqBA,eAACO,GAAD,CAAOtB,QAAS,WACZ,IAAMyB,EAAU,IAAIb,GAAa,CAAEnT,SAAU,EAAG5E,IAAK,IAAK0Y,MAAO,QAASC,cAAe,QACzFC,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BK,EAAU/Y,KAAKC,UAAUoZ,EAAQV,kBAlBrC,0GAoBA,eAACO,GAAD,CAAOtB,QAAS,WACZ,IAAMyB,EAAU,IAAIb,GAAa,CAAEnT,SAAU,EAAG5E,IAAK,IAAK0Y,MAAO,QAASC,cAAe,QACzFC,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQX,iBAAiB,EAAG,GAC5BW,EAAQxF,SAAS,EAAG,CAAEvZ,MAAO,EAAGC,QAAQ,GAAS,cACjD8e,EAAQX,iBAAiB,EAAG,GAC5BK,EAAU/Y,KAAKC,UAAUoZ,EAAQV,kBAVrC,kHAaJ,gBAACW,GAAD,WACI,eAACC,GAAD,CAAS1P,MAAOiP,EAAQU,SAAU,SAAAC,GAAC,OAAIV,EAAUU,EAAE3P,OAAOD,UAC1D,gBAAC6P,GAAD,WACI,eAACC,GAAD,CAAS/B,QAAS,WACdmB,EAAU/Y,KAAKC,UAAU1D,EAAMS,aADnC,oBAGA,eAAC2c,GAAD,CAAS/B,QAAS,WACd,IAAMrO,EAAOvJ,KAAKiM,MAAM6M,GACxBlX,EAAWsG,MAAMO,aAAac,GAC9BhN,EAAMO,WAAW8I,WAAa,EAC9BhE,EAAWsG,MAAMI,cAAjB,eAAoC/L,EAAMO,aAE1C8E,EAAWsG,MAAME,iBAAiB,IANtC,6BAgBd4Q,GAAQvC,IAAOtV,IAAV,sJAQL8X,GAAQxC,IAAOtV,IAAV,+KASLmY,GAAS7C,IAAOtV,IAAV,+KASN+X,GAAQzC,IAAOtV,IAAV,sfAsBLoY,GAAU9C,IAAOmD,SAAV,0SAaPF,GAAcjD,IAAOtV,IAAV,mLASXwY,GAAUlD,IAAOtV,IAAV,2PACPmX,ICnESuB,GAhHM,SAAClf,GACf,IAAD,EAE4Byb,qBAAWC,IAAjC9Z,EAFN,EAEMA,MAAOqF,EAFb,EAEaA,WAETD,EAAQpF,EAAMO,WACd2J,EAASlK,EAAMS,UAAUuJ,UAAU5E,EAAMiE,YAAYa,OAG3DqQ,qBAAU,WAEN,IAAMgD,EAAYje,EAAiB4K,EAAO9K,WACpCoe,EAA+B,MAAlBD,EAAUze,KAAe,KAAOQ,EAAiBie,EAAUze,MAExEiR,EAAuB,GACvBE,EAA0B,GAC1BE,EAA4B,GAC9BpS,EAAQ,EAEZ,GAAkB,MAAdyf,EACAzN,EAAQjQ,KAAK,SACbiQ,EAAQjQ,KAAK,SACbiQ,EAAQjQ,KAAK,cACbiQ,EAAQjQ,KAAK,YACbiQ,EAAQjQ,KAAK,YACbiQ,EAAQjQ,KAAK,oBACV,CACHnB,EAAYkB,SAAQ,SAACJ,GACbA,EAAOb,MAAQ4e,EAAW5e,KAC1BqR,EAAWnQ,KAAKL,EAAOb,QAG/B,IAAM6e,EAAU9d,EAAiB6d,EAAW5e,KAC5CD,EAAYkB,SAAQ,SAACJ,GACbge,EAAQxQ,SAASxN,EAAOb,MACxBmR,EAAQjQ,KAAKL,EAAOb,QAIhCmR,EAAQlQ,SAAQ,SAACJ,EAAQwC,GAClBxC,IAAWyK,EAAO9K,YACjBrB,EAAQkE,MAGhB,IAAMwb,EAAU9d,EAAiB4d,EAAU3e,KAC3CD,EAAYkB,SAAQ,SAACJ,GACbge,EAAQxQ,SAASxN,EAAOb,MACxBuR,EAAarQ,KAAKL,EAAOb,QAGjCwG,EAAM0K,UAAY,CACd/R,QACAgS,UACAE,aACAE,gBAEJ9K,EAAWsG,MAAMI,cAAc3G,KAChC,CAAC8E,EAAO9K,YAWX,IAAM0Q,EAAY1K,EAAM0K,UAElB4N,EAA2B,GAC3BC,EAAwB,GACxBC,EAA6B,GA+BnC,OA7BiB,MAAb9N,IACA4N,EAAU5d,KAAK,eAAC+d,GAAD,kBAAcH,EAAUxb,SACvC4N,EAAUG,WAAWpQ,SAAQ,SAACmE,EAAM/B,GAChC,IAAMxC,EAASH,EAAiB0E,GAChC0Z,EAAU5d,KACN,gBAAC,GAAD,CACI8a,UAAU,EADd,qBAEGnb,QAFH,IAEGA,OAFH,EAEGA,EAAQZ,KAFX,MAAY6e,EAAUxb,YAK9Byb,EAAO7d,KAAK,eAAC+d,GAAD,qBAAcF,EAAOzb,SACjC4N,EAAUC,QAAQlQ,SAAQ,SAACmE,EAAM/B,GAC7B,IAAMxC,EAASH,EAAiB0E,GAChC2Z,EAAO7d,KACH,gBAAC,GAAD,CACI8a,SAAU9K,EAAU/R,QAAUkE,EADlC,qBAEGxC,QAFH,IAEGA,OAFH,EAEGA,EAAQZ,KAFX,MAAY8e,EAAOzb,YAK3B0b,EAAY9d,KAAK,eAAC+d,GAAD,qBAAcD,EAAY1b,SAC3C4N,EAAUK,aAAatQ,SAAQ,SAACmE,EAAM/B,GAClC,IAAMxC,EAASH,EAAiB0E,GAChC4Z,EAAY9d,KACR,gBAAC,GAAD,CACI8a,UAAU,EADd,qBAEGnb,QAFH,IAEGA,OAFH,EAEGA,EAAQZ,KAFX,MAAY+e,EAAY1b,aAOhC,gBAAC,GAAD,WACI,eAAC4b,GAAD,UAAOJ,IACP,eAACI,GAAD,UAAOH,IACP,eAACG,GAAD,UAAOF,QAObnB,GAAQvC,IAAOtV,IAAV,oYAiBLkZ,GAAO5D,IAAOtV,IAAV,iLAUJiZ,GAAU3D,IAAOtV,IAAV,scAiBPwW,GAAQlB,IAAOtV,IAAV,+TAQL,SAAAxG,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,sDAAkB,MCrFlBqC,GAhFG,SAAC3f,GAGZ,IAAD,IAE4Byb,qBAAWC,IAAjC9Z,EAFN,EAEMA,MAEFoF,GAJJ,EAEaC,WAEDrF,EAAMO,YAGd4J,GAFYnK,EAAMS,UAAUuJ,UACR5L,EAAML,OAClBqH,EAAM2E,iBAAiB3L,EAAML,QAErCigB,EAAU,UAAG1e,EAAiBlB,EAAM8L,OAAO9K,kBAAjC,aAAG,EAA0CP,KAIzDof,EAA2B,KAEN,MAArB7f,EAAM8L,OAAO/K,OACAhB,EAAc,CACvBJ,MAAOK,EAAM8L,OAAO/K,KAAKpB,MACzBC,OAAQI,EAAM8L,OAAO/K,KAAKnB,SAE9BigB,EAAY1f,EAAa,CACrBR,MAAOK,EAAM8L,OAAO/K,KAAKpB,MACzBC,OAAQI,EAAM8L,OAAO/K,KAAKnB,QAC3BmM,EAAMrB,UAEc,MAAnB1K,EAAM8L,OAAO0D,KACFzP,EAAc,CACrBJ,MAAOK,EAAM8L,OAAO0D,GAAG7P,MACvBC,OAAQI,EAAM8L,OAAO0D,GAAG5P,SAElBO,EAAa,CACnBR,MAAOK,EAAM8L,OAAO0D,GAAG7P,MACvBC,OAAQI,EAAM8L,OAAO/K,KAAKnB,QAC3BmM,EAAMrB,YAIjB,IAAIoV,GAAO,EACLC,EAAY/Y,EAAM2E,iBAAiB3L,EAAML,MAAQ,GblC1B,IaqCzBK,EAAML,OAA+BogB,EAAUD,MAAQ/T,EAAM+T,MAC7DA,EAAM/T,EAAM+T,IAAM,GAEtB,IAAME,GAAmB,IAATF,GAA6B,IAAf/T,EAAMkU,KAEhCC,EAAY,IAKhB,OAJiB,MAAbL,IACAK,EAAS,UAAML,GAAN,OAAkBD,IAI3B,gBAACO,GAAD,WACI,eAACC,GAAD,UAASF,IAGT,gBAACG,GAAD,WACI,eAACC,GAAD,CACIN,QAASA,EADb,UAGc,IAATF,EAAa,8CAAcA,IAEhC,gBAACS,GAAD,WACI,gCACoB,IAAfxU,EAAMkU,KAAa,8CAAclU,EAAMkU,OAG1B,IAAjBlU,EAAMrE,OAAe,GAArB,YAA+BqE,EAAMrE,OAArC,QAEL,gBAAC8Y,GAAD,WACKra,KAAKsa,MAAM1U,EAAME,WAAa,KAAO,GAD1C,cAYVqU,GAAWxE,IAAOtV,IAAV,sIAMR,SAAAxG,GAAK,OAAKA,EAAMggB,QAAe1C,YAAtB,sKAAiB,MAQ1BkD,GAAc1E,IAAOtV,IAAV,+HAOX+Z,GAAQzE,IAAOtV,IAAV,4BAEL2Z,GAAUrE,IAAOtV,IAAV,+RAcP4Z,GAAStE,IAAOtV,IAAV,wOAEgBka,IAgBtBL,IAPWvE,IAAOtV,IAAV,iIAODsV,IAAOtV,IAAV,wbbtH4B,Ga8HzBka,GAILJ,GAEAC,KCvIOI,GArBK,SAAC3gB,GAEd,IAAD,EAE4Byb,qBAAWC,IAAjC9Z,EAFN,EAEMA,MAEFoF,GAJJ,EAEaC,WAEDrF,EAAMO,YACdiM,EAAYpH,EAAM2E,iBAAiB3L,EAAML,OAAOyO,UAChDwS,EAAa5Z,EAAMqH,iBAAiBD,GAEpCyS,EAAS1a,KAAKC,MAAMwa,EAAWE,QAAU,GACzCC,EAASH,EAAWE,QAAU,EAEpC,OACI,gBAAC,GAAD,WACI,gBAACE,GAAD,WAAOH,EAAmB,IAAXE,EAAe,GAAf,YAAyBA,EAAzB,QACf,eAACE,GAAD,QASN5C,GAAQvC,IAAOtV,IAAV,kSAcLwa,GAAOlF,IAAOtV,IAAV,wRAaJya,GAAUnF,IAAOtV,IAAV,uMCtCE0a,GAhBa,SAAClhB,GAIzB,OACI,gBAAC,GAAD,WACI,eAACmhB,GAAD,yBAGA,eAAC,GAAD,yBASN9C,GAAQvC,IAAOtV,IAAV,iIAOL2W,GAASrB,IAAOtV,IAAV,kRAaN2a,GAAQrF,YAAOqB,GAAPrB,CAAH,mDAILqE,GAAUrE,YAAOqB,GAAPrB,CAAH,mDC2DEsF,GA/FY,SAACphB,GAGrB,IAAD,QAC4Byb,qBAAWC,IAAjC9Z,EADN,EACMA,MAEFoF,GAHJ,EACaC,WAEDrF,EAAMO,YAEd4J,EAAQ/E,EAAM2E,iBAAiB3E,EAAMiE,YAErCvD,EAAS1H,EAAM8L,OAAOpE,OAEtBmG,EAAYjM,EAAMO,WAAW0L,UAC/BwT,EAA4B,KAC5BC,EAA0B,KAGL,MAArBthB,EAAM8L,OAAO/K,OACbsgB,EAAathB,EAAc,CACvBJ,MAAOK,EAAM8L,OAAO/K,KAAKpB,MACzBC,OAAQI,EAAM8L,OAAO/K,KAAKnB,SAElBO,EAAa,CACrBR,MAAOK,EAAM8L,OAAO/K,KAAKpB,MACzBC,OAAQI,EAAM8L,OAAO/K,KAAKnB,QAC3BmM,EAAMrB,UAEc,MAAnB1K,EAAM8L,OAAO0D,KACb8R,EAAWvhB,EAAc,CACrBJ,MAAOK,EAAM8L,OAAO0D,GAAG7P,MACvBC,OAAQI,EAAM8L,OAAO0D,GAAG5P,SAElBO,EAAa,CACnBR,MAAOK,EAAM8L,OAAO0D,GAAG7P,MACvBC,OAAQI,EAAM8L,OAAO/K,KAAKnB,QAC3BmM,EAAMrB,YAIjB,IAAMkV,EAAU,UAAG1e,EAAiBlB,EAAM8L,OAAO9K,kBAAjC,aAAG,EAA0CP,KAC7D,OAAO8gB,mBAAQ,kBACX,gBAAC,GAAD,WACI,eAACC,GAAD,CACIC,SAAU5T,EAAUyL,UAAYtZ,EAAM0hB,UACtCC,cAA6B,MAAdN,GAAsBpgB,EAAkC4N,SAASwS,EAAazB,GAAc,WAAa,OACxHgC,eAAmC,MAAnB5hB,EAAM8L,OAAO0D,IAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIX,SAAS7O,EAAM8L,OAAO0D,GAAG7P,OAH/F,SAKmB,MAAd0hB,EAAqB,OAAU,uCAC5B,eAACQ,GAAD,UAAcR,IACd,eAACS,GAAD,UAAgBlC,IAChB,eAACmC,GAAD,UAA6B,MAAZT,EAAmB,GAAnB,WAA4BA,UAQrD,eAACU,GAAD,CAAMP,SAAU5T,EAAUyL,UAAYtZ,EAAM0hB,UAA5C,SACM,WAEE,IADA,IAAMO,EAAyB,GACtBpe,EAAI,EAAGA,EAAI7D,EAAM8L,OAAOnE,QAAS9D,IAAK,CAC3C,IAAIqe,EAAsB,SACtBC,EAA0B,EAC9B,GAAI,CAAC,EAAGniB,EAAM8L,OAAOnE,QAAU,GAAGkH,SAAShL,GAAI,CAC3C,IAAMsL,EAAe,IAANtL,EAAU6D,EAAOE,KAAOF,EAAOG,KAC/B,IAAXsH,IACA+S,EAAU/S,EAAS,EAAI,OAAS,QAChCgT,EAAYhc,KAAKic,IAAIjT,IAG7B8S,EAAQvgB,KACJ,eAAC2gB,GAAD,CAEIH,QAASA,EACTC,UAAWA,GAFNte,IAMjB,OAAOoe,EApBT,UAyBR,CACEjiB,EAAM0hB,UAAW1hB,EAAM8L,OAAOnE,QADhC,UACyC3H,EAAM8L,OAAO/K,YADtD,aACyC,EAAmBpB,MAD5D,UAEEK,EAAM8L,OAAO0D,UAFf,aAEE,EAAiB7P,MACjBK,EAAM8L,OAAO9K,UACbgG,EAAM6G,UAAUyL,SAChBvN,EAAMrB,SACN1K,EAAM8L,OAAOpE,OAAOE,KACpB5H,EAAM8L,OAAOpE,OAAOG,QAM1BwW,GAAQvC,IAAOtV,IAAV,4PAYLqb,GAAc/F,IAAOtV,IAAV,4BACXsb,GAAgBhG,IAAOtV,IAAV,4BACbub,GAAiBjG,IAAOtV,IAAV,4BACdgb,GAAU1F,IAAOtV,IAAV,2fASP,SAAAxG,GAAK,OAAKA,EAAMyhB,SAAgBnE,YAAvB,wDAAkB,KASzBuE,IAEE,SAAA7hB,GAAK,MACiB,aAAxBA,EAAM2hB,cAA+BrE,YAArC,6CAC4B,cAAxBtd,EAAM2hB,cAAgCrE,YAAtC,6CACIA,YADJ,+CAKJwE,IAEE,SAAA9hB,GAAK,MACiB,aAAxBA,EAAM2hB,cAA+BrE,YAArC,6CAC4B,cAAxBtd,EAAM2hB,cAAgCrE,YAAtC,6CACIA,YADJ,+CAIJyE,IAEE,SAAA/hB,GAAK,OAAIA,EAAM4hB,eAAiB,GAAKtE,YAA5B,gDAgBb0E,IAXSlG,IAAOtV,IAAV,wOAWCsV,IAAOtV,IAAV,yKAMJ,SAAAxG,GAAK,OAAKA,EAAMyhB,SAAgBnE,YAAvB,wDAAkB,OAK3B+E,GAAWvG,IAAOtV,IAAV,iWAMR,SAAAxG,GAAK,MAAsB,UAAlBA,EAAMkiB,QAAsB5E,YAA5B,uDAEW,SAAlBtd,EAAMkiB,QAAqB5E,YAA3B,wDAEA,MAIF,SAAAtd,GAAK,MAAwB,KAApBA,EAAMmiB,UAAoB7E,YAA1B,wEAEa,MAApBtd,EAAMmiB,UAAqB7E,YAA3B,wEAEA,MCxLOgF,ID+LExG,IAAOtV,IAAV,8HC9Ma,SAACxG,GAIxB,IAAMiiB,EAAyB,GAI/B,OAHAA,EAAQvgB,KAAK,eAAC,GAAD,GAAc,IAC3BugB,EAAQvgB,KAAK,eAAC,GAAD,UAAiB1B,EAAM8L,OAAOmS,OAAjB,IAGtB,eAAC,GAAD,UAC4B,UAAvBje,EAAM8L,OAAOmS,MAAoBgE,EAAUA,EAAQhd,cAO1DoZ,GAAQvC,IAAOtV,IAAV,+MjBGuB,IiBM5Bya,GAAUnF,IAAOtV,IAAV,4JASP2W,GAASrB,IAAOtV,IAAV,+TCTG+b,GA1BW,SAACviB,GAIvB,OACI,gBAAC,GAAD,WACI,gBAAC,GAAD,WACI,eAACwiB,GAAD,qBACA,eAACC,GAAD,UAASziB,EAAM8L,OAAO0S,WAE1B,gBAAC,GAAD,WACI,eAACgE,GAAD,mBACA,eAACC,GAAD,UAASpiB,EAAuBL,EAAM8L,OAAOpB,eAEjD,gBAAC,GAAD,WACI,eAAC8X,GAAD,qBACA,eAACC,GAAD,UAASziB,EAAM8L,OAAOhG,SAE1B,gBAAC,GAAD,WACI,eAAC0c,GAAD,oBACA,eAACC,GAAD,UAASziB,EAAM8L,OAAO2S,uBAQhCJ,GAAQvC,IAAOtV,IAAV,sGAMLkc,GAAU5G,IAAOtV,IAAV,yTAaPgc,GAAS1G,IAAOtV,IAAV,gLAQNic,GAAS3G,IAAOtV,IAAV,gLCvCGmc,GAhBc,SAAC3iB,GAEvB,IAAD,EAC4Byb,qBAAWC,IAAjC9Z,EADN,EACMA,MAEFoF,GAHJ,EACaC,WAEDrF,EAAMO,YACdiM,EAAYpH,EAAM2E,iBAAiB3L,EAAML,OAAOyO,UAChDwS,EAAa5Z,EAAMqH,iBAAiBD,GAE1C,OACI,eAAC,GAAD,UACI,eAAC,GAAD,UAASwS,EAAWjR,eAO1B0O,GAAQvC,IAAOtV,IAAV,gNAUL2W,GAASrB,IAAOtV,IAAV,oSCXGoc,GAhBI,SAAC5iB,GAEb,IAAD,EAE4Byb,qBAAWC,IAAjC9Z,EAFN,EAEMA,MAFN,EAEaqF,WAEDrF,EAAMO,WAEpB,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,kBACA,eAAC,GAAD,4BAONkc,GAAQvC,IAAOtV,IAAV,kSAcL2W,GAASrB,IAAOtV,IAAV,iQAYN2a,GAAQrF,YAAOqB,GAAPrB,CAAH,qDAILqE,GAAUrE,YAAOqB,GAAPrB,CAAH,qDCkEE+G,GArGM,SAAC7iB,GAEf,IAAD,EAE4Byb,qBAAWC,IAAjC9Z,EAFN,EAEMA,MAAOqF,EAFb,EAEaA,WAETsJ,EAAUuS,iBAAO,IACjBC,EAAUD,iBAAO,IAEjB9b,EAAQpF,EAAMO,WACduf,EAAY1a,EAAMiE,YAAcjL,EAAML,MAEtCqM,EADYpK,EAAMS,UAAUuJ,UACR5L,EAAML,OAC1BoM,EAAQ/E,EAAM2E,iBAAiB3L,EAAML,OAE3Cwc,qBAAU,WACNpQ,EAAMyE,QAAQC,KAAOF,EAAQyS,QAC7BjX,EAAMyE,QAAQE,KAAOqS,EAAQC,QAC7B/b,EAAWsG,MAAMI,cAAc3G,KAChC,CAACA,EAAM2E,iBAAiB7H,SAM3B,IAAMmf,EAAUjc,EAAMiE,aAAejL,EAAML,MACrCujB,EAAgBlc,EAAM2E,iBAAiB3E,EAAMiE,YAAYmD,YAAcrC,EAAMqC,UAE7E+U,EAA+B,UAAjBnX,EAAQlK,KAAmB,KAAOkK,EAAQF,OAC9D,OACI,gBAAC,GAAD,CACIsX,IAAK7S,EACL8S,aAA+B,UAAjBrX,EAAQlK,KACtB0a,SAAUyG,EACVK,YAAaJ,EACbK,QAA0B,UAAjBvX,EAAQlK,KALrB,UAOI,eAAC0hB,GAAD,UACsB,UAAjBxX,EAAQlK,KAAmB,+BACxB,eAAC2hB,GAAD,UAAUvjB,EAAiB6L,EAAMrB,cAKxC,CAAC,OAAQ,QAAS,UAAW,UAAUmE,SAAS7C,EAAQlK,MACrD,eAAC4hB,GAAD,CACIN,IAAKL,EACLvG,SAAUyG,EACVK,YAAaJ,EACbphB,KAAMkK,EAAQlK,KACd6hB,UAAW,CAAC,QAAS,QAAQ9U,SAAS7C,EAAQlK,OAA8B,IAArBkF,EAAMiE,WAC7DgS,QAAS,WACgB,UAAjBjR,EAAQlK,OAGZkF,EAAMiE,WAAajL,EAAML,MACzBsH,EAAWsG,MAAMI,cAAc3G,KAXvC,SAaG,WACC,OAAQgF,EAAQlK,MACZ,IAAK,OACD,IAAMgK,EAASE,EAAQF,OACvB,OAAQ,eAAC,GAAD,CAAmBA,OAAQA,IAEvC,IAAK,UACcE,EAAQF,OACvB,OAAQ,eAAC,GAAD,CAAsBnM,MAAOK,EAAML,QAE/C,IAAK,QACD,IAAMmM,EAASE,EAAQF,OACvB,OAAQ,eAAC,GAAD,CAAoBA,OAAQA,EAAQ4V,UAAWuB,IAE3D,IAAK,SACD,IAAMnX,EAASE,EAAQF,OACvB,OAAQ,eAAC,GAAD,CAAqBA,OAAQA,KAhB9C,KAqBF,eAAC,GAAD,CAAoBA,OAAQE,EAAQF,SAIpB,UAAjBE,EAAQlK,KAAoB,eAAC,GAAD,CAAWnC,MAAOK,EAAML,MAAOmM,OAAQqX,IAC9C,YAAjBnX,EAAQlK,KAAsB,eAAC,GAAD,CAAanC,MAAOK,EAAML,QACnC,WAAjBqM,EAAQlK,KAAqB,eAAC,GAAD,CAAYnC,MAAOK,EAAML,QAClD,+BAEhB,qCAAK+hB,GAA4B,MAAfyB,GAA2C,MAApBA,EAAYpiB,MAAgBa,EAAMO,WAAW0L,UAAU8L,WAC5F,eAAC,GAAD,IAD0G,KAG7G,CAAC,QAAS,QAAQ9K,SAAS7C,EAAQlK,MAAQ,+BACxC,gBAAC8hB,GAAD,WACI,eAACC,GAAD,gBACA,eAACA,GAAD,CAAgB5G,QAAS,kBAAMhW,EAAWsG,MAAM+B,mBAAhD,sBAgBdoU,IAPY5H,IAAOtV,IAAV,uHAODsV,IAAOtV,IAAV,8WAUesd,IAEpB,SAAA9jB,GAAK,MAAmB,YAAfA,EAAM8B,KAAqB,GAAKwb,YAAhC,2EAGT,SAAAtd,GAAK,MAAmB,SAAfA,EAAM8B,KAAkB,GAAKwb,YAA7B,kGAIT,SAAAtd,GAAK,MAAmB,WAAfA,EAAM8B,KAAoB,GAAKwb,YAA/B,2EAMT,SAAAtd,GAAK,OAAIA,EAAMsjB,WAAa,GAAKhG,YAAxB,gGAIT,SAAAtd,GAAK,OAAKA,EAAM2jB,UAAiBrG,YAAxB,uDAAmB,MAM5B,SAAAtd,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,kHAAkB,OAM3BsG,GAAc9H,IAAOtV,IAAV,4BACXqd,GAAiB/H,IAAOtV,IAAV,4BAEd6X,GAAQvC,IAAOtV,IAAV,osCrBrJmB,IAGM,GqBqK9B,SAAAxG,GAAK,OAAIA,EAAMsjB,aAAetjB,EAAMujB,QAAU,GAAKjG,YAA1C,0EAIPsG,GrBrKgC,GqB4KzB,GACGG,GAGNF,GrBhL4B,OqBqM9B,SAAA7jB,GAAK,OAAKA,EAAMqjB,aAAoB/F,YAA3B,uMAGHoG,IACE,SAAA1jB,GAAK,OAAIA,EAAMwc,SAAW,GAAKc,YAAtB,0DAGXsG,IAPyB,MAcnCH,GAAU3H,IAAOtV,IAAV,4BACPgd,GAAQ1H,IAAOtV,IAAV,kZrB1NuB,GqBiO1Bid,ICtNOO,GA3BE,WAAO,IAAD,EACWvI,qBAAWC,IAAjC9Z,EADW,EACXA,MAEFsT,GAHa,EACJjO,WAEHrF,EAAMS,UAAUuJ,UAAU9H,QAGhCtC,EAAsB,GAC5B,GAAII,EAAMO,WAAWwJ,iBAAiB7H,SAAWoR,EAC7C,IAAK,IAAIrR,EAAI,EAAGA,EAAIqR,EAAKrR,IACrBrC,EAAKE,KACD,eAAC,GAAD,CAAsB/B,MAAOkE,GAAVA,IAI/B,OACI,gBAAC,GAAD,WAEI,eAACogB,GAAD,UACKziB,IAEL,eAACyiB,GAAD,QAUN5F,GAAQvC,IAAOtV,IAAV,2pBAmCLyd,IAPSnI,IAAOtV,IAAV,oIAOEsV,IAAOtV,IAAV,0RtB9C6B,GACA,GsBiD3B,IACC,Q,GCvEJ0d,Q,KAEmB,aAAG,SAACtiB,EAAcqF,GAgBvC,IAfA,IAAMD,EAAQpF,EAAMO,WAEduJ,GADU9J,EAAMgB,YAAYwI,QAChBpE,EAAM2E,kBAClBC,EAAYhK,EAAMS,UAAUuJ,UAC5B5I,EAAepB,EAAMoB,aACvB4R,GAAa,EACXuP,EAAS,WAIXld,EAAWsG,MAAMI,cAAc3G,IAG7B6E,EAAOD,EAAU,GAAGE,OAdwC,WAgBzDjI,GACL,IAAMkI,EAAQL,EAAU7H,GAClBmI,EAAUJ,EAAU/H,GAC1B,GAAqB,UAAjBmI,EAAQlK,KAAkB,CAC1B,IAAMgK,EAASE,EAAQF,OAOvB,IALmB,IAAf8I,IACAA,EAAY7I,EAAME,YAIH,MAAfH,EAAO/K,KAAc,iBAEzB,IAAM2E,GAAaoG,EAAO/K,KAAKpB,MAAQkM,EAAKnB,UAAY,GAClDrJ,EAASH,EAAiB4K,EAAO9K,WACjCkH,EAAM4D,EAAOnE,QAAUmE,EAAOpE,OAAOE,KAAOkE,EAAOpE,OAAOG,KAE1D9B,EAAU+F,EAAO/F,QACjBmG,EAAY/C,EAAYgD,wBAAwBpG,EAAQ3C,YAAasC,EAAWrE,GAEhF4E,EAAY,GAAK4F,EAAK/F,IAAMoC,EAClClF,EAAatB,KACTqF,YAAW,WAMPoC,EAAYiD,YAAYxK,EAAOoB,EAAc6I,EAAK/F,IAAKC,EAASmG,EAAWjG,GAC3Ee,EAAMiE,WAAapH,EACnBsgB,MAEDpY,EAAME,WAAa2I,EAjCnB,IAqCP/Q,IAAM+H,EAAU9H,OAAS,GACzBd,EAAatB,KACTqF,YAAW,WACPmd,GAAclZ,YAAYpJ,EAAOqF,EAAYjE,KAC7C+I,EAAME,WAAa2I,EAzCpB,KACN/Q,EAAImD,EAAMiE,WAAYpH,EAAI+H,EAAU9H,OAAQD,IAAK,EAAjDA,GA4CTmD,EAAMI,WAAY,EAClB+c,KAGoB,eAAG,SAACviB,EAAcqF,EAAwBjE,GAAoC,IAAD,EAC3FgE,EAAQpF,EAAMO,WACpB6E,EAAMI,WAAY,EAGlBpE,EAAavB,SAAQ,SAAA4F,GAAE,OAAI+c,aAAa/c,MACxCJ,EAAW8F,OAAOM,gBAAgB,IAClCpG,EAAWsG,MAAMI,cAAc3G,GAE/B,UAAApF,EAAMgB,YAAYsE,aAAlB,SAAyBC,QAGC,qBAAG,SAACvF,EAAcqF,GAE5C,IAAMD,EAAQpF,EAAMO,WACda,EAAepB,EAAMoB,aAErB6I,EADYjK,EAAMS,UAAUuJ,UACX,GAAGE,OACpBQ,EAAW1K,EAAMS,UAAUuJ,UAAU5E,EAAMiE,YACjD,GAAgB,MAAZqB,EAAkB,CAElB,IAAMR,EAASQ,EAASR,OAExB,GAAmB,MAAfA,EAAO/K,KAAc,OAEzB,IAAM2E,GAAaoG,EAAO/K,KAAKpB,MAAQkM,EAAKnB,UAAY,GAClDrJ,EAASH,EAAiB4K,EAAO9K,WACjCkH,EAAM4D,EAAOnE,QAAUmE,EAAOpE,OAAOE,KAAOkE,EAAOpE,OAAOG,KAE1D9B,EAAU+F,EAAO/F,QACjBmG,EAAY/C,EAAYgD,wBAAwBpG,EAAQ3C,YAAasC,EAAWrE,GAChF4E,EAAY,GAAK4F,EAAK/F,IAAMoC,EAElCiB,EAAYiD,YAAYxK,EAAOA,EAAMoB,aAAc6I,EAAK/F,IAAKC,EAASmG,EAAWjG,GAEjFjD,EAAatB,KAAKqF,YAAW,WACzBC,EAAMI,WAAY,EAClBH,EAAWsG,MAAMI,cAAc3G,KACpB,IAAZf,IACHe,EAAMI,WAAY,EAClBH,EAAWsG,MAAMI,cAAc3G,KAK5Bkd,I,2lBAAAA,MC9GFG,GAAc,SAACvF,EAAkBld,EAAcqF,GAExD,IAAMqd,EAAS1iB,EAAM+W,QAAQC,UAAUC,KACjChL,EAAYjM,EAAMO,WAAW0L,UAI7Be,EAAOhN,EAAMS,UACb2E,EAAQpF,EAAMO,WAEdoiB,EAAwB,SADd3V,EAAKhD,UAAU5E,EAAMiE,YAAYnJ,KAKjD,GAAIkF,EAAMI,UACN,OAAQ0X,EAAEte,KACN,IAAK,IACD0jB,GAAclZ,YAAYpJ,EAAOqF,EAAYrF,EAAMoB,mBAM3D,GAAkC,SAA9BpB,EAAMO,WAAWgU,UACjB,GAAIoO,EACA,GAAI1W,EAAUyL,SACV,OAAQwF,EAAEte,KACN,KAAK8jB,EAAO9K,QACRvS,EAAWsG,MAAMmB,qBAAoB,GAErC,MACJ,KAAK4V,EAAO/K,QACRtS,EAAWsG,MAAMmB,qBAAoB,GAErC,MACJ,KAAK4V,EAAO5K,QACRzS,EAAWsG,MAAMuB,kBAAiB,GAElC,MACJ,KAAKwV,EAAO7K,QACRxS,EAAWsG,MAAMuB,kBAAiB,GAElC,MACJ,IAAK,IAAK7H,EAAWsG,MAAM6B,4BAA2B,GAAQ,KAAO,MACrE,IAAK,IAAKnI,EAAWsG,MAAM6B,4BAA2B,EAAO,KAAO,MACpE,IAAK,IAAKnI,EAAWsG,MAAM6B,4BAA2B,GAAO,KAAO,MACpE,IAAK,IAAKnI,EAAWsG,MAAM6B,4BAA2B,EAAM,UAE7D,GAAIvB,EAAU8L,WACjB,OAAQmF,EAAEte,KACN,IAAK,UACDyG,EAAW5F,OAAOmQ,QAAO,GAEzB,MACJ,IAAK,YACDvK,EAAW5F,OAAOmQ,QAAO,GAEzB,MACJ,IAAK,YACDvK,EAAW5F,OAAOuQ,SAElB,MACJ,IAAK,aACD3K,EAAW5F,OAAOyQ,gBChEhB,SAACgN,EAAkBld,EAAcqF,GAG3D,IAAMqd,EAAS1iB,EAAM+W,QAAQC,UAAUC,KAKjCjK,GAJYhN,EAAMO,WAAW0L,UAItBjM,EAAMS,WACb2E,EAAQpF,EAAMO,WAIpB,OAHgByM,EAAKhD,UAAU5E,EAAMiE,YAAYnJ,MAI7C,IAAK,QACgBF,EAAMO,WAAWgU,SAAlC,IACMrK,EAAS8C,EAAKhD,UAAU5E,EAAMiE,YAAYa,OAChD,OAAQgT,EAAEte,KACN,IAAK,IACD0jB,GAAc3X,kBAAkB3K,EAAOqF,GAEvC,MACJ,IAAK,IACDA,EAAWsG,MAAM6D,oBAEjB,MACJ,IAAK,IACkB,MAAftF,EAAO/K,MACPkG,EAAWlB,QAAQmQ,oBAGvB,MACJ,IAAK,IACkB,MAAfpK,EAAO/K,MACPkG,EAAWsG,MAAM8D,eAGrB,MACJ,IAAK,IACkB,MAAfvF,EAAO/K,MACPkG,EAAWsG,MAAMgE,cAGrB,MACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACDtK,EAAWsG,MAAM0D,iBAAiBuT,OAAO1F,EAAEte,KAAO,IAOlE,OAAQse,EAAEte,KAEN,KAAK8jB,EAAOxL,YACR7R,EAAWsG,MAAMQ,aAAY,GAE7B,MACJ,KAAKuW,EAAOvL,YACR9R,EAAWsG,MAAMQ,aAAY,GAE7B,MAEJ,KAAKuW,EAAOtL,YACR/R,EAAWsG,MAAMW,aAAY,GAE7B,MACJ,KAAKoW,EAAOrL,YACRhS,EAAWsG,MAAMW,aAAY,GAE7B,MACJ,KAAKoW,EAAOpL,SACRjS,EAAWsG,MAAM+B,kBAEjB,MACJ,KAAKgV,EAAOnL,WACRlS,EAAWsG,MAAMmC,oBAEjB,MACJ,IAAK,IACDzI,EAAWsG,MAAMqC,mBAEjB,MACJ,KAAK0U,EAAOjL,UACRpS,EAAWsG,MAAM+C,mBAEjB,MACJ,IAAK,IACD4T,GAAcvP,aAAa/S,EAAOqF,IDzB1Bwd,CAAe3F,EAAGld,EAAOqF,OAGI,YAA9BrF,EAAMO,WAAWgU,UEzEF,SAAC2I,EAAkBld,EAAcqF,GAEhDrF,EAAM+W,QAAQC,UAAUC,KACrBjX,EAAMO,WAAW0L,UAItBjM,EAAMS,UALnB,IAMM2E,EAAQpF,EAAMkB,aAEpB,GAAa,MAATkE,EAAJ,CAGA,IAAMmd,EAAS,kBAAMld,EAAWlB,QAAQwB,SAASP,IAC3CzD,EAAUyD,EAAMzD,QAGtB,GAAKyD,EAAMI,UAgHP,OAAQ0X,EAAEte,KACN,IAAK,IACD2I,EAAY6B,YAAYpJ,EAAOoF,EAAOC,EAAYrF,EAAMoB,kBAlH9C,CAClB,OAAQ8b,EAAEte,KACN,IAAK,IACDyG,EAAWlB,QAAQ6Q,qBAEnB,MACJ,IAAK,QACD3P,EAAWlB,QAAQkR,uBAEnB,MACJ,IAAK,IACIjQ,EAAMoB,UACPnB,EAAWlB,QAAQsS,cAM/B,GAAe,MAAX9U,EAAiB,CACjB,OAAQub,EAAEte,KACN,IAAK,YACDyG,EAAWlB,QAAQ2R,mBAAkB,GAErC,MACJ,IAAK,aACDzQ,EAAWlB,QAAQ2R,mBAAkB,GAI7C,IAA8B,IAA1BnU,EAAQiF,aAER,OAAQsW,EAAEte,KACN,IAAK,UAIL,IAAK,YAGD,MACJ,IAAK,IACDyG,EAAWlB,QAAQsR,mBAEnB,MACJ,IAAK,IACDpQ,EAAWlB,QAAQqS,cAEnB,MACJ,IAAK,IACDnR,EAAWlB,QAAQgS,kBAAkB,IAErC,MACJ,IAAK,IACD9Q,EAAWlB,QAAQgS,kBAAkB,GAErC,MACJ,IAAK,IACD9Q,EAAWlB,QAAQgS,kBAAkB,GAErC,MACJ,IAAK,IACD9Q,EAAWlB,QAAQgS,kBAAkB,GAErC,MACJ,IAAK,IACD9Q,EAAWlB,QAAQgS,kBAAkB,GAErC,MACJ,IAAK,IACD9Q,EAAWlB,QAAQiS,uBAEnB,MACJ,IAAK,SACD/Q,EAAWlB,QAAQoS,eAEnB,MACJ,IAAK,IACD5U,EAAQiF,aAAe,EACvB2b,SAOR,OAAQrF,EAAEte,KACN,IAAK,UACDyG,EAAWlB,QAAQ8R,kBAAiB,GAEpC,MACJ,IAAK,YACD5Q,EAAWlB,QAAQ8R,kBAAiB,GAEpC,MACJ,IAAK,IACDtU,EAAQiF,cAAgB,EACxB2b,IAEA,MACJ,IAAK,QACD,IACM3e,EAAoD,MADzCyB,EAAWlB,QAAQkS,WAC6B,CAAEyM,OAAQ,IAAKC,OAAQ,EAAGC,OAAQ,GAAM,KACzG3d,EAAWlB,QAAQmS,SAAS1S,GAC5ByB,EAAWlB,QAAQ0R,uBF9C/BoN,CAAmB/F,EAAGld,EAAOqF,IAK5B6d,GAAgB,SAAChG,EAAkBld,EAAcqF,EAAwB8d,GAElF,IAAM/d,EAAQpF,EAAMO,WACpB,IAAK6E,EAAMI,WACgB,SAAnBJ,EAAMmP,SAAqB,CAC3B,IAAMmO,EAAS1iB,EAAM+W,QAAQC,UAAUC,KACjChL,EAAYjM,EAAMO,WAAW0L,UAGnC,OAAQiR,EAAEte,KACN,KAAK8jB,EAAOhL,SACRzL,EAAUyL,SAAWyL,EACrB9d,EAAWsG,MAAMK,aAAaC,GAE9B,MACJ,KAAKyW,EAAO3K,WACR9L,EAAU8L,WAAaoL,EACvB9d,EAAWsG,MAAMK,aAAaC,IAM1CkX,GACAV,GAAYvF,EAAGld,EAAOqF,IGgCf+d,GAtIO,SAAChlB,GAWnB,IAVG,IAAD,EAE4Byb,qBAAWC,IAAjC9Z,EAFN,EAEMA,MAAOqF,EAFb,EAEaA,WAETD,EAAQpF,EAAMO,WAEd2J,EADMlK,EAAMS,UAAUuJ,UAAU5E,EAAMiE,YACzBa,OACbC,EAAQ/E,EAAM2E,iBAAiB3E,EAAMiE,YAErCga,EAA8B,GATlC,WAUOphB,GACL,IAAMkT,EAAUjL,EAAOnE,SAAY9D,EAAI,EACvCohB,EAAavjB,KACT,eAACwjB,GAAD,CAAmBnO,QAASA,EAASkG,QAAS,WAC1C,IAAMrO,EAAOhN,EAAMS,UACnBuM,EAAKhD,UAAYgD,EAAKhD,UAAU1C,QAChC4C,EAAOnE,QAAW9D,EAAI,EACtB+K,EAAKhD,UAAUhK,EAAMO,WAAW8I,YAAYa,OAASA,EACrD7E,EAAWsG,MAAMO,aAAac,IALlC,SAOI,2BAPY/K,KAHfA,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GAeT,IAAMshB,EAA8B,GACpCzlB,EAAS+B,SAAQ,SAACV,EAAM8C,GACpB,IAAMuhB,EAAe/f,KAAKC,UAAUwG,EAAO/K,QAAUsE,KAAKC,UAAUvE,GAC9DskB,EAA0B,MAAbvZ,EAAO0D,IAAcnK,KAAKC,UAAUwG,EAAO0D,MAAQnK,KAAKC,UAAUvE,GACrFokB,EAAazjB,KACT,eAAC4jB,GAAD,CACIF,aAAcA,EACdC,WAAYA,EACZE,WAAoB,MAARxkB,GAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAI8N,SAAS9N,EAAKpB,OACjEsd,QAAS,WACL,IAAMrO,EAAOhN,EAAMS,WAEfgjB,GAAsB,MAARtkB,KACd+K,EAAO0D,GAAK,MAEhB1D,EAAO/K,KAAe,MAARA,EAAe,KAAf,eAA2BA,GACzC6N,EAAKhD,UAAUhK,EAAMO,WAAW8I,YAAYa,OAASA,EACrD7E,EAAWsG,MAAMO,aAAac,IAElC4W,cAAe,WACX,IAAM5W,EAAOhN,EAAMS,UAEA,MAAfyJ,EAAO/K,MAAiBqkB,IAGpBtZ,EAAO0D,GADP6V,GAGoB,MAARtkB,EAFA,KAEA,eAA2BA,GAE3C6N,EAAKhD,UAAUhK,EAAMO,WAAW8I,YAAYa,OAASA,EACrD7E,EAAWsG,MAAMO,aAAac,KAzB1C,SA6Ba,MAAR7N,EAAe,IAAM,uCACjBhB,EAAcgB,GADG,KACMZ,EAAaY,EAAMgL,EAAMrB,UAD/B,QA7BV7G,OAoCxB,IAAM4hB,EAAgC,GAmBtC,OAlBAllB,EAAYkB,SAAQ,SAACJ,EAAQwC,GACzB,IAAM2Y,EAA0B,MAAf1Q,EAAO/K,MAAgBM,EAAOb,MAAQsL,EAAO9K,UAC9DykB,EAAe/jB,KACX,gBAACgkB,GAAD,CACIlJ,SAAUA,EACV+I,YAAY,EACZtI,QAAS,WACL,IAAMrO,EAAOhN,EAAMS,UACnByJ,EAAO9K,UAAYK,EAAOb,IAC1BoO,EAAKhD,UAAUhK,EAAMO,WAAW8I,YAAYa,OAASA,EACrD7E,EAAWsG,MAAMO,aAAac,IAPtC,cAUMvN,EAAOZ,KAVb,MAAkBoD,OAgBtB,gBAAC,GAAD,WACI,gBAAC8hB,GAAD,WACI,eAACC,GAAD,UAAa,gBACb,eAAC,GAAD,UACKX,IAEL,gBAACY,GAAD,WACI,eAACC,GAAD,UAAe,gBAEf,eAACC,GAAD,CAAaC,WAAW,EAAMlkB,KAAK,QAAQmkB,KAAM,IAAMC,KAAM,GAAKC,IAAK,GACnEjX,MAAOpD,EAAOpE,OAAOE,KACrBiX,SAAU,SAACC,GACP,IAAMlQ,EAAOhN,EAAMS,UACnBuM,EAAKhD,UAAYgD,EAAKhD,UAAU1C,QAChC4C,EAAOpE,OAAOE,KAAO4c,OAAO1F,EAAE3P,OAAOD,OACrCN,EAAKhD,UAAUhK,EAAMO,WAAW8I,YAAYa,OAASA,EACrD7E,EAAWsG,MAAMO,aAAac,MAGtC,eAACkX,GAAD,UAAe,gBAEf,eAACC,GAAD,CAAaC,WAAW,EAAOlkB,KAAK,QAAQmkB,KAAM,IAAMC,KAAM,GAAKC,IAAK,GACpEjX,MAAOpD,EAAOpE,OAAOG,KACrBgX,SAAU,SAACC,GACP,IAAMlQ,EAAOhN,EAAMS,UACnBuM,EAAKhD,UAAYgD,EAAKhD,UAAU1C,QAChC4C,EAAOpE,OAAOG,KAAO2c,OAAO1F,EAAE3P,OAAOD,OACrCN,EAAKhD,UAAUhK,EAAMO,WAAW8I,YAAYa,OAASA,EACrD7E,EAAWsG,MAAMO,aAAac,YAK9C,gBAAC,GAAD,WACI,eAACwX,GAAD,UACKjB,IAEL,eAACkB,GAAD,CACI5J,UAA0B,MAAf3Q,EAAO/K,KADtB,SAGK0kB,WAUfG,GAAa9J,IAAOtV,IAAV,0ZAiBV6X,GAAQvC,IAAOtV,IAAV,sJAQLmf,GAAU7J,IAAOtV,IAAV,uJAQP+Z,GAAQzE,IAAOtV,IAAV,sJAOL0e,GAAYpJ,IAAOtV,IAAV,+VAeL,SAAAxG,GAAK,OAAKA,EAAM+W,QAAeuG,YAAtB,4KAAiB,MAO9BuI,GAAU/J,IAAOtV,IAAV,sJAQPsf,GAAehK,IAAOtV,IAAV,oZAyCZuf,GAAcjK,IAAOwK,MAAV,kKAQX,SAAAtmB,GAAK,OAAKA,EAAMgmB,UAAiB1I,YAAxB,uEAAmB,MAM5B8C,GAAStE,IAAOtV,IAAV,uMAWN4f,GAAQtK,IAAOtV,IAAV,sJAOL8e,GAAYxJ,IAAOtV,IAAV,seAUT,SAAAxG,GAAK,OAAKA,EAAMolB,aAAoB9H,YAA3B,wDAAsB,MAC/B,SAAAtd,GAAK,OAAKA,EAAMqlB,WAAkB/H,YAAzB,wDAAoB,MAI7B,SAAAtd,GAAK,OAAKA,EAAMulB,WAAkBjI,YAAzB,2CAAoB,MAUzB,SAAAtd,GAAK,OAAKA,EAAMolB,aAAoB9H,YAA3B,wDAAsB,MAC/B,SAAAtd,GAAK,OAAKA,EAAMqlB,WAAkB/H,YAAzB,wDAAoB,MAIjC+I,GAAUvK,IAAOtV,IAAV,4KAQP,SAAAxG,GAAK,OAAKA,EAAMyc,UAAiBa,YAAxB,wFAAmB,MAM5BoI,GAAc5J,IAAOtV,IAAV,gdASX,SAAAxG,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,wDAAkB,MAI3B,SAAAtd,GAAK,OAAKA,EAAMulB,WAAkBjI,YAAzB,2CAAoB,MAUzB,SAAAtd,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,wDAAkB,MC5QtBiJ,GAhFM,WAAO,IAAD,EAEO9K,qBAAWC,IAAjC9Z,EAFe,EAEfA,MAAOqF,EAFQ,EAERA,WAET2H,EAAOhN,EAAMS,UACbyJ,EAAS8C,EAAKhD,UAAU,GAAGE,OAE3B0a,EAAkC,CAAC,QAAS,SAAS7gB,KAAI,SAACC,EAAM/B,GAClE,OACI,eAAC4iB,GAAD,CAAoBjK,SAAU1Q,EAAO0S,QAAU5Y,EAAMqX,QAAS,WAC1DnR,EAAO0S,MAAQ5Y,EACfgJ,EAAKhD,UAAYgD,EAAKhD,UAAU1C,QAChCjC,EAAWsG,MAAMO,aAAac,IAHlC,SAKKhJ,GALY/B,MAWnB6iB,GAD2B,UAAjB5a,EAAO0S,MAAoBne,EAAyBC,GACtBqF,KAAI,SAACC,EAAM/B,GACrD,IAAM2a,EAAQ1S,EAAO0S,MACrB,OACI,eAACmI,GAAD,CAAkBnK,SAAU1Q,EAAOpB,WAAa7G,EAAGoZ,QAAS,WACxDnR,EAAOpB,SAAW7G,EAClB+K,EAAKhD,UAAYgD,EAAKhD,UAAU1C,QAChCjC,EAAWsG,MAAMO,aAAac,IAHlC,mBAKQhJ,EALR,YAKgB4Y,IALD3a,MAWjB+iB,EAAiC,CAAC,MAAO,OAAOjhB,KAAI,SAACC,EAAM/B,GAC7D,OACI,eAACgjB,GAAD,CAAmBrK,SAAU1Q,EAAO2S,gBAAkB7Y,EAAMqX,QAAS,WACjEnR,EAAO2S,cAAgB7Y,EACvBgJ,EAAKhD,UAAYgD,EAAKhD,UAAU1C,QAChCjC,EAAWsG,MAAMO,aAAac,IAHlC,SAKKhJ,GALW/B,MAWxB,OACI,gBAAC,GAAD,WACI,eAACijB,GAAD,oBACA,eAACC,GAAD,UAAaP,IACb,eAACM,GAAD,kBACA,eAACE,GAAD,UAAWN,IACX,eAACI,GAAD,oBACA,gBAACG,GAAD,WACI,wBACInlB,KAAK,SAASokB,IAAK,GAAIC,IAAK,IAAKF,KAAM,EACvC/W,MAAOpD,EAAOhG,IACd+Y,SAAU,SAACC,GACPhT,EAAOhG,IAAMgZ,EAAEoI,cAAcC,cAC7BvY,EAAKhD,UAAYgD,EAAKhD,UAAU1C,QAChCjC,EAAWsG,MAAMO,aAAac,MAGtC,wBACI9M,KAAK,QAAQokB,IAAK,GAAIC,IAAK,IAAKF,KAAM,EACtC/W,MAAOpD,EAAOhG,IACd+Y,SAAU,SAACC,GACPhT,EAAOhG,IAAMgZ,EAAEoI,cAAcC,cAC7BvY,EAAKhD,UAAYgD,EAAKhD,UAAU1C,QAChCjC,EAAWsG,MAAMO,aAAac,SAI1C,eAACkY,GAAD,mBACA,eAACM,GAAD,UAAYR,QAOlBvI,GAAQvC,IAAOtV,IAAV,sJAQLsgB,GAAchL,IAAOtV,IAAV,4YAgBXugB,GAAajL,IAAOtV,IAAV,0LASVigB,GAAa3K,IAAOtV,IAAV,6WAQV,SAAAxG,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,wEAAkB,MAe3B0J,GAAWlL,IAAOtV,IAAV,gMASRmgB,GAAW7K,IAAOtV,IAAV,8WAQR,SAAAxG,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,wEAAkB,MAe3B2J,GAAanL,IAAOtV,IAAV,6pBA8BV4gB,GAAYtL,IAAOtV,IAAV,gMASTqgB,GAAY/K,IAAOtV,IAAV,8WAQT,SAAAxG,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,wEAAkB,MChKlB+J,GA1DS,SAACrnB,GAClB,IAAD,EAE4Byb,qBAAWC,IAAjC9Z,EAFN,EAEMA,MAAOqF,EAFb,EAEaA,WACTD,EAAQpF,EAAMO,WAEd2J,EADMlK,EAAMS,UAAUuJ,UAAU5E,EAAMiE,YACzBa,OAEbwb,EAAe,SAACpY,GAClBpD,EAAO6D,UAAYT,EACnBtN,EAAMS,UAAUuJ,UAAYhK,EAAMS,UAAUuJ,UAAU1C,QACtDjC,EAAWsG,MAAMO,aAAalM,EAAMS,YAGlCklB,EAAqChG,mBAAQ,WAC/C,IAAMU,EAAyB,GAa/B,MAZA,CAAC,QAAS,SAAU,SAAU,OAAQ,SAAU,SAASxgB,SAAQ,SAACmE,GAC9D,IAAM4W,EAA8C,IAAnC1Q,EAAO6D,UAAU6X,QAAQ5hB,GAC1Cqc,EAAQvgB,KACJ,eAAC+lB,GAAD,CAAoCjL,SAAUA,EAC1CS,QAAS,WACLqK,EAAa1hB,IAFrB,SAKKA,GALeqc,EAAQne,YAS7Bme,IACR,IAEGyF,EAAmCnG,mBAAQ,WAC7C,IAAMU,EAAyB,GAS/B,MARA,CAAC,EAAG,EAAG,EAAG,GAAGxgB,SAAQ,SAACmE,GAClB,IAAM4W,GAA0D,IAA/C1Q,EAAO6D,UAAU6X,QAAQ5hB,EAAK+hB,YAC/C1F,EAAQvgB,KACJ,eAACkmB,GAAD,CAAkCpL,SAAUA,EAA5C,SACK5W,GADaqc,EAAQne,YAK3Bme,IACR,IAEH,OACI,gBAAC,GAAD,WACI,eAAC4F,GAAD,CAAa/lB,KAAK,OACdoN,MAAOpD,EAAO6D,UACdkP,SAAU,SAACC,GACPwI,EAAaxI,EAAE3P,OAAOD,UAG9B,eAAC4Y,GAAD,UAAiBP,IACjB,eAACQ,GAAD,UAAeL,QAOrBrJ,GAAQvC,IAAOtV,IAAV,sJAQLqhB,GAAc/L,IAAOwK,MAAV,gUAiBX0B,GAAYlM,IAAOtV,IAAV,iUAiBTshB,GAAiBhM,IAAOtV,IAAV,4LASduhB,GAAejM,IAAOtV,IAAV,4LASZihB,GAAgB3L,YAAOkM,GAAPlM,CAAH,uEAIb,SAAA9b,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,wEAAkB,MAK3BsK,GAAc9L,YAAOkM,GAAPlM,CAAH,uEAIX,SAAA9b,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,wEAAkB,MCxGlB2K,GA1BM,WAAO,IAAD,EAEOxM,qBAAWC,IAAjC9Z,EAFe,EAEfA,MACFoF,GAHiB,EAERC,WACDrF,EAAMO,YACdyJ,EAAYhK,EAAMS,UAAUuJ,UAElC,IAA0B,IAAtB5E,EAAMiE,YAAqBjE,EAAMiE,WAAaW,EAAU9H,OAAS,EACjE,OAAO,+BAGX,IAAMkI,EAAUJ,EAAU5E,EAAMiE,YAEhC,OACI,eAAC,GAAD,UACM,WACE,OAAQe,EAAQlK,MACZ,IAAK,OAAQ,OAAO,eAAC,GAAD,IACpB,IAAK,UAAW,OAAO,eAAC,GAAD,IACvB,IAAK,QAAS,OAAO,eAAC,GAAD,IACrB,IAAK,SAAU,OAAO,gCAL5B,MAcRuc,GAAQvC,IAAOtV,IAAV,wMCgJI0hB,GA5KK,WAwBhB,IAxBuB,IAAD,EAEQzM,qBAAWC,IAAjC9Z,EAFc,EAEdA,MAEFoF,GAJgB,EAEPC,WAEDrF,EAAMO,YACdgmB,EAAWvmB,EAAMS,UAAUuJ,UAC3BX,EAAajE,EAAMiE,WACnBS,EAAY1E,EAAM2E,iBAEpByc,EAA0B,+BAC1BC,EAA2B,+BAC3BC,EAA2B,+BAC3BC,EAA4B,+BAC5BC,EAA6B,+BAC7BC,EAA6B,+BAE3BC,EAA+B,GAIjC5K,EAAW,EACX6K,EAAY,EACZC,EAAYT,EAASrkB,OAAS,EAC9B+kB,EAAO5d,EACJ4d,EAAO,GAAG,CAEb,GAAqB,UADLV,EAASU,GACb/mB,KAAkB,CAC1Bgc,EAAW+K,EACX,MAEJA,IAGJ,GAAI/K,EAAW,EAEX,IADA+K,EAAO/K,EAAW,EACX+K,EAAO,GAAG,CAEb,GAAqB,UADLV,EAASU,GACb/mB,KAAkB,CAC1B6mB,EAAYE,EACZ,MAEJA,IAIR,IADAA,EAAO5d,EAAa,EACb4d,EAAOV,EAASrkB,OAAS,GAAG,CAE/B,GAAqB,UADLqkB,EAASU,GACb/mB,KAAkB,CAC1B8mB,EAAYC,EACZ,MAEJA,IAEJ,IAA0B,IAAtB7hB,EAAMiE,YAAqBjE,EAAMiE,WAAajE,EAAM2E,iBAAiB7H,OACrE,OAAO,+BAGX,IAAMglB,EAAM,SAACC,EAAiBhd,GAE1B,IADA,IAAMid,EAASjd,EAAMkU,KAAOlU,EAAMrE,OACzB7D,EAAI,EAAGA,EAAIsC,KAAKC,MAAM2iB,EAAU,KAAOllB,IAAK,CACjD,IAAMmL,EAAMnL,EAAIsC,KAAKC,MAAM4iB,EAAS,KAChCC,EAAyD,CAAEnY,MAAO,EAAGoY,OAAQ,GAAIC,MAAO,QAC5F,QAAQ,GACJ,KAAKna,EAAM,KAAO,EAAGia,EAAO,CAAEnY,MAAO,EAAGoY,OAAQ,GAAIC,MAAO,WAAa,MACxE,KAAKna,EAAM,IAAM,EAAGia,EAAO,CAAEnY,MAAO,EAAGoY,OAAQ,GAAIC,MAAO,WAAa,MACvE,KAAKna,EAAM,IAAM,EAAGia,EAAO,CAAEnY,MAAO,EAAGoY,OAAQ,GAAIC,MAAO,WAE9DT,EAAchnB,KACV,eAAC0nB,GAAD,CAEItY,MAAOmY,EAAKnY,MACZoY,OAAQD,EAAKC,OACbC,MAAOF,EAAKE,MAJhB,SAMKna,EAAM,KAAO,EAAI,eAACqa,GAAD,UAAOtd,EAAM+T,IAAM,GAAgB,IAAXkJ,EAAe,EAAI,KAAa,IALrEN,EAAc5kB,WAWnC,GAAIga,EAAW,EAEX,GAAkB,IAAd6K,EACAN,EACI,eAACiB,GAAD,CAAOP,QAAS,EAAhB,mBAEJP,EACI,eAACc,GAAD,CAAOP,QAAS,IAGpBL,EAAchnB,KAAK,eAAC6nB,GAAD,GAAab,EAAc5kB,aAC3C,CACH,IAAMqN,EAAQgX,EAASQ,GAAW7c,OAC5BC,EAAQL,EAAUid,GAClBI,EAAU5X,EAAMxJ,QAAUwJ,EAAMzJ,OAAOE,KAAOuJ,EAAMzJ,OAAOG,KACjEwgB,EACI,eAACiB,GAAD,CAAOP,QAAS5X,EAAMxJ,QAAtB,kBAEJ6gB,EACI,eAACc,GAAD,CAAOP,QAASA,IAGpBD,EAAIC,EAAShd,GAGrB,GAAiB,IAAb+R,EACAsK,EACI,eAACoB,GAAD,CAAMT,QAAS,EAAf,mBAEJR,EACI,eAACiB,GAAD,CAAMT,QAAS,IAGnBL,EAAchnB,KAAK,eAAC6nB,GAAD,GAAab,EAAc5kB,aAC3C,CACH,IAAMqN,EAAQgX,EAASrK,GAAUhS,OAC3BC,EAAQL,EAAUoS,GAClBiL,EAAU5X,EAAMxJ,QAAUwJ,EAAMzJ,OAAOE,KAAOuJ,EAAMzJ,OAAOG,KACjEugB,EACI,eAACoB,GAAD,CAAMT,QAAS5X,EAAMxJ,QAArB,iBAEJ4gB,EACI,eAACiB,GAAD,CAAMT,QAASA,IAGnBD,EAAIC,EAAShd,GAEjB,GAAI6c,IAAcT,EAASrkB,OAAS,EAChCwkB,EACI,eAACmB,GAAD,CAAOV,QAAS,EAAhB,iBAEJN,EACI,eAACgB,GAAD,CAAOV,QAAS,IAGpBL,EAAchnB,KAAK,eAAC6nB,GAAD,GAAab,EAAc5kB,aAC3C,CACH,IAAMqN,EAAQgX,EAASS,GAAW9c,OAC5BC,EAAQL,EAAUkd,GAClBG,EAAU5X,EAAMxJ,QAAUwJ,EAAMzJ,OAAOE,KAAOuJ,EAAMzJ,OAAOG,KACjEygB,EACI,eAACmB,GAAD,CAAOV,QAAS5X,EAAMxJ,QAAtB,kBAEJ8gB,EACI,eAACgB,GAAD,CAAOV,QAASA,IAGpBD,EAAIC,EAAU,IAAMhd,GAIxB,OACI,gBAAC,GAAD,WACI,gBAAC2d,GAAD,WACI,gBAAC,GAAD,WACKrB,EACAD,EACAE,KAEL,gBAAC,GAAD,WACKE,EACAD,EACAE,QAGT,eAACkB,GAAD,UACKjB,QAUXrK,GAAQvC,IAAOtV,IAAV,wGAMLkjB,GAAU5N,IAAOtV,IAAV,0KAQP+Z,GAAQzE,IAAOtV,IAAV,sEAKLqf,GAAU/J,IAAOtV,IAAV,sEAKPwW,GAAQlB,IAAOtV,IAAV,2LAIE,SAAAxG,GAAK,OA9BC,GA8BGA,EAAM+oB,WAStBO,GAAQxN,YAAOkB,GAAPlB,CAAH,8EAKL0N,GAAO1N,YAAOkB,GAAPlB,CAAH,qEAKJ2N,GAAQ3N,YAAOkB,GAAPlB,CAAH,8EAKL6N,GAAW7N,IAAOtV,IAAV,yQAUR+iB,GAASzN,IAAOtV,IAAV,4JAECojB,KAKPR,GAAUtN,IAAOtV,IAAV,yLAOAojB,MACC,SAAA5pB,GAAK,OAAIA,EAAMkpB,UACJ,SAAAlpB,GAAK,OAAIA,EAAM8Q,SAAW,SAAA9Q,GAAK,OAAIA,EAAMmpB,SAG5DE,GAAOvN,IAAOtV,IAAV,wMC1MKqjB,GAzDG,WAAO,IAAD,EAEUpO,qBAAWC,IAAjC9Z,EAFY,EAEZA,MAEFoF,GAJc,EAELC,WAEDrF,EAAMO,YACd8F,EAAMrG,EAAMS,UAAUuJ,UAAU5E,EAAMiE,YACtCc,EAAQ/E,EAAM2E,iBAAiB3E,EAAMiE,YACrC6e,EAAqB,MAAT/d,EAAgB,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIpG,KAAI,SAAAuJ,GAAK,OAAKnD,EAAMrB,SAAWwE,GAAS,MAClGvO,EAAoB,GARJ,EAUgD4gB,mBAAQ,WAExE,IAAMwI,EAA+B,GACjCC,EAA4B,GAEhC,GAAiB,UAAb/hB,EAAInG,KAAkB,CACtB,IAAMgK,EAAS7D,EAAI6D,OACb/K,EAAO+K,EAAO/K,KACdM,EAASH,EAAiB4K,EAAO9K,WAC3B,MAARD,GAA0B,MAAVM,IAChBV,EpC2QiB,SAAC+E,EAAmB/E,GACjD,OAAOA,EAAQgF,KAAI,SAAAskB,GAAQ,OAAIvkB,EAAY7E,EAAsBopB,MoC5Q3CC,EAAmBnpB,EAAKpB,MAAQoM,EAAMrB,UAAY,GAAIrJ,EAAOV,SAGvEqpB,EAAa3oB,EAAOV,QAAQgF,KAAI,SAACtC,EAAQQ,GAAT,OAAe,gBAACsmB,GAAD,WAC3C,gCAAO9mB,IAAc,gCAAOxC,EAAsBwC,OADSQ,OAKvE,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAErB,IAAMia,EAAWiM,EAAcjmB,OACzBsmB,EAAUN,EAAUjb,SAASiP,EAAW,IACxCuM,EAAQ1pB,EAAQkO,SAASiP,GAKnC,GAJIiM,EAAcroB,KACV,eAAC,GAAD,CAAkC4oB,SAAS,EAAO3qB,MAAOkE,EAAGumB,QAASA,EAASC,MAAOA,GAAzEN,EAAcjmB,SAG9B,CAAC,EAAG,EAAG,EAAG,EAAG,GAAG+K,SAAShL,EAAI,GAAI,CACjC,IAAMia,EAAWiM,EAAcjmB,OACzBsmB,EAAUN,EAAUjb,SAASiP,EAAW,IACxCuM,EAAQ1pB,EAAQkO,SAASiP,GAC/BiM,EAAcroB,KACV,eAAC,GAAD,CAAkC4oB,SAAS,EAAM3qB,MAAOkE,EAAGumB,QAASA,EAASC,MAAOA,GAAxEN,EAAcjmB,UAItC,MAAO,CAACimB,EAAeC,KACxB,CAACrpB,IA/CgB,mBAUbopB,EAVa,UAiDpB,OACI,eAAC,GAAD,CAAOM,MAAO1pB,EAAQmD,OAAS,EAA/B,SAEI,eAACymB,GAAD,UAAUR,OAOhB1L,GAAQvC,IAAOtV,IAAV,wJAML,SAAAxG,GAAK,OAAIA,EAAMqqB,MAAQ,GAAK/M,YAAnB,4DAiBT6M,IAVQrO,IAAOtV,IAAV,iOAUOsV,IAAOtV,IAAV,qnBA0BT+jB,GAAUzO,IAAOtV,IAAV,0OAgBPwW,GAAQlB,IAAOtV,IAAV,8TAQA,SAAAxG,GAAK,OAAI,GAAMA,EAAMsqB,QAAyB,EAVpC,OAWT,SAAAtqB,GAAK,OAAI,EAVJwqB,GAUSxqB,EAAML,OAAsBK,EAAMsqB,QAAcE,KAAJ,MAKxD,SAAAxqB,GAAK,OAAKA,EAAMsqB,QAhBT,GADA,MAmBf,SAAAtqB,GAAK,OAAIA,EAAMoqB,QAAU9M,YAAhB,sFAEPA,YAFO,yFAKT,SAAAtd,GAAK,OAAKA,EAAMqqB,MAAarqB,EAAMoqB,QAAU9M,YAAhB,0FAE3BA,YAF2B,0FAAL,MC5HfmN,GAvBQ,WAMnB,IAN0B,IAAD,EAEKhP,qBAAWC,IAAjC9Z,EAFiB,EAEjBA,MAAOqF,EAFU,EAEVA,WAETD,EAAQpF,EAAMO,WACd6nB,EAA2B,GALR,WAMjBnmB,GACJmmB,EAAWtoB,KACP,eAAC,GAAD,CAAc8a,SAAUxV,EAAMuI,YAAc1L,EAAGoZ,QAAS,WACpDjW,EAAMuI,YAAc1L,EAAI,EACxBoD,EAAWsG,MAAMI,cAAc3G,KAFxBnD,KAFXA,EAAI,EAAGA,EAAI,EAAGA,IAAO,EAArBA,GAQR,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,0BACA,eAAC6mB,GAAD,UAAWV,QAQjB3L,GAAQvC,IAAOtV,IAAV,8JAQL2W,GAASrB,IAAOtV,IAAV,4PAWNkkB,GAAW5O,IAAOtV,IAAV,4NAURwb,GAAOlG,IAAOtV,IAAV,2OAQJ,SAAAxG,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,sDAAkB,MCzBlBqN,GAnCO,WAAO,IAAD,EAEMlP,qBAAWC,IAAjC9Z,EAFgB,EAEhBA,MAAOqF,EAFS,EAETA,WAETD,EAAQpF,EAAMkB,aAEd8nB,EAA6B,GAC7BrnB,EAAUyD,EAAMzD,QAChBa,EAAQb,EAAQY,OAAOZ,EAAQgF,YAsBrC,OAnBAnE,EAAME,YAAY7C,SAAQ,SAACoX,EAAMhV,GAC7B,IAAM2Y,EAAWjZ,EAAQiT,WAAa3S,EAChCgnB,EAASrO,IAAsC,IAA1BjZ,EAAQiF,aAC/B9B,EAAOmS,EAAKnS,KACZmS,EAAKlS,QAAOD,GAAQ,KACN,IAAdmS,EAAKjS,OAAYF,GAAQmS,EAAKjS,KAAO,GACzCgkB,EAAYlpB,KACR,gBAAC,GAAD,CAAegF,KAAMA,EAAM8V,SAAUA,EAAUqO,OAAQA,EACnD5N,QAAS,WACL1Z,EAAQiF,cAAgB,EACxBjF,EAAQiT,SAAW3S,EAZdoD,EAAWlB,QAAQwB,SAASP,IASzC,UAOK6R,EAAKnS,KAAOmS,EAAKlS,MAAa,IAAL,GAAwB,IAAdkS,EAAKjS,KAAa,GAAK,MAPnD/C,OAYZ,eAAC,GAAD,UACH+mB,KAMHvM,GAAQvC,IAAOtV,IAAV,yHASLwW,GAAQlB,IAAOtV,IAAV,sTAME,SAAAxG,GAAK,OAAI4M,EAAmB5M,EAAM0G,KAAO,KAIhD,SAAA1G,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,wEAAkB,MAG3B,SAAAtd,GAAK,OAAKA,EAAM6qB,OAAcvN,YAArB,wEAAgB,MCahBwN,GAvEM,WAAO,IAAD,EAEOrP,qBAAWC,IAAjC9Z,EAFe,EAEfA,MAAOqF,EAFQ,EAERA,WAETD,EAAQpF,EAAMkB,aACdS,EAAUyD,EAAMzD,QAChBwnB,EAAexnB,EAAQK,SAASE,OAGhCqgB,EAAS,kBAAMld,EAAWlB,QAAQwB,SAASP,IAE3CgkB,EAAgCvnB,MAAM,GAE5CF,EAAQY,OAAO1C,SAAQ,SAAC2C,EAAOL,GAG3B,IADA,IAAMknB,EAAyB,GAFE,WAGxBpnB,GACL,IAAMqnB,EAA8B,GAEpC9mB,EAAME,YAAY7C,SAAQ,SAACoX,EAAMsS,GAE7B,IAAM3iB,EAAgBuiB,EAAe,EAAKlnB,EACpC2Y,EAAWjZ,EAAQiT,WAAa2U,EAChC1mB,EAAOL,EAAMT,MAAM6E,GAAc2iB,GACjCC,EAAiB,SAACxmB,GAAD,OAA4CR,EAAMT,MAAM6E,GAAc2iB,GAAKvmB,GAE5FylB,EAAgB,MAAR5lB,EAERub,EAAUzc,EAAQgF,aAAexE,IACnCsmB,GAASlhB,EAAYhB,sBAAsB5E,EAAQY,OAAQJ,EAAGyE,EAAc2iB,IAC1EN,EAASrO,GAAYjZ,EAAQiF,eAAiB3E,EAChD6C,EAAOmS,EAAKnS,KACZmS,EAAKlS,QAAOD,GAAQ,KACN,IAAdmS,EAAKjS,OAAYF,GAAQmS,EAAKjS,KAAO,GACzCskB,EAAaxpB,KACT,eAAC2pB,GAAD,CAAgB3kB,KAAMA,EAAM8V,SAAUA,EAAUqO,OAAQA,EAAQS,OAAQ/nB,EAAQgF,aAAexE,EAA/F,SACI,eAACwnB,GAAD,CAAQlB,MAAOA,EAAOrK,QAASA,EAAS0E,OAAQ,IAAK4G,OAAQ/nB,EAAQgF,aAAexE,EAChFkZ,QAAS,WAEDmO,EADQ,MAAR3mB,EACe,CAAEigB,OAAQ,IAAKC,OAAQ,EAAGC,OAAQ,GAElC,MAEnBT,IACAld,EAAWlB,QAAQ0R,oBAEvB+N,cAAe,WACXjiB,EAAQiF,aAAe3E,EACvBN,EAAQiT,SAAW2U,EACnBhH,QAdCgH,OAoBrBF,EAAQvpB,KACJ,eAAC,GAAD,CAAiB8pB,OAAQ3nB,EAAI,GAAK,EAAG4nB,SAAS,EAA9C,SACKP,GADSrnB,KAxCbA,EAAI,EAAGA,EAAIknB,EAAclnB,IAAM,EAA/BA,GA6CTmnB,EAAajnB,GAAKknB,KAGtB,IAAMS,EAA6B,IAAvBnoB,EAAQgF,WAAmByiB,EAAeA,EAAa/lB,UACnE,OAAQ,uCACJ,eAAC0mB,GAAD,CAAQC,OAAQ,EAAhB,SAAoBF,EAAI,KACxB,eAACC,GAAD,CAAQC,OAAQ,EAAhB,SAAoBF,EAAI,SAM1BC,GAAS7P,IAAOtV,IAAV,sLAWNkc,GAAU5G,IAAOtV,IAAV,yJASP,SAAAxG,GAAK,OAAKA,EAAMyrB,QAAenO,YAAtB,+CAGL,SAAAtd,GAAK,OAAKA,EAAMwrB,OAEdlO,YAFO,gFAAgBA,YAAhB,mFAHa,MAW1B+N,GAASvP,IAAOtV,IAAV,mPAOC,SAAAxG,GAAK,OAAI4M,EAAmB5M,EAAM0G,KAAO,KAGhD,SAAA1G,GAAK,OAAIA,EAAMsrB,OAAS,GAAKhO,YAApB,qFAIL,SAAAtd,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,gFAAkB,SAI/B,SAAAtd,GAAK,OAAKA,EAAM6qB,OAAcvN,YAArB,wEAAgB,MAUzBiO,GAASzP,IAAOtV,IAAV,kSAWN,SAAAxG,GAAK,OAAKA,EAAMqqB,MAAa/M,YAApB,sRAOL,SAAAtd,GAAK,OAAKA,EAAMggB,QAAe1C,YAAtB,iEAAiB,MAI1B,SAAAtd,GAAK,OAAKA,EAAMsrB,OAAchO,YAArB,iJAAgB,MAXL,MAmBpB,SAAAtd,GAAK,OAAKA,EAAMqqB,MAAa/M,YAApB,gFAAe,MCnGnBuO,GA5DQ,WAoBnB,IApB0B,IAAD,EAEKpQ,qBAAWC,IAAjC9Z,EAFiB,EAEjBA,MAEFoF,GAJmB,EAEVC,WAEDrF,EAAMkB,cACd2E,EAAYT,EAAMS,UAIlBlE,GAFeyD,EAAMzD,QAEXyD,EAAMzD,SAEhBc,EAAOd,EAAQY,OAAOZ,EAAQgF,YAAYjE,YAC1C+D,EAAWc,EAAY3B,YAAYC,GACnCqkB,EAAc3iB,EAAYrB,oBAAoBzD,GAC9C0nB,EAAiB,GAAK1jB,EAAWyjB,EAIjCpD,EAA+B,GAE5B7kB,EAAI,EAAGA,EAAIsC,KAAKC,MAAM0lB,EAAc,KAAQ,EAAGjoB,IAAK,CACzD,IACIolB,EAAyD,CAAEnY,MAAO,EAAGoY,OAAQ,GAAIC,MAAO,QAC5F,QAAQ,GACJ,KAHQtlB,EAGG,KAAO,EAAGolB,EAAO,CAAEnY,MAAO,EAAGoY,OAAQ,GAAIC,MAAO,WAAa,MACxE,KAJQtlB,EAIG,IAAM,EAAGolB,EAAO,CAAEnY,MAAO,EAAGoY,OAAQ,GAAIC,MAAO,WAAa,MACvE,KALQtlB,EAKG,IAAM,EAAGolB,EAAO,CAAEnY,MAAO,EAAGoY,OAAQ,GAAIC,MAAO,WAE9DT,EAAchnB,KACV,eAAC,GAAD,CAEIoP,MAAOmY,EAAKnY,MACZoY,OAAQD,EAAKC,OACbC,MAAOF,EAAKE,OAHPT,EAAc5kB,SAQ/B,OAAQ,uCACJ,gBAAC,GAAD,WACI,eAACkoB,GAAD,UACI,eAAC,GAAD,MAEJ,gBAACC,GAAD,WACI,eAACC,GAAD,UAAcxD,IACbqD,EACG,eAACI,GAAD,CAAend,IA9BdpC,IA8BmBvE,IAEpB,eAAC+jB,GAAD,CAAYpd,IAhCXpC,IAgCgBvE,EAAqByI,MAhCrClE,KAgC6Ckf,EAAczjB,WAIxE,eAACgkB,GAAD,UACI,eAAC,GAAD,MAEJ,eAACC,GAAD,QAOF7M,GAAU3D,IAAOtV,IAAV,iIAGCkG,GAGRsf,GAAalQ,IAAOtV,IAAV,iIAGFkG,IAGRuf,GAAcnQ,IAAOtV,IAAV,6OAIHkG,IAKRwf,GAAcpQ,IAAOtV,IAAV,4FAMX4iB,GAAUtN,IAAOtV,IAAV,yLAOAoG,IACC,SAAA5M,GAAK,OAAIA,EAAMkpB,UACJ,SAAAlpB,GAAK,OAAIA,EAAM8Q,SAAW,SAAA9Q,GAAK,OAAIA,EAAMmpB,SAI5DiD,GAAatQ,IAAOtV,IAAV,+LAMJ,SAAAxG,GAAK,OAAIA,EAAMgP,OACd,SAAAhP,GAAK,OAAIA,EAAM8Q,QACdpE,KAIR2f,GAAQvQ,IAAOtV,IAAV,0JAIGmG,GAGR2f,GAAUxQ,IAAOtV,IAAV,iIpCtFwB,IoC6F/B2lB,GAAgBrQ,IAAOtV,IAAV,kKAKP,SAAAxG,GAAK,OAAIA,EAAMgP,MAEbtC,KC7FC6f,GA7CK,SAACvsB,GAGd,IAAD,EAC4Byb,qBAAWC,IAAjC9Z,EADN,EACMA,MAAOqF,EADb,EACaA,WAETD,EAAQpF,EAAMkB,aACdS,EAAUyD,EAAMzD,QAChB5D,EAAQ4D,EAAQK,SAASE,OAAS,EAAI9D,EAAML,MAC5CorB,EAAexnB,EAAQK,SAASE,OAEhCqgB,EAAS,WACXld,EAAWlB,QAAQwB,SAASP,GAC5BC,EAAWlB,QAAQ0R,oBAuBvB,OAAQ,qCACJ,gBAAC,GAAD,CAAOuI,QAAiC,MAAxBhgB,EAAM+K,cAAtB,UACI,eAAC,GAAD,UAAU/K,EAAM+K,gBAChB,eAACyhB,GAAD,CAASC,SAAU1B,EAAe,EAAG9N,QAbxB,WACjB1Z,EAAQY,OAAO1C,SAAQ,SAAC2C,GACpBA,EAAMT,MAAM8L,OAAO9P,EAAO,MAG9B,IAAMgB,EAAUwI,EAAYoN,cAAcvP,EAAMoP,cAChD7S,EAAQK,SAAWuF,EAAYuN,YAAY/V,EAAS4C,EAAQK,SAASE,OAAS,GAC9EqgB,KAMI,eACA,eAACqI,GAAD,CAASC,SAAU1B,EAAe,GAAI9N,QAzB5B,WACd1Z,EAAQY,OAAO1C,SAAQ,SAAC2C,GACpB,IAAMsoB,EAAmBvjB,EAAYwjB,iBAAiBvoB,EAAME,YAAYR,QACxEM,EAAMT,MAAM8L,OAAO9P,EAAO,EAAG+sB,MAGjC,IAAM/rB,EAAUwI,EAAYoN,cAAcvP,EAAMoP,cAChD7S,EAAQK,SAAWuF,EAAYuN,YAAY/V,EAAS4C,EAAQK,SAASE,OAAS,GAC9EqgB,KAiBI,qBAON9F,GAAQvC,IAAOtV,IAAV,kKAOL,SAAAxG,GAAK,OAAKA,EAAMggB,QAAe1C,YAAtB,wEAAiB,MAM1BN,GAAQlB,IAAOtV,IAAV,wRAaL+jB,GAAUzO,YAAOkB,GAAPlB,CAAH,kDAKP0Q,GAAU1Q,YAAOkB,GAAPlB,CAAH,2HAOP,SAAA9b,GAAK,OAAIA,EAAMysB,SAAW,GAAK7O,MC1BtBgP,GAzDQ,WAAO,IAAD,EAEKnR,qBAAWC,IAAjC9Z,EAFiB,EAEjBA,MAAOqF,EAFU,EAEVA,WAETD,EAAQpF,EAAMkB,aACd2E,EAAYT,EAAMS,UAClBpG,EAASH,EAAiBuG,EAAUzG,WACpCuC,EAAUyD,EAAMzD,QAChBsc,GAAapY,EAAU1G,KAAKpB,MAAQ8H,EAAUoE,KAAKnB,UAAY,GAE/DmiB,EAAgC,GAChC7B,EAA8B,GACrB,MAAXznB,IACiBA,EAAQK,SAChBnC,SAAQ,SAACuD,EAASnB,GACvB,IAAIpD,EAAO,IACX,IAAwB,IAApBuE,EAAQ1B,OAAe,CACvB,IAAMwpB,EAAajN,EAAYhf,EAAsBQ,EAAOV,QAAQqE,EAAQhB,cACtEV,EAAS0B,EAAQ1B,OAAS6C,KAAKC,MAAM0mB,EAAa,IACxDrsB,EAAOP,EAAiB4sB,EAAa,IAAMxpB,EAE/CupB,EAAenrB,KACX,eAAC,GAAD,CACI/B,MAAOkE,EACPkH,cAAetK,GAFDoD,OAO1BN,EAAQY,OAAO1C,SAAQ,SAAC2C,EAAOP,GAC3B,IAAM8L,EAAkB,IAAN9L,EAAU,SAAW,SACvCmnB,EAAatpB,KACT,eAACqrB,GAAD,CAAoBvQ,SAAUjZ,EAAQgF,aAAe1E,EACjDoZ,QAAS,WACFpZ,IAAMN,EAAQgF,YACbtB,EAAWlB,QAAQqS,eAH/B,SAOKzI,GAPY9L,QAa7B,OAAQ,uCACJ,eAAC,GAAD,UACKmnB,IAEL,eAAC,GAAD,UACK6B,IAEL,eAAC,GAAD,QAOFpN,GAAU3D,IAAOtV,IAAV,qIAGCkG,GAIRqgB,GAAajR,IAAOtV,IAAV,2bAkBV,SAAAwmB,GAAM,OAAKA,EAAOxQ,SAAgBc,YAAxB,+FAAmB,MAU7B+O,GAAQvQ,IAAOtV,IAAV,mIAGGmG,GAGR2f,GAAUxQ,IAAOtV,IAAV,mItChEwB,IuCwEtBymB,GA/GO,WAgClB,IAhCyB,IAAD,EAEMxR,qBAAWC,IAAjC9Z,EAFgB,EAEhBA,MAAOqF,EAFS,EAETA,WAETD,EAAQpF,EAAMkB,aACdS,EAAUyD,EAAMzD,QAEhB0E,EADQ1E,EAAQY,OAAOZ,EAAQgF,YACnBjE,YAAYf,EAAQiT,UAEhC2N,GADYnd,EAAMS,UACT,WACXR,EAAWlB,QAAQwB,SAASP,GAC5BC,EAAWlB,QAAQ0R,qBAQjByV,EAAa,SAACzsB,EAAc+b,EAAmB2Q,GACjD,OACI,eAAC,GAAD,CAAOV,UAAU,EAAMjQ,SAAUA,EAC7BS,QAASkQ,EADb,SAEK1sB,KAIP2sB,EAAiB,SAAC1mB,GACpB,OAAOwmB,EAAWG,OAAO3mB,GAAOuB,EAAIvB,OAASA,GAAM,kBAdvC,SAACA,GACbuB,EAAIvB,KAAOA,EACXyd,IAYyDmJ,CAAQ5mB,OAG/D6mB,EAA6B,GAC1B1pB,EAAI,EAAGA,EAAIsF,EAAYqkB,YAAa3pB,IAAK,CAC9C,IAAMqL,EAAQrL,EAAI,EAClB0pB,EAAY7rB,KACR,eAAC+rB,GAAD,CACIve,MAAOA,EADX,SAEKA,GAFWrL,IAOxB,IAAM6pB,EAAa,gBAACC,GAAD,WACf,eAACC,GAAD,CACI1e,MAAO3L,EAAQK,SAASE,OACxB+a,SAAU,SAACC,GACP,IAAM+O,EAAWtqB,EAAQK,SAASE,OAC5BgqB,EAAUtJ,OAAO1F,EAAE3P,OAAOD,OAC1BpK,EAAiBqE,EAAYoN,cAAcvP,EAAMoP,cACvD7S,EAAQK,SAAWuF,EAAYuN,YAAY5R,EAAgBgpB,GAC3D,IAAM7f,EAAMuW,OAAO1F,EAAE3P,OAAOD,OAAS2e,EACrCtqB,EAAQY,OAAO1C,SAAQ,SAAC2C,EAAOP,GAC3B,GAAIoK,EAAM,EAEN,IADA,IAAMye,EAAmB,IAAIjpB,MAAsCW,EAAME,YAAYR,QAAQJ,KAAK,MACzFK,EAAI,EAAGA,EAAIkK,EAAKlK,IAAKK,EAAMT,MAAMjC,KAAK2D,KAAKiM,MAAMjM,KAAKC,UAAUonB,SACtE,CACH,IAAMqB,EAAS5nB,KAAKic,IAAInU,GACxB7J,EAAMT,MAAM8L,QAAQse,EAAQA,OAGpC5J,KAjBR,SAmBKoJ,IAEJH,EAAe,IACfA,EAAe,GACfA,EAAe,GACfA,EAAe,GACfA,EAAe,GACfF,EAAW,IAAKjlB,EAAItB,OAAO,WACxBsB,EAAItB,OAASsB,EAAItB,MACjBwd,OAEH+I,EAAW,MAAoB,IAAbjlB,EAAIrB,MAAY,WACd,IAAbqB,EAAIrB,KAAYqB,EAAIrB,KAAO,EAC1BqB,EAAIrB,KAAO,EAChBud,OAEH+I,EAAW,MAAoB,IAAbjlB,EAAIrB,MAAY,WACd,IAAbqB,EAAIrB,KAAYqB,EAAIrB,KAAO,EAC1BqB,EAAIrB,KAAO,EAChBud,UAKF6J,GAAyC,IAA1BzqB,EAAQiF,aAAsB,KAC/CjF,EAAQY,OAAOZ,EAAQgF,YAAY5E,MAAMJ,EAAQK,SAASE,OAAS,EAAIP,EAAQiF,cAAcjF,EAAQiT,UACnGyX,EAAc,gBAACC,GAAD,WAEfhB,EAAW,IAAqB,MAAhBc,GAAsB,WAEnC7J,OAGH+I,EAAW,SAAqB,MAAhBc,GAAgD,MAAxBA,EAAatJ,QAAgB,WAElEP,OAEH+I,EAAW,SAAqB,MAAhBc,GAAgD,MAAxBA,EAAatJ,QAAgB,WAElEP,OAEH+I,EAAW,SAAqB,MAAhBc,GAAgD,MAAxBA,EAAatJ,QAAgB,WAElEP,UAGR,OAAmC,IAA3B5gB,EAAQiF,aAAuBklB,EAAaO,GAKlDN,GAAW7R,IAAOtV,IAAV,+HAMR0nB,GAAYpS,IAAOtV,IAAV,+HAQTonB,GAAQ9R,IAAOqS,OAAV,qXAkBLV,GAAY3R,IAAOsS,OAAV,4HAQTpR,GAAQlB,IAAOtV,IAAV,gcAkBL,SAAAxG,GAAK,OAAIA,EAAMysB,SAAW,GAAKnP,YAAtB,2FAKT,SAAAtd,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,wEAAkB,MAMvB,SAAAtd,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,gFAAkB,MCvHtB+Q,GA1DM,WAAO,IAAD,EAEO5S,qBAAWC,IAAjC9Z,EAFe,EAEfA,MAAOqF,EAFQ,EAERA,WAETD,EAAQpF,EAAMkB,aAGdwrB,GAFYtnB,EAAMS,UAEc,MAAjBT,EAAMzD,SAErB4gB,EAAS,WACXld,EAAWlB,QAAQwB,SAASP,IAGhC,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,UACI,gBAACunB,GAAD,WACI,eAAC,GAAD,sBACA,eAAC,GAAD,CAAS/R,SAAU8R,EACfrR,QAAS,WACL,GAAKqR,EAcDtnB,EAAMzD,QAAU,KAChB4gB,QAfe,CACf,IAAMxgB,EAAQqD,EAAMoP,aACdtR,EAAiBqE,EAAYoN,cAAc5S,GAC3CC,EAAWuF,EAAYuN,YAAY5R,EAAgB,GACzDkC,EAAMzD,QAAU,CACZgF,WAAY,EACZiO,SAAU,EACVhO,cAAe,EACf5E,WACA6S,YAAY,EACZtS,OAAQ,CAAC8C,EAAWlB,QAAQ8Q,kBAAmB5P,EAAWlB,QAAQ8Q,oBAEtEsN,MAdZ,sBAuBR,eAACqK,GAAD,CAAOhS,SAAU8R,EAAjB,SACMA,EAAwB,uCACtB,eAACG,GAAD,UAAY,eAAC,GAAD,MACZ,gBAACC,GAAD,WACI,eAACC,GAAD,UACI,eAAC,GAAD,MAEJ,eAACC,GAAD,UACI,eAAC,GAAD,YAPK,qCAkB3BvQ,GAAQvC,IAAOtV,IAAV,qNAYLiZ,GAAU3D,IAAOtV,IAAV,iFAMP2W,GAASrB,IAAOtV,IAAV,4BACN+nB,GAAazS,IAAOtV,IAAV,8hBAaR2W,IAYF6B,GAAUlD,IAAOtV,IAAV,mUAaP,SAAAxG,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,uGAAkB,MAU3BkR,GAAQ1S,IAAOtV,IAAV,8JxC5FyBqoB,KwCmG9B,SAAA7uB,GAAK,OAAIA,EAAMwc,SAAW,GAAKc,YAAtB,yDAMTmR,GAAa3S,IAAOtV,IAAV,sJxC7GwB,IwCqHlCkoB,GAAW5S,IAAOtV,IAAV,+MAYRmoB,GAAc7S,IAAOtV,IAAV,6GAMXooB,GAAc9S,IAAOtV,IAAV,0HC3EFsoB,GA7FQ,WAenB,IAf0B,IAAD,EACKrT,qBAAWC,IAAjC9Z,EADiB,EACjBA,MAAOqF,EADU,EACVA,WAETD,EAAQpF,EAAMkB,aACd2E,EAAYT,EAAMS,UAClBpG,EAASH,EAAiBuG,EAAUzG,WAEpC2C,EAAQqD,EAAMoP,aACd7S,EAAUyD,EAAMzD,QAChBsc,GAAapY,EAAU1G,KAAKpB,MAAQ8H,EAAUoE,KAAKnB,UAAY,GAC/DwV,EAAYhgB,EAAiB2f,GAAaxe,EAAOZ,KAEjDsuB,EAAoC,GACpCC,EAA6B,MAAXzrB,EAAkB4F,EAAY8lB,WAAa9lB,EAAY+lB,WAAa3rB,EAAQK,SAASE,OACzGyC,EAAQ,EAda,WAehB1C,GAEL,IADA,IAAMmmB,EAA4B,GAhBb,WAiBZjmB,GACL,IAAI0oB,EAAoBprB,EAAOV,QAAQmD,OAASC,EAC5CorB,EAAsBxrB,EAAME,GAAGE,GAC/BorB,GACA5oB,IAGJ,IAAMV,EAAWhF,EAAsBQ,EAAOV,QAAQoD,IAChDqrB,GAAcvP,EAAYha,GAAY,GACtCvC,EAASO,EAAIsC,KAAKC,OAAOyZ,EAAYha,GAAY,IAEjDpF,EAAQgsB,EAAD,UAAoBvsB,EAAiBkvB,IAArC,OAAmD9rB,GAAvC,GACzB0mB,EAAWtoB,KACP,eAAC2tB,GAAD,CACI5C,SAAUA,EACV0C,WAAYA,EACZG,OAAQH,GAAc5oB,EAAQyoB,EAC9B/R,QAAS,WAEL,GADAtZ,EAAME,GAAGE,IAAMorB,EACA,MAAX5rB,EAAiB,CACjB,IAAMuB,EAA8CqE,EAAYoN,cAAc5S,GAC9EJ,EAAQK,SAAWuF,EAAYuN,YAAY5R,EAAgBvB,EAAQK,SAASE,QAEhFmD,EAAWlB,QAAQwB,SAAnB,2BAAiCP,GAAjC,IAAwCoP,aAAczS,EAAOJ,aAC7D0D,EAAWlB,QAAQ0R,oBAEvB+N,cAAe,WACX,IAAM+J,EAAY3tB,EAAMgB,YAAYsE,MACnB,MAAbqoB,GACAA,EAAU1kB,KAAKpK,EAAM,EAAG,CAAEqK,SAAU,KAhBhD,SAoBKrK,GApBcsD,KAblBA,EAAI,EAAGA,EAAIoF,EAAY+lB,WAAYnrB,IAAM,EAAzCA,GAqCTgrB,EAAmBrtB,KACf,eAAC8tB,GAAD,UACKxF,GADcnmB,KAxClBA,EAAI,EAAGA,EAAIsF,EAAY8lB,WAAYprB,IAAM,EAAzCA,GA+CT,IAAM4rB,EAAiC,GASvC,OARApuB,EAAOV,QAAQc,SAAQ,SAAC4B,EAAQQ,GAC5B,IACMurB,GADWvuB,EAAsBwC,GACL,GAClCosB,EAAgB/tB,KACZ,gBAACguB,GAAD,WAAoBrsB,EAApB,KAA8BnD,EAAiBkvB,GAA/C,MAAgBvrB,OAKpB,gBAAC,GAAD,WACI,gBAAC,GAAD,WACI,gBAAC,GAAD,WACI,eAAC,GAAD,oBACA,eAAC,GAAD,UAASqc,OAEb,gBAAC,GAAD,WACI,eAAC,GAAD,mBACA,eAAC,GAAD,UAAS7e,EAAOT,aAGxB,gBAAC,GAAD,WACI,eAAC,GAAD,UACK6uB,IAEL,eAAC,GAAD,UAASV,WAWnB1Q,GAAQvC,IAAOtV,IAAV,6EAKLmpB,GAAQ7T,IAAOtV,IAAV,+HAOL2jB,GAAYrO,IAAOtV,IAAV,oIAOT2W,GAASrB,IAAOtV,IAAV,iYAiBNic,GAAS3G,IAAOtV,IAAV,sQAYNgoB,GAAQ1S,IAAOtV,IAAV,0RAGG,KAYR8X,GAAQxC,IAAOtV,IAAV,kJAEcopB,KAKnBF,GAAY5T,IAAOtV,IAAV,6XAxEI,IAuFbmY,GAAS7C,IAAOtV,IAAV,0FAKNgpB,GAAe1T,IAAOtV,IAAV,mNA7FA,IAuGZ6oB,GAAevT,IAAOtV,IAAV,sbAtGC,IAiHb,SAAAxG,GAAK,OAAKA,EAAMmvB,WAAkB7R,YAAzB,sEAAoB,MAG7B,SAAAtd,GAAK,OAAKA,EAAMsvB,OAAchS,YAArB,+FAAgB,MAIzB,SAAAtd,GAAK,OAAIA,EAAMysB,SAAW,GAAKnP,YAAtB,2FAaL,SAAAtd,GAAK,OAAKA,EAAMmvB,WAAkB7R,YAAzB,8EAAoB,MAG7B,SAAAtd,GAAK,OAAKA,EAAMsvB,OAAchS,YAArB,8EAAgB,MCxMpBuS,GAhCY,WAAO,IAAD,EAECpU,qBAAWC,IAAjC9Z,EAFqB,EAErBA,MAAOqF,EAFc,EAEdA,WAETD,EAAQpF,EAAMkB,aAEpB,OACI,gBAAC,GAAD,WACI,eAACgtB,GAAD,CAAezF,MAAOrjB,EAAMI,YAC5B,eAAC,GAAD,IACA,eAAC,GAAD,IACA,gBAAC2oB,GAAD,WACI,eAAC,GAAD,CAAStD,UAAWzlB,EAAMoB,SAAU6U,QAAS,WAEpCjW,EAAMI,UAGP+B,EAAY6B,YAAYpJ,EAAOoF,EAAOC,EAAYrF,EAAMoB,cAFxDiE,EAAWlB,QAAQsS,eAH3B,SAOKrR,EAAMI,UAAqB,OAAT,SACvB,eAAC,GAAD,CAASqlB,UAAWzlB,EAAMI,UAAW6V,QAAS,WAC1ChW,EAAWlB,QAAQ6Q,sBADvB,oBAGA,eAAC,GAAD,CAAS6V,UAAWzlB,EAAMI,UAAW6V,QAAS,WAC1ChW,EAAWlB,QAAQkR,uBACnBhQ,EAAWlB,QAAQ6Q,sBAFvB,2BAWVyH,GAAQvC,IAAOtV,IAAV,sGAMLupB,GAAajU,IAAOtV,IAAV,6JAQVwY,GAAUlD,IAAOtV,IAAV,yaAiBP,SAAAxG,GAAK,OAAIA,EAAMysB,SAAW,GAAKnP,YAAtB,2FAUTwS,GAAgBhU,IAAOtV,IAAV,gLAIJ,SAAAxG,GAAK,OAAIA,EAAMqqB,MAAQ,QAAU,UC7CjC2F,GAjCO,WAAO,IAAD,EACMvU,qBAAWC,IAAjC9Z,EADgB,EAChBA,MAAOqF,EADS,EACTA,WAETD,EAAQpF,EAAMO,WACd8tB,EAA4B,YAAnBjpB,EAAMmP,SAIflO,EAFYrG,EAAMS,UAAUuJ,UACfhK,EAAMO,WAAW8I,YAE9BilB,EAA+B,UAAbjoB,EAAInG,MAAwD,MAAnCmG,EAAI6D,OAAuB/K,KAC5E,OAAQ,uCACJ,eAAC,GAAD,CAAQkvB,OAAQA,EAAQhT,QAAS,WAC7BhW,EAAWlB,QAAQ6Q,wBAEvB,gBAAC,GAAD,WACI,eAAC,GAAD,CAAWqZ,OAAQA,EAAnB,SAC2B,MAAtBruB,EAAMkB,aAAuB,+BAAQ,eAAC,GAAD,MAE1C,eAAC,GAAD,CACI2pB,SAAUyD,EACVjT,QAAS,WACkB,SAAnBjW,EAAMmP,SACNlP,EAAWlB,QAAQmQ,oBACO,YAAnBlP,EAAMmP,UACblP,EAAWlB,QAAQ6Q,sBAN/B,SASI,oDAQVgF,GAASE,IAAOtV,IAAV,+NAGG,SAAAxG,GAAK,OAAIA,EAAMiwB,OAAS,eAAiB,UAWlD5R,GAAQvC,IAAOtV,IAAV,2MAaL6W,GAAYvB,IAAOtV,IAAV,4MAIF,SAAAxG,GAAK,OAAIA,EAAMiwB,OAAS,QAAU,KAQzC9S,GAASrB,IAAOtV,IAAV,4pBAiBN,SAAAxG,GAAK,OAAIA,EAAMysB,SAAW,GAAKnP,YAAtB,2FC4DA6S,GA7IM,SAACnwB,GAEf,IAAD,EAE4Byb,qBAAWC,IAAjC9Z,EAFN,EAEMA,MAAOqF,EAFb,EAEaA,WAETsJ,EAAUuS,iBAAuB,IAJrC,EAKkC9G,mBAAa,IAL/C,mBAOIpQ,GAPJ,UAOgBhK,EAAMS,UAAUuJ,WAC5B5E,EAAQpF,EAAMO,WACd0J,EAAQjK,EAAMS,UAAUuJ,UAAU,GAAGE,OAErCiO,EAASnY,EAAMO,WAAW4X,OAmGhC,OAjGAoC,qBAAU,WACNlV,EAAW8F,OAAOO,cAAlB,2BACO1L,EAAMsB,YADb,IACyBmY,UAAW,WAC5BpU,EAAW8F,OAAOO,cAAlB,2BACO1L,EAAMsB,YADb,IACyBqY,qBAAsB,YAIxD,IAEHY,qBAAU,WACDpC,GACDxJ,EAAQyS,QAAQoN,UAErB,CAACrW,IAEJoC,qBAAU,WACN,IAAMxQ,EAAmC,GACnC0C,EAAmC,GAErCgiB,EAAW,EACXC,EAAY,EACZC,EAAa,EACbC,EAAc,EACdpiB,GAAa,EACb1D,GAAY,EACZ+lB,EAAiB,EAErB7kB,EAAUnK,SAAQ,SAACuK,EAASnI,GAExB,OADamI,EAAQlK,MAEjB,IAAK,QAEoB,QADNkK,EAAQF,OACZmS,QACPoS,EAAWC,EACXC,EAAaC,GAGjB,MACJ,IAAK,OACD,IAAM1kB,EAASE,EAAQF,OACvBpB,EAAWoB,EAAOpB,SAElB,MACJ,IAAK,UACD,IAAMoB,EAASE,EAAQF,OACvBuC,EAAiB3M,KAAK,CAClBiO,UAAW7D,EAAO6D,UAClBmR,QAAS,EACTtS,gBAAiB3K,EACjB4K,cAAe7C,EAAU9H,OAAS,MAEtCsK,EAEgB,IACZC,EAAiBD,EAAY,GAAGK,cAAgB5K,EAAI,EACpDwK,EAAiBD,EAAY,GAAG0S,QAAU2P,EAC1CA,EAAiB,GAGrB,MACJ,IAAK,QACD,IAAM3kB,EAASE,EAAQF,OACvBukB,EAAWC,EACXA,GAAaxkB,EAAOnE,QACpB8oB,GAAkB3kB,EAAOnE,QAEzB4oB,EAAaC,EACbA,GAAe1kB,EAAOpE,OAAOE,KAC7B4oB,GAAe1kB,EAAOpE,OAAOG,KASrC,IAAMoE,EAAa,IAAQJ,EAAK/F,KAAOuqB,EAAWE,GAC5CG,EhDuLS,SAACrgB,GAExB,OAAQA,GACJ,IAAK,MAAO,MAAO,CAAC,EAAG,GACvB,IAAK,MAAO,MAAO,CAAC,EAAG,GAE3B,MAAO,CAAC,EAAG,GgD7LcsgB,CAAY9kB,EAAK4S,eAAe,GACjD9S,EAAiBjK,KAAK,CAClBoe,IAAK3Z,KAAKC,MAAMiqB,EAAWK,GAC3BzQ,KAAMoQ,EAAWK,EACjBhpB,OAAQ6oB,EACR7lB,WACA0D,YACAnC,aACAuE,QAAS,QAGjBnC,EAAiBD,GAAW0S,QAAU2P,EAEtC7uB,EAAMO,WAAWwJ,iBAAmBA,EACpC/J,EAAMO,WAAWkM,iBAAmBA,EACpCpH,EAAWsG,MAAMI,cAAc/L,EAAMO,cACtC,CAACyJ,EAAWA,EAAU9H,OAAQ+H,EAAK/F,MAGlC,gBAAC,GAAD,CACI8qB,SAAU,IACVxN,IAAK7S,EACLiM,SAAUxc,EAAMwc,SAEhBqU,UAAW,SAAC/R,GAAD,OAAsBgG,GAAchG,EAAGld,EAAOqF,GAAY,IACrE6pB,QAAS,SAAChS,GAAD,OAAsBgG,GAAchG,EAAGld,EAAOqF,GAAY,IANvE,UAQI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAOwlB,UAAWzlB,EAAMI,UAAxB,SACI,eAAC,GAAD,MAEJ,gBAAC2pB,GAAD,WACI,eAAC,GAAD,IACA,eAAC,GAAD,UAAO,eAAC,GAAD,MACP,eAAC,GAAD,CAAe1G,MAAOrjB,EAAMI,eAEhC,gBAAC4pB,GAAD,WACI,eAACC,GAAD,UAAgB,eAAC,GAAD,MAChB,eAACC,GAAD,UAAY,eAAC,GAAD,YAGpB,eAAC,GAAD,CAAQzE,UAAWzlB,EAAMI,UAAzB,SACI,eAAC,GAAD,UAOViX,GAAQvC,IAAOtV,IAAV,0GAGI,SAAAxG,GAAK,OAAKA,EAAMwc,SAAoB,eAAT,UAMpC8B,GAAQxC,IAAOtV,IAAV,sK5C3J0B,K4CkK/BmY,GAAS7C,IAAOtV,IAAV,kK5ClKyB,K4C0K/B,SAAAxG,GAAK,OAAIA,EAAMysB,SAAW,GAAK7O,MAG/B4F,GAAQ1H,IAAOtV,IAAV,wI5C5KyB,I4CmL9B,SAAAxG,GAAK,OAAIA,EAAMysB,SAAW,GAAK7O,MAG/BmT,GAAUjV,IAAOtV,IAAV,qKAIa2qB,KAIpB3C,GAAQ1S,IAAOtV,IAAV,2JAQLwqB,GAAQlV,IAAOtV,IAAV,+K5CrMyB,I4C8M9ByqB,GAAiBnV,IAAOtV,IAAV,4I5C7MkB,K4CmNhC0qB,GAAapV,IAAOtV,IAAV,+H5CnNsB,K4C0NhCspB,GAAgBhU,IAAOtV,IAAV,mKAIJ,SAAAxG,GAAK,OAAIA,EAAMqqB,MAAQ,QAAU,U,oBCvMjC+G,GAtCM,WAAO,IAAD,EAEO3V,qBAAWC,IAAjC9Z,EAFe,EAEfA,MAAOqF,EAFQ,EAERA,WAETD,EAAQpF,EAAMO,WACdkvB,EAAWrqB,EAAMqH,iBAEvB,IAA0B,IAAtBrH,EAAMiE,YAAqBjE,EAAMiE,WAAajE,EAAM2E,iBAAiB7H,OACrE,OAAO,+BAGX,IAAMwtB,EAAetqB,EAAM2E,iBAAiB3E,EAAMiE,YAAYmD,UAExD5M,EAAsB,GAoB5B,OAnBA6vB,EAAS5vB,SAAQ,SAAC8vB,EAAS1tB,GACvB,IAAMgd,EAAS1a,KAAKC,MAAMmrB,EAAQzQ,QAAU,GACtCC,EAASwQ,EAAQzQ,QAAU,EAC3BtE,EAAW3Y,IAAMytB,EACvB9vB,EAAKE,KACD,gBAAC,GAAD,CAEI8a,SAAUA,EACVS,QAAS,WACLjW,EAAMiE,WAAasmB,EAAQ/iB,gBAC3BvH,EAAWsG,MAAMI,cAAc3G,IALvC,UAQI,eAAC,GAAD,UAASuqB,EAAQ5hB,YACjB,gBAAC6hB,GAAD,WAAS3Q,EAAmB,IAAXE,EAAe,GAAf,YAAyBA,EAAzB,UARZld,OAaT,qCACHrC,KAOH2b,GAASrB,IAAOtV,IAAV,4BACNgrB,GAAS1V,IAAOtV,IAAV,4BACNwW,GAAQlB,IAAOtV,IAAV,qvBAOa,SAAAxG,GAAK,OAAIA,EAAMwc,SAAWc,YAAjB,gGAGzBA,YAHyB,wDAWzBH,GAUAqU,ICwBOC,GA5FQ,SAACzxB,GAMjB,IAAD,EAE4Byb,qBAAWC,IAAjC9Z,EAFN,EAEMA,MAAOqF,EAFb,EAEaA,WAETyqB,EAAa5O,iBAA8B,MAC3C6O,EAAW7O,iBAA8B,MAEzC9b,EAAQpF,EAAMO,WAEdyJ,EAAYhK,EAAMS,UAAUuJ,UAC5BgmB,EAAY5xB,EAAM4xB,UAClB9e,EAAY9S,EAAM8S,UAClBxG,EAAWtM,EAAMsM,SACjBulB,EAAiB7xB,EAAM6xB,eACvBpX,EAAkBza,EAAMya,gBACxB/T,EAAO,EAAI9E,EAAMW,YAAY+H,SAC7BuB,EAAOjK,EAAMS,UAAUuJ,UAAU,GAAGE,OAE1CqQ,qBAAU,WACNva,EAAMc,KAAK0R,OAAOkH,QAAUoW,EAAW1O,QACvCphB,EAAMc,KAAK0R,OAAOjD,MAAQwgB,EAAS3O,UACpC,IAEH,IAAM8O,EAAgCvQ,mBAAQ,WAE1C,IADA,IAAMU,EAAyB,GACtBpe,EAAI,EAAGA,GAAiB,EAAZ+tB,EAAgB,EAAG/tB,IAAK,CACzC,IAAIkuB,EAAS,+BACTluB,EAAI,IAAM,IACVkuB,EAAS,eAAC,GAAD,UAAO5rB,KAAKC,MAAMvC,EAAI,IAAM,KAEzCoe,EAAQvgB,KACJ,eAACswB,GAAD,CAAgBC,OAAQpuB,EAAI,IAAM,EAAGiP,UAAWA,EAAhD,SACKif,GADQluB,IAKrB,OAAOoe,IACR,CAAC2P,IAEEM,EAA8B3Q,mBAAQ,WACxC,IAAMU,EAAyB,GA2B/B,OA1BArW,EAAUnK,SAAQ,SAACuK,EAASnI,GACxB,GAAqB,UAAjBmI,EAAQlK,KAAkB,CAAC,IAAD,EACpBgK,EAASE,EAAQF,OACjBqmB,EAAU,UAAGjxB,EAAiB4K,EAAO9K,kBAA3B,aAAG,EAAoCP,KACjD2xB,EAA4B,MAAftmB,EAAO/K,KAAe,IACrChB,EAAc+L,EAAO/K,MAAQoxB,EAC3BjS,EAA2B,MAAfpU,EAAO/K,KAAe,IACpCZ,EAAa2L,EAAO/K,KAAM8K,EAAKnB,UAAYynB,EAC/ClQ,EAAQvgB,KACJ,gBAAC2wB,GAAD,CACIvhB,MAAOgC,GAAahH,EAAOnE,QAAUmE,EAAOpE,OAAOE,KAAOkE,EAAOpE,OAAOG,MACxE2U,SAAUxQ,GAAWM,EACrB2Q,QAAS,WACLjW,EAAM+S,QAAS,EACf/S,EAAMiE,WAAapH,EACnBoD,EAAWsG,MAAMI,cAAc3G,IAEnCwe,cAAe,WACXjZ,EAAkB3K,EAAOqF,IATjC,UAYI,eAACqrB,GAAD,UAAcF,IAAyB,gBAACG,GAAD,gBAAerS,EAAf,SAZ1B+B,EAAQne,aAiB9Bme,IACR,CAACrW,EAAWU,IAEf,OAAQ,uCACJ,eAAC,GAAD,CAAQ8W,IAAKuO,EAAb,SACI,eAACa,GAAD,CAAY1hB,MAAO+gB,EAAnB,SACKK,MAGT,gBAAC,GAAD,CAAU9O,IAAKsO,EAAf,UACKI,EACD,eAACW,GAAD,CACI5pB,KAAM4R,EAAkB3H,EAAYpM,EACpCoK,MAAOgC,EAAYpM,WAQ7BijB,GAAW7N,IAAOtV,IAAV,gSAaRisB,GAAY3W,IAAOtV,IAAV,8MAOH,SAAAxG,GAAK,OAAIA,EAAM6I,QAEd,SAAA7I,GAAK,OAAIA,EAAM8Q,SAKtBsP,GAAStE,IAAOtV,IAAV,6OAWNgsB,GAAa1W,IAAOtV,IAAV,2FAGH,SAAAxG,GAAK,OAAIA,EAAM8Q,SAKtBuhB,GAAavW,IAAOtV,IAAV,6ZAKH,SAAAxG,GAAK,OAAIA,EAAM8Q,MAAQ,KAM9B,SAAA9Q,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,wDAAkB,MAY3BgV,GAAcxW,IAAO4W,KAAV,mDAGXH,GAAazW,IAAO4W,KAAV,qDAIVV,GAASlW,IAAOtV,IAAV,mRAOC,SAAAxG,GAAK,OAAIA,EAAM8S,UAAY,KAG1B,SAAA9S,GAAK,OAAIA,EAAMiyB,OAAS,OAAS,UAEtB,SAAAjyB,GAAK,OAAIA,EAAMiyB,OAAS,MAAQ,SAGnD5I,GAAOvN,IAAOtV,IAAV,uLC3HKmsB,GA9DS,SAAC3yB,GAGlB,IAAD,EAC4Byb,qBAAWC,IAAjC9Z,EADN,EACMA,MACFiK,GAFJ,EACa5E,WACFrF,EAAMS,UAAUuJ,UAAU,GAAGE,QAGpC8mB,EAAmBrR,mBAAQ,WAC7B,IAAMsR,EAA4B,GAClC,GAAsB,MAAlB7yB,EAAMsM,SAAkB,CACxB,IAAMR,EAAS9L,EAAMsM,SAASR,OACxBzK,EAASH,EAAiB4K,EAAO9K,WACjCD,EAAO+K,EAAO/K,KACR,MAARA,GAA0B,MAAVM,GAChBA,EAAOV,QAAQc,SAAQ,SAAC4B,GACpBwvB,EAAgBnxB,MAAMX,EAAKpB,MAAQkM,EAAKnB,SAAW7J,EAAsBwC,IAAW,OAMhG,IADA,IAAM7B,EAAsB,GAbO,WAc1BqC,GACL,IAAM6G,GAAa,GAAK7G,EAAK,GAAK,GAC5BP,EAAS6C,KAAKC,OAAQ,GAAKvC,EAAK,GAAK,IAAM,EAC3CqC,EAAYhG,EAAiBwK,EAAW,IAC3BooB,GAAcxvB,GACjC9B,EAAKE,KACD,eAACqxB,GAAD,CACI3I,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIvb,SAASnE,GACzCsoB,SAAUH,EAAgBhkB,SAASnE,GACnC8R,SAAU3Y,IAAM7D,EAAMwa,gBACtByC,QAAS,WACL,IAAMtS,EAAa/I,EAAMgB,YAAYgI,gBACnB,MAAdD,IACAA,EAAWxD,OACXwD,EAAWE,KAAK3E,EAAY5C,EAAQ,EAAG,CAAEwH,SAAU,MAR/D,SAaK5E,GAbYrC,KANhBA,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAuBT,OAAOrC,IACR,CAACxB,EAAMwa,gBAAiBxa,EAAMsM,WAEjC,OAAQ,uCACJ,gBAAC2mB,GAAD,WACI,eAACC,GAAD,CAAa1W,UAAU,EAAvB,SAA8B,0CAC9B,eAAC0W,GAAD,CAAa1W,UAAU,EAAvB,SAA8B,wCAC9B,eAAC0W,GAAD,CAAa1W,UAAU,EAAvB,SAA8B,0CAC9B,eAAC0W,GAAD,CAAa1W,UAAU,EAAvB,SAA8B,0CAC9B,eAAC0W,GAAD,CAAa1W,UAAU,EAAvB,SAA8B,4CAElC,eAAC2W,GAAD,UACKP,QAOPE,GAAgB,SAAC5d,GACnB,OAAQA,GACJ,KAAK,EAAG,MAAO,MACf,KAAK,EAAG,MAAO,OACf,KAAK,EAAG,MAAO,OACf,KAAK,EAAG,MAAO,KACf,KAAK,EAAG,MAAO,OACf,QAAS,MAAO,KAIlB+d,GAAcnX,IAAOtV,IAAV,yHAOX2sB,GAAarX,IAAOtV,IAAV,sIAOV0sB,GAAcpX,IAAOtV,IAAV,obAQX,SAAAxG,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,wDAAkB,MAc3ByV,GAAajX,IAAOtV,IAAV,uVAQV,SAAAxG,GAAK,OAAKA,EAAMoqB,QAAe9M,YAAtB,wDAAiB,KAGlB7Q,GAER,SAAAzM,GAAK,OAAKA,EAAMgzB,SAAgB1V,YAAvB,sDAAkB,MAC3B,SAAAtd,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,sDAAkB,MC3FlB8V,GAnCU,SAACpzB,GAInB,IAAD,EAC4Byb,qBAAWC,IAAjC9Z,EADN,EACMA,MAAOqF,EADb,EACaA,WACTD,EAAQpF,EAAMW,YAEpB,OACI,gBAAC,GAAD,CACIia,SAAUxc,EAAM0a,cAAcja,OAASuG,EAAM0T,cAAcja,KAC3Dwc,QAAS,WAILjW,EAAM0T,cAAgB1a,EAAM0a,cAC5B1T,EAAMI,WAAY,EAClBH,EAAWqE,KAAK/D,SAASP,GAEzB,IAAMqsB,EAAOrzB,EAAM0a,cACnB4Y,KAAU3oB,WAAW,IAAI4oB,aAAgBF,EAAK5yB,KAC1C,CAAEka,KAAM0Y,EAAK1Y,KAAM6Y,QAAS,KAAOC,MAAK,SAACC,GACrCzsB,EAAWqE,KAAK4G,cAAcwhB,MAC/BD,MAAK,WACJzsB,EAAMI,WAAY,EAClBH,EAAWqE,KAAK/D,SAASP,OAhBzC,UAoBI,eAAC,GAAD,UAAQhH,EAAMuc,OACd,eAAC,GAAD,UAASvc,EAAM2P,gBAOrB0O,GAAQvC,IAAOtV,IAAV,2VASL,SAAAxG,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,wEAAkB,MASvB,SAAAtd,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,gFAAkB,MAO/BJ,GAAQpB,IAAOtV,IAAV,qQAYL2W,GAASrB,IAAOtV,IAAV,uPCvDGmtB,GApBQ,SAAC3zB,GASpB,OACI,eAAC,GAAD,CACIwc,SAAUxc,EAAMwc,SAChBC,UAAWzc,EAAMyc,UACjBQ,QAASjd,EAAMmtB,SAHnB,SAKKntB,EAAM2P,aAOb0O,GAAQvC,IAAOtV,IAAV,uWAQL,SAAAxG,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,8GAAkB,MAG3B,SAAAtd,GAAK,OAAKA,EAAMyc,UAAiBmB,GAAL,MCfnBgW,GAlBO,SAAC5zB,GAQnB,OACI,eAAC,GAAD,CACIyc,UAAWzc,EAAMyc,UACjBQ,QAASjd,EAAMmtB,SAFnB,SAIKntB,EAAM2P,aAOb0O,GAAQvC,IAAOtV,IAAV,gcAOL,SAAAxG,GAAK,OAAKA,EAAMyc,UAAiBmB,GAAL,MC0CnBiW,GA/DM,WAAO,IAAD,EACOpY,qBAAWC,IAAjC9Z,EADe,EACfA,MAAOqF,EADQ,EACRA,WACTD,EAAQpF,EAAMW,YAEpB,OAAQ,uCACJ,gBAACuxB,GAAD,WACI,gBAACC,GAAD,WACI,eAAC,GAAD,CAAgBpkB,UAAW,KAAM8M,WAAW,EAAOD,SAA6B,IAAnBxV,EAAMsD,SAAgB6iB,SAAU,WACzFnmB,EAAMsD,SAAW,EACjBrD,EAAWqE,KAAK/D,SAASP,MAE7B,eAAC,GAAD,CAAgB2I,UAAW,IAAK8M,WAAW,EAAOD,SAAU,CAAC,EAAG,GAAG3N,SAAS7H,EAAMsD,UAAW6iB,SAAU,WACnGnmB,EAAMsD,SAAW,EACjBrD,EAAWqE,KAAK/D,SAASP,MAE7B,eAAC,GAAD,CAAgB2I,UAAW,IAAK8M,WAAW,EAAOD,SAAU,CAAC,EAAG,GAAG3N,SAAS7H,EAAMsD,UAAW6iB,SAAU,WACnGnmB,EAAMsD,SAAW,EACjBrD,EAAWqE,KAAK/D,SAASP,MAE7B,eAAC,GAAD,CAAgB2I,UAAW,KAAM8M,UAA8B,IAAnBzV,EAAMsD,SAAgBkS,SAAU,CAAC,EAAG,GAAG3N,SAAS7H,EAAMsD,UAAW6iB,SAAU,WAC/G,CAAC,EAAG,GAAGte,SAAS7H,EAAMsD,UACtBtD,EAAMsD,UAAY,EAElBtD,EAAMsD,UAAY,EAEtBrD,EAAWqE,KAAK/D,SAASP,SAGjC,gBAACgtB,GAAD,WACI,eAAC,GAAD,CAAerkB,UAAW,KAAM8M,WAAW,EAAO0Q,SAAU,WACxD,IAAM3rB,EAAOI,EAAMS,UAAUwC,UAC7BrD,EAAKC,SAAQ,SAAA+D,GACTA,EAAMgN,gBAEVvL,EAAWqE,KAAK2G,aAAazQ,EAAK0H,YAEtC,eAAC,GAAD,CAAeyG,UAAW,OAAQ8M,WAAW,EAAO0Q,SAAU,WAC1D,IAAM3rB,EAAOI,EAAMS,UAAUwC,UAC7BrD,EAAKC,SAAQ,SAAA+D,GACTA,EAAMgN,gBAEVvL,EAAWqE,KAAK2G,aAAazQ,EAAK0H,YAEtC,eAAC,GAAD,CAAeyG,UAAW,QAAS8M,WAAW,EAAO0Q,SAAU,WAC3DlmB,EAAWqE,KAAK2G,aAAa,aAIzC,gBAACgiB,GAAD,WACI,eAAC,GAAD,CAAkB1X,KAAM,eAAC,KAAD,IAAc5M,UAAU,SAAS+K,cAAe,CAAEja,KAAM,SAAUka,KAAM,KAChG,eAAC,GAAD,CAAkB4B,KAAM,eAAC,KAAD,IAAc5M,UAAU,WAAW+K,cAAe,CAAEja,KAAM,oBAAqBka,KAAM,KAC7G,eAAC,GAAD,CAAkB4B,KAAM,eAAC,KAAD,IAAiB5M,UAAU,WAAW+K,cAAe,CAAEja,KAAM,YAAaka,KAAM,KACxG,eAAC,GAAD,CAAkB4B,KAAM,eAAC,KAAD,IAAa5M,UAAU,QAAQ+K,cAAe,CAAEja,KAAM,QAASka,KAAM,KAC7F,eAAC,GAAD,CAAkB4B,KAAM,eAAC,KAAD,IAAe5M,UAAU,UAAU+K,cAAe,CAAEja,KAAM,UAAWka,KAAM,KACnG,eAAC,GAAD,CAAkB4B,KAAM,eAAC,KAAD,IAAgB5M,UAAU,WAAW+K,cAAe,CAAEja,KAAM,WAAYka,KAAM,KACtG,eAAC,GAAD,CAAkB4B,KAAM,eAAC,KAAD,IAAgB5M,UAAU,OAAO+K,cAAe,CAAEja,KAAM,OAAQka,KAAM,KAC9F,eAAC,GAAD,CAAkB4B,KAAM,eAAC,KAAD,IAAgB5M,UAAU,QAAQ+K,cAAe,CAAEja,KAAM,QAASka,KAAM,KAChG,eAAC,GAAD,CAAkB4B,KAAM,eAAC,KAAD,IAAe5M,UAAU,UAAU+K,cAAe,CAAEja,KAAM,UAAWka,KAAM,KACnG,eAAC,GAAD,CAAkB4B,KAAM,eAAC,KAAD,IAAc5M,UAAU,WAAW+K,cAAe,CAAEja,KAAM,WAAYka,KAAM,YAO1GmZ,GAAgBhY,IAAOtV,IAAV,gHAObutB,GAAoBjY,IAAOtV,IAAV,wFAKjBwtB,GAAWlY,IAAOtV,IAAV,kFAMRytB,GAAsBnY,IAAOtV,IAAV,+HCzFnB0tB,G,kCAAAA,GAEKC,eAAiB,SAACrV,EACrBld,EAAcqF,EAAwB4qB,EAAwB1N,GAE9D,GAAiB,IAAbrF,EAAEsV,OAAN,CAEA,IAAM1xB,EAAOd,EAAMc,KAAK0R,OACxB,GAAkB,MAAd1R,EAAKiB,OAAiC,MAAhBjB,EAAK4Y,SAAiC,MAAd5Y,EAAKyO,OAA+B,MAAdzO,EAAKmS,MAAe,CACxF,IAAM7N,EAAQpF,EAAMW,YACd8xB,EAAQzyB,EAAMW,YAAY8J,WAC1B+N,EAAaia,EAAMja,WACnBvV,EAAYjD,EAAMS,UAAUwC,UAC5B6B,EAAO,EAAIM,EAAMsD,SAEjBgqB,EAAc,WAChB,IAAMC,EAAO1vB,EAAUzD,MAAK,SAAAyX,GAAI,OAAInU,EAAI4E,EAAyBuP,EAAK7J,KAAOhI,EAAM8L,aAC/EqH,EAAW0X,EAIf,YAHYvwB,GAARizB,IACApa,EAAW7Q,EAAyBirB,EAAKvlB,KAAOhI,EAAM8L,WAEnDqH,GAGLqa,EAAO9xB,EAAKiB,MAAM8wB,wBAClB/vB,EAAIoa,EAAE4V,QAAUhyB,EAAKiB,MAAMgxB,WAAaH,EAAK3rB,KAC7ClE,EAAIma,EAAE8V,QAAUlyB,EAAKiB,MAAMkxB,UAAYL,EAAK/f,IAGlD,IAA0B,IAAtB2F,EAAWza,MAEX00B,EAAMra,OAAQ,EACdqa,EAAMpa,KAAO,CACTvV,EAAGyB,KAAKC,MAAM1B,EAAIsC,EAAM8L,UAAYpM,GAAQM,EAAM8L,UAAYpM,EAC9D/B,EAAGwB,KAAKC,MAAMzB,EAAI8H,GAAqBA,GAG3C4nB,EAAMla,SAAWma,IACjBD,EAAMvjB,MAAQ,OAId,GAAwB,WAApBsJ,EAAWC,KAAmB,CAE1B,IAAM3X,EAAOd,EAAMc,KAAK0R,OACxB,GAAkB,MAAd1R,EAAKiB,OAAiC,MAAhBjB,EAAK4Y,SAAiC,MAAd5Y,EAAKyO,OAA+B,MAAdzO,EAAKmS,MAAe,CACxF,IAAM2f,EAAO9xB,EAAKiB,MAAM8wB,wBAClB9vB,EAAIma,EAAE8V,QAAUlyB,EAAKiB,MAAMkxB,UAAYL,EAAK/f,IAC5CjC,EAAarM,KAAKC,MAAMzB,EAAI8H,GAClC5H,EAAUuV,EAAWza,OAAO6S,WAAaA,EACzC5Q,EAAMS,UAAUwC,UAAYA,EAAUqE,QAEtCuB,EAAc+H,EAAY5Q,QAE/B,CACH,IAAM4D,EAAQX,EAAUuV,EAAWza,OAQnC,GAPA00B,EAAMpa,KAAO,CAETvV,EAAG4E,EAAyB9D,EAAMwJ,KAAOhI,EAAM8L,UAC/CnO,EAAG,GAEP0vB,EAAMla,SAAWma,IAEO,SAApBla,EAAWC,MAGX,GAFAD,EAAWG,QAAS,EACpB8Z,EAAMna,UAAY,EACdE,EAAWza,MAAQ,EAAG,CACtB,IAAMqI,EAAOnD,EAAUuV,EAAWza,MAAQ,GAC1C00B,EAAMna,WAAa5Q,EAAyBtB,EAAKgH,KAAO1F,EAAyBtB,EAAKE,MAAQlB,EAAM8L,eAG/E,UAApBsH,EAAWC,OAChBD,EAAWE,UAAW,GAG1B+Z,EAAMja,WAAN,eAAwBA,GAIhC+J,OA/EN+P,GAmFKY,eAAiB,SAAChW,EACrBld,EAAcqF,EAAwB4qB,EAAwB1N,GAE9D,GAAiB,IAAbrF,EAAEsV,OAAN,CAEA,IAAM1xB,EAAOd,EAAMc,KAAK0R,OACxB,GAAkB,MAAd1R,EAAKiB,OAAiC,MAAhBjB,EAAK4Y,SAAiC,MAAd5Y,EAAKyO,OAA+B,MAAdzO,EAAKmS,MAAe,CACxF,IAAM7N,EAAQpF,EAAMW,YACd8xB,EAAQzyB,EAAMW,YAAY8J,WAE1B+N,EAAaia,EAAMja,WACnBvV,EAAYjD,EAAMS,UAAUwC,UAC5B+G,EAAYhK,EAAMS,UAAUuJ,UAC5BlF,EAAO,EAAIM,EAAMsD,SAEjBkqB,EAAO9xB,EAAKiB,MAAM8wB,wBAClB/vB,EAAIoa,EAAE4V,QAAUhyB,EAAKiB,MAAMgxB,WAAaH,EAAK3rB,KAC7ClE,EAAIma,EAAE8V,QAAUlyB,EAAKiB,MAAMkxB,UAAYL,EAAK/f,IAElD,GAAK4f,EAAMra,OAAUI,EAAWE,UAAaF,EAAWG,QA2CpD,GAAI8Z,EAAMra,MAAO,CACb,IAAM+a,GAAU5uB,KAAKC,MAAM1B,EAAIsC,EAAM8L,UAAYpM,GAAQ,GAAKM,EAAM8L,UAAYpM,EAChF2tB,EAAMvjB,OAASikB,EAASV,EAAMla,SAAWka,EAAMla,SAAW4a,GAAUV,EAAMpa,KAAKvV,OAC5E,GAAI0V,EAAWE,SAAU,CAC5B,IAAMya,GAAU5uB,KAAKC,MAAM1B,EAAIsC,EAAM8L,UAAYpM,GAAQ,GAAKM,EAAM8L,UAAYpM,EAC1ElB,EAAQX,EAAUuV,EAAWza,OAE/Bq1B,EAAOD,EAASV,EAAMpa,KAAKvV,EAE3BqwB,EAASV,EAAMla,WACf6a,EAAOX,EAAMla,SAAWka,EAAMpa,KAAKvV,GAGnCqwB,GAAUV,EAAMpa,KAAKvV,IACrBswB,EAAOhuB,EAAM8L,UAAY9L,EAAMsD,UAEnC9E,EAAM0C,IAAMmC,EAAwBrD,EAAMsD,SAAUnE,KAAKC,MAAM4uB,EAAOhuB,EAAM8L,UAAY9L,EAAMsD,WAE9F1I,EAAMS,UAAUwC,UAAYA,EAAUqE,aACnC,GAAIkR,EAAWG,OAAQ,CAC1B,IAAMwa,GAAU5uB,KAAKC,MAAM1B,EAAIsC,EAAM8L,UAAYpM,GAAQ,GAAKM,EAAM8L,UAAYpM,EAC1ElB,EAAQX,EAAUuV,EAAWza,OAC7Bs1B,EAAW3rB,EAAyB9D,EAAM0C,KAAOlB,EAAM8L,UAEzDkiB,EAAOD,EAEPA,EAASE,EAAWZ,EAAMla,WAC1B6a,EAAOX,EAAMla,SAAW8a,GAGxBF,EAASV,EAAMna,YACf8a,EAAOX,EAAMna,WAEjB1U,EAAMwJ,IAAM3E,EAAwBrD,EAAMsD,SAAUnE,KAAKC,MAAM4uB,EAAOhuB,EAAM8L,UAAY9L,EAAMsD,WAE9F1I,EAAMS,UAAUwC,UAAYA,EAAUqE,aA9EkB,CAC5DmrB,EAAM7Z,gBAAkBrU,KAAKC,MAAMzB,EAAI8H,GACvC4nB,EAAM5Z,gBAAkBtU,KAAKC,MAAM1B,EAAIsC,EAAM8L,UAAYpM,GAEzD,IAAImC,EAAO,EACLkK,EAAgBnH,EAAUxK,MAAK,SAAC4K,GAClC,GAAqB,UAAjBA,EAAQlK,KAAkB,CAC1B,IACMgP,EADS9E,EAAQF,OACFnE,QAAUX,EAAM8L,UACrC,GAAIpO,GAAKmE,GAAQnE,EAAImE,EAAOiI,EACxB,OAAO9E,EAEXnD,GAAQiI,MAGhBujB,EAAM/nB,cAA4BhL,GAAjByR,EAA6B,KAAOA,EAErDqH,EAAWza,OAAS,EACpB,IAAMu1B,EAAYluB,EAAMiE,WACxBjE,EAAMiE,YAAc,EACpBmP,EAAWC,KAAO,SAClB,IAAK,IAAIxW,EAAI,EAAGA,EAAIgB,EAAUf,OAAQD,IAAK,CACvC,IAAM2B,EAAQX,EAAUhB,GAClBgF,EAAOS,EAAyB9D,EAAMwJ,KAAOhI,EAAM8L,UACnDhK,EAAQD,EAAOS,EAAyB9D,EAAM0C,KAAOlB,EAAM8L,UACjE,GAAIpO,GAAKmE,GAAQnE,GAAKoE,EAAO,CACzBsR,EAAWza,MAAQkE,EACnBmD,EAAMiE,WAAapH,EAEfa,EAAImE,EAAO,GAAIuR,EAAWC,KAAO,OAC5B3V,EAAIoE,EAAQ,KAAIsR,EAAWC,KAAO,SAC3C,OAIRrT,EAAMmE,UAAYnE,EAAMiE,YACL,IAAfiqB,GAAoBA,IAAcluB,EAAMiE,aACxCjE,EAAMkE,UAAYgqB,GAItBb,EAAMja,WAAN,eAAwBA,GAwC5B+J,OAvLN+P,GA2LKiB,aAAe,SAACrW,EACnBld,EAAcqF,EAAwB4qB,EAAwB1N,GAE9D,GAAiB,IAAbrF,EAAEsV,OAAN,CAEA,IAAMptB,EAAQpF,EAAMW,YACd8xB,EAAQzyB,EAAMW,YAAY8J,WAE1B+N,EAAaia,EAAMja,WACnBvV,EAAYjD,EAAMS,UAAUwC,UAC5ByF,EAAWtD,EAAMsD,SAEvB,GAAI+pB,EAAMra,OAEN,GADAqa,EAAMra,OAAQ,EACVqa,EAAMvjB,MAAQ,EAAG,CACjB,IAAM0B,EAAarM,KAAKC,MAAMiuB,EAAMpa,KAAKtV,EAAI8H,GAK7C5H,EAAUnD,KAAK,CACXsN,IAAK3E,EAAwBC,EAAUnE,KAAKC,MAAMiuB,EAAMpa,KAAKvV,EAAIsC,EAAM8L,UAAYxI,IACnFkI,aACAtK,IAAKmC,EAAwBC,EAAUnE,KAAKC,MAAMiuB,EAAMvjB,MAAQ9J,EAAM8L,UAAYxI,MAItFzF,EAAUgR,MAAK,SAACC,EAAGC,GACf,IAAMC,EAAO1M,EAAyBwM,EAAE9G,KAClCiH,EAAO3M,EAAyByM,EAAE/G,KACxC,OAAOgH,IAASC,EAAO,EACnBD,EAAOC,GAAQ,EAAI,KAG3BhP,EAAWqE,KAAK2G,aAAapN,GAE7B4F,EAAc+H,EAAY5Q,SAG9BwY,EAAWG,QAAS,EACpBH,EAAWE,UAAW,EACtB+Z,EAAMja,WAAN,eAAwBA,GACxBnT,EAAWqE,KAAK2G,aAAapN,EAAUqE,SAE3Cib,MAIO+P,UCxOTkB,G,kCAAAA,GAEKC,aAAe,SAACvW,EAAkBld,EAAcqF,GAEpCrF,EAAM+W,QAAQC,UAAUC,KAAvC,IACMhL,EAAYjM,EAAMW,YAAYsL,UAI9B7G,EAAQpF,EAAMW,YACd+yB,EAAWtuB,EAAMiE,aAAejE,EAAMmE,UAEtCkpB,EAAQrtB,EAAMqF,WAGpB,GAAIrF,EAAMI,UACN,OAAQ0X,EAAEte,KACN,IAAK,IACDwK,EAAYpJ,EAAOqF,EAAYrF,EAAMoB,mBAgBjD,IARgC,IAA5BqxB,EAAMja,WAAWza,QACjB00B,EAAMja,WAAWza,OAAS,EAC1B00B,EAAMja,WAAWE,UAAW,EAC5B+Z,EAAMja,WAAWC,KAAO,UAE5Bga,EAAM5Z,iBAAmB,EACzB4Z,EAAM7Z,iBAAmB,EAErB3M,EAAU+M,WAAa/M,EAAUvK,QAAUuK,EAAUgN,QAAUhN,EAAUiN,MAAQjN,EAAUkN,OAASlN,EAAUmN,SAC9G,GAAInN,EAAUmN,QAEV,OAAQ8D,EAAEte,KACN,IAAK,IAAKyG,EAAWqE,KAAK0J,YAAa,MACvC,IAAK,IAAK/N,EAAWqE,KAAKkK,aAAc,MACxC,IAAK,IACDvO,EAAWqE,KAAK0G,iBAIrB,GAAInE,EAAU+M,WAAa/M,EAAUvK,OAAQ,CAChD,IAAM+O,EAAwBxE,EAAU+M,UAAY,QAAU,SAC9D,OAAQkE,EAAEte,KACN,IAAK,UACDyG,EAAWqE,KAAK6G,qBAAoB,EAAME,GAE1C,MACJ,IAAK,YACDpL,EAAWqE,KAAK6G,qBAAoB,EAAOE,SAIhD,GAAIxE,EAAUgN,OACjB,OAAQiE,EAAEte,KACN,IAAK,YAAayG,EAAWqE,KAAKkI,aAAY,GAAQ,MACtD,IAAK,aAAcvM,EAAWqE,KAAKkI,aAAY,QAEhD,GAAI3F,EAAUiN,KACjB,OAAQgE,EAAEte,KACN,IAAK,YAAayG,EAAWqE,KAAKuI,WAAU,GAAQ,MACpD,IAAK,aAAc5M,EAAWqE,KAAKuI,WAAU,QAE9C,GAAIhG,EAAUkN,MACjB,OAAQ+D,EAAEte,KACN,IAAK,YAAayG,EAAWqE,KAAKuH,eAAc,GAAQ,MACxD,IAAK,aAAc5L,EAAWqE,KAAKuH,eAAc,SAIzD,OAAQiM,EAAEte,KACN,IAAK,UAAWyG,EAAWqE,KAAK6G,qBAAoB,EAAM,UAAW,MACrE,IAAK,YAAalL,EAAWqE,KAAK6G,qBAAoB,EAAO,UAAW,MACxE,IAAK,YACGmjB,EACAruB,EAAWqE,KAAKqH,WAAU,GAE1B1L,EAAWqE,KAAKgI,cAAa,GAGjC,MACJ,IAAK,aACGgiB,EACAruB,EAAWqE,KAAKqH,WAAU,GAE1B1L,EAAWqE,KAAKgI,cAAa,GAGjC,MACJ,IAAK,IAAKrM,EAAWqE,KAAK0H,WAAY,MACtC,IAAK,IACDuiB,MAAMlwB,KAAKC,UAAU1D,EAAMS,UAAUwC,UAAUmC,EAAMiE,YAAY/C,MAEjE,MACJ,IAAK,IAAKjB,EAAWqE,KAAKC,gBAAiB,MAC3C,IAAK,IAAKtE,EAAWqE,KAAKoH,gBAAiB,MAC3C,IAAK,IACDnG,EAAkB3K,EAAOqF,GAEzB,MACJ,IAAK,IACDD,EAAM+N,QAAU/N,EAAM+N,OACtB9N,EAAWqE,KAAK/D,SAASP,GAEzB,MACJ,IAAK,OACDC,EAAWqE,KAAK6I,aAEhB,MACJ,IAAK,IACDnN,EAAMsD,SAAW,EACjBrD,EAAWqE,KAAK/D,SAASP,GAEzB,MACJ,IAAK,IACDA,EAAMsD,SAAW,EACjBrD,EAAWqE,KAAK/D,SAASP,GAEzB,MACJ,IAAK,IACDA,EAAMsD,SAAW,EACjBrD,EAAWqE,KAAK/D,SAASP,GAEzB,MACJ,IAAK,IACG,CAAC,EAAG,GAAG6H,SAAS7H,EAAMsD,UACtBtD,EAAMsD,UAAY,EAElBtD,EAAMsD,UAAY,EAEtBrD,EAAWqE,KAAK/D,SAASP,GAEzB,MACJ,IAAK,SACDC,EAAWqE,KAAK8H,cAEhB,MACJ,IAAK,IACDnM,EAAWqE,KAAKqJ,iBA9I9BygB,GAsJKI,eAAiB,SAAC1W,EAAkBld,EAAcqF,EAAwB8d,GAE9DnjB,EAAM+W,QAAQC,UAAUC,KAAvC,IACMhL,EAAYjM,EAAMW,YAAYsL,UAC9B7G,EAAQpF,EAAMW,YAIpB,IAAKyE,EAAMI,YAEO,YAAV0X,EAAEte,MACFqN,EAAUmN,QAAU+J,EACpB9d,EAAWqE,KAAKsC,aAAaC,KAE5BA,EAAUmN,SAAS,CAEpB,IAAMsa,EAAWtuB,EAAMiE,aAAejE,EAAMmE,UAC5C,OAAQ2T,EAAEte,KACN,IAAK,IACDqN,EAAUvK,OAASyhB,EACnB9d,EAAWqE,KAAKsC,aAAaC,GAE7B,MACJ,IAAK,IACGynB,IACAznB,EAAU+M,UAAYmK,EACtB9d,EAAWqE,KAAKsC,aAAaC,IAGjC,MACJ,IAAK,IACGynB,IACAznB,EAAUgN,OAASkK,EACnB9d,EAAWqE,KAAKsC,aAAaC,IAGjC,MACJ,IAAK,IACDA,EAAUiN,KAAOiK,EACjB9d,EAAWqE,KAAKsC,aAAaC,GAE7B,MACJ,IAAK,QACDA,EAAUkN,MAAQgK,EAClB9d,EAAWqE,KAAKsC,aAAaC,IAOzCkX,GACAqQ,GAAYC,aAAavW,EAAGld,EAAOqF,IAKhCmuB,I,uLAAAA,MCOAK,GA7MK,SAACz1B,GAEd,IAAD,EAC4Byb,qBAAWC,IAAjC9Z,EADN,EACMA,MAAOqF,EADb,EACaA,WACTD,EAAQpF,EAAMW,YAEdgO,EAAUuS,iBAA8B,MACxC4S,EAAW5S,iBAA8B,MACzC6S,EAAW7S,iBAA8B,MAN7C,EAQkC9G,mBAAa,IAR/C,mBAQK9Y,EARL,KAQiBoK,EARjB,KASI6W,EAAS,kBAAM7W,EAAc,KAE7B+mB,EAAQrtB,EAAMqF,WACd2N,EAAQqa,EAAMra,MACdI,EAAaia,EAAMja,WACnB9N,EAAW+nB,EAAM/nB,SACjBmO,EAAkB4Z,EAAM5Z,gBACxBD,EAAkB6Z,EAAM7Z,gBACxB1J,EAAQujB,EAAMvjB,MACdmJ,EAAOoa,EAAMpa,KAIb4X,EAFW,GAEiB7qB,EAAM8L,UAAY,EAC9CjO,EAAYjD,EAAMS,UAAUwC,UAI5BkV,EAASnY,EAAMO,WAAW4X,OAEO,MAApB2b,EAAS1S,UAAsB0S,EAAS1S,QAAQ2R,WAAae,EAAS1S,QAAQjS,aAEjGoL,qBAAU,WACNlV,EAAW8F,OAAOK,QAAlB,2BACOxL,EAAMc,MADb,IACmB0R,OAAO,2BACfxS,EAAMc,KAAK0R,QADG,IAEjBzQ,MAAO+xB,EAAS1S,QAChBnO,MAAO8gB,EAAS3S,aAIxB/b,EAAW8F,OAAOO,cAAlB,2BACO1L,EAAMsB,YADb,IACyBkR,OAAQ,kBAAM9G,EAAc,UAEtD,IAEH6O,qBAAU,WACFpC,GAA6B,MAAnBxJ,EAAQyS,SAClBzS,EAAQyS,QAAQoN,UAErB,CAACrW,IAEJ,IAAM+X,EAAgCvQ,mBAAQ,WAE1C,IADA,IAAMU,EAAyB,GACtBpe,EAAI,EAAGA,GAAK+xB,IAAkB/xB,IACnCoe,EAAQvgB,KACJ,eAAC,GAAD,CAAgBuwB,OAAQpuB,EAAI,IAAM,EAAGiP,UAAW9L,EAAM8L,WAAzCjP,IAGrB,OAAOoe,IACR,CAvCc,KAyCXpW,EAAOjK,EAAMS,UAAUuJ,UAAU,GAAGE,OACpC+pB,EAAmBtU,mBAAQ,WAG7B,IAFA,IAAMjP,EAAgB7S,EAAYkG,KAAI,SAAAuJ,GAAK,OAAKrD,EAAKnB,SAAWwE,GAAS,MACnE1N,EAAsB,GACnBqC,EAAI,EAAGA,EvD1EC,GuD0EcA,IAAK,CAChC,IAAM6G,EAAWtB,EAAuBvF,GACxCrC,EAAKE,KACD,eAACo0B,GAAD,CACI1L,QAAS9X,EAAczD,SAASnE,GAChCqrB,OAAQrrB,IAAa4H,EAAc,IAFtBzO,IAMzB,OAAOrC,IACR,CAACqK,EAAKnB,WAEHsrB,EAAezU,mBAAQ,WAIzB,IAHA,IAAM/f,EAAsB,GAExB+I,EAAQ,EACH1G,EAAI,EAAGA,EAAIgB,EAAUf,OAAQD,IAAK,CACvC,IAAM2B,EAAQX,EAAUhB,GACxB,GAAwB,MAApB6xB,EAAS1S,QAAiB,CAC1B,IAAMiT,EAASP,EAAS1S,QAAQ2R,WAC1BuB,EAAY5sB,EAAyB9D,EAAMwJ,KAAOhI,EAAM8L,UAE9D,GADmBojB,EAAY5sB,EAAyB9D,EAAM0C,KAAOlB,EAAM8L,UAC1DmjB,EAAS,GACtBC,EAAYD,EAASP,EAAS1S,QAAQjS,YACtC,SAGRxG,IAXuC,MAYRvD,EAAMiE,WAAajE,EAAMmE,UAAY,CAACnE,EAAMiE,WAAYjE,EAAMmE,WAAa,CAACnE,EAAMmE,UAAWnE,EAAMiE,YAZ3F,mBAYhCgK,EAZgC,KAYpBkhB,EAZoB,KAajC3Z,EAAWvH,GAAcpR,GAAKsyB,GAAYtyB,EAC1CyO,EAAgB7S,EAAYkG,KAAI,SAAAuJ,GAAK,OAAKrD,EAAKnB,SAAWwE,GAAS,MACnExE,EAAWtB,EAAuB5D,EAAMgN,YACxC4X,EAAU9X,EAAczD,SAASnE,GAGjC0rB,EAAU5rB,EAAkBhF,EAAMwJ,KAClCqnB,EAAU7rB,EAAkBhF,EAAM0C,KACxC1G,EAAKE,KACD,eAAC40B,GAAD,CACIztB,KAAMS,EAAyB9D,EAAMwJ,KAAOhI,EAAM8L,UAClDhC,MAAOxH,EAAyB9D,EAAM0C,KAAOlB,EAAM8L,UACnDuH,KAAMD,EAAWC,KACjBmC,SAAUA,EACV4N,QAASpjB,EAAM6G,UAAU+M,UACzBN,SAAUtT,EAAM6G,UAAUgN,OAC1BN,OAAQvT,EAAM6G,UAAUiN,KACxByb,SAAUvvB,EAAM6G,UAAUvK,OAC1B8D,UAAWJ,EAAMI,UACjBoe,cAAe,WACXve,EAAWqE,KAAK8H,eAXxB,SAcI,eAAC,GAAD,CACIzO,EAAGa,EAAMgN,WAAa/F,EACtByV,QAASkU,EAAUC,EAAUD,EAAUC,EACvCjM,QAASA,KAjBAvmB,IA0BzB,OAFAsB,QAAQC,IAAI,QAAUmF,GAEf/I,IACR,CAACqD,EAAWA,EAAUf,OAAQkD,EAAMiE,WAAYjE,EAAMmE,UAAWiP,EAAYpT,EAAMI,UAClFJ,EAAM6G,UAAU+M,UAAW5T,EAAM6G,UAAUvK,OAAQ0D,EAAM6G,UAAUgN,OAAQ7T,EAAM6G,UAAUiN,KAC3F5X,IAEJ,OACI,gBAAC,GAAD,CACI0tB,SAAU,IACVxN,IAAK7S,EACLiM,SAAUxc,EAAMwc,SAChBqU,UAAW,SAAC/R,GAAD,OAAsBsW,GAAYI,eAAe1W,EAAGld,EAAOqF,GAAY,IAClF6pB,QAAS,SAAChS,GAAD,OAAsBsW,GAAYI,eAAe1W,EAAGld,EAAOqF,GAAY,IALpF,UAOI,eAAC,GAAD,CAASwlB,UAAWzlB,EAAMI,UAA1B,SACI,eAAC,GAAD,MAEJ,gBAAC,GAAD,WACI,eAACovB,GAAD,UACI,eAAC,GAAD,CACI5E,UAhIH,GAiIG9e,UAAW9L,EAAM8L,UACjBxG,SAAUA,EACVulB,eAAgBA,EAChBpX,gBAAiBA,MAGzB,eAACgc,GAAD,CAAQrT,IAAKuS,EAAb,SACI,eAAC,GAAD,CAAiBnb,gBAAiBA,EAAiBlO,SAAUA,MAEjE,gBAACoqB,GAAD,CAAYtT,IAAKsS,EACbiB,SAAU,WACN,IAAMj0B,EAAOd,EAAMc,KAAK0R,OAExB,GAAkB,MAAd1R,EAAKiB,OAAiC,MAAhBjB,EAAK4Y,SAAiC,MAAd5Y,EAAKyO,OAA+B,MAAdzO,EAAKmS,MAAe,CACxF,IAAM8f,EAAajyB,EAAKiB,MAAMgxB,WACxBE,EAAYnyB,EAAKiB,MAAMkxB,UAC7BnyB,EAAK4Y,QAAQhH,SAAS,CAAEzL,KAAM8rB,IAC9BjyB,EAAKyO,MAAMmD,SAAS,CAAEzL,KAAM8rB,IAC5BjyB,EAAKmS,MAAMP,SAAS,CAAEG,IAAKogB,IAE/B1Q,KAXR,UAcI,eAACyS,GAAD,CACI9lB,MAAO+gB,EADX,SAGKC,IAEL,eAAC+E,GAAD,CACI/lB,MAAO+gB,EADX,SAGKgE,IAEL,gBAACiB,GAAD,CACIhmB,MAAO+gB,EACPkF,YAAa,SAAAjY,GAAC,OAAIoV,GAAqBC,eAAerV,EAAGld,EAAOqF,EAAY4qB,EAAgB1N,IAC5F6S,YAAa,SAAAlY,GAAC,OAAIoV,GAAqBY,eAAehW,EAAGld,EAAOqF,EAAY4qB,EAAgB1N,IAC5F8S,UAAW,SAAAnY,GAAC,OAAIoV,GAAqBiB,aAAarW,EAAGld,EAAOqF,EAAY4qB,EAAgB1N,IAJ5F,UAMMnK,EAAgB,eAACkd,GAAD,CAAOxyB,EAAGuV,EAAKvV,EAAGC,EAAGsV,EAAKtV,EAAGmM,MAAOA,EAClDoR,QAASpR,EAAQ9J,EAAM8L,YAAc,EAAI,EAAKhC,GAAS9J,EAAM8L,UAAY,KAAO,EAAI,EAAI,KADlF,+BAGTkjB,KAEL,eAAC,GAAD,CACI3L,MAAOrjB,EAAMI,UACb0J,MAAO+gB,cAUzBxT,GAAQvC,IAAOtV,IAAV,0GAGI,SAAAxG,GAAK,OAAKA,EAAMwc,SAAoB,eAAT,UAMpC2a,GAAgBC,YAAH,kGASbF,GAAQpb,IAAOtV,IAAV,wTAQC,SAAAxG,GAAK,OAAIA,EAAM0E,KAChB,SAAA1E,GAAK,OAAIA,EAAM2E,KACb,SAAA3E,GAAK,OAAIA,EAAM8Q,SACd,SAAA9Q,GACN,OAAQA,EAAMkiB,SACV,KAAK,EAAG,OAAOzV,EACf,KAAK,EAAG,OAAOA,GACf,KAAK,GAAI,OAAOA,GAChB,QAAS,OAAOA,MAMX0qB,IAGX1X,GAAU3D,IAAOtV,IAAV,wItDzOoB,IsDgP3B,SAAAxG,GAAK,OAAIA,EAAMysB,SAAW,GAAK7O,MAE/ByO,GAAQvQ,IAAOtV,IAAV,4ItDlPsB,IsDyP3BgwB,GAAY1a,IAAOtV,IAAV,sMAEIgG,EACMA,EtD3PU,IsDiQ7BiqB,GAAS3a,IAAOtV,IAAV,uMAECgG,EtDnQsB,IsD0Q7BkqB,GAAa5a,IAAOtV,IAAV,ugBAGSgG,EtD7QU,IsDgS7BoqB,GAAgB9a,IAAOtV,IAAV,gMAQN,SAAAxG,GAAK,OAAIA,EAAM8Q,QACdrE,MAIRoqB,GAAc/a,IAAOtV,IAAV,6MAQJ,SAAAxG,GAAK,OAAIA,EAAM8Q,QACdrE,MAKRqpB,GAAaha,IAAOtV,IAAV,0NAMFiG,IAIR,SAAAzM,GAAK,OAAKA,EAAMoqB,QAAe9M,YAAtB,wEAAiB,MAG1B,SAAAtd,GAAK,OAAKA,EAAM+1B,OAAczY,YAArB,sEAAgB,MAKzBwZ,GAAchb,IAAOtV,IAAV,8LAQJ,SAAAxG,GAAK,OAAIA,EAAM8Q,QACdrE,MAKRulB,GAASlW,IAAOtV,IAAV,qOAMC,SAAAxG,GAAK,OAAIA,EAAM8S,UAAY,IAE1BrG,MAEW,SAAAzM,GAAK,OAAIA,EAAMiyB,OAAS,MAAQ,SAInDqE,GAAaxa,IAAOtV,IAAV,owBAcJ,SAAAxG,GAAK,OAAIA,EAAM6I,QAEd,SAAA7I,GAAK,OAAIA,EAAM8Q,SAOtB,SAAA9Q,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,wEAAkB,MAI3B,SAAAtd,GAAK,OAAMA,EAAMwc,UAAYxc,EAAMoqB,QAAgB9M,YAA1C,wEAAqC,MAI9C,SAAAtd,GAAK,OAAMA,EAAMwc,UAAYxc,EAAMu2B,SAAiBjZ,YAA3C,wEAAsC,MAI/C,SAAAtd,GAAK,OAAIA,EAAMwc,SAA0B,SAAfxc,EAAMqa,KAAkBiD,YAAxB,iJAIT,UAAftd,EAAMqa,KAAmBiD,YAAzB,kJAIA,GAAK,MAGP,SAAAtd,GAAK,OAAMA,EAAMwc,UAAYxc,EAAMsa,SAAiBgD,YAA3C,oHAAsC,MAK/C,SAAAtd,GAAK,OAAMA,EAAMwc,UAAYxc,EAAMua,OAAe+C,YAAzC,mHAAoC,MAK7C,SAAAtd,GAAK,OAAMA,EAAMwc,UAAYxc,EAAMoH,UAAkBkW,YAA5C,wEAAuC,MAIhD+N,GAASvP,IAAOtV,IAAV,0gBAQD,SAAAxG,GAAK,OAAIA,EAAM2E,KAEZ,SAAA3E,GAAK,OAAIyM,GAAuC,IAAlBzM,EAAMkiB,QAAgB,EAAsB,IAAlBliB,EAAMkiB,QAAgB,EAAsB,IAAlBliB,EAAMkiB,QAAgB,GAAK,OAE3E,SAAAliB,GACxC,OAAQA,EAAMkiB,SACV,KAAK,EAAG,MAAO,gCACf,KAAK,EAAG,MAAO,gCACf,KAAK,GAAI,MAAO,oCAItB,SAAAliB,GAAK,OAAIA,EAAMoqB,QAAU,GAAK9M,YAArB,wHAaTwS,GAAgBhU,IAAOtV,IAAV,qKAKJ,SAAAxG,GAAK,OAAIA,EAAMqqB,MAAQ,QAAU,UAEnC,SAAArqB,GAAK,OAAIA,EAAM8Q,QACdrE,MC7YC4qB,GAzFC,WAAO,IAAD,EAEY5b,qBAAWC,IAAjC9Z,EAFU,EAEVA,MAAOqF,EAFG,EAEHA,WAETD,EAAQpF,EAAMO,WACdiS,EAASxS,EAAMW,YAErB4Z,qBAAU,WACN,IAAMkX,EAAOjf,EAAOsG,cACpB4Y,KAAU3oB,WAAW,IAAI4oB,aAAgBF,EAAK5yB,KAC1C,CAAEka,KAAM0Y,EAAK1Y,KAAM6Y,QAAS,KAAOC,MAAK,SAACC,GACrCzsB,EAAWqE,KAAK4G,cAAcwhB,MAKtCJ,KAAU3oB,WAAW,IAAI4oB,aAAgB,uBACrC,CAAE5Y,KAAM,EAAG6Y,QAAS,KAAOC,MAAK,SAACC,GAC7BzsB,EAAWsG,MAAMC,SAASkmB,QAEnC,IAEH,IAAM4D,EAAa,WACftwB,EAAM+S,QAAU/S,EAAM+S,OACtB9S,EAAWsG,MAAMI,cAAc3G,IAGnC,GAAyC,IAArCpF,EAAMS,UAAUuJ,UAAU9H,OAC1B,OAAO,+BAGX,IAAMsD,EAAaJ,EAAM+S,OAA2BnY,EAAMW,YAAY6E,UAApCJ,EAAMI,UAClC2N,EAAU/N,EAAM+S,OAAwB3F,EAAOW,OAAtB/N,EAAM+N,OAC/BwiB,EAAWvwB,EAAM+S,OAOnB,WAEK3F,EAAOhN,UAGR4D,EAAYpJ,EAAOqF,EAAYrF,EAAMoB,cAFrCiE,EAAWqE,KAAKqJ,gBAVQ,WAEvB3N,EAAMI,UAGP8c,GAAclZ,YAAYpJ,EAAOqF,EAAYrF,EAAMoB,cAFnDkhB,GAAcvP,aAAa/S,EAAOqF,IAYpCuwB,EAAkBxwB,EAAM+S,OAG1B,WACA3F,EAAOW,QAAUX,EAAOW,OACxB9N,EAAWqE,KAAK/D,SAAS6M,IALU,WACnCpN,EAAM+N,QAAU/N,EAAM+N,OACtB9N,EAAWsG,MAAMI,cAAc3G,IAKnC,OACI,gBAAC,GAAD,WACI,gBAAC,GAAD,WACI,gBAACywB,GAAD,CAAOhL,UAAWrlB,EAAlB,UACI,eAACswB,GAAD,CAAWlb,UAAWxV,EAAM+S,OAAQkD,QAAS,WACrCjW,EAAM+S,QAAQud,KADtB,qBAGA,eAACI,GAAD,CAAWlb,SAAUxV,EAAM+S,OAAQkD,QAAS,WACnCjW,EAAM+S,QAAQud,KADvB,uBAIJ,gBAACK,GAAD,WACI,gBAACC,GAAD,CAAS3a,QAASsa,EAAlB,UAA2B,eAACM,GAAD,CAAcrb,SAAUpV,EAAxB,kBAA3B,MAAoF,eAACywB,GAAD,CAAcrb,UAAWpV,EAAzB,sBACpF,gBAACwwB,GAAD,CAAS3a,QAASua,EAAlB,UAAkC,eAACK,GAAD,CAAcrb,UAAWzH,EAAzB,sBAAlC,MAA6F,eAAC8iB,GAAD,CAAcrb,SAAUzH,EAAxB,2BAGrG,gBAAC,GAAD,CACI6b,SAAU,IACVC,UAAW,SAAC/R,GACR,IAAK1X,EACD,OAAQ0X,EAAEte,KACN,IAAK,IAAK82B,MAL1B,UASI,eAACQ,GAAD,UAAW,eAAC,GAAD,MACX,gBAAC,GAAD,WACI,eAAC,GAAD,CAActb,UAAWxV,EAAM+S,SAC/B,eAAC,GAAD,CAAayC,SAAUxV,EAAM+S,mBAQ3CsE,GAAQvC,IAAOtV,IAAV,uFAMLiZ,GAAU3D,IAAOtV,IAAV,+HAOPixB,GAAQ3b,IAAOtV,IAAV,iKAQL,SAAAxG,GAAK,OAAIA,EAAMysB,SAAW,GAAK7O,MAE/B8Z,GAAY5b,IAAOtV,IAAV,mbAQT,SAAAxG,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,wDAAkB,MAWvB,SAAAtd,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,wDAAkB,MAG/Bqa,GAAW7b,IAAOtV,IAAV,gMAWRoxB,GAAU9b,IAAOtV,IAAV,kbAqBPqxB,GAAe/b,IAAO4W,KAAV,8DAIZ,SAAA1yB,GAAK,OAAKA,EAAMwc,SAAgBc,YAAvB,2CAAkB,MAG3B+O,GAAQvQ,IAAOtV,IAAV,gKAQLsxB,GAAYhc,IAAOtV,IAAV,4NvD9KyB,KuDuLlCgoB,GAAQ1S,IAAOtV,IAAV,sKvDvL6B,KwDUzBuxB,GAvBM,WAAO,IAAD,EAEOtc,qBAAWC,IAAjC9Z,EAFe,EAEfA,MAAOqF,EAFQ,EAERA,WAET+wB,GAA4C,IAAjCp2B,EAAMO,WAAW8I,WAClC,OACI,eAAC,GAAD,UAGI,eAAC,GAAD,CACIoR,YAAa,CACT,CAAE5b,KAAM,SAAUic,SAAS,EAAOI,KAAM,eAAC,GAAD,KACxC,CAAErc,KAAM,OAAQic,SAAUsb,EAAUlb,KAAM,eAAC,GAAD,KAC1C,CAAErc,KAAM,QAASic,SAAUsb,EAAUlb,KAAM,0BAC3C,CAAErc,KAAM,UAAWic,SAAUsb,EAAUlb,KAAM,2BAEjDb,SAAUra,EAAMK,YAAYyL,cAC5BkP,eAAgB,SAACjd,GAAD,OAAmBsH,EAAWsG,MAAME,iBAAiB9N,SAQ/E0e,GAAQvC,IAAOtV,IAAV,2WxD1BqB,IwD8BPyxB,GACCA,ICZXC,GApBQ,WAAO,IAAD,EAEKzc,qBAAWC,IAAjC9Z,EAFiB,EAEjBA,MAAOqF,EAFU,EAEVA,WAEf,OACI,eAAC,GAAD,UAGI,eAAC,GAAD,CACIoV,YAAa,CACT,CAAE5b,KAAM,QAASic,SAAS,EAAMI,KAAM,0BACtC,CAAErc,KAAM,SAAUic,SAAS,EAAMI,KAAM,2BAE3Cb,SAAUra,EAAMK,YAAYyL,cAC5BkP,eAAgB,SAACjd,GAAD,OAAmBsH,EAAWsG,MAAME,iBAAiB9N,SAQ/E0e,GAAQvC,IAAOtV,IAAV,2WzDrBqB,IyDyBPyxB,GACCA,ICkEXE,GA7FQ,WAAO,IAAD,EAEK1c,qBAAWC,IAAjC9Z,EAFiB,EAEjBA,MAEFwJ,GAJmB,EAEVnE,WAECrF,EAAMgB,YAAYwI,SAC5BgtB,EAAa,SAACC,EAAeC,GAI/B,IAAMrW,EAAyB,GAmC/B,OA/BAA,EAAQvgB,KAAK,eAAC,GAAD,UAA8B,+BAAM22B,KAAtBpW,EAAQne,SACnCw0B,EAAM72B,SAAQ,SAACmE,GACX,IAAM2yB,EAAS3yB,EAAK2yB,OACdC,GAAkBD,EAAO34B,OAASC,EAAqBC,GAAqBy4B,EAAO54B,OACnF84B,GAAiBF,EAAO34B,OAASK,EAAkBC,GAAkBq4B,EAAO54B,OAE5EigB,EADS1e,EAAiB0E,EAAK5E,WACXP,KAC1BwhB,EAAQvgB,KAAK,gBAAC,GAAD,CACTq1B,YAAa,SAACjY,GACO,IAAbA,EAAEsV,SACNhpB,EAAQC,aAEOnK,EAAiB0E,EAAK5E,WAEVL,QAAQgF,KAAI,SAACtC,GACpC,IAAMwC,EAAWhF,EAAsBwC,GACvC,OAAO,GAASuC,EAAK2yB,OAAO54B,MAAQkG,KAG5BpE,SAAQ,SAAC9B,GACjB,IAEMoL,EAFY7K,EAAiBP,EAAQ,IAC5BwG,KAAKC,MAAMzG,EAAQ,IAElCyL,EAAQstB,cAAc3tB,EAAe,KAAM,SAhB1C,UAoBT,iCAAMytB,EAAgB5Y,KACtB,iCAAM6Y,EAAe7Y,OArBAqC,EAAQne,YAwB7B,eAAC60B,GAAD,UAAQ1W,KAGpB,OACI,gBAAC,GAAD,CACI8U,YAAa,SAACjY,GACO,IAAbA,EAAEsV,QACNhpB,EAAQC,cAHhB,UAKK+sB,EAAW,iBAAkB,CAC1B,CAAEG,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,SAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,GAAIC,QAAQ,GAASoB,UAAW,kBAEtDo3B,EAAW,kBAAmB,CAC3B,CAAEG,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,gBAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,aAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,aAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,gBAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,gBAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,aAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,GAAIC,QAAQ,GAASoB,UAAW,mBAEtDo3B,EAAW,iBAAkB,CAC1B,CAAEG,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAAQoB,UAAW,SACjD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAAQoB,UAAW,SACjD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAAQoB,UAAW,SACjD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAAQoB,UAAW,SACjD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAAQoB,UAAW,SACjD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAAQoB,UAAW,SACjD,CAAEu3B,OAAQ,CAAE54B,MAAO,GAAIC,QAAQ,GAAQoB,UAAW,WAErDo3B,EAAW,qBAAsB,CAC9B,CAAEG,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,gBAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,gBAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,GAAIC,QAAQ,GAASoB,UAAW,gBACnD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,gBAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,gBAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,EAAGC,QAAQ,GAASoB,UAAW,gBAClD,CAAEu3B,OAAQ,CAAE54B,MAAO,GAAIC,QAAQ,GAASoB,UAAW,sBAQ7Dqd,GAAQvC,IAAOtV,IAAV,+RAYLmyB,GAAQ7c,IAAOtV,IAAV,uIAOLoyB,GAAO9c,IAAOtV,IAAV,gLASJiZ,GAAU3D,YAAO8c,GAAP9c,CAAH,yRAaPkB,GAAQlB,YAAO8c,GAAP9c,CAAH,uZC1GI+c,GAtBG,WAAO,IAAD,EAEUpd,qBAAWC,IAAjC9Z,EAFY,EAEZA,MAAOqF,EAFK,EAELA,WAEf,OACI,eAAC,GAAD,UAGI,eAAC,GAAD,CACIoV,YAAa,CACT,CAAE5b,KAAM,OAAQ8b,KAAM,eAAC,KAAD,IAAgBG,SAAS,EAAMI,KAAM,0BAC3D,CAAErc,KAAM,UAAW8b,KAAM,eAAC,KAAD,IAAaG,SAAS,EAAMI,KAAM,eAAC,GAAD,KAC3D,CAAErc,KAAM,QAAS8b,KAAM,eAAC,KAAD,IAAoBG,SAAS,EAAMI,KAAM,eAAC,GAAD,KAChE,CAAErc,KAAM,SAAU8b,KAAM,eAAC,KAAD,IAAeG,SAAS,EAAMI,KAAM,eAAC,GAAD,MAEhEb,SAAUra,EAAMK,YAAYkL,iBAC5ByP,eAAgB,SAACjd,GAAD,OAAmBsH,EAAW8F,OAAOG,gBAAgBvN,SAS/E0e,GAAQvC,IAAOtV,IAAV,2W3DjCsB,M2DqCRsyB,GACCA,ICPXC,GAhCA,WAAO,IAAD,EAEatd,qBAAWC,IAA1BzU,GAFE,EAETrF,MAFS,EAEFqF,YAFE,EAIa+U,oBAAkB,GAJ/B,mBAIVyF,EAJU,KAIAuX,EAJA,OAKahd,qBALb,mBAKVid,EALU,KAKDC,EALC,KAoBjB,OAbA/c,qBAAU,WACN+c,EAAWnyB,YAAW,WAClBiyB,GAAU,KACX,QACJ,IACH7c,qBAAU,WACFsF,GACA1a,YAAW,WACPE,EAAW8F,OAAOC,uBACnB,OAER,CAACyU,IAGA,eAAC,GAAD,CAAOA,SAAUA,EAAUxE,QAAS,SAAC6B,GACjCsF,aAAa6U,GACbD,GAAU,IAFd,SAII,gBAAC,GAAD,WACI,sCADJ,gBASN3a,GAAQvC,IAAOtV,IAAV,+VAcI,SAAAxG,GAAK,OAAIA,EAAMyhB,SAAW,IAAM,OAKzC0X,GAAS/B,YAAH,mGASN5U,GAAS1G,IAAOtV,IAAV,kiBAcK2yB,I,kBCxDFC,GApBK,WAEhB,OACI,gBAAC,GAAD,WACI,gBAAC,GAAD,WACI,eAACC,GAAD,gBAAoB,eAACC,GAAD,yBAExB,gBAACC,GAAD,WACI,gBAACC,GAAD,WACI,+BAAK,eAAC,KAAD,MADT,qBAIA,eAACC,GAAD,UACI,+BAAK,eAAC,KAAD,eASnBpb,GAAQvC,IAAOtV,IAAV,4Q7DvBuB,I6DiC5B2W,GAASrB,IAAOtV,IAAV,6RAYN8yB,GAAUxd,IAAO4W,KAAV,mDAGP2G,GAAUvd,IAAO4W,KAAV,yEAOP6G,GAAQzd,IAAOtV,IAAV,yLASLkzB,GAAY5d,IAAOtV,IAAV,iKAQTgzB,GAAe1d,YAAO4d,GAAP5d,CAAH,ksBA0BZ2d,GAAY3d,YAAO4d,GAAP5d,CAAH,moBAEF6d,GACCA,ICtFDje,GAAgBke,wBAAc,IAsB5BC,GApBK,WAAO,IAAD,EAEIC,qBAAWn4B,EAAS+W,IAFxB,mBAEf9W,EAFe,KAERkL,EAFQ,KAGhB7F,EAAa,IAAI4F,EAAWjL,EAAOkL,GACzC,OACI,eAAC4O,GAAcqe,SAAf,CAAwB7qB,MAAO,CAAEtN,QAAOqF,cAAxC,SACI,uCACMrF,EAAMK,YAAYgL,SAAmB,eAAC,GAAD,IAAR,+BAC/B,gBAAC,GAAD,WACI,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,UACI,eAAC,GAAD,eAUlBoR,GAAQvC,IAAOtV,IAAV,wJAQLkoB,GAAW5S,IAAOtV,IAAV,kJ9D/CoB,I+DmBnBwzB,OAnBf,WAcE,OAZA7d,qBAAU,WAER8d,SAASC,cAAgB,WAAc,OAAO,GAE9CC,OAAOC,iBAAiB,WAAW,SAAUtb,GAEvC,CAAC,GAAI,GAAI,GAAI,GAAI,IAAI0I,QAAQ1I,EAAEub,UAAY,GAC7Cvb,EAAEwb,oBAEH,KAEF,IAED,eAAC,GAAD,KCLWC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhH,MAAK,YAAkD,IAA/CiH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,GAAD,MAEFhB,SAASiB,eAAe,SAM1BX,O","file":"static/js/main.e3e2b489.chunk.js","sourcesContent":["import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n    SET_INVALIDATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n        case ActionType.SET_INVALIDATE:\r\n            store.invalidate = payload.invalidate;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature } from \"../redux/store/scoreData\";\r\n\r\nexport const SCALE_INDEX = [0, 2, 4, 5, 7, 9, 11];\r\n\r\nexport type DegreeProps = {\r\n    index: number;\r\n    isFlat: boolean;\r\n};\r\n\r\nexport type ChordProps = {\r\n    root: DegreeProps;\r\n    symbolKey: SymbolKey;\r\n};\r\n\r\nexport const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n    null,\r\n    { index: 0, isFlat: false },\r\n    { index: 1, isFlat: false },\r\n    { index: 1, isFlat: true },\r\n    { index: 2, isFlat: false },\r\n    { index: 3, isFlat: false },\r\n    { index: 3, isFlat: true },\r\n    { index: 4, isFlat: false },\r\n    { index: 5, isFlat: false },\r\n    { index: 6, isFlat: false },\r\n    { index: 6, isFlat: true },\r\n    { index: 7, isFlat: false },\r\n    { index: 8, isFlat: false },\r\n    { index: 8, isFlat: true },\r\n    { index: 9, isFlat: false },\r\n    { index: 10, isFlat: false },\r\n    { index: 10, isFlat: true },\r\n    { index: 11, isFlat: false }\r\n];\r\n\r\n\r\nexport const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\n// export const DEGREE12_FLAT_LIST = [\r\n//     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n// ];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const getDegreeRoot = (props: DegreeProps) => {\r\n    const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n    return list[props.index];\r\n}\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\n\r\nexport const getChordRoot = (props: DegreeProps, baseKeyIndex: number) => {\r\n    const list = props.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n    return list[(baseKeyIndex + props.index) % 12];\r\n}\r\n\r\n\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\n// export const KEY12_MINOR_SCALE_LIST = [\r\n//     'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'Bbm', 'Bm'\r\n// ];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n];\r\n\r\nexport type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\nexport type SymbolKey =\r\n    'major' |\r\n    'minor' |\r\n    'suspend4th' |\r\n    'diminish' |\r\n    'augument' |\r\n    'major-maj7th' |\r\n    'major-min7th' |\r\n    'minor-7th' |\r\n    'minor-maj7th' |\r\n    'sus4-7th' |\r\n    'diminish-7th' |\r\n    'augument-7th' |\r\n    'major-add9th' |\r\n    'minor-add9th' |\r\n    'sixth-9th' |\r\n    'minor-minus5' |\r\n    'minor7-minus5' |\r\n    'major-maj9th' |\r\n    'major-9th'\r\n    ;\r\n\r\n\r\nexport type SymbolAttribute =\r\n    'triad' |\r\n    'seventh' |\r\n    'add9th'\r\n    ;\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey;\r\n    name: string;\r\n    base: null | SymbolKey;\r\n    attr?: SymbolAttribute;\r\n    structs: IntervalRelation[];\r\n}\r\n\r\nexport const SYMBOL_LIST: readonly SymbolParams[] = [\r\n    {\r\n        key: 'major', name: '',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor', name: 'm',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'suspend4th', name: 'sus4',\r\n        base: null,\r\n        structs: ['p1', 'p4', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish', name: 'dim',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish-7th', name: 'dim7',\r\n        base: 'diminish',\r\n        structs: ['p1', 'm3', 'd5', 'd7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'augument', name: 'aug',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'a5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'augument-7th', name: 'aug7',\r\n        base: 'augument',\r\n        structs: ['p1', 'M3', 'a5', 'm7']\r\n    },\r\n    {\r\n        key: 'minor-minus5', name: 'm(-5)',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor7-minus5', name: 'm7(-5)',\r\n        base: 'minor-minus5',\r\n        structs: ['p1', 'm3', 'd5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-maj7th', name: 'maj7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-min7th', name: '7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'minor-7th', name: 'm7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'sus4-7th', name: '7sus4',\r\n        base: 'suspend4th',\r\n        structs: ['p1', 'p4', 'p5']\r\n    },\r\n    {\r\n        key: 'minor-maj7th', name: 'mmaj7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-add9th', name: 'add9',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'minor-add9th', name: 'madd9',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-maj9th', name: 'maj9',\r\n        base: 'major-maj7th',\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-9th', name: '9',\r\n        base: 'major-min7th',\r\n        structs: ['p1', 'm3', 'p5']\r\n    },\r\n];\r\n\r\nexport type IntervalRelation =\r\n    'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n    'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n    'd7' | 'm7' | 'M7'\r\n    ;\r\n\r\nexport const IntervalRelationProps = {\r\n    'p1': 0,\r\n    'm2': 1,\r\n    'M2': 2,\r\n    'm3': 3,\r\n    'M3': 4,\r\n    'p4': 5,\r\n    'd5': 6,\r\n    'p5': 7,\r\n    'a5': 8,\r\n    'm6': 8,\r\n    'M6': 9,\r\n    'd7': 9,\r\n    'm7': 10,\r\n    'M7': 11\r\n}\r\n\r\nexport const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n    { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n];\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n];\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    'bⅢ', 'bⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    'bⅥ', 'bⅥM7',\r\n    'bⅦ', 'bⅦ7'\r\n];\r\n\r\nexport const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n    const ret = SYMBOL_LIST.find((symbol) => {\r\n        if (key === symbol.key) {\r\n            return symbol;\r\n        }\r\n    });\r\n    return ret != undefined ? ret : SYMBOL_LIST[0];\r\n}\r\n\r\nexport const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n    let list: SymbolKey[] = [];\r\n    SYMBOL_LIST.forEach((symbol) => {\r\n        if (key === symbol.base) {\r\n            list.push(symbol.key);\r\n        }\r\n    });\r\n    return list;\r\n}\r\n\r\nexport const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n    return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n}\r\n\r\nexport const getBeatRate = (beatSignature: BeatSignature): [number, number] => {\r\n\r\n    switch (beatSignature) {\r\n        case '4/4': return [4, 4];\r\n        case '3/4': return [3, 4];\r\n    }\r\n    return [0, 0];\r\n}","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/backingState\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, VoicingProps } from \"../redux/store/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { playPiano } from \"./melodyUtil\";\r\nimport { NOTES_1BAR_WIDTH } from \"./systemConst\";\r\nimport { IntervalRelationProps, KEY12_SHARP_LIST, SymbolParams } from \"./theoryUtils\";\r\n\r\n\r\n\r\nexport namespace BackingUtil {\r\n\r\n    // オクターブの数\r\n    export const OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    export const STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    export const CHANNEL_MAX = 12;\r\n\r\n    export const getInitialRecord = (divCount: number) => {\r\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    export const buildChannels = (table: boolean[][]): BackingState.ChannelParam[] => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    export const getVoicingListFromTable = (table: boolean[][]) => {\r\n\r\n        const voicingList: VoicingProps[] = [];\r\n        // ボイシングを設定\r\n        if (table != null) {\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        voicingList.push({ octave: i, struct: j });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return voicingList;\r\n    }\r\n\r\n    export const buildPatternProps = (editorPattern: BackingState.Pattern) => {\r\n        const channelSize = editorPattern.channels.length;\r\n        const layers: BackingLayerData[] = [];\r\n        editorPattern.layers.forEach(layer => {\r\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\r\n            const signals: BackingSignalProps[] = [];\r\n            layer.table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        signals.push({ x: j, y: i, status: cell });\r\n                    }\r\n                });\r\n            });\r\n            layers.push({ divs, notesList: signals });\r\n        });\r\n        return { channelSize, layers };\r\n    }\r\n\r\n    export const getChannels = (voicingStructs: BackingState.ChannelParam[], size: number) => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: BackingState.ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n\r\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\r\n\r\n        const layers: BackingState.Layer[] = [];\r\n        console.log(JSON.stringify(scoreLayers));\r\n        scoreLayers.forEach(scoreLayer => {\r\n            const table: (BackingState.NoteStatus | null)[][] = [];\r\n            for (let i = 0; i < channelSize; i++) {\r\n                const record: (BackingState.NoteStatus | null)[] = [];\r\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\r\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\r\n                    record.push(notes == null ? null : notes.status);\r\n                }\r\n                table.push(record);\r\n            }\r\n            layers.push({\r\n                noteDivList: scoreLayer.divs,\r\n                table,\r\n                velocityList: []\r\n            });\r\n        });\r\n        console.log(JSON.stringify(layers));\r\n        return layers;\r\n    }\r\n\r\n    export const getPitchListFromVoicing = (voicingList: VoicingProps[], rootIndex: number, symbol: SymbolParams) => {\r\n        return voicingList.map((item) => {\r\n            const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n            return 12 * item.octave + rootIndex + interval;\r\n        });\r\n    }\r\n\r\n    export const playBacking = (store: Store, reserveTasks: NodeJS.Timeout[], bpm: number, backing: ChordBacking, pitchIndexList: number[], chordTime: number) => {\r\n        if (backing.pattern == null) {\r\n            pitchIndexList.forEach((index, j) => {\r\n                const soundName = KEY12_SHARP_LIST[index % 12];\r\n                const octave = Math.floor(index / 12);\r\n                const soundFullName = soundName + octave;\r\n                playPiano(soundFullName, store, chordTime);\r\n            });\r\n        } else {\r\n            const pattern = backing.pattern;\r\n            pattern.layers.forEach(layer => {\r\n                const startTimeList: number[] = [];\r\n                let total = 0;\r\n                layer.divs.forEach(div => {\r\n                    startTimeList.push(60 / bpm * total);\r\n                    let normal = 4 / div.rate;\r\n                    if (div.isDot) normal *= 1.5;\r\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                    total += normal;\r\n                });\r\n                layer.notesList.forEach(notes => {\r\n\r\n                    const startTime = startTimeList[notes.x];\r\n                    const sustainTime = chordTime - startTime;\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            const index = pitchIndexList[notes.y];\r\n                            const soundName = KEY12_SHARP_LIST[index % 12];\r\n                            const octave = Math.floor(index / 12);\r\n                            const soundFullName = soundName + octave;\r\n                            playPiano(soundFullName, store, sustainTime);\r\n                        }, startTime * 1000)\r\n                    );\r\n                });\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    export const stopPreview = (store: Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        store.instruments.piano?.stop();\r\n        state.isPreview = false;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    export const getLimitLen = (chordInfo: BackingState.ChordInfo) => {\r\n        const minute = chordInfo.minute;\r\n        return (chordInfo.beatLen + minute.head + minute.tail);\r\n    }\r\n\r\n    export const getTotalLenFromDivs = (divs: BackingState.NoteDiv[]) => {\r\n        return divs.reduce((prev, cur) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            return prev + len * 4;\r\n        }, 0);\r\n    }\r\n\r\n    export const checkError = (chordInfo: BackingState.ChordInfo, voicingList: VoicingProps[], pattern: null | BackingState.Pattern): boolean => {\r\n        let hasError = false;\r\n        if (pattern != null) {\r\n\r\n            // 選択しているボイシングがチャンネル数に満たない場合\r\n            if (voicingList.length < pattern.channels.length) hasError = true;\r\n\r\n            const limitLen = getLimitLen(chordInfo);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getTotalLenFromDivs(layer.noteDivList);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n\r\n            // 裏レイヤーのノーツと重なっている場合\r\n            pattern.layers[0].table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if(cell != null) {\r\n                        if(checkOverlapBackLayer(pattern.layers, 0, i, j)) {\r\n                            hasError = true;\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkOverlapBackLayer = (layers: BackingState.Layer[], layerIndex: number, channelIndex: number, divIndex: number): boolean => {\r\n        const baseLayer = layers[layerIndex];\r\n        const backLayer = layers[layerIndex === 0 ? 1 : 0];\r\n        const [left, right] = getDivRange(baseLayer.noteDivList, divIndex);\r\n        console.log(`left=${left}, right=${right}`);\r\n        let isOverlap = false;\r\n        for (let i = 0; i < backLayer.noteDivList.length; i++) {\r\n            if(backLayer.table[channelIndex][i] != null) {\r\n                const [backLeft, backRight] = getDivRange(backLayer.noteDivList, i);\r\n                if(right > backLeft && left < backRight) {\r\n                    isOverlap = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return isOverlap;\r\n    }\r\n\r\n    export const getDivRange = (divs: BackingState.NoteDiv[], divIndex: number): [number, number] => {\r\n        let [left, right] = [0, 0];\r\n        \r\n        divs.slice(0, divIndex + 1).forEach((cur, i) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            left = right;\r\n            right += len * 4;\r\n        });\r\n        return [left, right];\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SymbolAttribute } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null\r\n    };\r\n    return backing;\r\n}","import { isatty } from \"tty\";\r\nimport { MelodyState } from \"../redux/store/melodyState\";\r\nimport { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { ScoreState } from \"../redux/store/scoreState\";\r\nimport ElementDetailChord from \"../contents/score/edit/harmonize/elements/form/elementDetailChord\";\r\nimport BackingUtil from \"./backingUtil\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += notes.len4;\r\n    total += notes.len8 / 2;\r\n    total += notes.len16 / 4;\r\n    total += notes.len4div3 / 3;\r\n    total += notes.len8div3 / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    return getSortetdNotesLen({\r\n        len4: notes1.len4 + notes2.len4,\r\n        len8: notes1.len8 + notes2.len8,\r\n        len16: notes1.len16 + notes2.len16,\r\n        len4div3: notes1.len4div3 + notes2.len4div3,\r\n        len8div3: notes1.len8div3 + notes2.len8div3\r\n    });\r\n}\r\n\r\nexport const getSortetdNotesLen = (base: MelodyLength) => {\r\n\r\n    const len8div3Cnt3 = Math.floor(base.len8div3 / 3);\r\n    base.len8div3 -= len8div3Cnt3 * 3;\r\n    base.len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(base.len8div3 / 2);\r\n    base.len8div3 -= len8div3Cnt2 * 2;\r\n    base.len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(base.len4div3 / 3);\r\n    base.len4div3 -= len4div3Cnt3 * 3;\r\n    base.len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(base.len16 / 2);\r\n    base.len16 -= len16Cnt2 * 2;\r\n    base.len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(base.len8 / 2);\r\n    base.len8 -= len8Cnt2 * 2;\r\n    base.len4 += len8Cnt2;\r\n\r\n    return base;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n    return getSortetdNotesLen({\r\n        len4, len8, len16, len4div3, len8div3\r\n    });\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if (notes.len8div3 > 0) return 6;\r\n    else if (notes.len16 > 0) return 4;\r\n    else if (notes.len4div3 > 0) return 3;\r\n    else if (notes.len8 > 0) return 2;\r\n    else if (notes.len4 > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playPiano = (soundFullName: string, store: Store, duration: number) => {\r\n    const instrument = store.instruments.piano;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, { duration });\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.piano;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nexport const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const state = store.melodyState;\r\n    const data = store.scoreData;\r\n    const reserveTasks: NodeJS.Timeout[] = [];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    const init = data.chordList[0].detail as DetailInit;\r\n    const bpm = init.bpm;\r\n    state.lastFocus = state.focusIndex;\r\n    state.isPreview = true;\r\n    let firstTime = -1;\r\n    for (let i = state.focusIndex; i < data.notesList.length; i++) {\r\n        const notes = data.notesList[i];\r\n        const pos = getNormalizeLenFromNotes(notes.pos);\r\n        const len = getNormalizeLenFromNotes(notes.len);\r\n        const pitch = notes.pitchIndex;\r\n        const time = 60 / bpm * pos;\r\n\r\n        // 開始時のノーツの位置（時間）を保存する。\r\n        if (firstTime === -1) {\r\n            firstTime = time;\r\n        }\r\n\r\n        reserveTasks.push(\r\n            setTimeout(() => {\r\n                state.focusIndex = i;\r\n                state.distIndex = state.focusIndex;\r\n                // state.mouseState.curChord = searchCurChord(store, i);\r\n                dispatcher.tune.setState(state);\r\n                dispatcher.tune.adjustScrollX();\r\n                if (instrument != null) {\r\n                    const keyIndex = getKeyIndexFromPitcher(pitch);\r\n                    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n                    const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n                    instrument.stop();\r\n                    instrument.play(soundName + octave, 0, { duration: 60 / bpm * len });\r\n                }\r\n            }, (time - firstTime) * 1000)\r\n        );\r\n\r\n        if (i === data.notesList.length - 1) {\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    stopPreview(store, dispatcher, reserveTasks);\r\n                }, (time - firstTime + 60 / bpm * len) * 1000)\r\n            );\r\n        }\r\n    }\r\n\r\n    // ハーモニーを再生\r\n    if (!state.isSolo) {\r\n        previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n    }\r\n\r\n\r\n    dispatcher.system.setReserveTasks(reserveTasks);\r\n    dispatcher.tune.setState(state);\r\n}\r\n\r\nexport const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n    const state = store.melodyState;\r\n    state.isPreview = false;\r\n    state.focusIndex = state.lastFocus;\r\n    state.distIndex = state.focusIndex;\r\n    reserveTasks.forEach(id => clearInterval(id));\r\n    store.instruments.sampler.releaseAll();\r\n    dispatcher.tune.setState(state);\r\n    dispatcher.tune.adjustScrollX();\r\n}\r\n\r\nexport const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n    const state = store.scoreState;\r\n    const sampler = store.instruments.sampler;\r\n    const cacheList = state.elementCacheList;\r\n    const chordList = store.scoreData.chordList;\r\n    // const reserveTasks = store.reserveTasks;\r\n    const init = chordList[0].detail as DetailInit;\r\n    const adjsut = 0;\r\n    for (let i = 3; i < chordList.length; i++) {\r\n        const cache = cacheList[i];\r\n        const element = chordList[i];\r\n        if (element.type === 'chord') {\r\n            if (cache.pastSecond < start) continue;\r\n\r\n            const detail = element.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n            const chordTime = 60 / init.bpm * len;\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // sampler.releaseAll();\r\n                    // stopPiano(store);\r\n\r\n                    const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                    const div = pickingDelay / pitchList.length;\r\n\r\n                    // pitchList.forEach((index, j) => {\r\n                    //     const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //     const octave = Math.floor(index / 12);\r\n                    //     const soundFullName = soundName + octave;\r\n                    //     playPiano(soundFullName, store, chordTime);\r\n                    // });\r\n\r\n                    BackingUtil.playBacking(store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n\r\n                    store.melodyState.mouseState.curChord = element;\r\n                    dispatcher.tune.setState(store.melodyState);\r\n                    //     stopPiano(store);\r\n                    //     channelList.forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 4 + div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.reverse().forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 8 * 3 + div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.reverse().forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 8 * 5 +  div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 8 * 6 +  div * j)\r\n                    //         );\r\n                    //     });\r\n                }, cache.pastSecond - start - adjsut)\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const init = chordList[0].detail as DetailInit;\r\n    const curChord = state.mouseState.curChord;\r\n    const reserveTasks = store.reserveTasks;\r\n    if (curChord != null) {\r\n\r\n        const detail = curChord.detail as DetailChord;\r\n\r\n        if (detail.root == null) return;\r\n\r\n        const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n        const symbol = getSymbolFromKey(detail.symbolKey);\r\n        const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n        const backing = detail.backing;\r\n        const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n        const chordTime = 60 / init.bpm * len;\r\n\r\n        BackingUtil.playBacking(store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n\r\n        reserveTasks.push(setTimeout(() => {\r\n            state.isPreview = false;\r\n            dispatcher.tune.setState(state);\r\n        }, chordTime * 1000));\r\n        state.isPreview = true;\r\n        dispatcher.tune.setState(state);\r\n\r\n    }\r\n}","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 60;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getChordRoot, getSymbolFromKey, SCALE_INDEX, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailChange, DetailChord, DetailInit, DetailSection, ScoreData, TuneNotes, VoicingProps } from \"../store/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont, previewStart } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\nimport { Invalidate } from \"../store/invalidate\";\r\nimport BackingState from \"../store/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        },\r\n\r\n        setInvalidate: (invalidate: Invalidate) => {\r\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        setPiano: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, piano: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            // alert(`totalSection=${sectionCacheList.length}, curSection=${curSectionIndex}, focus=${state.focusIndex}`);\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -0.5 && target <= 0.5) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: state.initialBeat,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        addChangeElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'change', detail: {\r\n                    changeType: null,\r\n                    modulateRelation: null,\r\n                    domminantValue: 0,\r\n                    keyAdjust: 0,\r\n                    tempoRelation: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbsolute: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailChange\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            const element = this.store.scoreData.chordList[state.focusIndex];\r\n            const sectionNo = this.store.scoreState.elementCacheList[state.focusIndex].sectionNo;\r\n            if (element.type === 'section' && sectionNo === 0) {\r\n                return;\r\n            }\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // reffer.style.width = '300px';\r\n            wrapRef.style.opacity = '0';\r\n            wrapRef.style.overflow = 'hidden';\r\n            // wrapRef.style.padding = '0';\r\n            wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            setTimeout(() => {\r\n                wrapRef.style.width = '0';\r\n            }, 1);\r\n            setTimeout(() => {\r\n                wrapRef.style.opacity = '';\r\n                wrapRef.style.width = '';\r\n                wrapRef.style.overflow = '';\r\n                // wrapRef.style.padding = '';\r\n                const data = this.store.scoreData;\r\n                data.chordList.splice(state.focusIndex, 1);\r\n                this.score.setScoreData(data);\r\n                state.focusIndex--;\r\n                this.score.setScoreState(state);\r\n                // setTimeout(() => {\r\n                //     reffer.style.opacity = '';\r\n                //     reffer.style.width = '';\r\n                //     const data = this.store.scoreData;\r\n                //     data.chordList.splice(state.focusIndex, 1);\r\n                //     this.score.setScoreData(data);\r\n                // }, 200);\r\n            }, 200);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (scaleIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const chord = DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n            detail.root = { ...chord.root };\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        cloneBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\r\n            this.score.setScoreState(state);\r\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n        },\r\n\r\n        pastBacking: () => {\r\n            const state = this.store.scoreState;\r\n            if (state.cloneBacking != null) {\r\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n                const data = this.store.scoreData;\r\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public tune = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        allSelect: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.distIndex = notesList.length - 1;\r\n                this.tune.setState(state);\r\n            }\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        incrementCurNoteKey: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n\r\n            const focusIndex = this.store.melodyState.focusIndex;\r\n            if (focusIndex === -1) return;\r\n\r\n            const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n            const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            const cur = notesList[focusIndex];\r\n            const prevPitchIndex = cur.pitchIndex;\r\n            const interval = mode !== 'octave' ? 1 : 12;\r\n            let tempPitchIndex = cur.pitchIndex;\r\n\r\n            while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                if (mode !== 'scale' ||\r\n                    (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                ) {\r\n                    cur.pitchIndex = tempPitchIndex;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // 値が変わっていた場合のみ処理する\r\n            if (prevPitchIndex !== cur.pitchIndex) {\r\n                playSoundfont(cur.pitchIndex, this.store);\r\n                // 画面更新のためにインスタンスを複製する\r\n                this.tune.setNotesList(notesList.slice());\r\n\r\n                this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.distIndex = state.focusIndex;\r\n                    this.tune.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.distIndex = state.focusIndex;\r\n                    this.tune.setState(state);\r\n                }\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n            this.tune.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        moveDistFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.distIndex > 0 : state.distIndex < notesList.length - 1) {\r\n                state.distIndex += (isNext ? 1 : -1);\r\n                this.tune.setState(state);\r\n            }\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.mouseState.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(state.focusIndex + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.distIndex = state.focusIndex;\r\n                this.tune.setState(state);\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [start, end] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const delNum = end - start + 1;\r\n            notesList.splice(start, delNum);\r\n            this.tune.setNotesList(notesList);\r\n            state.focusIndex = start - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const [start, end] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            state.focusIndex = (!isTail ? start : end);\r\n            state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n            this.tune.adjustScrollX();\r\n            this.tune.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            const distIndex = state.distIndex;\r\n            const focusIndex = state.focusIndex;\r\n\r\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\r\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n\r\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\r\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\r\n\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 移動可能かを判定\r\n            if (condition) {\r\n                for (let i = start; i <= end; i++) {\r\n                    const cur = notesList[i];\r\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                }\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        firstNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.distIndex = state.focusIndex;\r\n                this.tune.setState(state);\r\n                this.tune.adjustScrollX();\r\n                // this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.distIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            previewStart(this.store, this);\r\n        },\r\n\r\n        copyNotes: () => {\r\n\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const num = focusEnd - focusStart + 1;\r\n\r\n            const cloneNotesList: TuneNotes[] = [];\r\n            const base = notesList[focusStart].pos;\r\n            const baseUnit = getMinimumLenUnit(base);\r\n            for (let i = 0; i < num; i++) {\r\n                const notes = notesList[i + focusStart];\r\n                const unit = getMinimumLenUnit(notes.pos);\r\n                const useUnit = baseUnit > unit ? baseUnit : unit;\r\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\r\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\r\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\r\n                console.log(JSON.stringify(pos));\r\n                cloneNotesList.push({\r\n                    pitchIndex: notes.pitchIndex,\r\n                    pos,\r\n                    len: { ...notes.len }\r\n                });\r\n            }\r\n            state.cloneNotesList = cloneNotesList;\r\n            // notesList.splice(state.focusIndex, num);\r\n            // this.tune.setNotesList(notesList);\r\n            // state.focusIndex = focusStart - 1;\r\n            // state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n            // alert(JSON.stringify(state.cloneNotesList));\r\n        },\r\n\r\n        pasteNotes: () => {\r\n            // alert('pasteNotes');\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const pastList: TuneNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\r\n            pastList.forEach(notes => {\r\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\r\n            });\r\n            // ペーストするノーツの最後（右端）の要素\r\n            const pastLast = pastList[pastList.length - 1];\r\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList = notesList.concat(pastList);\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                data.notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                this.score.setScoreData(data);\r\n\r\n                state.focusIndex++;\r\n                state.distIndex = state.focusIndex + pastList.length - 1;\r\n                this.tune.setState(state);\r\n            }\r\n\r\n            // this.tune.adjustScrollX();\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const init = data.chordList[0].detail as DetailInit;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n\r\n            let pattern: BackingState.Pattern | null = null;\r\n            if (detail.backing.pattern != null) {\r\n                const patternProps = detail.backing.pattern;\r\n                const voicingStructs = BackingUtil.buildChannels(voicingTable);\r\n                const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\r\n                const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);;\r\n                pattern = {\r\n                    channelIndex: -1,\r\n                    lenIndex: 0,\r\n                    isUsePedal: false,\r\n                    layerIndex: 0,\r\n                    channels,\r\n                    layers\r\n                };\r\n            }\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    root: (detail.root as DegreeProps),\r\n                    on: (detail.on),\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    symbolKey: detail.symbolKey,\r\n                    init: { ...init }\r\n                },\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false,\r\n                hasError: false\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setState: (backingState: BackingState.Editor) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingState.Layer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingState.Layer;\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const isExist = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = isExist != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        // エディタで設定したバッキング情報を譜面に反映\r\n        mappingEditorToScore: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n\r\n            detail.backing = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern)\r\n            };\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        // getChannels: (table: boolean[][]): ChannelParam[] => {\r\n        //     const channels: ChannelParam[] = [];\r\n        //     for (let i = 0; i < table.length; i++) {\r\n        //         for (let j = 0; j < table[i].length; j++) {\r\n        //             if (table[i][j]) {\r\n        //                 channels.push({ octave: i, structIndex: j });\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     if (channels.length === 0) {\r\n        //         channels.push({ octave: -1, structIndex: 0 });\r\n        //     }\r\n        //     return channels;\r\n        // },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const newLen: BackingState.NoteDiv = { rate: lenList[pattern.lenIndex].rate, div3: 0, isDot: false };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.isDot = !cur.isDot;\r\n            this.backing.setState(state);\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: BackingState.NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            // 2つ以上要素がないと消せない\r\n            if (layer.noteDivList.length >= 2) {\r\n                layer.table.forEach((column) => {\r\n                    column.splice(pattern.lenIndex, 1);\r\n                });\r\n                layer.noteDivList.splice(pattern.lenIndex, 1);\r\n                // for(let i = 0; i < pattern.channels.length; i ++) {\r\n                //     layer.table[i].splice(pattern.lenIndex, 1);\r\n                // }\r\n                if (pattern.lenIndex > 0) {\r\n                    pattern.lenIndex--;\r\n                }\r\n                this.backing.setState(state);\r\n            }\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n        changeLayer: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        testBacking: () => {\r\n            const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const reserveTasks = this.store.reserveTasks;\r\n            const chordInfo = editor.chordInfo;\r\n\r\n            const rootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n            const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\r\n            const chordTime = 60 / init.bpm * len;\r\n            const backing: ChordBacking = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern)\r\n            };\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n            BackingUtil.playBacking(this.store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                editor.isPreview = false;\r\n                this.backing.setState(editor);\r\n            }, chordTime * 1000));\r\n\r\n            editor.isPreview = true;\r\n            this.backing.setState(editor);\r\n        },\r\n\r\n        updateErrorState: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const voicingList = BackingUtil.getVoicingListFromTable(editor.voicingTable);\r\n            editor.hasError = BackingUtil.checkError(editor.chordInfo, voicingList, editor.pattern);\r\n            this.backing.setState(editor);\r\n        }\r\n    }\r\n}","\r\n\r\nnamespace DataHistory {\r\n\r\n    export type Manger = {\r\n        cur: number;\r\n        list: string[];\r\n    }\r\n\r\n    export const getInitialData = () => {\r\n        return {\r\n            cur: -1,\r\n            list: []\r\n        };\r\n    }\r\n\r\n    export const backup = (manager: Manger, data: string) => {\r\n        if (manager.cur === -1) {\r\n            manager.list.push(data);\r\n        } else {\r\n            // manager.list.splice(cur,);\r\n            manager.cur = -1;\r\n        }\r\n    }\r\n\r\n    export const undo = (manager: Manger): string => {\r\n        if (manager.cur === -1) {\r\n            manager.cur = manager.list.length - 1;\r\n        } else {\r\n            if(manager.cur > 0) {\r\n                manager.cur --;\r\n            }\r\n        }\r\n        return manager.list[manager.cur];\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./scoreData\"\r\nimport { ScoreState } from \"./scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { Invalidate } from \"./invalidate\"\r\nimport DataHistory from \"./state/dataHistory\"\r\nimport BackingState from \"./backingState\"\r\n\r\n\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState.Editor;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n\r\n    invalidate: Invalidate;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        dialogMode: 'none'\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        isTune: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        keySwitch: {\r\n            editMode: false,\r\n            symbolMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneBacking: null\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 4,\r\n        beatWidth: 120,\r\n        mouseState: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 5\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false,\r\n            control: false,\r\n        },\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneNotesList: [],\r\n\r\n        dataHistory: DataHistory.getInitialData()\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        sampler: getDefaultSampler(),\r\n        piano: null,\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: [],\r\n    invalidate: {\r\n        harmoniizeInvalidate: {},\r\n        harmonize: null,\r\n        melody: null\r\n    },\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note : {\r\n        prevElement: string;\r\n        nextElement: string;\r\n        prevSection: string;\r\n        nextSection: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        editMode: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        symbolMode: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = ()=> {\r\n    return {\r\n        note: {\r\n            prevElement: 'ArrowLeft',\r\n            nextElement: 'ArrowRight',\r\n            prevSection: 'ArrowUp',\r\n            nextSection: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'f',\r\n            deleteCur: 'Delete',\r\n            editMode: 'Shift',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n            symbolMode: 'c',\r\n        }\r\n    } as KeyConfig;\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SysModalDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const mode = store.systemState.dialogMode;\r\n    const isDisplay = mode !== 'none';\r\n\r\n    return (\r\n        <_Blind isDisplay={isDisplay}>\r\n            <_Frame>\r\n\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default SysModalDialog;\r\n\r\nconst _Blind = styled.div<{\r\n    isDisplay: boolean;\r\n}>`\r\n    display: ${props => props.isDisplay ? 'block' : 'none'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000000d8;\r\n    z-index: 10;\r\n`;\r\nconst _Frame = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 500px;\r\n    height: 400px;\r\n    background-color: #464646cc;\r\n    border: 1px solid #dadada;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;","import { Dispatcher } from \"../../../redux/dispatcher/dispatcher\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData, VoicingProps } from \"../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../redux/store/store\";\r\nimport { getDefaultBacking } from \"../../../utils/instrumentsUtil\";\r\nimport { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SymbolKey } from \"../../../utils/theoryUtils\";\r\n\r\n\r\nclass ScoreBuilder {\r\n\r\n    private scoreData: ScoreData\r\n\r\n    private curIndex: number;\r\n\r\n    constructor(init: DetailInit) {\r\n        this.scoreData = {\r\n            chordList: [\r\n                { type: 'init', detail: init },\r\n                { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n            ],\r\n            notesList: []\r\n        };\r\n\r\n        this.curIndex = 3;\r\n    }\r\n\r\n    public addChord = (beatLen: number, root: DegreeProps, symbolKey: SymbolKey) => {\r\n\r\n        const symbol = getSymbolFromKey(symbolKey);\r\n        const backing: ChordBacking = symbol.attr == undefined ? { voicingList: [], pattern: null } : getDefaultBacking(symbol.attr);\r\n        this.scoreData.chordList.splice(this.curIndex, 0, {\r\n            type: 'chord', detail: {\r\n                beatLen, minute: { head: 0, tail: 0 }, root, on: null, symbolKey,\r\n                backing\r\n            } as DetailChord\r\n        });\r\n        this.curIndex++;\r\n    }\r\n\r\n    public addChordDiatonic = (beatLen: number, scaleIndex: number) => {\r\n        const chord = DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        this.addChord(beatLen, chord.root, chord.symbolKey);\r\n    }\r\n\r\n    public getScoreData = () => { return this.scoreData; }\r\n}\r\n\r\nexport default ScoreBuilder;","import { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [source, setSource] = useState<string>('');\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Left>\r\n                <_Link onClick={() => {\r\n\r\n                    const data: ScoreData = {\r\n                        chordList: [\r\n                            { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' } as DetailInit },\r\n                            { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                            { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                            {\r\n                                type: 'chord', detail: {\r\n                                    beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                    backing: {\r\n                                        voicingList: [],\r\n                                        pattern: null\r\n                                    }\r\n                                } as DetailChord\r\n                            },\r\n                            { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                        ],\r\n                        notesList: []\r\n                    };\r\n                    setSource(JSON.stringify(data));\r\n                }} >Create an empty score.</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    setSource(JSON.stringify(builder.getScoreData()));\r\n                }} >Ⅰ→Ⅴ→Ⅵ→Ⅲm→Ⅳ→Ⅰ→Ⅱm→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    setSource(JSON.stringify(builder.getScoreData()));\r\n                }} >Ⅵm→Ⅳ→Ⅴ→Ⅰ→Ⅵm→Ⅳ→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' });\r\n                    builder.addChordDiatonic(4, 3);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChordDiatonic(4, 2);\r\n                    builder.addChordDiatonic(4, 5);\r\n                    builder.addChordDiatonic(4, 1);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChord(4, { index: 0, isFlat: false }, 'suspend4th');\r\n                    builder.addChordDiatonic(4, 0);\r\n                    setSource(JSON.stringify(builder.getScoreData()));\r\n                }} >Ⅳ→Ⅴ→Ⅲm→Ⅵm→Ⅱm→Ⅴ→Ⅰsus4→Ⅰ</_Link>\r\n            </_Left>\r\n            <_Right>\r\n                <_Source value={source} onChange={e => setSource(e.target.value)} />\r\n                <_ButtonsDiv>\r\n                    <_Button onClick={() => {\r\n                        setSource(JSON.stringify(store.scoreData));\r\n                    }}>Reload</_Button>\r\n                    <_Button onClick={() => {\r\n                        const data = JSON.parse(source);\r\n                        dispatcher.score.setScoreData(data);\r\n                        store.scoreState.focusIndex = 2;\r\n                        dispatcher.score.setScoreState({ ...store.scoreState });\r\n\r\n                        dispatcher.score.setScoreTabIndex(1);\r\n                    }}>Apply</_Button>\r\n                </_ButtonsDiv>\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #888999;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\nconst _Source = styled.textarea`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    height: calc(100% - 44px);\r\n    /* background-color: #7e7e7e; */\r\n    text-align: left;\r\n    font-size: 20px;\r\n    resize: none;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #5f5f5f;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    width: 100px;\r\n    background-color: #afafaf;\r\n    border: 1px solid #4d4d4d;\r\n    color: #292929;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    &:hover {\r\n        background-color: #c4c4c4;\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/scoreState\";\r\nimport { getSymbolDerives as getSymbolDerives, getSymbolFromKey, SymbolKey, SymbolParams, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = getSymbolFromKey(detail.symbolKey) as SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: SymbolKey[] = [];\r\n        const parentLine: SymbolKey[] = [];\r\n        const childrenLine: SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = getSymbolDerives(baseSymbol.key);\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = getSymbolDerives(curSymbol.key);\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../../redux/store/scoreState\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        bar = cache.bar + 1;\r\n    }\r\n    const isError = bar !== -1 && cache.beat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n    }\r\n\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.beat === 0 ? <>&nbsp;</> : cache.beat}\r\n                        {/* {` (+0.25)`} */}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : ` (${cache.minute})`}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailChange } from \"../../../../../../redux/store/scoreData\";\r\n\r\nconst ElementDetailChange = (props: {\r\n    detail: DetailChange;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                Modulation\r\n            </_Type>\r\n            <_Detail>\r\n                Domm+1\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { DIATONIC_MAJOR_SCALE_DEGREE_NAMES, getChordRoot, getDegreeRoot, getSymbolFromKey, ScaleRelation } from \"../../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 0.5 | 0.25;\r\n\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isCurrent: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const minute = props.detail.minute;\r\n\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() =>\r\n        <_Wrap>\r\n            <_Degree\r\n                isSwitch={keySwitch.editMode && props.isCurrent}\r\n                scaleRelation={degreeRoot != null && DIATONIC_MAJOR_SCALE_DEGREE_NAMES.includes(degreeRoot + symbolName) ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={keySwitch.editMode && props.isCurrent}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n            {/* <_Backing></_Backing> */}\r\n        </_Wrap>\r\n        , [\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            state.keySwitch.editMode,\r\n            cache.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 28px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 20px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #422e3099;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 0.5 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 0.25 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Backing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 2px;\r\n    background-color: #00a048;\r\n`;","import styled from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    const jsxList: JSX.Element[] = [];\r\n    jsxList.push(<_Border key={0} />);\r\n    jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    /* border: 1px solid #00000083; */\r\n    background-color: #c2c2c237;\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n    height: 100%;\r\n    background-color: #d1d1d1;\r\n    vertical-align: middle;\r\n`;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #1b003d6f;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST } from \"../../../../../../utils/theoryUtils\";\r\n\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.timeSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst ElementDetailSection = (props: {\r\n    index: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>{curSection.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChange = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>Key</_Type>\r\n            <_Detail>C→Am</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { ElementType, useContext, useEffect, useRef } from \"react\";\r\nimport { CgDetailsLess } from \"react-icons/cg\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TypeElement } from \"typescript\";\r\nimport { DetailChange, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_SHARP_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SymbolEditor from \"../input/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailChange from \"./form/elementDetailChange\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcChange from \"./calc/calcChange\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = store.scoreState;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        dispatcher.score.setScoreState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    // if (props.index > state.elementCacheList.length - 1) {\r\n    //     return <></>;\r\n    // }\r\n\r\n    const isFocus = state.focusIndex === props.index;\r\n    const isSameSection = state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n    return (\r\n        <_Wrap\r\n            ref={wrapRef}\r\n            isSelectable={element.type !== 'fixed'}\r\n            isActive={isFocus}\r\n            isInactive={!isSameSection}\r\n            isChord={element.type === 'chord'}\r\n        >\r\n            <_Head>\r\n                {element.type !== 'chord' ? <></> : (\r\n                    <_CurKey>{KEY12_SHARP_LIST[cache.keyIndex]}</_CurKey>\r\n                )}\r\n            </_Head>\r\n\r\n            {/* 要素の入力フォーム */}\r\n            {['init', 'chord', 'section', 'change'].includes(element.type) ? (\r\n                <_Form\r\n                    ref={bodyRef}\r\n                    isActive={isFocus}\r\n                    isInactive={!isSameSection}\r\n                    type={element.type}\r\n                    isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                    onClick={() => {\r\n                        if (element.type === 'fixed') {\r\n                            return;\r\n                        }\r\n                        state.focusIndex = props.index;\r\n                        dispatcher.score.setScoreState(state);\r\n                    }}\r\n                >{(() => {\r\n                    switch (element.type) {\r\n                        case 'init': {\r\n                            const detail = element.detail as DetailInit;\r\n                            return (<ElementDetailInit detail={detail} />);\r\n                        }\r\n                        case 'section': {\r\n                            const detail = element.detail as DetailSection;\r\n                            return (<ElementDetailSection index={props.index} />);\r\n                        }\r\n                        case 'chord': {\r\n                            const detail = element.detail as DetailChord;\r\n                            return (<ElementDetailChord detail={detail} isCurrent={isFocus} />);\r\n                        }\r\n                        case 'change': {\r\n                            const detail = element.detail as DetailChange;\r\n                            return (<ElementDetailChange detail={detail} />);\r\n                        }\r\n                    }\r\n                })()}\r\n                </_Form>\r\n            ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n            {/* 入力フォーム下部の計算によって出力される情報 */}\r\n            {\r\n                element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                    element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                        element.type === 'change' ? (<CalcChange index={props.index} />) :\r\n                            <></>\r\n            }\r\n            <>{!(isCurrent && chordDetail != null && chordDetail.root != null && store.scoreState.keySwitch.symbolMode) ? '' :\r\n                <SymbolEditor />\r\n            }</>\r\n            {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                <_Operations>\r\n                    <_OperationItem>-</_OperationItem>\r\n                    <_OperationItem onClick={() => dispatcher.score.addChordElement()}>+</_OperationItem>\r\n                </_Operations>\r\n            )}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    border: solid 1px #00000049;\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #ff000084;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #006823a7;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'change' ? '' : css`\r\n        border: solid 1px #1800a1a7;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 6px;\r\n    ${props => props.isInactive ? '' : css`\r\n        background-color: #ebebeb84;\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #d85cce5a;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isChord: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isChord ? '' : css`\r\n        background-color: #e4ecd039;\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #fffb0018;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\nimport SymbolEditor from \"./input/symbolEditor\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const num = store.scoreData.chordList.length;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (store.scoreState.elementCacheList.length === num) {\r\n        for (let i = 0; i < num; i++) {\r\n            list.push(\r\n                <ScoreElement key={i} index={i} />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Frame> */}\r\n            <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note>\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #f1f1f1;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, DetailInit } from \"../redux/store/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport { playPiano } from \"./melodyUtil\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"./theoryUtils\";\r\n\r\nnamespace HarmonizeUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n        const state = store.scoreState;\r\n        const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        const reserveTasks = store.reserveTasks;\r\n        let firstTime = -1;\r\n        const update = () => {\r\n            // if (store.invalidate.harmonize) {\r\n            //     store.invalidate.harmonize();\r\n            // }\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n        // const reserveTasks = store.reserveTasks;\r\n        const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = state.focusIndex; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                // 開始時のノーツの位置（時間）を保存する。\r\n                if (firstTime === -1) {\r\n                    firstTime = cache.pastSecond;\r\n                }\r\n\r\n\r\n                if (detail.root == null) continue;\r\n\r\n                const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n                const symbol = getSymbolFromKey(detail.symbolKey);\r\n                const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n\r\n                const chordTime = 60 / init.bpm * len;\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // sampler.releaseAll();\r\n                        // stopPiano(store);\r\n                        // store.melodyState.mouseState.curChord = element;\r\n                        // dispatcher.tune.setState(store.melodyState);\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n                        state.focusIndex = i;\r\n                        update();\r\n\r\n                    }, cache.pastSecond - firstTime - adjsut)\r\n                );\r\n            }\r\n\r\n            if (i === chordList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (cache.pastSecond - firstTime - adjsut))\r\n                );\r\n            }\r\n        }\r\n        state.isPreview = true;\r\n        update();\r\n    }\r\n\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        state.isPreview = false;\r\n        // store.instruments.sampler.releaseAll();\r\n        // state.focusIndex = state.lastFocus;\r\n        reserveTasks.forEach(id => clearTimeout(id));\r\n        dispatcher.system.setReserveTasks([]);\r\n        dispatcher.score.setScoreState(state);\r\n\r\n        store.instruments.piano?.stop();\r\n    }\r\n\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.scoreState;\r\n        const reserveTasks = store.reserveTasks;\r\n        const chordList = store.scoreData.chordList;\r\n        const init = chordList[0].detail as DetailInit;\r\n        const curChord = store.scoreData.chordList[state.focusIndex];\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, rootIndex, symbol);\r\n            const chordTime = 60 / init.bpm * len;\r\n\r\n            BackingUtil.playBacking(store, store.reserveTasks, init.bpm, backing, pitchList, chordTime);\r\n            \r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.score.setScoreState(state);\r\n            }, chordTime * 1000));\r\n            state.isPreview = true;\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n    }\r\n}\r\n\r\nexport default HarmonizeUtil;\r\n","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { backingEditorInput } from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    // プレビュー再生時\r\n    if (state.isPreview) {\r\n        switch (e.key) {\r\n            case ' ': {\r\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n        return;\r\n    } else {\r\n        if (store.scoreState.hideMenu === 'none') {\r\n            if (isElement) {\r\n                if (keySwitch.editMode) {\r\n                    switch (e.key) {\r\n                        case config.decRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(false);\r\n                        }\r\n                            break;\r\n                        case config.incRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(true);\r\n                        }\r\n                            break;\r\n                        case config.decBeat: {\r\n                            dispatcher.score.incrementBeatLen(false);\r\n                        }\r\n                            break;\r\n                        case config.incBeat: {\r\n                            dispatcher.score.incrementBeatLen(true);\r\n                        }\r\n                            break;\r\n                        case 'A': dispatcher.score.incrementMinuteValRelation(false, -0.25); break;\r\n                        case 'S': dispatcher.score.incrementMinuteValRelation(false, 0.25); break;\r\n                        case 'D': dispatcher.score.incrementMinuteValRelation(true, -0.25); break;\r\n                        case 'F': dispatcher.score.incrementMinuteValRelation(true, 0.25); break;\r\n                    }\r\n                } else if (keySwitch.symbolMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.symbol.toNext(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.symbol.toNext(true);\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.symbol.toBase();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.symbol.toDerive();\r\n                        }\r\n                            break;\r\n                    }\r\n                } else {\r\n                    NoteBasicInput(e, store, dispatcher);\r\n                }\r\n            }\r\n        } else if (store.scoreState.hideMenu === 'backing') {\r\n            backingEditorInput(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const state = store.scoreState;\r\n    if (!state.isPreview) {\r\n        if (state.hideMenu === 'none') {\r\n            const config = store.userEnv.keyConfig.note;\r\n            const keySwitch = store.scoreState.keySwitch;\r\n            // alert(e.key);\r\n            // alnfig.nextElement);\r\n            switch (e.key) {\r\n                case config.editMode: {\r\n                    keySwitch.editMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n                case config.symbolMode: {\r\n                    keySwitch.symbolMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { playChordSoundfont } from \"../../../../../utils/instrumentsUtil\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                }\r\n                    break;\r\n                case 'x': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.score.cloneBacking();\r\n                    }\r\n                }\r\n                    break;\r\n                case 'v': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.score.pastBacking();\r\n                    }\r\n                }\r\n                    break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(Number(e.key) - 1);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.prevElement: {\r\n            dispatcher.score.moveElement(false);\r\n        }\r\n            break;\r\n        case config.nextElement: {\r\n            dispatcher.score.moveElement(true);\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.prevSection: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.nextSection: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'm': {\r\n            dispatcher.score.addChangeElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case ' ': {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        }\r\n            break;\r\n    }\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport BackingState from \"../../../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\n\r\nexport const backingEditorInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.backingState;\r\n\r\n    if (state == null) return;\r\n\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const pattern = state.pattern;\r\n\r\n\r\n    if (!state.isPreview) {\r\n        switch (e.key) {\r\n            case 'b': {\r\n                dispatcher.backing.closeBackingEditor();\r\n            }\r\n                break;\r\n            case 'Enter': {\r\n                dispatcher.backing.mappingEditorToScore();\r\n            }\r\n                break;\r\n            case ' ': {\r\n                if (!state.hasError) {\r\n                    dispatcher.backing.testBacking();\r\n                }\r\n            }\r\n                break;\r\n        }\r\n\r\n        if (pattern != null) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft': {\r\n                    dispatcher.backing.movePatternColumn(false);\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    dispatcher.backing.movePatternColumn(true);\r\n                }\r\n                    break;\r\n            }\r\n            if (pattern.channelIndex === -1) {\r\n\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        // dispatcher.backing.moveChannelIndex(false);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        // dispatcher.backing.moveChannelIndex(true);\r\n                    }\r\n                        break;\r\n                    case 'a': {\r\n                        dispatcher.backing.addPatternColumn();\r\n                    }\r\n                        break;\r\n                    case 'w': {\r\n                        dispatcher.backing.changeLayer();\r\n                    }\r\n                        break;\r\n                    case '1': {\r\n                        dispatcher.backing.setCurrentDivRate(16);\r\n                    }\r\n                        break;\r\n                    case '2': {\r\n                        dispatcher.backing.setCurrentDivRate(8);\r\n                    }\r\n                        break;\r\n                    case '3': {\r\n                        dispatcher.backing.setCurrentDivRate(4);\r\n                    }\r\n                        break;\r\n                    case '4': {\r\n                        dispatcher.backing.setCurrentDivRate(2);\r\n                    }\r\n                        break;\r\n                    case '5': {\r\n                        dispatcher.backing.setCurrentDivRate(1);\r\n                    }\r\n                        break;\r\n                    case '.': {\r\n                        dispatcher.backing.toggleCurrentDivHalf();\r\n                    }\r\n                        break;\r\n                    case 'Delete': {\r\n                        dispatcher.backing.deleteColumn();\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        pattern.channelIndex = 0;\r\n                        update();\r\n                    }\r\n                        break;\r\n\r\n                }\r\n            } else {\r\n\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.backing.moveChannelIndex(false);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.backing.moveChannelIndex(true);\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        pattern.channelIndex = -1;\r\n                        update();\r\n                    }\r\n                        break;\r\n                    case 'Enter': {\r\n                        const curNotes = dispatcher.backing.getNotes();\r\n                        const notes: BackingState.NoteStatus | null = curNotes == null ? { signal: 'n', timing: 0, velAdj: 0 } : null;\r\n                        dispatcher.backing.setNotes(notes);\r\n                        dispatcher.backing.updateErrorState();\r\n                    }\r\n                        break;\r\n\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n\r\n        switch (e.key) {\r\n            case ' ': {\r\n                BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ROOT_ALL, getChordRoot, getDegreeRoot, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport MinuteForm from \"./minuteForm\";\r\n\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    \r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i} isExist={isExist} onClick={() => {\r\n                const data = store.scoreData;\r\n                data.chordList = data.chordList.slice();\r\n                detail.beatLen = (i + 1);\r\n                data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={root != null && [0, 2, 4, 5, 7, 9, 11].includes(root.index)}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {getDegreeRoot(root)} ({getChordRoot(root, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_LabelBeat>{'Beat Length'}</_LabelBeat>\r\n                <_Beat>\r\n                    {beatItemsJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    <_LabelMinute>{'Minute Head'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={true} /> */}\r\n                    <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                    <_LabelMinute>{'Minute Tail'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_Root>\r\n                    {rootItemsJsx}\r\n                </_Root>\r\n                <_Symbol\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_Symbol>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _LabelBeat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #c50000; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100px;\r\n    text-align: left;\r\n    background-color: #9c93b9;\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 2px;\r\n        width: calc(100% - 4px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 75px;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _LabelMinute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #222222;\r\n    text-align: center;\r\n`;\r\n// const _Minutetem = styled.div<{\r\n//     isExist: boolean;\r\n// }>`\r\n//     display: inline-block;\r\n//     width: 20%;\r\n//     height: 20px;\r\n//     text-align: left;\r\n//     background-color: #4c3696;\r\n//     font-size: 18px;\r\n//     font-weight: 600;\r\n//     color: #ce0000;\r\n//     line-height: 12px;\r\n//     text-align: center;\r\n\r\n//     & span{\r\n//         display: inline-block;\r\n//         margin: 2px 0 0 2px;\r\n//         width: calc(100% - 4px);\r\n//         height: calc(100% - 4px);\r\n//         background-color: #9b8585;\r\n//         ${props => !props.isExist ? '' : css`\r\n//             /* background-color: #ebf37eb7; */\r\n//             background: linear-gradient(to bottom, #bdb652d2, #fff56cd3, #bdb652d2);\r\n//         `}\r\n//     }\r\n// `;\r\nconst _MinuteItem = styled.input<{\r\n    isReverse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: 20px;\r\n    color: #3b51d1;\r\n    ${props => !props.isReverse ? '' : css`\r\n        transform: rotateY(180deg);\r\n    `}\r\n`;\r\n\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 360px;\r\n    text-align: left;\r\n    background-color: #78b48c;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Root = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #e6e6e6;\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #ff6060bd;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #ff9090bc;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #90d3ffbb;`}\r\n    }\r\n`;\r\n\r\nconst _Symbol = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 90px);\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #99e07d;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isActive ? '' : css`background-color: #ff6060bd;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #ff9090bc;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const scaleItemJsxList: JSX.Element[] = ['major', 'minor'].map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n\r\n    const rateItemJsxList: JSX.Element[] = ['4/4', '3/4'].map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.timeSignature === item} onClick={() => {\r\n                detail.timeSignature = item as BeatSignature;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            <_TempoWrap>\r\n                <input\r\n                    type=\"number\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n                <input\r\n                    type=\"range\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n            </_TempoWrap>\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    margin: 5px 0 0 0;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        ['Intro', 'A-mero', 'B-mero', 'Sabi', 'C-mero', 'Outro'].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={()=>{\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        [1, 2, 3, 4].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item.toString()) !== -1;\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}>\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n            <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #b89b9b;\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 24px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: 60%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: 40%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #61b4b0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst NoteSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'change': return <></>;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default NoteSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../redux/store/scoreState\";\r\nimport { TIMELINE_BEAT_WIDTH } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport BlockItem from \"./blockItem\";\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    let curBeatJsx: JSX.Element = <></>;\r\n    let prevBeatJsx: JSX.Element = <></>;\r\n    let nextBeatJsx: JSX.Element = <></>;\r\n    let curMinuteJsx: JSX.Element = <></>;\r\n    let prevMinuteJsx: JSX.Element = <></>;\r\n    let nextMinuteJsx: JSX.Element = <></>;\r\n\r\n    const memoriJsxList: JSX.Element[] = [];\r\n\r\n    //現在の要素取得\r\n\r\n    let curIndex = 2;\r\n    let prevIndex = 2;\r\n    let nextIndex = dataList.length - 1;\r\n    let temp = focusIndex;\r\n    while (temp > 2) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            curIndex = temp;\r\n            break;\r\n        }\r\n        temp--;\r\n    }\r\n    // 前が存在する\r\n    if (curIndex > 2) {\r\n        temp = curIndex - 1;\r\n        while (temp > 2) {\r\n            const element = dataList[temp];\r\n            if (element.type === 'chord') {\r\n                prevIndex = temp;\r\n                break;\r\n            }\r\n            temp--;\r\n        }\r\n    }\r\n    temp = focusIndex + 1;\r\n    while (temp < dataList.length - 1) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            nextIndex = temp;\r\n            break;\r\n        }\r\n        temp++;\r\n    }\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const add = (sustain: number, cache: ElementCache): void => {\r\n        const adjust = cache.beat + cache.minute;\r\n        for (let i = 0; i < Math.floor(sustain / 0.25); i++) {\r\n            const pos = i + Math.floor(adjust / 0.25);\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { width: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n            memoriJsxList.push(\r\n                <_Memori\r\n                    key={memoriJsxList.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {pos % 16 === 0 ? <_Bar>{cache.bar + 1 + (adjust === 0 ? 0 : 1)}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        }\r\n    }\r\n\r\n    if (curIndex > 2) {\r\n\r\n        if (prevIndex === 2) {\r\n            prevBeatJsx = (\r\n                <_Prev sustain={4}>start</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={4} />\r\n            );\r\n\r\n            memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n        } else {\r\n            const chord = dataList[prevIndex].detail as DetailChord;\r\n            const cache = cacheList[prevIndex];\r\n            const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n            prevBeatJsx = (\r\n                <_Prev sustain={chord.beatLen}>Prev</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={sustain} />\r\n            );\r\n\r\n            add(sustain, cache);\r\n        }\r\n    }\r\n    if (curIndex === 2) {\r\n        curBeatJsx = (\r\n            <_Cur sustain={4}>start</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[curIndex].detail as DetailChord;\r\n        const cache = cacheList[curIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        curBeatJsx = (\r\n            <_Cur sustain={chord.beatLen}>Cur</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={sustain} />\r\n        );\r\n\r\n        add(sustain, cache);\r\n    }\r\n    if (nextIndex === dataList.length - 1) {\r\n        nextBeatJsx = (\r\n            <_Next sustain={4}>end</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[nextIndex].detail as DetailChord;\r\n        const cache = cacheList[nextIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        nextBeatJsx = (\r\n            <_Next sustain={chord.beatLen}>Next</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={sustain} />\r\n        );\r\n\r\n        add(sustain + 0.25, cache);\r\n    }\r\n\r\n    // const curSustain = nextCache.beat - curCache.beat;\r\n    return (\r\n        <_Wrap>\r\n            <_Blocks>\r\n                <_Beat>\r\n                    {prevBeatJsx}\r\n                    {curBeatJsx}\r\n                    {nextBeatJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    {prevMinuteJsx}\r\n                    {curMinuteJsx}\r\n                    {nextMinuteJsx}\r\n                </_Minute>\r\n            </_Blocks>\r\n            <_Measure>\r\n                {memoriJsxList}\r\n            </_Measure>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst BEAT_WIDTH = 50;\r\n\r\nconst _Wrap = styled.div`\r\n    overflow: hidden;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    height: 10px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.sustain * BEAT_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Prev = styled(_Item) <{\r\n}>`\r\n    background-color: rgba(0, 21, 211, 0.158);\r\n`;\r\n\r\nconst _Cur = styled(_Item) <{\r\n}>`\r\n    background-color: rgb(233, 5, 5);\r\n`;\r\n\r\nconst _Next = styled(_Item) <{\r\n}>`\r\n    background-color: rgba(31, 189, 0, 0.144);\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Start = styled.div`\r\n    display: inline-block;\r\n    width: ${BEAT_WIDTH * 4}px;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${BEAT_WIDTH / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { getIntervalValues, getSymbolFromKey, IntervalRelationProps } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const scaleList = cache == null ? [] : [0, 2, 4, 5, 7, 9, 11].map(value => (cache.keyIndex + value) % 12);\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = getIntervalValues((root.index + cache.keyIndex) % 12, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        for (let i = 0; i < 14; i++) {\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            {/* <_Info>{tipJsxList}</_Info> */}\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    /* background-color: #4b4b4b; */\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    border: 1px solid #ffffffda;\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#c3c3d6, #8989a8);\r\n    ` : css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#3e9ef7, #254e74);\r\n    ` : css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst InitialBeatTip = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const tipJsxList:JSX.Element[] = [];\r\n    for(let i = 0; i < 4; i ++) {\r\n        tipJsxList.push(\r\n            <_Tip key={i} isActive={state.initialBeat > i} onClick={()=> {\r\n                state.initialBeat = i + 1;\r\n                dispatcher.score.setScoreState(state);\r\n            }}/>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Label>inital beat</_Label>\r\n            <_WrapTip>{tipJsxList}</_WrapTip>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default InitialBeatTip;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\nconst _WrapTip = styled.div`\r\n    display: inline-block;\r\n    width: 142px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 8px;\r\n    border-radius: 4px;\r\n    border: solid 1px #747474;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 4px;\r\n    background-color: #d6d6d6;\r\n    ${props => !props.isActive ? '' : css`background-color: #eeedcf;`}\r\n    border: solid 1px #b9b9b9;\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n    pattern.layers.forEach((layer, j) => {\r\n\r\n        const jsxLsit: JSX.Element[] = [];\r\n        for (let i = 0; i < channelCount; i++) {\r\n            const notesJsxLsit: JSX.Element[] = [];\r\n\r\n            layer.noteDivList.forEach((note, k) => {\r\n                // データ上は下から数えるため、表示のループは逆回転する\r\n                const channelIndex = (channelCount - 1) - i;\r\n                const isActive = pattern.lenIndex === k;\r\n                const cell = layer.table[channelIndex][k];\r\n                const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                const isUse = cell != null;\r\n                // 前面にあるレイヤーのみエラー判定をする\r\n                const isError = pattern.layerIndex !== j ? false :\r\n                    isUse && BackingUtil.checkOverlapBackLayer(pattern.layers, j, channelIndex, k);\r\n                const isEdit = isActive && pattern.channelIndex === i;\r\n                let rate = note.rate;\r\n                if (note.isDot) rate /= 1.5;\r\n                if (note.div3 !== 0) rate /= note.div3 / 3;\r\n                notesJsxLsit.push(\r\n                    <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                        <_State isUse={isUse} isError={isError} signal={'n'} isBack={pattern.layerIndex !== j}\r\n                            onClick={() => {\r\n                                if (cell == null) {\r\n                                    setNotesStatus({ signal: 'n', timing: 0, velAdj: 0 });\r\n                                } else {\r\n                                    setNotesStatus(null);\r\n                                }\r\n                                update();\r\n                                dispatcher.backing.updateErrorState();\r\n                            }}\r\n                            onContextMenu={() => {\r\n                                pattern.channelIndex = i;\r\n                                pattern.lenIndex = k;\r\n                                update();\r\n                            }}\r\n                        />\r\n                    </_Notes>\r\n                );\r\n            });\r\n            jsxLsit.push(\r\n                <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                    {notesJsxLsit}\r\n                </_Record>\r\n            );\r\n        }\r\n        layerJsxList[j] = jsxLsit;\r\n    });\r\n\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    isUse: boolean;\r\n    isError: boolean;\r\n    signal: BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => !props.isUse ? '' : css<{\r\n        isBack: boolean;\r\n        isError: boolean;\r\n    }>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        // エラーあり\r\n        ${props => !props.isError ? '' : css`\r\n            opacity: 0.5;\r\n        `}\r\n        // 裏面のレイヤー\r\n        ${props => !props.isBack ? '' : css`\r\n            background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.5;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => !props.isUse ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { ElementCache } from \"../../../../redux/store/scoreState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternTable from \"./patternTable\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    const divs = pattern.layers[pattern.layerIndex].noteDivList;\r\n    const limitLen = BackingUtil.getLimitLen(chordInfo);\r\n    const useTotalLen = BackingUtil.getTotalLenFromDivs(divs);\r\n    const isLenOverError = 0 <= limitLen - useTotalLen;\r\n\r\n    const viewRate = NOTES_1BAR_WIDTH / 4;\r\n\r\n    const memoriJsxList: JSX.Element[] = [];\r\n\r\n    for (let i = 0; i < Math.floor(useTotalLen / 0.25) + 1; i++) {\r\n        const pos = i;\r\n        let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n        switch (true) {\r\n            case pos % 16 === 0: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n            case pos % 4 === 0: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n            case pos % 2 === 0: bean = { width: 1, height: 14, color: '#7a7a7a' }; break;\r\n        }\r\n        memoriJsxList.push(\r\n            <_Memori\r\n                key={memoriJsxList.length}\r\n                width={bean.width}\r\n                height={bean.height}\r\n                color={bean.color}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n                <_MemoriList>{memoriJsxList}</_MemoriList>\r\n                {isLenOverError ? (\r\n                    <_ChordLenLine pos={limitLen * viewRate} />\r\n                ) : (\r\n                    <_OverCover pos={limitLen * viewRate} width={(useTotalLen - limitLen) * viewRate} />\r\n                )}\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\nconst _MemoriList = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${NOTES_1BAR_WIDTH / 16}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _OverCover = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: ${props => props.width}px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #f8000053;\r\n    pointer-events: none;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;\r\n\r\nconst _ChordLenLine = styled.div<{\r\n    pos: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: 4px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #ffffffc7;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n    const channelCount = pattern.channels.length;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length + 1);\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length - 1);\r\n        update();\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap isError={props.soundFullName === '-'}>\r\n            <_Struct>{props.soundFullName}</_Struct>\r\n            <_Option isEnable={channelCount > 1} onClick={deleteRecord}>-</_Option>\r\n            <_Option isEnable={channelCount < 12} onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ff0000c3;\r\n    `}\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)<{\r\n    isEnable: boolean;\r\n}>`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\nimport BackingState from \"../../../../redux/store/backingState\";\r\nimport { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n    const pattern = state.pattern;\r\n    const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    const layerJsxList: JSX.Element[] = [];\r\n    if (pattern != null) {\r\n        const channels = pattern.channels;\r\n        channels.forEach((channel, i) => {\r\n            let name = '-';\r\n            if (channel.octave !== -1) {\r\n                const soundIndex = chordRoot + IntervalRelationProps[symbol.structs[channel.structIndex]];\r\n                const octave = channel.octave + Math.floor(soundIndex / 12);\r\n                name = KEY12_SHARP_LIST[soundIndex % 12] + octave;\r\n            }\r\n            channelJsxList.push(\r\n                <ChannelItem key={i}\r\n                    index={i}\r\n                    soundFullName={name}\r\n                />\r\n            );\r\n        });\r\n\r\n        pattern.layers.forEach((layer, i) => {\r\n            const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\r\n            layerJsxList.push(\r\n                <_LayerItem key={i} isActive={pattern.layerIndex === i}\r\n                    onClick={()=>{\r\n                        if(i !== pattern.layerIndex) {\r\n                            dispatcher.backing.changeLayer();\r\n                        }\r\n                    }}\r\n                >\r\n                    {labelName}\r\n                </_LayerItem>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            {layerJsxList}\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #929292;\r\n`;\r\n\r\nconst _LayerItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #dad600;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternStatus = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={true} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot, () => {\r\n            cur.isDot = !cur.isDot;\r\n            update();\r\n        })}\r\n        {createItem('1/3', cur.div3 === 1, () => {\r\n            if (cur.div3 === 1) cur.div3 = 0;\r\n            else cur.div3 = 1;\r\n            update();\r\n        })}\r\n        {createItem('2/3', cur.div3 === 2, () => {\r\n            if (cur.div3 === 2) cur.div3 = 0;\r\n            else cur.div3 = 2;\r\n            update();\r\n        })}\r\n    </_WrapLen>;\r\n\r\n\r\n    const selectedCell = pattern.channelIndex === -1 ? null :\r\n        pattern.layers[pattern.layerIndex].table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', selectedCell == null, () => {\r\n\r\n            update();\r\n        })}\r\n\r\n        {createItem('□', selectedCell != null && selectedCell.signal === 'n', () => {\r\n\r\n            update();\r\n        })}\r\n        {createItem('・', selectedCell != null && selectedCell.signal === 's', () => {\r\n\r\n            update();\r\n        })}\r\n        {createItem('⁀', selectedCell != null && selectedCell.signal === 't', () => {\r\n\r\n            update();\r\n        })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternStatus;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternStatus from \"./patternStatus\";\r\n\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button isActive={isUsePattern}\r\n                        onClick={() => {\r\n                            if (!isUsePattern) {\r\n                                const table = state.voicingTable as boolean[][];\r\n                                const voicingStructs = BackingUtil.buildChannels(table);\r\n                                const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n                                state.pattern = {\r\n                                    layerIndex: 0,\r\n                                    lenIndex: 0,\r\n                                    channelIndex: -1,\r\n                                    channels,\r\n                                    isUsePedal: false,\r\n                                    layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n                                } as BackingState.Pattern;\r\n                                update();\r\n                            } else {\r\n                                state.pattern = null;\r\n                                update();\r\n                            }\r\n                        }}>Use\r\n                    </_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternStatus /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #e00000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #ff0000;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { playChordSoundfont } from \"../../../utils/instrumentsUtil\";\r\nimport { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n\r\n    const table = state.voicingTable as boolean[][];\r\n    const pattern = state.pattern;\r\n    const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n    const chordName = KEY12_SHARP_LIST[chordRoot] + symbol.name;\r\n\r\n    const voicingLaneJsxList: JSX.Element[] = [];\r\n    const channelLimitNum = pattern == null ? BackingUtil.OCTAVE_NUM * BackingUtil.STRUCT_NUM : pattern.channels.length;\r\n    let total = 0;\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const tipJsxList: JSX.Element[] = [];\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = symbol.structs.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n            if (isSelected) {\r\n                total++;\r\n            }\r\n\r\n            const interval = IntervalRelationProps[symbol.structs[j]];\r\n            const chordIndex = (chordRoot + interval) % 12;\r\n            const octave = i + Math.floor((chordRoot + interval) / 12);\r\n\r\n            const name = !isEnable ? '' : `${KEY12_SHARP_LIST[chordIndex]}${octave}`;\r\n            tipJsxList.push(\r\n                <_VoicingItem key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    isOver={isSelected && total > channelLimitNum}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: BackingState.ChannelParam[] = BackingUtil.buildChannels(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                        dispatcher.backing.updateErrorState();\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.piano;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_VoicingItem>\r\n            );\r\n        }\r\n        voicingLaneJsxList.push(\r\n            <_VoicingLane key={i}>\r\n                {tipJsxList}\r\n            </_VoicingLane>\r\n        );\r\n    }\r\n\r\n\r\n    const relationJsxList: JSX.Element[] = [];\r\n    symbol.structs.forEach((struct, i) => {\r\n        const interval = IntervalRelationProps[struct];\r\n        const chordIndex = (+ interval) % 12;\r\n        relationJsxList.push(\r\n            <_Relation key={i}>{struct} [{KEY12_SHARP_LIST[chordIndex]}]</_Relation>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Info>\r\n                <_InfoItem>\r\n                    <_Label>Chord</_Label>\r\n                    <_Value>{chordName}</_Value>\r\n                </_InfoItem>\r\n                <_InfoItem>\r\n                    <_Label>Type</_Label>\r\n                    <_Value>{symbol.attr}</_Value>\r\n                </_InfoItem>\r\n            </_Info>\r\n            <_Main>\r\n                <_Left>\r\n                    {relationJsxList}\r\n                </_Left>\r\n                <_Right>{voicingLaneJsxList}</_Right>\r\n            </_Main>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _Info = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _InfoItem = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #89dada; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 8px);\r\n    width: 80px;\r\n    background-color: #69bcdd;\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #026c86;\r\n    border: 1px solid #303030;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 6px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #cccccc; */\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _Relation = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _VoicingLane = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VoicingItem = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n    isOver: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #e5e747;\r\n    `}\r\n    ${props => !props.isOver ? '' : css`\r\n        background-color: #c40000;\r\n        color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #b9bb3f;\r\n        `}\r\n        ${props => !props.isOver ? '' : css`\r\n            background-color: #bb3f3f;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../redux/store/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_PrevireBrind isUse={state.isPreview} />\r\n            <VoicingChooser />\r\n            <PatternFrame />\r\n            <_FooterDiv>\r\n                <_Button isEnable={!state.hasError} onClick={() => {\r\n\r\n                    if (!state.isPreview) {\r\n                        dispatcher.backing.testBacking();\r\n                    } else {\r\n                        BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                    }\r\n                }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Cancel</_Button>\r\n                <_Button isEnable={!state.isPreview} onClick={() => {\r\n                    dispatcher.backing.mappingEditorToScore();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/scoreData\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport PatternFrame from \"../../../backing/pattern/patternFrame\";\r\nimport VoicingChooser from \"../../../backing/voicing/voicingChooser\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n    const cur = chordList[focusIndex];\r\n    const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={isBackingEnable}\r\n                onClick={() => {\r\n                    if (state.hideMenu === 'none') {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    } else if (state.hideMenu === 'backing') {\r\n                        dispatcher.backing.closeBackingEditor();\r\n                    }\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection } from \"../../../../redux/store/scoreData\";\r\nimport { ElementCache, SectionCache } from \"../../../../redux/store/scoreState\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport NoteSideForm from \"./side/noteSideForm\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport { getBeatRate } from \"../../../../utils/theoryUtils\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\n\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const state = store.scoreState;\r\n    const init = (store.scoreData.chordList[0].detail as DetailInit);\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, harmonize: () => {\r\n                dispatcher.system.setInvalidate({\r\n                    ...store.invalidate, harmoniizeInvalidate: {}\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    useEffect(() => {\r\n        const elementCacheList: ElementCache[] = [];\r\n        const sectionCacheList: SectionCache[] = [];\r\n\r\n        let prevBeat = 0;\r\n        let totalBeat = 0;\r\n        let prevMinute = 0;\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let keyIndex = -1;\r\n        let sectionBeatSum = 0;\r\n\r\n        chordList.forEach((element, i) => {\r\n            const type = element.type;\r\n            switch (type) {\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        prevBeat = totalBeat;\r\n                        prevMinute = totalMinute;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'init': {\r\n                    const detail = element.detail as DetailInit;\r\n                    keyIndex = detail.keyIndex;\r\n                }\r\n                    break;\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'chord': {\r\n                    const detail = element.detail as DetailChord;\r\n                    prevBeat = totalBeat;\r\n                    totalBeat += detail.beatLen;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    prevMinute = totalMinute;\r\n                    totalMinute += detail.minute.head;\r\n                    totalMinute += detail.minute.tail;\r\n                }\r\n                    break;\r\n                case 'change': {\r\n\r\n                }\r\n                    break;\r\n            }\r\n\r\n            const pastSecond = 60000 / init.bpm * (prevBeat + prevMinute);\r\n            const beatRate = getBeatRate(init.timeSignature)[0];\r\n            elementCacheList.push({\r\n                bar: Math.floor(prevBeat / beatRate),\r\n                beat: prevBeat % beatRate,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                sectionNo,\r\n                pastSecond,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        store.scoreState.elementCacheList = elementCacheList;\r\n        store.scoreState.sectionCacheList = sectionCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }, [chordList, chordList.length, init.bpm]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Left>\r\n                <_Head isEnable={!state.isPreview}>\r\n                    <InitialBeatTip />\r\n                </_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP><HarmMeasure /></_TIMELINE_WRAP>\r\n                    <_INFO_WRAP><ChordInfo /></_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right isEnable={!state.isPreview}>\r\n                <NoteSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Head = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    position: absolute;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #ddc2c2;\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 36px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #e7e7e6be;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #aaaaaa;\r\n    border-radius: 20px 20px 20px 20px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 20px;\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: #888;\r\n        /* background-color: #c500003b; */\r\n        line-height: 18px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 16px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #10c5003a; */\r\n        line-height: 16px;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport { previewCurHarmony } from \"../../../../utils/melodyUtil\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barLength * 4 * 4; i++) {\r\n            let barJsx = <></>;\r\n            if (i % 16 == 0) {\r\n                barJsx = <_Bar>{Math.floor(i / 16) + 1}</_Bar>\r\n            }\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={beatWidth}>\r\n                    {barJsx}\r\n                </_Scale>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const symbolNmae = getSymbolFromKey(detail.symbolKey)?.name;\r\n                const degreeName = detail.root == null ? '-' :\r\n                    getDegreeRoot(detail.root) + symbolNmae;\r\n                const chordName = detail.root == null ? '-' :\r\n                    getChordRoot(detail.root, init.keyIndex) + symbolNmae;\r\n                jsxList.push(\r\n                    <_ChordItem key={jsxList.length}\r\n                        width={beatWidth * (detail.beatLen + detail.minute.head + detail.minute.tail)}\r\n                        isActive={element == curChord}\r\n                        onClick={() => {\r\n                            state.isTune = false;\r\n                            state.focusIndex = i;\r\n                            dispatcher.score.setScoreState(state);\r\n                        }}\r\n                        onContextMenu={() => {\r\n                            previewCurHarmony(store, dispatcher);\r\n                        }}\r\n                    >\r\n                        <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                    </_ChordItem>\r\n                );\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_Measure ref={measureRef}>\r\n            {measureJsxList}\r\n            <_MousePos\r\n                left={mouseMeasurePos * beatWidth * rate}\r\n                width={beatWidth * rate}\r\n            />\r\n        </_Measure>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _Measure = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Bar = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #ec0000;\r\n    left: -5px;\r\n    top: -20px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #758f94;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #637596;\r\n    ${props => !props.isStruct ? '' : css`background-color: #949494;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                state.isPreview = true;\r\n                dispatcher.tune.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.tune.setInstrument(soundFontPlayer);\r\n                    }).then(() => {\r\n                        state.isPreview = false;\r\n                        dispatcher.tune.setState(state);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #c7c6abda;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fffd7eda;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e6e2c5da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #fffd7eda;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst ControlButton = (props: {\r\n    labelName: string;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ControlButton;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #a8bae0, #818ada, #a8bae0);\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d5d6e;\r\n    border-radius: 2px;\r\n    border: solid 1px #737374;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to bottom, #c2d0f0, #929beb, #c2d0f0);\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\n\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={state.quantize === 4} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.tune.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.tune.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} />\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 6 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.mouseState;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.mouseState;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.distIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    notes.len = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    // dispatcher.tune.setNotesList(notesList.slice());\r\n                    store.scoreData.notesList = notesList.slice();\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    notes.pos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    // dispatcher.tune.setNotesList(notesList.slice());\r\n                    store.scoreData.notesList = notesList.slice();\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.mouseState;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.tune.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.tune.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { previewCurHarmony, stopPreview } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n        const isSingle = state.focusIndex === state.distIndex;\r\n        // const notesList = store.scoreData.notesList;\r\n        const mouse = state.mouseState;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.tune.copyNotes(); break;\r\n                    case 'v': dispatcher.tune.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.tune.allSelect();\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.tune.incrementCurNoteKey(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.tune.incrementCurNoteKey(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveDistFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveDistFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.tune.incrementCurNoteKey(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.tune.incrementCurNoteKey(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        dispatcher.tune.moveFocus(false);\r\n                    } else {\r\n                        dispatcher.tune.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        dispatcher.tune.moveFocus(true);\r\n                    } else {\r\n                        dispatcher.tune.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.tune.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.tune.adjustScrollX(); break;\r\n                case 'e': dispatcher.tune.adjustScrollY(); break;\r\n                case 'z': {\r\n                    previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.tune.firstNotes();\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.tune.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.tune.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.tune.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.distIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.tune.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.tune.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SCALE_INDEX } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.mouseState;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n\r\n    const barCount = 20;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, melody: () => setInvalidate({})\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barCount * 4 * 4; i++) {\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={state.beatWidth} />\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barCount]);\r\n\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n    const scaleLineJsxList = useMemo(() => {\r\n        const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < PITCH_MAX; i++) {\r\n            const keyIndex = getKeyIndexFromPitcher(i);\r\n            list.push(\r\n                <_ScaleLine key={i}\r\n                    isScale={scaleIndexies.includes(keyIndex)}\r\n                    isBase={keyIndex === scaleIndexies[0]}\r\n                />\r\n            );\r\n        }\r\n        return list;\r\n    }, [init.keyIndex]);\r\n\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        let count = 0;\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const notesLeft = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const notesRight = notesLeft + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                if (notesRight - scroll < 0 ||\r\n                    notesLeft - scroll > tableRef.current.clientWidth) {\r\n                    continue;\r\n                }\r\n            }\r\n            count++;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n\r\n            // クオンタイズ\r\n            const unitPos = getMinimumLenUnit(notes.pos);\r\n            const unitLen = getMinimumLenUnit(notes.len);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={getNormalizeLenFromNotes(notes.pos) * state.beatWidth}\r\n                    width={getNormalizeLenFromNotes(notes.len) * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.tune.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\r\n                        isScale={isScale}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        console.log('cnt: ' + count);\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.distIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move,\r\n        invalidate]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header isEnable={!state.isPreview}>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef}\r\n                    onScroll={() => {\r\n                        const refs = store.refs.melody;\r\n\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const scrollLeft = refs.table.scrollLeft;\r\n                            const scrollTop = refs.table.scrollTop;\r\n                            refs.measure.scrollTo({ left: scrollLeft });\r\n                            refs.chord.scrollTo({ left: scrollLeft });\r\n                            refs.pitch.scrollTo({ top: scrollTop });\r\n                        }\r\n                        update();\r\n                    }}\r\n                >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleLineJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #534b81;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #2727275a;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #00a6cf52;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `};\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `};\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb006d;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #7a270028;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { stopPreview } from \"../../../utils/melodyUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    useEffect(() => {\r\n        const info = melody.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.tune.setInstrument(soundFontPlayer);\r\n            });\r\n\r\n        // acoustic_guitar_steel\r\n        //bright_acoustic_piano\r\n        Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\r\n            { gain: 3, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.score.setPiano(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    const switchMode = () => {\r\n        state.isTune = !state.isTune;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isTune ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isTune ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isTune ? () => {\r\n\r\n        if (!state.isPreview) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        } else {\r\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    } : () => {\r\n\r\n        if (!melody.isPreview) {\r\n            dispatcher.tune.previewStart();\r\n        } else {\r\n            stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    }\r\n    const toggleEnsamble = !state.isTune ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.tune.setState(melody);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode isEnable={!isPreview}>\r\n                    <_ModeItem isActive={!state.isTune} onClick={() => {\r\n                        if (state.isTune) switchMode();\r\n                    }}>Harmony</_ModeItem>\r\n                    <_ModeItem isActive={state.isTune} onClick={() => {\r\n                        if (!state.isTune) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch onClick={preview}><_SwitchInner isActive={isPreview}>Play</_SwitchInner> / <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner></_Switch>\r\n                    <_Switch onClick={toggleEnsamble}><_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner> / <_SwitchInner isActive={isSolo}>Solo</_SwitchInner></_Switch>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    if (!isPreview) {\r\n                        switch (e.key) {\r\n                            case 'r': switchMode(); break;\r\n                        }\r\n                    }\r\n                }}>\r\n                <_SECTIONS><HarmSections /></_SECTIONS>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isTune} />\r\n                    <MelodyFrame isActive={state.isTune} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div<{\r\n    isEnable: boolean\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #ecfd5273;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #f6ffa373;\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    { name: 'Preview', disable: !isAccept, cont: <div></div> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DegreeProps, getSymbolFromKey, IntervalRelationProps, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    sampler.releaseAll();\r\n\r\n                    const symbol = getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, disable: true, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, disable: true, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, disable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, disable: true, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { GlobalContext } from './systemEntry';\r\n\r\nconst Splash = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                dispatcher.system.switchSplashToMain();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n        <_Wrap isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Title>\r\n                <span>L</span>iCreSia\r\n            </_Title>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Wrap = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    /* width: 500px;\r\n    height: 500px; */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #d8d8d8; */\r\n    background: radial-gradient(#868686, #ffffff);\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 15%;\r\n    width: 100%;\r\n    height: 400px;\r\n    background-color: #ffffff1f;\r\n    /* background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913); */\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    line-height: 350px;\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\n\r\nconst TotalHeader = () => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport SysModalDialog from '../dialog/sysModalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> : <Splash />}\r\n                <_Wrap>\r\n                    <SysModalDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n  \n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    window.addEventListener(\"keydown\", function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    }, false);\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}