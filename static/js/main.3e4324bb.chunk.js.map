{"version":3,"sources":["system/redux/reducer.tsx","system/utils/theoryUtils.tsx","system/utils/instrumentsUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/sysModalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/base/design/styles.tsx","system/contents/score/manage/scoreBuilder.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/input/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChange.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcChange.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/noteSideForm.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/info/chordInfo.tsx","system/contents/score/edit/harmonize/initial/initialBeat.tsx","system/utils/backingUtil.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternStatus.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/item/controlButton.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionType","SCALE_INDEX","ROOT_ALL","index","isFlat","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","getDegreeRoot","props","KEY12_FLAT_LIST","KEY12_SHARP_LIST","getChordRoot","baseKeyIndex","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SYMBOL_LIST","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_LIST","root","symbolKey","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","getSymbolFromKey","ret","find","symbol","undefined","getSymbolDerives","list","forEach","push","reducer","store","action","type","payload","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","getDefaultBacking","voicingList","struct","octave","pattern","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","notes","total","len4","len8","len16","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","getSortetdNotesLen","len8div3Cnt3","Math","floor","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","i","keyIndex","soundName","instrument","soundfontPlayer","stop","play","duration","playPiano","soundFullName","piano","stopPreview","dispatcher","state","isPreview","focusIndex","lastFocus","distIndex","id","clearInterval","sampler","releaseAll","tune","setState","adjustScrollX","previewHarmony","start","cacheList","elementCacheList","chordList","init","detail","cache","element","pastSecond","rootIndex","len","beatLen","minute","head","tail","channelList","backing","map","item","interval","chordTime","bpm","setTimeout","mouseState","curChord","length","j","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","Dispatcher","dispatch","system","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setReserveTasks","setInvalidate","score","setPiano","setScoreTabIndex","scoreTabIndex","setScoreState","setKeySwitch","keySwitch","setScoreData","moveElement","isNext","sub","moveSection","curSectionIndex","sectionNo","sectionCacheList","curSectionInfo","curElementType","rangeIndexStart","rangeIndexEnd","incrementDegreeRoot","isUp","data","includes","incrementBeatLen","slice","incrementMinuteVal","pos","isTail","value","target","incrementMinuteValRelation","nearIndex","addChordElement","initialBeat","on","splice","addSectionElement","labelName","addChangeElement","changeType","modulateRelation","domminantValue","keyAdjust","tempoRelation","tempoDiff","tempoRate","tempoAbsolute","beatSignature","removeCurElement","wrapRef","reffers","wrap","body","style","opacity","overflow","width","clientWidth","incrementSymbol","setDiatonicChord","scaleIndex","chord","setDefaultBacking","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","setNotesList","notesList","setInstrument","incrementCurNoteKey","isUpper","mode","scaleIndexies","cur","prevPitchIndex","pitchIndex","tempPitchIndex","adjustScrollY","moveFocus","updateCurChord","moveDistFocus","x","beatWidth","left","searchedChord","addNotes","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","focusStart","delNum","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","normal","moveNotes","isBehind","curNormalLeft","prevNormalRight","nextNormalLeft","moveNormal","table","melody","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","firstTime","pitch","time","isSolo","copyNotes","num","cloneNotesList","baseUnit","unit","useUnit","pasteNotes","concat","sort","a","b","posA","posB","openBackingEditor","hideMenu","voicingTable","getInitVoicingTable","chordInfo","chordRoot","closeBackingEditor","getInitialLayer","noteDivList","rate","isDot","div3","velocityList","Array","col","isExist","voicing","applyBackingToChordData","channelSize","channels","layers","layer","divs","signals","record","cell","y","val","signal","addPatternColumn","layerIndex","lenList","newLen","lenIndex","column","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","channelIndex","setCurrentDivRate","toggleCurrentDivHalf","getNotes","setNotes","deleteColumn","changeLayer","this","initialStore","userEnv","keyConfig","note","prevElement","nextElement","prevSection","nextSection","addChord","addSection","addChange","deleteCur","editMode","incRoot","decRoot","incBeat","decBeat","symbolMode","colorProps","entryBackground","dialogMode","isTune","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","soundfontInfo","gain","scaleMode","resize","move","shift","control","Sampler","toDestination","harmonize","measure","harmoniizeInvalidate","SysModalDialog","useContext","GlobalContext","isDisplay","_Blind","_Frame","styled","div","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isDisable","disable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","onClick","_Icon","_Label","ChannelContents","_Contents","css","TabbedPane","TabLabel","_TabLabel","TabContents","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ScoreBuilder","curIndex","addChordDiatonic","getScoreData","fixed","ManageTab","source","setSource","_Wrap","_Left","_Link","JSON","stringify","scale","timeSignature","builder","_Right","_Source","onChange","e","_ButtonsDiv","_Button","parse","textarea","SymbolEditor","curSymbol","baseSymbol","derives","parentJsx","curJsx","childrenJsx","_Header","_Row","CalcChord","symbolName","bar","prevCache","isError","beat","chordName","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","beatSum","barRem","_Len","_Border","ElementDetailChange","_Type","ElementDetailChord","degreeRoot","degreeOn","useMemo","_Degree","isSwitch","isCurrent","scaleRelation","isOnChordScale","_DegreeRoot","_DegreeSymbol","_DegreeOnChord","_Tip","jsxList","lenType","valueType","abs","_TipItem","ElementFixedBorder","reverse","ElementDetailInit","_Title","_Value","_Record","ElementDetailSection","CalcChange","ScoreElement","useRef","bodyRef","current","isFocus","isSameSection","chordDetail","ref","isSelectable","isInactive","isChord","_Head","_CurKey","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","_Note","HarmonizeUtil","update","clearTimeout","previewCurHarmony","NoteBasicInput","config","curType","soundfont","playChordSoundfont","Number","NoteKeySwitch","isPress","isElement","timing","velocityAdjust","backingEditorInput","NoteKeyDown","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","isRootActive","isOnActive","_RootItem","isDiatonic","onContextMenu","symbolItemsJsx","_SymbolItem","_Timing","_LabelBeat","_Minute","_LabelMinute","_MinuteItem","isReverse","step","min","max","_Root","_Symbol","input","SideFormInit","scaleItemJsxList","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_TempoWrap","currentTarget","valueAsNumber","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","indexOf","_TemplateItem","numberItemJsxList","toString","_NumberItem","_DirectText","_TemplateFrame","_NumberFrame","_ItemBase","NoteSideForm","HarmMeasure","dataList","curBeatJsx","prevBeatJsx","nextBeatJsx","curMinuteJsx","prevMinuteJsx","nextMinuteJsx","memoriJsxList","prevIndex","nextIndex","temp","add","sustain","adjust","bean","height","color","_Memori","_Bar","_Prev","_Start","_Cur","_Next","_Blocks","_Measure","BEAT_WIDTH","ChordInfo","scaleList","structJsxList","tipJsxList","relation","getIntervalValues","_InfoItem","isScale","isUse","isBlack","_Struct","WIDTH","InitialBeatTip","_WrapTip","BackingUtil","OCTAVE_NUM","STRUCT_NUM","CHANNEL_MAX","getInitialRecord","divCount","fill","getVoicingStructs","structIndex","getChannels","voicingStructs","size","channel","PatternLength","itemJsxList","isEdit","PatternTable","channelCount","layerJsxList","jsxLsit","notesJsxLsit","k","setNotesStatus","status","_Notes","_State","isEven","isFront","_Layer","zIndex","PatternBuilder","_LengthDiv","_MeasureDiv","_Body","_Footer","PATTERN_HEADER_HEIGHT","ChannelItem","_Option","initialCellArray","PatternChannel","channelJsxList","soundIndex","PatternStatus","createItem","callback","isEnable","createRateItem","String","setRate","sizeJsxList","_ListItem","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","selectedCell","editModeJsx","_WrapEdit","select","option","PatternFrame","isUsePattern","_UseSwitch","isUsePedal","_Main","_StatusDiv","_MainDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","voicingLaneJsxList","isSelected","chordIndex","_VoicingItem","_VoicingLane","_Relation","_Info","TIP_WIDTH","BackingEditorFrame","_FooterDiv","HarmHideFrame","isOpen","HarmonizeTab","focus","prevBeat","totalBeat","prevMinute","totalMinute","sectionBeatSum","beatRate","getBeatRate","tabIndex","onKeyDown","onKeyUp","_Middle","_PrevireBrind","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_HEAD_WIDTH","HarmSections","sections","curSectionNo","section","_Total","MelodyTimeline","measureRef","chordRef","barLength","timelineLength","measureJsxList","barJsx","_Scale","isHead","chordJsxList","symbolNmae","degreeName","_ChordItem","_DegreeName","_ChordName","_ChordWrap","_MousePos","span","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","info","Soundfont","AudioContext","release","then","soundFontPlayer","QuantizeSwitch","ControlButton","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","mouseDownEvent","button","mouse","getNextLeft","next","rect","getBoundingClientRect","clientX","scrollLeft","clientY","scrollTop","prev","mouseMoveEvent","curPos","posX","lenWidth","prevFocus","right","mouseUpEvent","MelodyInput","keyDownEvent","alert","keySwitchEvent","MelodyFrame","tableRef","pitchRef","tableWidth","barCount","scaleLineJsxList","_ScaleLine","isBase","notesJsxList","notesLeft","notesRight","middle","focusEnd","_NotesWrap","isOctave","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","onMouseDown","onMouseMove","onMouseUp","_Test","editAnimation","keyframes","EditTab","switchMode","preview","toggleEnsamble","_Mode","_ModeItem","_Buttons","_Switch","_SwitchInner","_SECTIONS","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","label","items","degree","degreeRootName","chordRootName","triggerAttack","_Lane","_Box","MainFrame","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","fadeIn","TotalHeader","_ACCENT","_NORMAL","_Menu","_LoginButton","_Language","_MenuItem","TOTAL_HEADER_WIDTH","createContext","SystemEntry","useReducer","Provider","App","document","oncontextmenu","window","addEventListener","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3e4324bb.chunk.js","sourcesContent":["import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n    SET_INVALIDATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n        case ActionType.SET_INVALIDATE:\r\n            store.invalidate = payload.invalidate;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature } from \"../redux/store/scoreData\";\r\n\r\nexport const SCALE_INDEX = [0, 2, 4, 5, 7, 9, 11];\r\n\r\nexport type DegreeProps = {\r\n    index: number;\r\n    isFlat: boolean;\r\n};\r\n\r\nexport type ChordProps = {\r\n    root: DegreeProps;\r\n    symbolKey: SymbolKey;\r\n};\r\n\r\nexport const ROOT_ALL: readonly (DegreeProps | null)[] = [\r\n    null,\r\n    { index: 0, isFlat: false },\r\n    { index: 1, isFlat: false },\r\n    { index: 1, isFlat: true },\r\n    { index: 2, isFlat: false },\r\n    { index: 3, isFlat: false },\r\n    { index: 3, isFlat: true },\r\n    { index: 4, isFlat: false },\r\n    { index: 5, isFlat: false },\r\n    { index: 6, isFlat: false },\r\n    { index: 6, isFlat: true },\r\n    { index: 7, isFlat: false },\r\n    { index: 8, isFlat: false },\r\n    { index: 8, isFlat: true },\r\n    { index: 9, isFlat: false },\r\n    { index: 10, isFlat: false },\r\n    { index: 10, isFlat: true },\r\n    { index: 11, isFlat: false }\r\n];\r\n\r\n\r\nexport const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\n// export const DEGREE12_FLAT_LIST = [\r\n//     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n// ];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const getDegreeRoot = (props: DegreeProps) => {\r\n    const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n    return list[props.index];\r\n}\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\n\r\nexport const getChordRoot = (props: DegreeProps, baseKeyIndex: number) => {\r\n    const list = props.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n    return list[(baseKeyIndex + props.index) % 12];\r\n}\r\n\r\n\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\n// export const KEY12_MINOR_SCALE_LIST = [\r\n//     'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'Bbm', 'Bm'\r\n// ];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n];\r\n\r\nexport type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\nexport type SymbolKey =\r\n    'major' |\r\n    'minor' |\r\n    'suspend4th' |\r\n    'diminish' |\r\n    'augument' |\r\n    'major-maj7th' |\r\n    'major-min7th' |\r\n    'minor-7th' |\r\n    'minor-maj7th' |\r\n    'sus4-7th' |\r\n    'diminish-7th' |\r\n    'augument-7th' |\r\n    'major-add9th' |\r\n    'minor-add9th' |\r\n    'sixth-9th' |\r\n    'minor-minus5' |\r\n    'minor7-minus5' |\r\n    'major-maj9th' |\r\n    'major-9th'\r\n    ;\r\n\r\n\r\nexport type SymbolAttribute =\r\n    'triad' |\r\n    'seventh' |\r\n    'add9th'\r\n    ;\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey;\r\n    name: string;\r\n    base: null | SymbolKey;\r\n    attr?: SymbolAttribute;\r\n    structs: IntervalRelation[];\r\n}\r\n\r\nexport const SYMBOL_LIST: readonly SymbolParams[] = [\r\n    {\r\n        key: 'major', name: '',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor', name: 'm',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'suspend4th', name: 'sus4',\r\n        base: null,\r\n        structs: ['p1', 'p4', 'p5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish', name: 'dim',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'diminish-7th', name: 'dim7',\r\n        base: 'diminish',\r\n        structs: ['p1', 'm3', 'd5', 'd7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'augument', name: 'aug',\r\n        base: null,\r\n        structs: ['p1', 'M3', 'a5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'augument-7th', name: 'aug7',\r\n        base: 'augument',\r\n        structs: ['p1', 'M3', 'a5', 'm7']\r\n    },\r\n    {\r\n        key: 'minor-minus5', name: 'm(-5)',\r\n        base: null,\r\n        structs: ['p1', 'm3', 'd5'],\r\n        attr: 'triad'\r\n    },\r\n    {\r\n        key: 'minor7-minus5', name: 'm7(-5)',\r\n        base: 'minor-minus5',\r\n        structs: ['p1', 'm3', 'd5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-maj7th', name: 'maj7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-min7th', name: '7',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'minor-7th', name: 'm7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'm7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'sus4-7th', name: '7sus4',\r\n        base: 'suspend4th',\r\n        structs: ['p1', 'p4', 'p5']\r\n    },\r\n    {\r\n        key: 'minor-maj7th', name: 'mmaj7',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M7'],\r\n        attr: 'seventh'\r\n    },\r\n    {\r\n        key: 'major-add9th', name: 'add9',\r\n        base: 'major',\r\n        structs: ['p1', 'M3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'minor-add9th', name: 'madd9',\r\n        base: 'minor',\r\n        structs: ['p1', 'm3', 'p5', 'M2'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-maj9th', name: 'maj9',\r\n        base: 'major-maj7th',\r\n        structs: ['p1', 'm3', 'p5'],\r\n        attr: 'add9th'\r\n    },\r\n    {\r\n        key: 'major-9th', name: '9',\r\n        base: 'major-min7th',\r\n        structs: ['p1', 'm3', 'p5']\r\n    },\r\n];\r\n\r\nexport type IntervalRelation =\r\n    'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n    'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n    'd7' | 'm7' | 'M7'\r\n    ;\r\n\r\nexport const IntervalRelationProps = {\r\n    'p1': 0,\r\n    'm2': 1,\r\n    'M2': 2,\r\n    'm3': 3,\r\n    'M3': 4,\r\n    'p4': 5,\r\n    'd5': 6,\r\n    'p5': 7,\r\n    'a5': 8,\r\n    'm6': 8,\r\n    'M6': 9,\r\n    'd7': 9,\r\n    'm7': 10,\r\n    'M7': 11\r\n}\r\n\r\nexport const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n    { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n    { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n    { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n];\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n];\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    'bⅢ', 'bⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    'bⅥ', 'bⅥM7',\r\n    'bⅦ', 'bⅦ7'\r\n];\r\n\r\nexport const getSymbolFromKey = (key: SymbolKey): SymbolParams => {\r\n    const ret = SYMBOL_LIST.find((symbol) => {\r\n        if (key === symbol.key) {\r\n            return symbol;\r\n        }\r\n    });\r\n    return ret != undefined ? ret : SYMBOL_LIST[0];\r\n}\r\n\r\nexport const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n    let list: SymbolKey[] = [];\r\n    SYMBOL_LIST.forEach((symbol) => {\r\n        if (key === symbol.base) {\r\n            list.push(symbol.key);\r\n        }\r\n    });\r\n    return list;\r\n}\r\n\r\nexport const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n    return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n}\r\n\r\nexport const getBeatRate = (beatSignature: BeatSignature): [number, number] => {\r\n\r\n    switch (beatSignature) {\r\n        case '4/4': return [4, 4];\r\n        case '3/4': return [3, 4];\r\n    }\r\n    return [0, 0];\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SymbolAttribute } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = getSymbolFromKey(detail.symbolKey);\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null\r\n    };\r\n    return backing;\r\n}","import { isatty } from \"tty\";\r\nimport { MelodyState } from \"../redux/store/melodyState\";\r\nimport { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"./theoryUtils\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { ScoreState } from \"../redux/store/scoreState\";\r\nimport ElementDetailChord from \"../contents/score/edit/harmonize/elements/form/elementDetailChord\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += notes.len4;\r\n    total += notes.len8 / 2;\r\n    total += notes.len16 / 4;\r\n    total += notes.len4div3 / 3;\r\n    total += notes.len8div3 / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    return getSortetdNotesLen({\r\n        len4: notes1.len4 + notes2.len4,\r\n        len8: notes1.len8 + notes2.len8,\r\n        len16: notes1.len16 + notes2.len16,\r\n        len4div3: notes1.len4div3 + notes2.len4div3,\r\n        len8div3: notes1.len8div3 + notes2.len8div3\r\n    });\r\n}\r\n\r\nexport const getSortetdNotesLen = (base: MelodyLength) => {\r\n\r\n    const len8div3Cnt3 = Math.floor(base.len8div3 / 3);\r\n    base.len8div3 -= len8div3Cnt3 * 3;\r\n    base.len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(base.len8div3 / 2);\r\n    base.len8div3 -= len8div3Cnt2 * 2;\r\n    base.len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(base.len4div3 / 3);\r\n    base.len4div3 -= len4div3Cnt3 * 3;\r\n    base.len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(base.len16 / 2);\r\n    base.len16 -= len16Cnt2 * 2;\r\n    base.len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(base.len8 / 2);\r\n    base.len8 -= len8Cnt2 * 2;\r\n    base.len4 += len8Cnt2;\r\n\r\n    return base;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n    return getSortetdNotesLen({\r\n        len4, len8, len16, len4div3, len8div3\r\n    });\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if (notes.len8div3 > 0) return 6;\r\n    else if (notes.len16 > 0) return 4;\r\n    else if (notes.len4div3 > 0) return 3;\r\n    else if (notes.len8 > 0) return 2;\r\n    else if (notes.len4 > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playPiano = (soundFullName: string, store: Store, duration: number) => {\r\n    const instrument = store.instruments.piano;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, { duration });\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.piano;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nexport const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const state = store.melodyState;\r\n    const data = store.scoreData;\r\n    const reserveTasks: NodeJS.Timeout[] = [];\r\n    const instrument = store.instruments.soundfontPlayer;\r\n    const init = data.chordList[0].detail as DetailInit;\r\n    const bpm = init.bpm;\r\n    state.lastFocus = state.focusIndex;\r\n    state.isPreview = true;\r\n    let firstTime = -1;\r\n    for (let i = state.focusIndex; i < data.notesList.length; i++) {\r\n        const notes = data.notesList[i];\r\n        const pos = getNormalizeLenFromNotes(notes.pos);\r\n        const len = getNormalizeLenFromNotes(notes.len);\r\n        const pitch = notes.pitchIndex;\r\n        const time = 60 / bpm * pos;\r\n\r\n        // 開始時のノーツの位置（時間）を保存する。\r\n        if (firstTime === -1) {\r\n            firstTime = time;\r\n        }\r\n\r\n        reserveTasks.push(\r\n            setTimeout(() => {\r\n                state.focusIndex = i;\r\n                state.distIndex = state.focusIndex;\r\n                // state.mouseState.curChord = searchCurChord(store, i);\r\n                dispatcher.tune.setState(state);\r\n                dispatcher.tune.adjustScrollX();\r\n                if (instrument != null) {\r\n                    const keyIndex = getKeyIndexFromPitcher(pitch);\r\n                    const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n                    const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n                    instrument.stop();\r\n                    instrument.play(soundName + octave, 0, { duration: 60 / bpm * len });\r\n                }\r\n            }, (time - firstTime) * 1000)\r\n        );\r\n\r\n        if (i === data.notesList.length - 1) {\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    stopPreview(store, dispatcher, reserveTasks);\r\n                }, (time - firstTime + 60 / bpm * len) * 1000)\r\n            );\r\n        }\r\n    }\r\n\r\n    // ハーモニーを再生\r\n    if (!state.isSolo) {\r\n        previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n    }\r\n\r\n\r\n    dispatcher.system.setReserveTasks(reserveTasks);\r\n    dispatcher.tune.setState(state);\r\n}\r\n\r\nexport const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n    const state = store.melodyState;\r\n    state.isPreview = false;\r\n    state.focusIndex = state.lastFocus;\r\n    state.distIndex = state.focusIndex;\r\n    reserveTasks.forEach(id => clearInterval(id));\r\n    store.instruments.sampler.releaseAll();\r\n    dispatcher.tune.setState(state);\r\n    dispatcher.tune.adjustScrollX();\r\n}\r\n\r\nexport const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n    const state = store.scoreState;\r\n    const sampler = store.instruments.sampler;\r\n    const cacheList = state.elementCacheList;\r\n    const chordList = store.scoreData.chordList;\r\n    // const reserveTasks = store.reserveTasks;\r\n    const init = chordList[0].detail as DetailInit;\r\n    const adjsut = 0;\r\n    for (let i = 3; i < chordList.length; i++) {\r\n        const cache = cacheList[i];\r\n        const element = chordList[i];\r\n        if (element.type === 'chord') {\r\n            if (cache.pastSecond < start) continue;\r\n\r\n            const detail = element.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const channelList = detail.backing.voicingList.map((item) => {\r\n                const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n                return 12 * item.octave + rootIndex + interval;\r\n            });\r\n\r\n            const chordTime = 60 / init.bpm * len;\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // sampler.releaseAll();\r\n                    // stopPiano(store);\r\n                    store.melodyState.mouseState.curChord = element;\r\n                    dispatcher.tune.setState(store.melodyState);\r\n\r\n                    const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                    const div = pickingDelay / channelList.length;\r\n\r\n                    channelList.forEach((index, j) => {\r\n                        const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        playPiano(soundFullName, store, chordTime);\r\n                    });\r\n\r\n                    //     stopPiano(store);\r\n                    //     channelList.forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 4 + div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.reverse().forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 8 * 3 + div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.reverse().forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 8 * 5 +  div * j)\r\n                    //         );\r\n                    //     });\r\n                    //     channelList.forEach((index, j) => {\r\n\r\n                    //         reserveTasks.push(\r\n                    //             setTimeout(() => {\r\n                    //                 const soundName = KEY12_SHARP_LIST[index % 12];\r\n                    //                 const octave = Math.floor(index / 12);\r\n                    //                 const soundFullName = soundName + octave;\r\n                    //                 playPiano(soundFullName, store, chordTime);\r\n                    //             }, chordTime * 1000 / 8 * 6 +  div * j)\r\n                    //         );\r\n                    //     });\r\n                }, cache.pastSecond - start - adjsut)\r\n            );\r\n        }\r\n    }\r\n}\r\n","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 60;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SCALE_INDEX, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordElement, DetailChange, DetailChord, DetailInit, DetailSection, ScoreData, TuneNotes, VoicingProps } from \"../store/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { BackingLayer, BackingPattern, BackingState, ChannelParam, NoteDiv, NoteRate, NoteStatus } from \"../store/backingState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont, previewStart } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\nimport { Invalidate } from \"../store/invalidate\";\r\nimport HarmonizeUtil from \"../../utils/harmonizeUtil\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        },\r\n\r\n        setInvalidate: (invalidate: Invalidate) => {\r\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        setPiano: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, piano: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            // alert(`totalSection=${sectionCacheList.length}, curSection=${curSectionIndex}, focus=${state.focusIndex}`);\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -0.5 && target <= 0.5) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: state.initialBeat,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        addChangeElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'change', detail: {\r\n                    changeType: null,\r\n                    modulateRelation: null,\r\n                    domminantValue: 0,\r\n                    keyAdjust: 0,\r\n                    tempoRelation: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbsolute: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailChange\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        removeCurElement: () => {\r\n            const state = this.store.scoreState;\r\n            const element = this.store.scoreData.chordList[state.focusIndex];\r\n            const sectionNo = this.store.scoreState.elementCacheList[state.focusIndex].sectionNo;\r\n            if (element.type === 'section' && sectionNo === 0) {\r\n                return;\r\n            }\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // reffer.style.width = '300px';\r\n            wrapRef.style.opacity = '0';\r\n            wrapRef.style.overflow = 'hidden';\r\n            // wrapRef.style.padding = '0';\r\n            wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            setTimeout(() => {\r\n                wrapRef.style.width = '0';\r\n            }, 1);\r\n            setTimeout(() => {\r\n                wrapRef.style.opacity = '';\r\n                wrapRef.style.width = '';\r\n                wrapRef.style.overflow = '';\r\n                // wrapRef.style.padding = '';\r\n                const data = this.store.scoreData;\r\n                data.chordList.splice(state.focusIndex, 1);\r\n                this.score.setScoreData(data);\r\n                state.focusIndex--;\r\n                this.score.setScoreState(state);\r\n                // setTimeout(() => {\r\n                //     reffer.style.opacity = '';\r\n                //     reffer.style.width = '';\r\n                //     const data = this.store.scoreData;\r\n                //     data.chordList.splice(state.focusIndex, 1);\r\n                //     this.score.setScoreData(data);\r\n                // }, 200);\r\n            }, 200);\r\n        },\r\n\r\n        incrementSymbol: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                detail.root = { index: 0, isFlat: false };\r\n                this.score.setScoreData(data);\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        setDiatonicChord: (scaleIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const chord = DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n            detail.root = { ...chord.root };\r\n            detail.symbolKey = chord.symbolKey;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreState(state);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    public tune = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        setNotesList: (notesList: TuneNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setInstrument: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        incrementCurNoteKey: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n\r\n            const focusIndex = this.store.melodyState.focusIndex;\r\n            if (focusIndex === -1) return;\r\n\r\n            const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n            const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            const cur = notesList[focusIndex];\r\n            const prevPitchIndex = cur.pitchIndex;\r\n            const interval = mode !== 'octave' ? 1 : 12;\r\n            let tempPitchIndex = cur.pitchIndex;\r\n\r\n            while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                if (mode !== 'scale' ||\r\n                    (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                ) {\r\n                    cur.pitchIndex = tempPitchIndex;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // 値が変わっていた場合のみ処理する\r\n            if (prevPitchIndex !== cur.pitchIndex) {\r\n                playSoundfont(cur.pitchIndex, this.store);\r\n                // 画面更新のためにインスタンスを複製する\r\n                this.tune.setNotesList(notesList.slice());\r\n\r\n                this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.distIndex = state.focusIndex;\r\n                    this.tune.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.distIndex = state.focusIndex;\r\n                    this.tune.setState(state);\r\n                }\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n            this.tune.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        moveDistFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.distIndex > 0 : state.distIndex < notesList.length - 1) {\r\n                state.distIndex += (isNext ? 1 : -1);\r\n                this.tune.setState(state);\r\n            }\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.mouseState.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(state.focusIndex + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.distIndex = state.focusIndex;\r\n                this.tune.setState(state);\r\n            }\r\n\r\n            this.tune.adjustScrollX();\r\n        },\r\n\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const delNum = focusEnd - focusStart + 1;\r\n            notesList.splice(state.focusIndex, delNum);\r\n            this.tune.setNotesList(notesList);\r\n            state.focusIndex = focusStart - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curNormalLeft = getNormalizeLenFromNotes(cur.pos);\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = curNormalLeft + curLenNormal;\r\n            const prevNormalRight = state.focusIndex === 0 ? 0 : getNormalizeLenFromNotes(notesList[state.focusIndex - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.distIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            previewStart(this.store, this);\r\n        },\r\n\r\n        copyNotes: () => {\r\n\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const num = focusEnd - focusStart + 1;\r\n\r\n            const cloneNotesList: TuneNotes[] = [];\r\n            const base = notesList[focusStart].pos;\r\n            const baseUnit = getMinimumLenUnit(base);\r\n            for (let i = 0; i < num; i++) {\r\n                const notes = notesList[i + focusStart];\r\n                const unit = getMinimumLenUnit(notes.pos);\r\n                const useUnit = baseUnit < unit ? baseUnit : unit;\r\n                cloneNotesList.push({\r\n                    pitchIndex: notes.pitchIndex,\r\n                    pos: getNotesLenFromQuantize(getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base), useUnit),\r\n                    len: { ...notes.len }\r\n                });\r\n            }\r\n            state.cloneNotesList = cloneNotesList;\r\n            // notesList.splice(state.focusIndex, num);\r\n            // this.tune.setNotesList(notesList);\r\n            // state.focusIndex = focusStart - 1;\r\n            // state.distIndex = state.focusIndex;\r\n            this.tune.setState(state);\r\n            // alert(JSON.stringify(state.cloneNotesList));\r\n        },\r\n\r\n        pasteNotes: () => {\r\n            // alert('pasteNotes');\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList = notesList.concat(state.cloneNotesList);\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                data.notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                this.score.setScoreData(data);\r\n                // state.focusIndex++;\r\n                // state.distIndex = state.focusIndex;\r\n                // this.tune.setState(state);\r\n            }\r\n\r\n            // this.tune.adjustScrollX();\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n            const voicingTable = this.backing.getInitVoicingTable(detail.backing.voicingList);\r\n            this.backing.setState({\r\n                chordInfo: {\r\n                    symbolKey: detail.symbolKey,\r\n                    beatLen: detail.beatLen,\r\n                    minute: detail.minute,\r\n                    chordRoot: ((detail.root as DegreeProps).index + cache.keyIndex) % 12\r\n                },\r\n                voicingTable,\r\n                pattern: null\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setState: (backingState: BackingState) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingLayer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingLayer;\r\n        },\r\n\r\n        getInitVoicingTable: (voicingList: VoicingProps[]): boolean[][] => {\r\n            const table = new Array<boolean[]>(8);\r\n            for (let i = 0; i < table.length; i++) {\r\n                table[i] = new Array<boolean>(6);\r\n                const col = table[i];\r\n                for (let j = 0; j < col.length; j++) {\r\n                    const isExist = voicingList.find(voicing => {\r\n                        if (voicing.octave === i && voicing.struct === j) {\r\n                            return voicing;\r\n                        }\r\n                    });\r\n                    table[i][j] = isExist != null;\r\n                }\r\n            }\r\n            return table;\r\n        },\r\n\r\n        applyBackingToChordData: () => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[scoreState.focusIndex].detail as DetailChord;\r\n            const backingState = this.store.backingState as BackingState;\r\n            const voicingTable = backingState.voicingTable;\r\n            const backing = detail.backing;\r\n            backing.voicingList.length = 0;\r\n            if (voicingTable != null) {\r\n                for (let i = 0; i < voicingTable.length; i++) {\r\n                    for (let j = 0; j < voicingTable[i].length; j++) {\r\n                        if (voicingTable[i][j]) {\r\n                            backing.voicingList.push({ octave: i, struct: j });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (backingState.pattern == null) {\r\n                detail.backing.pattern = null;\r\n            } else {\r\n                const channelSize = backingState.pattern.channels.length;\r\n                const layers: BackingLayerData[] = [];\r\n                backingState.pattern.layers.forEach(layer => {\r\n                    const divs: NoteDiv[] = layer.noteDivList;\r\n                    const signals: BackingSignalProps[] = [];\r\n                    layer.table.forEach((record, i) => {\r\n                        record.forEach((cell, j) => {\r\n                            signals.push({ x: j, y: i, val: cell == null ? '-' : cell.signal });\r\n                        });\r\n                    });\r\n                    layers.push({ divs, signals });\r\n                });\r\n                backing.pattern = { channelSize, layers };\r\n            }\r\n            // detail.backing = backing;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        // getChannels: (table: boolean[][]): ChannelParam[] => {\r\n        //     const channels: ChannelParam[] = [];\r\n        //     for (let i = 0; i < table.length; i++) {\r\n        //         for (let j = 0; j < table[i].length; j++) {\r\n        //             if (table[i][j]) {\r\n        //                 channels.push({ octave: i, structIndex: j });\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     if (channels.length === 0) {\r\n        //         channels.push({ octave: -1, structIndex: 0 });\r\n        //     }\r\n        //     return channels;\r\n        // },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const newLen: NoteDiv = { rate: lenList[pattern.lenIndex].rate, div3: 0, isDot: false };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: NoteRate) => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.isDot = !cur.isDot;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex, 1);\r\n            });\r\n            layer.noteDivList.splice(pattern.lenIndex, 1);\r\n            // for(let i = 0; i < pattern.channels.length; i ++) {\r\n            //     layer.table[i].splice(pattern.lenIndex, 1);\r\n            // }\r\n            pattern.lenIndex--;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        changeLayer: () => {\r\n            const state = this.store.backingState as BackingState;\r\n            const pattern = state.pattern as BackingPattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        }\r\n    }\r\n}","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./scoreData\"\r\nimport { ScoreState } from \"./scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { BackingState } from \"./backingState\"\r\nimport { Invalidate } from \"./invalidate\"\r\n\r\n\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n\r\n    invalidate: Invalidate;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        dialogMode: 'none'\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        isTune: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        elementCacheList: [],\r\n        sectionCacheList: [],\r\n        keySwitch: {\r\n            editMode: false,\r\n            symbolMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 4,\r\n        beatWidth: 120,\r\n        mouseState: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 5\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false,\r\n            control: false,\r\n        },\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneNotesList: []\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        sampler: getDefaultSampler(),\r\n        piano: null,\r\n        soundfontPlayer: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: [],\r\n    invalidate: {\r\n        harmoniizeInvalidate: {},\r\n        harmonize: null,\r\n        melody: null\r\n    }\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note : {\r\n        prevElement: string;\r\n        nextElement: string;\r\n        prevSection: string;\r\n        nextSection: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        editMode: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        symbolMode: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = ()=> {\r\n    return {\r\n        note: {\r\n            prevElement: 'ArrowLeft',\r\n            nextElement: 'ArrowRight',\r\n            prevSection: 'ArrowUp',\r\n            nextSection: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'f',\r\n            deleteCur: 'Delete',\r\n            editMode: 'Shift',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n            symbolMode: 'c',\r\n        }\r\n    } as KeyConfig;\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SysModalDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const mode = store.systemState.dialogMode;\r\n    const isDisplay = mode !== 'none';\r\n\r\n    return (\r\n        <_Blind isDisplay={isDisplay}>\r\n            <_Frame>\r\n\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default SysModalDialog;\r\n\r\nconst _Blind = styled.div<{\r\n    isDisplay: boolean;\r\n}>`\r\n    display: ${props => props.isDisplay ? 'block' : 'none'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000000d8;\r\n    z-index: 10;\r\n`;\r\nconst _Frame = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 500px;\r\n    height: 400px;\r\n    background-color: #464646cc;\r\n    border: 1px solid #dadada;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    height: 35px;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - 35px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;","import { Dispatcher } from \"../../../redux/dispatcher/dispatcher\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData, VoicingProps } from \"../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../redux/store/store\";\r\nimport { getDefaultBacking } from \"../../../utils/instrumentsUtil\";\r\nimport { DegreeProps, DIATONIC_MAJOR_SCALE_LIST, getSymbolFromKey, SymbolKey } from \"../../../utils/theoryUtils\";\r\n\r\n\r\nclass ScoreBuilder {\r\n\r\n    private scoreData: ScoreData\r\n\r\n    private curIndex: number;\r\n\r\n    constructor(init: DetailInit) {\r\n        this.scoreData = {\r\n            chordList: [\r\n                { type: 'init', detail: init },\r\n                { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n            ],\r\n            notesList: []\r\n        };\r\n\r\n        this.curIndex = 3;\r\n    }\r\n\r\n    public addChord = (beatLen: number, root: DegreeProps, symbolKey: SymbolKey) => {\r\n\r\n        const symbol = getSymbolFromKey(symbolKey);\r\n        const backing: ChordBacking = symbol.attr == undefined ? { voicingList: [], pattern: null } : getDefaultBacking(symbol.attr);\r\n        this.scoreData.chordList.splice(this.curIndex, 0, {\r\n            type: 'chord', detail: {\r\n                beatLen, minute: { head: 0, tail: 0 }, root, on: null, symbolKey,\r\n                backing\r\n            } as DetailChord\r\n        });\r\n        this.curIndex++;\r\n    }\r\n\r\n    public addChordDiatonic = (beatLen: number, scaleIndex: number) => {\r\n        const chord = DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        this.addChord(beatLen, chord.root, chord.symbolKey);\r\n    }\r\n\r\n    public getScoreData = () => { return this.scoreData; }\r\n}\r\n\r\nexport default ScoreBuilder;","import { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [source, setSource] = useState<string>('');\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Left>\r\n                <_Link onClick={() => {\r\n\r\n                    const data: ScoreData = {\r\n                        chordList: [\r\n                            { type: 'init', detail: { keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' } as DetailInit },\r\n                            { type: 'fixed', detail: { fixed: 'Start' } as DetailFixed },\r\n                            { type: 'section', detail: { labelName: 'Section' } as DetailSection },\r\n                            {\r\n                                type: 'chord', detail: {\r\n                                    beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n                                    backing: {\r\n                                        voicingList: [],\r\n                                        pattern: null\r\n                                    }\r\n                                } as DetailChord\r\n                            },\r\n                            { type: 'fixed', detail: { fixed: 'End' } as DetailFixed },\r\n                        ],\r\n                        notesList: []\r\n                    };\r\n                    setSource(JSON.stringify(data));\r\n                }} >Create an empty score.</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 2);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 1);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    setSource(JSON.stringify(builder.getScoreData()));\r\n                }} >Ⅰ→Ⅴ→Ⅵ→Ⅲm→Ⅳ→Ⅰ→Ⅱm→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' });\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 0);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    builder.addChordDiatonic(2, 3);\r\n                    builder.addChordDiatonic(2, 4);\r\n                    builder.addChordDiatonic(2, 5);\r\n                    setSource(JSON.stringify(builder.getScoreData()));\r\n                }} >Ⅵm→Ⅳ→Ⅴ→Ⅰ→Ⅵm→Ⅳ→Ⅴ→Ⅰ</_Link>\r\n                <_Link onClick={() => {\r\n                    const builder = new ScoreBuilder({ keyIndex: 0, bpm: 100, scale: 'major', timeSignature: '4/4' });\r\n                    builder.addChordDiatonic(4, 3);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChordDiatonic(4, 2);\r\n                    builder.addChordDiatonic(4, 5);\r\n                    builder.addChordDiatonic(4, 1);\r\n                    builder.addChordDiatonic(4, 4);\r\n                    builder.addChord(4, { index: 0, isFlat: false }, 'suspend4th');\r\n                    builder.addChordDiatonic(4, 0);\r\n                    setSource(JSON.stringify(builder.getScoreData()));\r\n                }} >Ⅳ→Ⅴ→Ⅲm→Ⅵm→Ⅱm→Ⅴ→Ⅰsus4→Ⅰ</_Link>\r\n            </_Left>\r\n            <_Right>\r\n                <_Source value={source} onChange={e => setSource(e.target.value)} />\r\n                <_ButtonsDiv>\r\n                    <_Button onClick={() => {\r\n                        setSource(JSON.stringify(store.scoreData));\r\n                    }}>Reload</_Button>\r\n                    <_Button onClick={() => {\r\n                        const data = JSON.parse(source);\r\n                        dispatcher.score.setScoreData(data);\r\n                        store.scoreState.focusIndex = 2;\r\n                        dispatcher.score.setScoreState({ ...store.scoreState });\r\n\r\n                        dispatcher.score.setScoreTabIndex(1);\r\n                    }}>Apply</_Button>\r\n                </_ButtonsDiv>\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #888999;\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\nconst _Source = styled.textarea`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    height: calc(100% - 44px);\r\n    /* background-color: #7e7e7e; */\r\n    text-align: left;\r\n    font-size: 20px;\r\n    resize: none;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #5f5f5f;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    width: 100px;\r\n    background-color: #afafaf;\r\n    border: 1px solid #4d4d4d;\r\n    color: #292929;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    &:hover {\r\n        background-color: #c4c4c4;\r\n    }\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/scoreState\";\r\nimport { getSymbolDerives as getSymbolDerives, getSymbolFromKey, SymbolKey, SymbolParams, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = getSymbolFromKey(detail.symbolKey) as SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: SymbolKey[] = [];\r\n        const parentLine: SymbolKey[] = [];\r\n        const childrenLine: SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = getSymbolDerives(baseSymbol.key);\r\n            SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = getSymbolDerives(curSymbol.key);\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../../redux/store/scoreState\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        bar = cache.bar + 1;\r\n    }\r\n    const isError = bar !== -1 && cache.beat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n    }\r\n\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.beat === 0 ? <>&nbsp;</> : cache.beat}\r\n                        {/* {` (+0.25)`} */}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : ` (${cache.minute})`}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailChange } from \"../../../../../../redux/store/scoreData\";\r\n\r\nconst ElementDetailChange = (props: {\r\n    detail: DetailChange;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                Modulation\r\n            </_Type>\r\n            <_Detail>\r\n                Domm+1\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../../redux/store/scoreData\";\r\nimport { DIATONIC_MAJOR_SCALE_DEGREE_NAMES, getChordRoot, getDegreeRoot, getSymbolFromKey, ScaleRelation } from \"../../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 0.5 | 0.25;\r\n\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isCurrent: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const minute = props.detail.minute;\r\n\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = getChordRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = getChordRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    const symbolName = getSymbolFromKey(props.detail.symbolKey)?.name;\r\n    return useMemo(() =>\r\n        <_Wrap>\r\n            <_Degree\r\n                isSwitch={keySwitch.editMode && props.isCurrent}\r\n                scaleRelation={degreeRoot != null && DIATONIC_MAJOR_SCALE_DEGREE_NAMES.includes(degreeRoot + symbolName) ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}</_DegreeRoot>\r\n                    <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord>\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={keySwitch.editMode && props.isCurrent}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n        </_Wrap>\r\n        , [\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            state.keySwitch.editMode,\r\n            cache.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 28px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 20px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #422e3099;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 0.5 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 0.25 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;","import styled from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    const jsxList: JSX.Element[] = [];\r\n    jsxList.push(<_Border key={0} />);\r\n    jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    /* border: 1px solid #00000083; */\r\n    background-color: #c2c2c237;\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n    height: 100%;\r\n    background-color: #d1d1d1;\r\n    vertical-align: middle;\r\n`;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #1b003d6f;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST } from \"../../../../../../utils/theoryUtils\";\r\n\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.timeSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst ElementDetailSection = (props: {\r\n    index: number;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>{curSection.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcChange = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>Key</_Type>\r\n            <_Detail>C→Am</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcChange;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { ElementType, useContext, useEffect, useRef } from \"react\";\r\nimport { CgDetailsLess } from \"react-icons/cg\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TypeElement } from \"typescript\";\r\nimport { DetailChange, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_SHARP_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SymbolEditor from \"../input/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailChange from \"./form/elementDetailChange\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcChange from \"./calc/calcChange\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = store.scoreState;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        dispatcher.score.setScoreState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    // if (props.index > state.elementCacheList.length - 1) {\r\n    //     return <></>;\r\n    // }\r\n\r\n    const isFocus = state.focusIndex === props.index;\r\n    const isSameSection = state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n    return (\r\n        <_Wrap\r\n            ref={wrapRef}\r\n            isSelectable={element.type !== 'fixed'}\r\n            isActive={isFocus}\r\n            isInactive={!isSameSection}\r\n            isChord={element.type === 'chord'}\r\n        >\r\n            <_Head>\r\n                {element.type !== 'chord' ? <></> : (\r\n                    <_CurKey>{KEY12_SHARP_LIST[cache.keyIndex]}</_CurKey>\r\n                )}\r\n            </_Head>\r\n\r\n            {/* 要素の入力フォーム */}\r\n            {['init', 'chord', 'section', 'change'].includes(element.type) ? (\r\n                <_Form\r\n                    ref={bodyRef}\r\n                    isActive={isFocus}\r\n                    isInactive={!isSameSection}\r\n                    type={element.type}\r\n                    isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                    onClick={() => {\r\n                        if (element.type === 'fixed') {\r\n                            return;\r\n                        }\r\n                        state.focusIndex = props.index;\r\n                        dispatcher.score.setScoreState(state);\r\n                    }}\r\n                >{(() => {\r\n                    switch (element.type) {\r\n                        case 'init': {\r\n                            const detail = element.detail as DetailInit;\r\n                            return (<ElementDetailInit detail={detail} />);\r\n                        }\r\n                        case 'section': {\r\n                            const detail = element.detail as DetailSection;\r\n                            return (<ElementDetailSection index={props.index} />);\r\n                        }\r\n                        case 'chord': {\r\n                            const detail = element.detail as DetailChord;\r\n                            return (<ElementDetailChord detail={detail} isCurrent={isFocus} />);\r\n                        }\r\n                        case 'change': {\r\n                            const detail = element.detail as DetailChange;\r\n                            return (<ElementDetailChange detail={detail} />);\r\n                        }\r\n                    }\r\n                })()}\r\n                </_Form>\r\n            ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n            {/* 入力フォーム下部の計算によって出力される情報 */}\r\n            {\r\n                element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                    element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                        element.type === 'change' ? (<CalcChange index={props.index} />) :\r\n                            <></>\r\n            }\r\n            <>{!(isCurrent && chordDetail != null && chordDetail.root != null && store.scoreState.keySwitch.symbolMode) ? '' :\r\n                <SymbolEditor />\r\n            }</>\r\n            {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                <_Operations>\r\n                    <_OperationItem>-</_OperationItem>\r\n                    <_OperationItem onClick={() => dispatcher.score.addChordElement()}>+</_OperationItem>\r\n                </_Operations>\r\n            )}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    border: solid 1px #00000049;\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #ff000084;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #006823a7;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'change' ? '' : css`\r\n        border: solid 1px #1800a1a7;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 6px;\r\n    ${props => props.isInactive ? '' : css`\r\n        background-color: #ebebeb84;\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #d85cce5a;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isChord: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isChord ? '' : css`\r\n        background-color: #e4ecd039;\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #fffb0018;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\nimport SymbolEditor from \"./input/symbolEditor\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const num = store.scoreData.chordList.length;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (store.scoreState.elementCacheList.length === num) {\r\n        for (let i = 0; i < num; i++) {\r\n            list.push(\r\n                <ScoreElement key={i} index={i} />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Frame> */}\r\n            <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note>\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #f1f1f1;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, DetailInit } from \"../redux/store/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { playPiano } from \"./melodyUtil\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"./theoryUtils\";\r\n\r\nclass HarmonizeUtil {\r\n\r\n    static previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n        const state = store.scoreState;\r\n        const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        const reserveTasks = store.reserveTasks;\r\n        let firstTime = -1;\r\n        const update = () => {\r\n            // if (store.invalidate.harmonize) {\r\n            //     store.invalidate.harmonize();\r\n            // }\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n        // const reserveTasks = store.reserveTasks;\r\n        const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = state.focusIndex; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                // 開始時のノーツの位置（時間）を保存する。\r\n                if (firstTime === -1) {\r\n                    firstTime = cache.pastSecond;\r\n                }\r\n\r\n\r\n                if (detail.root == null) return;\r\n\r\n                const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n                const symbol = getSymbolFromKey(detail.symbolKey);\r\n                const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                const channelList = detail.backing.voicingList.map((item) => {\r\n                    const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n                    return 12 * item.octave + rootIndex + interval;\r\n                });\r\n\r\n                const chordTime = 60 / init.bpm * len;\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // sampler.releaseAll();\r\n                        // stopPiano(store);\r\n                        // store.melodyState.mouseState.curChord = element;\r\n                        // dispatcher.tune.setState(store.melodyState);\r\n\r\n                        channelList.forEach((index, j) => {\r\n                            const soundName = KEY12_SHARP_LIST[index % 12];\r\n                            const octave = Math.floor(index / 12);\r\n                            const soundFullName = soundName + octave;\r\n                            playPiano(soundFullName, store, chordTime);\r\n                        });\r\n                        state.focusIndex = i;\r\n                        update();\r\n\r\n                    }, cache.pastSecond - firstTime - adjsut)\r\n                );\r\n            }\r\n\r\n            if (i === chordList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (cache.pastSecond - firstTime - adjsut))\r\n                );\r\n            }\r\n        }\r\n        state.isPreview = true;\r\n        update();\r\n    }\r\n\r\n    static stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        state.isPreview = false;\r\n        // store.instruments.sampler.releaseAll();\r\n        // state.focusIndex = state.lastFocus;\r\n        reserveTasks.forEach(id => clearTimeout(id));\r\n        dispatcher.system.setReserveTasks([]);\r\n        dispatcher.score.setScoreState(state);\r\n\r\n        store.instruments.piano?.stop();\r\n    }\r\n\r\n    static previewCurHarmony = (store: Store) => {\r\n\r\n        const state = store.melodyState;\r\n        const chordList = store.scoreData.chordList;\r\n        const init = chordList[0].detail as DetailInit;\r\n        const curChord = state.mouseState.curChord;\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const len = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n            const channelList = detail.backing.voicingList.map((item) => {\r\n                const interval = IntervalRelationProps[symbol.structs[item.struct]];\r\n                return 12 * item.octave + rootIndex + interval;\r\n            });\r\n\r\n            const chordTime = 60 / init.bpm * 1;\r\n            channelList.forEach((index) => {\r\n                const soundName = KEY12_SHARP_LIST[index % 12];\r\n                const octave = Math.floor(index / 12);\r\n                const soundFullName = soundName + octave;\r\n                playPiano(soundFullName, store, chordTime);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default HarmonizeUtil;\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { playChordSoundfont } from \"../../../../../utils/instrumentsUtil\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                    const soundfont = store.instruments.piano;\r\n                    if (soundfont != null) {\r\n                        playChordSoundfont(soundfont, detail);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'e': {\r\n                    dispatcher.score.setDefaultBacking();\r\n                }\r\n                    break;\r\n                case 'b': {\r\n                    dispatcher.backing.openBackingEditor();\r\n                }\r\n                    break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(Number(e.key) - 1);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.prevElement: {\r\n            dispatcher.score.moveElement(false);\r\n        }\r\n            break;\r\n        case config.nextElement: {\r\n            dispatcher.score.moveElement(true);\r\n        }\r\n            break;\r\n        // セクションの移動\r\n        case config.prevSection: {\r\n            dispatcher.score.moveSection(false);\r\n        }\r\n            break;\r\n        case config.nextSection: {\r\n            dispatcher.score.moveSection(true);\r\n        }\r\n            break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        }\r\n            break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        }\r\n            break;\r\n        case 'm': {\r\n            dispatcher.score.addChangeElement();\r\n        }\r\n            break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeCurElement();\r\n        }\r\n            break;\r\n        case ' ': {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        }\r\n            break;\r\n    }\r\n}","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { backingEditorInput } from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    // プレビュー再生時\r\n    if (state.isPreview) {\r\n        switch (e.key) {\r\n            case ' ': {\r\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n        return;\r\n    } else {\r\n        if (store.scoreState.hideMenu === 'none') {\r\n            if (isElement) {\r\n                if (keySwitch.editMode) {\r\n                    switch (e.key) {\r\n                        case config.decRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(false);\r\n                        }\r\n                            break;\r\n                        case config.incRoot: {\r\n                            dispatcher.score.incrementDegreeRoot(true);\r\n                        }\r\n                            break;\r\n                        case config.decBeat: {\r\n                            dispatcher.score.incrementBeatLen(false);\r\n                        }\r\n                            break;\r\n                        case config.incBeat: {\r\n                            dispatcher.score.incrementBeatLen(true);\r\n                        }\r\n                            break;\r\n                        case 'A': dispatcher.score.incrementMinuteValRelation(false, -0.25); break;\r\n                        case 'S': dispatcher.score.incrementMinuteValRelation(false, 0.25); break;\r\n                        case 'D': dispatcher.score.incrementMinuteValRelation(true, -0.25); break;\r\n                        case 'F': dispatcher.score.incrementMinuteValRelation(true, 0.25); break;\r\n                    }\r\n                } else if (keySwitch.symbolMode) {\r\n                    switch (e.key) {\r\n                        case 'ArrowUp': {\r\n                            dispatcher.symbol.toNext(false);\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            dispatcher.symbol.toNext(true);\r\n                        }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            dispatcher.symbol.toBase();\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            dispatcher.symbol.toDerive();\r\n                        }\r\n                            break;\r\n                    }\r\n                } else {\r\n                    NoteBasicInput(e, store, dispatcher);\r\n                }\r\n            }\r\n        } else if (store.scoreState.hideMenu === 'backing') {\r\n            backingEditorInput(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const state = store.scoreState;\r\n    if (!state.isPreview) {\r\n        if (state.hideMenu === 'none') {\r\n            const config = store.userEnv.keyConfig.note;\r\n            const keySwitch = store.scoreState.keySwitch;\r\n            // alert(e.key);\r\n            // alnfig.nextElement);\r\n            switch (e.key) {\r\n                case config.editMode: {\r\n                    keySwitch.editMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n                case config.symbolMode: {\r\n                    keySwitch.symbolMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport { NoteStatus } from \"../../../../../redux/store/backingState\";\r\n\r\nexport const backingEditorInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.backingState;\r\n\r\n    if (state == null) return;\r\n\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const pattern = state.pattern;\r\n\r\n    switch (e.key) {\r\n        case 'b': {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }\r\n            break;\r\n        case 'Enter': {\r\n            dispatcher.backing.applyBackingToChordData();\r\n        }\r\n            break;\r\n    }\r\n\r\n    if (pattern != null) {\r\n        switch (e.key) {\r\n            case 'ArrowLeft': {\r\n                dispatcher.backing.movePatternColumn(false);\r\n            }\r\n                break;\r\n            case 'ArrowRight': {\r\n                dispatcher.backing.movePatternColumn(true);\r\n            }\r\n                break;\r\n        }\r\n        if (pattern.channelIndex === -1) {\r\n\r\n            switch (e.key) {\r\n                case 'ArrowUp': {\r\n                    // dispatcher.backing.moveChannelIndex(false);\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    // dispatcher.backing.moveChannelIndex(true);\r\n                }\r\n                    break;\r\n                case 'a': {\r\n                    dispatcher.backing.addPatternColumn();\r\n                }\r\n                    break;\r\n                case 'w': {\r\n                    dispatcher.backing.changeLayer();\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    dispatcher.backing.setCurrentDivRate(16);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    dispatcher.backing.setCurrentDivRate(8);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    dispatcher.backing.setCurrentDivRate(4);\r\n                }\r\n                    break;\r\n                case '4': {\r\n                    dispatcher.backing.setCurrentDivRate(2);\r\n                }\r\n                    break;\r\n                case '5': {\r\n                    dispatcher.backing.setCurrentDivRate(1);\r\n                }\r\n                    break;\r\n                case '.': {\r\n                    dispatcher.backing.toggleCurrentDivHalf();\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.backing.deleteColumn();\r\n                }\r\n                    break;\r\n                case 'f': {\r\n                    pattern.channelIndex = 0;\r\n                    update();\r\n                }\r\n                    break;\r\n\r\n            }\r\n        } else {\r\n\r\n            switch (e.key) {\r\n                case 'ArrowUp': {\r\n                    dispatcher.backing.moveChannelIndex(false);\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.backing.moveChannelIndex(true);\r\n                }\r\n                    break;\r\n                case 'f': {\r\n                    pattern.channelIndex = -1;\r\n                    update();\r\n                }\r\n                    break;\r\n                case 'Enter': {\r\n                    const curNotes = dispatcher.backing.getNotes();\r\n                    const notes: NoteStatus | null = curNotes == null ? { signal: 'n', timing: 0, velocityAdjust: 0 } : null;\r\n                    dispatcher.backing.setNotes(notes);\r\n                }\r\n                    break;\r\n\r\n            }\r\n        }\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ROOT_ALL, getChordRoot, getDegreeRoot, SYMBOL_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport MinuteForm from \"./minuteForm\";\r\n\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    \r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i} isExist={isExist} onClick={() => {\r\n                const data = store.scoreData;\r\n                data.chordList = data.chordList.slice();\r\n                detail.beatLen = (i + 1);\r\n                data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    ROOT_ALL.forEach((root, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(root);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(root);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={root != null && [0, 2, 4, 5, 7, 9, 11].includes(root.index)}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || root == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = root == null ? null : { ...root };\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = root == null ? null : { ...root };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n                    }\r\n                }}\r\n            >\r\n                {root == null ? '-' : <>\r\n                    {getDegreeRoot(root)} ({getChordRoot(root, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_LabelBeat>{'Beat Length'}</_LabelBeat>\r\n                <_Beat>\r\n                    {beatItemsJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    <_LabelMinute>{'Minute Head'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={true} /> */}\r\n                    <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                    <_LabelMinute>{'Minute Tail'}</_LabelMinute>\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    />\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_Root>\r\n                    {rootItemsJsx}\r\n                </_Root>\r\n                <_Symbol\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_Symbol>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _LabelBeat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #c50000; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100px;\r\n    text-align: left;\r\n    background-color: #9c93b9;\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 2px;\r\n        width: calc(100% - 4px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 75px;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _LabelMinute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #222222;\r\n    text-align: center;\r\n`;\r\n// const _Minutetem = styled.div<{\r\n//     isExist: boolean;\r\n// }>`\r\n//     display: inline-block;\r\n//     width: 20%;\r\n//     height: 20px;\r\n//     text-align: left;\r\n//     background-color: #4c3696;\r\n//     font-size: 18px;\r\n//     font-weight: 600;\r\n//     color: #ce0000;\r\n//     line-height: 12px;\r\n//     text-align: center;\r\n\r\n//     & span{\r\n//         display: inline-block;\r\n//         margin: 2px 0 0 2px;\r\n//         width: calc(100% - 4px);\r\n//         height: calc(100% - 4px);\r\n//         background-color: #9b8585;\r\n//         ${props => !props.isExist ? '' : css`\r\n//             /* background-color: #ebf37eb7; */\r\n//             background: linear-gradient(to bottom, #bdb652d2, #fff56cd3, #bdb652d2);\r\n//         `}\r\n//     }\r\n// `;\r\nconst _MinuteItem = styled.input<{\r\n    isReverse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: 20px;\r\n    color: #3b51d1;\r\n    ${props => !props.isReverse ? '' : css`\r\n        transform: rotateY(180deg);\r\n    `}\r\n`;\r\n\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 360px;\r\n    text-align: left;\r\n    background-color: #78b48c;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Root = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #e6e6e6;\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #ff6060bd;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #ff9090bc;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #90d3ffbb;`}\r\n    }\r\n`;\r\n\r\nconst _Symbol = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 90px);\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #99e07d;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #75757575;\r\n    ${props => !props.isActive ? '' : css`background-color: #ff6060bd;`}\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    color: #3030308d;\r\n    ${props => !props.isDiatonic ? '' : css`color: #17007e;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #fffdfd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #ff9090bc;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/scoreData\";\r\nimport { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const scaleItemJsxList: JSX.Element[] = ['major', 'minor'].map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n\r\n    const rateItemJsxList: JSX.Element[] = ['4/4', '3/4'].map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.timeSignature === item} onClick={() => {\r\n                detail.timeSignature = item as BeatSignature;\r\n                data.chordList = data.chordList.slice();\r\n                dispatcher.score.setScoreData(data);\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            <_TempoWrap>\r\n                <input\r\n                    type=\"number\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n                <input\r\n                    type=\"range\" min={30} max={220} step={1}\r\n                    value={detail.bpm}\r\n                    onChange={(e) => {\r\n                        detail.bpm = e.currentTarget.valueAsNumber;\r\n                        data.chordList = data.chordList.slice();\r\n                        dispatcher.score.setScoreData(data);\r\n                    }}\r\n                />\r\n            </_TempoWrap>\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    text-align: left;\r\n    /* background-color: #f0f0f0; */\r\n    background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n    font-size: 14px;\r\n    margin: 5px 0 0 0;\r\n    color: #ffffff;\r\n    font-weight: 600;\r\n    line-height: 14px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 18px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        ['Intro', 'A-mero', 'B-mero', 'Sabi', 'C-mero', 'Outro'].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={()=>{\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        [1, 2, 3, 4].forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item.toString()) !== -1;\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}>\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n            <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #b89b9b;\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    line-height: 24px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: 60%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: 40%;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #6182b4;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase)<{\r\n    isActive: boolean;\r\n}>`\r\n    background-color: #61b4b0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection } from \"../../../../../redux/store/scoreData\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst NoteSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'change': return <></>;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default NoteSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { ElementCache } from \"../../../../../redux/store/scoreState\";\r\nimport { TIMELINE_BEAT_WIDTH } from \"../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport BlockItem from \"./blockItem\";\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    let curBeatJsx: JSX.Element = <></>;\r\n    let prevBeatJsx: JSX.Element = <></>;\r\n    let nextBeatJsx: JSX.Element = <></>;\r\n    let curMinuteJsx: JSX.Element = <></>;\r\n    let prevMinuteJsx: JSX.Element = <></>;\r\n    let nextMinuteJsx: JSX.Element = <></>;\r\n\r\n    const memoriJsxList: JSX.Element[] = [];\r\n\r\n    //現在の要素取得\r\n\r\n    let curIndex = 2;\r\n    let prevIndex = 2;\r\n    let nextIndex = dataList.length - 1;\r\n    let temp = focusIndex;\r\n    while (temp > 2) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            curIndex = temp;\r\n            break;\r\n        }\r\n        temp--;\r\n    }\r\n    // 前が存在する\r\n    if (curIndex > 2) {\r\n        temp = curIndex - 1;\r\n        while (temp > 2) {\r\n            const element = dataList[temp];\r\n            if (element.type === 'chord') {\r\n                prevIndex = temp;\r\n                break;\r\n            }\r\n            temp--;\r\n        }\r\n    }\r\n    temp = focusIndex + 1;\r\n    while (temp < dataList.length - 1) {\r\n        const element = dataList[temp];\r\n        if (element.type === 'chord') {\r\n            nextIndex = temp;\r\n            break;\r\n        }\r\n        temp++;\r\n    }\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const add = (sustain: number, cache: ElementCache): void => {\r\n        const adjust = cache.beat + cache.minute;\r\n        for (let i = 0; i < Math.floor(sustain / 0.25); i++) {\r\n            const pos = i + Math.floor(adjust / 0.25);\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { width: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n            memoriJsxList.push(\r\n                <_Memori\r\n                    key={memoriJsxList.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {pos % 16 === 0 ? <_Bar>{cache.bar + 1 + (adjust === 0 ? 0 : 1)}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        }\r\n    }\r\n\r\n    if (curIndex > 2) {\r\n\r\n        if (prevIndex === 2) {\r\n            prevBeatJsx = (\r\n                <_Prev sustain={4}>start</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={4} />\r\n            );\r\n\r\n            memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n        } else {\r\n            const chord = dataList[prevIndex].detail as DetailChord;\r\n            const cache = cacheList[prevIndex];\r\n            const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n            prevBeatJsx = (\r\n                <_Prev sustain={chord.beatLen}>Prev</_Prev>\r\n            );\r\n            prevMinuteJsx = (\r\n                <_Prev sustain={sustain} />\r\n            );\r\n\r\n            add(sustain, cache);\r\n        }\r\n    }\r\n    if (curIndex === 2) {\r\n        curBeatJsx = (\r\n            <_Cur sustain={4}>start</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[curIndex].detail as DetailChord;\r\n        const cache = cacheList[curIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        curBeatJsx = (\r\n            <_Cur sustain={chord.beatLen}>Cur</_Cur>\r\n        );\r\n        curMinuteJsx = (\r\n            <_Cur sustain={sustain} />\r\n        );\r\n\r\n        add(sustain, cache);\r\n    }\r\n    if (nextIndex === dataList.length - 1) {\r\n        nextBeatJsx = (\r\n            <_Next sustain={4}>end</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={4} />\r\n        );\r\n\r\n        memoriJsxList.push(<_Start key={memoriJsxList.length} />);\r\n    } else {\r\n        const chord = dataList[nextIndex].detail as DetailChord;\r\n        const cache = cacheList[nextIndex];\r\n        const sustain = chord.beatLen + chord.minute.head + chord.minute.tail;\r\n        nextBeatJsx = (\r\n            <_Next sustain={chord.beatLen}>Next</_Next>\r\n        );\r\n        nextMinuteJsx = (\r\n            <_Next sustain={sustain} />\r\n        );\r\n\r\n        add(sustain + 0.25, cache);\r\n    }\r\n\r\n    // const curSustain = nextCache.beat - curCache.beat;\r\n    return (\r\n        <_Wrap>\r\n            <_Blocks>\r\n                <_Beat>\r\n                    {prevBeatJsx}\r\n                    {curBeatJsx}\r\n                    {nextBeatJsx}\r\n                </_Beat>\r\n                <_Minute>\r\n                    {prevMinuteJsx}\r\n                    {curMinuteJsx}\r\n                    {nextMinuteJsx}\r\n                </_Minute>\r\n            </_Blocks>\r\n            <_Measure>\r\n                {memoriJsxList}\r\n            </_Measure>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst BEAT_WIDTH = 50;\r\n\r\nconst _Wrap = styled.div`\r\n    overflow: hidden;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    height: 10px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.sustain * BEAT_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Prev = styled(_Item) <{\r\n}>`\r\n    background-color: rgba(0, 21, 211, 0.158);\r\n`;\r\n\r\nconst _Cur = styled(_Item) <{\r\n}>`\r\n    background-color: rgb(233, 5, 5);\r\n`;\r\n\r\nconst _Next = styled(_Item) <{\r\n}>`\r\n    background-color: rgba(31, 189, 0, 0.144);\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Start = styled.div`\r\n    display: inline-block;\r\n    width: ${BEAT_WIDTH * 4}px;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${BEAT_WIDTH / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/scoreData\";\r\nimport { getIntervalValues, getSymbolFromKey, IntervalRelationProps } from \"../../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst ChordInfo = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const scaleList = cache == null ? [] : [0, 2, 4, 5, 7, 9, 11].map(value => (cache.keyIndex + value) % 12);\r\n    let structs: number[] = [];\r\n\r\n    const [structJsxList, tipJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n        let tipJsxList: JSX.Element[] = [];\r\n\r\n        if (cur.type === 'chord') {\r\n            const detail = cur.detail as DetailChord;\r\n            const root = detail.root;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            if (root != null && symbol != null) {\r\n                structs = getIntervalValues((root.index + cache.keyIndex) % 12, symbol.structs);\r\n                // alert(structs);\r\n\r\n                tipJsxList = symbol.structs.map((struct, i) => <_InfoItem key={i}>\r\n                    <span>{struct}</span><span>{IntervalRelationProps[struct]}</span>\r\n                </_InfoItem>)\r\n            }\r\n        }\r\n        for (let i = 0; i < 14; i++) {\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = structs.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return [structJsxList, tipJsxList];\r\n    }, [structs]);\r\n\r\n    return (\r\n        <_Wrap isUse={structs.length > 0}>\r\n            {/* <_Info>{tipJsxList}</_Info> */}\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordInfo;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Info = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 100%;\r\n    background-color: #949494;\r\n    /* border: solid 1px #a3a3a3; */\r\n    box-sizing: border-box;\r\n    /* padding: 2px 0 0 0; */\r\n`;\r\nconst _InfoItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 15px;\r\n    box-sizing: border-box;\r\n\r\n    /* background-color: #4b4b4b; */\r\n    /* background: linear-gradient(to bottom, #adac6c, #e0df7d, #adac6c); */\r\n    /* background: linear-gradient(to bottom, #858585, #4b4b4b, #858585); */\r\n    border: solid 1px rgb(207, 207, 207);\r\n    margin-bottom: 1px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 12px;\r\n    text-align: center;\r\n\r\n    & span:nth-child(1){\r\n        color: #f5e400;\r\n    }\r\n    & span:nth-child(2){\r\n        margin-left: 10px;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    border: 1px solid #ffffffda;\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#c3c3d6, #8989a8);\r\n    ` : css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#3e9ef7, #254e74);\r\n    ` : css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst InitialBeatTip = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const tipJsxList:JSX.Element[] = [];\r\n    for(let i = 0; i < 4; i ++) {\r\n        tipJsxList.push(\r\n            <_Tip key={i} isActive={state.initialBeat > i} onClick={()=> {\r\n                state.initialBeat = i + 1;\r\n                dispatcher.score.setScoreState(state);\r\n            }}/>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Label>inital beat</_Label>\r\n            <_WrapTip>{tipJsxList}</_WrapTip>\r\n        </_Wrap>\r\n    );\r\n\r\n}\r\n\r\nexport default InitialBeatTip;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\nconst _WrapTip = styled.div`\r\n    display: inline-block;\r\n    width: 142px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 8px;\r\n    border-radius: 4px;\r\n    border: solid 1px #747474;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: calc(100% - 6px);\r\n    margin: 3px 0 0 4px;\r\n    background-color: #d6d6d6;\r\n    ${props => !props.isActive ? '' : css`background-color: #eeedcf;`}\r\n    border: solid 1px #b9b9b9;\r\n    box-sizing: border-box;\r\n`;","import { ChannelParam, NoteStatus } from \"../redux/store/backingState\";\r\n\r\n\r\nexport class BackingUtil {\r\n\r\n    // オクターブの数\r\n    static OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    static STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    static CHANNEL_MAX = 12;\r\n\r\n    static getInitialRecord = (divCount: number) => {\r\n        return new Array<NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    static getVoicingStructs = (table: boolean[][]): ChannelParam[] => {\r\n        const channels: ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    static getChannels = (voicingStructs: ChannelParam[], size: number) => {\r\n        const channels: ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingPattern, BackingState } from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingPattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingPattern, BackingState, NoteSignal, NoteStatus } from \"../../../../redux/store/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const layerJsxList: JSX.Element[][] = Array(2);\r\n    pattern.layers.forEach((layer, j) => {\r\n\r\n        const jsxLsit: JSX.Element[] = [];\r\n        for (let i = 0; i < channelCount; i++) {\r\n            const notesJsxLsit: JSX.Element[] = [];\r\n\r\n            layer.noteDivList.forEach((note, k) => {\r\n                const channelIndex = (channelCount - 1) - i;\r\n                const isActive = pattern.lenIndex === k;\r\n                const cell = layer.table[channelIndex][k];\r\n                const setNotesStatus = (status: NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                const isUse = cell != null;\r\n                const isEdit = isActive && pattern.channelIndex === i;\r\n                let rate = note.rate;\r\n                if (note.isDot) rate /= 1.5;\r\n                if (note.div3 !== 0) rate /= note.div3 / 3;\r\n                notesJsxLsit.push(\r\n                    <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit}>\r\n                        <_State isUse={isUse} signal={'n'}\r\n                            onClick={() => {\r\n                                if (cell == null) {\r\n                                    setNotesStatus({ signal: 'n', timing: 0, velocityAdjust: 0 });\r\n                                } else {\r\n                                    setNotesStatus(null);\r\n                                }\r\n                                update();\r\n                            }}\r\n                            onContextMenu={() => {\r\n                                pattern.channelIndex = i;\r\n                                pattern.lenIndex = k;\r\n                                update();\r\n                            }}\r\n                        />\r\n                    </_Notes>\r\n                );\r\n            });\r\n            jsxLsit.push(\r\n                <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                    {notesJsxLsit}\r\n                </_Record>\r\n            );\r\n        }\r\n        layerJsxList[j] = jsxLsit;\r\n    });\r\n\r\n\r\n    return (<>\r\n        <_Layer zIndex={1}>{layerJsxList[pattern.layerIndex]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #ffffff31;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ffffff56;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    isUse: boolean;\r\n    signal: NoteSignal;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => !props.isUse ? '' : css`\r\n        background-color: #f8fc029b;\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => !props.isUse ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingState } from \"../../../../redux/store/backingState\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternTable from \"./patternTable\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingPattern, BackingState, NoteStatus } from \"../../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.getVoicingStructs(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs ,pattern.channels.length + 1);\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.getVoicingStructs(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs ,pattern.channels.length - 1);\r\n        update();\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap>\r\n            <_Struct>{props.soundFullName}</_Struct>\r\n            <_Option onClick={deleteRecord}>-</_Option>\r\n            <_Option onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BackingPattern, BackingState } from \"../../../../redux/store/backingState\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n    const pattern = state.pattern;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    if (pattern != null) {\r\n        const channels = pattern.channels;\r\n        channels.forEach((channel, i) => {\r\n            let name = '-';\r\n            if (channel.octave !== -1) {\r\n                const soundIndex = chordInfo.chordRoot + IntervalRelationProps[symbol.structs[channel.structIndex]];\r\n                const octave = channel.octave + Math.floor(soundIndex / 12);\r\n                name = KEY12_SHARP_LIST[soundIndex % 12] + octave;\r\n            }\r\n            channelJsxList.push(\r\n                <ChannelItem key={i}\r\n                    index={i}\r\n                    soundFullName={name}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { VoicingTable } from \"../../../redux/store/backing/voicingTable\";\r\nimport { BackingPattern, BackingState, NoteRate, NoteStatus } from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternStatus = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const pattern = state.pattern as BackingPattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    const setRate = (rate: NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={true} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.getVoicingStructs(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot, () => {\r\n            cur.isDot = !cur.isDot;\r\n            update();\r\n        })}\r\n        {createItem('1/3', cur.div3 === 1, () => {\r\n            if (cur.div3 === 1) cur.div3 = 0;\r\n            else cur.div3 = 1;\r\n            update();\r\n        })}\r\n        {createItem('2/3', cur.div3 === 2, () => {\r\n            if (cur.div3 === 2) cur.div3 = 0;\r\n            else cur.div3 = 2;\r\n            update();\r\n        })}\r\n    </_WrapLen>;\r\n\r\n\r\n    const selectedCell = pattern.channelIndex === -1 ? null :\r\n        pattern.layers[pattern.layerIndex].table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', selectedCell == null, () => {\r\n\r\n            update();\r\n        })}\r\n\r\n        {createItem('□', selectedCell != null && selectedCell.signal === 'n', () => {\r\n\r\n            update();\r\n        })}\r\n        {createItem('・', selectedCell != null && selectedCell.signal === 's', () => {\r\n\r\n            update();\r\n        })}\r\n        {createItem('⁀', selectedCell != null && selectedCell.signal === 't', () => {\r\n\r\n            update();\r\n        })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternStatus;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState } from \"../../../redux/store/backingState\";\r\nimport { BackingPattern, ChannelParam, BackingLayer } from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternStatus from \"./patternStatus\";\r\n\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button isActive={isUsePattern}\r\n                        onClick={() => {\r\n                            if (!isUsePattern) {\r\n                                const table = state.voicingTable as boolean[][];\r\n                                const voicingStructs = BackingUtil.getVoicingStructs(table);\r\n                                const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n                                state.pattern = {\r\n                                    layerIndex: 0,\r\n                                    lenIndex: 0,\r\n                                    channelIndex: -1,\r\n                                    channels,\r\n                                    isUsePedal: false,\r\n                                    layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n                                } as BackingPattern;\r\n                                update();\r\n                            } else {\r\n                                state.pattern = null;\r\n                                update();\r\n                            }\r\n                        }}>Use\r\n                    </_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternStatus /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #fa1d1d;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #dadada;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState, ChannelParam } from \"../../../redux/store/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { playChordSoundfont } from \"../../../utils/instrumentsUtil\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n    const chordInfo = state.chordInfo;\r\n    const symbol = getSymbolFromKey(chordInfo.symbolKey);\r\n\r\n    const table = state.voicingTable as boolean[][];\r\n    const pattern = state.pattern;\r\n\r\n    const voicingLaneJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const tipJsxList: JSX.Element[] = [];\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = symbol.structs.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n\r\n            const interval = IntervalRelationProps[symbol.structs[j]];\r\n            const chordIndex = (chordInfo.chordRoot + interval) % 12;\r\n            const octave = i + Math.floor((chordInfo.chordRoot + interval) / 12);\r\n\r\n            const name = !isEnable ? '' : `${KEY12_SHARP_LIST[chordIndex]}${octave}`;\r\n            tipJsxList.push(\r\n                <_VoicingItem key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: ChannelParam[] = BackingUtil.getVoicingStructs(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.piano;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_VoicingItem>\r\n            );\r\n        }\r\n        voicingLaneJsxList.push(\r\n            <_VoicingLane key={i}>\r\n                {tipJsxList}\r\n            </_VoicingLane>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Info>\r\n\r\n            </_Info>\r\n            <_Main>\r\n                <_Left>\r\n                    <_Relation>root [C]</_Relation>\r\n                    <_Relation>long3 [E]</_Relation>\r\n                    <_Relation>perfect5 [G]</_Relation>\r\n                </_Left>\r\n                <_Right>{voicingLaneJsxList}</_Right>\r\n            </_Main>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _Info = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _Relation = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _VoicingLane = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VoicingItem = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #43a6c4;\r\n    color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #3f70bb;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BackingState } from \"../../redux/store/backingState\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <VoicingChooser />\r\n            <PatternFrame />\r\n            <_FooterDiv>\r\n                <_Button isEnable={true}>Test</_Button>\r\n                <_Button isEnable={true}>Cancel</_Button>\r\n                <_Button isEnable={true} onClick={()=> {\r\n                    dispatcher.backing.applyBackingToChordData();\r\n                    dispatcher.backing.closeBackingEditor();\r\n                }}>Update</_Button>\r\n            </_FooterDiv>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport PatternFrame from \"../../../backing/pattern/patternFrame\";\r\nimport VoicingChooser from \"../../../backing/voicing/voicingChooser\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu === 'backing';\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const focusIndex = store.scoreState.focusIndex;\r\n\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {store.backingState == null ? <></> : <BackingEditorFrame />}\r\n            </_Contents>\r\n            <_Label\r\n                isEnable={chordList[focusIndex].type === 'chord'}\r\n                onClick={() => {\r\n                    if (state.hideMenu === 'none') {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    } else if (state.hideMenu === 'backing') {\r\n                        dispatcher.backing.closeBackingEditor();\r\n                    }\r\n                }}>\r\n                <div>Backing</div>\r\n            </_Label>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '600px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25px;\r\n    height: 150px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    \r\n    & div {\r\n        width: 150px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailSection } from \"../../../../redux/store/scoreData\";\r\nimport { ElementCache, SectionCache } from \"../../../../redux/store/scoreState\";\r\nimport { NoteKeyDown, NoteKeySwitch } from \"./input/noteInput\";\r\nimport NoteSideForm from \"./side/noteSideForm\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\nimport { Timeline } from \"tone\";\r\nimport ChordInfo from \"./info/chordInfo\";\r\nimport InitialBeatTip from \"./initial/initialBeat\";\r\nimport { getBeatRate } from \"../../../../utils/theoryUtils\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\n\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const state = store.scoreState;\r\n    const init = (store.scoreData.chordList[0].detail as DetailInit);\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, harmonize: () => {\r\n                dispatcher.system.setInvalidate({\r\n                    ...store.invalidate, harmoniizeInvalidate: {}\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isTune) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    useEffect(() => {\r\n        const elementCacheList: ElementCache[] = [];\r\n        const sectionCacheList: SectionCache[] = [];\r\n\r\n        let prevBeat = 0;\r\n        let totalBeat = 0;\r\n        let prevMinute = 0;\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let keyIndex = -1;\r\n        let sectionBeatSum = 0;\r\n\r\n        chordList.forEach((element, i) => {\r\n            const type = element.type;\r\n            switch (type) {\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        prevBeat = totalBeat;\r\n                        prevMinute = totalMinute;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'init': {\r\n                    const detail = element.detail as DetailInit;\r\n                    keyIndex = detail.keyIndex;\r\n                }\r\n                    break;\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                }\r\n                    break;\r\n                case 'chord': {\r\n                    const detail = element.detail as DetailChord;\r\n                    prevBeat = totalBeat;\r\n                    totalBeat += detail.beatLen;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    prevMinute = totalMinute;\r\n                    totalMinute += detail.minute.head;\r\n                    totalMinute += detail.minute.tail;\r\n                }\r\n                    break;\r\n                case 'change': {\r\n\r\n                }\r\n                    break;\r\n            }\r\n\r\n            const pastSecond = 60000 / init.bpm * (prevBeat + prevMinute);\r\n            const beatRate = getBeatRate(init.timeSignature)[0];\r\n            elementCacheList.push({\r\n                bar: Math.floor(prevBeat / beatRate),\r\n                beat: prevBeat % beatRate,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                sectionNo,\r\n                pastSecond,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        store.scoreState.elementCacheList = elementCacheList;\r\n        store.scoreState.sectionCacheList = sectionCacheList;\r\n        dispatcher.score.setScoreState(store.scoreState);\r\n    }, [chordList, chordList.length, init.bpm]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            // onKeyDown={(e: KeyboardEvent) => noteKeyDown(e, store, dispatcher)}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_Left>\r\n                <_Head isEnable={!state.isPreview}>\r\n                    <InitialBeatTip />\r\n                </_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main><HarmNote /></_Main>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP><HarmMeasure /></_TIMELINE_WRAP>\r\n                    <_INFO_WRAP><ChordInfo /></_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right isEnable={!state.isPreview}>\r\n                <NoteSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Head = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    position: absolute;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #ddc2c2;\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 36px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #e7e7e6be;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #aaaaaa;\r\n    border-radius: 20px 20px 20px 20px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 20px;\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: #888;\r\n        /* background-color: #c500003b; */\r\n        line-height: 18px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 16px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #10c5003a; */\r\n        line-height: 16px;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport HarmonizeUtil from \"../../../../utils/harmonizeUtil\";\r\nimport { getChordRoot, getDegreeRoot, getSymbolFromKey } from \"../../../../utils/theoryUtils\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barLength * 4 * 4; i++) {\r\n            let barJsx = <></>;\r\n            if (i % 16 == 0) {\r\n                barJsx = <_Bar>{Math.floor(i / 16) + 1}</_Bar>\r\n            }\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={beatWidth}>\r\n                    {barJsx}\r\n                </_Scale>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const symbolNmae = getSymbolFromKey(detail.symbolKey)?.name;\r\n                const degreeName = detail.root == null ? '-' :\r\n                    getDegreeRoot(detail.root) + symbolNmae;\r\n                const chordName = detail.root == null ? '-' :\r\n                    getChordRoot(detail.root, init.keyIndex) + symbolNmae;\r\n                jsxList.push(\r\n                    <_ChordItem key={jsxList.length}\r\n                        width={beatWidth * (detail.beatLen + detail.minute.head + detail.minute.tail)}\r\n                        isActive={element == curChord}\r\n                        onClick={() => {\r\n                            state.isTune = false;\r\n                            state.focusIndex = i;\r\n                            dispatcher.score.setScoreState(state);\r\n                        }}\r\n                        onContextMenu={() => {\r\n                            HarmonizeUtil.previewCurHarmony(store);\r\n                        }}\r\n                    >\r\n                        <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                    </_ChordItem>\r\n                );\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_Measure ref={measureRef}>\r\n            {measureJsxList}\r\n            <_MousePos\r\n                left={mouseMeasurePos * beatWidth * rate}\r\n                width={beatWidth * rate}\r\n            />\r\n        </_Measure>\r\n    </>);\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _Measure = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Bar = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #ec0000;\r\n    left: -5px;\r\n    top: -20px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.soundfontPlayer;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #758f94;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #637596;\r\n    ${props => !props.isStruct ? '' : css`background-color: #949494;`}\r\n    ${props => !props.isActive ? '' : css`background-color: #9e9e6c;`}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                state.isPreview = true;\r\n                dispatcher.tune.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        dispatcher.tune.setInstrument(soundFontPlayer);\r\n                    }).then(() => {\r\n                        state.isPreview = false;\r\n                        dispatcher.tune.setState(state);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #c7c6abda;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fffd7eda;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e6e2c5da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #fffd7eda;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst ControlButton = (props: {\r\n    labelName: string;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ControlButton;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #a8bae0, #818ada, #a8bae0);\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d5d6e;\r\n    border-radius: 2px;\r\n    border: solid 1px #737374;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to bottom, #c2d0f0, #929beb, #c2d0f0);\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\n\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={state.quantize === 4} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.tune.setState(state);\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.tune.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.tune.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} />\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 6 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"e-guitar\" soundfontInfo={{ name: 'distortion_guitar', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiOcarina />} labelName=\"ocarina\" soundfontInfo={{ name: 'ocarina', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, TuneNotes } from \"../../../../../redux/store/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.mouseState;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.mouseState;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.distIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    notes.len = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    // dispatcher.tune.setNotesList(notesList.slice());\r\n                    store.scoreData.notesList = notesList.slice();\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    notes.pos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    // dispatcher.tune.setNotesList(notesList.slice());\r\n                    store.scoreData.notesList = notesList.slice();\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.mouseState;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.tune.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.tune.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { stopPreview } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n        const mouse = state.mouseState;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.tune.copyNotes(); break;\r\n                    case 'v': dispatcher.tune.pasteNotes(); break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.tune.incrementCurNoteKey(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.tune.incrementCurNoteKey(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.tune.moveDistFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.tune.moveDistFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.tune.incrementCurNoteKey(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.tune.incrementCurNoteKey(false, 'normal'); break;\r\n                case 'ArrowLeft': dispatcher.tune.moveFocus(false); break;\r\n                case 'ArrowRight': dispatcher.tune.moveFocus(true); break;\r\n                case 'a': dispatcher.tune.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.tune.adjustScrollX(); break;\r\n                case 'e': dispatcher.tune.adjustScrollY(); break;\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.tune.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.tune.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.tune.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.tune.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        keySwitch.scaleMode = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        keySwitch.resize = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.tune.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../../base/components/button/executableButton\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/scoreData\";\r\nimport { getChordRoot, getSymbolFromKey, IntervalRelationProps, KEY12_SHARP_LIST, SCALE_INDEX } from \"../../../../utils/theoryUtils\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.mouseState;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n\r\n    const barCount = 20;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isTune;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, melody: () => setInvalidate({})\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= barCount * 4 * 4; i++) {\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0} beatWidth={state.beatWidth} />\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [barCount]);\r\n\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n    const scaleLineJsxList = useMemo(() => {\r\n        const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < PITCH_MAX; i++) {\r\n            const keyIndex = getKeyIndexFromPitcher(i);\r\n            list.push(\r\n                <_ScaleLine key={i}\r\n                    isScale={scaleIndexies.includes(keyIndex)}\r\n                    isBase={keyIndex === scaleIndexies[0]}\r\n                />\r\n            );\r\n        }\r\n        return list;\r\n    }, [init.keyIndex]);\r\n\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            const notesLeft = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n            const notesRight = notesLeft + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const middle = (scroll + tableWidth / 2);\r\n                if (notesLeft - middle > tableWidth / 2 ||\r\n                    middle - notesRight < -tableWidth / 2) {\r\n                    continue;\r\n                }\r\n            }\r\n            const [focusStart, focusEnd] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexies = SCALE_INDEX.map(value => (init.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={getNormalizeLenFromNotes(notes.pos) * state.beatWidth}\r\n                    width={getNormalizeLenFromNotes(notes.len) * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.tune.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={getMinimumLenUnit(notes.len)}\r\n                        isScale={isScale}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.distIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move,\r\n        invalidate]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header isEnable={!state.isPreview}>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef}\r\n                    onScroll={() => {\r\n                        const refs = store.refs.melody;\r\n\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            const scrollLeft = refs.table.scrollLeft;\r\n                            const scrollTop = refs.table.scrollTop;\r\n                            refs.measure.scrollTo({ left: scrollLeft });\r\n                            refs.chord.scrollTo({ left: scrollLeft });\r\n                            refs.pitch.scrollTo({ top: scrollTop });\r\n                        }\r\n                        update();\r\n                    }}\r\n                >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleLineJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={(e) => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={(e) => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={(e) => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #534b81;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #0044ff1f;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #39cfd452;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `};\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `};\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb006d;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #7a270028;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { HARMONIZE_SECTIONS_WIDTH } from \"../../../utils/systemConst\";\r\nimport HarmSections from \"./harmonize/harmSections\";\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { stopPreview } from \"../../../utils/melodyUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    useEffect(() => {\r\n        const info = melody.soundfontInfo;\r\n        Soundfont.instrument(new AudioContext(), info.name,\r\n            { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.tune.setInstrument(soundFontPlayer);\r\n            });\r\n\r\n        // acoustic_guitar_steel\r\n        Soundfont.instrument(new AudioContext(), 'bright_acoustic_piano',\r\n            { gain: 5, release: 0.5 }).then((soundFontPlayer) => {\r\n                dispatcher.score.setPiano(soundFontPlayer);\r\n            });\r\n    }, []);\r\n\r\n    const switchMode = () => {\r\n        state.isTune = !state.isTune;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isTune ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isTune ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isTune ? () => {\r\n\r\n        if (!state.isPreview) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        } else {\r\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    } : () => {\r\n\r\n        if (!melody.isPreview) {\r\n            dispatcher.tune.previewStart();\r\n        } else {\r\n            stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    }\r\n    const toggleEnsamble = !state.isTune ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.tune.setState(melody);\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n                <_Mode isEnable={!isPreview}>\r\n                    <_ModeItem isActive={!state.isTune} onClick={() => {\r\n                        if (state.isTune) switchMode();\r\n                    }}>Harmonize</_ModeItem>\r\n                    <_ModeItem isActive={state.isTune} onClick={() => {\r\n                        if (!state.isTune) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch onClick={preview}><_SwitchInner isActive={isPreview}>Play</_SwitchInner> / <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner></_Switch>\r\n                    <_Switch onClick={toggleEnsamble}><_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner> / <_SwitchInner isActive={isSolo}>Solo</_SwitchInner></_Switch>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    if (!isPreview) {\r\n                        switch (e.key) {\r\n                            case 'r': switchMode(); break;\r\n                        }\r\n                    }\r\n                }}>\r\n                <_SECTIONS><HarmSections /></_SECTIONS>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isTune} />\r\n                    <MelodyFrame isActive={state.isTune} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n`;\r\n\r\nconst _Mode = styled.div<{\r\n    isEnable: boolean\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 140px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #f3b200c0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #ecfd5273;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #f6ffa373;\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _SECTIONS = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    { name: 'Preview', disable: !isAccept, cont: <div></div> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DegreeProps, getSymbolFromKey, IntervalRelationProps, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey } from \"../../utils/theoryUtils\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = getSymbolFromKey(item.symbolKey);\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    sampler.releaseAll();\r\n\r\n                    const symbol = getSymbolFromKey(item.symbolKey);\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { CgOptions, CgPiano } from 'react-icons/cg'\r\nimport { GiMusicalScore } from 'react-icons/gi'\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, disable: true, cont: <div></div> },\r\n                    { name: 'Perform', icon: <CgPiano />, disable: true, cont: <PerformChannel/> },\r\n                    { name: 'Score', icon: <GiMusicalScore />, disable: true, cont: <ScoreChannel /> },\r\n                    { name: 'Option', icon: <CgOptions />, disable: true, cont: <SettingChannel /> }\r\n                ]}\r\n                activeNo={store.systemState.mainChannelIndex}\r\n                selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { GlobalContext } from './systemEntry';\r\n\r\nconst Splash = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                dispatcher.system.switchSplashToMain();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n        <_Wrap isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Title>\r\n                <span>L</span>iCreSia\r\n            </_Title>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Wrap = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    /* width: 500px;\r\n    height: 500px; */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #d8d8d8; */\r\n    background: radial-gradient(#868686, #ffffff);\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 15%;\r\n    width: 100%;\r\n    height: 400px;\r\n    background-color: #ffffff1f;\r\n    /* background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913); */\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    line-height: 350px;\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\n\r\nconst TotalHeader = () => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                <_LoginButton>\r\n                    <div><ImUser /></div>\r\n                    Login / Sign up\r\n                </_LoginButton>\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: 240px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport SysModalDialog from '../dialog/sysModalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> : <Splash />}\r\n                <_Wrap>\r\n                    <SysModalDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n  \n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    window.addEventListener(\"keydown\", function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    }, false);\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}