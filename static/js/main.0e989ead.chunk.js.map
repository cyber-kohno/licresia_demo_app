{"version":3,"sources":["system/utils/dataUtil.tsx","system/redux/reducer.tsx","system/utils/theoryUtil.tsx","system/utils/backingUtil.tsx","system/utils/cacheUtil.tsx","system/utils/melodyUtil.tsx","system/utils/systemConst.tsx","system/redux/dispatcher/dispatcher.tsx","system/utils/instrumentsUtil.tsx","system/redux/store/state/dataHistory.tsx","system/redux/store/store.tsx","system/redux/store/userEnv.tsx","system/base/design/thema/themaColorNormal.tsx","system/contents/dialog/globalDialog.tsx","system/base/design/styles.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/contents/score/manage/chordProg/progUnitSearcher.tsx","system/contents/score/manage/chordProg/progStyle.tsx","system/contents/score/manage/chordProg/progBackingUtil.tsx","system/contents/score/manage/chordProg/progUtil.tsx","system/contents/score/manage/chordProg/progCustomFrame.tsx","system/utils/dummyUtil.tsx","system/contents/score/manage/chordProg/progOutputFrame.tsx","system/contents/score/manage/chordProg/progTemplateUtil.tsx","system/contents/score/manage/chordProg/progTemplateFrame.tsx","system/contents/score/manage/chordProg/chordProgDialog.tsx","system/contents/score/manage/manageTab.tsx","system/contents/score/edit/harmonize/tool/symbolEditor.tsx","system/contents/score/edit/harmonize/elements/calc/calcChord.tsx","system/contents/score/edit/harmonize/elements/calc/calcSection.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailAlter.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailChord.tsx","system/contents/score/edit/harmonize/elements/elementFixedBorder.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailInit.tsx","system/contents/score/edit/harmonize/elements/form/elementDetailSection.tsx","system/contents/score/edit/harmonize/elements/calc/calcAlter.tsx","system/contents/score/edit/harmonize/tool/chordEditor.tsx","system/contents/score/edit/harmonize/elements/scoreElement.tsx","system/contents/score/edit/harmonize/harmNote.tsx","system/contents/score/edit/harmonize/harmSections.tsx","system/utils/harmonizeUtil.tsx","system/contents/score/edit/harmonize/input/backingEditorInput.tsx","system/utils/LibraryUtil.tsx","system/contents/score/edit/harmonize/input/presetSelectorInput.tsx","system/contents/score/edit/harmonize/input/themaSelectorInput.tsx","system/contents/score/edit/harmonize/side/sideFromStyles.tsx","system/contents/score/edit/harmonize/input/noteInput.tsx","system/contents/score/edit/harmonize/input/noteBasicInput.tsx","system/contents/score/edit/harmonize/side/sideFormAlter.tsx","system/contents/score/edit/harmonize/side/minuteForm.tsx","system/contents/score/edit/harmonize/side/sideFormChord.tsx","system/contents/score/edit/harmonize/side/sideFormInit.tsx","system/contents/score/edit/harmonize/side/sideFormSection.tsx","system/contents/score/edit/harmonize/side/harmSideForm.tsx","system/contents/score/edit/harmonize/info/structViewer.tsx","system/contents/backing/pattern/builder/patternDetail.tsx","system/contents/backing/pattern/builder/patternLength.tsx","system/contents/backing/pattern/builder/patternPedal.tsx","system/contents/backing/pattern/builder/patternTable.tsx","system/contents/backing/pattern/builder/patternVelocity.tsx","system/contents/backing/pattern/builder/patternBuilder.tsx","system/contents/backing/pattern/channel/channelItem.tsx","system/contents/backing/pattern/channel/patternChannel.tsx","system/contents/backing/pattern/patternOptions.tsx","system/contents/backing/pattern/patternFrame.tsx","system/contents/backing/voicing/voicingChooser.tsx","system/contents/backing/backingEditorFrame.tsx","system/contents/thema/presetSelectorFrame.tsx","system/contents/thema/themaSelectorFrame.tsx","system/contents/score/edit/harmonize/harmHideFrame.tsx","system/contents/score/edit/harmonize/initial/harmClipboard.tsx","system/contents/score/edit/harmonize/measure/harmMeasure.tsx","system/contents/score/edit/harmonize/initial/harmBackingLibrary.tsx","system/contents/score/edit/harmonize/harmonizeFrame.tsx","system/contents/score/edit/melody/util/melodyTimelineMouseOperation.tsx","system/contents/score/edit/melody/melodyTimeline.tsx","system/contents/score/edit/melody/melodyPitchList.tsx","system/contents/score/edit/melody/item/instrumentSwitch.tsx","system/contents/score/edit/melody/item/quantizeSwitch.tsx","system/contents/score/edit/melody/melodyHeader.tsx","system/contents/score/edit/melody/util/melodyMouseOperation.tsx","system/contents/score/edit/harmonize/input/melodyInput.tsx","system/contents/score/edit/melody/melodyFrame.tsx","system/contents/score/edit/editTab.tsx","system/contents/score/scoreChannel.tsx","system/contents/setting/settingChannel.tsx","system/contents/perform/performChannel.tsx","system/contents/home/homeChannel.tsx","system/contents/preview/scoreInfoTab.tsx","system/contents/preview/previewChannel.tsx","system/contents/custom/backing/treeUtil.tsx","system/contents/custom/backing/form/themaEditTabUtil.tsx","system/contents/custom/backing/form/attrFormTab.tsx","system/contents/custom/backing/form/baseFormTab.tsx","system/contents/custom/backing/form/methFormTab.tsx","system/contents/custom/backing/form/pattFormTab.tsx","system/contents/custom/backing/form/rootFormTab.tsx","system/contents/custom/backing/form/sustFormTab.tsx","system/contents/custom/backing/form/voicFormTab.tsx","system/contents/custom/backing/hierarchyNavi.tsx","system/contents/custom/backing/themaUtil.tsx","system/contents/custom/backing/backingLibraryTab.tsx","system/contents/custom/customChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getHashBuilder","Hashids","getHashedFromScoreSeq","scoreSeq","hash","encode","Base64","sendQueryRequestToAPI","hashedScoreSeq","hashids","Number","decode","hashedKey","queryType","sql","fetch","mode","method","headers","Accept","body","JSON","stringify","createQueryRequestInit","a","response","json","results","map","res","id","email","userSeq","DataUtil","val","content","encodeURIComponent","zlib","gzipSync","toString","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","plainData","state","fileHandle","createWritable","writable","text","gZip","write","close","getFile","alert","window","showSaveFilePicker","types","accept","then","handle","catch","console","log","ActionType","reducer","store","action","type","payload","SET_USER_ENV","userEnv","SET_SYSTEM_STATE","systemState","SET_SCORE_STATE","scoreState","SET_SCORE_DATA","scoreData","SET_TUNE_STATE","melodyState","tuneState","SET_REFS","refs","SET_INSTRUMENTS","instruments","SET_BACKING_STATE","backingState","SET_RESERVE_TASKS","reserveTasks","SET_INVALIDATE","invalidate","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","getBeatProps","keyIndex","scale","indexOf","relation","beatSignature","beatMemoriCount","barBeatCnt","SYMBOL_LIST","beatLen","minute","bpm","key","name","base","structs","attr","IntervalRelationProps","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","root","index","isFlat","symbolKey","props","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","baseKeyIndex","TheoryUtil","KEY12_FLAT_LIST","KEY12_SHARP_LIST","find","symbol","list","forEach","push","rootIndex","on","chordRootIndex","chordFullName","getRootName","chordOnIndex","onName","structList","struct","interval","soundIndex","adjustOctave","Math","floor","isFlatFromRelation","sameIndex","some","info","i","splice","unshift","sort","b","onIndex","sound","onChordIndex","tempList","length","divCount","Array","fill","table","channels","j","octave","structIndex","voicingList","editorPattern","channelSize","layers","layer","divs","noteDivList","signals","record","cell","x","y","status","notesList","vels","velocityList","slice","pedals","pedalActs","pedal","divIndex","voicingStructs","size","channel","reverse","scoreLayers","scoreLayer","notes","item","baseInfo","backing","pitchIndexList","chordTime","pattern","soundName","playHarmony","adjustRate","pedalRangeList","total","timeList","div","start","normal","rate","isDot","div3","sustain","undefined","divTime","pedalInfo","end","ignoreList","ig","timeInfo","timingAdj","timing","startTime","sustainTime","signal","inc","isNext","nextNotes","next","k","notesTail","velAdj","gain","setTimeout","dispatcher","harmonyFont","stop","isPreview","clearInterval","setState","memoriCount","head","tail","getUsingLenFromDivs","reduce","prev","cur","len","checkOverlapBackLayer","structCnt","col","isExist","voicing","voicingTable","patternProps","BackingUtil","buildChannels","getChannels","convertEditorLayerFromScore","channelIndex","lenIndex","layerIndex","detail","chordBacking","hasError","limitLen","getLimitLen","totalLen","chordInfo","init","baseLayer","backLayer","getDivRange","left","right","isOverlap","backLeft","backRight","note","includes","chordList","elementCacheList","sectionCacheList","beatCacheList","scaleCacheList","tempoCacheList","measureCacheList","totalMinute","sectionNo","sectionBeatSum","pastSecond","curSecond","chordIndex","curMemoriCount","totalBarCount","totalMemoriCount","beatRangeMemoriCount","totalBeat","totalMemoriBarCount","chordBlockNo","scaleMemoriCount","tempoMemoriCount","addTempoRange","beatRate","beatProps","memoriCnt","element","prevBeat","prevMemoriCount","prevBarCount","prevMinute","fixed","labelName","beatSum","rangeIndexStart","rangeIndexEnd","prevBar","calcSustainMsec","barMemoriCount","dispBarCount","barCount","alterType","modRel","dommVal","keyAdj","tempoRel","tempoDiff","tempoRate","tempoAbs","bar","surplusBeat","curTotalMemori","reffers","chordCacheList","createChordCacheList","score","setScoreState","cache","getSymbolFromKey","getChordDetails","backingError","hasBackingError","pos","curMemori","range","posTime","pastLen","last","CacheUtil","getKeyIndexFromPitcher","PITCH_MAX","getNormalizeLenFromNotes","len4","len8","len16","len32","len4div3","len8div3","getAdditionNotsLen","notes1","notes2","ml","getSortetdNotesLen","len32Cnt2","len8div3Cnt3","len8div3Cnt2","len4div3Cnt3","len16Cnt2","len8Cnt2","getNotesLenFromQuantize","quantize","count","getMinimumLenUnit","playSoundfont","instrument","melodyFont","play","duration","soundFullName","stopPreview","melody","adjustScrollX","previewHarmony","data","focusIndex","lastFocus","update","firstTime","getTimeInfoFromNotesPos","lenTime","pitch","pitchIndex","destIndex","isSolo","system","setReserveTasks","cacheList","chordCache","pitchList","getPitchListFromVoicing","playBacking","tableMouse","curChord","MelodyUtil","TUNE_PITCH_WIDTH","TUNE_PITCH_HEIGHT","PATTERN_HEADER_HEIGHT","PATTERN_BODY_HEIGHT","NOTES_1BAR_WIDTH","Dispatcher","dispatch","setUserEnv","switchSplashToMain","isSplash","setMainTabIndex","mainChannelIndex","setRefs","setInvalidate","saveFile","directScore","setHarmonyFont","soundfontPlayer","harmony","setInstruments","setScoreTabIndex","scoreTabIndex","clearCache","distIndex","initialBeat","setKeySwitch","keySwitch","setScoreData","moveElement","sub","moveDist","releaseRange","isTail","distHead","distTail","moveSection","curSectionIndex","curSectionInfo","curElementType","flashElement","incrementDegreeRoot","isUp","incrementBeatLen","updateHarmonizeCache","incrementMinuteVal","value","target","incrementMinuteValRelation","nearIndex","addChordElement","curBeatLen","addSectionElement","addAlterElement","removeElement","removeBacking","copyElementList","parse","copiedElementList","cloneBacking","pasteElementList","setDiatonicChord","diatonicIndex","chord","DIATONIC_MAJOR_SCALE_LIST","DIATONIC_MINOR_SCALE_LIST","setDefaultBacking","getDefaultBacking","pastBacking","openLibraryWnd","isPreset","hideMenu","symbolAttr","tabIndex","closeAction","closeLibraryWnd","toNext","mng","symbolMng","curLine","toBase","parentLine","toDerive","childrenLine","allSelect","setNotesList","setMelodyFont","incrementCurPitch","isUpper","filter","dataHistory","add","normalLeft","scaleInfo","getKeyScaleFromNotesPos","scaleIndexies","MAJOR_SCALE_INTERVALS","MINOR_SCALE_INTERVALS","prevPitchIndex","tempPitchIndex","adjustScrollY","moveFocus","updateCurChord","moveDestFocus","beatWidth","searchedChord","width","addNotes","focus","newLeftNormal","nextNormalPos","newRightNormal","removeNotes","delNum","resizeNotes","isSpread","curLenNormal","curNormalRight","resizeNormal","moveNotes","isBehind","prevNormalRight","nextNormalLeft","moveNormal","curNormalLeft","firstNotes","notesX","scrollTo","behavior","notesY","top","clientHeight","previewStart","copyNotes","focusStart","num","cloneNotesList","baseUnit","unit","useUnit","normalPos","pasteNotes","newLeft","pastList","pastLast","concat","posA","posB","undo","history","redo","openBackingEditor","getInitVoicingTable","getEditorPatternFromChordBacking","getVoicingListFromTable","checkEditorError","editor","isUpdate","mappingEditorToScore","closeBackingEditor","getInitialLayer","buildPatternProps","addPatternColumn","lenList","curLen","newLen","column","updateErrorState","movePatternColumn","isRight","tempIndex","moveChannelIndex","isDown","setCurrentDivRate","toggleCurrentDivHalf","isPermitDot","getNotes","setNotes","incrementVel","after","deleteColumn","switchLayer","switchMode","testBacking","thema","mappingEditorToThema","mappingSelectorToScore","this","DataHistory","ret","initialStore","keyConfig","up","down","addChord","addSection","addChange","deleteCur","distMode","edit1","edit2","incRoot","decRoot","incBeat","decBeat","colorProps","entryBackground","editable","dialog","themaList","activeThemaIndex","isMelody","sustainMode","chordMode","symbolMode","control","minHeadMode","minTailMode","backingDataHistory","isPut","lock","prevRight","nextLeft","notesState","side","isResize","isMove","mousePitchIndex","mouseMeasurePos","timelineMouse","soundfontInfo","scaleMode","resize","move","shift","notesCacheList","harmonize","measure","harmoniizeInvalidate","GloballDialog","useContext","GlobalContext","_Blind","onClick","styled","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","_CSS_LABEL_SMALL","_CSS_LABEL_MIDIUM","_CSS_DISABLE","ChannelPane","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","icon","isActive","isEnable","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","ChannelContents","_Contents","CSS_BUTTON_DISABLE","_Label","TabbedPane","tabRecordNum","isDisable","disable","TabLabel","_TabLabel","TabContents","condition","UNIT_LIST","beat","step","firstChord","secondChord","parseChord","source","baseBeat","keyList","split","charAt","newBeat","diatonicNo","diatonicProps","adjustKey","adjust","shortNameKey","substring","getSymbolFromShortName","shortName","ProgUnitSearcher","ProgStyle","CSS_LABEL_MIDIUM","select","progBackingUtil","patternConditions","voicingConditions","STEP_LIST","getDefaultChord","sectionName","backingNo","outputUnits","elementList","block","blockDetail","sample","BACKING_SAMPLE_LIST","conPa","unZip","conVo","ProgUtil","ProgCustomFrame","setStep","degreeFilters","setDegreeFilters","lastChord","setLastChord","setFocusIndex","stepList","useMemo","getFilteredStepList","stepOptionJsxList","disp","degreeOptionJsxListArray","DEGREE_FILTER_LIST","unitList","search","jsx","dispUnitJsx","tootTipStr","beatCycle","chordName","getDegreeRoot","divStr","_Span","isMatch","_ChordName","_ProgItem","title","progUnitList","progJsxList","degreeChangeAction","e","_Frame","_TitleLabel","_Combobox","onChange","stepChangeAction","getLastChordName","_ListDiv","_ButtonDiv","_ExecutableButton","unitNum","reset","progUnit","insertProgUnit","_Record","RECORD_HEIGHT","span","DummyUtil","ProgOutputFrame","SECTION_CATEGORY","SECTION_NO","secCatOptionJsxList","secNoOptionJsxList","backingSampleJsxList","blockJsxList","isFixed","_Block","_FixedItem","_BackingLabel","updateOutputUnits","_ChordListDiv","_ChordItem","_ChordNameLabel","_ChordBeatDiv","jsxList","_BeatTip","getBeatTipsJsx","getInner","CSS_LABEL_SMALL","TEMPLATE_LIST","template","ProgTemplateUtil","ProgTemplateFrame","templateList","templateJsxList","isFocus","applyProgTemplate","ChordProgDialog","buildMode","setBuildType","getBlankBlockList","setOutputUnits","beatFilter","setBeatFilter","beatOptionJsxList","BEAT_DEF_LIST","chordDetail","templateBean","getInitialBlockList","createSwitchableButton","clickEvent","_SwitchableButton","beatComboboxEnable","distBeatFilter","_Header","_MainDiv","_LeftDiv","_BeatFormDiv","beatChangeAction","_SwitchDiv","getSwitchContJsx","_RightDiv","_Footer","buildScoreData","HEADER_HEIGHT","BEAT_HEIGHT","ManageTab","file","setFile","loginProps","login","cloudScoreList","setCloudScoreList","cloudScoreName","setCloudScoreName","cloudScoreShare","setCloudScoreShare","loadCloudScore","findUserScoreList","seq","resList","url","getPreviewURL","share","modified","tempo","section","time","getStringFromDate","Date","lastModified","sectionNum","chordNum","fileInfo","scoreInfo","textValue","changeAction","createLabelRecord","labelValue","_Recored","_ItemnLabel","_ItemnValue","fileDisconnectAction","isDataConnect","cloudScoreListJsx","_Message","_CloudItem","_CName","_CHash","curCloudScore","uploadEnable","isExistEditingData","isSelectedScore","_Wrap","_ButtonsDiv","_Button","_Left","_CloudDiv","newScoreName","_ListFrame","findScore","_Right","showOpenFilePicker","fileContents","_DataInfoDiv","_ItemnInput","_ItemnURL","onContextMenu","navigator","clipboard","writeText","_ItemnCombobox","_ScoreInfoDiv","DATA_INFO_HEIGHT","input","SymbolEditor","curSymbol","baseSymbol","derives","getSymbolDerives","parentJsx","curJsx","childrenJsx","_Row","CalcChord","symbolName","chordRoot","chordOn","prevCache","isError","minuteStr","_Detail","_Chord","_Pos","_Section","_Beat","_PastSecond","round","ELEMENT_POS_INFO_WIDTH","CalcSection","curSection","barSum","barRem","_Len","_Border","ElementDetailAlter","_Type","sign","getDetailInfo","ElementDetailChord","degreeRoot","degreeOn","isDiatonic","getDiatonicDegreeList","_Degree","isSwitch","isSustainMode","scaleRelation","isOnChordScale","_DegreeRoot","_Tip","lenType","valueType","abs","_TipItem","_Error","_Voicing","_Pattern","isCurrent","_DegreeSymbol","_DegreeOnChord","_Backing","ElementFixedBorder","isStart","ElementDetailInit","_Title","_Value","ElementDetailSection","CalcAlter","getType","prevKey","curKey","curCache","prevTempo","curTempo","curBeat","getDetail","ChordEditor","getChord","createRow","label","listJsx","rootName","ScoreElement","wrapRef","useRef","bodyRef","isRange","isSameSection","wrap","current","elementJson","isInactive","ref","isSelectable","isAdditional","_Head","_CurKey","getDisplayKeyScaleName","_Form","isAnytime","_Operations","_OperationItem","ELEMENT_HEAD_WIDTH","ELEMENT_OPERATIONS_WIDTH","HarmNote","HarmSections","sections","curSectionNo","_Total","addProgAction","callback","HarmonizeUtil","previewMelody","clearTimeout","edit","common","patternNormalMode","patternDetailMode","test","isEdit","baseVel","tempTiming","tempVelAdj","vel","curNotes","BackingEditorInput","isChordElement","isUseLib","isRangeSelect","attrsSearch","patts","patt","preset","voicCallback","pattVoicCallback","refer","attrs","master","fPatt","getAttrs","symbols","roots","minIdx","maxIdx","voics","voic","preUsies","preUse","depPatt","presKey","searchSustMeth","sustMet","defs","pattName","searchPattMeth","pattMet","pattCallback","sust","patternList","pattIndex","depend","masterIdx","isBlank","pattIdx","isDepend","conditionList","meths","meth","prenams","applyList","con","backingList","dispName","LibraryUtil","PresetSelectorInput","field","moveList","listIndex","presetList","applyAction","ThemaSelectorInput","focusSide","voicIndex","filteredList","acceptVoic","moveSide","isPermitTest","NoteKeyDown","config","isElement","curType","libEnables","getEnableState","previewCurHarmony","NoteBasicInput","main","NoteKeySwitch","isPress","min","max","_NumberForm","SideFormStyles","SideFormAlter","createAlertTypeItem","createModulateRelationItem","rel","createTempoRelationItem","createBeatItem","donmmItemJsxList","_ParamDiv","_ParamItem","keyAdjItemJsxList","_Group","_CategoryLabel","createNumberForm","currentTarget","valueAsNumber","___CSS_TITLE","___CSS_FORM","JUDGE_INFO_LIST","MinuteForm","rateMinus","ratePlus","isRed","JudgeJsxList","judge","_JudgeItem","setValue","createJudgeItem","isHead","_View","_ViewFrame","isLeft","_Judge","SideFormChord","beatItemsJsx","_BeatItem","rootItemsJsx","DEGREE_ALL","degree","isRootActive","isOnActive","_RootItem","symbolItemsJsx","_SymbolItem","createMinuteForm","_Timing","_BeatDiv","_Minute","_RootDiv","_SymbolDiv","SideFormInit","scaleItemJsxList","SCALE_DEF_LIST","_ScaleItem","keyItemJsxList","_KeyItem","rateItemJsxList","_RateItem","_LabelTitle","_ScaleWrap","_KeyWrap","_RateWrap","SideFormSection","setLabelName","templateItemJsxList","_TemplateItem","numberItemJsxList","splitList","_NumberItem","_DirectText","_SelectDiv","_TemplateFrame","_NumberFrame","_ItemBase","HarmSideForm","StructViewer","indexList","scaleList","structJsxList","curIndex","isScale","isUse","isBlack","_Struct","WIDTH","PatternDetail","_DelayDiv","_TimingValue","_VelocityDiv","_VelFrame","_VelItem","VEL_DIV_WIDTH","PatternLength","itemJsxList","PatternPedal","_Column","PatternTable","channelCount","curLayer","layerJsxList","jsxLsit","notesJsxLsit","setNotesStatus","viewSignal","prevCell","_Notes","isBack","_State","isEven","isFront","_Layer","zIndex","PatternVelocity","PatternBuilder","useTotalLen","isLenOverError","memoriWidth","memoriJsxList","bean","thickness","height","color","_Memori","_LengthDiv","_MeasureDiv","_MemoriList","_ChordLenLine","_OverCover","_Body","ChannelItem","soundfont","_Option","CHANNEL_MAX","initialCellArray","getInitialRecord","PatternChannel","channelJsxList","structInfo","_LayerItem","_ModeItem","proops","PatternOptions","createItem","createRateItem","String","setRate","sizeJsxList","_ListItem","isPermit3ren","lenModeJsx","_WrapLen","_List","prevSize","newSize","delCnt","tableRecord","curCell","setRowStaccato","isSet","editModeJsx","_WrapEdit","hasStaccato","isExistNext","isEnableTai","option","PatternFrame","isUsePattern","_UseSwitch","isUsePedal","_Main","_StatusDiv","_ChannelDiv","_BuilderDiv","PATTERN_OPERATION_HEIGHT","VoicingChooser","channelLimitNum","OCTAVE_NUM","STRUCT_NUM","rowJsxList","selectCount","cellJsxList","isSelected","key12List","getSoundFullName","_Cell","isOver","_TableRow","_StructItem","isOnChord","_InfoItem","_EditorDiv","_StructDiv","_TableDiv","_InfoDiv","TIP_WIDTH","BackingEditorFrame","setSource","syncSource","_LabelFrame","_PrevireBrind","_FooterDiv","_SourceFrame","_TextArea","textarea","PresetSelectorFrame","setField","minIndex","maxIndex","inputCache","targetList","getPresetList","focusPreset","_PresetItem","_Preset","_Method","_ApplyItem","applyItem","_Result","apply","presetJsxList","applyJsxList","useCallback","chordElement","matchCondition","_BodyDiv","_Sum","_Rate","toFixed","ThemaSelectorFrame","updateBacking","voicingProps","v","join","soundList","isNone","fullName","getDistinctionFromRelate","dispLabel","pattJsxList","voicJsxList","HarmHideFrame","isOpen","enableState","Component","isVisible","HarmClipboard","_TypeDiv","MEMORI_WIDTH","HarmMeasure","dataList","_Margin","_Bar","beatJsxList","minuteJsxList","isChordFocus","curChordIndex","beatMemori","posMemori","_SustainItem","scrollPos","_ScrollFrame","_Blocks","_Measure","HarmBackingLibrary","themaName","HarmonizeTab","timelineJsx","structViewerJsx","scoreCache","sideFormEnable","onKeyDown","onKeyUp","_SectionsDiv","_Middle","_Foot","_TIMELINE_WRAP","_INFO_WRAP","HARMONIZE_RIGHT_WIDTH","HARMONIZE_HEAD_WIDTH","MelodyTimelineMouseOperation","mouseDownEvent","timelineLength","button","rect","getBoundingClientRect","clientX","mouseMoveEvent","mouse","mouseUpEvent","scrollLeft","MelodyTimeline","measureRef","chordRef","barLength","measureJsxList","chordJsxList","minuteLen","scroll","clientWidth","symbolNmae","degreeName","_DegreeName","_ChordWrap","_MeasureWrap","_MeasureInner","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","_MousePos","MelodyPitchList","pitchItemJsxList","structIndexList","getOctaveName","_PitchItem","isStruct","_OctaveWrap","_OctaveItem","_PitchWrap","InstrumentSwitch","Soundfont","AudioContext","release","soundFontPlayer","QuantizeSwitch","MelodyHeader","_OperationDiv","_QuantizeSelector","_Control","_InstrumentSelector","MelodyMouseOperation","getNextLeft","clientY","scrollTop","curPos","posX","lenWidth","newPos","prevFocus","MelodyInput","keyDownEvent","isSingle","keySwitchEvent","MelodyFrame","tableRef","pitchRef","setInvalidate2","isTune","scaleDivJsxList","divList","scaleJsxList","_ScaleLine","isBase","_ScaleList","notesJsxList","normalWidth","notesLeft","focusEnd","unitPos","unitLen","_NotesWrap","isOctave","_MouseLinePos","_MouseRange","_Timeline","_Pitch","_TableWrap","onScroll","_TableMeasure","_TablePitch","_TableNotes","_Test","editAnimation","keyframes","_MouseLine","TUNE_TIMELINE_WIDTH","_Scale","EditTab","isDirect","preview","toggleEnsamble","playJsx","_SwitchInner","stopJsx","ensambleJsx","soloJsx","_Mode","_Buttons","_Switch","ScoreChannel","isAccept","SCORE_TAB_MARGIN","SettingChannel","PerformChannel","createLane","items","degreeRootName","chordRootName","_Lane","_Box","HomeChannel","useAuth0","isAuthenticated","user","isLoading","userId","setUserId","userCount","setUserCount","scoreList","setScoreList","countUsers","cnt","findAllScore","registerLabel","registerAction","location","reload","scoreListJsx","open","_Owner","owner","dispnam","_CDate","lastmod","_MessageRecord","_ListInfoDiv","_ItemnForm","ScoreInfoTab","PreviewChannel","TreeUtil","parent","depth","children","node","parentNode","focusNode","buildElementNodeFromData","build","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","buildJsxRecords","spaceList","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","onDoubleClick","getLabelJsx","ThemaEditTabUtil","titleLabel","labelText","readOnly","_BorderText","_BorderPanel","innerJsx","buttons","_ListRecordFrame","records","dim","buttonJsxList","_ListRecordButton","_ListRecordItem","_ListRecordLabel","AttrFormTab","ThemaTreeContext","setFocusNode","setTreeDisable","setAttr","setSymbols","errorList","setErrorList","targetSymbolList","getSymbolsFromAttr","InputComboboxForm","createBlankCatList","SymbolAttributeList","_SymbolKey","BorderPanel","TextAreaView","ButtonDiv","attrData","isPattern","selfIndex","getChildIndex","LabelTextItem","newNode","createNode","BaseFormTab","setThamaData","setThemaName","themaData","InputTextForm","addThema","ListManager","MethFormTab","presetName","setPresetName","setPrenams","nextPresetSeq","setNextPresetSeq","isSustMeth","pre","p","prenam","PattFormTab","setBackingWnd","parentData","sustData","setPattName","setRefer","setRootIndex","setSymbolKsy","hasDepend","permitDependKeys","useDepend","matchChannel","parseInt","key12","idx","chordPattern","pattData","RootFormTab","setMinIdx","setMaxIdx","rootData","SustFormTab","setBeat","setHead","setTail","VoicFormTab","methData","setSymbolKey","depPattKey","setDepPattKey","setPreset","setPreUsies","symbolList","depPatts","curPattKey","editorUpdate","voicSrc","editorClose","voicData","HierarchyNavi","addBaseInfo","_Base","addMethInfo","_Meth","addSustInfo","_Sust","addPattInfo","_Patt","addAttrInfo","symbolNameList","_Attr","addRootInfo","nameList","_Root","addVoicInfo","_Voic","_TextField","ThemaUtil","innderJsx","setAttrJsx","_TypeLabel","_Create","_C_Symbol","getMainLabel","setRootJsx","setVoicJsx","setBaseJsx","setMethJsx","_P_Key","_P_Channel","_P_Master","_P_Depend","_NodeFrame","_CSS_FONT","createContext","BackingLibraryTab","getInitialThema","isBackingWnd","treeDisable","getDefsChildren","tabInner","contJsx","_TabContWrap","_TreeDiv","_TreeHead","_TreeBody","Frame","_PropsDiv","Provider","CustomChannel","MainFrame","basename","process","RouterManage","str","URLSearchParams","useLocation","get","path","exact","hashKey","DirectView","conteseq","getDecryptionedScoreSeq","to","MAIN_FRAME_MARGIN","Splash","setSwitch","timerId","setTimerId","remove","_NowLoading","_Copylight","fadeIn","TotalHeader","loginWithRedirect","logout","origin","findUserInfo","userList","userProps","authButtonJsx","_UserName","isEntry","_LoginButton","_ACCENT","_NORMAL","_Menu","_Language","_MenuItem","TOTAL_HEADER_WIDTH","SystemEntry","useReducer","App","document","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0e989ead.chunk.js","sourcesContent":["import zlib from \"zlib\";\r\nimport { ScoreState } from \"../redux/store/score/scoreState\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport Hashids from 'hashids';\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n    \r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5000';\r\n    // export const DB_SERVER_DOMAIN = 'https://licresia-demo01-server.glitch.me';\r\n    export const DB_SERVER_DOMAIN = 'https://licresia-server.glitch.me';\r\n    \r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4000';\r\n    // export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/licresia_demo_app';\r\n    export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         // sampleテーブルから全カラムのデータをid順に取得\r\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\r\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\r\n\r\n    //         if (error) {\r\n    //             throw error;\r\n    //         }\r\n    //         if (data) {\r\n    //             console.log(data);\r\n    //         }\r\n    //     } catch (error: any) {\r\n    //         alert(error.message);\r\n    //     } finally {\r\n\r\n    //     }\r\n    // };\r\n\r\n    const getHashBuilder = () => {\r\n        return new Hashids('licresia-demo', 8);\r\n    }\r\n\r\n    export const getHashedFromScoreSeq = (scoreSeq: number) => {\r\n        const hashids = getHashBuilder();\r\n        const hash = hashids.encode(scoreSeq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedScoreSeq = (hashedScoreSeq: string) => {\r\n        const hashids = getHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedScoreSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromScoreSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id FROM user_tbl`);\r\n        const results = await response.json();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfo = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findScore = async (scoreSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    export const saveFile = (plainData: string, state: ScoreState) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.lcrs'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        const fileHandle = state.fileHandle;\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                state.fileHandle = fileHandle;\r\n                // this.score.setScoreState({ ...state });\r\n                const file = await fileHandle.getFile();\r\n                alert('saved successfully!');\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = handle;\r\n                    // this.score.setScoreState({ ...state });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataUtil;","import { Store } from \"./store/store\";\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_USER_ENV,\r\n    SET_SYSTEM_STATE,\r\n    SET_SCORE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_SCORE_DATA,\r\n    SET_REFS,\r\n    SET_INSTRUMENTS,\r\n    SET_BACKING_STATE,\r\n    SET_RESERVE_TASKS,\r\n    SET_INVALIDATE,\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\nexport const reducer = (store: Store, action: Action): Store => {\r\n    const type = action.type;\r\n    const payload = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_USER_ENV:\r\n            store.userEnv = payload.userEnv;\r\n            break;\r\n        case ActionType.SET_SYSTEM_STATE:\r\n            store.systemState = payload.systemState;\r\n            break;\r\n        case ActionType.SET_SCORE_STATE:\r\n            store.scoreState = payload.scoreState;\r\n            break;\r\n        case ActionType.SET_SCORE_DATA:\r\n            store.scoreData = payload.scoreData;\r\n            break;\r\n        case ActionType.SET_TUNE_STATE:\r\n            store.melodyState = payload.tuneState;\r\n            break;\r\n        case ActionType.SET_REFS:\r\n            store.refs = payload.refs;\r\n            break;\r\n        case ActionType.SET_INSTRUMENTS:\r\n            store.instruments = payload.instruments;\r\n            break;\r\n        case ActionType.SET_BACKING_STATE:\r\n            store.backingState = payload.backingState;\r\n            break;\r\n        case ActionType.SET_RESERVE_TASKS:\r\n            store.reserveTasks = payload.reserveTasks;\r\n            break;\r\n        case ActionType.SET_INVALIDATE:\r\n            store.invalidate = payload.invalidate;\r\n            break;\r\n    }\r\n    return { ...store };\r\n}","import { BeatSignature, Scale } from \"../redux/store/score/scoreData\";\r\n\r\nnamespace TheoryUtil {\r\n\r\n    export const MAJOR_SCALE_INTERVALS = [0, 2, 4, 5, 7, 9, 11];\r\n    export const MINOR_SCALE_INTERVALS = [0, 2, 3, 5, 7, 8, 10];\r\n\r\n    export const KEY12_FLAT_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n    export const KEY12_SHARP_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n    ];\r\n\r\n    export const DEGREE12_FLAT_LIST = [\r\n        'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n    ];\r\n    // export const DEGREE12_FLAT_LIST = [\r\n    //     'I', 'bII', 'II', 'bIII', 'III', 'IV', 'bV', 'V', 'bVI', 'VI', 'bVII', 'VII'\r\n    // ];\r\n    export const DEGREE12_SHARP_LIST = [\r\n        'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n    ];\r\n\r\n    export const KEY12_MAJOR_SCALE_LIST = [\r\n        'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const KEY12_MINOR_SCALE_LIST = [\r\n        'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'\r\n    ];\r\n\r\n    export const getDisplayKeyScaleName = (keyIndex: number, scale: Scale) => {\r\n        return scale === 'major' ? KEY12_MAJOR_SCALE_LIST[keyIndex] :\r\n            KEY12_MINOR_SCALE_LIST[keyIndex] + 'm';\r\n    };\r\n\r\n    export const isFlat = (keyIndex: number, scale: Scale) => {\r\n        const scaleName = scale === 'major' ? KEY12_MAJOR_SCALE_LIST[keyIndex] :\r\n            KEY12_MINOR_SCALE_LIST[keyIndex];\r\n        return scaleName.indexOf('b') !== -1;\r\n    };\r\n\r\n    export const SCALE_DEF_LIST = ['major', 'minor'] as const;\r\n    export const BEAT_DEF_LIST = ['2/4', '4/4', '3/4', '6/8', '9/8', '12/8'] as const;\r\n\r\n    export type IntervalRelation =\r\n        'p1' | 'm2' | 'M2' | 'm3' | 'M3' | 'p4' |\r\n        'd5' | 'p5' | 'a5' | 'm6' | 'M6' |\r\n        'd7' | 'm7' | 'M7'\r\n        ;\r\n\r\n    export const isFlatFromRelation = (relation: IntervalRelation) => {\r\n        // 以下の場合#（シャープ）とする\r\n        switch (relation) {\r\n            case 'M2':\r\n            case 'M3':\r\n            case 'M6':\r\n            case 'M7':\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    export const SymbolAttributeList = [\"triad\", \"seventh\", \"add9th\", \"ninth\"] as const;\r\n\r\n    export type SymbolAttribute = typeof SymbolAttributeList[number];\r\n\r\n    export type SymbolParams = {\r\n        key: SymbolKey;\r\n        name: string;\r\n        base: null | SymbolKey;\r\n        attr?: SymbolAttribute;\r\n        structs: IntervalRelation[];\r\n    }\r\n\r\n    export type BeatProps = {\r\n        // mol: number;\r\n        // den: number;\r\n        // 1拍のメモリ（16分音符）の数\r\n        beatMemoriCount: number;\r\n        // 1小節の拍数\r\n        barBeatCnt: number;\r\n    }\r\n\r\n    /**\r\n     * 拍子より拍情報を取得する\r\n     * @param beatSignature 拍子\r\n     * @returns 拍情報\r\n     */\r\n    export const getBeatProps = (beatSignature: BeatSignature): BeatProps => {\r\n        switch (beatSignature) {\r\n            case '4/4': return { beatMemoriCount: 4, barBeatCnt: 4 };\r\n            case '2/4': return { beatMemoriCount: 4, barBeatCnt: 2 };\r\n            case '3/4': return { beatMemoriCount: 4, barBeatCnt: 3 };\r\n            case '6/8': return { beatMemoriCount: 6, barBeatCnt: 2 };\r\n            case '9/8': return { beatMemoriCount: 6, barBeatCnt: 3 };\r\n            case '12/8': return { beatMemoriCount: 6, barBeatCnt: 4 };\r\n        };\r\n        // return {} as BeatProps;\r\n    }\r\n\r\n    /**\r\n     * 拍の長さからコードの持続時間をミリ秒で算出する\r\n     * @param beatLen \r\n     * @param minute \r\n     * @param bpm \r\n     * @param beatSignature \r\n     * @returns \r\n     */\r\n    export const calcSustainMsec = (beatLen: number, minute: number, bpm: number, beatSignature: BeatSignature): number => {\r\n        const beatMemoriCount = getBeatProps(beatSignature).beatMemoriCount;\r\n        const minuteLen = minute * (1 / beatMemoriCount);\r\n        return 60000 / bpm * (beatLen + minuteLen);\r\n    }\r\n\r\n\r\n    export type ScaleRelation = 'diatonic' | 'secondaly' | 'none'\r\n\r\n    export type SymbolKey =\r\n        'major' |\r\n        'minor' |\r\n        'suspend4th' |\r\n        'diminish' |\r\n        'augument' |\r\n        'major-maj7th' |\r\n        'major-min7th' |\r\n        'minor-7th' |\r\n        'minor-maj7th' |\r\n        'sus4-7th' |\r\n        'diminish-7th' |\r\n        'augument-7th' |\r\n        'major-add9th' |\r\n        'minor-add9th' |\r\n        'sixth-9th' |\r\n        'minor-minus5' |\r\n        'major-minus5' |\r\n        'minor7-minus5' |\r\n        'major-maj9th' |\r\n        'major-9th' |\r\n        'sixth' |\r\n        'minor-sixth'\r\n        ;\r\n\r\n    export type DegreeProps = {\r\n        index: number;\r\n        isFlat: boolean;\r\n    };\r\n\r\n    export type ChordProps = {\r\n        root: DegreeProps;\r\n        symbolKey: SymbolKey;\r\n    };\r\n\r\n    export const SYMBOL_LIST: readonly SymbolParams[] = [\r\n        {\r\n            key: 'major', name: '',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor', name: 'm',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'suspend4th', name: 'sus4',\r\n            base: null,\r\n            structs: ['p1', 'p4', 'p5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish', name: 'dim',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'diminish-7th', name: 'dim7',\r\n            base: 'diminish',\r\n            structs: ['p1', 'm3', 'd5', 'd7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'augument', name: 'aug',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'a5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'augument-7th', name: 'aug7',\r\n            base: 'augument',\r\n            structs: ['p1', 'M3', 'a5', 'm7']\r\n        },\r\n        {\r\n            key: 'minor-minus5', name: 'm(-5)',\r\n            base: null,\r\n            structs: ['p1', 'm3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'major-minus5', name: '-5',\r\n            base: null,\r\n            structs: ['p1', 'M3', 'd5'],\r\n            attr: 'triad'\r\n        },\r\n        {\r\n            key: 'minor7-minus5', name: 'm7(-5)',\r\n            base: 'minor-minus5',\r\n            structs: ['p1', 'm3', 'd5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-maj7th', name: 'maj7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-min7th', name: '7',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'minor-7th', name: 'm7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'm7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'sus4-7th', name: '7sus4',\r\n            base: 'suspend4th',\r\n            structs: ['p1', 'p4', 'p5', 'm7']\r\n        },\r\n        {\r\n            key: 'minor-maj7th', name: 'mmaj7',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'M7'],\r\n            attr: 'seventh'\r\n        },\r\n        {\r\n            key: 'major-add9th', name: 'add9',\r\n            base: 'major',\r\n            structs: ['p1', 'M2', 'M3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'minor-add9th', name: 'madd9',\r\n            base: 'minor',\r\n            structs: ['p1', 'M2', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-maj9th', name: 'maj9',\r\n            base: 'major-maj7th',\r\n            structs: ['p1', 'm3', 'p5'],\r\n            attr: 'add9th'\r\n        },\r\n        {\r\n            key: 'major-9th', name: '9',\r\n            base: 'major-min7th',\r\n            structs: ['p1', 'm3', 'p5']\r\n        },\r\n        {\r\n            key: 'sixth', name: '6',\r\n            base: 'major',\r\n            structs: ['p1', 'M3', 'p5', 'M6']\r\n        },\r\n        {\r\n            key: 'minor-sixth', name: 'm6',\r\n            base: 'minor',\r\n            structs: ['p1', 'm3', 'p5', 'M6']\r\n        },\r\n    ];\r\n\r\n    /** インターバルの関係性 */\r\n    export const IntervalRelationProps = {\r\n        'p1': 0,\r\n        'm2': 1,\r\n        'M2': 2,\r\n        'm3': 3,\r\n        'M3': 4,\r\n        'p4': 5,\r\n        'd5': 6,\r\n        'p5': 7,\r\n        'a5': 8,\r\n        'm6': 8,\r\n        'M6': 9,\r\n        'd7': 9,\r\n        'm7': 10,\r\n        'M7': 11\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n        { root: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n    ];\r\n\r\n    export const DIATONIC_MINOR_SCALE_LIST: readonly ChordProps[] = [\r\n        { root: { index: 0, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 2, isFlat: false }, symbolKey: 'minor-minus5' },\r\n        { root: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 5, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 7, isFlat: false }, symbolKey: 'minor' },\r\n        { root: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n        { root: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n    ];\r\n\r\n\r\n\r\n    export const DEGREE_ALL: readonly (DegreeProps | null)[] = [\r\n        null,\r\n        { index: 0, isFlat: false },\r\n        { index: 1, isFlat: false },\r\n        { index: 1, isFlat: true },\r\n        { index: 2, isFlat: false },\r\n        { index: 3, isFlat: false },\r\n        { index: 3, isFlat: true },\r\n        { index: 4, isFlat: false },\r\n        { index: 5, isFlat: false },\r\n        { index: 6, isFlat: false },\r\n        { index: 6, isFlat: true },\r\n        { index: 7, isFlat: false },\r\n        { index: 8, isFlat: false },\r\n        { index: 8, isFlat: true },\r\n        { index: 9, isFlat: false },\r\n        { index: 10, isFlat: false },\r\n        { index: 10, isFlat: true },\r\n        { index: 11, isFlat: false }\r\n    ];\r\n\r\n    export const getDegreeRoot = (props: DegreeProps) => {\r\n        const list = props.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n        return list[props.index];\r\n    }\r\n\r\n    export const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰ', 'Ⅰmaj7',\r\n        'Ⅱm', 'Ⅱm7',\r\n        'Ⅲm', 'Ⅲm7',\r\n        'Ⅳ', 'Ⅳmaj7',\r\n        'Ⅴ', 'Ⅴ7',\r\n        'Ⅵm', 'Ⅵm7',\r\n        'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n    ];\r\n\r\n    export const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n        'Ⅰm', 'Ⅰm7',\r\n        'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n        'bⅢ', 'bⅢM7',\r\n        'Ⅳm', 'Ⅳm7',\r\n        'Ⅴm', 'Ⅴm7',\r\n        'bⅥ', 'bⅥM7',\r\n        'bⅦ', 'bⅦ7'\r\n    ];\r\n\r\n    export const getDiatonicDegreeList = (scale: Scale) => {\r\n        return scale === 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES :\r\n            DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\r\n    }\r\n\r\n    export const getRootName = (\r\n        props: DegreeProps,\r\n        baseKeyIndex: number\r\n    ): string => {\r\n        const list = props.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST;\r\n        return list[(baseKeyIndex + props.index) % 12];\r\n    }\r\n\r\n\r\n\r\n    export const getSymbolFromKey = (key: string): SymbolParams | undefined => {\r\n        return SYMBOL_LIST.find((symbol) => {\r\n            if (key === symbol.key) {\r\n                return symbol;\r\n            }\r\n        });\r\n        // return ret != undefined ? ret : SYMBOL_LIST[0];\r\n    }\r\n\r\n    export const getSymbolsFromAttr = (attr: SymbolAttribute): SymbolParams[] => {\r\n        const list: SymbolParams[] = [];\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (attr === symbol.attr) {\r\n                list.push(symbol);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n\r\n    export const getSymbolDerives = (key: SymbolKey): SymbolKey[] => {\r\n        let list: SymbolKey[] = [];\r\n        SYMBOL_LIST.forEach((symbol) => {\r\n            if (key === symbol.base) {\r\n                list.push(symbol.key);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n\r\n    export const getIntervalValues = (rootIndex: number, structs: IntervalRelation[]): number[] => {\r\n        return structs.map(relation => rootIndex + IntervalRelationProps[relation]);\r\n    }\r\n}\r\n\r\nexport default TheoryUtil;\r\n\r\n","import { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { BackingLayerData, BackingPatternProps, BackingSignalProps, BeatSignature, ChordBacking, DetailChord, DetailInit, PedalInfo, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport { playHarmony } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nexport namespace BackingUtil {\r\n\r\n    // オクターブの数\r\n    export const OCTAVE_NUM = 8;\r\n    // 管理する構成音の数\r\n    export const STRUCT_NUM = 6;\r\n    // チャンネルの最大数\r\n    export const CHANNEL_MAX = 12;\r\n\r\n    export const getChordDetails = (\r\n        root: TheoryUtil.DegreeProps,\r\n        keyIndex: number,\r\n        on: null | TheoryUtil.DegreeProps,\r\n        symbol: TheoryUtil.SymbolParams\r\n    ): [\r\n            string, BackingState.StructInfo[]\r\n        ] => {\r\n\r\n        // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n        const chordRootIndex = (root.index + keyIndex) % 12;\r\n        const rootName = TheoryUtil.getRootName(root, keyIndex);\r\n        let chordFullName = rootName + symbol.name;\r\n\r\n        let chordOnIndex = -1;\r\n        // オンコードが設定されている場合\r\n        if (on != null) {\r\n            const onName = TheoryUtil.getRootName(on, keyIndex);\r\n            chordFullName = `${chordFullName}/${onName}`;\r\n\r\n            chordOnIndex = (on.index + keyIndex) % 12;\r\n        }\r\n\r\n        // 構成音情報を算出\r\n        let structList: BackingState.StructInfo[] = symbol.structs.map(struct => {\r\n            const relation = struct;\r\n            const interval = TheoryUtil.IntervalRelationProps[relation];\r\n            const soundIndex = (chordRootIndex + interval) % 12;\r\n            const adjustOctave = Math.floor((chordRootIndex + interval) / 12);\r\n            const isFlat = TheoryUtil.isFlatFromRelation(relation);\r\n            return {\r\n                relation, soundIndex, isFlat, adjustOctave\r\n            }\r\n        });\r\n        // オンコードを考慮\r\n        if (chordOnIndex !== -1) {\r\n            let sameIndex = -1;\r\n            structList.some((info, i) => {\r\n                if (info.soundIndex === chordOnIndex) {\r\n                    sameIndex = i;\r\n                    return;\r\n                }\r\n            });\r\n            // オンコードが構成音と被っている場合リストから削除\r\n            if (sameIndex !== -1) {\r\n                structList.splice(sameIndex, 1);\r\n            }\r\n            // オンコードをリストに追加\r\n            structList.unshift({\r\n                relation: null,\r\n                soundIndex: chordOnIndex,\r\n                isFlat: false,\r\n                adjustOctave: 0\r\n            });\r\n            // 音程の昇順でソート\r\n            structList.sort((a, b) => {\r\n                return a.soundIndex - b.soundIndex;\r\n            });\r\n\r\n            /** ソート後のオンコードの場所 */\r\n            let onIndex = -1;\r\n            structList.some((sound, i) => {\r\n                if (sound.relation == null) {\r\n                    onIndex = i;\r\n                    return;\r\n                }\r\n            });\r\n            const onChordIndex = structList[onIndex].soundIndex;\r\n            const tempList: BackingState.StructInfo[] = [];\r\n            for (let i = onIndex; i < structList.length; i++) {\r\n                const sound = structList[i];\r\n                tempList.push(sound);\r\n            }\r\n            for (let i = 0; i < onIndex; i++) {\r\n                const sound = structList[i];\r\n                tempList.push(sound);\r\n            }\r\n            tempList.forEach(sound => {\r\n                sound.adjustOctave = 0;\r\n                if (sound.soundIndex < onChordIndex) {\r\n                    sound.adjustOctave = 1;\r\n                }\r\n            });\r\n            structList = tempList;\r\n        }\r\n        return [chordFullName, structList];\r\n    }\r\n\r\n    export const getInitialRecord = (divCount: number) => {\r\n        return new Array<BackingState.NoteStatus | null>(divCount).fill(null);\r\n    }\r\n\r\n    export const buildChannels = (table: boolean[][]): BackingState.ChannelParam[] => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < table.length; i++) {\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                if (table[i][j]) {\r\n                    channels.push({ octave: i, structIndex: j });\r\n                }\r\n            }\r\n        }\r\n        if (channels.length === 0) {\r\n            channels.push({ octave: -1, structIndex: 0 });\r\n        }\r\n        return channels;\r\n    }\r\n\r\n    export const getVoicingListFromTable = (table: boolean[][]) => {\r\n\r\n        const voicingList: VoicingProps[] = [];\r\n        // ボイシングを設定\r\n        if (table != null) {\r\n            for (let i = 0; i < table.length; i++) {\r\n                for (let j = 0; j < table[i].length; j++) {\r\n                    if (table[i][j]) {\r\n                        voicingList.push({ octave: i, struct: j });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return voicingList;\r\n    }\r\n\r\n    export const buildPatternProps = (editorPattern: BackingState.Pattern): BackingPatternProps => {\r\n        const channelSize = editorPattern.channels.length;\r\n        const layers: BackingLayerData[] = [];\r\n        editorPattern.layers.forEach(layer => {\r\n            const divs: BackingState.NoteDiv[] = layer.noteDivList;\r\n            const signals: BackingSignalProps[] = [];\r\n            layer.table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        signals.push({ x: j, y: i, status: cell });\r\n                    }\r\n                });\r\n            });\r\n            layers.push({ divs, notesList: signals, vels: layer.velocityList.slice() });\r\n        });\r\n        const pedals: PedalInfo[] = [];\r\n        editorPattern.pedalActs.forEach((pedal, i) => {\r\n            if (pedal != null) pedals.push({\r\n                divIndex: i, action: pedal\r\n            });\r\n        });\r\n        return { channelSize, pedals, layers };\r\n    }\r\n\r\n    export const getChannels = (voicingStructs: BackingState.ChannelParam[], size: number) => {\r\n        const channels: BackingState.ChannelParam[] = [];\r\n        for (let i = 0; i < size; i++) {\r\n            const channel: BackingState.ChannelParam = { octave: -1, structIndex: 0 };\r\n            if (i < voicingStructs.length) {\r\n                channel.octave = voicingStructs[i].octave;\r\n                channel.structIndex = voicingStructs[i].structIndex;\r\n            }\r\n            channels.push(channel);\r\n        }\r\n        return channels.reverse();\r\n    }\r\n\r\n    export const convertEditorLayerFromScore = (channelSize: number, scoreLayers: BackingLayerData[]) => {\r\n\r\n        const layers: BackingState.Layer[] = [];\r\n        // console.log(JSON.stringify(scoreLayers));\r\n        scoreLayers.forEach(scoreLayer => {\r\n            const table: (BackingState.NoteStatus | null)[][] = [];\r\n            for (let i = 0; i < channelSize; i++) {\r\n                const record: (BackingState.NoteStatus | null)[] = [];\r\n                for (let j = 0; j < scoreLayer.divs.length; j++) {\r\n                    const notes = scoreLayer.notesList.find(notes => notes.x === j && notes.y === i);\r\n                    record.push(notes == null ? null : notes.status);\r\n                }\r\n                table.push(record);\r\n            }\r\n            layers.push({\r\n                noteDivList: scoreLayer.divs,\r\n                table,\r\n                velocityList: scoreLayer.vels\r\n            });\r\n        });\r\n        // console.log(JSON.stringify(layers));\r\n        return layers;\r\n    }\r\n\r\n    export const getPitchListFromVoicing = (\r\n        voicingList: VoicingProps[],\r\n        structList: BackingState.StructInfo[]\r\n    ) => {\r\n        // return voicingList.map((item) => {\r\n        //     const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        //     return 12 * item.octave + rootIndex + interval;\r\n        // });\r\n        return voicingList.map((item) => {\r\n            // const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n            // return 12 * item.octave + rootIndex + interval;\r\n            const struct = structList[item.struct];\r\n            const octave = item.octave + struct.adjustOctave;\r\n            return 12 * octave + struct.soundIndex;\r\n        });\r\n    }\r\n\r\n    export const playBacking = (\r\n        store: Store,\r\n        reserveTasks: NodeJS.Timeout[],\r\n        baseInfo: DetailInit,\r\n        backing: ChordBacking,\r\n        pitchIndexList: number[],\r\n        chordTime: number\r\n    ) => {\r\n        if (backing.pattern == null) {\r\n            pitchIndexList.forEach((index) => {\r\n                const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                const octave = Math.floor(index / 12);\r\n                const soundFullName = soundName + octave;\r\n                playHarmony(soundFullName, store, chordTime / 1000, 5);\r\n            });\r\n        } else {\r\n\r\n            const bpm = baseInfo.bpm;\r\n            const beatProps = TheoryUtil.getBeatProps(baseInfo.beatSignature);\r\n            const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (2 / 3);\r\n\r\n            const pattern = backing.pattern;\r\n            // const pedalIndexes = pattern.pedals === undefined ? null : pattern.pedals.map(pedal => pedal.divIndex);\r\n\r\n            /** ペダルの有効範囲を定義したリスト */\r\n            const pedalRangeList: { start: number, end: number, action: BackingState.PedalAction }[] = [];\r\n            pattern.layers.forEach((layer, i) => {\r\n                /** バッキング内で経過した時間（ノーツごとの開始時間） */\r\n                let total = 0;\r\n                const timeList: {\r\n                    start: number, sustain: number\r\n                }[] = layer.divs.map(div => {\r\n                    /** 開始時間 */\r\n                    const start = 60000 / bpm * total;\r\n                    let normal = 4 / div.rate * adjustRate;\r\n                    if (div.isDot) normal *= 1.5;\r\n                    else if (div.div3 > 0) normal /= 3 * div.div3;\r\n                    total += normal;\r\n                    return { start, sustain: 60000 / bpm * normal };\r\n                });\r\n\r\n                // ペダル状態のキャッシュを作成\r\n                if (i === 0 && pattern.pedals != undefined) {\r\n                    timeList.forEach((divTime, j) => {\r\n                        const pedalInfo = pattern.pedals?.find((pedal) => {\r\n                            if (j === pedal.divIndex) return pedal;\r\n                        });\r\n                        if (pedalInfo != undefined) {\r\n\r\n                            if (pedalRangeList.length > 0) {\r\n                                pedalRangeList[pedalRangeList.length - 1].end = divTime.start;\r\n                            }\r\n                            pedalRangeList.push({\r\n                                start: divTime.start,\r\n                                end: chordTime,\r\n                                action: pedalInfo.action\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /** 除外リスト（タイで吸収されるノーツ） */\r\n                const ignoreList: { x: number, y: number }[] = [];\r\n                layer.notesList.forEach((notes) => {\r\n\r\n                    // 除外リストに含まれている場合、以降の処理をしない\r\n                    if (ignoreList.find(ig => {\r\n                        if (ig.x === notes.x && ig.y === notes.y) return ig;\r\n                    }) !== undefined) return;\r\n\r\n                    const timeInfo = timeList[notes.x];\r\n                    const timing = notes.status.timing == undefined ? 0 : notes.status.timing;\r\n                    const timingAdj = timing * (60000 / bpm * 1 / 32);\r\n                    const startTime = timeInfo.start + timingAdj;\r\n\r\n                    /** 持続時間 */\r\n                    let sustainTime = timeInfo.sustain;\r\n                    if (notes.status.signal === 's') {\r\n                        // スタッカートの場合半分の音価にする\r\n                        sustainTime *= 0.5;\r\n                    } else if (notes.status.signal === 't') {\r\n\r\n                        let inc = notes.x;\r\n                        let isNext = true;\r\n                        while (isNext) {\r\n                            inc++;\r\n                            // 次のノーツを探す\r\n                            const nextNotes = layer.notesList.find(next => {\r\n                                if (next.x === inc && next.y === notes.y) {\r\n                                    return next;\r\n                                }\r\n                            });\r\n                            if (nextNotes != undefined) {\r\n                                sustainTime += timeList[inc].sustain;\r\n                                // 次の要素を除外する\r\n                                ignoreList.push({ x: inc, y: notes.y });\r\n                                // 次のノーツがタイだったらループを継続\r\n                                isNext = nextNotes.status.signal === 't';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //ペダルを検出\r\n                    for (let k = 0; k < pedalRangeList.length; k++) {\r\n                        const pedal = pedalRangeList[k];\r\n                        const notesTail = startTime + timeInfo.sustain;\r\n                        if (pedal.action !== 'off' && notesTail > pedal.start &&\r\n                            notesTail <= pedal.end\r\n                        ) {\r\n                            // ペダルの持続時間で更新\r\n                            sustainTime = pedal.end - startTime;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    /** 音量 */\r\n                    const velAdj = notes.status.velAdj == undefined ? 0 : notes.status.velAdj;\r\n                    let gain = layer.vels[notes.x] + velAdj;\r\n                    if (gain < 1) gain = 1;\r\n                    if (gain > 10) gain = 10;\r\n                    gain *= 0.6;\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            const index = pitchIndexList[notes.y];\r\n                            const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                            const octave = Math.floor(index / 12);\r\n                            const soundFullName = soundName + octave;\r\n                            playHarmony(soundFullName, store, sustainTime / 1000, gain);\r\n                        }, startTime)\r\n                    );\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    export const stopPreview = (store: Store, state: BackingState.Editor, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        store.instruments.harmonyFont?.stop();\r\n        state.isPreview = false;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    export const getLimitLen = (beatLen: number, minute: BackingState.MinuteProps, beatSignature: BeatSignature) => {\r\n        // 16分音符の長さで割る\r\n        const memoriCount = TheoryUtil.getBeatProps(beatSignature).beatMemoriCount;\r\n        const minuteLen = minute.head / memoriCount + minute.tail / memoriCount;\r\n        return (beatLen + minuteLen);\r\n    }\r\n\r\n    export const getUsingLenFromDivs = (divs: BackingState.NoteDiv[], beatSignature: BeatSignature) => {\r\n        const beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        const adjustRate = 4 / beatProps.beatMemoriCount;\r\n        return divs.reduce((prev, cur) => {\r\n            let len = 1 / cur.rate * adjustRate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            return prev + len * 4;\r\n        }, 0);\r\n    }\r\n\r\n    export const getInitVoicingTable = (voicingList: VoicingProps[], structCnt: number): boolean[][] => {\r\n        const table = new Array<boolean[]>(8);\r\n        for (let i = 0; i < table.length; i++) {\r\n            table[i] = new Array<boolean>(6);\r\n            const col = table[i];\r\n            for (let j = 0; j < col.length; j++) {\r\n                // 構成音をオーバーしていた場合セットしない\r\n                if (j >= structCnt) continue;\r\n\r\n                const isExist = voicingList.find(voicing => {\r\n                    if (voicing.octave === i && voicing.struct === j) {\r\n                        return voicing;\r\n                    }\r\n                });\r\n                table[i][j] = isExist != null;\r\n            }\r\n        }\r\n        return table;\r\n    };\r\n\r\n    export const getEditorPatternFromChordBacking = (voicingTable: boolean[][], patternProps: BackingPatternProps | null) => {\r\n        let pattern: BackingState.Pattern | null = null;\r\n        if (patternProps != null) {\r\n            const voicingStructs = BackingUtil.buildChannels(voicingTable);\r\n            const channels = BackingUtil.getChannels(voicingStructs, patternProps.channelSize);\r\n            const layers = BackingUtil.convertEditorLayerFromScore(patternProps.channelSize, patternProps.layers);\r\n            let pedalActs: (null | BackingState.PedalAction)[] = [];\r\n            if (patternProps.pedals != undefined) {\r\n                for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\r\n                    const pedal = patternProps.pedals.find(pedal => {\r\n                        if (pedal.divIndex === i) return pedal;\r\n                    });\r\n                    if (pedal == undefined) pedalActs.push(null);\r\n                    else pedalActs.push(pedal.action);\r\n                }\r\n            } else {\r\n                for (let i = 0; i < patternProps.layers[0].divs.length; i++) {\r\n                    if (i === 0) pedalActs.push('on');\r\n                    else pedalActs.push(null);\r\n                }\r\n            }\r\n            pattern = {\r\n                channelIndex: -1,\r\n                lenIndex: 0,\r\n                mode: 'velocity',\r\n                layerIndex: 0,\r\n                channels,\r\n                layers,\r\n                pedalActs\r\n            };\r\n        }\r\n        return pattern;\r\n    }\r\n\r\n    export const hasBackingError = (detail: DetailChord, beatSignature: BeatSignature, structCnt: number) => {\r\n        const chordBacking = detail.backing;\r\n        const voicingList = detail.backing.voicingList;\r\n        const pattern = chordBacking.pattern;\r\n        \r\n        let hasError = false;\r\n\r\n        // ボイシングが構成音に収まっているかチェック\r\n        voicingList.some(voicing => {\r\n            if(voicing.struct > structCnt - 1) {\r\n                hasError = true;\r\n                return true; // ループから脱出\r\n            }\r\n        });\r\n        if (pattern != null) {\r\n\r\n            const limitLen = BackingUtil.getLimitLen(detail.beatLen, detail.minute, beatSignature);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getUsingLenFromDivs(layer.divs, beatSignature);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkEditorError = (\r\n        chordInfo: BackingState.ChordInfo,\r\n        voicingList: VoicingProps[],\r\n        pattern: null | BackingState.Pattern\r\n    ): boolean => {\r\n        let hasError = false;\r\n        if (pattern != null) {\r\n\r\n            // 選択しているボイシングがチャンネル数に満たない場合\r\n            if (voicingList.length < pattern.channels.length) hasError = true;\r\n\r\n            const limitLen = BackingUtil.getLimitLen(chordInfo.beatLen, chordInfo.minute, chordInfo.init.beatSignature);\r\n            pattern.layers.forEach(layer => {\r\n\r\n                const totalLen = getUsingLenFromDivs(layer.noteDivList, chordInfo.init.beatSignature);\r\n                // パターンがコードの長さを超えている場合\r\n                if (limitLen < totalLen) hasError = true;\r\n            });\r\n\r\n            // 裏レイヤーのノーツと重なっている場合\r\n            pattern.layers[0].table.forEach((record, i) => {\r\n                record.forEach((cell, j) => {\r\n                    if (cell != null) {\r\n                        if (checkOverlapBackLayer(pattern.layers, 0, i, j)) {\r\n                            hasError = true;\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n        }\r\n\r\n        return hasError;\r\n    }\r\n\r\n    export const checkOverlapBackLayer = (layers: BackingState.Layer[], layerIndex: number, channelIndex: number, divIndex: number): boolean => {\r\n        const baseLayer = layers[layerIndex];\r\n        const backLayer = layers[layerIndex === 0 ? 1 : 0];\r\n        const [left, right] = getDivRange(baseLayer.noteDivList, divIndex);\r\n        // console.log(`left=${left}, right=${right}`);\r\n        let isOverlap = false;\r\n        for (let i = 0; i < backLayer.noteDivList.length; i++) {\r\n            if (backLayer.table[channelIndex][i] != null) {\r\n                const [backLeft, backRight] = getDivRange(backLayer.noteDivList, i);\r\n                if (right > backLeft && left < backRight) {\r\n                    isOverlap = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return isOverlap;\r\n    }\r\n\r\n    export const getDivRange = (divs: BackingState.NoteDiv[], divIndex: number): [number, number] => {\r\n        let [left, right] = [0, 0];\r\n\r\n        divs.slice(0, divIndex + 1).forEach((cur, i) => {\r\n            let len = 1 / cur.rate;\r\n            if (cur.isDot) len *= 1.5;\r\n            if (cur.div3 !== 0) len *= cur.div3 / 3;\r\n            left = right;\r\n            right += len * 4;\r\n        });\r\n        return [left, right];\r\n    }\r\n\r\n    export const isPermitDot = (note: BackingState.NoteDiv) => {\r\n        return [8, 4, 2].includes(note.rate) && note.div3 === 0;\r\n    }\r\n\r\n    export const isPermit3ren = (note: BackingState.NoteDiv) => {\r\n        return [8, 4].includes(note.rate) && !note.isDot;\r\n    }\r\n}\r\n\r\nexport default BackingUtil;","import { symbolName } from \"typescript\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../redux/store/score/scoreCache\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n/**\r\n * データを高速で参照するために、\r\n * 事前に計算したデータを保持するためのユーティリティを提供する\r\n */\r\nnamespace CacheUtil {\r\n\r\n    /**\r\n     * ハーモナイズのキャッシュを生成する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const updateHarmonizeCache = (store: Store, dispatcher: Dispatcher) => {\r\n        const chordList = store.scoreData.chordList;\r\n        const scoreState = store.scoreState;\r\n        const init = (chordList[0].detail as DetailInit);\r\n\r\n        const elementCacheList: ScoreCache.Element[] = [];\r\n        const sectionCacheList: ScoreCache.Section[] = [];\r\n        const beatCacheList: ScoreCache.BeatRange[] = [];\r\n        const scaleCacheList: ScoreCache.KeyScaleRange[] = [];\r\n        const tempoCacheList: ScoreCache.TempoRange[] = [];\r\n        const measureCacheList: ScoreCache.Measure[] = [];\r\n\r\n        // 初期値情報\r\n        let keyIndex = init.keyIndex;\r\n        let scale = init.scale;\r\n        let bpm = init.bpm;\r\n\r\n        let totalMinute = 0;\r\n        let sectionNo = -1;\r\n        let sectionBeatSum = 0;\r\n        let pastSecond = 0;\r\n        let curSecond = 0;\r\n        let chordIndex = -1;\r\n        // let curTotalBeat = 0;\r\n        let curMemoriCount = 0;\r\n        let totalBarCount = 0;\r\n\r\n        // 経過した16分音符のカウント\r\n        let totalMemoriCount = 0;\r\n        let beatRangeMemoriCount = 0;\r\n        let totalBeat = 0;\r\n        let totalMemoriBarCount = 0;\r\n\r\n        let chordBlockNo = -1;\r\n\r\n        //拍キャッシュの産出に使う変数\r\n        let beatSignature = init.beatSignature;\r\n\r\n        let scaleMemoriCount = 0;\r\n        let tempoMemoriCount = 0;\r\n\r\n        const addScaleRange = () => {\r\n            scaleCacheList.push({\r\n                keyIndex,\r\n                scale,\r\n                memoriCnt: scaleMemoriCount\r\n            });\r\n            scaleMemoriCount = 0;\r\n        }\r\n        const addTempoRange = () => {\r\n            tempoCacheList.push({\r\n                bpm,\r\n                beatRate: beatProps.beatMemoriCount / 4,\r\n                memoriCnt: tempoMemoriCount\r\n            });\r\n            tempoMemoriCount = 0;\r\n        }\r\n\r\n\r\n        let beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n        chordList.forEach((element, i) => {\r\n\r\n            const prevBeat = totalBeat;\r\n            // ブロック頭のメモリ\r\n            const prevMemoriCount = totalMemoriCount;\r\n            // ブロック頭の小節\r\n            const prevBarCount = totalBarCount;\r\n            const prevMinute = totalMinute;\r\n            const type = element.type;\r\n\r\n            switch (type) {\r\n                // 固定要素ブロック\r\n                case 'fixed': {\r\n                    const detail = element.detail as DetailFixed;\r\n                    if (detail.fixed === 'End') {\r\n                        pastSecond += curSecond;\r\n                    }\r\n                } break;\r\n\r\n                // セクション要素ブロック\r\n                case 'section': {\r\n                    const detail = element.detail as DetailSection;\r\n                    sectionCacheList.push({\r\n                        labelName: detail.labelName,\r\n                        beatSum: 0,\r\n                        rangeIndexStart: i,\r\n                        rangeIndexEnd: chordList.length - 2\r\n                    });\r\n                    sectionNo++;\r\n                    // 2つ目以降のセクションの開始では、1つ前のセクションのEndを設定する\r\n                    if (sectionNo > 0) {\r\n                        sectionCacheList[sectionNo - 1].rangeIndexEnd = i - 1;\r\n                        sectionCacheList[sectionNo - 1].beatSum = sectionBeatSum;\r\n                        sectionBeatSum = 0;\r\n                    }\r\n                } break;\r\n\r\n                // コード要素ブロック\r\n                case 'chord': {\r\n                    pastSecond += curSecond;\r\n                    // curTotalBeat += curSustain;\r\n\r\n                    const detail = element.detail as DetailChord;\r\n                    sectionBeatSum += detail.beatLen;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    totalMinute += minute;\r\n                    chordIndex++;\r\n\r\n                    curMemoriCount = detail.beatLen * beatProps.beatMemoriCount + minute;\r\n\r\n                    const prevBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    totalBeat += detail.beatLen;\r\n                    const curBar = Math.floor(totalBeat / beatProps.barBeatCnt);\r\n                    // 小節が変わった場合、合計小節をインクリメント\r\n                    if (prevBar !== curBar) {\r\n                        totalBarCount++\r\n                    }\r\n\r\n                    // スケールキャッシュの長さを加算\r\n                    scaleMemoriCount += curMemoriCount;\r\n                    tempoMemoriCount += curMemoriCount;\r\n\r\n                    // 時間の計算\r\n                    curSecond = TheoryUtil.calcSustainMsec(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        bpm,\r\n                        beatSignature\r\n                    );\r\n\r\n                    // メモリの加算\r\n                    for (let j = 0; j < curMemoriCount; j++) {\r\n                        let rate: ScoreCache.MeasureRate = 16;\r\n                        if (beatRangeMemoriCount % beatProps.beatMemoriCount === 0) rate = 4;\r\n                        else if (beatRangeMemoriCount % (beatProps.beatMemoriCount / (beatProps.beatMemoriCount / 2)) === 0) rate = 8;\r\n\r\n                        const barMemoriCount = beatProps.barBeatCnt * beatProps.beatMemoriCount;\r\n\r\n                        let dispBarCount = -1;\r\n                        if (beatRangeMemoriCount % barMemoriCount === 0) {\r\n                            // 拍子セクションの合計メモリ数が小節のメモリ数で割り切れる場合、小節数を表示する\r\n                            totalMemoriBarCount++;\r\n                            dispBarCount = totalMemoriBarCount;\r\n                        }\r\n                        measureCacheList.push({ rate, barCount: dispBarCount });\r\n                        totalMemoriCount++;\r\n                        beatRangeMemoriCount++;\r\n                    }\r\n\r\n                    // コードブロック連番の設定\r\n                    chordBlockNo++;\r\n                } break;\r\n\r\n                // アルター要素ブロックする\r\n                case 'alter': {\r\n                    const detail = element.detail as DetailAlter;\r\n                    switch (detail.alterType) {\r\n                        // 音階が変わる\r\n                        case 'modulate': {\r\n                            addScaleRange();\r\n                            switch (detail.modRel) {\r\n                                case 'domm': {\r\n                                    keyIndex = (keyIndex + 24 + 7 * detail.dommVal) % 12;\r\n                                } break;\r\n                                case 'key': {\r\n                                    keyIndex = (keyIndex + 12 + detail.keyAdj) % 12;\r\n                                } break;\r\n                                case 'parallel': {\r\n                                    keyIndex = (keyIndex + 12 + (scale === 'major' ? -1 : 1) * 3) % 12;\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                                case 'relative': {\r\n                                    // スケールを逆転する\r\n                                    scale = scale === 'major' ? 'minor' : 'major';\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // テンポが変わる\r\n                        case 'tempo': {\r\n                            addTempoRange();\r\n                            switch (detail.tempoRel) {\r\n                                case 'diff': {\r\n                                    bpm += detail.tempoDiff;\r\n                                } break;\r\n                                case 'rate': {\r\n                                    bpm = Math.floor(bpm * 1 * (detail.tempoRate / 100));\r\n                                } break;\r\n                                case 'abs': {\r\n                                    bpm = detail.tempoAbs;\r\n                                } break;\r\n                            }\r\n                        } break;\r\n                        // 拍子が変わる\r\n                        case 'beat': {\r\n                            addTempoRange();\r\n                            // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n                            beatCacheList.push({\r\n                                beatSignature,\r\n                                memoriCnt: beatRangeMemoriCount\r\n                            });\r\n\r\n                            beatSignature = detail.beatSignature;\r\n                            // 拍を初期化する（拍変更後はいかなる場合も0から数える）\r\n                            totalBeat = 0;\r\n                            beatRangeMemoriCount = 0;\r\n\r\n                            beatProps = TheoryUtil.getBeatProps(beatSignature);\r\n                        } break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n\r\n            elementCacheList.push({\r\n                bar: prevBarCount,\r\n                surplusBeat: prevBeat % beatProps.barBeatCnt,\r\n                minute: prevMinute,\r\n                keyIndex,\r\n                scale,\r\n                bpm,\r\n                beatSignature,\r\n                sectionNo,\r\n                pastSecond,\r\n                chordIndex,\r\n                curTotalMemori: prevMemoriCount,\r\n                // chordFullName,\r\n                // structList,\r\n                chordBlockNo,\r\n                reffers: {}\r\n            });\r\n        });\r\n        sectionCacheList[sectionNo].beatSum = sectionBeatSum;\r\n\r\n        // const prevBeatPos = beatCacheList.map(cache => cache.length).reduce((total, len) => total + len, 0);\r\n        scaleCacheList.push({\r\n            keyIndex,\r\n            scale,\r\n            memoriCnt: scaleMemoriCount\r\n        });\r\n\r\n        beatCacheList.push({\r\n            beatSignature,\r\n            memoriCnt: beatRangeMemoriCount\r\n        });\r\n        addTempoRange();\r\n\r\n        scoreState.elementCacheList = elementCacheList;\r\n        scoreState.sectionCacheList = sectionCacheList;\r\n        scoreState.beatCacheList = beatCacheList;\r\n        scoreState.tempoCacheList = tempoCacheList;\r\n        scoreState.scaleCacheList = scaleCacheList;\r\n        scoreState.measureCacheList = measureCacheList;\r\n\r\n        scoreState.chordCacheList = createChordCacheList(chordList, elementCacheList);\r\n\r\n        dispatcher.score.setScoreState(scoreState);\r\n    }\r\n\r\n    export const createChordCacheList = (chordList: ChordElement[], elementCacheList: ScoreCache.Element[]) => {\r\n\r\n        const chordCacheList: ScoreCache.Chord[] = [];\r\n\r\n        chordList.forEach((element, i) => {\r\n\r\n            const type = element.type;\r\n            if (type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                const cache = elementCacheList[i];\r\n\r\n\r\n                const keyIndex = cache.keyIndex;\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                const [chordFullName, structList] = detail.root != null ? BackingUtil.getChordDetails(\r\n                    detail.root,\r\n                    keyIndex,\r\n                    detail.on,\r\n                    symbol\r\n                ) : ['', []];\r\n\r\n                const backingError = BackingUtil.hasBackingError(detail, cache.beatSignature, structList.length);\r\n\r\n                chordCacheList.push({\r\n                    structList,\r\n                    chordFullName,\r\n                    backingError\r\n                });\r\n\r\n            }\r\n        });\r\n        return chordCacheList;\r\n    }\r\n\r\n    // export const getChordCache = (focusIndex: number, ) => {\r\n\r\n    // }\r\n\r\n\r\n    // export const updateMelodyCache = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n    //     const notesList = store.scoreData.notesList;\r\n    //     const state = store.melodyState;\r\n\r\n    //     const notesCacheList: ScoreCache.NotesCache[] = [];\r\n\r\n    //     notesList.forEach((notes) => {\r\n    //         const startTime = 0;\r\n    //         const duration = 0;\r\n    //         notesCacheList.push({\r\n    //             startTime,\r\n    //             duration\r\n    //         });\r\n    //     });\r\n    // }\r\n\r\n    export const getKeyScaleFromNotesPos = (pos: number, scaleCacheList: ScoreCache.KeyScaleRange[]) => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let range: ScoreCache.KeyScaleRange | null = null;\r\n        // console.log(`count: ${scaleCacheList.length}`);\r\n        for (let i = 0; i < scaleCacheList.length; i++) {\r\n            const info = scaleCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                range = scaleCacheList[i - 1];\r\n                break;\r\n            }\r\n            tail += info.memoriCnt;\r\n            // console.log(`curPos: ${tail}`);\r\n        }\r\n        // console.log(`curMemori: ${curMemori}`);\r\n        return range === null ? scaleCacheList[scaleCacheList.length - 1] : range;\r\n    }\r\n\r\n    /**\r\n     * ノーツを再生する開始時間と持続時間を産出して返す\r\n     * @param pos ノーツの位置\r\n     * @param len ノーツの長さ\r\n     * @param tempoCacheList テンポのキャッシュリスト\r\n     * @returns \r\n     */\r\n    export const getTimeInfoFromNotesPos = (pos: number, len: number, tempoCacheList: ScoreCache.TempoRange[]): [number, number] => {\r\n\r\n        const curMemori = pos * 4;\r\n        let tail = 0;\r\n        let posTime = 0;\r\n        let pastLen = 0;\r\n        let last: ScoreCache.TempoRange | null = null;\r\n        for (let i = 0; i < tempoCacheList.length; i++) {\r\n            const info = tempoCacheList[i];\r\n\r\n            if (curMemori < tail) {\r\n                last = tempoCacheList[i - 1];\r\n                break;\r\n            }\r\n            const beatLen = info.memoriCnt / 4;\r\n            posTime += 60 / info.bpm * beatLen;\r\n            pastLen += beatLen;\r\n            tail += info.memoriCnt;\r\n        }\r\n        if (last === null) {\r\n            last = tempoCacheList[tempoCacheList.length - 1];\r\n        }\r\n\r\n        const beatLen = (pos - pastLen) * last.beatRate;\r\n        posTime += 60 / last.bpm * beatLen;\r\n\r\n        const lenTime = 60 / last.bpm * len * last.beatRate;\r\n\r\n        return [posTime, lenTime];\r\n    }\r\n}\r\n\r\nexport default CacheUtil;\r\n","import { ChordElement, DetailChord, DetailInit, MelodyLength, ScoreData } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\n\r\nexport const PITCH_MAX = 60;\r\n\r\nexport const getKeyIndexFromPitcher = (index: number) => {\r\n    return (PITCH_MAX - 1 - index + 9) % 12;\r\n}\r\n\r\nexport const getNormalizeLenFromNotes = (notes: MelodyLength) => {\r\n    let total = 0;\r\n    total += (notes.len4 ?? 0);\r\n    total += (notes.len8 ?? 0) / 2;\r\n    total += (notes.len16 ?? 0) / 4;\r\n    total += (notes.len32 ?? 0) / 8;\r\n    total += (notes.len4div3 ?? 0) / 3;\r\n    total += (notes.len8div3 ?? 0) / 6;\r\n    return total;\r\n}\r\n\r\nexport const getAdditionNotsLen = (notes1: MelodyLength, notes2: MelodyLength) => {\r\n    const ml: MelodyLength = {};\r\n    const len4 = (notes1.len4 ?? 0) + (notes2.len4 ?? 0);\r\n    if (len4 > 0) ml.len4 = len4;\r\n    const len8 = (notes1.len8 ?? 0) + (notes2.len8 ?? 0);\r\n    if (len8 > 0) ml.len8 = len8;\r\n    const len16 = (notes1.len16 ?? 0) + (notes2.len16 ?? 0);\r\n    if (len16 > 0) ml.len16 = len16;\r\n    const len32 = (notes1.len32 ?? 0) + (notes2.len32 ?? 0);\r\n    if (len32 > 0) ml.len32 = len32;\r\n    const len4div3 = (notes1.len4div3 ?? 0) + (notes2.len4div3 ?? 0);\r\n    if (len4div3 > 0) ml.len4 = len4div3;\r\n    const len8div3 = (notes1.len8div3 ?? 0) + (notes2.len8div3 ?? 0);\r\n    if (len8div3 > 0) ml.len8div3 = len8div3;\r\n    return getSortetdNotesLen(ml);\r\n}\r\n\r\nconst getSortetdNotesLen = (base: MelodyLength) => {\r\n    let len4 = base.len4 ?? 0;\r\n    let len8 = base.len8 ?? 0;\r\n    let len16 = base.len16 ?? 0;\r\n    let len32 = base.len32 ?? 0;\r\n    let len4div3 = base.len4div3 ?? 0;\r\n    let len8div3 = base.len8div3 ?? 0;\r\n\r\n    const ml: MelodyLength = {};\r\n\r\n    const len32Cnt2 = Math.floor(len32 / 2);\r\n    len32 -= len32Cnt2 * 2;\r\n    len16 += len32Cnt2;\r\n\r\n    const len8div3Cnt3 = Math.floor(len8div3 / 3);\r\n    len8div3 -= len8div3Cnt3 * 3;\r\n    len8 += len8div3Cnt3;\r\n\r\n    const len8div3Cnt2 = Math.floor(len8div3 / 2);\r\n    len8div3 -= len8div3Cnt2 * 2;\r\n    len4div3 += len8div3Cnt2;\r\n\r\n    const len4div3Cnt3 = Math.floor(len4div3 / 3);\r\n    len4div3 -= len4div3Cnt3 * 3;\r\n    len4 += len4div3Cnt3;\r\n\r\n    const len16Cnt2 = Math.floor(len16 / 2);\r\n    len16 -= len16Cnt2 * 2;\r\n    len8 += len16Cnt2;\r\n\r\n    const len8Cnt2 = Math.floor(len8 / 2);\r\n    len8 -= len8Cnt2 * 2;\r\n    len4 += len8Cnt2;\r\n\r\n    if (len4 > 0) ml.len4 = len4;\r\n    if (len8 > 0) ml.len8 = len8;\r\n    if (len16 > 0) ml.len16 = len16;\r\n    if (len32 > 0) ml.len32 = len32;\r\n    if (len4div3 > 0) ml.len4div3 = len4div3;\r\n    if (len8div3 > 0) ml.len8div3 = len8div3;\r\n\r\n    return ml;\r\n}\r\n\r\nexport const getNotesLenFromQuantize = (quantize: number, count: number): MelodyLength => {\r\n\r\n    let len4 = 0;\r\n    let len8 = 0;\r\n    let len16 = 0;\r\n    let len32 = 0;\r\n    let len4div3 = 0;\r\n    let len8div3 = 0;\r\n\r\n    switch (quantize) {\r\n        case 1: len4 = count; break;\r\n        case 2: len8 = count; break;\r\n        case 3: len4div3 = count; break;\r\n        case 4: len16 = count; break;\r\n        case 8: len32 = count; break;\r\n        case 6: len8div3 = count; break;\r\n    }\r\n\r\n    const ml: MelodyLength = {};\r\n    if (len4 > 0) ml.len4 = len4;\r\n    if (len8 > 0) ml.len8 = len8;\r\n    if (len16 > 0) ml.len16 = len16;\r\n    if (len32 > 0) ml.len32 = len32;\r\n    if (len4div3 > 0) ml.len4div3 = len4div3;\r\n    if (len8div3 > 0) ml.len8div3 = len8div3;\r\n    return getSortetdNotesLen(ml);\r\n}\r\n// export const getNotesLenFromNormal = (normal: number): MelodyLength => {\r\n//     // let normal = a;\r\n//     let len4 = 0;\r\n//     let len8 = 0;\r\n//     let len16 = 0;\r\n//     let len4div3 = 0;\r\n//     let len8div3 = 0;\r\n\r\n//     normal *= 12;\r\n\r\n//     len4 = Math.floor(normal / 12);\r\n//     normal -= len4 * 12;\r\n//     if (normal - Math.floor(normal / 12 * 3) !== 0) {\r\n//         len8 = Math.floor(normal / 12 * 2);\r\n//         normal -= len8 * 12 / 2;\r\n//     }\r\n//     len4div3 = Math.floor(normal / 12 * 3);\r\n//     normal -= len4div3 * 12 / 3;\r\n//     if (normal - Math.floor(normal / 12 * 6) !== 0) {\r\n//         len16 = Math.floor(normal / 12 * 4);\r\n//         normal -= len16 * 12 / 4;\r\n//     }\r\n//     len8div3 = Math.floor(normal / 12 * 6);\r\n//     return {\r\n//         len4, len8, len16, len4div3, len8div3\r\n//     };\r\n// }\r\n\r\nexport const getMinimumLenUnit = (notes: MelodyLength): number => {\r\n\r\n    if ((notes.len32 ?? 0) > 0) return 8;\r\n    else if ((notes.len8div3 ?? 0) > 0) return 6;\r\n    else if ((notes.len16 ?? 0) > 0) return 4;\r\n    else if ((notes.len4div3 ?? 0) > 0) return 3;\r\n    else if ((notes.len8 ?? 0) > 0) return 2;\r\n    else if ((notes.len4 ?? 0) > 0) return 1;\r\n    else return 0;\r\n}\r\n\r\nexport const playSoundfont = (i: number, store: Store) => {\r\n    const keyIndex = ((59 - i) + 9) % 12;\r\n    const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n    const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n    const instrument = store.instruments.melodyFont;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n        instrument.play(soundName + octave, 0, { duration: 0.5 });\r\n    }\r\n}\r\n\r\nexport const playHarmony = (soundFullName: string, store: Store, duration: number, gain: number) => {\r\n    const instrument = store.instruments.harmonyFont;\r\n    if (instrument != null) {\r\n        instrument.play(soundFullName, 0, { gain, duration });\r\n    } else {\r\n        // alert('null');\r\n    }\r\n}\r\n\r\nexport const stopPiano = (store: Store) => {\r\n    const instrument = store.instruments.harmonyFont;\r\n    if (instrument != null) {\r\n        instrument.stop();\r\n    }\r\n}\r\n\r\nexport const searchCurChord = (store: Store, focusIndex: number) => {\r\n    const state = store.melodyState;\r\n    const chordList = store.scoreData.chordList;\r\n    const x = getNormalizeLenFromNotes(store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n    let left = 0;\r\n    const searchedChord = chordList.find((element) => {\r\n        if (element.type === 'chord') {\r\n            const detail = element.detail as DetailChord;\r\n            const width = detail.beatLen * state.beatWidth;\r\n            if (x >= left && x < left + width) {\r\n                return element;\r\n            }\r\n            left += width;\r\n        }\r\n    });\r\n    return searchedChord == undefined ? null : searchedChord;\r\n}\r\n\r\nnamespace MelodyUtil {\r\n\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        state.isPreview = false;\r\n        // state.focusIndex = state.lastFocus;\r\n        // state.distIndex = state.focusIndex;\r\n        reserveTasks.forEach(id => clearInterval(id));\r\n        // store.instruments.sampler.releaseAll();\r\n        dispatcher.melody.setState(state);\r\n        dispatcher.melody.adjustScrollX();\r\n    }\r\n\r\n    /**\r\n     * プレビュー再生を開始する\r\n     * @param store ストア\r\n     * @param dispatcher ディスパッチャー\r\n     */\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const reserveTasks: NodeJS.Timeout[] = [];\r\n        const instrument = store.instruments.melodyFont;\r\n\r\n        // 開始するフォーカス（非選択時は最初から）\r\n        const start = state.focusIndex === -1 ? 0 : state.focusIndex;\r\n\r\n        // プレビュー開始時のフォーカスを保持する\r\n        state.lastFocus = state.focusIndex;\r\n        state.isPreview = true;\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = start; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                        dispatcher.melody.adjustScrollX();\r\n                        // dispatcher.melody.setState(state);\r\n                    }, 0);\r\n                }, (posTime - firstTime) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            if (i === data.notesList.length - 1) {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        stopPreview(store, dispatcher, reserveTasks);\r\n                    }, (posTime - firstTime + lenTime) * 1000)\r\n                );\r\n            }\r\n        }\r\n\r\n        // ハーモニーを再生\r\n        if (!state.isSolo) {\r\n            previewHarmony(firstTime * 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n\r\n        dispatcher.system.setReserveTasks(reserveTasks);\r\n        dispatcher.melody.setState(state);\r\n    }\r\n\r\n    const previewHarmony = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        const update = store.invalidate.melody as () => void;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = 3; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n            const element = chordList[i];\r\n            if (element.type === 'chord') {\r\n                if (cache.pastSecond < start) continue;\r\n\r\n                const detail = element.detail as DetailChord;\r\n\r\n                if (detail.root == null) return;\r\n\r\n                // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n                // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\r\n                // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n                const backing = detail.backing;\r\n                const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n\r\n                // const chordTime = 60 / cache.bpm * len;\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const chordTime = TheoryUtil.calcSustainMsec(\r\n                    detail.beatLen,\r\n                    minute,\r\n                    cache.bpm,\r\n                    cache.beatSignature\r\n                );\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        // sampler.releaseAll();\r\n                        // stopPiano(store);\r\n\r\n                        // const pickingDelay = 60 / init.bpm * 0.1 * 1000;\r\n                        // const div = pickingDelay / pitchList.length;\r\n\r\n                        // pitchList.forEach((index, j) => {\r\n                        //     const soundName = KEY12_SHARP_LIST[index % 12];\r\n                        //     const octave = Math.floor(index / 12);\r\n                        //     const soundFullName = soundName + octave;\r\n                        //     playPiano(soundFullName, store, chordTime);\r\n                        // });\r\n\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n                        setTimeout(() => {\r\n                            store.melodyState.tableMouse.curChord = element;\r\n                            update();\r\n                            // dispatcher.melody.setState(store.melodyState);\r\n                        }, 0);\r\n                    }, cache.pastSecond - start - adjsut)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.melodyState;\r\n        const chordList = store.scoreData.chordList;\r\n        const cacheList = store.scoreState.elementCacheList;\r\n        const cache = cacheList[3];\r\n        const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n        const init = chordList[0].detail as DetailInit;\r\n        const curChord = state.tableMouse.curChord;\r\n        const reserveTasks = store.reserveTasks;\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            // const rootIndex = (detail.root.index + init.keyIndex) % 12;\r\n            // const onIndex = detail.on == null ? -1 : ((detail.on.index + init.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n            // const chordTime = 60 / init.bpm * len;\r\n            const minute = detail.minute.head + detail.minute.tail;\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                detail.beatLen,\r\n                minute,\r\n                init.bpm,\r\n                init.beatSignature\r\n            );\r\n\r\n            BackingUtil.playBacking(store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.melody.setState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.melody.setState(state);\r\n\r\n        }\r\n    }\r\n\r\n    export type Quantize = 32 | 16| 8 | 4;\r\n\r\n    export const isEnableQuantize = (quantize: Quantize, notes: MelodyLength) => {\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyUtil;","\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { Action, ActionType } from \"../reducer\";\r\nimport { RefsCache } from \"../store/refsCache\";\r\nimport { BackingLayerData, BackingSignalProps, ChordBacking, ChordElement, DetailAlter, DetailChord, DetailInit, DetailSection, Scale, ScoreData, MelodyNotes, VoicingProps, BackingPatternProps } from \"../store/score/scoreData\";\r\nimport { NoteKeySwitch, ScoreState, SymbolDiagram } from \"../store/score/scoreState\";\r\nimport { Store } from \"../store/store\";\r\nimport { MelodyKeySwitch, MelodyPitchMode, MelodyState } from \"../store/score/melodyState\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SystemState } from \"../store/systemState\";\r\nimport { getDefaultBacking } from \"../../utils/instrumentsUtil\";\r\nimport MelodyUtil, { getAdditionNotsLen, getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, getNotesLenFromQuantize, PITCH_MAX, playSoundfont } from \"../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../utils/systemConst\";\r\nimport { Invalidate } from \"../store/invalidate\";\r\nimport BackingState from \"../store/score/backing/backingState\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport CacheUtil from \"../../utils/cacheUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport ScoreCache from \"../store/score/scoreCache\";\r\nimport { UserEnv } from \"../store/userEnv\";\r\nimport { Instruments } from \"../store/instrument\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private dispatch: Function;\r\n\r\n    constructor(store: Store, dispatch: React.Dispatch<Action>) {\r\n        this.store = store;\r\n        this.dispatch = (type: ActionType, payload: object) => dispatch({ type, payload });\r\n    }\r\n\r\n    public system = {\r\n        setUserEnv: (userEnv: UserEnv) => {\r\n            this.dispatch(ActionType.SET_USER_ENV, { userEnv });\r\n        },\r\n\r\n        setState: (systemState: SystemState) => {\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        switchSplashToMain: () => {\r\n            const systemState = this.store.systemState;\r\n            systemState.isSplash = false;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setMainTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.mainChannelIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setRefs: (refs: RefsCache) => {\r\n            this.dispatch(ActionType.SET_REFS, { refs });\r\n        },\r\n\r\n        setReserveTasks: (reserveTasks: NodeJS.Timeout[]) => {\r\n            this.dispatch(ActionType.SET_RESERVE_TASKS, { reserveTasks });\r\n        },\r\n\r\n        setInvalidate: (invalidate: Invalidate) => {\r\n            this.dispatch(ActionType.SET_INVALIDATE, { invalidate });\r\n        }\r\n    }\r\n\r\n    public score = {\r\n        saveFile: () => {\r\n            // プレビュー時は保存できない\r\n            const isDirect = this.store.systemState.directScore != undefined;\r\n            if (isDirect) return;\r\n\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const options = {\r\n                types: [\r\n                    {\r\n                        accept: {\r\n                            'text/plain': ['.lcrs'],\r\n                        },\r\n                    },\r\n                ],\r\n            };\r\n            const fileHandle = state.fileHandle;\r\n            if (fileHandle != null) {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await fileHandle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(JSON.stringify(data));\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    state.fileHandle = fileHandle;\r\n                    this.score.setScoreState({ ...state });\r\n                    const file = await fileHandle.getFile();\r\n                    // alert('saved successfully!');\r\n                    console.log('saved successfully!');\r\n                })();\r\n            } else {\r\n                window.showSaveFilePicker(options).then((handle) => {\r\n                    (async () => {\r\n                        //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                        const writable = await handle.createWritable();\r\n                        //テキストデータの書き込み\r\n                        const text = DataUtil.gZip(JSON.stringify(data));\r\n                        await writable.write(text);\r\n                        //ファイルを閉じる\r\n                        await writable.close();\r\n                        state.fileHandle = handle;\r\n                        this.score.setScoreState({ ...state });\r\n                    })();\r\n                }).catch(() => {\r\n                    console.log('キャンセルされました');\r\n                });\r\n            }\r\n        },\r\n\r\n        setHarmonyFont: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, harmony: soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        setInstruments: (instruments: Instruments) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments\r\n            });\r\n        },\r\n\r\n        setScoreTabIndex: (index: number) => {\r\n            const systemState = this.store.systemState;\r\n            systemState.scoreTabIndex = index;\r\n            this.dispatch(ActionType.SET_SYSTEM_STATE, { systemState });\r\n        },\r\n\r\n        setScoreState: (scoreState: ScoreState) => {\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        clearCache: () => {\r\n            const scoreState = this.store.scoreState;\r\n            scoreState.focusIndex = -1;\r\n            scoreState.distIndex = -1;\r\n            scoreState.initialBeat = 4;\r\n            scoreState.elementCacheList = [];\r\n            scoreState.beatCacheList = [];\r\n            scoreState.chordCacheList = [];\r\n            scoreState.scaleCacheList = [];\r\n            scoreState.tempoCacheList = [];\r\n            scoreState.measureCacheList = [];\r\n            scoreState.sectionCacheList = [];\r\n            this.dispatch(ActionType.SET_SCORE_STATE, { scoreState });\r\n        },\r\n\r\n        setKeySwitch: (keySwitch: NoteKeySwitch) => {\r\n            const state = this.store.scoreState;\r\n            state.keySwitch = keySwitch;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setScoreData: (scoreData: ScoreData) => {\r\n            this.dispatch(ActionType.SET_SCORE_DATA, { scoreData });\r\n        },\r\n\r\n        moveElement: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.focusIndex + sub].type !== 'fixed') {\r\n                state.focusIndex += sub;\r\n                state.distIndex = state.focusIndex;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 選択範囲の終点を移動する\r\n         * @param isNext \r\n         */\r\n        moveDist: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const list = this.store.scoreData.chordList;\r\n            const sub = isNext ? 1 : -1;\r\n            if (list[state.distIndex + sub].type !== 'fixed') {\r\n                state.distIndex += sub;\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n            state.focusIndex = !isTail ? distHead : distTail;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        moveSection: (isNext: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const curSectionIndex = state.elementCacheList[state.focusIndex].sectionNo;\r\n            const sectionCacheList = state.sectionCacheList;\r\n            const curSectionInfo = sectionCacheList[curSectionIndex];\r\n            const curElementType = this.store.scoreData.chordList[state.focusIndex].type;\r\n            if (!isNext) {\r\n                // alert('prev');\r\n                if (curElementType === 'section' && curSectionIndex > 0) {\r\n                    // 1つ前のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex - 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの先頭に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexStart;\r\n                }\r\n            } else {\r\n                // alert('next');\r\n                if (curSectionIndex < sectionCacheList.length - 1) {\r\n                    // 次のセクションの先頭に移動\r\n                    state.focusIndex = sectionCacheList[curSectionIndex + 1].rangeIndexStart;\r\n                } else {\r\n                    // 今のセクションの終端に移動\r\n                    state.focusIndex = curSectionInfo.rangeIndexEnd;\r\n                }\r\n            }\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        flashElement: (index: number) => {\r\n            // const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[index];\r\n\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n\r\n            // bodyRef.style.backgroundColor = '#ffef5f';\r\n            // setTimeout(() => {\r\n            //     bodyRef.style.backgroundColor = '';\r\n            // }, 10);\r\n        },\r\n\r\n        incrementDegreeRoot: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.root == null) {\r\n                if (isUp) {\r\n                    detail.root = { index: 0, isFlat: false };\r\n                    this.score.setScoreData(data);\r\n                    this.score.flashElement(state.focusIndex);\r\n                }\r\n            } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n                detail.root.index += sub;\r\n                detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            } else if (detail.root.index + sub === -1) {\r\n                detail.root = null;\r\n                detail.symbolKey = 'major';\r\n                this.score.setScoreData(data);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n            // キャッシュの更新\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            if (detail.root != null) {\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(detail.root, cache.keyIndex, detail.on, symbol);\r\n            } else {\r\n                chordCache.chordFullName = '';\r\n                chordCache.structList = [];\r\n            }\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        incrementBeatLen: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const chordList = data.chordList.slice();\r\n            const detail = chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            if (detail.beatLen + sub >= 1 && detail.beatLen + sub <= 4) {\r\n                detail.beatLen += sub;\r\n                data.chordList = chordList;\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                // setTimeout(() => {\r\n                CacheUtil.updateHarmonizeCache(this.store, this);\r\n                // }, 1);\r\n                this.score.flashElement(state.focusIndex);\r\n            }\r\n        },\r\n\r\n        incrementMinuteVal: (pos: number, isTail: boolean, value: number) => {\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[pos];\r\n            const detail = cur.detail as DetailChord;\r\n            let target = !isTail ? detail.minute.head : detail.minute.tail;\r\n            target += value;\r\n            if (target >= -2 && target <= 2) {\r\n                if (!isTail) detail.minute.head = target;\r\n                else detail.minute.tail = target;\r\n                // data.chordList[this.store.scoreState.focusIndex].detail = detail;\r\n                data.chordList = data.chordList.slice();\r\n                this.score.setScoreData(data);\r\n                // キャッシュの更新\r\n                CacheUtil.updateHarmonizeCache(this.store, this);\r\n            }\r\n        },\r\n\r\n        incrementMinuteValRelation: (isTail: boolean, value: number) => {\r\n            const focusIndex = this.store.scoreState.focusIndex;\r\n            const chordList = this.store.scoreData.chordList;\r\n\r\n            let nearIndex = -1;\r\n            if (!isTail) {\r\n                for (let i = focusIndex - 1; i > 2; i--) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = focusIndex + 1; i < chordList.length - 1; i++) {\r\n                    if (chordList[i].type === 'chord') {\r\n                        nearIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (nearIndex != -1) {\r\n                this.score.incrementMinuteVal(focusIndex, isTail, value);\r\n                this.score.incrementMinuteVal(nearIndex, !isTail, -value);\r\n            }\r\n        },\r\n\r\n        addChordElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const cur = data.chordList[state.focusIndex];\r\n\r\n            // 拍の初期値を取得\r\n            const beatSignature = state.elementCacheList[state.focusIndex].beatSignature;\r\n            const initialBeat = TheoryUtil.getBeatProps(beatSignature).barBeatCnt;\r\n            let curBeatLen = initialBeat;\r\n            if (cur.type === 'chord') {\r\n                const curChord = cur.detail as DetailChord;\r\n                // 後にシンコペーションが設定されている場合は追加できない\r\n                if (curChord.minute.tail != 0) return;\r\n\r\n                curBeatLen = curChord.beatLen;\r\n            }\r\n            const element = {\r\n                type: 'chord', detail: {\r\n                    beatLen: curBeatLen,\r\n                    minute: { head: 0, tail: 0 },\r\n                    // degreeIndex: 0,\r\n                    // isFlat: false,\r\n                    root: null,\r\n                    on: null,\r\n                    symbolKey: 'major',\r\n                    backing: {\r\n                        voicingList: [],\r\n                        pattern: null,\r\n                        hasError: false\r\n                    }\r\n                } as DetailChord\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const cache = state.elementCacheList[state.focusIndex + 1];\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const baseWidth = wrapRef.clientWidth;\r\n            // wrapRef.style.width = '0';\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = `${baseWidth}px`;\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '';\r\n            // }, 1000);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'section', detail: {\r\n                    labelName: 'Section'\r\n                } as DetailSection\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        addAlterElement: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const element = {\r\n                type: 'alter', detail: {\r\n                    alterType: null,\r\n                    modRel: null,\r\n                    dommVal: 0,\r\n                    keyAdj: 0,\r\n                    tempoRel: null,\r\n                    tempoDiff: 0,\r\n                    tempoRate: 1,\r\n                    tempoAbs: 0,\r\n                    beatSignature: '4/4'\r\n                } as DetailAlter\r\n            } as ChordElement;\r\n            data.chordList.splice(state.focusIndex + 1, 0, element);\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        removeElement: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                const sectionNo = this.store.scoreState.elementCacheList[i].sectionNo;\r\n                // 先頭のセクション要素が含まれている場合削除しない\r\n                if (element.type === 'section' && sectionNo === 0) {\r\n                    return;\r\n                }\r\n            }\r\n            data.chordList.splice(distHead, (distTail - distHead) + 1);\r\n            this.score.setScoreData(data);\r\n            state.focusIndex = distHead - 1;\r\n            state.distIndex = state.focusIndex;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n\r\n            // const wrapRef = cache.reffers.wrap as HTMLDivElement;\r\n            // const bodyRef = cache.reffers.body as HTMLDivElement;\r\n            // // reffer.style.width = '300px';\r\n            // wrapRef.style.opacity = '0';\r\n            // wrapRef.style.overflow = 'hidden';\r\n            // // wrapRef.style.padding = '0';\r\n            // wrapRef.style.width = `${wrapRef.clientWidth}px`;\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.width = '0';\r\n            // }, 1);\r\n            // setTimeout(() => {\r\n            //     wrapRef.style.opacity = '';\r\n            //     wrapRef.style.width = '';\r\n            //     wrapRef.style.overflow = '';\r\n            //     // wrapRef.style.padding = '';\r\n            //     const data = this.store.scoreData;\r\n            //     data.chordList.splice(state.focusIndex, 1);\r\n            //     this.score.setScoreData(data);\r\n            //     state.focusIndex--;\r\n            //     this.score.setScoreState(state);\r\n            //     // setTimeout(() => {\r\n            //     //     reffer.style.opacity = '';\r\n            //     //     reffer.style.width = '';\r\n            //     //     const data = this.store.scoreData;\r\n            //     //     data.chordList.splice(state.focusIndex, 1);\r\n            //     //     this.score.setScoreData(data);\r\n            //     // }, 200);\r\n            // }, 200);\r\n        },\r\n\r\n        removeBacking: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                // コード要素のみ処理\r\n                if (element.type === 'chord') {\r\n                    const chord = element.detail as DetailChord;\r\n                    chord.backing = { voicingList: [], pattern: null };\r\n                }\r\n            }\r\n            this.score.setScoreData(data);\r\n            this.score.setScoreState({ ...state });\r\n\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        copyElementList: () => {\r\n            const state = this.store.scoreState;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n\r\n            const data = this.store.scoreData;\r\n            const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n            const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n\r\n            const list: ChordElement[] = [];\r\n            for (let i = distHead; i <= distTail; i++) {\r\n                const element = data.chordList[i];\r\n                list.push(JSON.parse(JSON.stringify(element)));\r\n            }\r\n            console.log(list.length);\r\n            state.copiedElementList = list;\r\n            state.cloneBacking = null;\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        pasteElementList: () => {\r\n            const state = this.store.scoreState;\r\n\r\n            const data = this.store.scoreData;\r\n            const list = state.copiedElementList;\r\n            if (list == null) return;\r\n\r\n            console.log(list.length);\r\n            list.forEach((element, i) => {\r\n                data.chordList.splice(state.focusIndex + 1 + i, 0, element);\r\n            });\r\n            this.score.setScoreData(data);\r\n            state.focusIndex++;\r\n            state.distIndex = state.focusIndex + list.length - 1;\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            // キャッシュの更新\r\n            CacheUtil.updateHarmonizeCache(this.store, this);\r\n        },\r\n\r\n        // incrementSymbol: (isUp: boolean) => {\r\n        //     const state = this.store.scoreState;\r\n        //     const data = this.store.scoreData;\r\n        //     const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n        //     const sub = isUp ? 1 : -1;\r\n        //     if (detail.root == null) {\r\n        //         detail.root = { index: 0, isFlat: false };\r\n        //         this.score.setScoreData(data);\r\n        //     } else if (detail.root.index + sub >= 0 && detail.root.index + sub <= 11) {\r\n        //         detail.root.index += sub;\r\n        //         detail.root.isFlat = !isUp && ![0, 2, 4, 5, 7, 9, 11].includes(detail.root.index);\r\n        //         this.score.setScoreData(data);\r\n        //     }\r\n        // },\r\n\r\n        setDiatonicChord: (scale: Scale, diatonicIndex: number) => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const scaleList = scale === 'major' ? TheoryUtil.DIATONIC_MAJOR_SCALE_LIST : TheoryUtil.DIATONIC_MINOR_SCALE_LIST;\r\n            const chord = scaleList[diatonicIndex];\r\n            const root: TheoryUtil.DegreeProps = { ...chord.root };\r\n            detail.root = root;\r\n            detail.symbolKey = chord.symbolKey;\r\n            // オンコードの設定を解除\r\n            detail.on = null;\r\n            this.score.setScoreData(data);\r\n\r\n            // キャッシュの更新\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n            [chordCache.chordFullName, chordCache.structList] =\r\n                BackingUtil.getChordDetails(root, cache.keyIndex, null, symbol);\r\n            chordCache.backingError =\r\n                BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\r\n            this.score.setScoreState(state);\r\n        },\r\n\r\n        setDefaultBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n            if (symbol.attr != undefined) {\r\n                detail.backing = getDefaultBacking(symbol.attr);\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        cloneBacking: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            state.cloneBacking = JSON.parse(JSON.stringify(detail.backing));\r\n            state.copiedElementList = null;\r\n            this.score.setScoreState(state);\r\n            console.log(`clone backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n        },\r\n\r\n        pastBacking: () => {\r\n            const state = this.store.scoreState;\r\n            if (state.cloneBacking != null) {\r\n                console.log(`paste backing! \\n${JSON.stringify(state.cloneBacking)}`);\r\n                const data = this.store.scoreData;\r\n                const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n                detail.backing = JSON.parse(JSON.stringify(state.cloneBacking));\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        openLibraryWnd: (isPreset: boolean) => {\r\n            const state = this.store.scoreState;\r\n            if (!isPreset) {\r\n                state.hideMenu = 'library';\r\n\r\n                // バッキングを作成\r\n                const chordList = this.store.scoreData.chordList;\r\n                const focusIndex = this.store.scoreState.focusIndex;\r\n                const chord = chordList[focusIndex].detail as DetailChord;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const structList = chordCache.structList;\r\n                const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\r\n                const chordInfo: BackingState.ChordInfo = {\r\n                    symbolAttr: symbol.attr,\r\n                    chordFullName: chordCache.chordFullName,\r\n                    structList,\r\n                    beatLen: chord.beatLen,\r\n                    minute: chord.minute,\r\n                    init: { ...cache }\r\n                };\r\n\r\n                // エラーチェックのためにテーブルからリストへ逆変換\r\n                // const voicingList = BackingUtil.getVoicingListFromTable([]);\r\n                // const hasError = BackingUtil.checkEditorError(chordInfo, voicingList, null);\r\n                this.backing.setState({\r\n                    chordInfo,\r\n                    tabIndex: 0,\r\n                    voicingTable: [],\r\n                    pattern: null,\r\n                    isPreview: false,\r\n                    hasError: false,\r\n                    closeAction: () => { }\r\n                });\r\n            }\r\n            else state.hideMenu = 'preset';\r\n\r\n            this.score.setScoreState(state);\r\n\r\n        },\r\n\r\n        closeLibraryWnd: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n        },\r\n    }\r\n\r\n    public symbol = {\r\n\r\n        toNext: (isUp: boolean) => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const sub = isUp ? 1 : -1;\r\n            const index = mng.index + sub;\r\n            if (index >= 0 && index <= mng.curLine.length - 1) {\r\n                mng.index += sub;\r\n                detail.symbolKey = mng.curLine[mng.index];\r\n                this.score.setScoreData(data);\r\n\r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        toBase: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.parentLine.length > 0) {\r\n                detail.symbolKey = mng.parentLine[0];\r\n                this.score.setScoreData(data);\r\n\r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                chordCache.backingError =\r\n                    BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n        toDerive: () => {\r\n            const state = this.store.scoreState;\r\n            const mng = state.symbolMng as SymbolDiagram;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            if (mng.childrenLine.length > 0) {\r\n                detail.symbolKey = mng.childrenLine[0];\r\n                this.score.setScoreData(data);\r\n\r\n                // キャッシュの更新\r\n                const root = detail.root as TheoryUtil.DegreeProps;\r\n                const cache = state.elementCacheList[state.focusIndex];\r\n                const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                [chordCache.chordFullName, chordCache.structList] =\r\n                    BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                chordCache.backingError =\r\n                    BackingUtil.hasBackingError(detail, cache.beatSignature, chordCache.structList.length);\r\n                this.score.setScoreState(state);\r\n            }\r\n        },\r\n\r\n    }\r\n\r\n    /**\r\n     * メロディ画面のディスパッチ\r\n     */\r\n    public melody = {\r\n\r\n        setState: (tuneState: MelodyState) => {\r\n            this.dispatch(ActionType.SET_TUNE_STATE, { tuneState });\r\n        },\r\n\r\n        /**\r\n         * 全てのノーツを選択する\r\n         */\r\n        allSelect: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = notesList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n        },\r\n\r\n        setNotesList: (notesList: MelodyNotes[]) => {\r\n            const data = this.store.scoreData;\r\n            data.notesList = notesList;\r\n            this.score.setScoreData(data);\r\n        },\r\n\r\n        setMelodyFont: (soundfontPlayer: Soundfont.Player) => {\r\n            this.dispatch(ActionType.SET_INSTRUMENTS, {\r\n                instruments: {\r\n                    ...this.store.instruments, soundfontPlayer\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * 選択中のノーツの音程を変更する\r\n         * @param isUpper\r\n         * @param mode \r\n         * @returns \r\n         */\r\n        incrementCurPitch: (isUpper: boolean, mode: MelodyPitchMode) => {\r\n            const scoreState = this.store.scoreState;\r\n            const state = this.store.melodyState;\r\n            const focusIndex = state.focusIndex;\r\n            const distIndex = state.destIndex;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            // フォーカスされていない場合は処理しない\r\n            if (focusIndex === -1) return;\r\n\r\n            if (focusIndex !== distIndex) {\r\n\r\n                const targetList = notesList.filter(\r\n                    (notes, i) => i >= focusIndex && i <= distIndex\r\n                );\r\n\r\n                targetList.forEach(notes => {\r\n                    notes.pitchIndex += 1 * (isUpper ? -1 : 1);\r\n                });\r\n\r\n                // 履歴を作成\r\n                state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                this.melody.setNotesList(notesList.slice());\r\n            } else {\r\n                const cur = notesList[focusIndex];\r\n                // const init = this.store.scoreData.chordList[0].detail as DetailInit;\r\n                const normalLeft = getNormalizeLenFromNotes(cur.pos);\r\n                const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n                const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n                const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n\r\n                const prevPitchIndex = cur.pitchIndex;\r\n                const interval = mode !== 'octave' ? 1 : 12;\r\n                let tempPitchIndex = cur.pitchIndex;\r\n\r\n                while (isUpper ? cur.pitchIndex > 0 : cur.pitchIndex < PITCH_MAX - 1) {\r\n                    tempPitchIndex += interval * (isUpper ? -1 : 1);\r\n\r\n                    if (mode !== 'scale' ||\r\n                        (mode === 'scale' && scaleIndexies.includes(getKeyIndexFromPitcher(tempPitchIndex)))\r\n                    ) {\r\n                        cur.pitchIndex = tempPitchIndex;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // 値が変わっていた場合のみ処理する\r\n                if (prevPitchIndex !== cur.pitchIndex) {\r\n                    playSoundfont(cur.pitchIndex, this.store);\r\n                    // 履歴を作成\r\n                    state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n                    this.melody.setNotesList(notesList.slice());\r\n\r\n                    this.melody.adjustScrollY();\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * キースイッチを設定する\r\n         * @param keySwitch \r\n         */\r\n        setKeySwitch: (keySwitch: MelodyKeySwitch) => {\r\n            const state = this.store.melodyState;\r\n            state.keySwitch = keySwitch;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         */\r\n        moveFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            // ノーツがフォーカスされていない時は最後にフォーカスされたノーツを選択する\r\n            if (state.focusIndex === -1) {\r\n                if (notesList.length > 0) {\r\n                    state.focusIndex = state.lastFocus;\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            } else {\r\n                if (!isNext ? state.focusIndex > 0 : state.focusIndex < notesList.length - 1) {\r\n                    state.focusIndex += (isNext ? 1 : -1);\r\n                    state.destIndex = state.focusIndex;\r\n                    this.melody.setState(state);\r\n                }\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        /**\r\n         * 複数選択From～ToのToを移動する\r\n         * @param isNext 移動方向（trueの場合次のノーツに移動）\r\n         * @returns \r\n         */\r\n        moveDestFocus: (isNext: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            if (state.focusIndex === -1) return;\r\n\r\n            if (!isNext ? state.destIndex > 0 : state.destIndex < notesList.length - 1) {\r\n                state.destIndex += (isNext ? 1 : -1);\r\n                this.melody.setState(state);\r\n            }\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツのエリアのコードを更新する\r\n         * @param focusIndex ノーツのフォーカス\r\n         */\r\n        updateCurChord: (focusIndex: number) => {\r\n            const state = this.store.melodyState;\r\n            const chordList = this.store.scoreData.chordList;\r\n            const x = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n            let left = 0;\r\n            const searchedChord = chordList.find((element) => {\r\n                if (element.type === 'chord') {\r\n                    const detail = element.detail as DetailChord;\r\n                    const width = detail.beatLen * state.beatWidth;\r\n                    if (x >= left && x < left + width) {\r\n                        // alert(`x=${x}, left=${left}`);\r\n                        return element;\r\n                    }\r\n                    left += width;\r\n                }\r\n            });\r\n            state.tableMouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n            this.melody.setState(state);\r\n        },\r\n\r\n        /**\r\n         * フォーカスの後ろに新しいノーツを追加する\r\n         * @returns \r\n         */\r\n        addNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const focus = state.focusIndex;\r\n            if (focus === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[focus];\r\n            const pos = getAdditionNotsLen(cur.pos, cur.len);\r\n            const newLeftNormal = getNormalizeLenFromNotes(pos);\r\n            const nextNormalPos = focus === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            // 新しい要素の位置\r\n            const newRightNormal = newLeftNormal + 1 / state.quantize;\r\n\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList.splice(focus + 1, 0, {\r\n                    pos,\r\n                    pitchIndex: cur.pitchIndex,\r\n                    len: getNotesLenFromQuantize(state.quantize, 1)\r\n                });\r\n                this.score.setScoreData(data);\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * ノーツを削除する\r\n         */\r\n        removeNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            // 履歴を作成\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n            // 対象の開始と終了のインデックスを取得\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            // 削除する個数\r\n            const delNum = end - start + 1;\r\n            notesList.splice(start, delNum);\r\n            this.melody.setNotesList(notesList);\r\n            // 削除後は対象の開始インデックスの１つ前を選択\r\n            state.focusIndex = start - 1;\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n        },\r\n\r\n        /**\r\n         * 複数選択を解除する\r\n         * @param isTail 解除時複数選択のどこにフォーカスを移すか（trueの場合終端を選択）\r\n         */\r\n        releaseRange: (isTail: boolean) => {\r\n            const state = this.store.melodyState;\r\n            const [start, end] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            state.focusIndex = (!isTail ? start : end);\r\n            state.destIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            this.melody.adjustScrollX();\r\n            this.melody.updateCurChord(state.focusIndex);\r\n        },\r\n\r\n        resizeNotes: (isSpread: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const curLenNormal = getNormalizeLenFromNotes(cur.len);\r\n            const curNormalRight = getNormalizeLenFromNotes(cur.pos) + curLenNormal;\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const resizeNormal = 1 / state.quantize;\r\n            const condition = !isSpread ?\r\n                // 縮めることが可能か\r\n                curLenNormal > resizeNormal :\r\n                // 広げることが可能か\r\n                nextNormalPos === -1 || curNormalRight + resizeNormal <= nextNormalPos\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            if (condition) {\r\n                const normal = getNormalizeLenFromNotes(cur.len) + resizeNormal * (isSpread ? 1 : -1);\r\n                cur.len = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        moveNotes: (isBehind: boolean) => {\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n\r\n            const distIndex = state.destIndex;\r\n            const focusIndex = state.focusIndex;\r\n\r\n            const [start, end] = distIndex > focusIndex ? [focusIndex, distIndex] : [distIndex, focusIndex];\r\n            const prevNormalRight = start === 0 ? 0 : getNormalizeLenFromNotes(notesList[start - 1].pos) +\r\n                getNormalizeLenFromNotes(notesList[state.focusIndex - 1].len);\r\n            const nextNormalLeft = end === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[end + 1].pos);\r\n            const moveNormal = 1 / state.quantize;\r\n\r\n            const curNormalLeft = getNormalizeLenFromNotes(notesList[start].pos);\r\n            const curNormalRight = getNormalizeLenFromNotes(notesList[end].pos) + getNormalizeLenFromNotes(notesList[end].len);\r\n\r\n            const condition = !isBehind ?\r\n                // 前に移動可能か\r\n                curNormalLeft - moveNormal >= prevNormalRight :\r\n                // 後に移動可能か\r\n                nextNormalLeft === -1 || curNormalRight + moveNormal <= nextNormalLeft\r\n            // 移動可能かを判定\r\n            if (condition) {\r\n                for (let i = start; i <= end; i++) {\r\n                    const cur = notesList[i];\r\n                    const normal = getNormalizeLenFromNotes(cur.pos) + moveNormal * (isBehind ? 1 : -1);\r\n                    cur.pos = getNotesLenFromQuantize(state.quantize, normal * state.quantize);\r\n                }\r\n                data.notesList = notesList.slice();\r\n                this.score.setScoreData(data);\r\n            }\r\n        },\r\n\r\n        firstNotes: () => {\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n\r\n            if (notesList.length > 0) {\r\n                state.focusIndex = 0;\r\n                state.destIndex = state.focusIndex;\r\n                this.melody.setState(state);\r\n                this.melody.adjustScrollX();\r\n                // this.tune.adjustScrollY();\r\n            }\r\n        },\r\n\r\n        adjustScrollX: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            const focusIndex = state.destIndex;\r\n            if (focusIndex !== -1 && table != null) {\r\n                const notesX = getNormalizeLenFromNotes(this.store.scoreData.notesList[focusIndex].pos) * state.beatWidth;\r\n                table.scrollTo({ left: notesX - 300, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n            const state = this.store.melodyState;\r\n            const table = this.store.refs.melody.table;\r\n            if (state.focusIndex !== -1 && table != null) {\r\n                const notesY = this.store.scoreData.notesList[state.focusIndex].pitchIndex * TUNE_PITCH_HEIGHT;\r\n                table.scrollTo({ top: notesY - table.clientHeight / 2, behavior: \"smooth\" });\r\n            }\r\n        },\r\n\r\n        previewStart: () => {\r\n            const state = this.store.melodyState;\r\n            // if (state.focusIndex === -1) return;\r\n\r\n            MelodyUtil.previewStart(this.store, this);\r\n        },\r\n\r\n        copyNotes: () => {\r\n\r\n            const state = this.store.melodyState;\r\n            const notesList = this.store.scoreData.notesList;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const num = focusEnd - focusStart + 1;\r\n\r\n            const cloneNotesList: MelodyNotes[] = [];\r\n            const base = notesList[focusStart].pos;\r\n            const baseUnit = getMinimumLenUnit(base);\r\n            for (let i = 0; i < num; i++) {\r\n                const notes = notesList[i + focusStart];\r\n                const unit = getMinimumLenUnit(notes.pos);\r\n                const useUnit = baseUnit > unit ? baseUnit : unit;\r\n                const normalPos = getNormalizeLenFromNotes(notes.pos) - getNormalizeLenFromNotes(base);\r\n                const pos = getNotesLenFromQuantize(useUnit, normalPos / (1 / useUnit));\r\n                console.log(`normalPos = ${normalPos}, unit = ${useUnit}`);\r\n                console.log(JSON.stringify(pos));\r\n                cloneNotesList.push({\r\n                    pitchIndex: notes.pitchIndex,\r\n                    pos,\r\n                    len: { ...notes.len }\r\n                });\r\n            }\r\n            state.cloneNotesList = cloneNotesList;\r\n            // notesList.splice(state.focusIndex, num);\r\n            // this.tune.setNotesList(notesList);\r\n            // state.focusIndex = focusStart - 1;\r\n            // state.distIndex = state.focusIndex;\r\n            this.melody.setState(state);\r\n            // alert(JSON.stringify(state.cloneNotesList));\r\n        },\r\n\r\n        pasteNotes: () => {\r\n            // alert('pasteNotes');\r\n\r\n            const state = this.store.melodyState;\r\n            if (state.focusIndex === -1) return;\r\n\r\n            state.dataHistory.add(JSON.stringify(this.store.scoreData.notesList));\r\n\r\n            const data = this.store.scoreData;\r\n            const notesList = data.notesList;\r\n            const cur = notesList[state.focusIndex];\r\n            const newLeft = getAdditionNotsLen(cur.pos, cur.len);\r\n            const nextNormalPos = state.focusIndex === notesList.length - 1 ? -1 : getNormalizeLenFromNotes(notesList[state.focusIndex + 1].pos);\r\n            const pastList: MelodyNotes[] = JSON.parse(JSON.stringify(state.cloneNotesList));\r\n            pastList.forEach(notes => {\r\n                notes.pos = getAdditionNotsLen(notes.pos, newLeft);\r\n            });\r\n            // ペーストするノーツの最後（右端）の要素\r\n            const pastLast = pastList[pastList.length - 1];\r\n            const newRightNormal = getNormalizeLenFromNotes(pastLast.pos) + getNormalizeLenFromNotes(pastLast.len);\r\n            // 次のノーツが存在しないか、挿入する隙間があるかを判定\r\n            console.log(`newRight: ${newRightNormal}, nextLeft: ${nextNormalPos}`);\r\n            if (nextNormalPos === -1 || newRightNormal <= nextNormalPos) {\r\n                data.notesList = notesList.concat(pastList);\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                data.notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                this.score.setScoreData(data);\r\n\r\n                state.focusIndex++;\r\n                state.destIndex = state.focusIndex + pastList.length - 1;\r\n                this.melody.setState(state);\r\n            }\r\n\r\n            // this.tune.adjustScrollX();\r\n        },\r\n\r\n        undo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`undo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const prev = history.undo();\r\n            if (prev != null) {\r\n                if (history.cur === 0) {\r\n                    console.log('first undo');\r\n                    history.list.unshift(JSON.stringify(data.notesList));\r\n                    history.cur = 1;\r\n                }\r\n                data.notesList = JSON.parse(prev);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`undo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        },\r\n\r\n        redo: () => {\r\n            const state = this.store.melodyState;\r\n            const data = this.store.scoreData;\r\n            const history = state.dataHistory;\r\n            console.log(`redo start ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n            const next = history.redo();\r\n            if (next != null) {\r\n                data.notesList = JSON.parse(next);\r\n                if (state.focusIndex >= data.notesList.length - 1) {\r\n                    state.focusIndex = data.notesList.length - 1;\r\n                    state.destIndex = state.focusIndex;\r\n                }\r\n                this.score.setScoreData(data);\r\n            }\r\n            console.log(`redo end ★ length: ${history.list.length}, cur: ${history.cur}`);\r\n        }\r\n    }\r\n\r\n    public backing = {\r\n\r\n        openBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            const chordBacking = detail.backing;\r\n            const structList = chordCache.structList;\r\n            // const cache = state.elementCacheList[state.focusIndex];\r\n            state.hideMenu = 'backing';\r\n            this.score.setScoreState(state);\r\n\r\n            const voicingTable = BackingUtil.getInitVoicingTable(detail.backing.voicingList, structList.length);\r\n            const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, chordBacking.pattern);\r\n\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n            const chordInfo: BackingState.ChordInfo = {\r\n                symbolAttr: symbol.attr,\r\n                chordFullName: chordCache.chordFullName,\r\n                structList,\r\n                beatLen: detail.beatLen,\r\n                minute: detail.minute,\r\n                init: { ...cache }\r\n            };\r\n            // エラーチェックのためにテーブルからリストへ逆変換\r\n            const voicingList = BackingUtil.getVoicingListFromTable(voicingTable);\r\n            const hasError = BackingUtil.checkEditorError(chordInfo, voicingList, pattern);\r\n\r\n            const updateAction = (editor: BackingState.Editor, isUpdate: boolean) => {\r\n                if (isUpdate) {\r\n                    this.backing.mappingEditorToScore(editor);\r\n                }\r\n                this.backing.closeBackingEditor();\r\n            }\r\n            // バッキングステートの初期化\r\n            this.backing.setState({\r\n                chordInfo,\r\n                tabIndex: 0,\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false,\r\n                hasError,\r\n                closeAction: updateAction\r\n                // editType: 'normal'\r\n            });\r\n        },\r\n\r\n        closeBackingEditor: () => {\r\n            const state = this.store.scoreState;\r\n            state.hideMenu = 'none';\r\n            this.score.setScoreState(state);\r\n            setTimeout(() => {\r\n                this.backing.setState(null);\r\n            }, 50);\r\n        },\r\n\r\n        setState: (backingState: null | BackingState.Editor) => {\r\n            this.dispatch(ActionType.SET_BACKING_STATE, { backingState });\r\n        },\r\n\r\n        getInitialLayer: (): BackingState.Layer => {\r\n            return {\r\n                noteDivList: [{ rate: 4, isDot: false, div3: 0 }],\r\n                table: [[null]],\r\n                velocityList: [5]\r\n            } as BackingState.Layer;\r\n        },\r\n\r\n        /**\r\n         * エディタで設定したバッキング情報を譜面データに反映\r\n         */\r\n        mappingEditorToScore: (editor: BackingState.Editor) => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const focus = scoreState.focusIndex;\r\n            const detail = data.chordList[focus].detail as DetailChord;\r\n            // const editor = this.store.backingState as BackingState.Editor;\r\n            console.log(editor);\r\n            detail.backing = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern),\r\n                // hasError: editor.hasError\r\n            };\r\n            this.score.setScoreData(data);\r\n\r\n            // エラーの反映\r\n            const cache = scoreState.elementCacheList[focus];\r\n            const scoreCache = scoreState.chordCacheList[cache.chordBlockNo];\r\n            scoreCache.backingError = editor.hasError;\r\n            this.score.setScoreState(scoreState);\r\n        },\r\n\r\n        addPatternColumn: () => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const lenList = layer.noteDivList;\r\n            const curLen = lenList[pattern.lenIndex];\r\n            const newLen: BackingState.NoteDiv = { rate: curLen.rate, div3: curLen.div3, isDot: curLen.isDot };\r\n            lenList.splice(pattern.lenIndex + 1, 0, newLen);\r\n            layer.noteDivList = lenList.slice();\r\n\r\n            // テーブル追加\r\n            layer.table.forEach((column) => {\r\n                column.splice(pattern.lenIndex + 1, 0, null);\r\n            });\r\n\r\n            // ベロシティ追加\r\n            layer.velocityList.splice(pattern.lenIndex + 1, 0, 5);\r\n\r\n            // ペダル追加\r\n            if (pattern.layerIndex === 0) {\r\n                pattern.pedalActs.splice(pattern.lenIndex + 1, 0, null);\r\n            }\r\n\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        movePatternColumn: (isRight: boolean) => {\r\n\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n\r\n            let tempIndex = pattern.lenIndex;\r\n            tempIndex += 1 * (isRight ? 1 : -1);\r\n            if (tempIndex >= 0 && tempIndex <= layer.noteDivList.length - 1) {\r\n                pattern.lenIndex = tempIndex;\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        moveChannelIndex: (isDown: boolean) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const index = pattern.channelIndex;\r\n\r\n            if (!isDown ? index > 0 : index < pattern.channels.length - 1) {\r\n                pattern.channelIndex += (!isDown ? -1 : 1);\r\n            }\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        setCurrentDivRate: (rate: BackingState.NoteRate) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            cur.rate = rate;\r\n            cur.isDot = false;\r\n            cur.div3 = 0;\r\n            layer.noteDivList = layer.noteDivList.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        toggleCurrentDivHalf: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const cur = layer.noteDivList[pattern.lenIndex];\r\n            if (BackingUtil.isPermitDot(cur)) {\r\n                cur.isDot = !cur.isDot;\r\n                layer.noteDivList = layer.noteDivList.slice();\r\n                this.backing.setState(state);\r\n                this.backing.updateErrorState();\r\n            }\r\n        },\r\n\r\n\r\n        getNotes: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            return layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex];\r\n        },\r\n\r\n        setNotes: (notes: BackingState.NoteStatus | null) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            layer.table[pattern.channels.length - 1 - pattern.channelIndex][pattern.lenIndex] = notes;\r\n            layer.table = layer.table.slice();\r\n            this.backing.updateErrorState();\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        incrementVel: (value: number) => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const after = layer.velocityList[pattern.lenIndex] + value;\r\n            if (after >= 1 && after <= 10) {\r\n                layer.velocityList[pattern.lenIndex] = after;\r\n                this.backing.setState(state);\r\n            }\r\n        },\r\n\r\n        deleteColumn: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            // 2つ以上要素がないと消せない\r\n            if (layer.noteDivList.length >= 2) {\r\n                layer.noteDivList.splice(pattern.lenIndex, 1);\r\n                layer.table.forEach((column) => {\r\n                    column.splice(pattern.lenIndex, 1);\r\n                });\r\n                layer.velocityList.splice(pattern.lenIndex, 1);\r\n                // for(let i = 0; i < pattern.channels.length; i ++) {\r\n                //     layer.table[i].splice(pattern.lenIndex, 1);\r\n                // }\r\n                if (pattern.layerIndex === 0) {\r\n                    // 終端までnullで更新\r\n                    if (pattern.lenIndex < pattern.pedalActs.length - 1) {\r\n                        for (let j = pattern.lenIndex + 1; j < pattern.pedalActs.length; j++) {\r\n                            pattern.pedalActs[j] = null;\r\n                        }\r\n                    }\r\n                    pattern.pedalActs.splice(pattern.lenIndex, 1);\r\n                }\r\n\r\n                if (pattern.lenIndex > 0) {\r\n                    pattern.lenIndex--;\r\n                }\r\n                this.backing.setState(state);\r\n            }\r\n            this.backing.updateErrorState();\r\n        },\r\n\r\n        /**\r\n         * 左右レイヤーを切り替える\r\n         */\r\n        switchLayer: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            pattern.layerIndex = pattern.layerIndex === 0 ? 1 : 0;\r\n            pattern.lenIndex = 0;\r\n            pattern.channelIndex = -1;\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        /**\r\n         * 音量orペダルのモードを切り替える\r\n         */\r\n        switchMode: () => {\r\n            const state = this.store.backingState as BackingState.Editor;\r\n            const pattern = state.pattern as BackingState.Pattern;\r\n            if (pattern.mode === 'velocity') pattern.mode = 'pedal';\r\n            else if (pattern.mode === 'pedal') pattern.mode = 'velocity';\r\n            this.backing.setState(state);\r\n        },\r\n\r\n        /**\r\n         * バッキングのプレビュー再生をする\r\n         */\r\n        testBacking: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const reserveTasks = this.store.reserveTasks;\r\n            const chordInfo = editor.chordInfo;\r\n            const init = chordInfo.init;\r\n\r\n            // const rootIndex = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n            // const onIndex = chordInfo.on == null ? -1 : ((chordInfo.on.index + chordInfo.init.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n            // const len = chordInfo.beatLen + chordInfo.minute.head + chordInfo.minute.tail;\r\n            // const chordTime = 60 / init.bpm * len;\r\n\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                chordInfo.beatLen,\r\n                chordInfo.minute.head + chordInfo.minute.tail,\r\n                init.bpm,\r\n                init.beatSignature\r\n            );\r\n            const backing: ChordBacking = {\r\n                voicingList: BackingUtil.getVoicingListFromTable(editor.voicingTable as boolean[][]),\r\n                pattern: editor.pattern == null ? null : BackingUtil.buildPatternProps(editor.pattern)\r\n            };\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordInfo.structList);\r\n\r\n            BackingUtil.playBacking(this.store, reserveTasks, init, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                editor.isPreview = false;\r\n                this.backing.setState(editor);\r\n            }, chordTime));\r\n\r\n            editor.isPreview = true;\r\n            this.backing.setState(editor);\r\n        },\r\n\r\n        updateErrorState: () => {\r\n            const editor = this.store.backingState as BackingState.Editor;\r\n            const voicingList = BackingUtil.getVoicingListFromTable(editor.voicingTable);\r\n            editor.hasError = BackingUtil.checkEditorError(editor.chordInfo, voicingList, editor.pattern);\r\n            this.backing.setState(editor);\r\n        },\r\n    }\r\n\r\n    public thema = {\r\n        openBackingEditor: (\r\n            beatLen: number, head: number, tail: number,\r\n            symbolKey: TheoryUtil.SymbolKey, rootIndex: number, backing: ChordBacking,\r\n            update: (editor: BackingState.Editor) => void,\r\n            close: () => void\r\n        ) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(symbolKey) as TheoryUtil.SymbolParams;\r\n            const voicingTable = BackingUtil.getInitVoicingTable(backing.voicingList, symbol.structs.length);\r\n            const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, backing.pattern);\r\n\r\n            const [chordFullName, structList] = BackingUtil.getChordDetails(\r\n                { index: rootIndex, isFlat: false } as TheoryUtil.DegreeProps,\r\n                0,\r\n                null,\r\n                symbol\r\n            );\r\n            const chordInfo: BackingState.ChordInfo = {\r\n                symbolAttr: symbol.attr,\r\n                chordFullName: chordFullName,\r\n                structList,\r\n                beatLen,\r\n                minute: { head, tail },\r\n                init: {\r\n                    beatSignature: \"4/4\",\r\n                    bpm: 100,\r\n                    keyIndex: 0,\r\n                    scale: \"major\"\r\n                }\r\n            };\r\n            // エラーチェックのためにテーブルからリストへ逆変換\r\n            const voicingList = BackingUtil.getVoicingListFromTable(voicingTable);\r\n            const hasError = BackingUtil.checkEditorError(chordInfo, voicingList, pattern);\r\n\r\n            const closeAction = (editor: BackingState.Editor, isUpdate: boolean) => {\r\n                if (isUpdate) {\r\n                    update(editor);\r\n                }\r\n                close();\r\n                this.backing.setState(null);\r\n            }\r\n            // バッキングステートの初期化\r\n            this.backing.setState({\r\n                chordInfo,\r\n                tabIndex: 0,\r\n                voicingTable,\r\n                pattern,\r\n                isPreview: false,\r\n                hasError,\r\n                closeAction\r\n                // editType: 'thema-pattern'\r\n            });\r\n        },\r\n\r\n        mappingEditorToThema: (editor: BackingState.Editor) => {\r\n            console.log(editor);\r\n            if (editor.pattern != null) {\r\n                const pattern = BackingUtil.buildPatternProps(editor.pattern)\r\n            }\r\n        },\r\n\r\n        /**\r\n         * セレクタで選択したバッキング情報を譜面データに反映\r\n         */\r\n        mappingSelectorToScore: (voicingList: VoicingProps[], pattern: BackingPatternProps | null) => {\r\n            const scoreState = this.store.scoreState;\r\n            const data = this.store.scoreData;\r\n            const focus = scoreState.focusIndex;\r\n            const detail = data.chordList[focus].detail as DetailChord;\r\n\r\n            detail.backing = { voicingList, pattern };\r\n            this.score.setScoreData(data);\r\n\r\n            // エラーの反映\r\n            // const cache = scoreState.elementCacheList[focus];\r\n            // const scoreCache = scoreState.chordCacheList[cache.chordBlockNo];\r\n            // scoreCache.backingError = editor.hasError;\r\n            // this.score.setScoreState(scoreState);\r\n        },\r\n    }\r\n}","import { Sampler } from \"tone\";\r\nimport { ChordBacking, DetailChord, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport Soundfont from 'soundfont-player';\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\n// export const getDefaultSampler = () => {\r\n//     return new Sampler({\r\n//         \"C2\": \"https://dl.dropbox.com/s/9v1e4vb2y49kvxe/KEPSREC036.mp3?dl=0\",\r\n//         \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n//         \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n//         \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n//         \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n//     }).toDestination();\r\n// }\r\nexport const getDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"C2\": \"https://dl.dropbox.com/s/ebta7izw1zdphki/KEPSREC036.mp3?dl=0\",\r\n        \"D2\": \"https://dl.dropbox.com/s/d8bel1c9d1utk25/KEPSREC038.mp3?dl=0\",\r\n        \"E2\": \"https://dl.dropbox.com/s/qe48401jgb2cewo/KEPSREC040.mp3?dl=0\",\r\n        \"F2\": \"https://dl.dropbox.com/s/3s7sc8btjob8gru/KEPSREC041.mp3?dl=0\",\r\n        \"G2\": \"https://dl.dropbox.com/s/zzxvr0p4j37n9i0/KEPSREC043.mp3?dl=0\",\r\n        \"A2\": \"https://dl.dropbox.com/s/vcrs90e06djj7sx/KEPSREC045.mp3?dl=0\",\r\n        \"B2\": \"https://dl.dropbox.com/s/yvkrz0ngkijjngq/KEPSREC047.mp3?dl=0\",\r\n        \"C3\": \"https://dl.dropbox.com/s/qjkoqqdkqwtnctj/KEPSREC048.mp3?dl=0\",\r\n        \"D3\": \"https://dl.dropbox.com/s/jjyithbiwmxfn5m/KEPSREC050.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/2s4p06g2gw2lcf7/KEPSREC052.mp3?dl=0\",\r\n        \"F3\": \"https://dl.dropbox.com/s/7mo0mm2bbc3im60/KEPSREC053.mp3?dl=0\",\r\n        \"G3\": \"https://dl.dropbox.com/s/qqrrlwogz0orihq/KEPSREC055.mp3?dl=0\",\r\n        \"A3\": \"https://dl.dropbox.com/s/o6oycmolcn7rhbs/KEPSREC057.mp3?dl=0\",\r\n        \"B3\": \"https://dl.dropbox.com/s/3s05r18hsd19t6e/KEPSREC059.mp3?dl=0\",\r\n        \"C4\": \"https://dl.dropbox.com/s/9fgqyu7hsj8fncc/KEPSREC060.mp3?dl=0\",\r\n        \"D4\": \"https://dl.dropbox.com/s/ja1d04dgy9v98x9/KEPSREC062.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/y2379pix35gto7u/KEPSREC064.mp3?dl=0\",\r\n        \"F4\": \"https://dl.dropbox.com/s/h1sq8yikmdfvzqc/KEPSREC065.mp3?dl=0\",\r\n        \"G4\": \"https://dl.dropbox.com/s/hvzvcrm1emfum0d/KEPSREC067.mp3?dl=0\",\r\n        \"A4\": \"https://dl.dropbox.com/s/vy56xbt7w78o41o/KEPSREC069.mp3?dl=0\",\r\n        \"B4\": \"https://dl.dropbox.com/s/e9kv77pym1wtujc/KEPSREC071.mp3?dl=0\",\r\n        \"C5\": \"https://dl.dropbox.com/s/0v042zfk67q4a8d/KEPSREC072.mp3?dl=0\",\r\n        \"C6\": \"https://dl.dropbox.com/s/3u2c7qsmhnse575/KEPSREC084.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\n\r\nexport const playChordSampler = (sampler: Sampler, detail: DetailChord, bpm: number) => {\r\n\r\n    sampler.releaseAll();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index, i) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n    });\r\n\r\n    setTimeout(() => {\r\n        // sampler.triggerRelease('C3');\r\n        sampler.releaseAll();\r\n    }, 2000);\r\n}\r\n\r\nexport const playChordSoundfont = (soundfont: Soundfont.Player, detail: DetailChord) => {\r\n\r\n    soundfont.stop();\r\n    if (detail.root == null) return;\r\n\r\n    const rootIndex = detail.root.index;\r\n    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n    const channelList = detail.backing.voicingList.map((item) => {\r\n        const interval = TheoryUtil.IntervalRelationProps[symbol.structs[item.struct]];\r\n        return 12 * item.octave + rootIndex + interval;\r\n    });\r\n\r\n    channelList.forEach((index) => {\r\n        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n        const octave = Math.floor(index / 12);\r\n        const soundFullName = soundName + octave;\r\n\r\n        soundfont.play(soundFullName, 0, { duration: 1 });\r\n    });\r\n}\r\n\r\n\r\nexport const getDefaultBacking = (attr: TheoryUtil.SymbolAttribute) => {\r\n    let voicingList: VoicingProps[] = [];\r\n    switch (attr) {\r\n        case 'triad': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 0, octave: 5 },\r\n        ]; break;\r\n        case 'seventh': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 2, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n        case 'add9th': voicingList = [\r\n            { struct: 0, octave: 3 },\r\n            { struct: 1, octave: 3 },\r\n            { struct: 2, octave: 3 },\r\n            { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 3 },\r\n            // { struct: 2, octave: 3 },\r\n            // { struct: 3, octave: 3 },\r\n            // { struct: 0, octave: 4 },\r\n            // { struct: 1, octave: 4 },\r\n            // { struct: 3, octave: 4 },\r\n        ]; break;\r\n    }\r\n    const backing: ChordBacking = {\r\n        voicingList,\r\n        pattern: null,\r\n        // hasError: false\r\n    };\r\n    return backing;\r\n}","\r\n\r\n/**\r\n * データの履歴を管理するクラス\r\n */\r\nclass DataHistory {\r\n\r\n    cur: number;\r\n    list: string[];\r\n\r\n    constructor() {\r\n        this.cur = -1;\r\n        this.list = [];\r\n    }\r\n\r\n\r\n    add(data: string) {\r\n        // console.log(`add start ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n        // if (this.list[this.cur] === data) {\r\n        //     console.log('same...');\r\n        //     return;\r\n        // }\r\n        if (this.cur > -1) {\r\n            this.list.splice(0, this.cur + 1);\r\n            this.cur = -1;\r\n            console.log('restert');\r\n        }\r\n        this.list.unshift(data);\r\n        // console.log(`add end ★ length: ${this.list.length}, cur: ${this.cur}`);\r\n    }\r\n\r\n    undo(): null | string {\r\n        let ret = null;\r\n        if (this.cur < this.list.length - 1) {\r\n            this.cur++;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    redo(): null | string {\r\n        let ret = null;\r\n        if (this.cur > 0) {\r\n            this.cur--;\r\n            ret = this.list[this.cur];\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport default DataHistory;\r\n","import { themaColorNormal } from \"../../base/design/thema/themaColorNormal\"\r\nimport { getDefaultSampler } from \"../../utils/instrumentsUtil\"\r\nimport { RefsCache as RefsCache } from \"./refsCache\"\r\nimport { Instruments } from \"./instrument\"\r\nimport { ScoreData } from \"./score/scoreData\"\r\nimport { ScoreState } from \"./score/scoreState\"\r\nimport { SystemState } from \"./systemState\"\r\nimport { MelodyState } from \"./score/melodyState\"\r\nimport { getDefaultKeyConfig, UserEnv } from \"./userEnv\"\r\nimport { Invalidate } from \"./invalidate\"\r\nimport DataHistory from \"./state/dataHistory\"\r\nimport BackingState from \"./score/backing/backingState\"\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    userEnv: UserEnv;\r\n    systemState: SystemState;\r\n    scoreState: ScoreState;\r\n    backingState: null | BackingState.Editor;\r\n    melodyState: MelodyState;\r\n    scoreData: ScoreData;\r\n    instruments: Instruments;\r\n    refs: RefsCache;\r\n    reserveTasks: NodeJS.Timeout[];\r\n    invalidate: Invalidate;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    userEnv: {\r\n        keyConfig: getDefaultKeyConfig(),\r\n        colorProps: themaColorNormal,\r\n    },\r\n    systemState: {\r\n        directScore: null,\r\n        isSplash: true,\r\n        mainChannelIndex: 0,\r\n        scoreTabIndex: 0,\r\n        editable: true,\r\n        dialog: null,\r\n        themaList: [],\r\n        activeThemaIndex: -1,\r\n        cache: null\r\n    },\r\n    backingState: null,\r\n    scoreState: {\r\n        fileHandle: null,\r\n        isMelody: false,\r\n        initialBeat: 4,\r\n        focusIndex: -1,\r\n        distIndex: -1,\r\n        elementCacheList: [],\r\n        chordCacheList: [],\r\n        sectionCacheList: [],\r\n        scaleCacheList: [],\r\n        tempoCacheList: [],\r\n        beatCacheList: [],\r\n        measureCacheList: [],\r\n        keySwitch: {\r\n            distMode: false,\r\n            sustainMode: false,\r\n            chordMode: false,\r\n            symbolMode: false,\r\n            control: false,\r\n            minHeadMode: false,\r\n            minTailMode: false\r\n        },\r\n        symbolMng: null,\r\n        hideMenu: 'none',\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneBacking: null,\r\n        copiedElementList: null,\r\n        backingDataHistory: new DataHistory(),\r\n    },\r\n    melodyState: {\r\n        focusIndex: -1,\r\n        destIndex: -1,\r\n        lastFocus: -1,\r\n        quantize: 1,\r\n        beatWidth: 120,\r\n        tableMouse: {\r\n            isPut: false,\r\n            lock: { x: 0, y: 0 },\r\n            width: 0,\r\n            prevRight: 0,\r\n            nextLeft: 0,\r\n            notesState: { index: -1, side: 'normal', isResize: false, isMove: false },\r\n            curChord: null,\r\n            mousePitchIndex: -1,\r\n            mouseMeasurePos: -1\r\n        },\r\n        timelineMouse: {\r\n            pos: -1,\r\n            isPut: false,\r\n            lock: -1,\r\n            width: 0,\r\n        },\r\n        soundfontInfo: {\r\n            name: 'violin',\r\n            gain: 9\r\n        },\r\n        keySwitch: {\r\n            scaleMode: false,\r\n            octave: false,\r\n            resize: false,\r\n            move: false,\r\n            shift: false,\r\n            control: false,\r\n        },\r\n        isPreview: false,\r\n        isSolo: false,\r\n        cloneNotesList: [],\r\n\r\n        dataHistory: new DataHistory(),\r\n        notesCacheList: []\r\n    },\r\n    scoreData: {\r\n        chordList: [],\r\n        notesList: []\r\n    },\r\n    instruments: {\r\n        // sampler: getDefaultSampler(),\r\n        harmonyFont: null,\r\n        melodyFont: null\r\n    },\r\n\r\n    refs: {\r\n        harmonize: {\r\n            note: {} as HTMLDivElement\r\n        },\r\n        melody: {\r\n            table: null,\r\n            measure: null,\r\n            chord: null,\r\n            pitch: null,\r\n        }\r\n    },\r\n    reserveTasks: [],\r\n    invalidate: {\r\n        harmoniizeInvalidate: {},\r\n        harmonize: null,\r\n        melody: null\r\n    },\r\n}","import { ColorProps } from \"../../base/design/colorProps\";\r\n\r\nexport type UserEnv = {\r\n    login?: LoginProps;\r\n    keyConfig: KeyConfig;\r\n    colorProps: ColorProps;\r\n}\r\n\r\nexport type LoginProps = {\r\n    seq: number;\r\n    id: string;\r\n}\r\n\r\nexport type KeyConfig = {\r\n    note: {\r\n        left: string;\r\n        right: string;\r\n        up: string;\r\n        down: string;\r\n        addChord: string;\r\n        addSection: string;\r\n        addChange: string;\r\n        deleteCur: string;\r\n        distMode: string;\r\n        edit1: string;\r\n        incRoot: string;\r\n        decRoot: string;\r\n        incBeat: string;\r\n        decBeat: string;\r\n        edit2: string;\r\n    }\r\n}\r\n\r\nexport const getDefaultKeyConfig = (): KeyConfig => {\r\n    return {\r\n        note: {\r\n            left: 'ArrowLeft',\r\n            right: 'ArrowRight',\r\n            up: 'ArrowUp',\r\n            down: 'ArrowDown',\r\n            addChord: 'a',\r\n            addSection: 's',\r\n            addChange: 'm',\r\n            deleteCur: 'Delete',\r\n            distMode: 'Shift',\r\n            edit1: 'f',\r\n            edit2: 'c',\r\n            incRoot: 'ArrowUp',\r\n            decRoot: 'ArrowDown',\r\n            incBeat: 'ArrowRight',\r\n            decBeat: 'ArrowLeft',\r\n        }\r\n    };\r\n}","import { ColorProps } from \"../colorProps\";\r\n\r\nexport const themaColorNormal: ColorProps = {\r\n    entryBackground: '#e2a9ae',\r\n}","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const dialog = store.systemState.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.systemState.dialog = null;\r\n            dispatcher.system.setState(store.systemState);\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n    \r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n    tabRecordNum?: number;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isDisable={props.isDisable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isDisable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${!props.isDisable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行のサンプルを検索するユーティリティ\r\n */\r\nnamespace ProgUnitSearcher {\r\n\r\n    export type ChordItemBean = {\r\n        root: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n        beatLen: number;\r\n    }\r\n\r\n    export type UnitBean = {\r\n        condition: UnitCondition;\r\n        chordList: ChordItemBean[];\r\n    }\r\n\r\n    /**\r\n     * ダイアトニックスケールの連番でコードを指定する\r\n     * @param scaleIndex スケールの連番\r\n     * @param beatLen 拍\r\n     */\r\n    const getDiatonicChord = (scaleIndex: number, beatLen: number): ChordItemBean => {\r\n        const chord = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[scaleIndex];\r\n        return { root: { index: chord.root.index, isFlat: false }, symbolKey: chord.symbolKey, beatLen };\r\n    }\r\n\r\n    export type UnitCondition = {\r\n        beat: BeatSignature;\r\n        step: number;\r\n        firstChord: ProgUtil.DegreeFilter;\r\n        secondChord: ProgUtil.DegreeFilter;\r\n    }\r\n\r\n    /**\r\n     * コード進行を検索する\r\n     * @param condition \r\n     * @returns フィルターしたリスト\r\n     */\r\n    export const search = (condition: UnitCondition) => {\r\n        return UNIT_LIST.filter((unit) => (\r\n            (unit.condition.beat === condition.beat) &&\r\n            (condition.step === 0 || unit.condition.step === condition.step) &&\r\n            (condition.firstChord === '' || unit.condition.firstChord === condition.firstChord) &&\r\n            (condition.secondChord === '' || unit.condition.secondChord === condition.secondChord)\r\n        ));\r\n    }\r\n\r\n    export const parseChord = (source: string): ChordItemBean[] => {\r\n        let baseBeat = -1;\r\n        const keyList = source.split(' ');\r\n        let hasError = false;\r\n        const chordList: ChordItemBean[] = [];\r\n        keyList.some((key, i) => {\r\n            const head = key.charAt(0);\r\n            if (head === '@') {\r\n                const newBeat = Number(key.charAt(1));\r\n                baseBeat = newBeat;\r\n            } else if (['1', '2', '3', '4', '5', '6', '7'].includes(head)) {\r\n                const diatonicNo = Number(head) - 1;\r\n\r\n                let chord: null | ProgUnitSearcher.ChordItemBean = null;\r\n                const diatonicProps = TheoryUtil.DIATONIC_MAJOR_SCALE_LIST[diatonicNo];\r\n                if (key.length === 1) {\r\n                    chord = {\r\n                        root: diatonicProps.root, symbolKey: diatonicProps.symbolKey, beatLen: baseBeat\r\n                    }\r\n                } else {\r\n                    const adjustKey = key.charAt(1);\r\n                    const adjust = adjustKey === '#' ? 1 : adjustKey === 'b' ? -1 : 0;\r\n                    const shortNameKey = key.substring(2);\r\n                    const symbol = getSymbolFromShortName(shortNameKey);\r\n                    if (symbol != undefined) {\r\n                        const root = { ...diatonicProps.root };\r\n                        root.index += adjust;\r\n                        root.isFlat = adjust === -1;\r\n                        chord = {\r\n                            root, symbolKey: symbol.key, beatLen: baseBeat\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (chord == null) {\r\n                    hasError = true;\r\n                    return true;\r\n                } else {\r\n                    chordList.push(chord);\r\n                }\r\n            } else {\r\n                hasError = true;\r\n                return true;\r\n            }\r\n\r\n        });\r\n        return chordList;\r\n    }\r\n\r\n    const getSymbolFromShortName = (shortName: string): undefined | TheoryUtil.SymbolParams => {\r\n        return TheoryUtil.SYMBOL_LIST.find(symbol => {\r\n            if ('*' + symbol.name === shortName) return symbol;\r\n        });\r\n    }\r\n\r\n    const UNIT_LIST: UnitBean[] = [\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 3 4 1 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 3 4 3 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 3 4 1 2 5 1')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 6 5 4 1 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@4 1 5 6 4 1 5 6 4')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅰ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 1 5 7b* 6n*7 2 1#*dim 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@4 1 4 5 6 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('@4 1 6 2 5 1 6 2 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅰ', secondChord: 'Ⅵm' },\r\n            chordList: parseChord('@4 1 6 4 5 1 6 4 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 4 5 3 6 4 5 3 6')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 4n*maj7 5 3n*m7 6 4n*maj7 5 3n*m7 6')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 4n*maj7 5 3n*m7 6 2n*m7 3n*7 6 6n*7')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅳ', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 2n*m7 5 3n*m7 6 2n*m7 3n*7 6n*sus4 6')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@2 6 4 5 1 6 4 5 1')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@4 6 4 5 1 6 4 5 1')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@2 6 4 1 5 6 4 1 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 4, firstChord: 'Ⅵm', secondChord: 'Ⅳ' },\r\n            chordList: parseChord('@4 6 4 1 5 6 4 1 5')\r\n        },\r\n        {\r\n            condition: { beat: \"4/4\", step: 2, firstChord: 'Ⅵm', secondChord: 'Ⅴ' },\r\n            chordList: parseChord('@2 6 5 4 3n*m7 2n*m7 6 2#*dim 3n*7')\r\n        },\r\n    ];\r\n}\r\n\r\nexport default ProgUnitSearcher;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\n\r\nnamespace ProgStyle {\r\n\r\n\r\n    /** 実行ボタン */\r\n    export const _TitleLabel = styled.div<{\r\n    }>`\r\n        ${Styles.CSS_LABEL_MIDIUM};\r\n        background-color: #f0f0f049;\r\n        width: 120px;\r\n        text-align: center;\r\n        border-radius: 10px;\r\n        color: #2c2c2c;\r\n        border: solid 1px #ffffff79;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n\r\n    /** コンボボックス */\r\n    export const _Combobox = styled.select<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: black;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n\r\n    /** ラベル */\r\n    export const _Label = styled.div<{\r\n        isEnable: boolean;\r\n        width: number;\r\n    }>`\r\n        display: inline-block;\r\n        height: 30px;\r\n        ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n        font-size: ${Styles.FONT_MIDIUM}px;\r\n        text-align: left;\r\n        color: #002bc5;\r\n        font-weight: 600;\r\n        background-color: #e1f9fa;\r\n        padding-left: 4px;\r\n        border-radius: 4px;\r\n        line-height: 24px;\r\n        width: ${props => props.width}px;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    `;\r\n}\r\n\r\nexport default ProgStyle;","import { ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport { ScoreState } from \"../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * コード進行生成のバッキング関連のユーティリティ\r\n */\r\n namespace progBackingUtil {\r\n\r\n    export type Props = {\r\n        name: string;\r\n        patternConditions: PatternCondition[];\r\n    }\r\n    export type VoicingCondition = {\r\n        attr: TheoryUtil.SymbolAttribute;\r\n        source: string;\r\n    }\r\n    export type PatternCondition = {\r\n        beatLen: number;\r\n        source: string;\r\n        voicingConditions: VoicingCondition[];\r\n    }\r\n\r\n    export const BACKING_SAMPLE_LIST: Props[] = [\r\n        {\r\n            name: 'none',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'barrade-01',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTwRKCIBD9Gu4FOnbVvDTTrS9ghIyGsJHNyb4+BCkxb416YWD3LW/fY0FJhjAuLlQpLk/ixc0JkTRGeG92d86o1C6E4gxZMBPNQTH+dOGNQ9ICRKV6JMZum+Qozl1e0pbXEzeNQzWFvoXIFQqdV+AiZ9MLd1FTSTx/YilG1btf3PR1f1d7haoCro9Cw0hR6FMbnDRQeHgLLFqLUlH58dHaaKEgbkKVQXXDZcquAxsGWnpWvArrNmDdzsXqnTe57xh1k9uNDunSg9ZmnLVo7mnBq7zbUqyhVrKK1qVYQ63R4j/D/wq7vgHgSWwr/AUAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqAW7wdQFAL14+prfAAAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYl1oTHG4wdQEAGcWLSt8AAAA='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA9WVwVLDIBCGn4a7XcB4bc3Fmd58AqbBioPECdtO69NLINGAdexBYLwwsOzPB7sskGZDAHbPwhipH9W7dCNC17cE7l3vTXZC22AifEO8c6eOD6aTp2C+CZ5ih6o3kydA6DYt4W2Y1+IshwsrpaZB4LQFFoTKtj0Gy5PbiwxWp6Qzv/GIRH333e/ychnU7Hc1Doc/QM/BNT1Ku1UWk2DGKTpHI4sCD3P0vbdVeyP0Zwp9Br0rqldl9pH6KPW6e1lkYHGWUxSFwtRVRF0VotIqVIiokIs63zI391Wt3NnGDI8nH/swui22mLG0ryivbKX9X9RXvgy0zA1K7i2vQo1fQVrlPSpFZVWocYRZlQiXokIVKqtCjfPKq0Q4G/XH341OPxwkP5xvPwCCCyaGNwsAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGuES60JCW7AohbsBlMXAA68b5wLAQAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGtEglpjXGpNcLjB1AUAqgEeTAsBAAA='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'barrade-02',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTXQ+CIBT9NbwbxPRV86Wtt34BUzIaYQty2a+PQFLMuT7tgQ3OPZdzOZcLwgRAmG2JEJSv2YXqE0AxBnChdweaEy4tBHACDDln1VLk9GzhwDJJplgpGiaEdhumAKc2zklNjwM39aEjUU0JkU1kMi2VRTa6FmpRnYmcfmgkhrO7vOHr/pzt/BGlonLFpOr54btceyepiDo5Aw1bskIQfu+CaYKhKrZnovCyK8rjfNcxsfOWRnXmqc4mUkWeKpxIFXqq6Feqrt861n7927S1C3vljc7I/IUZeeunTeV+8EX30TMS848koseHwfEGYxcM0ysSYVFzcwUAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqAWba+oCACBiEqvfAAAA'\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqDUGqTV1AQCUaWUN3wAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2V0W7CIBSGn4b7eUrFW11vTHbnExCLjgWpEWbUp5dC2cA1y1YSuPGiLRzOz8dJfwCRFQLYvlMpmdjwGzM9VC3nCF5N68haKpQLoXqFbHLLz2vZsosLv7hMutW8k0MmgGuSBtWNGxf0yk4jMz2GTlQPS1g4IVdNp11kZ9bCXNQoK88nFjGuDvPGp3uqi6i9L2SnmXrjSj/4IHbXNeopTfWnN47NVnwvqfhynzWfTdX8wOU+Up+ZWLYfgXmCWgbqLKLOMlFxEWoVUSETtS5CJUWoEFGrTNR5Hqrfx2bs+yjv/65/cPDtH+glwXJ/vQNw0h2Ak06z/6gnnWa5nFDGf3GtOImKf1LhL7WmUafWWidRycS9hod9Zd93wUPW69YJAAA=',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqMXpBlMc5pq6AADXs/OfCwEAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmtCghuwqCXFXGOQWlMXACkdNMwLAQAA'\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: '8beat-01',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTSw7CIBQ8DXulJbht7cbEnScgLVYMUlOwsZ5e5BUtTeNGU1bAMMM83gfRHGFcnphSXB7Eg9sTSrIU4a3dXXnFpAYIkRw5ciW6nar4HeAVMFlpRKMGJsawpQUiBdxL1vN25qUp1DIzhLABodBFYwA52lg4oFaZeH/qLObVY978c5HVPj+qMVzvhTaTfIRZ7oOTNszcfAIdW4taMfmugiuCoxpxEaoO1B2XWXUeJXH0l8F1HcUVR3FNlnH19bZ3n9YnFnv5w0qC8L7OSPrTjKT/79OwY9YL1S6cDhxlOpZyDf+aROhT4gm0eAKCqPtePgYAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGsEUmvqAgBJsewgswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2V0Q6CIBSGn4b7Omp2W3nT1l1PwJSKRtiEXPb0IWhJc67N5bnpRuBwDh+w3x8SrwlAeqJSMrHnD2ZGJFiFBDamd2UZFcqFSLQmNjnj5VZm7O7CM5dJU81z2WQCuG6ckChx84JWrOhZ6TNUUN1sYekKuUpy7SIHsxfmoqYyaPmxRfRXd/P6l/tXo1S3upC5ZmrHlf7Qga+uyhspTfWtFY7NVvwoqXipz4rPpmp+4fLoVZdMrLJzRzydszTUOQoVUKgBCjVEoUYo1AUKNZ6G2v7HZu5t5fU917rqbyNvu4NvQDjqDQhHudl01V96oe9KcxR/mIrq+z6g+P5UVECh+jccoJz1Z9RBV4KOC9nvE4/6Z+UECwAA',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmuCww2mLgAeyOCMswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: '8beat-02',\r\n            patternConditions: [\r\n                {\r\n                    beatLen: 2,\r\n                    source: 'H4sIAAAAAAAAA8VTQQ6CMBB8Te9SJHgFuZh48wUNVKypxdCFiK+3dqlSwsXE0Attp7M7y26HpDmhtLwwpbg8iSc3JxJnW0L3ZnfnFZMaIZLkxJIr0R9UxR8Ib5DJShCNGpmU4jYtSFLgvWQDbxcyzaGWwVjCDgOFLhpA5Gxq4YiayNjpp1ZiOXrKW04XONr1RzXA9VFomPXD7/LgnTQw6FwDLVuLWjH5mYIdgqWCuAlVe9E9l1l1nTRx8i+jahRElQZRjddRdfM2d9+nnxjsrY9r4pX3o0eg7f5oEZttrTfuv7Zopbn7zqJBnLWWKg2i6nc4DuIs5yr7fQFCZXGQ9AYAAA==',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTFlag1JUGsEUmvqAgBJsewgswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    beatLen: 4,\r\n                    source: 'H4sIAAAAAAAAA+2VwU4DIRCGn4a7nQXx2roXE28+AelixSBrFtrYPn0ps+jSEBMTw8TEE+wwPx/L/jvD5IYBbF+Uc9o+mZOOT6xbcwb3cfauB2U9hpjYsJQ8mMODG/QHhm8wU22DGd2cCYBT2TPR47pVRz1VdroOTSrMR7hDofH9GDDyHM+iMRqVXebLhKirl3n17f7VJOrsCzcG7R+ND1c+KN11LJ58UGGfjZOyvdk5ZT/dl8yXUoN5M25XqA/arofXhXkW7zJTVyRUIKF2JFROQhUk1FsSqmxDzf9xXPsq5Zd7vviqPoriuD/sAWHa/2ILSLtVxfyP1NEmVbishyuSytSKKkioZZ8Dkj7XigokVE5CLb9rR3LDrai8DfXbjgPziHORBbI/A9v3xeToDAAA',\r\n                    voicingConditions: [\r\n                        {\r\n                            attr: 'triad',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BrhUmuCww2mLgAeyOCMswAAAA=='\r\n                        },\r\n                        {\r\n                            attr: 'seventh',\r\n                            source: 'H4sIAAAAAAAAA1M1dVI1d1I1MspPLkksSwUyVI0djVSNnIGs4pKi0uQSiJCBqrkLSBRDrTGmWkMS1BqRoNYYpNbUBQClqctlswAAAA=='\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'arpeggio-01',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'arpeggio-02',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: 'rock-01',\r\n            patternConditions: []\r\n        },\r\n        {\r\n            name: '16beat-01',\r\n            patternConditions: []\r\n        },\r\n    ];\r\n }\r\n\r\n export default progBackingUtil;","import { BackingPatternProps, BeatSignature, ChordElement, DetailChord, DetailFixed, DetailInit, DetailSection, FixedItem, ScoreData, VoicingProps } from \"../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport progBackingUtil from \"./progBackingUtil\";\r\n\r\n/**\r\n * コード進行生成のユーティリティ\r\n */\r\nnamespace ProgUtil {\r\n\r\n    /** 生成方法 */\r\n    export type BuildType = 'blank' | 'custom' | 'template';\r\n\r\n    export const STEP_LIST = [0, 2, 3, 4] as const;\r\n    export type Step = typeof STEP_LIST[number];\r\n\r\n    /**\r\n     * ブロックに設定するプロパティ\r\n     */\r\n    export type UnitProps = {\r\n        type: BlockType;\r\n        detail: SectionProps | FixedItem;\r\n    }\r\n\r\n    export type BlockType = 'fixed' | 'section';\r\n\r\n    export type SectionProps = {\r\n        sectionName: string;\r\n        sectionNo: string;\r\n        chordList: DetailChord[];\r\n        backingNo: number;\r\n    }\r\n\r\n    export const DEGREE_FILTER_LIST = [\r\n        '', 'Ⅰ', 'Ⅴ', 'Ⅳ', 'Ⅵm', 'Ⅱm', 'Ⅲm'\r\n    ] as const;\r\n    export type DegreeFilter = typeof DEGREE_FILTER_LIST[number];\r\n\r\n    /**\r\n     * 初期状態のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getInitialBlockList = (): UnitProps[] => {\r\n        return [\r\n            { type: 'fixed', detail: 'Start' },\r\n            { type: 'fixed', detail: 'End' },\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Blank選択時のブロックリストを返す\r\n     * @returns 初期状態のブロックリスト\r\n     */\r\n    export const getBlankBlockList = (): UnitProps[] => {\r\n        return [\r\n            { type: 'fixed', detail: 'Start' },\r\n            {\r\n                type: 'section',\r\n                detail: {\r\n                    sectionName: 'Section',\r\n                    sectionNo: '',\r\n                    chordList: [\r\n                        getDefaultChord()\r\n                    ],\r\n                    backingNo: 0\r\n                }\r\n            },\r\n            { type: 'fixed', detail: 'End' },\r\n        ];\r\n    }\r\n\r\n    export const getDefaultChord = (): DetailChord => {\r\n        return {\r\n            beatLen: 4, minute: { head: 0, tail: 0 }, root: null, on: null, symbolKey: 'major',\r\n            backing: {\r\n                voicingList: [],\r\n                pattern: null,\r\n                // hasError: false\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拍子より選択可能なステップリストを絞り込む\r\n     * @param beat ステップの拍\r\n     * @returns 絞り込んだリスト\r\n     */\r\n    export const getFilteredStepList = (beat: BeatSignature) => {\r\n        return STEP_LIST.filter((item) => {\r\n            // 0は空白表示なので必ず加える\r\n            if (item === 0) return true;\r\n\r\n            switch (beat) {\r\n                case '4/4':\r\n                case '6/8': {\r\n                    if (item === 3) return false;\r\n                }\r\n                    break;\r\n                case '3/4':\r\n                case '9/8': {\r\n                    if (item !== 3) return false;\r\n                }\r\n                    break;\r\n                case '2/4':\r\n                case '6/8': {\r\n                    if (item !== 2) return false;\r\n                }\r\n                    break;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * ブロックリストより譜面データを生成する\r\n     * @param outputUnits ユニットリスト\r\n     * @returns 譜面データ\r\n     */\r\n    export const buildScoreData = (outputUnits: UnitProps[]): ScoreData => {\r\n        const elementList: ChordElement[] = [];\r\n        // イニシャル要素を設定\r\n        const initElement: DetailInit = {\r\n            keyIndex: 0,\r\n            bpm: 100,\r\n            scale: \"major\",\r\n            beatSignature: \"4/4\"\r\n        }\r\n        elementList.push({ type: 'init', detail: initElement });\r\n        outputUnits.forEach((block) => {\r\n            if (block.type === 'fixed') {\r\n                const fixed = block.detail as FixedItem;\r\n                // 固定ブロックの処理\r\n                elementList.push({ type: 'fixed', detail: { fixed } });\r\n            } else {\r\n                const blockDetail = block.detail as SectionProps;\r\n                const getSectionFullName = () => {\r\n                    return blockDetail.sectionName;\r\n                }\r\n                // セクションブロックの処理\r\n                elementList.push({ type: 'section', detail: {labelName: getSectionFullName()} });\r\n\r\n                // サンプルバッキングの適用\r\n                const sample = progBackingUtil.BACKING_SAMPLE_LIST[blockDetail.backingNo];\r\n                blockDetail.chordList.forEach((chord) => {\r\n                    const detail = chord;\r\n\r\n                    let voicingList: VoicingProps[] = [];\r\n                    let pattern: BackingPatternProps | null = null;\r\n                    sample.patternConditions.some(conPa => {\r\n                        if(conPa.beatLen === detail.beatLen) {\r\n                            // console.log(DataUtil.unZip(conPa.source));\r\n                            pattern = JSON.parse(DataUtil.unZip(conPa.source));\r\n\r\n                            conPa.voicingConditions.some(conVo => {\r\n                                const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                                if(conVo.attr === symbol.attr) {\r\n                                    voicingList = JSON.parse(DataUtil.unZip(conVo.source));\r\n                                    return true;\r\n                                }\r\n                            });\r\n                            return true;\r\n                        }\r\n                    });\r\n                    detail.backing.voicingList = voicingList;\r\n                    detail.backing.pattern = pattern;\r\n\r\n                    elementList.push({ type: 'chord', detail });\r\n                });\r\n            }\r\n        });\r\n        return { chordList: elementList, notesList: [] };\r\n    }\r\n}\r\n\r\nexport default ProgUtil;","import { useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../utils/dummyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport ProgUnitSearcher from \"./progUnitSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行を編集する画面\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ProgCustomFrame = (props: {\r\n    /** 拍子フィルターの値 */\r\n    beat: '' | BeatSignature;\r\n    /** ユニット数 */\r\n    unitNum: number;\r\n    /** 出力リストを初期化するコールバック関数 */\r\n    reset: () => void;\r\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\r\n    insertProgUnit: (sectionName: string, sectionNo: string, chordList: ProgUnitSearcher.ChordItemBean[]) => void;\r\n}) => {\r\n\r\n    const [step, setStep] = useState<ProgUtil.Step>(0);\r\n    const [degreeFilters, setDegreeFilters] = useState<(ProgUtil.DegreeFilter)[]>(['', '']);\r\n\r\n    /** ブロックの最後のコード */\r\n    const [lastChord, setLastChord] = useState<ProgUnitSearcher.ChordItemBean | null>(null);\r\n\r\n    // const [progUnitList, setProgUnitList] = useState<ProgSearcher.UnitBean[]>([]);\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n\r\n    const stepList = useMemo(() => {\r\n        return props.beat === '' ? [0] : ProgUtil.getFilteredStepList(props.beat);\r\n    }, [props.beat]);\r\n\r\n    /** 拍ステップ絞り込みのコンボボックス */\r\n    const stepOptionJsxList = useMemo(() => {\r\n        // console.log(stepList.length);\r\n        return stepList.map((val, i) => {\r\n            // 0の場合は表示しない制御\r\n            const disp = val === 0 ? '' : val;\r\n            return (\r\n                <option key={i} value={val}>{disp}</option>\r\n            );\r\n        });\r\n    }, [stepList]);\r\n\r\n    /** ディグリーネーム絞り込みのコンボボックス */\r\n    const degreeOptionJsxListArray: JSX.Element[][] = useMemo(() => {\r\n        return [ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 先頭のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        }), ProgUtil.DEGREE_FILTER_LIST.map((filter, i) => {\r\n            // 2番目のフィルター\r\n            return (<option key={i} value={filter}>{filter}</option>);\r\n        })];\r\n    }, [degreeFilters]);\r\n\r\n    /** リストに表示する進行ユニットのJSX */\r\n    const [progUnitList, progJsxList] = useMemo(() => {\r\n        if (props.beat === '') return [[], []];\r\n        const beat = props.beat as BeatSignature;\r\n        // フィルタリングしたユニットリスト\r\n        const unitList = ProgUnitSearcher.search({\r\n            beat: props.beat,\r\n            step, firstChord: degreeFilters[0], secondChord: degreeFilters[1]\r\n        });\r\n        const jsx = unitList.map((unit, i) => {\r\n            const isActive = focusIndex === i;\r\n\r\n            /** 表示する進行ユニット */\r\n            const dispUnitJsx: JSX.Element[] = [];\r\n            /** 表示する進行ユニット */\r\n            let tootTipStr: string = '';\r\n            let totalBeat = 0;\r\n            const beatCycle = TheoryUtil.getBeatProps(beat).barBeatCnt;\r\n            unit.chordList.forEach((chord, j) => {\r\n                const degreeRoot = TheoryUtil.getDegreeRoot(chord.root);\r\n                const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\r\n                const symbolName = symbol.name;\r\n                const chordName = degreeRoot + symbolName;\r\n                if (j !== 0) {\r\n                    const divStr = totalBeat % beatCycle === 0 ? ' | ' : '・';\r\n                    dispUnitJsx.push(<_Span key={dispUnitJsx.length}>{divStr}</_Span>);\r\n                    tootTipStr += divStr;\r\n                }\r\n                let isMatch = false;\r\n                if (j === 0) {\r\n                    isMatch = degreeFilters[0] !== '';\r\n                } else if (j === 1) {\r\n                    isMatch = degreeFilters[1] !== '';\r\n                }\r\n                dispUnitJsx.push(<_ChordName key={dispUnitJsx.length} isMatch={isMatch}>{chordName}</_ChordName>);\r\n                tootTipStr += chordName;\r\n                totalBeat += chord.beatLen;\r\n                // console.log(totalBeat);\r\n            });\r\n            return (\r\n                <_ProgItem key={i} isActive={isActive} title={tootTipStr} onClick={() => {\r\n                    setFocusIndex(i);\r\n                }}>{dispUnitJsx}</_ProgItem>\r\n            )\r\n        });\r\n        return [unitList, jsx];\r\n    }, [props.beat, step, degreeFilters, focusIndex]);\r\n\r\n    /**\r\n     * 拍ステップ変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const stepChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setStep(Number(e.target.value) as ProgUtil.Step);\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n    /**\r\n     * ディグリーフィルター変更時の処理\r\n     * @param e イベント\r\n     */\r\n    const degreeChangeAction = (e: React.ChangeEvent<HTMLSelectElement>, index: number) => {\r\n        const value = e.target.value as ProgUtil.DegreeFilter;\r\n        degreeFilters[index] = value;\r\n        if (index === 0 && value === '') {\r\n            degreeFilters[1] = '';\r\n        }\r\n        setDegreeFilters(degreeFilters.slice());\r\n        setFocusIndex(-1);\r\n    }\r\n\r\n\r\n    /**\r\n     * リセットボタン押下時の処理\r\n     */\r\n    const resetAction = () => {\r\n        setStep(0);\r\n        setDegreeFilters(['', '']);\r\n        props.reset();\r\n    };\r\n\r\n    /**\r\n     * 追加ボタン押下時の処理\r\n     */\r\n    const insertAction = () => {\r\n        const progUnit = progUnitList[focusIndex];\r\n        props.insertProgUnit('Section', '', progUnit.chordList);\r\n        setFocusIndex(-1);\r\n        setStep(0);\r\n        setDegreeFilters(['', '']);\r\n\r\n        const chord = progUnit.chordList[progUnit.chordList.length - 1];\r\n        setLastChord(chord);\r\n    };\r\n\r\n    /**\r\n     * ユニットの最後のコードネームを取得\r\n     */\r\n    const getLastChordName = () => {\r\n        let name = '-';\r\n        if (lastChord != null) {\r\n            const rootName = TheoryUtil.getDegreeRoot(lastChord.root);\r\n            const symbol = TheoryUtil.getSymbolFromKey(lastChord.symbolKey) as TheoryUtil.SymbolParams;\r\n            name = rootName + symbol.name;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    return (\r\n        <_Frame isEnable={props.beat !== ''}>\r\n            {/* 拍ステップコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Step</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={80} value={step} onChange={(e) => {\r\n                    stepChangeAction(e);\r\n                }}>{stepOptionJsxList}</ProgStyle._Combobox>\r\n                <ProgStyle._TitleLabel>Last</ProgStyle._TitleLabel>\r\n                <ProgStyle._Label isEnable={true} width={80} >{getLastChordName()}</ProgStyle._Label>\r\n            </_Record>\r\n            {/* ディグリーネームフィルターコンボボックス */}\r\n            <_Record>\r\n                <ProgStyle._TitleLabel>Chord</ProgStyle._TitleLabel>\r\n                <ProgStyle._Combobox isEnable={true} width={80} value={degreeFilters[0]} onChange={(e) => {\r\n                    degreeChangeAction(e, 0);\r\n                }}>{degreeOptionJsxListArray[0]}</ProgStyle._Combobox>\r\n                <ProgStyle._Combobox isEnable={degreeFilters[0] !== ''} width={80} value={degreeFilters[1]} onChange={(e) => {\r\n                    degreeChangeAction(e, 1);\r\n                }}>{degreeOptionJsxListArray[1]}</ProgStyle._Combobox>\r\n            </_Record>\r\n            {/* 進行ユニットリスト */}\r\n            <_ListDiv><div>{progJsxList}</div></_ListDiv>\r\n            {/* 実行ボタン */}\r\n            <_ButtonDiv>\r\n                <_ExecutableButton isEnable={props.unitNum > 0} onClick={resetAction}>Reset</_ExecutableButton>\r\n                <_ExecutableButton isEnable={focusIndex !== -1} onClick={insertAction}>Add</_ExecutableButton>\r\n            </_ButtonDiv>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgCustomFrame;\r\n\r\nconst BUTTON_DIV_HEIGHT = 40;\r\nconst RECORD_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 条件レコード\r\n */\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${RECORD_HEIGHT}px;\r\n    /* background-color: #d5eae4; */\r\n    /* margin: 2px 0 0 0; */\r\n    text-align: left;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 進行リスト\r\n */\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${RECORD_HEIGHT * 2 + BUTTON_DIV_HEIGHT}px);\r\n    /* background-color: #babaa8; */\r\n    text-align: left;\r\n    & >div{\r\n        display: inline-block;\r\n        width: calc(100% - 8px);\r\n        height: calc(100% - 8px);\r\n        margin: 4px 0 0 4px;\r\n        background-color: #dde0e7;\r\n        box-sizing: border-box;\r\n        border: 1px solid #797979;\r\n        overflow-y: auto;\r\n        \r\n        &::-webkit-scrollbar {\r\n            width: 10px;\r\n            height: 10px;\r\n        }\r\n        &::-webkit-scrollbar-thumb {\r\n            border-radius: 5px;\r\n            background: #1959A8;\r\n        }\r\n        &::-webkit-scrollbar-track {\r\n            border-radius: 5px;\r\n            box-shadow: 0 0 4px #aaa inset;\r\n        }\r\n    }\r\n`;\r\n\r\nconst _ProgItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #00000010;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f6ff0062;\r\n    `}\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordName = styled.span<{\r\n    isMatch: boolean;\r\n}>`\r\n    color: #000f59;\r\n    ${props => !props.isMatch ? '' : css`\r\n        color: #a0000d;\r\n        /* background-color: #5eff0061; */\r\n    `}\r\n`;\r\nconst _Span = styled.span<{\r\n}>`\r\n    color: #0000005d;\r\n`;\r\n\r\n/**\r\n * ボタンエリア（画面汎用）\r\n */\r\nconst _ButtonDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BUTTON_DIV_HEIGHT}px;\r\n    /* background-color: #94babd; */\r\n    text-align: center;\r\n    & *{\r\n        margin: 5px 0 0 5px;\r\n    }\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #737d94;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #505971;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #8da0b0;\r\n    }\r\n`;","namespace DummyUtil {\r\n\r\n    export const SECTION_CATEGORY = ['Section', 'Intro', 'A', 'B', 'C', 'D', 'Outro'];\r\n    export const SECTION_NO = ['', '1', '2', '3', '4', '5', '6'];\r\n}\r\n\r\nexport default DummyUtil;","import { useContext, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { DetailChord, DetailFixed, DetailSection, FixedItem } from \"../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../utils/dummyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport progBackingUtil from \"./progBackingUtil\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgUtil from \"./progUtil\";\r\n\r\n/**\r\n * コード進行の出力画面のコンポーネント\r\n * @param props ブロックリスト\r\n * @returns コンポーネント\r\n */\r\nconst ProgOutputFrame = (props: {\r\n    outputUnits: ProgUtil.UnitProps[];\r\n    updateOutputUnits: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [\r\n        /** セクションカテゴリのoptionリスト */\r\n        secCatOptionJsxList,\r\n        /** セクション連番のoptionリスト */\r\n        secNoOptionJsxList,\r\n    ] = useMemo(() => {\r\n        const catList = DummyUtil.SECTION_CATEGORY.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        const noList = DummyUtil.SECTION_NO.map((val, i) => {\r\n            return (\r\n                <option key={i} value={val}>{val}</option>\r\n            );\r\n        });\r\n        return [catList, noList];\r\n    }, []);\r\n\r\n    const backingSampleJsxList = progBackingUtil.BACKING_SAMPLE_LIST.map((sample, i) => {\r\n        return (\r\n            <option key={i} value={i}>{sample.name}</option>\r\n        );\r\n    });\r\n\r\n    const blockJsxList = props.outputUnits.map((block, i) => {\r\n        const isFixed = block.type === 'fixed';\r\n        const getInner = () => {\r\n            if (isFixed) {\r\n                return <_FixedItem>{(block.detail as FixedItem)}</_FixedItem>;\r\n            } else {\r\n                const detail = block.detail as ProgUtil.SectionProps;\r\n                const chordList = detail.chordList;\r\n                const getChordListJsx = () => {\r\n                    return chordList.map((chord, j) => {\r\n                        const getBeatTipsJsx = () => {\r\n                            const jsxList: JSX.Element[] = [];\r\n                            for (let k = 0; k < chord.beatLen; k++) {\r\n                                jsxList.push(<_BeatTip key={k} />);\r\n                            }\r\n                            return jsxList;\r\n                        }\r\n                        let chordName = 'none';\r\n                        if (chord.root !== null) {\r\n                            const degreeRoot = TheoryUtil.getDegreeRoot({\r\n                                index: chord.root.index,\r\n                                isFlat: chord.root.isFlat\r\n                            });\r\n                            const symbolName = TheoryUtil.getSymbolFromKey(chord.symbolKey)?.name;\r\n                            chordName = degreeRoot + symbolName;\r\n                        }\r\n                        return (\r\n                            <_ChordItem key={j}>\r\n                                <_ChordNameLabel>{chordName}</_ChordNameLabel>\r\n                                <_ChordBeatDiv>{getBeatTipsJsx()}</_ChordBeatDiv>\r\n                            </_ChordItem>\r\n                        );\r\n                    });\r\n                }\r\n                return (<>\r\n                    <_Record>\r\n                        <_BackingLabel>Section</_BackingLabel>\r\n                        <_Combobox isEnable={true} width={180} value={detail.sectionName} onChange={(e) => {\r\n                            detail.sectionName = e.target.value;\r\n                            props.updateOutputUnits();\r\n                        }}>{secCatOptionJsxList}</_Combobox>\r\n                        <_Combobox isEnable={true} width={60} value={detail.sectionNo} onChange={(e) => {\r\n                            detail.sectionNo = e.target.value;\r\n                            props.updateOutputUnits();\r\n                        }}>{secNoOptionJsxList}</_Combobox>\r\n                    </_Record>\r\n                    <_Record>\r\n                        {/* <_SectionItem>{labelName}</_SectionItem> */}\r\n                        <_BackingLabel>Backing</_BackingLabel>\r\n                        <_Combobox\r\n                            isEnable={true} width={180}\r\n                            value={detail.backingNo}\r\n                            onChange={(e) => {\r\n                                detail.backingNo = Number(e.target.value);\r\n                                props.updateOutputUnits();\r\n                            }}>{backingSampleJsxList}</_Combobox>\r\n                    </_Record>\r\n                    <_ChordListDiv>{getChordListJsx()}</_ChordListDiv>\r\n                </>);\r\n            }\r\n        };\r\n        return (\r\n            <_Block key={i} isFixed={isFixed}>{getInner()}</_Block>\r\n        );\r\n    });\r\n    return (\r\n        <_Frame>\r\n            {blockJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgOutputFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Block = styled.div<{\r\n    isFixed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    background-color: #e8e4c5;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    /* border: 1px solid #7e7e7ee8; */\r\n    text-align: left;\r\n    ${props => !props.isFixed ? '' : css`\r\n        text-align: left;\r\n    `}\r\n`;\r\n\r\nconst _FixedItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 200px;\r\n    background-color: #b14272;\r\n    border-radius: 2px 15px 15px 2px;\r\n    color: white;\r\n    margin: 5px 0 5px 5px;\r\n`;\r\n\r\nconst _SectionItem = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 120px;\r\n    background-color: #4297b1;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 5px;\r\n`;\r\n\r\nconst RECORD_HEIGHT = 22;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${RECORD_HEIGHT}px;\r\n    /* background-color: #5b6e69; */\r\n    margin: 2px 0 0 0;\r\n    text-align: left;\r\n    /* padding: 5px 0 0 0; */\r\n`;\r\nconst _BackingLabel = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 90px;\r\n    background-color: #95b6d1;\r\n    color: white;\r\n    border-radius: 8px;\r\n    margin: 0 0 0 5px;\r\n`;\r\n\r\nexport const _Combobox = styled.select<{\r\n    isEnable: boolean;\r\n    width: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    font-weight: inherit;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    width: ${props => props.width}px;\r\n    margin: 0 0 0 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ChordListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 10px);\r\n    /* height: 100px; */\r\n    padding: 0 5px 5px 0;\r\n    background-color: #c2d6dd1e;\r\n    border: solid 2px #ab4343;\r\n    border-radius: 8px;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 5px 5px;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 45px;\r\n    background-color: #676767;\r\n    color: white;\r\n    border-radius: 2px;\r\n    margin: 5px 0 0 5px;\r\n`;\r\n\r\nconst _ChordNameLabel = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    padding: 0 20px;\r\n    /* background-color: #b38282; */\r\n    color: white;\r\n`;\r\n\r\nconst _ChordBeatDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    height: 25px;\r\n    min-width: 100%;\r\n    /* background-color: #c5adad; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _BeatTip = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    height: calc(100% - 12px);\r\n    margin: 6px 2px 0 2px;\r\n    background-color: #ddd796;\r\n    border-radius: 2px;\r\n`;\r\n","import { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport ProgUnitSearcher from \"./progUnitSearcher\";\r\n\r\n/**\r\n * コード進行のテンプレートを検索するユーティリティ\r\n */\r\nnamespace ProgTemplateUtil {\r\n\r\n\r\n    export type TemplateBean = {\r\n        name: string;\r\n        condition: TemplateCondition;\r\n        unitList: UnitItemBean[];\r\n    }\r\n\r\n    export type UnitItemBean = {\r\n        sectionName: string;\r\n        chordList: ProgUnitSearcher.ChordItemBean[];\r\n    }\r\n\r\n    export type TemplateCondition = {\r\n        beat: BeatSignature;\r\n    }\r\n\r\n    /**\r\n     * テンプレートを検索する\r\n     * @param condition \r\n     * @returns フィルターしたリスト\r\n     */\r\n    export const search = (condition: TemplateCondition) => {\r\n        console.log(JSON.stringify(condition));\r\n        return TEMPLATE_LIST.filter((template) => (\r\n            (template.condition.beat === condition.beat)\r\n        ));\r\n    }\r\n    \r\n    const TEMPLATE_LIST: TemplateBean[] = [\r\n        {\r\n            name: 'major minimum 01 [Ⅰ→Ⅳ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 1 4 5 @2 1 5 @4 6 4 5 1')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'major minimum 02 [Ⅰ→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 1 5 6 3 4 1 2 5 1 5 3n*7 6 2 3 4n*m 1')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'minor minimum 01 [Ⅵ→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 6 5 4 3n*m7 2n*m7 6 7n*7 3n*7 6')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'minor minimum 02 [Ⅱm→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 2n*m7 5 1 6 2n*m7 3n*7 6 6n*7 2n*m7 5 3n*m7 6 2n*m7 3n*7 6n*sus4 6')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'major short 01 [Ⅰ→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 1 5 6 3n*m7 4 1 2n*m7 5 1 5 6 3 4 1 2n*7 3n*7')\r\n                },\r\n                {\r\n                    sectionName: 'B',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 4 5 1n*sus4 1')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'major short 02 [Ⅳ→Ⅴ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 2n*m7 5 1 @2 5n*m 1n*7 @4 4n*maj7 5 @2 1 5 @4 6 2n*m7 5 6n*sus4 6n*')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'major short 03 [Ⅰ→Ⅵm～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 1 1 6 6 4 4 5 5 1 1 6 6 4 4 5 5')\r\n                },\r\n                {\r\n                    sectionName: 'B',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 4n*maj7 5 3n*m7 6 4 5 1n*sus4 1')\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'minor short 01 [Ⅵ→Ⅳ～]',\r\n            condition: { beat: '4/4' },\r\n            unitList: [\r\n                {\r\n                    sectionName: 'A',\r\n                    chordList: ProgUnitSearcher.parseChord('@2 6 4 5 1 6 4 5 1 6 4 5 1 2 3n*m7 4n*maj7 3n*7')\r\n                },\r\n                {\r\n                    sectionName: 'B',\r\n                    chordList: ProgUnitSearcher.parseChord('@4 4 5 3 6 2 3 6n*sus4 6')\r\n                }\r\n            ]\r\n        },\r\n    ];\r\n}\r\n\r\nexport default ProgTemplateUtil;","import { useContext, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature } from \"../../../../redux/store/score/scoreData\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgTemplateUtil from \"./progTemplateUtil\";\r\nimport ProgUnitSearcher from \"./progUnitSearcher\";\r\n\r\nconst ProgTemplateFrame = (props: {\r\n    /** 拍子フィルターの値 */\r\n    beat: '' | BeatSignature;\r\n    /** 出力リストに進行ユニットを挿入するコールバック関数 */\r\n    applyProgTemplate: (template: ProgTemplateUtil.TemplateBean) => void;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n\r\n    const templateList = ProgTemplateUtil.search({\r\n        beat: props.beat as BeatSignature\r\n    });\r\n\r\n    const templateJsxList = useMemo(() => {\r\n        return templateList.map((template, i) => {\r\n            return (\r\n                <_Item key={i}\r\n                    isFocus={i === focusIndex}\r\n                    onClick={() => {\r\n                        setFocusIndex(i);\r\n                        props.applyProgTemplate(templateList[i]);\r\n                    }}\r\n                >{template.name}</_Item>\r\n            );\r\n        });\r\n    }, [templateList, focusIndex]);\r\n\r\n    return (\r\n        <_Frame>\r\n            {templateJsxList}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ProgTemplateFrame;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #00000010;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #f6ff0062;\r\n    `}\r\n    text-align: left;\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 5px;\r\n    color: #eb0000;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { BeatSignature, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ProgCustomFrame from \"./progCustomFrame\";\r\nimport ProgOutputFrame from \"./progOutputFrame\";\r\nimport ProgUnitSearcher from \"./progUnitSearcher\";\r\nimport ProgStyle from \"./progStyle\";\r\nimport ProgTemplateFrame from \"./progTemplateFrame\";\r\nimport ProgUtil from \"./progUtil\";\r\nimport ProgTemplateUtil from \"./progTemplateUtil\";\r\n\r\n/**\r\n * コード進行を構成して譜面のベースを作成するダイアログ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ChordProgDialog = (props: {\r\n    setScoreData: (scoreData: ScoreData) => void;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** 生成モード（ブランク、カスタム、テンプレート） */\r\n    const [buildMode, setBuildType] = useState<ProgUtil.BuildType>('blank');\r\n    /** 出力する進行ユニットのリスト */\r\n    const [outputUnits, setOutputUnits] = useState(ProgUtil.getBlankBlockList());\r\n    /** 拍子フィルター */\r\n    const [beatFilter, setBeatFilter] = useState<'' | BeatSignature>('');\r\n\r\n    /**\r\n     * Closeボタン押下時の処理\r\n     */\r\n    const closeAction = () => {\r\n        store.systemState.dialog = null;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    /**\r\n     * Startボタン押下時の処理\r\n     */\r\n    const startAction = () => {\r\n        const scoreData = ProgUtil.buildScoreData(outputUnits);\r\n        props.setScoreData(scoreData);\r\n        closeAction();\r\n        // Editタブに遷移\r\n        store.systemState.scoreTabIndex = 1;\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    const getSwitchContJsx = () => {\r\n        switch (buildMode) {\r\n            case 'blank': return <></>;\r\n            case 'custom': return <ProgCustomFrame\r\n                beat={beatFilter}\r\n                unitNum={outputUnits.length - 2}\r\n                reset={() => { setOutputUnits(ProgUtil.getInitialBlockList()) }}\r\n                insertProgUnit={insertProgUnit}\r\n            />;\r\n            case 'template': return <ProgTemplateFrame\r\n                beat={beatFilter}\r\n                applyProgTemplate={applyProgTemplate}\r\n            />;\r\n        }\r\n    };\r\n\r\n    /** 拍フィルターのオプションリストJSX */\r\n    const beatOptionJsxList = useMemo(() => {\r\n        if (buildMode === 'blank') {\r\n            return [(\r\n                <option key={0} value={''}></option>\r\n            )];\r\n        } else {\r\n            return [''].concat(TheoryUtil.BEAT_DEF_LIST).map((val, i) => {\r\n                return (\r\n                    <option key={i} value={val}>{val}</option>\r\n                );\r\n            });\r\n        }\r\n    }, [buildMode]);\r\n\r\n    const beatChangeAction = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setBeatFilter(e.target.value as BeatSignature);\r\n    }\r\n\r\n    /** リストから選択中のコード進行ブロックを出力に追加する */\r\n    const insertProgUnit = (sectionName: string, sectionNo: string, chordList: ProgUnitSearcher.ChordItemBean[]) => {\r\n        const detail: ProgUtil.SectionProps = {\r\n            sectionName, sectionNo,\r\n            chordList: chordList.map((chord) => {\r\n                const chordDetail = ProgUtil.getDefaultChord();\r\n                chordDetail.beatLen = chord.beatLen;\r\n                chordDetail.symbolKey = chord.symbolKey;\r\n                chordDetail.root = chord.root;\r\n                return chordDetail;\r\n            }),\r\n            backingNo: 1\r\n        }\r\n        const block: ProgUtil.UnitProps = { type: 'section', detail }\r\n        outputUnits.splice(outputUnits.length - 1, 0, block);\r\n        setOutputUnits(outputUnits.slice());\r\n    }\r\n\r\n    const applyProgTemplate = (templateBean: ProgTemplateUtil.TemplateBean) => {\r\n        outputUnits.splice(0);\r\n        ProgUtil.getInitialBlockList().forEach(progUnit => {\r\n            outputUnits.push(progUnit);\r\n        });\r\n        templateBean.unitList.forEach((unit) => {\r\n            insertProgUnit(unit.sectionName, '', unit.chordList);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 切り替え式ボタンのJSXを返すクロージャ\r\n     * @param labelName ラベル名\r\n     * @param clickEvent 押下時の処理\r\n     * @param isActive 選択中かどうか\r\n     * @returns JSX\r\n     */\r\n    const createSwitchableButton = (\r\n        labelName: string,\r\n        isActive: boolean,\r\n        clickEvent: () => void\r\n    ) => {\r\n        return (\r\n            <_SwitchableButton isActive={isActive}\r\n                onClick={clickEvent}\r\n            >{labelName}</_SwitchableButton>\r\n        );\r\n    }\r\n\r\n    const beatComboboxEnable = outputUnits.length <= 2;\r\n\r\n    // Blankモードの時は空白を表示\r\n    const distBeatFilter = buildMode === 'blank' ? '' : beatFilter;\r\n    return (\r\n        <_Frame >\r\n            <_Header>\r\n                {createSwitchableButton('Blank', buildMode === 'blank', () => {\r\n                    setOutputUnits(ProgUtil.getBlankBlockList());\r\n                    setBuildType('blank');\r\n                })}\r\n                {createSwitchableButton('Custom', buildMode === 'custom', () => {\r\n                    setOutputUnits(ProgUtil.getInitialBlockList());\r\n                    setBuildType('custom');\r\n                })}\r\n                {createSwitchableButton('Template', buildMode === 'template', () => {\r\n                    setOutputUnits(ProgUtil.getInitialBlockList());\r\n                    setBuildType('template');\r\n                })}\r\n            </_Header>\r\n            <_MainDiv>\r\n                <_LeftDiv isEnable={buildMode !== 'blank'}>\r\n                    <_BeatFormDiv>\r\n                        <ProgStyle._TitleLabel>Beat</ProgStyle._TitleLabel>\r\n                        <ProgStyle._Combobox value={distBeatFilter} isEnable={beatComboboxEnable} width={150}\r\n                            onChange={(e) => {\r\n                                beatChangeAction(e);\r\n                            }}>{beatOptionJsxList}</ProgStyle._Combobox>\r\n                    </_BeatFormDiv>\r\n                    {/* モードによって切り替えるコンテンツ（カスタムorテンプレート） */}\r\n                    <_SwitchDiv>{getSwitchContJsx()}</_SwitchDiv>\r\n                </_LeftDiv>\r\n                <_RightDiv>\r\n                    <ProgOutputFrame\r\n                        outputUnits={outputUnits}\r\n                        updateOutputUnits={() => { setOutputUnits(outputUnits.slice()) }}\r\n                    />\r\n                </_RightDiv>\r\n            </_MainDiv>\r\n            <_Footer>\r\n                {/* ダイアログを閉じる */}\r\n                <_ExecutableButton isEnable={true} onClick={closeAction}>Cancel</_ExecutableButton>\r\n                {/* 譜面を生成 */}\r\n                <_ExecutableButton isEnable={outputUnits.length >= 3} onClick={startAction}>Start</_ExecutableButton>\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default ChordProgDialog;\r\n\r\nconst HEADER_HEIGHT = 50;\r\nconst FOOTER_HEIGHT = 50;\r\nconst BEAT_HEIGHT = 40;\r\n\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 50px;\r\n    width: 1024px;\r\n    height: 768px;\r\n    z-index: 11;\r\n    /* top: 100px;\r\n    left: 100px; */\r\n    /* width: calc(100% - 200px);\r\n    height: calc(100% - 200px); */\r\n    background-color: #929292;\r\n    border: solid 2px #404250;\r\n    border-radius: 8px;\r\n    /* border: 1px solid #dadada; */\r\n`;\r\n\r\n/**\r\n * ヘッダー\r\n */\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #7d8d97;\r\n    text-align: center;\r\n`;\r\n\r\n/**\r\n * メインコンポーネント\r\n */\r\nconst _MainDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_HEIGHT + FOOTER_HEIGHT}px);\r\n    /* background-color: #7d8d97; */\r\n    text-align: left;\r\n`;\r\n\r\n/**\r\n * 左側のコンポーネント\r\n */\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n   display: inline-block;\r\n   vertical-align: top;\r\n   width: calc(50% - 6px);\r\n   height: calc(100% - 8px);\r\n   background-color: #bdced8;\r\n   text-align: left;\r\n   margin: 4px 2px 4px 4px;\r\n   ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\n/**\r\n * 拍選択\r\n */\r\nconst _BeatFormDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${BEAT_HEIGHT}px;\r\n    /* background-color: #b4c7ba; */\r\n    padding: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _BeatSelect = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    text-align: left;\r\n    color: black;\r\n    vertical-align: top;\r\n    line-height: 24px;\r\n    width: 210px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 5px;\r\n`;\r\n\r\n\r\n/**\r\n * テンプレートとカスタムの切り替えコンテンツ表示\r\n */\r\nconst _SwitchDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    background-color: #cedbd7;\r\n    border: 1px solid #696969;\r\n    box-sizing: border-box;\r\n    margin: 5px 0 0 5px;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - ${BEAT_HEIGHT + 10}px);\r\n`;\r\n\r\n/**\r\n * 右側のコンポーネント\r\n */\r\nconst _RightDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    width: calc(50% - 6px);\r\n    height: calc(100% - 8px);\r\n    background-color: #bdced8;\r\n    text-align: left;\r\n    margin: 4px 4px 4px 2px;\r\n`;\r\n\r\n/**\r\n * フッター\r\n */\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_HEIGHT}px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n    & *{\r\n        margin: 10px 5px 0 0;\r\n    }\r\n`;\r\n\r\n/**\r\n * スイッチボタン\r\n */\r\nconst _SwitchableButton = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #5083c5;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c5b950;\r\n    `};\r\n    width: 200px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #375176;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #77a7e6;\r\n    ${props => !props.isActive ? '' : css`\r\n            background-color: #c5b950;\r\n    `};\r\n}\r\n`;\r\n\r\n/**\r\n * 実行ボタン\r\n */\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 130px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    border: solid 1px #2d5625;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ExecutableButton } from \"../../../base/components/button/executableButton\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport { ChordBacking, DetailChord, DetailFixed, DetailInit, DetailSection, ScoreData } from \"../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../utils/cacheUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ChordProgDialog from \"./chordProg/chordProgDialog\";\r\nimport ScoreBuilder from \"./scoreBuilder\";\r\n\r\ntype ShareType = '' | 'url' | 'free' | 'dl';\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [file, setFile] = useState<null | File>(null);\r\n\r\n    const fileHandle = store.scoreState.fileHandle;\r\n    const scoreData = store.scoreData;\r\n    const tabIndex = store.systemState.scoreTabIndex;\r\n\r\n    const loginProps = store.userEnv.login;\r\n\r\n    const [cloudScoreList, setCloudScoreList] = useState<null | {\r\n        seq: number, name: string, hash: string, url: string, share: string\r\n    }[]>(null);\r\n    const [focusIndex, setFocusIndex] = useState(-1);\r\n    const [cloudScoreName, setCloudScoreName] = useState('-');\r\n    const [cloudScoreShare, setCloudScoreShare] = useState<ShareType>('');\r\n\r\n    useEffect(() => {\r\n        loadCloudScore();\r\n    }, [loginProps]);\r\n\r\n    const loadCloudScore = () => {\r\n        if (loginProps != undefined) {\r\n            DataUtil.findUserScoreList(loginProps.seq).then((resList) => {\r\n                setCloudScoreList(resList.map((res) => {\r\n                    const seq = res['seq'];\r\n                    const hash = DataUtil.getHashedFromScoreSeq(seq);\r\n                    const url = DataUtil.getPreviewURL(seq);\r\n                    return { seq, name: res['dispnam'], hash, url, share: res['share'] };\r\n                }));\r\n                console.log('load');\r\n            });\r\n        }\r\n    }\r\n\r\n    const [fileInfo, scoreInfo]: [{\r\n        name: string;\r\n        size: string;\r\n        modified: string;\r\n    }, {\r\n        key: string;\r\n        tempo: string;\r\n        rate: string;\r\n        section: string;\r\n        chord: string;\r\n        bar: string;\r\n        time: string;\r\n        notes: string;\r\n    }] = useMemo(() => {\r\n        let name = '-';\r\n        let size = '-';\r\n        let modified = '-';\r\n        let key = '-';\r\n        let tempo = '-';\r\n        let rate = '-';\r\n        let section = '-';\r\n        let chord = '-';\r\n        let bar = '-';\r\n        let time = '-';\r\n        let notes = '-';\r\n        if (tabIndex === 0) {\r\n            if (file != null) {\r\n                name = file.name;\r\n                size = `${file.size.toString()} byte`;\r\n                modified = DataUtil.getStringFromDate(new Date(file.lastModified));\r\n            }\r\n            if (scoreData.chordList.length > 0) {\r\n                const init = scoreData.chordList[0].detail as DetailInit;\r\n                key = `${TheoryUtil.KEY12_MAJOR_SCALE_LIST[init.keyIndex]} ${init.scale}`;\r\n                tempo = init.bpm.toString();\r\n                rate = init.beatSignature;\r\n                let sectionNum = 0;\r\n                let chordNum = 0;\r\n                scoreData.chordList.forEach(chord => {\r\n                    switch (chord.type) {\r\n                        case 'section': sectionNum++; break;\r\n                        case 'chord': chordNum++; break;\r\n                    }\r\n                });\r\n                section = sectionNum.toString();\r\n                chord = chordNum.toString();\r\n\r\n                const cacheList = store.scoreState.elementCacheList;\r\n                if (cacheList.length > 0) {\r\n                    const last = cacheList[cacheList.length - 1];\r\n                    time = `${last.pastSecond / 1000}s`;\r\n                    bar = `${last.bar} (${last.surplusBeat})`;\r\n                }\r\n                notes = scoreData.notesList.length.toString();\r\n            }\r\n        }\r\n        return [{\r\n            name, size, modified\r\n        }, {\r\n            key, tempo, rate, section, chord, bar, time, notes\r\n        }]\r\n    }, [tabIndex, scoreData, file]);\r\n\r\n    useEffect(() => {\r\n        if (tabIndex === 0 && fileHandle != null) {\r\n            fileHandle.getFile().then(file => {\r\n                setFile(file);\r\n            });\r\n        }\r\n    }, [tabIndex]);\r\n\r\n    const setScoreData = ((data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    });\r\n\r\n    /**\r\n     * ラベルアイテムを生成する\r\n     * @param labelName ラベル名\r\n     * @param labelValue 値\r\n     * @returns JSX\r\n     */\r\n    const createLabelRecord = (labelName: string, labelValue: string) => {\r\n        return (\r\n            <_Recored>\r\n                <_ItemnLabel>{labelName}</_ItemnLabel>\r\n                <_ItemnValue>{labelValue}</_ItemnValue>\r\n            </_Recored>\r\n        );\r\n    }\r\n    /**\r\n     * テキストアイテムを生成する\r\n     * @param labelName ラベル名\r\n     * @param textValue 値\r\n     * @returns JSX\r\n     */\r\n    const createTextRecord = (labelName: string, textValue: string, changeAction: (e: React.ChangeEvent<HTMLInputElement>) => void) => {\r\n        return (\r\n            <_Recored>\r\n                <_ItemnLabel>{labelName}</_ItemnLabel>\r\n                <_ItemnInput\r\n                    type=\"text\" value={textValue}\r\n                    isEnable={focusIndex !== -1}\r\n                    onChange={changeAction}\r\n                />\r\n            </_Recored>\r\n        );\r\n    }\r\n\r\n    const searchLocalFileAction = () => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            // console.log(fileContents);\r\n            store.scoreState.fileHandle = fileHandle;\r\n            setFile(file);\r\n            const text = DataUtil.unZip(fileContents);\r\n            // const text = fileContents;\r\n            console.log(text);\r\n            setScoreData(JSON.parse(text));\r\n        })();\r\n    }\r\n\r\n    const fileDisconnectAction = () => {\r\n        store.scoreState.fileHandle = null;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // キャッシュの更新\r\n        store.scoreData = scoreData;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n        setFile(null);\r\n    };\r\n\r\n    const isDataConnect = fileHandle != null;\r\n\r\n\r\n    const cloudScoreListJsx = loginProps == undefined ? <></> : cloudScoreList == null ? (\r\n        <_Message>Now loading your cloud score...</_Message>\r\n    ) : cloudScoreList.map((score, i) => {\r\n\r\n        return <_CloudItem key={i} isActive={i === focusIndex} onClick={() => {\r\n            setFocusIndex(i);\r\n            const cur = cloudScoreList[i];\r\n            if (cur != null) {\r\n                setCloudScoreName(cur.name);\r\n            }\r\n        }}><_CName>{score.name}</_CName><_CHash> [{score.hash}]</_CHash></_CloudItem>\r\n    });\r\n\r\n\r\n    const uploadActioon = () => {\r\n        setCloudScoreList(null);\r\n        if (loginProps != undefined && cloudScoreList != null) {\r\n            const newScoreName = `new [${loginProps.id}] score`;\r\n            DataUtil.sendQueryRequestToAPI('update', `INSERT INTO scoretbl(user_seq, dispnam, data)\r\n                VALUES(${loginProps.seq}, '${newScoreName}', '${DataUtil.gZip(JSON.stringify(scoreData))}')\r\n            `).then(() => {\r\n                setFocusIndex(cloudScoreList.length);\r\n                setCloudScoreName(newScoreName);\r\n                loadCloudScore();\r\n            })\r\n        }\r\n    }\r\n\r\n    const overwriteActioon = () => {\r\n        setCloudScoreList(null);\r\n        if (curCloudScore != null) {\r\n            DataUtil.sendQueryRequestToAPI('update', `\r\n                UPDATE scoretbl SET\r\n                dispnam = '${cloudScoreName}',\r\n                share = '${cloudScoreShare}',\r\n                lastmod = datetime('now', 'localtime'),\r\n                data = '${DataUtil.gZip(JSON.stringify(scoreData))}'\r\n                WHERE seq = ${curCloudScore.seq}\r\n            `).then(() => {\r\n                loadCloudScore();\r\n            })\r\n        }\r\n    }\r\n    const deleteActioon = () => {\r\n        setCloudScoreList(null);\r\n        if (curCloudScore != null) {\r\n            DataUtil.sendQueryRequestToAPI('update', `DELETE FROM scoretbl WHERE seq = ${curCloudScore.seq}\r\n            `).then(() => {\r\n                setFocusIndex(-1);\r\n                loadCloudScore();\r\n            })\r\n        }\r\n    }\r\n\r\n    const downloadAction = () => {\r\n        if (curCloudScore != undefined) {\r\n            DataUtil.findScore(curCloudScore.seq).then((resList) => {\r\n                if (resList.length > 0) {\r\n                    const source = resList[0]['data'];\r\n                    const text = DataUtil.unZip(source);\r\n                    setScoreData(JSON.parse(text));\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const curCloudScore = cloudScoreList == null ? null : cloudScoreList[focusIndex];\r\n    const uploadEnable = scoreData.chordList.length > 0 && focusIndex === -1;\r\n    const isExistEditingData = scoreData.chordList.length > 0;\r\n\r\n    const isSelectedScore = focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            <_ButtonsDiv>\r\n                <_Button isEnable={!isDataConnect && !isExistEditingData} onClick={() => {\r\n                    store.systemState.dialog = <ChordProgDialog setScoreData={setScoreData} />;\r\n                    dispatcher.system.setState(store.systemState);\r\n                }}>new score</_Button>\r\n            </_ButtonsDiv>\r\n            <_MainDiv>\r\n                <_Left>\r\n                    <_CloudDiv isEnable={true}>\r\n\r\n                        <_ButtonsDiv>\r\n                            <_Button isEnable={loginProps != undefined && uploadEnable} onClick={uploadActioon}>upload</_Button>\r\n                            <_Button isEnable={loginProps != undefined && isSelectedScore} onClick={() => {\r\n                                setFocusIndex(-1);\r\n                            }}>release</_Button>\r\n                        </_ButtonsDiv>\r\n                        <_ListFrame isEnable={loginProps != undefined}>\r\n                            {cloudScoreListJsx}\r\n                        </_ListFrame>\r\n                        <_ButtonsDiv>\r\n                            <_Button isEnable={loginProps != undefined && isSelectedScore && isExistEditingData} onClick={overwriteActioon}>overwrite</_Button>\r\n                            <_Button isEnable={loginProps != undefined && isSelectedScore && !isExistEditingData} onClick={downloadAction}>download</_Button>\r\n                            <_Button isEnable={loginProps != undefined && isSelectedScore} onClick={deleteActioon}>delete</_Button>\r\n                        </_ButtonsDiv>\r\n                    </_CloudDiv>\r\n                </_Left>\r\n                <_Right>\r\n                    {/* <_Source value={source} onChange={e => setSource(e.target.value)} /> */}\r\n\r\n                    <_ButtonsDiv>\r\n                        <_Button isEnable={!isDataConnect && !isExistEditingData} onClick={searchLocalFileAction}>load file</_Button>\r\n                        <_Button isEnable={isDataConnect} onClick={fileDisconnectAction}>disconnect</_Button>\r\n                        <_Button isEnable={isExistEditingData} onClick={() => {\r\n                            dispatcher.score.clearCache();\r\n                            if (isDataConnect) {\r\n                                fileDisconnectAction();\r\n                            }\r\n                            dispatcher.score.setScoreData({ notesList: [], chordList: [] });\r\n                        }}>clear</_Button>\r\n                    </_ButtonsDiv>\r\n                    <_DataInfoDiv isEnable={isDataConnect}>\r\n                        <_TitleLabel>Local</_TitleLabel>\r\n                        {createLabelRecord('file', fileInfo.name)}\r\n                        {createLabelRecord('size', fileInfo.size)}\r\n                        {createLabelRecord('last', fileInfo.modified)}\r\n                        {/* {createLabelRecord('size', fileInfo.size)}\r\n                        {createLabelRecord('modified', fileInfo.modified)} */}\r\n                    </_DataInfoDiv>\r\n                    <_DataInfoDiv isEnable={focusIndex !== -1}>\r\n                        <_TitleLabel>Cloud</_TitleLabel>\r\n                        {createTextRecord('name', curCloudScore == null ? '-' : cloudScoreName, (e) => {\r\n                            setCloudScoreName(e.target.value);\r\n                        })}\r\n                        <_Recored>\r\n                            <_ItemnLabel>url</_ItemnLabel>\r\n                            <_ItemnURL onContextMenu={() => {\r\n                                navigator.clipboard.writeText(curCloudScore == null ? '-' : curCloudScore.url).then(() => {\r\n                                    alert('Copied clipboad!');\r\n                                });\r\n                            }}>{curCloudScore == null ? '-' : curCloudScore.url}</_ItemnURL>\r\n                        </_Recored>\r\n                        {/* {createLabelRecord('url', curCloudScore == null ? '-' : curCloudScore.url)} */}\r\n                        <_Recored>\r\n                            <_ItemnLabel>share</_ItemnLabel>\r\n                            <_ItemnCombobox\r\n                                isEnable={focusIndex !== -1}\r\n                                value={cloudScoreShare}\r\n                                onChange={(e) => {\r\n                                    setCloudScoreShare(e.target.value as ShareType);\r\n                                }}\r\n                            >\r\n                                <option value={'url'}>URL only</option>\r\n                                <option value={'free'}>Home publish</option>\r\n                                <option value={'dl'}>Download OK</option>\r\n                            </_ItemnCombobox>\r\n                        </_Recored>\r\n                    </_DataInfoDiv>\r\n                    <_ScoreInfoDiv isEnable={isExistEditingData}>\r\n                        <_TitleLabel>SCORE</_TitleLabel>\r\n                        {createLabelRecord('key', scoreInfo.key)}\r\n                        {createLabelRecord('tempo', scoreInfo.tempo)}\r\n                        {createLabelRecord('rate', scoreInfo.rate)}\r\n                        {createLabelRecord('section', scoreInfo.section)}\r\n                        {createLabelRecord('chord', scoreInfo.chord)}\r\n                        {createLabelRecord('bar', scoreInfo.bar)}\r\n                        {createLabelRecord('time', scoreInfo.time)}\r\n                        {createLabelRecord('notes', scoreInfo.notes)}\r\n                    </_ScoreInfoDiv>\r\n                </_Right>\r\n            </_MainDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7e7e7e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #8a6b6b; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #969696; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Link = styled.div`\r\n    \r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    height: 50px;\r\n    margin: 20px 25px;\r\n    border: 2px solid #cacaca;\r\n    /* background: linear-gradient(to bottom, #585858, #a7a7a7, #585858); */\r\n    background-color: #000;\r\n    color: #ccc;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    border-radius: 6px;\r\n\r\n    &:hover {\r\n        background-color: #616161;\r\n    }\r\n`;\r\n\r\n// const _Source = styled.textarea`\r\n//     display: inline-block;\r\n//     width: calc(100% - 8px);\r\n//     margin: 4px 0 0 4px;\r\n//     height: calc(100% - 44px);\r\n//     /* background-color: #7e7e7e; */\r\n//     text-align: left;\r\n//     font-size: 20px;\r\n//     resize: none;\r\n//     box-sizing: border-box;\r\n//     color: #060053;\r\n// `;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    height: calc(100% - 48px);\r\n    background-color: #ffffff;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst DATA_INFO_HEIGHT = 180;\r\n\r\nconst _DataInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${DATA_INFO_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #9da5af;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _ScoreInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${DATA_INFO_HEIGHT * 2 + 40 + 20}px);\r\n    margin: 0 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _CloudDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n`;\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\nconst _ItemnURL = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 18px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #01f52a;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #1f1f1f;\r\n    border: solid 1px #000;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;\r\n\r\nconst _ItemnCombobox = styled.select<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #1f1f1f;\r\n    border: solid 1px #000;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\n\r\nconst _ListFrame = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 92px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    color: #d60000;\r\n    font-size: 24px;\r\n    /* font-weight: 600; */\r\n    /* background-color: white; */\r\n    margin: 0 0 0 4px;\r\n`;\r\n\r\nconst _CloudItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    border-bottom: 1px solid #888888;\r\n    /* background-color: white; */\r\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, transparent, #fdff8484);\r\n    `}\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    padding-left: 4px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n        ${props => !props.isActive ? '' : css`\r\n            background: linear-gradient(to bottom, transparent, #feffcd99);\r\n        `}\r\n    }\r\n`;\r\nconst _CName = styled.span` color: #00532c; `;\r\nconst _CHash = styled.span` color: #b9000042; `;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst SymbolEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n\r\n        const curSymbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n        const baseSymbol = curSymbol.base == null ? null : TheoryUtil.getSymbolFromKey(curSymbol.base);\r\n\r\n        const curLine: TheoryUtil.SymbolKey[] = [];\r\n        const parentLine: TheoryUtil.SymbolKey[] = [];\r\n        const childrenLine: TheoryUtil.SymbolKey[] = [];\r\n        let index = 0;\r\n\r\n        if (baseSymbol == null) {\r\n            curLine.push('major');\r\n            curLine.push('minor');\r\n            curLine.push('suspend4th');\r\n            curLine.push('diminish');\r\n            curLine.push('augument');\r\n            curLine.push('minor-minus5');\r\n        } else {\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (symbol.key === baseSymbol.key) {\r\n                    parentLine.push(symbol.key);\r\n                }\r\n            });\r\n            const derives = TheoryUtil.getSymbolDerives(baseSymbol.key);\r\n            TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n                if (derives.includes(symbol.key)) {\r\n                    curLine.push(symbol.key);\r\n                }\r\n            });\r\n        }\r\n        curLine.forEach((symbol, i)=> {\r\n            if(symbol === detail.symbolKey) {\r\n                index = i;\r\n            }\r\n        });\r\n        const derives = TheoryUtil.getSymbolDerives(curSymbol.key);\r\n        TheoryUtil.SYMBOL_LIST.forEach((symbol) => {\r\n            if (derives.includes(symbol.key)) {\r\n                childrenLine.push(symbol.key);\r\n            }\r\n        });\r\n        state.symbolMng = {\r\n            index,\r\n            curLine,\r\n            parentLine,\r\n            childrenLine\r\n        };\r\n        dispatcher.score.setScoreState(state);\r\n    }, [detail.symbolKey]);\r\n\r\n    // const bodyRef = state.elementCacheList[state.focusIndex].reffers.wrap as HTMLDivElement;\r\n\r\n    // const [posX, posY]: [number, number] = useMemo(() => {\r\n    //     return [bodyRef.clientLeft, bodyRef.clientTop + bodyRef.clientHeight];\r\n    // }, []);\r\n    // const posX = bodyRef.getBoundingClientRect().left;\r\n    // const posY = bodyRef.getBoundingClientRect().bottom;\r\n    // alert(`${posX}, ${posY}`);\r\n\r\n    const symbolMng = state.symbolMng as SymbolDiagram;\r\n\r\n    const parentJsx: JSX.Element[] = [];\r\n    const curJsx: JSX.Element[] = [];\r\n    const childrenJsx: JSX.Element[] = [];\r\n\r\n    if (symbolMng != null) {\r\n        parentJsx.push(<_Header key={parentJsx.length}>Base</_Header>);\r\n        symbolMng.parentLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            parentJsx.push(\r\n                <_Item key={parentJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        curJsx.push(<_Header key={curJsx.length}>Current</_Header>);\r\n        symbolMng.curLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            curJsx.push(\r\n                <_Item key={curJsx.length}\r\n                    isActive={symbolMng.index === i}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n        childrenJsx.push(<_Header key={childrenJsx.length}>Derives</_Header>);\r\n        symbolMng.childrenLine.forEach((item, i) => {\r\n            const symbol = TheoryUtil.getSymbolFromKey(item);\r\n            childrenJsx.push(\r\n                <_Item key={childrenJsx.length}\r\n                    isActive={false}\r\n                >[{symbol?.name}]</_Item>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Row>{parentJsx}</_Row>\r\n            <_Row>{curJsx}</_Row>\r\n            <_Row>{childrenJsx}</_Row>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SymbolEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    height: 160px;\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    height: 100%;\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH, FIRST_CHORD_INDEX } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\nimport { DetailChord } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcChord = (props: {\r\n    index: number;\r\n    detail: DetailChord;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const element = chordList[props.index];\r\n    const cache = state.elementCacheList[props.index];\r\n\r\n    const symbolName = TheoryUtil.getSymbolFromKey(props.detail.symbolKey)?.name;\r\n\r\n    let degreeRoot: null | string = null;\r\n    let degreeOn: null | string = null;\r\n    let chordRoot: null | string = null;\r\n    let chordOn: null | string = null;\r\n    if (props.detail.root != null) {\r\n        degreeRoot = TheoryUtil.getDegreeRoot({\r\n            index: props.detail.root.index,\r\n            isFlat: props.detail.root.isFlat\r\n        });\r\n        chordRoot = TheoryUtil.getRootName({\r\n            index: props.detail.root.index,\r\n            isFlat: TheoryUtil.isFlat(cache.keyIndex, cache.scale)\r\n        }, cache.keyIndex);\r\n\r\n        if (props.detail.on != null) {\r\n            degreeOn = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            });\r\n            chordOn = TheoryUtil.getRootName({\r\n                index: props.detail.on.index,\r\n                isFlat: props.detail.on.isFlat\r\n            }, cache.keyIndex);\r\n        }\r\n    }\r\n\r\n    let bar = -1;\r\n    const prevCache = state.elementCacheList[props.index - 1];\r\n    // 先頭のコード要素である、もしくは小節が繰り上がった際に表示\r\n    // 実際の小節は1から数える\r\n    if (props.index === FIRST_CHORD_INDEX || prevCache.bar !== cache.bar) {\r\n        // 見た目上１から数えるため\r\n        bar = cache.bar + 1;\r\n    }\r\n    // 小節変更タイミングで、余りの拍がある（頭でない）場合エラー\r\n    const isError = bar !== -1 && cache.surplusBeat !== 0;\r\n\r\n    let chordName = '-';\r\n    if (chordRoot != null) {\r\n        chordName = `${chordRoot}${symbolName}`;\r\n        if(chordOn != null) {\r\n            chordName += `/${chordOn}`;\r\n        }\r\n    }\r\n\r\n    let minuteStr = '';\r\n    if(cache.minute !== 0) {\r\n        switch(cache.minute) {\r\n            case 1: minuteStr = '→/16'; break;\r\n            case 2: minuteStr = '→/8'; break;\r\n            case -1: minuteStr = '←/16'; break;\r\n            case -2: minuteStr = '←/8'; break;\r\n        }\r\n    }\r\n    return (\r\n        <_Detail>\r\n            <_Chord>{chordName}</_Chord>\r\n            {/* <_Backing>\r\n            </_Backing> */}\r\n            <_Pos>\r\n                <_Section\r\n                    isError={isError}\r\n                >\r\n                    {bar === -1 ? <>&nbsp;</> : bar}\r\n                </_Section>\r\n                <_Beat>\r\n                    <span>\r\n                        {cache.surplusBeat === 0 ? <>&nbsp;</> : cache.surplusBeat}\r\n                    </span>\r\n                    {cache.minute === 0 ? '' : minuteStr}\r\n                </_Beat>\r\n                <_PastSecond>\r\n                    {Math.round(cache.pastSecond / 100) / 10}s\r\n                </_PastSecond>\r\n            </_Pos>\r\n        </_Detail>\r\n    );\r\n}\r\n\r\nexport default CalcChord;\r\n\r\n\r\n\r\nconst _Section = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #c72929;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ee5959;\r\n        color: #ffffff;\r\n        /* border: 2px solid #c72929; */\r\n        border-radius: 2px;\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\nconst _PastSecond = styled.div`\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #000000a0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Beat = styled.div``;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    // background-color: #00ff2a11;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    // width: calc(100% - ${ELEMENT_POS_INFO_WIDTH + 10}px);\r\n    width: 100%;\r\n    height: 18px;\r\n    // background-color: #ffc4001c;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst _Backing = styled.div`\r\n    display: inline-block;\r\n    width: 56px;\r\n    height: 30px;\r\n    background-color: #1100ff1c;\r\n`;\r\n\r\nconst _Pos = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 5;\r\n    width: ${ELEMENT_POS_INFO_WIDTH}px;\r\n    height: 100%;\r\n    // background-color: #0000ff11;\r\n    top: 0;\r\n    left: -${ELEMENT_POS_INFO_WIDTH / 2}px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    & ${_Section} {\r\n    }\r\n    & ${_Beat} {\r\n        font-size: 12px;\r\n        color: #333;\r\n        & span {\r\n            color: #00a;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ELEMENT_POS_INFO_WIDTH } from \"../../../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../../../entry/systemEntry\";\r\n\r\nconst CalcSection = (props: {\r\n    index: number;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    const barSum = Math.floor(curSection.beatSum / 4);\r\n    const barRem = curSection.beatSum % 4;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Len>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Len>\r\n            <_Border />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcSection;\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Len = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #474386cf;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Border = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 8px;\r\n    height: calc(100% - 16px);\r\n    background-color: #db0000cf;\r\n    border-radius: 4px 4px 0 0;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailAlter = (props: {\r\n    detail: DetailAlter;\r\n}) => {\r\n\r\n    const type = props.detail.alterType;\r\n\r\n    const getDetailInfo = (): string => {\r\n        let ret = '-';\r\n        if (type != null) {\r\n            switch (type) {\r\n                case 'modulate': {\r\n\r\n                    const modRel = props.detail.modRel;\r\n                    if (modRel != null) {\r\n                        switch (modRel) {\r\n                            case 'domm': {\r\n                                const val = props.detail.dommVal;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                            case 'relative':\r\n                            case 'parallel': {\r\n                                ret = modRel;\r\n                            } break;\r\n                            case 'key': {\r\n                                const val = props.detail.keyAdj;\r\n                                const sign = val > 0 ? '+' : ''; \r\n                                ret = `${modRel}: ${sign}${val}`;\r\n                            } break;\r\n                        }\r\n                    }\r\n                } break;\r\n                case 'tempo' : {\r\n                    const tempoRel = props.detail.tempoRel;\r\n                    switch(tempoRel) {\r\n                        case 'diff': {\r\n                            const val = props.detail.tempoDiff;\r\n                            const sign = val > 0 ? '+' : ''; \r\n                            ret = `${tempoRel}: ${sign}${val}`;\r\n                        } break;\r\n                        case 'rate': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoRate}%`;\r\n                        } break;\r\n                        case 'abs': {\r\n                            ret = `${tempoRel}: ${props.detail.tempoAbs}`;\r\n                        } break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Type>\r\n                {type == null ? 'alter' : type}\r\n            </_Type>\r\n            <_Detail>\r\n                {getDetailInfo()}\r\n            </_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: red; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 100px;\r\n    height: 20px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 3px;\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0014cc;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #5e5e5e;\r\n`;","import { useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailChord, Scale } from \"../../../../../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../../../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\ntype TipLenType = 'short' | 'normal' | 'long';\r\ntype TipValueType = 0 | 2 | 1;\r\n\r\n/**\r\n * コードブロックのコンポーネント\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailChord = (props: {\r\n    detail: DetailChord;\r\n    isSustainMode: boolean;\r\n    isCurrent: boolean;\r\n    cache: ScoreCache.Element;\r\n    chordCacheList: ScoreCache.Chord[];\r\n    keyIndex: number;\r\n    scale: Scale;\r\n}) => {\r\n\r\n    const minute = props.detail.minute;\r\n    const symbol = TheoryUtil.getSymbolFromKey(props.detail.symbolKey) as TheoryUtil.SymbolParams;\r\n    const symbolName = symbol.name;\r\n    const chordBacking = props.detail.backing;\r\n    const cache = props.cache;\r\n    const chordCache = props.chordCacheList[cache.chordBlockNo];\r\n\r\n    const backingError = chordCache != undefined ? chordCache.backingError : false;\r\n\r\n    return useMemo(() => {\r\n\r\n        // const keySwitch = store.scoreState.keySwitch;\r\n        let degreeRoot: null | string = null;\r\n        let degreeOn: null | string = null;\r\n        let chordRoot: null | string = null;\r\n        let chordOn: null | string = null;\r\n\r\n        if (props.detail.root != null) {\r\n            degreeRoot = TheoryUtil.getDegreeRoot({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            });\r\n            chordRoot = TheoryUtil.getRootName({\r\n                index: props.detail.root.index,\r\n                isFlat: props.detail.root.isFlat\r\n            }, props.keyIndex);\r\n\r\n            if (props.detail.on != null) {\r\n                degreeOn = TheoryUtil.getDegreeRoot({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.on.isFlat\r\n                });\r\n                chordOn = TheoryUtil.getRootName({\r\n                    index: props.detail.on.index,\r\n                    isFlat: props.detail.root.isFlat\r\n                }, props.keyIndex);\r\n            }\r\n        }\r\n        const diatonicList = TheoryUtil.getDiatonicDegreeList(props.scale);\r\n        const isDiatonic = diatonicList.includes(degreeRoot + symbolName);\r\n\r\n        return <_Wrap>\r\n            <_Degree\r\n                // isSwitch={keySwitch.sustainMode && props.isCurrent}\r\n                isSwitch={props.isSustainMode}\r\n                scaleRelation={degreeRoot != null && isDiatonic ? 'diatonic' : 'none'}\r\n                isOnChordScale={props.detail.on != null && [0, 2, 4, 5, 7, 9, 11].includes(props.detail.on.index)}\r\n            >\r\n                {degreeRoot == null ? 'none' : (<>\r\n                    <_DegreeRoot>{degreeRoot}{symbolName}{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeRoot>\r\n                    {/* <_DegreeSymbol>{symbolName}</_DegreeSymbol>\r\n                    <_DegreeOnChord>{degreeOn == null ? '' : `/${degreeOn}`}</_DegreeOnChord> */}\r\n                </>)}\r\n            </_Degree>\r\n            {/* <_Chord>\r\n                {chordRoot == null ? '-' : (<>\r\n                    {chordRoot}{symbolName}{chordOn == null ? '' : `/${chordOn}`}\r\n                </>)}\r\n            </_Chord> */}\r\n            <_Tip isSwitch={props.isSustainMode}>\r\n                {(() => {\r\n                    const jsxList: JSX.Element[] = [];\r\n                    for (let i = 0; i < props.detail.beatLen; i++) {\r\n                        let lenType: TipLenType = 'normal';\r\n                        let valueType: TipValueType = 0;\r\n                        if ([0, props.detail.beatLen - 1].includes(i)) {\r\n                            const target = i === 0 ? minute.head : minute.tail;\r\n                            if (target !== 0) {\r\n                                lenType = target > 0 ? 'long' : 'short';\r\n                                valueType = Math.abs(target) as TipValueType;\r\n                            }\r\n                        }\r\n                        jsxList.push(\r\n                            <_TipItem\r\n                                key={i}\r\n                                lenType={lenType}\r\n                                valueType={valueType}\r\n                            />\r\n                        );\r\n                    }\r\n                    return jsxList;\r\n                })()}\r\n            </_Tip>\r\n            <_Backing>\r\n                {backingError ? <_Error /> : <>\r\n                    {chordBacking.voicingList.length === 0 ? '' : <_Voicing />}\r\n                    {chordBacking.voicingList.length === 0 ? '' : chordBacking.pattern == null ? '' : <_Pattern />}\r\n                </>}\r\n            </_Backing>\r\n        </_Wrap>\r\n    }\r\n        , [\r\n            props.scale,\r\n            props.isCurrent, props.detail.beatLen, props.detail.root?.index,\r\n            props.detail.on?.index,\r\n            props.detail.symbolKey,\r\n            props.isSustainMode,\r\n            props.keyIndex,\r\n            props.detail.minute.head,\r\n            props.detail.minute.tail,\r\n            props.detail.backing,\r\n            backingError\r\n        ]);\r\n}\r\n\r\nexport default ElementDetailChord;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* border: 1px solid #c5c5cc; */\r\n    /* padding: 4px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #00000013; */\r\n`;\r\n\r\n\r\nconst _DegreeRoot = styled.div``;\r\nconst _DegreeSymbol = styled.div``;\r\nconst _DegreeOnChord = styled.div``;\r\nconst _Degree = styled.div<{\r\n    isSwitch: boolean;\r\n    scaleRelation: TheoryUtil.ScaleRelation;\r\n    isOnChordScale: boolean;\r\n}>`\r\n    display: block;\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    /* background-color: #f700d616; */\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    font-size: 18px;\r\n    /* color: #4e516394; */\r\n    text-align: center;\r\n\r\n    & * {\r\n        display: inline-block;\r\n    }\r\n\r\n    & ${_DegreeRoot} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n        font-weight: 600;\r\n    }\r\n    & ${_DegreeSymbol} {\r\n        color: #4e5163cc;\r\n        ${props =>\r\n        props.scaleRelation === 'diatonic' ? css`color: #4e516394;` :\r\n            props.scaleRelation === 'secondaly' ? css`color: #00116e93;` :\r\n                css`color: #70000093;`\r\n    }\r\n    }\r\n    & ${_DegreeOnChord} {\r\n        color: #4e5163cc;\r\n        ${props => props.isOnChordScale ? '' : css`color: #70000093;`}\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 22px;\r\n    /* background-color: #d37979b2; */\r\n    font-size: 14px;\r\n    /* font-weight: 600; */\r\n    color: #9c5f74;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Tip = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 18px;\r\n    ${props => !props.isSwitch ? '' : css`background-color: #0004f729;`}\r\n    /* background-color: #d8ccccb1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TipItem = styled.div<{\r\n    lenType: TipLenType;\r\n    valueType: TipValueType;\r\n}>`\r\n    display: inline-block;\r\n    width: 8px;\r\n    ${props => props.lenType === 'short' ? css`\r\n        width: 4px;\r\n    ` : props.lenType === 'long' ? css`\r\n        width: 12px;\r\n    ` : ''}\r\n    height: calc(100% - 4px);\r\n    margin: 2px 2px 0 2px;\r\n    background-color: #e0e0e088;\r\n    ${props => props.valueType === 2 ? css`\r\n        background-color: #db828287;\r\n    ` : props.valueType === 1 ? css`\r\n        background-color: #9394dd87;\r\n    ` : ''}\r\n    /* background: linear-gradient(to bottom, #9b9b9bc3, #85858514); */\r\n    border: solid 1px #0000004e;\r\n    /* border-radius: 2px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Backing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 6px;\r\n    /* background-color: #00a048; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _Error = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 2px;\r\n    height: 4px;\r\n    border-radius: 4px;\r\n    background-color: #af3838;\r\n`;\r\n\r\nconst _Voicing = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 2px 0 0;\r\n    height: 4px;\r\n    border-radius: 4px 0 0 4px;\r\n    border: solid 1px #0000004e;\r\n    background-color: #acb6ca;\r\n`;\r\n\r\nconst _Pattern = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 40%;\r\n    margin: 2px 0 0 2px;\r\n    height: 4px;\r\n    border-radius: 0 4px 4px 0;\r\n    border: solid 1px #0000004e;\r\n    background-color: #accab3;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { DetailFixed } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_HEAD_WIDTH } from \"../../../../../utils/systemConst\";\r\n\r\nconst ElementFixedBorder = (props: {\r\n    detail: DetailFixed;\r\n}) => {\r\n\r\n    // const jsxList: JSX.Element[] = [];\r\n    // jsxList.push(<_Border key={0} />);\r\n    // jsxList.push(<_Label key={1}>{props.detail.fixed}</_Label>);\r\n\r\n    const value = props.detail.fixed;\r\n    return (\r\n        <_Wrap isStart={value === 'Start'}>\r\n            {/* {props.detail.fixed === 'Start' ? jsxList : jsxList.reverse()} */}\r\n            <_Label>{value}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementFixedBorder;\r\n\r\nconst _Wrap = styled.div<{\r\n    isStart: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH}px);\r\n    border-left: 1px solid #00000083;\r\n    border-top: 1px solid #00000083;\r\n    border-right: 1px solid #00000083;\r\n    /* border: 1px solid #00000083; */\r\n    box-sizing: border-box;\r\n    background-color: #9b9b9b1f;\r\n    ${props => props.isStart ? css`\r\n        border-radius: 0 35px 0 0;\r\n    ` : css`\r\n        border-radius: 35px 0 0 0;\r\n    `}\r\n`;\r\n\r\n// const _Border = styled.div`\r\n//     display: inline-block;\r\n//     width: 10px;\r\n//     height: 100%;\r\n//     background-color: #b4b4b4;\r\n//     vertical-align: middle;\r\n// `;\r\n\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    /* width: calc(100% - 10px); */\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #47438678; */\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    line-height: 46px;\r\n    color: #960000b0;\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    /* vertical-align: middle; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailInit } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailInit = (props: {\r\n    detail: DetailInit;\r\n}) => {\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Record>\r\n                <_Title>Scale:</_Title>\r\n                <_Value>{props.detail.scale}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Key:</_Title>\r\n                <_Value>{TheoryUtil.KEY12_MAJOR_SCALE_LIST[props.detail.keyIndex]}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>tempo:</_Title>\r\n                <_Value>{props.detail.bpm}</_Value>\r\n            </_Record>\r\n            <_Record>\r\n                <_Title>Rate:</_Title>\r\n                <_Value>{props.detail.beatSignature}</_Value>\r\n            </_Record>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 16px;\r\n    margin: 1px 0;\r\n    /* background-color: #0066ff16; */\r\n    /* border-bottom: 1px solid #000; */\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #2a2a2c;\r\n    line-height: 16px;\r\n`;\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: #14a800;\r\n    /* background-color: #ff00b329; */\r\n`;\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin: 0 2px;\r\n    width: 40px;\r\n    height: 100%;\r\n    color: #000000;\r\n    /* background-color: #ff00b329; */\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DetailSection } from \"../../../../../../redux/store/score/scoreData\";\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst ElementDetailSection = (props: {\r\n    detail: DetailSection;\r\n}) => {\r\n    // const { store } = useContext(GlobalContext);\r\n\r\n    // const state = store.scoreState;\r\n    // const sectionNo = state.elementCacheList[props.index].sectionNo;\r\n    // const curSection = state.sectionCacheList[sectionNo];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <_Label>{curSection.labelName}</_Label> */}\r\n            <_Label>{props.detail.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ElementDetailSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    position: relative;\r\n    /* width: 100px; */\r\n    text-align: center;\r\n    border: 1px;\r\n    /* border: 1px solid #c5c5cc; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    min-width: 80px;\r\n    height: 20px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c00;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    /* background-color: #1000eb42; */\r\n    margin-top: 13px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../../../redux/store/score/scoreCache\";\r\nimport { DetailAlter } from \"../../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../../utils/theoryUtil\";\r\n\r\nconst CalcAlter = (props: {\r\n    detail: DetailAlter;\r\n    prevCache: ScoreCache.Element;\r\n    curCache: ScoreCache.Element;\r\n}) => {\r\n\r\n    const getType = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate': return 'Key';\r\n            case 'tempo': return 'Tempo';\r\n            case 'beat': return 'Beat';\r\n        }\r\n    }\r\n    const getDetail = () => {\r\n        switch (props.detail.alterType) {\r\n            case 'modulate':{\r\n                const prevKey = TheoryUtil.KEY12_SHARP_LIST[props.prevCache.keyIndex] + (props.prevCache.scale === 'major' ? '' : 'm');\r\n                const curKey = TheoryUtil.KEY12_SHARP_LIST[props.curCache.keyIndex] + (props.curCache.scale === 'major' ? '' : 'm');\r\n                return `${prevKey}→${curKey}`;\r\n            }\r\n            case 'tempo':{\r\n                const prevTempo = props.prevCache.bpm;\r\n                const curTempo = props.curCache.bpm;\r\n                return `${prevTempo}→${curTempo}`;\r\n            }\r\n            case 'beat':{\r\n                const prevBeat = props.prevCache.beatSignature;\r\n                const curBeat = props.curCache.beatSignature;\r\n                return `${prevBeat}→${curBeat}`;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <_Type>{getType()}</_Type>\r\n            <_Detail>{getDetail()}</_Detail>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default CalcAlter;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 4;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #ff000011; */\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* min-width: 80px; */\r\n    height: 16px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    /* background-color: #00000042; */\r\n`;\r\n\r\nconst _Type = styled(_Label)`\r\n    color: #0b00a8cf;\r\n`;\r\n\r\nconst _Detail = styled(_Label)`\r\n    color: #050505cf;\r\n`;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { SymbolDiagram } from \"../../../../../redux/store/score/scoreState\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\ntype ChordDefBean = {\r\n    root: TheoryUtil.DegreeProps;\r\n    symbolKey: TheoryUtil.SymbolKey;\r\n}\r\n\r\nconst ChordEditor = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const detail = store.scoreData.chordList[state.focusIndex].detail as DetailChord;\r\n\r\n    // 表示時に呼ばれる\r\n    useEffect(() => {\r\n    }, [detail.root, detail.symbolKey]);\r\n\r\n    const getChord = (index: number, isFlat: boolean, symbolKey: TheoryUtil.SymbolKey): ChordDefBean => {\r\n        return { root: { index, isFlat }, symbolKey };\r\n    }\r\n\r\n    const createRow = (label: JSX.Element, chordList: ChordDefBean[]): JSX.Element => {\r\n        const listJsx: JSX.Element[] = [];\r\n        listJsx.push(<_Header key={listJsx.length}>{label}</_Header>);\r\n        chordList.forEach((chord) => {\r\n            const rootName = TheoryUtil.getDegreeRoot(chord.root);\r\n            const symbol = TheoryUtil.getSymbolFromKey(chord.symbolKey) as TheoryUtil.SymbolParams;\r\n            const symbolName = symbol.name;\r\n            listJsx.push(\r\n                <_Item isActive={false} key={listJsx.length}>\r\n                    {rootName + symbolName}\r\n                </_Item>);\r\n        });\r\n        return <_Row>{listJsx}</_Row>;\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {createRow(<>triad</>, [\r\n                getChord(0, false, 'major'),\r\n                getChord(2, false, 'minor'),\r\n                getChord(4, false, 'minor'),\r\n                getChord(5, false, 'major'),\r\n                getChord(7, false, 'major'),\r\n                getChord(9, false, 'minor'),\r\n                getChord(11, false, 'minor-minus5'),\r\n            ])}\r\n            {/* {createRow(<>Tetrad</>, [\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'minor-7th'),\r\n                getChord(4, false, 'minor-7th'),\r\n                getChord(5, false, 'major-maj7th'),\r\n                getChord(7, false, 'major-min7th'),\r\n                getChord(9, false, 'minor-7th'),\r\n                getChord(11, false, 'minor7-minus5'),\r\n            ])} */}\r\n            {createRow(<>domm</>, [\r\n                getChord(9, false, 'major-min7th'),\r\n                getChord(11, false, 'major-min7th'),\r\n                getChord(0, false, 'major-min7th'),\r\n                getChord(2, false, 'major-min7th'),\r\n                getChord(4, false, 'major-min7th'),\r\n            ])}\r\n            {createRow(<>domm*</>, [\r\n                getChord(1, false, 'diminish'),\r\n                getChord(3, false, 'diminish'),\r\n                getChord(4, false, 'diminish'),\r\n                getChord(6, false, 'diminish'),\r\n                getChord(8, false, 'diminish'),\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ChordEditor;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 30;\r\n    top: 100px;\r\n    left: 0;\r\n    width: 250px;\r\n    /* height: 160px; */\r\n    background-color: #a9cfd422;\r\n    border: 2px solid #000000ec;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    opacity: 0.9;\r\n    box-shadow: 0 4px 16px 4px #000b3a48;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Row = styled.div`\r\n    display: inline-block;\r\n    width: 80px;\r\n    /* height: 100%; */\r\n    /* background-color: #e6e6e6; */\r\n    margin: 1px;\r\n    vertical-align: top;\r\n`;\r\n\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    /* background-color: #78dab4;\r\n    border: 1px solid #000000; */\r\n    background: linear-gradient(to bottom, #7a9ea3, #78cfda, #7a9ea3);\r\n    /* background: linear-gradient(to bottom, #a37a7a, #da7878, #a37a7a); */\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #f3f3f3;\r\n    line-height: 17px;\r\n`;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: 20px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffef64;`}\r\n    border: 1px solid #000000;\r\n    margin: 1px;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #000000;\r\n    line-height: 16px;\r\n`;","import { useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailAlter, DetailChord, DetailFixed, DetailInit, DetailSection, TypeDetail } from \"../../../../../redux/store/score/scoreData\";\r\nimport { ELEMENT_FOOT_WIDTH, ELEMENT_HEAD_WIDTH, ELEMENT_HEIGHT, ELEMENT_OPERATIONS_WIDTH, ELEMENT_POS_INFO_WIDTH, ELEMENT_SIDE_PADDING, FIRST_CHORD_INDEX } from \"../../../../../utils/systemConst\";\r\nimport SymbolEditor from \"../tool/symbolEditor\";\r\nimport CalcChord from \"./calc/calcChord\";\r\nimport CalcSection from \"./calc/calcSection\";\r\nimport ElementDetailAlter from \"./form/elementDetailAlter\";\r\nimport ElementDetailChord from \"./form/elementDetailChord\";\r\nimport ElementFixedBorder from \"./elementFixedBorder\";\r\nimport ElementDetailInit from \"./form/elementDetailInit\";\r\nimport ElementDetailSection from \"./form/elementDetailSection\";\r\nimport CalcAlter from \"./calc/calcAlter\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { ScoreState } from \"../../../../../redux/store/score/scoreState\";\r\nimport ChordEditor from \"../tool/chordEditor\";\r\n\r\nconst ScoreElement = (props: {\r\n    index: number;\r\n    element: ChordElement;\r\n    state: ScoreState;\r\n    setState: (state: ScoreState) => void;\r\n}) => {\r\n\r\n    const wrapRef = useRef({} as HTMLDivElement);\r\n    const bodyRef = useRef({} as HTMLDivElement);\r\n\r\n    const state = props.state;\r\n    const keySwitch = state.keySwitch;\r\n    const isCurrent = state.focusIndex == props.index;\r\n    // const chordList = store.scoreData.chordList;\r\n    // const element = chordList[props.index];\r\n    const element = props.element;\r\n    const cache = state.elementCacheList[props.index];\r\n    const distHead = state.focusIndex < state.distIndex ? state.focusIndex : state.distIndex;\r\n    const distTail = state.focusIndex > state.distIndex ? state.focusIndex : state.distIndex;\r\n    const isFocus = props.index >= distHead && props.index <= distTail;\r\n    const isRange = isFocus && distHead != distTail;\r\n    const isSameSection = isFocus || state.elementCacheList[state.focusIndex].sectionNo === cache.sectionNo;\r\n\r\n    useEffect(() => {\r\n        cache.reffers.wrap = wrapRef.current;\r\n        cache.reffers.body = bodyRef.current;\r\n        props.setState(state);\r\n    }, [state.elementCacheList.length]);\r\n\r\n    const elementJson = JSON.stringify(element);\r\n\r\n    const isError = () => {\r\n        let ret = false;\r\n        if (element.type === 'chord') {\r\n            const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n            ret = chordCache.backingError;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    return useMemo(() => {\r\n        // console.log(`pos: ${props.index}`);\r\n        const chordDetail = element.type !== 'chord' ? null : element.detail as DetailChord;\r\n        const isInactive = !(isSameSection || element.type === 'init');\r\n        return (\r\n            <_Wrap\r\n                ref={wrapRef}\r\n                isSelectable={element.type !== 'fixed'}\r\n                isActive={isFocus}\r\n                isInactive={isInactive}\r\n                isAdditional={['chord', 'section', 'alter', 'init'].includes(element.type)}\r\n            >\r\n                <_Head>\r\n                    {element.type !== 'chord' ? <></> : (\r\n                        <_CurKey>{TheoryUtil.getDisplayKeyScaleName(cache.keyIndex, cache.scale)}</_CurKey>\r\n                    )}\r\n                </_Head>\r\n\r\n                {/* 要素の入力フォーム */}\r\n                {['init', 'chord', 'section', 'alter'].includes(element.type) ? (\r\n                    <_Form\r\n                        ref={bodyRef}\r\n                        isActive={isFocus}\r\n                        isRange={isRange}\r\n                        isInactive={isInactive}\r\n                        type={element.type}\r\n                        isAnytime={['fixed', 'init'].includes(element.type) || state.focusIndex === 0}\r\n                        onClick={() => {\r\n                            if (element.type === 'fixed') {\r\n                                return;\r\n                            }\r\n                            if (!state.keySwitch.distMode) {\r\n                                state.focusIndex = state.distIndex = props.index;\r\n                            } else {\r\n                                state.distIndex = props.index;\r\n                            }\r\n                            props.setState(state);\r\n                        }}\r\n                    >{(() => {\r\n                        switch (element.type) {\r\n                            case 'init': {\r\n                                const detail = element.detail as DetailInit;\r\n                                return (<ElementDetailInit detail={detail} />);\r\n                            }\r\n                            case 'section': {\r\n                                const detail = element.detail as DetailSection;\r\n                                return (<ElementDetailSection detail={detail} />);\r\n                            }\r\n                            case 'chord': {\r\n                                const detail = element.detail as DetailChord;\r\n                                return (<ElementDetailChord\r\n                                    detail={detail}\r\n                                    isCurrent={isFocus}\r\n                                    cache={cache}\r\n                                    chordCacheList={state.chordCacheList}\r\n                                    keyIndex={cache.keyIndex}\r\n                                    isSustainMode={isFocus && state.keySwitch.sustainMode}\r\n                                    scale={cache.scale}\r\n                                />);\r\n                            }\r\n                            case 'alter': {\r\n                                const detail = element.detail as DetailAlter;\r\n                                return (<ElementDetailAlter detail={detail} />);\r\n                            }\r\n                        }\r\n                    })()}\r\n                    </_Form>\r\n                ) : (<ElementFixedBorder detail={element.detail as DetailFixed} />)}\r\n\r\n                {/* 入力フォーム下部の計算によって出力される情報 */}\r\n                {\r\n                    element.type === 'chord' ? (<CalcChord index={props.index} detail={chordDetail as DetailChord} />) :\r\n                        element.type === 'section' ? (<CalcSection index={props.index} />) :\r\n                            element.type === 'alter' ? (\r\n                                <CalcAlter\r\n                                    detail={element.detail as DetailAlter}\r\n                                    prevCache={state.elementCacheList[props.index - 1]}\r\n                                    curCache={cache}\r\n                                />\r\n                            ) :\r\n                                <></>\r\n                }\r\n                <>{!(isCurrent && chordDetail != null && state.keySwitch.chordMode) ? '' :\r\n                    <ChordEditor />\r\n                }</>\r\n                <>{!(isCurrent && chordDetail != null && chordDetail.root != null && state.keySwitch.symbolMode) ? '' :\r\n                    <SymbolEditor />\r\n                }</>\r\n                {['fixed', 'init'].includes(element.type) ? <></> : (\r\n                    <_Operations>\r\n                        <_OperationItem>-</_OperationItem>\r\n                        <_OperationItem\r\n                        // onClick={() => dispatcher.score.addChordElement()}\r\n                        >+</_OperationItem>\r\n                    </_Operations>\r\n                )}\r\n            </_Wrap>\r\n        );\r\n    }, [\r\n        elementJson, isSameSection, isRange, isFocus,\r\n        keySwitch.chordMode, keySwitch.symbolMode, keySwitch.sustainMode,\r\n        isError(), cache.keyIndex, cache.scale\r\n    ]);\r\n}\r\n\r\nexport default ScoreElement;\r\n\r\nconst _NextLine = styled.div`\r\n    display: block;\r\n    width: 1px;\r\n    height: 10px;\r\n    background-color: #ad0c0c;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n    isRange: boolean;\r\n    isInactive: boolean;\r\n    //常に表示させるかどうか\r\n    isAnytime: boolean;\r\n    type: TypeDetail;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    min-width: 80px;\r\n    height: calc(100% - ${ELEMENT_HEAD_WIDTH + ELEMENT_FOOT_WIDTH}px);\r\n    /* border: solid 1px #00000049; */\r\n    ${props => props.type !== 'section' ? '' : css`\r\n        border: solid 1px #df8484;\r\n    ` }\r\n    ${props => props.type !== 'init' ? '' : css`\r\n        border: solid 1px #44b168;\r\n        height: 85px;\r\n    ` }\r\n    ${props => props.type !== 'alter' ? '' : css`\r\n        border: solid 1px #604fc0;\r\n    ` }\r\n\r\n    opacity: 0.4;\r\n    border-radius: 4px;\r\n    ${props => props.isInactive ? '' : css`\r\n        /* background-color: #ebf1e2; */\r\n        opacity: 1;\r\n    ` }\r\n    ${props => !props.isAnytime ? '' : css`\r\n        opacity: 1;\r\n    ` }\r\n    box-sizing: border-box;\r\n    padding: 4px;\r\n    transition: background-color 100ms;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #e4c9df;\r\n        border: solid 1px #00000049;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n    ${props => !props.isRange ? '' : css`\r\n        background-color: #80d4e2;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    `}\r\n`;\r\n\r\nconst _Operations = styled.div``;\r\nconst _OperationItem = styled.div``;\r\n\r\nconst _Wrap = styled.div<{\r\n    // 選択可能か\r\n    isSelectable: boolean;\r\n    isActive: boolean;\r\n    isInactive: boolean;\r\n    isAdditional: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    height: ${ELEMENT_HEIGHT}px;\r\n    padding: 0 ${ELEMENT_SIDE_PADDING}px;\r\n    box-sizing: border-box;\r\n    /* margin: 10px 5px 5px 5px; */\r\n    border-bottom: 1px solid #47438678;\r\n    margin-bottom: 4px;\r\n    vertical-align: top;\r\n    /* width: 1px; */\r\n    transition: width 500ms, opacity 300ms;\r\n    /* border: 1px solid #00000015; */\r\n    ${props => props.isInactive || !props.isAdditional ? '' : css`\r\n        /* background-color: #e8ff9549; */\r\n        background: linear-gradient(to bottom, transparent,transparent,transparent, #ffffff9e);\r\n    `}\r\n\r\n    & ${_Operations} {\r\n        display: none;\r\n        position: absolute;\r\n        z-index: 5;\r\n        width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n        height: 44px;\r\n        /* background-color: #0000ff11; */\r\n        top: ${35}px;\r\n        right: -${ELEMENT_OPERATIONS_WIDTH / 2}px;\r\n\r\n        /* background-color: #0400d84e; */\r\n        & ${_OperationItem} {\r\n            display: inline-block;\r\n            width: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            height: ${ELEMENT_OPERATIONS_WIDTH}px;\r\n            background-color: #ebebeb6e;\r\n            border: 1px solid #818181;\r\n            margin: 1px 0;\r\n            font-size: 15px;\r\n            font-weight: 600;\r\n            text-align: center;\r\n            color: #818181;\r\n            box-sizing: border-box;\r\n            line-height: 15px;\r\n\r\n            &:hover {\r\n                background-color: #fffb0b9d\r\n            }\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        ${props => !props.isSelectable ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n            & ${_Form} {\r\n                ${props => props.isActive ? '' : css`background-color: #ffffff9b;`}\r\n                opacity: 1;\r\n            }\r\n            & ${_Operations} {\r\n                display: inline-block;\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _CurKey = styled.div``;\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    width: 100%;\r\n    height: ${ELEMENT_HEAD_WIDTH}px;\r\n    /* background-color: #eca8813b; */\r\n\r\n    & ${_CurKey} {\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: -2px;\r\n        left: 10px;\r\n        width: 50px;\r\n        font-size: 12px;\r\n        color: #ca0000;\r\n        /* background-color: #fff; */\r\n    }\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ELEMENT_NOTE_PADDING_LEN, ELEMENT_NOTE_PADDING_SID } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ScoreElement from \"./elements/scoreElement\";\r\n\r\n\r\nconst HarmNote = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    // alert(`num=${num}, cache=${store.scoreState.elementCacheList.length}`);\r\n    const list: JSX.Element[] = [];\r\n    if (cacheList.length === chordList.length) {\r\n        for (let i = 0; i < cacheList.length; i++) {\r\n            list.push(\r\n                <ScoreElement key={list.length}\r\n                    index={i}\r\n                    element={chordList[i]}\r\n                    state={store.scoreState}\r\n                    setState={dispatcher.score.setScoreState}\r\n                />\r\n            );\r\n        };\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            {list}\r\n            {/* <_Frame> */}\r\n            {/* <_Note>\r\n                {list}\r\n            </_Note>\r\n            <_Note>\r\n            </_Note> */}\r\n            {/* </_Frame> */}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmNote;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 4px 0 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e7dddd; */\r\n    background-color: #e9e9e9;\r\n    border: 1px solid #b3b3b3;\r\n    border-radius: 2px;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    /* overflow: auto; */\r\n`;\r\n\r\nconst _Frame = styled.div`\r\n    transform-origin: top left;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    transform: scale(1);\r\n`;\r\n\r\nconst _Note = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    padding: ${ELEMENT_NOTE_PADDING_LEN}px ${ELEMENT_NOTE_PADDING_SID}px;\r\n    width: ${891}px;\r\n    height: ${1260}px;\r\n    background-color: #d8d8d8;\r\n    /* overflow: hidden; */\r\n    margin: 10px 0 0 10px;\r\n    box-shadow: 0 0 18px 0 #000b3a48;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst HarmSections = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const sections = state.sectionCacheList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > state.elementCacheList.length) {\r\n        return <></>;\r\n    }\r\n\r\n    const curSectionNo = state.elementCacheList[state.focusIndex].sectionNo;\r\n\r\n    const list: JSX.Element[] = [];\r\n    sections.forEach((section, i) => {\r\n        const barSum = Math.floor(section.beatSum / 4);\r\n        const barRem = section.beatSum % 4;\r\n        const isActive = i === curSectionNo;\r\n        list.push(\r\n            <_Item\r\n                key={i}\r\n                isActive={isActive}\r\n                onClick={() => {\r\n                    state.focusIndex = section.rangeIndexStart;\r\n                    state.distIndex = state.focusIndex;\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                <_Label>{section.labelName}</_Label>\r\n                <_Total>{barSum}{barRem === 0 ? '' : ` (${barRem})`}</_Total>\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        {list}\r\n    </>);\r\n}\r\n\r\nexport default HarmSections;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _Total = styled.div``;\r\nconst _Item = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 4px 4px 0 4px;\r\n    width: calc(100% - 8px);\r\n    height: 46px;\r\n    background-color: ${props => props.isActive ? css`\r\n        #97cce0dd;\r\n        box-shadow: 0 0 8px 0 #000b3a48;\r\n    ` : css`\r\n        #c4c4c42b;\r\n    `} ;\r\n    border: 1px solid #929292;\r\n    /* border-radius: 20px 20px 20px 20px; */\r\n    border-radius: 2px;\r\n\r\n    text-align: center;\r\n\r\n    & ${_Label} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 25px;\r\n        font-size: 18px;\r\n        /* font-weight: 600; */\r\n        color: #4d4d4d;\r\n        /* background-color: #0000003a; */\r\n        line-height: 22px;\r\n    }\r\n    & ${_Total} {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 21px;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        color: #003eb3;\r\n        /* background-color: #adadad39; */\r\n        line-height: 20px;\r\n    }\r\n`;","import { on } from \"stream\";\r\nimport { Dispatcher } from \"../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport BackingUtil from \"./backingUtil\";\r\nimport CacheUtil from \"./cacheUtil\";\r\nimport { getKeyIndexFromPitcher, getNormalizeLenFromNotes } from \"./melodyUtil\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nnamespace HarmonizeUtil {\r\n\r\n    export const previewStart = (store: Store, dispatcher: Dispatcher) => {\r\n        const state = store.scoreState;\r\n        // const sampler = store.instruments.sampler;\r\n        const cacheList = state.elementCacheList;\r\n        const chordList = store.scoreData.chordList;\r\n        const reserveTasks = store.reserveTasks;\r\n        let firstTime = -1;\r\n        const update = () => {\r\n            // if (store.invalidate.harmonize) {\r\n            //     store.invalidate.harmonize();\r\n            // }\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n        // const reserveTasks = store.reserveTasks;\r\n        // const init = chordList[0].detail as DetailInit;\r\n        const adjsut = 0;\r\n        for (let i = state.focusIndex; i < chordList.length; i++) {\r\n            const cache = cacheList[i];\r\n            const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n            const element = chordList[i];\r\n\r\n            /**\r\n             * 要素の切り替わり時の処理をタスクに追加する\r\n             * @param callback 実行する処理\r\n             */\r\n            const addProgAction = (callback: () => void) => {\r\n                reserveTasks.push(\r\n                    setTimeout(() => {\r\n                        callback();\r\n                    }, cache.pastSecond - firstTime - adjsut)\r\n                );\r\n            }\r\n\r\n            if (element.type === 'chord') {\r\n                const detail = element.detail as DetailChord;\r\n                // 開始時のノーツの位置（時間）を保存する。\r\n                if (firstTime === -1) {\r\n                    firstTime = cache.pastSecond;\r\n                }\r\n\r\n                // コードが指定されてい場合\r\n                if (detail.root == null) {\r\n                    addProgAction(()=> {\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        update();\r\n                    });\r\n                }\r\n\r\n                // バッキングエラーがない場合\r\n                if (!chordCache.backingError) {\r\n                    const backing = detail.backing;\r\n                    const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n\r\n                    // const chordTime = 60 / cache.bpm * len;\r\n\r\n                    const minute = detail.minute.head + detail.minute.tail;\r\n                    const chordTime = TheoryUtil.calcSustainMsec(\r\n                        detail.beatLen,\r\n                        minute,\r\n                        cache.bpm,\r\n                        cache.beatSignature\r\n                    );\r\n\r\n                    addProgAction(()=> {\r\n                        BackingUtil.playBacking(store, reserveTasks, cache, backing, pitchList, chordTime);\r\n                        state.focusIndex = i;\r\n                        state.distIndex = state.focusIndex;\r\n                        setTimeout(() => {\r\n                            update();\r\n                        }, 0);\r\n                    });\r\n                } else {\r\n                    // バッキングエラーがある場合プレビューを止める\r\n                    reserveTasks.push(\r\n                        setTimeout(() => {\r\n                            HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                        }, (cache.pastSecond - firstTime - adjsut))\r\n                    );\r\n                }\r\n            }\r\n\r\n            // 終端の要素を処理\r\n            if (i === chordList.length - 1) {   \r\n                addProgAction(()=> {\r\n                    HarmonizeUtil.stopPreview(store, dispatcher, reserveTasks);\r\n                });\r\n            }\r\n        }\r\n\r\n        // メロディを再生\r\n        if (!state.isSolo) {\r\n            previewMelody(firstTime / 1000, store, dispatcher, reserveTasks);\r\n        }\r\n\r\n        state.isPreview = true;\r\n        update();\r\n    }\r\n\r\n    const previewMelody = (start: number, store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n\r\n        const state = store.melodyState;\r\n        const scoreState = store.scoreState;\r\n        const data = store.scoreData;\r\n        const instrument = store.instruments.melodyFont;\r\n\r\n        const update = store.invalidate.melody as () => void;\r\n        let firstTime = -1;\r\n        for (let i = 0; i < data.notesList.length; i++) {\r\n            const notes = data.notesList[i];\r\n            // const beatProps = TheoryUtil.getBeatProps(init.beatSignature);\r\n            // const adjustRate = 4 / beatProps.beatMemoriCount;\r\n            // const pos = getNormalizeLenFromNotes(notes.pos) * adjustRate;\r\n            // const len = getNormalizeLenFromNotes(notes.len) * adjustRate;\r\n            const pos = getNormalizeLenFromNotes(notes.pos);\r\n            const len = getNormalizeLenFromNotes(notes.len);\r\n            const [posTime, lenTime] = CacheUtil.getTimeInfoFromNotesPos(pos, len, scoreState.tempoCacheList);\r\n\r\n            if (posTime < start) continue;\r\n\r\n            // 開始時のノーツの位置（時間）を保存する。\r\n            if (firstTime === -1) {\r\n                // ノーツ非選択時は先頭から流す\r\n                if (state.focusIndex === -1) {\r\n                    firstTime = 0;\r\n                } else {\r\n                    firstTime = posTime;\r\n                }\r\n            }\r\n\r\n            const pitch = notes.pitchIndex;\r\n            // const time = 60 / bpm * pos;\r\n\r\n            const keyIndex = getKeyIndexFromPitcher(pitch);\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octave = Math.floor(((59 - pitch) + 9) / 12) + 1;\r\n\r\n            reserveTasks.push(\r\n                setTimeout(() => {\r\n                    // state.mouseState.curChord = searchCurChord(store, i);\r\n\r\n                    // dispatcher.tune.setState(state);\r\n                    dispatcher.melody.adjustScrollX();\r\n                    if (instrument != null) {\r\n                        instrument.stop();\r\n                        instrument.play(soundName + octave, 0, { duration: lenTime });\r\n                    }\r\n                    setTimeout(() => {\r\n                        state.focusIndex = i;\r\n                        state.destIndex = state.focusIndex;\r\n                        update();\r\n                    }, 0);\r\n                }, (posTime - start) * 1000)\r\n            );\r\n\r\n            // 終端ノーツの処理\r\n            // if (i === data.notesList.length - 1) {\r\n            //     reserveTasks.push(\r\n            //         setTimeout(() => {\r\n            //             stopPreview(store, dispatcher, reserveTasks);\r\n            //         }, (posTime - start + lenTime) * 1000)\r\n            //     );\r\n            // }\r\n        }\r\n    }\r\n\r\n    // ハーモニーのプレビューを停止する。\r\n    export const stopPreview = (store: Store, dispatcher: Dispatcher, reserveTasks: NodeJS.Timeout[]) => {\r\n        const state = store.scoreState;\r\n        state.isPreview = false;\r\n        // store.instruments.sampler.releaseAll();\r\n        // state.focusIndex = state.lastFocus;\r\n        reserveTasks.forEach(id => clearTimeout(id));\r\n        dispatcher.system.setReserveTasks([]);\r\n        dispatcher.score.setScoreState(state);\r\n\r\n        store.instruments.harmonyFont?.stop();\r\n    }\r\n\r\n    // 選択中の要素のバッキングパターンを鳴らす\r\n    export const previewCurHarmony = (store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const state = store.scoreState;\r\n        const reserveTasks = store.reserveTasks;\r\n        const cache = state.elementCacheList[state.focusIndex];\r\n        const chordCache = store.scoreState.chordCacheList[cache.chordBlockNo];\r\n        const curChord = store.scoreData.chordList[state.focusIndex];\r\n        if (curChord != null) {\r\n\r\n            const detail = curChord.detail as DetailChord;\r\n\r\n            if (detail.root == null) return;\r\n\r\n            // const rootIndex = (detail.root.index + cache.keyIndex) % 12;\r\n            // const onIndex = detail.on == null ? -1 : ((detail.on.index + cache.keyIndex) % 12);\r\n            // const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n\r\n            const backing = detail.backing;\r\n            const pitchList = BackingUtil.getPitchListFromVoicing(backing.voicingList, chordCache.structList);\r\n            // const chordTime = 60 / cache.bpm * len;\r\n\r\n            const minute = detail.minute.head + detail.minute.tail;\r\n            const chordTime = TheoryUtil.calcSustainMsec(\r\n                detail.beatLen,\r\n                minute,\r\n                cache.bpm,\r\n                cache.beatSignature\r\n            );\r\n\r\n            BackingUtil.playBacking(store, store.reserveTasks, cache, backing, pitchList, chordTime);\r\n\r\n            reserveTasks.push(setTimeout(() => {\r\n                state.isPreview = false;\r\n                dispatcher.score.setScoreState(state);\r\n            }, chordTime));\r\n            state.isPreview = true;\r\n            dispatcher.score.setScoreState(state);\r\n        }\r\n    }\r\n}\r\n\r\nexport default HarmonizeUtil;\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\nimport { ChordBacking } from \"../../../../../redux/store/score/scoreData\";\r\nimport DataUtil from \"../../../../../utils/dataUtil\";\r\nimport { NoteKeySwitch } from \"../../../../../redux/store/score/scoreState\";\r\n\r\nnamespace BackingEditorInput {\r\n\r\n    export const main = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const data = store.scoreData;\r\n        const state = store.backingState;\r\n\r\n        if (state == null || state.tabIndex === 1) return;\r\n\r\n        if (!state.isPreview) {\r\n            edit(e, state, keySwitch, dispatcher);\r\n        } else {\r\n\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const edit = (e: KeyboardEvent, state: BackingState.Editor, keySwitch: NoteKeySwitch, dispatcher: Dispatcher) => {\r\n\r\n        const pattern = state.pattern;\r\n\r\n        // 共通処理\r\n        common(e, state, dispatcher);\r\n\r\n        if (pattern != null) {\r\n            if (pattern.channelIndex === -1) {\r\n                patternNormalMode(e, state, pattern, dispatcher);\r\n            } else {\r\n                patternDetailMode(e, state, pattern, keySwitch.sustainMode, dispatcher);\r\n            }\r\n        }\r\n    }\r\n\r\n    const common = (e: KeyboardEvent, state: BackingState.Editor, dispatcher: Dispatcher) => {\r\n\r\n        switch (e.key) {\r\n            case 'b': {\r\n                // dispatcher.backing.closeBackingEditor();\r\n                state.closeAction(state, false);\r\n            } break;\r\n            case 'z': {\r\n                const voicingList = BackingUtil.getVoicingListFromTable(state.voicingTable);\r\n                const pattern = state.pattern == null ? null : BackingUtil.buildPatternProps(state.pattern);\r\n                const test: ChordBacking = { voicingList, pattern };\r\n                console.log('voicingList: ' + DataUtil.gZip(JSON.stringify(voicingList)));\r\n                console.log('pattern: ' + DataUtil.gZip(JSON.stringify(pattern)));\r\n                console.log('source: ' + DataUtil.gZip(JSON.stringify(test)));\r\n                console.log('source: ' + JSON.stringify(test));\r\n            } break;\r\n            case ' ': {\r\n                if (!state.hasError) {\r\n                    dispatcher.backing.testBacking();\r\n                }\r\n            } break;\r\n            case 'Enter': {\r\n                // dispatcher.backing.mappingEditorToScore();\r\n                // dispatcher.backing.closeBackingEditor();\r\n                state.closeAction(state, true);\r\n            } break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * パターン編集の通常モード\r\n     * @param e \r\n     * @param state \r\n     * @param pattern \r\n     * @param dispatcher \r\n     */\r\n    const patternNormalMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, dispatcher: Dispatcher) => {\r\n\r\n        const update = () => dispatcher.backing.setState(state);\r\n        switch (e.key) {\r\n            case 'ArrowLeft': {\r\n                dispatcher.backing.movePatternColumn(false);\r\n            } break;\r\n            case 'ArrowRight': {\r\n                dispatcher.backing.movePatternColumn(true);\r\n            } break;\r\n            case 'ArrowUp': {\r\n                dispatcher.backing.incrementVel(1);\r\n            } break;\r\n            case 'ArrowDown': {\r\n                dispatcher.backing.incrementVel(-1);\r\n            } break;\r\n            case 'a': {\r\n                dispatcher.backing.addPatternColumn();\r\n            } break;\r\n            case 'w': {\r\n                dispatcher.backing.switchLayer();\r\n            } break;\r\n            case 'e': {\r\n                dispatcher.backing.switchMode();\r\n            } break;\r\n            case '1': {\r\n                dispatcher.backing.setCurrentDivRate(16);\r\n            } break;\r\n            case '2': {\r\n                dispatcher.backing.setCurrentDivRate(8);\r\n            } break;\r\n            case '3': {\r\n                dispatcher.backing.setCurrentDivRate(4);\r\n            } break;\r\n            case '4': {\r\n                dispatcher.backing.setCurrentDivRate(2);\r\n            } break;\r\n            case '5': {\r\n                dispatcher.backing.setCurrentDivRate(1);\r\n            } break;\r\n            case '.': {\r\n                dispatcher.backing.toggleCurrentDivHalf();\r\n            } break;\r\n            case 'Delete': {\r\n                dispatcher.backing.deleteColumn();\r\n            } break;\r\n            case 's': {\r\n                pattern.channelIndex = 0;\r\n                update();\r\n            } break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * パターン編集の詳細モード\r\n     * @param e \r\n     * @param state \r\n     * @param pattern \r\n     * @param isEdit \r\n     * @param dispatcher \r\n     */\r\n    const patternDetailMode = (e: KeyboardEvent, state: BackingState.Editor, pattern: BackingState.Pattern, isEdit: boolean, dispatcher: Dispatcher) => {\r\n\r\n        const update = () => dispatcher.backing.setState(state);\r\n        if (!isEdit) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft': {\r\n                    dispatcher.backing.movePatternColumn(false);\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    dispatcher.backing.movePatternColumn(true);\r\n                }\r\n                    break;\r\n                case 'ArrowUp': {\r\n                    dispatcher.backing.moveChannelIndex(false);\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.backing.moveChannelIndex(true);\r\n                }\r\n                    break;\r\n                case 's': {\r\n                    pattern.channelIndex = -1;\r\n                    update();\r\n                }\r\n                    break;\r\n                case 'a': {\r\n                    const curNotes = dispatcher.backing.getNotes();\r\n\r\n                    const hasStaccato = () => {\r\n                        const layer = pattern.layers[pattern.layerIndex];\r\n                        const search = layer.table.find((record) => {\r\n                            const cell = record[pattern.lenIndex];\r\n                            if (cell != null && cell.signal === 's') return cell;\r\n                        });\r\n                        return search != undefined;\r\n                    }\r\n                    // 同列にスタッカートがある場合、スタッカートを設定\r\n                    const signal = !hasStaccato() ? 'n' : 's';\r\n                    const notes: BackingState.NoteStatus | null = curNotes == null ? { signal, timing: 0, velAdj: 0 } : null;\r\n                    dispatcher.backing.setNotes(notes);\r\n                    dispatcher.backing.updateErrorState();\r\n                }\r\n                    break;\r\n            }\r\n        } else {\r\n\r\n            const layer = pattern.layers[pattern.layerIndex];\r\n            const baseVel = layer.velocityList[pattern.lenIndex];\r\n            const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n            const cell = layer.table[channelIndex][pattern.lenIndex];\r\n\r\n            if (cell != null) {\r\n                let tempTiming = cell.timing == undefined ? 0 : cell.timing;\r\n                let tempVelAdj = cell.velAdj == undefined ? 0 : cell.velAdj;\r\n                const vel = baseVel + tempVelAdj;\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        if (vel < 10) {\r\n                            tempVelAdj++;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        if (vel > 1) {\r\n                            tempVelAdj--;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowLeft': {\r\n                        if (tempTiming > -10) {\r\n                            tempTiming--;\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'ArrowRight': {\r\n                        if (tempTiming < 10) {\r\n                            tempTiming++;\r\n                        }\r\n                    }\r\n                        break;\r\n                }\r\n                if (tempVelAdj !== 0) {\r\n                    cell.velAdj = tempVelAdj;\r\n                } else {\r\n                    delete cell.velAdj;\r\n                }\r\n                if (tempTiming != 0) {\r\n                    cell.timing = tempTiming;\r\n                } else {\r\n                    delete cell.timing;\r\n                }\r\n                update();\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default BackingEditorInput;","import ThemaUtil from \"../contents/custom/backing/themaUtil\";\r\nimport BackingState from \"../redux/store/score/backing/backingState\";\r\nimport { BackingPatternProps, ChordBacking, DetailChord, VoicingProps } from \"../redux/store/score/scoreData\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport TheoryUtil from \"./theoryUtil\";\r\n\r\nnamespace LibraryUtil {\r\n\r\n    export type EnableState = {\r\n        /** コード要素選択中 */\r\n        isChordElement: boolean;\r\n        /** ライブラリ利用有無 */\r\n        isUseLib: boolean;\r\n        /** 範囲選択有無 */\r\n        isRangeSelect: boolean;\r\n    }\r\n\r\n    export type Condition = {\r\n        beatLen: number;\r\n        head: number;\r\n        tail: number;\r\n        rootIndex: number;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n    }\r\n\r\n    export type PattItemProps = {\r\n        key: number;\r\n        dispName: string;\r\n        refer: number;\r\n        source: BackingPatternProps | null;\r\n    };\r\n\r\n    export type VoicItemProps = {\r\n        pattIdx: number;\r\n        dispName: string;\r\n        // soundFullNameList: string[];\r\n        source: VoicingProps[];\r\n    };\r\n\r\n    export type PresetDef = {\r\n\r\n    }\r\n\r\n    export type Apply = {\r\n        condition: Condition;\r\n        backing: null | ChordBacking;\r\n    };\r\n    export type PresetItemProps = {\r\n        method: ThemaUtil.Method;\r\n        dispName: string;\r\n        applyList: Apply[];\r\n    };\r\n\r\n    export const getEnableState = (store: Store): EnableState => {\r\n        const chordList = store.scoreData.chordList;\r\n        const state = store.scoreState;\r\n        const cur = chordList[state.focusIndex];\r\n\r\n        const isBackingEnable = cur.type === 'chord' && (cur.detail as DetailChord).root != null;\r\n        const isUseLib = store.systemState.activeThemaIndex !== -1;\r\n        const isRangeSelect = state.focusIndex !== state.distIndex;\r\n\r\n        return {\r\n            isChordElement: isBackingEnable, isUseLib, isRangeSelect\r\n        };\r\n    }\r\n\r\n    const attrsSearch = (\r\n        patts: ThemaUtil.LevelPatt[] | null,\r\n        patt: ThemaUtil.LevelPatt,\r\n        symbol: TheoryUtil.SymbolParams,\r\n        rootIndex: number,\r\n        preset: null | number,\r\n        voicCallback: (voic: ThemaUtil.LevelVoic) => void,\r\n        pattVoicCallback: (patt: ThemaUtil.LevelPatt, voic: ThemaUtil.LevelVoic) => void\r\n    ) => {\r\n        const getAttrs = () => {\r\n            if (preset == null || patts == null || patt.refer === -1) return patt.attrs;\r\n            else {\r\n                const master = patts.find(fPatt => patt.refer === fPatt.key);\r\n                return master == undefined ? [] : master.attrs;\r\n            }\r\n        }\r\n        getAttrs().forEach((attr) => {\r\n            const isMatchAttr = symbol.attr === attr.attr && attr.symbols.includes(symbol.key);\r\n            if (!isMatchAttr) return 1;\r\n            attr.roots.forEach(root => {\r\n                const isMatchRoot = rootIndex >= root.minIdx && rootIndex <= root.maxIdx;\r\n                if (!isMatchRoot) return 1;\r\n                root.voics.forEach(voic => {\r\n                    if (preset != null && !voic.preUsies.map(preUse => {\r\n                        return `${preUse.depPatt === -1 ? patt.key : preUse.depPatt},${preUse.presKey}`;\r\n                    }).includes(`${patt.key},${preset}`)) return 1;\r\n                    voicCallback(voic);\r\n                    pattVoicCallback(patt, voic);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    export const searchSustMeth = (\r\n        sustMet: ThemaUtil.LevelMethod,\r\n        condition: Condition,\r\n        preset: null | number,\r\n        callback: (voic: ThemaUtil.LevelVoic) => void\r\n    ) => {\r\n        // サスティンメソッドでない場合処理しない\r\n        if (sustMet.method !== 'sustain') return;\r\n\r\n        const symbol = TheoryUtil.getSymbolFromKey(condition.symbolKey) as TheoryUtil.SymbolParams;\r\n        const rootIndex = condition.rootIndex;\r\n\r\n        const attrs = sustMet.defs as ThemaUtil.LevelAttr[];\r\n        // attrs.forEach((attr) => {\r\n        //     const isMatchAttr = symbol.attr === attr.attr && attr.symbols.includes(symbol.key);\r\n        //     if (!isMatchAttr) return 1;\r\n        //     attr.roots.forEach(root => {\r\n        //         const isMatchRoot = rootIndex >= root.minIdx && rootIndex <= root.maxIdx;\r\n        //         if (!isMatchRoot) return 1;\r\n        //         root.voics.forEach(voic => {\r\n        //             callback(voic);\r\n        //         });\r\n        //     });\r\n        // });\r\n        const dummyPatt: ThemaUtil.LevelPatt = {\r\n            attrs, key: -1, refer: -1, pattName: '', source: { channelSize: 0, layers: [], pedals: [] }\r\n        }\r\n        attrsSearch(null, dummyPatt, symbol, rootIndex, preset, callback, () => { });\r\n    };\r\n\r\n    export const searchPattMeth = (\r\n        pattMet: ThemaUtil.LevelMethod,\r\n        condition: Condition,\r\n        preset: null | number,\r\n        pattCallback: (voic: ThemaUtil.LevelPatt) => void,\r\n        voicCallback: (voic: ThemaUtil.LevelVoic) => void,\r\n        pattVoicCallback: (patt: ThemaUtil.LevelPatt, voic: ThemaUtil.LevelVoic) => void\r\n    ) => {\r\n        // パターンメソッドでない場合処理しない\r\n        if (pattMet.method !== 'pattern') return;\r\n\r\n        const symbol = TheoryUtil.getSymbolFromKey(condition.symbolKey) as TheoryUtil.SymbolParams;\r\n        const rootIndex = condition.rootIndex;\r\n\r\n        const susts = pattMet.defs as ThemaUtil.LevelSust[];\r\n        susts.forEach(sust => {\r\n            const isMatchSust = condition.beatLen === sust.beat && condition.head === sust.head && condition.tail === sust.tail;\r\n            if (!isMatchSust) return 1;\r\n            sust.patts.forEach(patt => {\r\n                // patt.attrs.forEach((attr) => {\r\n                //     const isMatchAttr = symbol.attr === attr.attr && attr.symbols.includes(symbol.key);\r\n                //     if (!isMatchAttr) return 1;\r\n                //     attr.roots.forEach(root => {\r\n                //         const isMatchRoot = rootIndex >= root.minIdx && rootIndex <= root.maxIdx;\r\n                //         if (!isMatchRoot) return 1;\r\n                //         root.voics.forEach(voic => {\r\n                //             voicCallback(voic);\r\n                //         });\r\n                //     });\r\n                // });\r\n                attrsSearch(sust.patts, patt, symbol, rootIndex, preset, voicCallback, pattVoicCallback);\r\n                pattCallback(patt);\r\n            });\r\n        });\r\n    };\r\n\r\n    export const getDistinctionFromRelate = (struct: BackingState.StructInfo) => {\r\n        switch (struct.relation) {\r\n            case 'p1': return 1;\r\n            case 'M2':\r\n            case 'm2':\r\n                return 9;\r\n            case 'm3':\r\n            case 'M3':\r\n                return 3;\r\n            case 'p4':\r\n            case 'p5':\r\n            case 'a5':\r\n            case 'd5':\r\n                return 5;\r\n            case 'm7':\r\n            case 'M7':\r\n                return 7;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    /**\r\n     * ボイシングを許容するかどうか判定する\r\n     * @param voic ボイシング情報\r\n     * @param patternList パターン情報リスト\r\n     * @param pattIndex 選択中のパターン連番\r\n     * @returns 許容するかどうか\r\n     */\r\n    export const acceptVoic = (voic: VoicItemProps, patternList: PattItemProps[], pattIndex: number) => {\r\n        const curPatt = patternList[pattIndex];\r\n        const depend = curPatt.refer;\r\n        let masterIdx = -1;\r\n        patternList.some((patt, i) => {\r\n            if (depend !== -1 && patt.key === depend) {\r\n                masterIdx = i;\r\n                return;\r\n            }\r\n        });\r\n        const isBlank = voic.pattIdx === -1;\r\n        const isMatch = voic.pattIdx === pattIndex;\r\n        const isDepend = masterIdx === voic.pattIdx;\r\n        return isBlank || isMatch || isDepend;\r\n    }\r\n\r\n    export const getPresetList = (thema: ThemaUtil.LevelBase, conditionList: Condition[]): PresetItemProps[] => {\r\n        const list: PresetItemProps[] = [];\r\n        thema.meths.forEach(meth => {\r\n            meth.prenams.forEach(preset => {\r\n                const applyList = conditionList.map(con => {\r\n                    const backingList: ChordBacking[] = [];\r\n                    switch (meth.method) {\r\n                        case 'sustain': {\r\n                            searchSustMeth(meth, con, preset.seq, (voic: ThemaUtil.LevelVoic) => {\r\n                                backingList.push({\r\n                                    pattern: null,\r\n                                    voicingList: voic.source\r\n                                });\r\n                            });\r\n                        } break;\r\n                        case 'pattern': {\r\n                            searchPattMeth(meth, con, preset.seq, () => { }, () => { },\r\n                                (patt: ThemaUtil.LevelPatt, voic: ThemaUtil.LevelVoic) => {\r\n                                    backingList.push({\r\n                                        pattern: patt.source,\r\n                                        voicingList: voic.source\r\n                                    });\r\n                                });\r\n                        } break;\r\n                    }\r\n                    const backing = backingList.length === 0 ? null : backingList[0];\r\n                    const apply: Apply = {\r\n                        condition: con,\r\n                        backing\r\n                    };\r\n                    return apply;\r\n                });\r\n                list.push({\r\n                    method: meth.method,\r\n                    dispName: preset.name,\r\n                    applyList\r\n                });\r\n            });\r\n        });\r\n        return list;\r\n    }\r\n\r\n    export const matchCondition = (a: Condition, b: Condition) => {\r\n        return a.beatLen === b.beatLen && a.head === b.head && a.tail === b.tail &&\r\n            a.rootIndex === b.rootIndex && a.symbolKey === b.symbolKey;\r\n    }\r\n}\r\n\r\nexport default LibraryUtil;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport PresetSelectorFrame from \"../../../../thema/presetSelectorFrame\";\r\n\r\nnamespace PresetSelectorInput {\r\n\r\n    export const main = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(`[${e.key}]`);\r\n        // alert(config.nextElement);\r\n\r\n        const cache = store.systemState.cache as PresetSelectorFrame.CachePorps;\r\n        const update = () => {\r\n            // cache.updateBacking();\r\n            cache.invalidate();\r\n        }\r\n        const field = cache.field;\r\n\r\n        const moveList = (isDown: boolean) => {\r\n            if (!isDown && field.listIndex >= 1) {\r\n                field.listIndex--;\r\n                update();\r\n            } else if (isDown && field.listIndex < cache.presetList.length - 1) {\r\n                field.listIndex++;\r\n                update();\r\n            }\r\n        }\r\n\r\n        switch (e.key) {\r\n            case 'Enter': {\r\n                cache.applyAction();\r\n            } break;\r\n            case 'e': {\r\n                dispatcher.score.closeLibraryWnd();\r\n            } break;\r\n            case 'ArrowUp': {\r\n                moveList(false);\r\n            } break;\r\n            case 'ArrowDown': {\r\n                moveList(true);\r\n            } break;\r\n        }\r\n    }\r\n}\r\nexport default PresetSelectorInput;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport ThemaSelectorFrame from \"../../../../thema/themaSelectorFrame\";\r\nimport LibraryUtil from \"../../../../../utils/LibraryUtil\";\r\n\r\nnamespace ThemaSelectorInput {\r\n\r\n    export const main = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(`[${e.key}]`);\r\n        // alert(config.nextElement);\r\n\r\n        const cache = store.systemState.cache as ThemaSelectorFrame.CachePorps;\r\n        const update = () => {\r\n            // cache.updateBacking();\r\n            cache.invalidate();\r\n        }\r\n        const field = cache.field;\r\n\r\n        const moveList = (isDown: boolean) => {\r\n            if (field.focusSide === 0) {\r\n                // パターン\r\n                if (!isDown && field.pattIndex >= 1) {\r\n                    field.pattIndex--;\r\n                    field.voicIndex = 0;\r\n                    update();\r\n                } else if (isDown && field.pattIndex < cache.patternList.length - 1) {\r\n                    field.pattIndex++;\r\n                    field.voicIndex = 0;\r\n                    update();\r\n                }\r\n            } else {\r\n                // ボイシング\r\n                const patternList = cache.patternList;\r\n                const filteredList = cache.voicingList.filter((voic) => {\r\n                    return LibraryUtil.acceptVoic(voic, patternList, field.pattIndex);\r\n                });\r\n                if (!isDown && field.voicIndex >= 1) {\r\n                    field.voicIndex--;\r\n                    update();\r\n                } else if (isDown && field.voicIndex < filteredList.length - 1) {\r\n                    field.voicIndex++;\r\n                    update();\r\n                }\r\n            }\r\n        }\r\n\r\n        const moveSide = (isRight: boolean) => {\r\n            if (!isRight) {\r\n                if (field.focusSide === 1) {\r\n                    field.focusSide = 0;\r\n                    update();\r\n                }\r\n            } else {\r\n                if (field.focusSide === 0) {\r\n                    field.focusSide = 1;\r\n                    update();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!cache.isPreview) {\r\n            switch (e.key) {\r\n                case 'e': {\r\n                    dispatcher.score.closeLibraryWnd();\r\n                } break;\r\n                case 'Enter': {\r\n                    const pattern = cache.patternList[field.pattIndex];\r\n                    const voicing = cache.voicingList.filter(voic => {\r\n                        return LibraryUtil.acceptVoic(voic, cache.patternList, field.pattIndex);\r\n                    })[field.voicIndex];\r\n                    dispatcher.thema.mappingSelectorToScore(voicing.source, pattern.source);\r\n                    dispatcher.score.closeLibraryWnd();\r\n                } break;\r\n                case 'ArrowLeft': {\r\n                    moveSide(false);\r\n                } break;\r\n                case 'ArrowRight': {\r\n                    moveSide(true);\r\n                } break;\r\n                case 'ArrowUp': {\r\n                    moveList(false);\r\n                } break;\r\n                case 'ArrowDown': {\r\n                    moveList(true);\r\n                } break;\r\n            }\r\n        }\r\n        // プレビュー中か否かに影響されない\r\n        switch (e.key) {\r\n            case ' ': {\r\n                if (cache.isPermitTest()) {\r\n                    cache.testBacking();\r\n                }\r\n            } break;\r\n        }\r\n    }\r\n\r\n}\r\nexport default ThemaSelectorInput;","import styled, { css } from \"styled-components\";\r\n\r\nexport namespace SideFormStyles {\r\n\r\n    export const ___CSS_FORM = css`\r\n        display: inline-block;\r\n        /* width: 100px; */\r\n        height: 25px;\r\n        background-color: #bdbdbd;\r\n        border: 1px solid #000;\r\n        border-radius: 2px;\r\n        box-sizing: border-box;\r\n        color: #303030;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        text-align: center;\r\n    `;\r\n\r\n    export const ___CSS_TITLE = css`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 26px;\r\n        /* background-color: #f0f0f0; */\r\n        background: linear-gradient(to bottom, #707070, #b3b3b3, #707070);\r\n        border: 1px solid #222222;\r\n        font-size: 20px;\r\n        color: #ffffff;\r\n        font-weight: 600;\r\n        line-height: 20px;\r\n        box-sizing: border-box;\r\n        /* border: 1px solid #c50000; */\r\n        text-align: center;\r\n    `;\r\n\r\n    export const createNumberForm = (value: number, isEnable: boolean,\r\n         onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n         min: number, max:number, step:number) => {\r\n\r\n        return (\r\n            <_NumberForm isEnable={isEnable}>\r\n                <input\r\n                    type=\"number\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"range\" min={min} max={max} step={step}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </_NumberForm>\r\n        );\r\n    }\r\n\r\n    const _NumberForm = styled.div<{\r\n        isEnable: boolean;\r\n    }>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 55px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 5px;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n    `;\r\n}","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport BackingEditorInput from \"./backingEditorInput\";\r\nimport { NoteBasicInput } from \"./noteBasicInput\";\r\nimport PresetSelectorInput from \"./presetSelectorInput\";\r\nimport ThemaSelectorInput from \"./themaSelectorInput\";\r\n\r\nexport const NoteKeyDown = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const curType = data.chordList[state.focusIndex].type;\r\n    const isElement = curType !== 'init'\r\n\r\n\r\n    // プレビュー再生時\r\n    if (state.isPreview) {\r\n        switch (e.key) {\r\n            case ' ': {\r\n                HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n            }\r\n                break;\r\n        }\r\n        return;\r\n    } else {\r\n        switch (store.scoreState.hideMenu) {\r\n            case 'none': {\r\n                if (isElement) {\r\n                    if (keySwitch.control) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                const element = data.chordList[state.focusIndex];\r\n                                if (element.type === \"chord\") {\r\n                                    const detail = element.detail as DetailChord;\r\n                                    if (detail.root != null) {\r\n                                        dispatcher.score.cloneBacking();\r\n                                    }\r\n                                }\r\n                            }\r\n                                break;\r\n                            case 'x': {\r\n                                dispatcher.score.copyElementList();\r\n                            }\r\n                                break;\r\n                            case 'v': {\r\n                                if (state.copiedElementList != null) {\r\n                                    dispatcher.score.pasteElementList();\r\n                                } else if (state.cloneBacking != null) {\r\n\r\n                                    const element = data.chordList[state.focusIndex];\r\n                                    if (element.type === \"chord\") {\r\n                                        const detail = element.detail as DetailChord;\r\n                                        if (detail.root != null) {\r\n                                            dispatcher.score.pastBacking();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                                break;\r\n                            case 's': {\r\n                                dispatcher.score.saveFile();\r\n                                // DataUtil.saveFile(JSON.stringify(data), state);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (keySwitch.distMode) {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                dispatcher.score.moveDist(false);\r\n                            }\r\n                                break;\r\n                            case 'ArrowRight': {\r\n                                dispatcher.score.moveDist(true);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (keySwitch.sustainMode) {\r\n                        switch (e.key) {\r\n                            case config.decRoot: {\r\n                                dispatcher.score.incrementDegreeRoot(false);\r\n                            }\r\n                                break;\r\n                            case config.incRoot: {\r\n                                dispatcher.score.incrementDegreeRoot(true);\r\n                            }\r\n                                break;\r\n                            case config.decBeat: {\r\n                                dispatcher.score.incrementBeatLen(false);\r\n                            }\r\n                                break;\r\n                            case config.incBeat: {\r\n                                dispatcher.score.incrementBeatLen(true);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (keySwitch.minHeadMode) {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                dispatcher.score.incrementMinuteValRelation(false, 1);\r\n                            }\r\n                                break;\r\n                            case 'ArrowRight': {\r\n                                dispatcher.score.incrementMinuteValRelation(false, -1);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (keySwitch.minTailMode) {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                dispatcher.score.incrementMinuteValRelation(true, -1);\r\n                            }\r\n                                break;\r\n                            case 'ArrowRight': {\r\n                                dispatcher.score.incrementMinuteValRelation(true, 1);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (keySwitch.chordMode) {\r\n                        // switch (e.key) {\r\n                        //     case 'ArrowUp': {\r\n                        //         dispatcher.symbol.toNext(false);\r\n                        //     }\r\n                        //         break;\r\n                        //     case 'ArrowDown': {\r\n                        //         dispatcher.symbol.toNext(true);\r\n                        //     }\r\n                        //         break;\r\n                        //     case 'ArrowLeft': {\r\n                        //         dispatcher.symbol.toBase();\r\n                        //     }\r\n                        //         break;\r\n                        //     case 'ArrowRight': {\r\n                        //         dispatcher.symbol.toDerive();\r\n                        //     }\r\n                        //         break;\r\n                        // }\r\n                    } else if (keySwitch.symbolMode) {\r\n                        switch (e.key) {\r\n                            case 'ArrowUp': {\r\n                                dispatcher.symbol.toNext(false);\r\n                            }\r\n                                break;\r\n                            case 'ArrowDown': {\r\n                                dispatcher.symbol.toNext(true);\r\n                            }\r\n                                break;\r\n                            case 'ArrowLeft': {\r\n                                dispatcher.symbol.toBase();\r\n                            }\r\n                                break;\r\n                            case 'ArrowRight': {\r\n                                dispatcher.symbol.toDerive();\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else {\r\n                        NoteBasicInput(e, store, dispatcher);\r\n                    }\r\n                }\r\n            } break;\r\n            case 'backing': {\r\n                BackingEditorInput.main(e, store, dispatcher);\r\n            } break;\r\n            case 'library': {\r\n                ThemaSelectorInput.main(e, store, dispatcher);\r\n            } break;\r\n            case 'preset': {\r\n                PresetSelectorInput.main(e, store, dispatcher);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const NoteKeySwitch = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n    const state = store.scoreState;\r\n    if (!state.isPreview) {\r\n        // if (state.hideMenu === 'none') {\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.scoreState.keySwitch;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n        switch (e.key) {\r\n            case 'Control': {\r\n                keySwitch.control = isPress;\r\n                dispatcher.score.setKeySwitch(keySwitch);\r\n            }\r\n                break;\r\n            case config.distMode: {\r\n                if (!keySwitch.control) {\r\n                    keySwitch.distMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.edit1: {\r\n                if (!(keySwitch.control || keySwitch.distMode)) {\r\n                    keySwitch.sustainMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'v': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode)) {\r\n                    keySwitch.chordMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case config.edit2: {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode)) {\r\n                    keySwitch.symbolMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'd': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode)) {\r\n                    keySwitch.minHeadMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n            case 'g': {\r\n                if (!(keySwitch.control || keySwitch.distMode || keySwitch.sustainMode || keySwitch.chordMode || keySwitch.symbolMode || keySwitch.minHeadMode)) {\r\n                    keySwitch.minTailMode = isPress;\r\n                    dispatcher.score.setKeySwitch(keySwitch);\r\n                }\r\n            }\r\n                break;\r\n        }\r\n        // }\r\n    }\r\n    if (isPress) {\r\n        NoteKeyDown(e, store, dispatcher);\r\n    }\r\n\r\n}","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { KeyboardEvent } from \"react\";\r\nimport HarmonizeUtil from \"../../../../../utils/harmonizeUtil\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport LibraryUtil from \"../../../../../utils/LibraryUtil\";\r\n\r\nexport const NoteBasicInput = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n    const config = store.userEnv.keyConfig.note;\r\n    const keySwitch = store.scoreState.keySwitch;\r\n    // alert(e.key);\r\n    // alert(config.nextElement);\r\n\r\n    const data = store.scoreData;\r\n    const state = store.scoreState;\r\n    const element = data.chordList[state.focusIndex];\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n    const curType = element.type;\r\n    const isElement = curType !== 'init'\r\n\r\n    const libEnables = LibraryUtil.getEnableState(store);\r\n\r\n    switch (curType) {\r\n        case 'chord': {\r\n            const hideMode = store.scoreState.hideMenu;\r\n            const detail = data.chordList[state.focusIndex].detail as DetailChord;\r\n            const cache = state.elementCacheList[state.focusIndex];\r\n            switch (e.key) {\r\n                case 'z': {\r\n                    HarmonizeUtil.previewCurHarmony(store, dispatcher);\r\n                } break;\r\n                case 'e': {\r\n                    if (libEnables.isUseLib && libEnables.isChordElement && !libEnables.isRangeSelect) {\r\n                        dispatcher.score.openLibraryWnd(false);\r\n                    }\r\n                } break;\r\n                case 'b': {\r\n                    if (detail.root != null) {\r\n                        dispatcher.backing.openBackingEditor();\r\n                    }\r\n                } break;\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7': {\r\n                    dispatcher.score.setDiatonicChord(cache.scale, Number(e.key) - 1);\r\n                } break;\r\n            }\r\n        } break;\r\n    }\r\n    switch (e.key) {\r\n        // 要素の移動\r\n        case config.left: {\r\n            if (state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(false);\r\n            } else {\r\n                dispatcher.score.releaseRange(false);\r\n            }\r\n        } break;\r\n        case config.right: {\r\n            if (state.focusIndex === state.distIndex) {\r\n                dispatcher.score.moveElement(true);\r\n            } else {\r\n                dispatcher.score.releaseRange(true);\r\n            }\r\n        } break;\r\n        // セクションの移動\r\n        case config.up: {\r\n            dispatcher.score.moveSection(false);\r\n        } break;\r\n        case config.down: {\r\n            dispatcher.score.moveSection(true);\r\n        } break;\r\n        case config.addChord: {\r\n            dispatcher.score.addChordElement();\r\n        } break;\r\n        case config.addSection: {\r\n            dispatcher.score.addSectionElement();\r\n        } break;\r\n        case 'm': {\r\n            dispatcher.score.addAlterElement();\r\n        } break;\r\n        case config.deleteCur: {\r\n            dispatcher.score.removeElement();\r\n        } break;\r\n        case 'e': {\r\n            if (libEnables.isUseLib && libEnables.isRangeSelect) {\r\n                dispatcher.score.openLibraryWnd(true);\r\n            }\r\n        } break;\r\n        case 'n': {\r\n            dispatcher.score.removeBacking();\r\n        } break;\r\n        case ' ': {\r\n            // if (!chordCache.backingError) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n            // }\r\n        } break;\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BeatSignature, DetailAlter as DetailAlter, AlterType, ModulateRelation, TempoRelation } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n/**\r\n * アルターブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormAlter = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailAlter;\r\n\r\n    const type = detail.alterType;\r\n\r\n    const update = () => {\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const createAlertTypeItem = (value: AlterType | '-', isActive: boolean): JSX.Element => {\r\n        const type = value === '-' ? null : value;\r\n        return <_Form isActive={isActive}\r\n            onClick={() => {\r\n                //値が変わった時のみ処理を実行\r\n                if (detail.alterType !== type) {\r\n                    detail.alterType = type;\r\n                    // 全ての項目を初期化\r\n                    detail.modRel = null;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    detail.tempoRel = null;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    detail.beatSignature = '4/4';\r\n                    update();\r\n                }\r\n            }}> {value}</_Form >;\r\n    }\r\n\r\n    const createModulateRelationItem = (value: ModulateRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'modulate' && rel == detail.modRel}\r\n            onClick={() => {\r\n                if (detail.modRel !== rel) {\r\n                    detail.modRel = rel;\r\n                    detail.dommVal = 0;\r\n                    detail.keyAdj = 0;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createTempoRelationItem = (value: TempoRelation | '-'): JSX.Element => {\r\n        const rel = value === '-' ? null : value;\r\n        return <_Form isActive={detail.alterType === 'tempo' && rel == detail.tempoRel}\r\n            onClick={() => {\r\n                if (detail.tempoRel !== rel) {\r\n                    detail.tempoRel = rel;\r\n                    detail.tempoDiff = 0;\r\n                    detail.tempoRate = 100;\r\n                    detail.tempoAbs = 100;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const createBeatItem = (value: BeatSignature): JSX.Element => {\r\n        return <_Form isActive={detail.alterType === 'beat' && detail.beatSignature === value}\r\n            onClick={() => {\r\n                if (detail.beatSignature !== value) {\r\n                    detail.beatSignature = value;\r\n                    update();\r\n                }\r\n            }}>{value}</_Form>;\r\n    }\r\n\r\n    const donmmItemJsxList = <_ParamDiv isEnable={detail.modRel === 'domm'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'domm' && value == detail.dommVal}\r\n            onClick={() => {\r\n                detail.dommVal = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>\r\n    })}</_ParamDiv>;\r\n\r\n    const keyAdjItemJsxList = <_ParamDiv isEnable={detail.modRel === 'key'}>{[-3, -2, -1, 0, 1, 2, 3].map((value, i) => {\r\n        const sign = value > 0 ? '+' : '';\r\n        return <_ParamItem key={i} isActive={detail.alterType === 'modulate' && detail.modRel === 'key' && value == detail.keyAdj}\r\n            onClick={() => {\r\n                detail.keyAdj = value;\r\n                update();\r\n            }}>{`${sign}${value}`}</_ParamItem>;\r\n    })}</_ParamDiv>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Group isEnable={true}>\r\n                <_CategoryLabel>Type</_CategoryLabel>\r\n                {createAlertTypeItem('-', type == null)}\r\n                {createAlertTypeItem('modulate', type === 'modulate')}\r\n                {createAlertTypeItem('tempo', type === 'tempo')}\r\n                {createAlertTypeItem('beat', type === 'beat')}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'modulate'}>\r\n                <_CategoryLabel>Modulate</_CategoryLabel>\r\n                {createModulateRelationItem('-')}\r\n                {createModulateRelationItem('domm')}\r\n                {donmmItemJsxList}\r\n                {createModulateRelationItem('parallel')}\r\n                {createModulateRelationItem('relative')}\r\n                {createModulateRelationItem('key')}\r\n                {keyAdjItemJsxList}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'tempo'}>\r\n                <_CategoryLabel>Tempo</_CategoryLabel>\r\n                {createTempoRelationItem('-')}\r\n                {createTempoRelationItem('diff')}\r\n                {SideFormStyles.createNumberForm(detail.tempoDiff,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'diff',\r\n                    (e) => {\r\n                        detail.tempoDiff = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, -100, 100, 1)}\r\n                {createTempoRelationItem('rate')}\r\n                {SideFormStyles.createNumberForm(detail.tempoRate,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'rate',\r\n                    (e) => {\r\n                        detail.tempoRate = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n                {createTempoRelationItem('abs')}\r\n                {SideFormStyles.createNumberForm(detail.tempoAbs,\r\n                    detail.alterType === 'tempo' && detail.tempoRel === 'abs',\r\n                    (e) => {\r\n                        detail.tempoAbs = e.currentTarget.valueAsNumber;\r\n                        update();\r\n                    }, 10, 200, 1)}\r\n            </_Group>\r\n            <_Group isEnable={detail.alterType === 'beat'}>\r\n                <_CategoryLabel>Beat</_CategoryLabel>\r\n                {createBeatItem('2/4')}\r\n                {createBeatItem('4/4')}\r\n                {createBeatItem('3/4')}\r\n                {createBeatItem('6/8')}\r\n                {createBeatItem('9/8')}\r\n                {createBeatItem('12/8')}\r\n            </_Group>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormAlter;\r\n\r\nconst _Wrap = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        background-color: #b3b5c5;\r\n        `;\r\n\r\nconst _Group = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 0 0 0 4px;\r\n    ${props => props.isEnable ? '' : css`\r\n    pointer-events: none;\r\n    opacity: 0.5;\r\n`}\r\n        `;\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Form = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        margin-top: 1px;\r\n        width: 100%;\r\n        background-color: #c1cdd4;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\nconst _ParamDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n        margin: 1px;\r\n        background-color: #070707;\r\n        ${props => props.isEnable ? '' : css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `}\r\n        `;\r\nconst _ParamItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n        ${SideFormStyles.___CSS_FORM}\r\n        width: 29px;\r\n        background-color: #dddddd;\r\n        ${props => !props.isActive ? '' : css`\r\n        background-color: #e0c83e;\r\n    `}\r\n        `;\r\n\r\n\r\nconst _ValueForm = styled.div`\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 24px;\r\n        /* margin: 5px 0 0 0; */\r\n        text-align: left;\r\n        background-color: #ececec;\r\n\r\n        & * {\r\n            display: inline-block;\r\n            box-sizing: border-box;\r\n            vertical-align: top;\r\n    }\r\n        & input:nth-child(1) {\r\n            background-color: #dddddd;\r\n            width: 60px;\r\n            height: calc(100% - 4px);\r\n            margin: 2px 0 0 0;\r\n            border: 1px solid #9b9b9b;\r\n            border-radius: 4px;\r\n    }\r\n        & input:nth-child(2) {\r\n            margin-left: 5px;\r\n            background-color: #f00;\r\n            width: calc(100% - 70px);\r\n            height: 100%;\r\n    }\r\n        `;","import styled, { css } from \"styled-components\";\r\n\r\nconst JUDGE_INFO_LIST: {\r\n    value: number, label: string\r\n}[] = [\r\n        { value: -2, label: '-/8' },\r\n        { value: -1, label: '-/16' },\r\n        { value: 0, label: '±0' },\r\n        { value: 1, label: '+/16' },\r\n        { value: 2, label: '+/8' }\r\n    ];\r\n\r\nexport const MinuteForm = (props: {\r\n    isHead: boolean;\r\n    value: number;\r\n    setValue: (value: number) => void;\r\n}) => {\r\n\r\n    const rateMinus = props.value >= 0 ? 0 : Math.abs(props.value) * 50;\r\n    const ratePlus = props.value <= 0 ? 0 : Math.abs(props.value) * 50;\r\n\r\n    const createJudgeItem = (key: number, value: number, label: string) => {\r\n        const isActive = props.value === value;\r\n        return (\r\n            <_JudgeItem key={key} isActive={isActive} onClick={() => props.setValue(value)} >\r\n                {!isActive ? '' : label}\r\n            </_JudgeItem>\r\n        )\r\n    }\r\n    const isRed = Math.abs(props.value) === 1;\r\n\r\n    const JudgeJsxList = JUDGE_INFO_LIST.map((judge, i) => {\r\n        return createJudgeItem(i, judge.value, judge.label);\r\n    });\r\n\r\n    return (\r\n        <_Wrap isHead={props.isHead}>\r\n            <_View>\r\n                <_ViewFrame isLeft={true} isRed={isRed} rate={!props.isHead ? rateMinus : ratePlus}><div /></_ViewFrame>\r\n                <_ViewFrame isLeft={false} isRed={isRed} rate={!props.isHead ? ratePlus : rateMinus}><div /></_ViewFrame>\r\n            </_View>\r\n            <_Judge>{!props.isHead ? JudgeJsxList : JudgeJsxList.reverse()}</_Judge>\r\n        </_Wrap>\r\n    );\r\n};\r\n\r\nexport default MinuteForm;\r\n\r\nconst _Wrap = styled.div<{\r\n    isHead: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #bfd380;\r\n    text-align: left;\r\n`;\r\nconst _Judge = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 9;\r\n`;\r\n\r\nconst _JudgeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(20% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    background-color: #0000001a;\r\n    /* border: 1px solid #4d4d4d91; */\r\n    border-radius: 4px;\r\n    ${props => !props.isActive ? '' : css`\r\n        border: 1px solid #c00000c5;\r\n    `}\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    /* opacity: 0.15; */\r\n    &:hover {\r\n        background-color: #ffffff24;\r\n    }\r\n`;\r\nconst _View = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    /* position: absolute;\r\n    top: 0;\r\n    left: 0; */\r\n    z-index: 8;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ViewFrame = styled.div<{\r\n    isRed: boolean;\r\n    isLeft: boolean;\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 16px;\r\n    margin-top: 7px;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n\r\n    & div {\r\n        position: absolute;\r\n        top: 0;\r\n        height: 100%;\r\n        width: ${props => props.rate}%;\r\n        ${props => props.isRed ? css`\r\n            background: linear-gradient(to right, #0066ff, #7691a3);\r\n        ` : css`\r\n            background: linear-gradient(to left, #ff0000, #a37676);\r\n        `}\r\n        ${props => props.isLeft ? css`\r\n            right: 0;\r\n            border-radius: 10px 0 0 10px;\r\n        ` : css`\r\n            left: 0;\r\n            border-radius: 0 10px 10px 0;\r\n        `}\r\n    }\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\nimport MinuteForm from \"./minuteForm\";\r\nimport BackingUtil from \"../../../../../utils/backingUtil\";\r\n\r\n/**\r\n * コードブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormChord = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailChord;\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n\r\n    const beatItemsJsx: JSX.Element[] = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        const isExist = detail.beatLen >= (i + 1);\r\n        beatItemsJsx.push(\r\n            <_BeatItem key={i}\r\n                isExist={isExist}\r\n                isActive={detail.beatLen === i + 1}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    data.chordList = data.chordList.slice();\r\n                    detail.beatLen = (i + 1);\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n                }}>\r\n                <span></span>\r\n            </_BeatItem>\r\n        );\r\n    }\r\n\r\n    const rootItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.DEGREE_ALL.forEach((degree, i) => {\r\n        const isRootActive = JSON.stringify(detail.root) === JSON.stringify(degree);\r\n        const isOnActive = detail.on != null && JSON.stringify(detail.on) === JSON.stringify(degree);\r\n        const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n        const isDiatonic = degree != null && scaleIndexies.includes(degree.index);\r\n        rootItemsJsx.push(\r\n            <_RootItem key={i}\r\n                isRootActive={isRootActive}\r\n                isOnActive={isOnActive}\r\n                isDiatonic={isDiatonic}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    // 分母が設定済みの箇所を上書きする\r\n                    if (isOnActive || degree == null) {\r\n                        detail.on = null;\r\n                    }\r\n                    detail.root = degree == null ? null : { ...degree };\r\n                    if (degree == null) {\r\n                        detail.symbolKey = 'major';\r\n                    }\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n\r\n                    // キャッシュの更新\r\n                    const root = detail.root as TheoryUtil.DegreeProps;\r\n                    const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                    [chordCache.chordFullName, chordCache.structList] =\r\n                        BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n                onContextMenu={() => {\r\n                    const data = store.scoreData;\r\n                    // ルートが未設定の箇所にのみ設定可能\r\n                    if (detail.root != null && !isRootActive) {\r\n                        // 設定済みの箇所をクリックで解除\r\n                        if (isOnActive) {\r\n                            detail.on = null;\r\n                        } else {\r\n                            detail.on = degree == null ? null : { ...degree };\r\n                        }\r\n                        data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                        dispatcher.score.setScoreData(data);\r\n\r\n                        // キャッシュの更新\r\n                        const root = detail.root as TheoryUtil.DegreeProps;\r\n                        const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey) as TheoryUtil.SymbolParams;\r\n                        [chordCache.chordFullName, chordCache.structList] =\r\n                            BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                        dispatcher.score.setScoreState(state);\r\n                    }\r\n                }}\r\n            >\r\n                {degree == null ? '-' : <>\r\n                    {TheoryUtil.getDegreeRoot(degree)} ({TheoryUtil.getRootName(degree, cache.keyIndex)})\r\n                </>}\r\n            </_RootItem>\r\n        );\r\n    });\r\n\r\n    const symbolItemsJsx: JSX.Element[] = [];\r\n    TheoryUtil.SYMBOL_LIST.forEach((symbol, i) => {\r\n        const isActive = detail.root != null && symbol.key === detail.symbolKey;\r\n        symbolItemsJsx.push(\r\n            <_SymbolItem key={i}\r\n                isActive={isActive}\r\n                isDiatonic={true}\r\n                onClick={() => {\r\n                    const data = store.scoreData;\r\n                    detail.symbolKey = symbol.key;\r\n                    data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                    dispatcher.score.setScoreData(data);\r\n\r\n                    // キャッシュの更新\r\n                    const root = detail.root as TheoryUtil.DegreeProps;\r\n                    [chordCache.chordFullName, chordCache.structList] =\r\n                        BackingUtil.getChordDetails(root, cache.keyIndex, detail.on, symbol);\r\n                    dispatcher.score.setScoreState(state);\r\n                }}\r\n            >\r\n                [{symbol.name}]\r\n            </_SymbolItem>\r\n        );\r\n    });\r\n\r\n    /**\r\n     * シンコペーションの入力フォームを生成するコールバック\r\n     * @param isHead 頭対象フラグ（falseの場合後ろが対象）\r\n     * @returns JSX\r\n     */\r\n    const createMinuteForm = (isHead: boolean): JSX.Element => {\r\n        const minute = detail.minute;\r\n        const [value, setValue]: [number, (value: number) => void] = isHead ? [\r\n            minute.head,\r\n            (value: number) => {\r\n                // minute.head = value;\r\n                // dispatcher.score.setScoreData(store.scoreData);\r\n                const adjust = value - minute.head;\r\n                dispatcher.score.incrementMinuteValRelation(false, adjust);\r\n            }\r\n        ] : [\r\n            minute.tail,\r\n            (value: number) => {\r\n                // minute.tail = value;\r\n                // dispatcher.score.setScoreData(store.scoreData);\r\n                const adjust = value - minute.tail;\r\n                dispatcher.score.incrementMinuteValRelation(true, adjust);\r\n            }\r\n        ];\r\n        return <MinuteForm value={value} setValue={setValue} isHead={isHead} />\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Timing>\r\n                <_CategoryLabel>{'Beat length'}</_CategoryLabel>\r\n                <_BeatDiv>\r\n                    {beatItemsJsx}\r\n                </_BeatDiv>\r\n                <_Minute>\r\n                    <_CategoryLabel>{'Minute head'}</_CategoryLabel>\r\n                    {createMinuteForm(true)}\r\n                    {/* <_MinuteItem isReverse={true} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.head}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.head = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                    <_CategoryLabel>{'Minute tail'}</_CategoryLabel>\r\n                    {createMinuteForm(false)}\r\n                    {/* <MinuteForm isHeadAdjust={false} /> */}\r\n                    {/* <_MinuteItem isReverse={false} type=\"range\" step={0.25} min={-0.5} max={0.5}\r\n                        value={detail.minute.tail}\r\n                        onChange={(e) => {\r\n                            const data = store.scoreData;\r\n                            data.chordList = data.chordList.slice();\r\n                            detail.minute.tail = Number(e.target.value);\r\n                            data.chordList[store.scoreState.focusIndex].detail = detail;\r\n                            dispatcher.score.setScoreData(data);\r\n                        }}\r\n                    /> */}\r\n                </_Minute>\r\n            </_Timing>\r\n            <_Chord>\r\n                <_RootDiv>\r\n                    {rootItemsJsx}\r\n                </_RootDiv>\r\n                <_SymbolDiv\r\n                    isDisable={detail.root == null}\r\n                >\r\n                    {symbolItemsJsx}\r\n                </_SymbolDiv>\r\n            </_Chord>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormChord;\r\n\r\n\r\nconst _CategoryLabel = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n\r\nconst _Timing = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 100px; */\r\n    text-align: left;\r\n    background-color: #979797;\r\n`;\r\n\r\nconst _BeatDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #afafaf;\r\n`;\r\nconst _BeatItem = styled.div<{\r\n    isExist: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 25%;\r\n    height: 20px;\r\n    text-align: left;\r\n    background-color: #696969;\r\n\r\n    & span{\r\n        display: inline-block;\r\n        margin: 2px 0 0 3px;\r\n        width: calc(100% - 6px);\r\n        height: calc(100% - 4px);\r\n        background-color: #9b8585;\r\n        ${props => !props.isActive ? '' : css`\r\n            /* border: solid 1px #fff; */\r\n        `}\r\n        box-sizing: border-box;\r\n        border-radius: 6px;\r\n        ${props => !props.isExist ? '' : css`\r\n            /* background-color: #ebf37eb7; */\r\n            background: linear-gradient(to bottom, #c5c5c5d2, #f3f3f3d2, #c5c5c5d2);\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    text-align: left;\r\n    background-color: #cecece;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    margin-top: 5px;\r\n    width: 100%;\r\n    /* height: 360px; */\r\n    text-align: left;\r\n    /* background-color: #000000; */\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _RootDiv = styled.div`\r\n    display: inline-block;\r\n    width: 90px;\r\n    margin: 0 0 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #e6e6e6; */\r\n`;\r\nconst _RootItem = styled.div<{\r\n    isRootActive: boolean;\r\n    isOnActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    height: 25px;\r\n    text-align: left;\r\n    background-color: #90bbcc;\r\n    ${props => !props.isRootActive ? '' : css`background-color: #d1c521b8;`}\r\n    ${props => !props.isOnActive ? '' : css`background-color: #6070ffbc;`}\r\n    border: 1px solid #000;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    color: #616161;\r\n    ${props => !props.isDiatonic ? '' : css`color: #ffffff;`}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    & span {\r\n        color: #9e9e9e;\r\n    }\r\n    &:hover {\r\n        background-color: #99999940;\r\n        ${props => !props.isRootActive ? '' : css`background-color: #cc6363b8;`}\r\n        ${props => !props.isOnActive ? '' : css`background-color: #6374ccb8;`}\r\n    }\r\n`;\r\n\r\nconst _SymbolDiv = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 93px);\r\n    margin: 0 1px 0 1px;\r\n    height: 100%;\r\n    text-align: left;\r\n    ${props => !props.isDisable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n    isDiatonic: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    margin: 1px 0 0 0;\r\n    width: 100%;\r\n    background-color: #a1cc90;\r\n    ${props => !props.isActive ? '' : css`background-color: #d1c521b8;`}\r\n    color: #fff;\r\n    ${props => !props.isDiatonic ? '' : css`color: #fff;`}\r\n    /* & span {\r\n        color: #f000;\r\n    } */\r\n    &:hover {\r\n        background-color: #dddddd40;\r\n        ${props => !props.isActive ? '' : css`background-color: #cc6363b8;`}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailInit, DetailSection, Scale, BeatSignature } from \"../../../../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * イニットブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormInit = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const data = store.scoreData;\r\n    const detail = data.chordList[0].detail as DetailInit;\r\n\r\n    const update = () => {\r\n        data.chordList = data.chordList.slice();\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    }\r\n\r\n    const scaleItemJsxList: JSX.Element[] = TheoryUtil.SCALE_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_ScaleItem key={i} isActive={detail.scale === item} onClick={() => {\r\n                detail.scale = item as Scale;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_ScaleItem>\r\n        )\r\n    });\r\n\r\n    const keyList = detail.scale === 'major' ? TheoryUtil.KEY12_MAJOR_SCALE_LIST : TheoryUtil.KEY12_MINOR_SCALE_LIST;\r\n    const keyItemJsxList: JSX.Element[] = keyList.map((item, i) => {\r\n        const scale = detail.scale;\r\n        return (\r\n            <_KeyItem key={i} isActive={detail.keyIndex === i} onClick={() => {\r\n                detail.keyIndex = i;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {`${item} ${scale}`}\r\n            </_KeyItem>\r\n        )\r\n    });\r\n\r\n    const rateItemJsxList: JSX.Element[] = TheoryUtil.BEAT_DEF_LIST.map((item, i) => {\r\n        return (\r\n            <_RateItem key={i} isActive={detail.beatSignature === item} onClick={() => {\r\n                detail.beatSignature = item as BeatSignature;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }}>\r\n                {item}\r\n            </_RateItem>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_LabelTitle>Scale</_LabelTitle>\r\n            <_ScaleWrap>{scaleItemJsxList}</_ScaleWrap>\r\n            <_LabelTitle>Key</_LabelTitle>\r\n            <_KeyWrap>{keyItemJsxList}</_KeyWrap>\r\n            <_LabelTitle>Tempo</_LabelTitle>\r\n            {SideFormStyles.createNumberForm(detail.bpm, true, (e) => {\r\n                detail.bpm = e.currentTarget.valueAsNumber;\r\n                // data.chordList = data.chordList.slice();\r\n                update();\r\n            }, 30, 220, 1)}\r\n            <_LabelTitle>Rate</_LabelTitle>\r\n            <_RateWrap>{rateItemJsxList}</_RateWrap>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormInit;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    background-color: #9b9eb8;\r\n`;\r\n\r\nconst _LabelTitle = styled.div`\r\n    ${SideFormStyles.___CSS_TITLE}\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _ScaleWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _ScaleItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 50%;\r\n    margin: 1px 0 0 0;\r\n\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _KeyWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _KeyItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    width: 100%;\r\n    margin: 1px 0 0 0;\r\n    \r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n`;\r\n\r\n\r\nconst _TempoWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 24px;\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    background-color: #ececec;\r\n\r\n    & * {\r\n        display: inline-block;\r\n        box-sizing: border-box;\r\n        vertical-align: top;\r\n    }\r\n    & input:nth-child(1) {\r\n        background-color: #dddddd;\r\n        width: 60px;\r\n        height: calc(100% - 4px);\r\n        margin: 2px 0 0 0;\r\n        border: 1px solid #9b9b9b;\r\n        border-radius: 4px;\r\n    }\r\n    & input:nth-child(2) {\r\n        margin-left: 5px;\r\n        background-color: #f00;\r\n        width: calc(100% - 70px);\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\n\r\nconst _RateWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 24px; */\r\n    /* margin: 5px 0 0 0; */\r\n    text-align: left;\r\n    /* background-color: #ececec; */\r\n`;\r\n\r\nconst _RateItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    border: solid 1px #fff;\r\n    color: #fff;\r\n    margin: 1px 0 0 0;\r\n    /* margin: 5px 0 0 0; */\r\n    background-color: #61b47d;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #da909082;\r\n    `}\r\n\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord, DetailSection } from \"../../../../../redux/store/score/scoreData\";\r\nimport DummyUtil from \"../../../../../utils/dummyUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { SideFormStyles } from \"./sideFromStyles\";\r\n\r\n\r\n/**\r\n * セクションブロック選択時のサイド要素エディタ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst SideFormSection = (props: {\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const cur = store.scoreData.chordList[state.focusIndex];\r\n    const detail = cur.detail as DetailSection;\r\n\r\n    const setLabelName = (value: string) => {\r\n        detail.labelName = value;\r\n        store.scoreData.chordList = store.scoreData.chordList.slice();\r\n        dispatcher.score.setScoreData(store.scoreData);\r\n    }\r\n\r\n    const templateItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        DummyUtil.SECTION_CATEGORY.forEach((item) => {\r\n            const isActive = detail.labelName.indexOf(item) === 0;\r\n            jsxList.push(\r\n                <_TemplateItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(item);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_TemplateItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    const numberItemJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        const splitList = detail.labelName.split(' ');\r\n        DummyUtil.SECTION_NO.forEach((item) => {\r\n            const isActive = splitList[splitList.length - 1] === item.toString();\r\n            jsxList.push(\r\n                <_NumberItem key={jsxList.length} isActive={isActive}\r\n                    onClick={() => {\r\n                        setLabelName(`${splitList[0]} ${item}`);\r\n                    }}\r\n                >\r\n                    {item}\r\n                </_NumberItem>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [detail.labelName]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_DirectText type=\"text\"\r\n                value={detail.labelName}\r\n                onChange={(e) => {\r\n                    setLabelName(e.target.value);\r\n                }}\r\n            />\r\n            <_SelectDiv>\r\n                <_TemplateFrame>{templateItemJsxList}</_TemplateFrame>\r\n                <_NumberFrame>{numberItemJsxList}</_NumberFrame>\r\n            </_SelectDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SideFormSection;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    /* background-color: #b89b9b; */\r\n`;\r\n\r\nconst _DirectText = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    text-align: left;\r\n    background-color: #bbbbbb;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #a30000;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n`;\r\n\r\n\r\n\r\nconst _ItemBase = styled.div<{\r\n}>`\r\n    ${SideFormStyles.___CSS_FORM}\r\n    width: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _SelectDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    background-color: #acacac;\r\n`;\r\n\r\nconst _TemplateFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(60% - 4px);\r\n    margin: 0 2px 0 2px;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _NumberFrame = styled.div`\r\n    display: inline-block;\r\n    width: calc(40% - 2px);\r\n    margin: 0 2px 0 0;\r\n    text-align: center;\r\n    background-color: #dac3d8;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TemplateItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #6182b4; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n\r\nconst _NumberItem = styled(_ItemBase) <{\r\n    isActive: boolean;\r\n}>`\r\n    /* background-color: #61b4b0; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #ad993fe6;\r\n    `}\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport SideFormAlter from \"./sideFormAlter\";\r\nimport SideFormChord from \"./sideFormChord\";\r\nimport SideFormInit from \"./sideFormInit\";\r\nimport SideFormSection from \"./sideFormSection\";\r\n\r\nconst HarmSideForm = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.scoreState;\r\n    const chordList = store.scoreData.chordList;\r\n\r\n    if (state.focusIndex === -1 || state.focusIndex > chordList.length - 1) {\r\n        return <></>;\r\n    }\r\n\r\n    const element = chordList[state.focusIndex];\r\n\r\n    return (\r\n        <_Wrap>\r\n            {(() => {\r\n                switch (element.type) {\r\n                    case 'init': return <SideFormInit />;\r\n                    case 'section': return <SideFormSection />;\r\n                    case 'chord': return <SideFormChord />;\r\n                    case 'alter': return <SideFormAlter />;\r\n                }\r\n            })()}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmSideForm;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    text-align: left;\r\n    background-color: #8a8a8a;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../../redux/store/score/backing/backingState\";\r\nimport ScoreCache from \"../../../../../redux/store/score/scoreCache\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\n\r\nconst TIP_COUNT = 14;\r\n\r\nconst StructViewer = (props: {\r\n    cache: ScoreCache.Element;\r\n    structList: BackingState.StructInfo[];\r\n}) => {\r\n    const cache = props.cache;\r\n    const structList = props.structList;\r\n    const indexList = structList.map(struct => struct.soundIndex + struct.adjustOctave * 12);\r\n    const scaleIndexies = cache.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n    const scaleList = scaleIndexies.map(value => (cache.keyIndex + value) % 12);\r\n\r\n    const structJsxList: JSX.Element[] = useMemo(() => {\r\n\r\n        const structJsxList: JSX.Element[] = [];\r\n\r\n        // 2オクターブ分表示\r\n        for (let i = 0; i < TIP_COUNT; i++) {\r\n            // 下の段（白鍵のチップ）\r\n            {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = indexList.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={false} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n            // 上の段（黒鍵のチップ）\r\n            if ([0, 1, 3, 4, 5].includes(i % 7)) {\r\n                const curIndex = structJsxList.length;\r\n                const isScale = scaleList.includes(curIndex % 12);\r\n                const isUse = indexList.includes(curIndex);\r\n                structJsxList.push(\r\n                    <_Item key={structJsxList.length} isBlack={true} index={i} isScale={isScale} isUse={isUse}></_Item>\r\n                );\r\n            }\r\n        }\r\n        return structJsxList;\r\n    }, [indexList]);\r\n\r\n    return (\r\n        <_Wrap isUse={indexList.length > 0}>\r\n            <_Struct>{structJsxList}</_Struct>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default StructViewer;\r\n\r\nconst _Wrap = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isUse ? '' : css`\r\n        opacity: 0.5;\r\n    `}\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 50px);\r\n    height: 100%;\r\n    /* background-color: #383838; */\r\n    /* padding: 12px 0 0 2px;\r\n    box-sizing: border-box; */\r\n`;\r\n\r\nconst WIDTH = 25;\r\nconst MARGIN = 2;\r\nconst HEIGHT_WHITE = 43;\r\nconst HEIGHT_BLACK = 32;\r\nconst INTERVAL = WIDTH + MARGIN;\r\nconst _Item = styled.div<{\r\n    isScale: boolean;\r\n    isUse: boolean;\r\n    isBlack: boolean;\r\n    index: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: ${props => 2 + (!props.isBlack ? HEIGHT_BLACK : 0)}px;\r\n    left: ${props => 2 + (props.index * INTERVAL) + (!props.isBlack ? 0 : WIDTH / 2)}px;\r\n    z-index: 2;\r\n    /* border: 1px solid #ffffffda; */\r\n    border-radius: 20px;\r\n    width: 25px;\r\n    height: ${props => !props.isBlack ? HEIGHT_WHITE : HEIGHT_BLACK}px;\r\n    /* background-color: #7d7d9e; */\r\n    ${props => props.isScale ? css`\r\n    background: radial-gradient(#d6c3ca, #a88995);\r\n    ` : css`\r\n    background: radial-gradient(#d6cec3, #a89889);\r\n    `}\r\n    ${props => !props.isUse ? '' : props.isScale ? css`\r\n        background: radial-gradient(#d43131, #722a2a);\r\n    ` : css`\r\n        background: radial-gradient(#e7a144, #72552a);\r\n    `}\r\n    box-sizing: border-box;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternDetail = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    /** 基準となるベロシティ */\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cell = layer.table[channelIndex][pattern.lenIndex];\r\n    const baseVel = layer.velocityList[pattern.lenIndex];\r\n    const timing = (cell == null || cell.timing == undefined) ? 0 : cell.timing;\r\n    const velAdj = (cell == null || cell.velAdj == undefined) ? 0 : cell.velAdj;\r\n\r\n    return (<_Wrap>\r\n        {\r\n            // ノーツが設定されていない場合は何も表示しない\r\n            cell == null ? <></> : (<>\r\n                <_DelayDiv>\r\n                    <_Label>delay</_Label>\r\n                    <_TimingValue type=\"range\" min={-10} max={10} step={1} value={timing} onChange={e => {\r\n                        cell.timing = Number(e.target.value);\r\n                        update();\r\n                    }} />\r\n                </_DelayDiv>\r\n                <_VelocityDiv>\r\n                    <_Label>velocity</_Label>\r\n                    <_VelFrame isFocus={false}>\r\n                        <_VelItem value={baseVel} isEdit={false}/>\r\n                    </_VelFrame>\r\n                    <_VelFrame isFocus={store.scoreState.keySwitch.sustainMode}>\r\n                        <_VelItem value={baseVel + velAdj} isEdit={velAdj != 0} />\r\n                    </_VelFrame>\r\n                    {/* <_Value type=\"range\" min={-10} max={10} step={1} value={velAdj} onChange={e => {\r\n                        cell.velAdj = Number(e.target.value);\r\n                        update();\r\n                    }} /> */}\r\n                </_VelocityDiv>\r\n            </>)\r\n        }\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternDetail;\r\n\r\nconst VEL_DIV_WIDTH = 180;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    line-height: 18px;\r\n    margin-top: 14px;\r\n    margin-left: 5px;\r\n    width: 80px;\r\n    background-color: #868686;\r\n    color: #e7e7e7;\r\n    border: 1px solid #616161;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DelayDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - ${VEL_DIV_WIDTH + 1}px);\r\n    height: 100%;\r\n    background-color: #9c9c9c;\r\n`;\r\n\r\nconst _TimingValue = styled.input<{\r\n}>`\r\n    display: inline-block;\r\n    outline: none;\r\n    margin: 20px 0 0 8px;\r\n    width: calc(100% - 100px);\r\n    height: 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _VelocityDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${VEL_DIV_WIDTH}px;\r\n    height: 100%;\r\n    margin-left: 1px;\r\n    /* background-color: #9a2020; */\r\n`;\r\n\r\nconst _VelFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 46px;\r\n    height: 100%;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffffff17;\r\n    `}\r\n    /* background-color: #63a0a1;\r\n    border-radius: 20px; */\r\n`;\r\n\r\nconst _VelItem = styled.div<{\r\n    value: number;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 5px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    background-color: #5cceddaf;\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #ddc35cae;\r\n    `}\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternLength = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const update = () => dispatcher.backing.setState(state);\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.noteDivList.forEach((note, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n        const isEdit = isActive && pattern.channelIndex !== -1;\r\n        let rate = note.rate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate * adjustRate} isActive={isActive} isEdit={isEdit}\r\n                onClick={() => {\r\n                    pattern.channelIndex = -1;\r\n                    pattern.lenIndex = i;\r\n                    update();\r\n                }}\r\n            >\r\n                {note.rate}{!note.isDot ? '' : '.'}{note.div3 === 0 ? '' : '/'}\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {itemJsxList}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PatternLength;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #1616beb0;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #6363eeaf;\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        background-color: #b40000af;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffba;\r\n    text-align: center;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternPedal = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const update = () => dispatcher.backing.setState(state);\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    // 左手のレイヤー時のみ固定表示\r\n    const layer = pattern.layers[0];\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n\r\n    let cur: BackingState.PedalAction = 'off';\r\n    pattern.pedalActs.forEach((pedal, i) => {\r\n        const isActive = pattern.layerIndex === 0 && pattern.lenIndex === i;\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n        let isUse = false;\r\n        const prev = cur;\r\n        if (prev === 'change') {\r\n            cur = 'on';\r\n        }\r\n        if (pedal != null) {\r\n            isUse = true;\r\n            cur = pedal;\r\n        }\r\n        itemJsxList.push(\r\n            <_Column key={i} rate={rate} isActive={isActive} isUse={isUse} onClick={() => {\r\n                if (prev === 'off') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'on'; break;\r\n                        case 'on': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'on') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = 'change'; break;\r\n                        case 'change': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                } else if (prev === 'change') {\r\n                    switch (pedal) {\r\n                        case null: pattern.pedalActs[i] = 'off'; break;\r\n                        case 'off': pattern.pedalActs[i] = null; break;\r\n                    }\r\n                }\r\n                // 終端までnullで更新\r\n                if (i < pattern.pedalActs.length - 1) {\r\n                    for (let j = i + 1; j < pattern.pedalActs.length; j++) {\r\n                        pattern.pedalActs[j] = null;\r\n                    }\r\n                }\r\n                update();\r\n            }}><div><_Item action={cur} /></div></_Column>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternPedal;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n    /* background-color: #4e4e4e; */\r\n`;\r\n\r\n\r\nconst _Column = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isUse: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #00635eac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #179483ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    white-space: normal;\r\n\r\n    &>div {\r\n        display: inline-block;\r\n        width: 10px;\r\n        height: calc(100% - 2px);\r\n        background-color: #ffffffa0;\r\n        border-radius: 6px;\r\n        margin: 1px 0;\r\n        ${props => props.isUse ? '' : css`\r\n            background-color: #ffffff2f;\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    action: BackingState.PedalAction;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 14px;\r\n    border: 1px solid #9c9c9c;\r\n    ${props => {\r\n        switch (props.action) {\r\n            case 'off': return css`\r\n                margin-top: 0;\r\n                background-color: #271db8;\r\n            `;\r\n            case 'change': return css`\r\n                margin-top: 15px;\r\n                background-color: #f3d631;\r\n            `;\r\n            case 'on': return css`\r\n                margin-top: 30px;\r\n                background-color: #e03030;\r\n            `;\r\n        }\r\n    }}\r\n    box-sizing: border-box;\r\n    border-radius: 6px;\r\n`;\r\n","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternTable = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channelCount = pattern.channels.length;\r\n    // const layer = pattern.layers[pattern.layerIndex];\r\n    const curLayer = pattern.layers[pattern.layerIndex];\r\n\r\n    const update = () => dispatcher.backing.setState(state);\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3 / 2);\r\n\r\n    const layerJsxList = useMemo(() => {\r\n\r\n        const layerJsxList: JSX.Element[][] = Array(2);\r\n\r\n        pattern.layers.forEach((layer, j) => {\r\n\r\n            const jsxLsit: JSX.Element[] = [];\r\n            for (let i = 0; i < channelCount; i++) {\r\n                const notesJsxLsit: JSX.Element[] = [];\r\n\r\n                layer.noteDivList.forEach((note, k) => {\r\n                    // データ上は下から数えるため、表示のループは逆回転する\r\n                    const channelIndex = (channelCount - 1) - i;\r\n                    const isActive = pattern.layerIndex === j && pattern.lenIndex === k;\r\n                    const cell = layer.table[channelIndex][k];\r\n                    const setNotesStatus = (status: BackingState.NoteStatus | null) => layer.table[channelIndex][k] = status;\r\n\r\n                    const isUse = cell != null;\r\n                    // 前面にあるレイヤーのみエラー判定をする\r\n                    const isError = pattern.layerIndex !== j ? false :\r\n                        isUse && BackingUtil.checkOverlapBackLayer(pattern.layers, j, channelIndex, k);\r\n                    const isEdit = isActive && pattern.channelIndex === i;\r\n                    let rate = note.rate * adjustRate;\r\n                    if (note.isDot) rate /= 1.5;\r\n                    if (note.div3 !== 0) rate /= note.div3 / 3;\r\n\r\n                    let viewSignal: BackingState.NoteSignal | null = null;\r\n                    if (cell != null) {\r\n                        viewSignal = cell.signal;\r\n                        if (k > 0) {\r\n                            const prevCell = layer.table[channelIndex][k - 1];\r\n                            if (prevCell != null && prevCell.signal === 't') {\r\n                                viewSignal = 't';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const hasStaccato = () => {\r\n                        const search = layer.table.find((record) => {\r\n                            const cell = record[k];\r\n                            if (cell != null && cell.signal === 's') return cell;\r\n                        });\r\n                        return search != undefined;\r\n                    }\r\n                    notesJsxLsit.push(\r\n                        <_Notes key={k} rate={rate} isActive={isActive} isEdit={isEdit} isBack={pattern.layerIndex !== j}>\r\n                            <_State\r\n                                // isUse={isUse}\r\n                                isError={isError}\r\n                                signal={viewSignal}\r\n                                isBack={pattern.layerIndex !== j}\r\n                                // クリック\r\n                                onClick={() => {\r\n                                    if (cell == null) {\r\n                                        // 同列にスタッカートがある場合、スタッカートを設定\r\n                                        const signal = !hasStaccato() ? 'n' : 's';\r\n                                        setNotesStatus({ signal, timing: 0, velAdj: 0 });\r\n                                    } else {\r\n                                        setNotesStatus(null);\r\n                                    }\r\n                                    curLayer.table = curLayer.table.slice();\r\n                                    update();\r\n                                    dispatcher.backing.updateErrorState();\r\n                                }}\r\n                                // 右クリック\r\n                                onContextMenu={() => {\r\n                                    pattern.channelIndex = i;\r\n                                    pattern.lenIndex = k;\r\n                                    update();\r\n                                }}\r\n                            />\r\n                        </_Notes>\r\n                    );\r\n                });\r\n                jsxLsit.push(\r\n                    <_Record key={i} isEven={i % 2 == 0} isFront={true}>\r\n                        {notesJsxLsit}\r\n                    </_Record>\r\n                );\r\n            }\r\n            layerJsxList[j] = jsxLsit;\r\n        });\r\n        return layerJsxList;\r\n    }, [\r\n        pattern.channels, pattern.layerIndex, pattern.lenIndex,\r\n        curLayer.noteDivList, curLayer.table, pattern.channelIndex\r\n    ]);\r\n\r\n    // 選択中のレイヤーを表に表示する\r\n    const jsx = pattern.layerIndex === 0 ? layerJsxList : layerJsxList.reverse();\r\n    return (<>\r\n        <_Layer zIndex={2}>{jsx[1]}</_Layer>\r\n        <_Layer zIndex={1}>{jsx[0]}</_Layer>\r\n    </>);\r\n}\r\n\r\nexport default PatternTable;\r\n\r\nconst _Layer = styled.div<{\r\n    zIndex: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    /* background-color: #000000f; */\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEven: boolean;\r\n    isFront: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    ${props => !props.isFront ? '' : css<{\r\n    isEven: boolean;\r\n}>`\r\n        ${props => !props.isEven ? css`\r\n            background-color: #3a3a502f;\r\n        ` : css`\r\n            background-color: #42425542;\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst _Notes = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 1px);\r\n    margin: 1px 0 0 1px;\r\n    ${props => props.isBack ? '' : css<{\r\n    isActive: boolean;\r\n}>`\r\n        background-color: #00000013;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #9b9b9b1d;\r\n        `}\r\n    `}\r\n    ${props => !props.isEdit ? '' : css`\r\n        border: 2px solid #d80000ba;\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #82f7ff57;\r\n    }\r\n`;\r\n\r\nconst _State = styled.div<{\r\n    // isUse: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n    isBack: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 1px;\r\n    background-color: #a7a7a754;\r\n    ${props => props.signal == null ? '' : css<{\r\n    isBack: boolean;\r\n    isError: boolean;\r\n    signal: null | BackingState.NoteSignal;\r\n}>`\r\n        /* background-color: #f8fc029b; */\r\n        background: linear-gradient(to bottom, #9b9e00, #f8fc02, #9b9e00);\r\n        ${props => props.signal !== 's' ? '' : css`\r\n            border-radius: 8px;\r\n            background: linear-gradient(to bottom, #009e0d, #02fc49, #009e0d);\r\n        `}\r\n        ${props => props.signal !== 't' ? '' : css`\r\n            height: calc(100% - 8px);\r\n            margin: 4px 0 0 1px;\r\n            background: linear-gradient(to bottom, #9e4c00, #fc6a02, #9e4c00);\r\n        `}\r\n        // エラーあり\r\n        ${props => !props.isError ? '' : css`\r\n            opacity: 0.5;\r\n        `}\r\n        // 裏面のレイヤー\r\n        ${props => !props.isBack ? '' : css`\r\n            background: linear-gradient(to bottom, #9e0000, #fc0202, #9e0000);\r\n            opacity: 0.5;\r\n        `}\r\n    `}\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #ffffff63;\r\n        ${props => props.signal == null ? '' : css`\r\n            background-color: #fdff719b;\r\n        `}\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst PatternVelocity = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    \r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const adjustRate = beatProps.beatMemoriCount === 4 ? 1 : (3/2);\r\n\r\n    layer.velocityList.forEach((vel, i) => {\r\n        const isActive = pattern.lenIndex === i;\r\n\r\n        const note = layer.noteDivList[i];\r\n        let rate = note.rate * adjustRate;\r\n        if (note.isDot) rate /= 1.5;\r\n        if (note.div3 !== 0) rate /= note.div3 / 3;\r\n        itemJsxList.push(\r\n            <_Item key={i} rate={rate} isActive={isActive} >\r\n                <_Value value={vel} />\r\n            </_Item>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        {itemJsxList}\r\n    </_Wrap>);\r\n}\r\n\r\nexport default PatternVelocity;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    white-space: nowrap;\r\n`;\r\n\r\n\r\nconst _Item = styled.div<{\r\n    rate: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => NOTES_1BAR_WIDTH / props.rate - 1}px;\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 1px;\r\n    background-color: #001763ac;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #173494ac;\r\n    `}\r\n    box-sizing: border-box;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _Value = styled.div<{\r\n    value: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: calc(50% - 6px);\r\n    width: 10px;\r\n    height: ${props => props.value * 10}%;\r\n    /* background-color: #5cceddaf; */\r\n    background: linear-gradient(to right, #00949e, #26dcf4, #00949e);\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { NOTES_1BAR_WIDTH, PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PatternDetail from \"./patternDetail\";\r\nimport PatternLength from \"./patternLength\";\r\nimport PatternPedal from \"./patternPedal\";\r\nimport PatternTable from \"./patternTable\";\r\nimport PatternVelocity from \"./patternVelocity\";\r\n\r\nconst PatternBuilder = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const divs = layer.noteDivList;\r\n    const limitLen = BackingUtil.getLimitLen(chordInfo.beatLen, chordInfo.minute, chordInfo.init.beatSignature);\r\n    const useTotalLen = BackingUtil.getUsingLenFromDivs(divs, chordInfo.init.beatSignature);\r\n    const isLenOverError = 0 <= limitLen - useTotalLen;\r\n\r\n    const beatProps = TheoryUtil.getBeatProps(chordInfo.init.beatSignature);\r\n    const viewRate = NOTES_1BAR_WIDTH / 4;\r\n\r\n    // メモリの数を算出\r\n    let memoriCount = chordInfo.beatLen * beatProps.beatMemoriCount;\r\n    memoriCount += chordInfo.minute.head + chordInfo.minute.tail;\r\n\r\n    const barMemoriCount = beatProps.beatMemoriCount === 4 ? 16 : 24;\r\n    const memoriWidth = NOTES_1BAR_WIDTH / barMemoriCount;\r\n    // メモリJSXの生成\r\n    const memoriJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < memoriCount + 1; i++) {\r\n        const pos = i;\r\n        let bean: { thickness: number, height: number, color: string } = { thickness: 1, height: 10, color: '#555' };\r\n        if (beatProps.beatMemoriCount === 4) {\r\n            switch (true) {\r\n                case pos % 16 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 4 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        } else {\r\n            switch (true) {\r\n                case pos % 24 === 0: bean = { thickness: 2, height: 22, color: '#747474' }; break;\r\n                case pos % 6 === 0: bean = { thickness: 2, height: 18, color: '#646464' }; break;\r\n                case pos % 2 === 0: bean = { thickness: 1, height: 14, color: '#7a7a7a' }; break;\r\n            }\r\n        }\r\n        memoriJsxList.push(\r\n            <_Memori\r\n                key={memoriJsxList.length}\r\n                width={memoriWidth}\r\n                height={bean.height}\r\n                color={bean.color}\r\n                thickness={bean.thickness}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (<>\r\n        <_Header>\r\n            <_LengthDiv>\r\n                <PatternLength />\r\n            </_LengthDiv>\r\n            <_MeasureDiv>\r\n                <_MemoriList>{memoriJsxList}</_MemoriList>\r\n                {isLenOverError ? (\r\n                    <_ChordLenLine pos={limitLen * viewRate} />\r\n                ) : (\r\n                    // 定義した拍を超えた場合のみ表示\r\n                    <_OverCover pos={limitLen * viewRate} width={(useTotalLen - limitLen) * viewRate} />\r\n                )}\r\n            </_MeasureDiv>\r\n        </_Header>\r\n        <_Body>\r\n            <PatternTable />\r\n        </_Body>\r\n        <_Footer>\r\n            {pattern.channelIndex === -1 ?\r\n                // ベロシティorペダル情報を表示\r\n                (pattern.mode === 'velocity' ? <PatternVelocity /> : <PatternPedal />) :\r\n                // セルごとの詳細情報を表示\r\n                <PatternDetail />\r\n            }\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternBuilder;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _LengthDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #9292bdd6;\r\n`;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2}px;\r\n    background-color: #b492bdd5;\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\nconst _MemoriList = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    thickness: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.thickness}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _OverCover = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: ${props => props.width}px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #f8000053;\r\n    pointer-events: none;\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997cc;\r\n`;\r\n\r\nconst _ChordLenLine = styled.div<{\r\n    pos: number;\r\n}>`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.pos}px;\r\n    width: 4px;\r\n    height: ${PATTERN_HEADER_HEIGHT / 2 + PATTERN_BODY_HEIGHT}px;\r\n    background-color: #ffffffc7;\r\n`;","import { useContext } from \"react\";\r\nimport { Player } from \"soundfont-player\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst ChannelItem = (props: {\r\n    soundfont: Player | null;\r\n    index: number;\r\n    soundFullName: string;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const index = pattern.channels.length - 1 - props.index;\r\n    const channelCount = pattern.channels.length;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n    const addRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            const initialCellArray = BackingUtil.getInitialRecord(layer.noteDivList.length);\r\n            layer.table.splice(index, 0, initialCellArray);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length + 1);\r\n        pattern.channelIndex = -1;\r\n        update();\r\n    }\r\n\r\n    const deleteRecord = () => {\r\n        pattern.layers.forEach((layer) => {\r\n            layer.table.splice(index, 1);\r\n        });\r\n        // alert(pattern.layers[0].table.length);\r\n        const structs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n        pattern.channels = BackingUtil.getChannels(structs, pattern.channels.length - 1);\r\n        pattern.channelIndex = -1;\r\n        update();\r\n    }\r\n\r\n    const preview = () => {\r\n        if (props.soundfont != null) {\r\n            props.soundfont.play(props.soundFullName, 0, { duration: 1 });\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <_Wrap isError={props.soundFullName === '-'}>\r\n            <_Struct onClick={preview}>{props.soundFullName}</_Struct>\r\n            <_Option isEnable={channelCount > 1} onClick={deleteRecord}>-</_Option>\r\n            <_Option isEnable={channelCount < BackingUtil.CHANNEL_MAX} onClick={addRecord}>+</_Option>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default ChannelItem;\r\n\r\nconst _Wrap = styled.div<{\r\n    isError: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 19px;\r\n    background-color: #b4b3b36f;\r\n    ${props => !props.isError ? '' : css`\r\n        background-color: #ff0000c3;\r\n    `}\r\n    margin: 0 0 1px 0;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin: 0 1px 0 0;\r\n    border: 1px solid #322e4292;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n`;\r\n\r\nconst _Struct = styled(_Item)`\r\n    width: 47px;\r\n\r\n`;\r\n\r\nconst _Option = styled(_Item)<{\r\n    isEnable: boolean;\r\n}>`\r\n    width: 25px;\r\n    &:hover {\r\n        background-color: #f1ef866c;\r\n    }\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    \r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { PATTERN_BODY_HEIGHT, PATTERN_FOOTER_HEIGHT, PATTERN_HEADER_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport ChannelItem from \"./channelItem\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { _CSS_LABEL_MIDIUM } from \"../../../../base/design/styles\";\r\n\r\nconst PatternChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n    // const symbol = TheoryUtil.getSymbolFromKey(chordInfo.symbolKey);\r\n    // const chordRoot = (chordInfo.root.index + chordInfo.init.keyIndex) % 12;\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    const layerJsxList: JSX.Element[] = [];\r\n\r\n    if (state.pattern == null) return <></>;\r\n\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const channels = pattern.channels;\r\n    channels.forEach((channel, i) => {\r\n        let name = '-';\r\n        if (channel.octave !== -1) {\r\n            const structInfo = chordInfo.structList[channel.structIndex];\r\n            const soundIndex = structInfo.soundIndex;\r\n            const octave = channel.octave + structInfo.adjustOctave;\r\n            const keyList = !structInfo.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\r\n            name = keyList[soundIndex % 12] + octave;\r\n        }\r\n        channelJsxList.push(\r\n            <ChannelItem key={i}\r\n                soundfont={store.instruments.harmonyFont}\r\n                index={i}\r\n                soundFullName={name}\r\n            />\r\n        );\r\n    });\r\n\r\n    pattern.layers.forEach((layer, i) => {\r\n        const labelName = i === 0 ? 'L-HAND' : 'R-HAND';\r\n        layerJsxList.push(\r\n            <_LayerItem key={i} isActive={pattern.layerIndex === i}\r\n                onClick={() => {\r\n                    if (i !== pattern.layerIndex) {\r\n                        dispatcher.backing.switchLayer();\r\n                    }\r\n                }}\r\n            >{labelName}</_LayerItem>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        <_Header>\r\n            {layerJsxList}\r\n        </_Header>\r\n        <_Body>\r\n            {channelJsxList}\r\n        </_Body>\r\n        <_Footer>\r\n            <_ModeItem isActive={pattern.mode === 'velocity'}\r\n                onClick={() => {\r\n                    pattern.mode = 'velocity';\r\n                    dispatcher.backing.setState(state);\r\n                }}\r\n            >Velocity</_ModeItem>\r\n            <_ModeItem isActive={pattern.mode === 'pedal'}\r\n                onClick={() => {\r\n                    pattern.mode = 'pedal';\r\n                    dispatcher.backing.setState(state);\r\n                }}\r\n            >Pedal</_ModeItem>\r\n        </_Footer>\r\n    </>);\r\n}\r\n\r\nexport default PatternChannel;\r\n\r\nconst _Header = styled.div`\r\n    /* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_HEADER_HEIGHT}px;\r\n    background-color: #929292;\r\n`;\r\n\r\nconst _LayerItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #dad600;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;\r\n\r\nconst _Body = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_BODY_HEIGHT}px;\r\n    background-color: #97d3cec8;\r\n`;\r\nconst _Footer = styled.div`\r\n/* display: inline-block; */\r\n    width: 100%;\r\n    height: ${PATTERN_FOOTER_HEIGHT}px;\r\n    background-color: #898997;\r\n`;\r\n\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: 22px;\r\n    width: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #3b3b3b;\r\n    line-height: 20px;\r\n    background-color: #b8b8b8;\r\n    border: 1px solid #7a7a7a;\r\n    border-radius: 2px;\r\n\r\n    ${proops => !proops.isActive ? '' : css`\r\n        background-color: #4fe419;\r\n        color: #c40000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #d4d4d4;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nconst PatternOptions = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const pattern = state.pattern as BackingState.Pattern;\r\n    const layer = pattern.layers[pattern.layerIndex];\r\n    const channelIndex = (pattern.channels.length - 1) - pattern.channelIndex;\r\n    const cur = layer.noteDivList[pattern.lenIndex];\r\n    const chordInfo = state.chordInfo;\r\n    const update = () => {\r\n        layer.noteDivList = layer.noteDivList.slice();\r\n        dispatcher.backing.setState(state);\r\n        dispatcher.backing.updateErrorState();\r\n    }\r\n\r\n    const setRate = (rate: BackingState.NoteRate) => {\r\n        cur.rate = rate;\r\n        update();\r\n    }\r\n\r\n    const createItem = (name: string, isActive: boolean, isEnable: boolean, callback: () => void): JSX.Element => {\r\n        return (\r\n            <_Item isEnable={isEnable} isActive={isActive}\r\n                onClick={callback}>\r\n                {name}\r\n            </_Item>\r\n        );\r\n    }\r\n    const createRateItem = (rate: BackingState.NoteRate): JSX.Element => {\r\n        return createItem(String(rate), cur.rate === rate, true, () => setRate(rate));\r\n    }\r\n\r\n    const sizeJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < BackingUtil.CHANNEL_MAX; i++) {\r\n        const value = i + 1;\r\n        sizeJsxList.push(\r\n            <_ListItem key={i}\r\n                value={value}>\r\n                {value}\r\n            </_ListItem>\r\n        );\r\n    }\r\n\r\n    const isPermit3ren = ['2/4', '4/4', '4/3'].includes(chordInfo.init.beatSignature);\r\n    const isPermitDot = BackingUtil.isPermitDot(cur);\r\n\r\n    const lenModeJsx = <_WrapLen>\r\n        <_List\r\n            value={pattern.channels.length}\r\n            onChange={(e) => {\r\n                const prevSize = pattern.channels.length;\r\n                const newSize = Number(e.target.value);\r\n                const voicingStructs = BackingUtil.buildChannels(state.voicingTable as boolean[][]);\r\n                pattern.channels = BackingUtil.getChannels(voicingStructs, newSize);\r\n                const sub = Number(e.target.value) - prevSize;\r\n                pattern.layers.forEach((layer, i) => {\r\n                    if (sub > 0) {\r\n                        const initialCellArray = new Array<BackingState.NoteStatus | null>(layer.noteDivList.length).fill(null);\r\n                        for (let j = 0; j < sub; j++) layer.table.push(JSON.parse(JSON.stringify(initialCellArray)));\r\n                    } else {\r\n                        const delCnt = Math.abs(sub);\r\n                        layer.table.splice(-delCnt, delCnt);\r\n                    }\r\n                });\r\n                update();\r\n            }}>\r\n            {sizeJsxList}\r\n        </_List>\r\n        {createRateItem(16)}\r\n        {createRateItem(8)}\r\n        {createRateItem(4)}\r\n        {createRateItem(2)}\r\n        {createRateItem(1)}\r\n        {createItem('.', cur.isDot,\r\n            isPermitDot,\r\n            () => {\r\n                cur.isDot = !cur.isDot;\r\n                update();\r\n            })}\r\n        {createItem('1/3', cur.div3 === 1,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 1) cur.div3 = 0;\r\n                else cur.div3 = 1;\r\n                update();\r\n            })}\r\n        {createItem('2/3', cur.div3 === 2,\r\n            isPermit3ren,\r\n            () => {\r\n                if (cur.div3 === 2) cur.div3 = 0;\r\n                else cur.div3 = 2;\r\n                update();\r\n            })}\r\n    </_WrapLen>;\r\n\r\n    /** テーブルの行 */\r\n    const tableRecord = layer.table[channelIndex];\r\n    const curCell = pattern.channelIndex === -1 ? null :\r\n        tableRecord[pattern.lenIndex];\r\n\r\n    const isEnableTai = () => {\r\n        if(tableRecord == null) return false;\r\n\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 's') return cell;\r\n        });\r\n        const hasStaccato = search != undefined;\r\n        let isExistNext = false;\r\n        if(pattern.lenIndex < tableRecord.length - 1 && tableRecord[pattern.lenIndex + 1] != null) {\r\n            isExistNext = true;\r\n        }\r\n        return !hasStaccato && isExistNext;\r\n    };\r\n\r\n    const isNormalRow = () => {\r\n        const search = layer.table.find((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null && cell.signal === 't') return cell;\r\n        });\r\n        return search == undefined;\r\n    };\r\n\r\n    const setRowStaccato = (isSet: boolean) => {\r\n        layer.table.forEach((record) => {\r\n            const cell = record[pattern.lenIndex];\r\n            if (cell != null) {\r\n                cell.signal = isSet ? 's' : 'n';\r\n            }\r\n        });\r\n    }\r\n\r\n    const editModeJsx = <_WrapEdit>\r\n\r\n        {createItem('-', curCell == null,\r\n            true,\r\n            () => {\r\n                tableRecord[pattern.lenIndex] = null;\r\n                update();\r\n            })}\r\n        {createItem('□', curCell != null && curCell.signal === 'n',\r\n            true,\r\n            () => {\r\n                if (curCell != null) {\r\n                    if(curCell.signal === 's') {\r\n                        setRowStaccato(false);\r\n                    } else {\r\n                        curCell.signal = 'n';\r\n                    }\r\n                } else {\r\n                    tableRecord[pattern.lenIndex] = { signal: 'n', timing: 0, velAdj: 0 };\r\n                }\r\n                update();\r\n            })}\r\n        {createItem('・', curCell != null && curCell.signal === 's',\r\n            curCell != null && isNormalRow(),\r\n            () => {\r\n                setRowStaccato(true);\r\n                update();\r\n            })}\r\n        {createItem('⁀', curCell != null && curCell.signal === 't',\r\n            isEnableTai(),\r\n            () => {\r\n                const status = curCell as BackingState.NoteStatus;\r\n                status.signal = 't'\r\n                update();\r\n            })}\r\n    </_WrapEdit>;\r\n    return (pattern.channelIndex === - 1 ? lenModeJsx : editModeJsx);\r\n}\r\n\r\nexport default PatternOptions;\r\n\r\nconst _WrapLen = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86c5b2;\r\n`;\r\nconst _WrapEdit = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #86b8c5;\r\n`;\r\n\r\n\r\nconst _List = styled.select<{\r\n\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    color: #eeff00;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    background-color: #d4d4d422;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    outline: none;\r\n`;\r\nconst _ListItem = styled.option<{\r\n}>`\r\n    background-color: black;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fbff0050;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #dfe07850;\r\n        `}\r\n    }\r\n`;","\r\nimport { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport { PATTERN_FRAME_HEIGHT, PATTERN_OPERATION_HEIGHT as PATTERN_STATUS_HEIGHT } from \"../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PatternBuilder from \"./builder/patternBuilder\";\r\nimport PatternChannel from \"./channel/patternChannel\";\r\nimport PatternOptions from \"./patternOptions\";\r\n\r\n/**\r\n * バッキングエディタ画面のパターン部分\r\n * @returns コンポーネント\r\n */\r\nconst PatternFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const chordInfo = state.chordInfo;\r\n\r\n    const isUsePattern = state.pattern != null;\r\n\r\n    const update = () => {\r\n        dispatcher.backing.setState(state);\r\n    }\r\n\r\n    /**\r\n     * USEスイッチ押下時の処理\r\n     */\r\n    const useSwitchAction = () => {\r\n        if (!isUsePattern) {\r\n            const table = state.voicingTable as boolean[][];\r\n            const voicingStructs = BackingUtil.buildChannels(table);\r\n            const channels = BackingUtil.getChannels(voicingStructs, 1);\r\n            state.pattern = {\r\n                layerIndex: 0,\r\n                lenIndex: 0,\r\n                channelIndex: -1,\r\n                channels,\r\n                isUsePedal: false,\r\n                mode: \"velocity\",\r\n                pedalActs: [null],\r\n                layers: [dispatcher.backing.getInitialLayer(), dispatcher.backing.getInitialLayer()],\r\n            } as BackingState.Pattern;\r\n            update();\r\n        } else {\r\n            state.pattern = null;\r\n            update();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* ヘッダー部分（パターン利用スイッチ） */}\r\n            <_Header>\r\n                <_UseSwitch>\r\n                    <_Label>Pattern</_Label>\r\n                    <_Button\r\n                        isActive={isUsePattern}\r\n                        onClick={useSwitchAction}\r\n                    >Use</_Button>\r\n                </_UseSwitch>\r\n            </_Header>\r\n            <_Main isActive={isUsePattern}>\r\n                {!isUsePattern ? <></> : (<>\r\n                    <_StatusDiv><PatternOptions /></_StatusDiv>\r\n                    <_MainDiv>\r\n                        <_ChannelDiv>\r\n                            <PatternChannel />\r\n                        </_ChannelDiv>\r\n                        <_BuilderDiv>\r\n                            <PatternBuilder />\r\n                        </_BuilderDiv>\r\n                    </_MainDiv>\r\n                </>)}\r\n            </_Main>\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default PatternFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* height: 300px; */\r\n    background-color: #001279;\r\n\r\n    & *{\r\n        /* display: inline-block;\r\n        width: 100%; */\r\n    }\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    height: 30px;\r\n    background-color: #a5d1c3;\r\n`;\r\n\r\n\r\nconst _Label = styled.div``;\r\nconst _UseSwitch = styled.div`\r\n    display: inline-block;\r\n    width: 200px;\r\n    height: 100%;\r\n    /* background-color: #7986d1; */\r\n\r\n    & * {\r\n        display: inline-block;\r\n        height: calc(100% - 4px);\r\n        margin-top: 2px;\r\n        box-sizing: border-box;        \r\n    }\r\n\r\n    & ${_Label} {\r\n        width: 80px;\r\n        font-size: 20px;\r\n        color: #f1fffb;\r\n        font-weight: 600;\r\n        /* background-color: #00000028; */\r\n        margin: 2px 2px 0 2px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    width: 100px;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #ff008023;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: #b1dfc979; */\r\n        color: #e00000;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: ${PATTERN_FRAME_HEIGHT}px;\r\n    ${props => props.isActive ? '' : css`\r\n        height: 0;\r\n    `}\r\n    transition: height 100ms;\r\n`;\r\n\r\nconst _StatusDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${PATTERN_STATUS_HEIGHT}px;\r\n    background-color: #8d98d4;\r\n    text-align: left;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d48d8d;\r\n\r\n    /* & *{\r\n        display: inline-block;\r\n        height: 100%;\r\n    } */\r\n`;\r\n\r\nconst _ChannelDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    background-color: #ff0000;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _BuilderDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 100px);\r\n    background-color: #76af90;\r\n    vertical-align: top;\r\n`;","\r\nimport { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport BackingUtil from \"../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\n/**\r\n * ボイシングを定義するテーブルのコンポーネント\r\n * @returns コンポーネント\r\n */\r\nconst VoicingChooser = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n    const table = state.voicingTable;\r\n    const pattern = state.pattern;\r\n    // 選択可能なチャンネル数\r\n    const channelLimitNum = pattern == null ? BackingUtil.OCTAVE_NUM * BackingUtil.STRUCT_NUM : pattern.channels.length;\r\n\r\n    // return useMemo(() => {\r\n\r\n    const chordInfo = state.chordInfo;\r\n    const structList = chordInfo.structList;\r\n\r\n    const rowJsxList: JSX.Element[] = [];\r\n\r\n    /** 選択数 */\r\n    let selectCount = 0;\r\n    // オクターブ（テーブル横）のループ\r\n    for (let i = 0; i < BackingUtil.OCTAVE_NUM; i++) {\r\n        const cellJsxList: JSX.Element[] = [];\r\n        // 構成音（テーブル縦）のループ\r\n        for (let j = 0; j < BackingUtil.STRUCT_NUM; j++) {\r\n            let isEnable: boolean = structList.length > j;\r\n            let isSelected: boolean = table[i][j];\r\n            if (isSelected) {\r\n                selectCount++;\r\n            }\r\n\r\n            /** セルに表示する音程 */\r\n            const getSoundFullName = (): string => {\r\n                if (!isEnable) return '';\r\n                // const relation = symbol.structs[j];\r\n                // const interval = TheoryUtil.IntervalRelationProps[relation];\r\n                // const structIndex = (chordRootIndex + interval) % 12;\r\n                const sound = structList[j];\r\n                const octave = i + sound.adjustOctave;\r\n\r\n                const key12List = !sound.isFlat ?\r\n                    TheoryUtil.KEY12_SHARP_LIST :\r\n                    TheoryUtil.KEY12_FLAT_LIST\r\n                    ;\r\n                return `${key12List[sound.soundIndex]}${octave}`;\r\n            }\r\n\r\n            const name = getSoundFullName();\r\n            cellJsxList.push(\r\n                <_Cell key={j}\r\n                    isEnable={isEnable}\r\n                    isSelected={isSelected}\r\n                    isOver={isSelected && selectCount > channelLimitNum}\r\n                    onClick={() => {\r\n                        table[i][j] = !isSelected;\r\n                        if (pattern != null) {\r\n                            const voicingStructs: BackingState.ChannelParam[] = BackingUtil.buildChannels(table);\r\n                            pattern.channels = BackingUtil.getChannels(voicingStructs, pattern.channels.length);\r\n                        }\r\n                        dispatcher.backing.setState({ ...state, voicingTable: table, pattern });\r\n                        dispatcher.backing.updateErrorState();\r\n                    }}\r\n                    onContextMenu={() => {\r\n                        const soundfont = store.instruments.harmonyFont;\r\n                        if (soundfont != null) {\r\n                            soundfont.play(name, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {name}\r\n                </_Cell>\r\n            );\r\n        }\r\n        rowJsxList.push(\r\n            <_TableRow key={i}>\r\n                {cellJsxList}\r\n            </_TableRow>\r\n        );\r\n    }\r\n\r\n    /** 構成音リストのJSX */\r\n    const structJsxList = structList.map((sound, i) => {\r\n        const key12List = !sound.isFlat ? TheoryUtil.KEY12_SHARP_LIST : TheoryUtil.KEY12_FLAT_LIST;\r\n\r\n        /** 表示する構成音の関係性 */\r\n        const getStructName = (): string => {\r\n            if (sound.relation == null) {\r\n                // オンコードの場合\r\n                return 'On';\r\n            } else if (sound.relation === 'p1') {\r\n                // ルート音の場合\r\n                return 'Root';\r\n            }\r\n            return sound.relation;\r\n        }\r\n        return (\r\n            <_StructItem key={i}\r\n                isOnChord={sound.relation == null}\r\n            >{getStructName()} [{key12List[sound.soundIndex]}]</_StructItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* コードの基本情報 */}\r\n            <_InfoDiv>\r\n                <_InfoItem>\r\n                    <_Label>Chord</_Label>\r\n                    <_Value>{chordInfo.chordFullName}</_Value>\r\n                </_InfoItem>\r\n                <_InfoItem>\r\n                    <_Label>Attr</_Label>\r\n                    {/* <_Value>{symbol.attr}</_Value> */}\r\n                    <_Value>{chordInfo.symbolAttr}</_Value>\r\n                </_InfoItem>\r\n            </_InfoDiv>\r\n            <_EditorDiv>\r\n                {/* 構成音の情報 */}\r\n                <_StructDiv>\r\n                    {structJsxList}\r\n                </_StructDiv>\r\n                {/* ボイシングのテーブル */}\r\n                <_TableDiv>{rowJsxList}</_TableDiv>\r\n            </_EditorDiv>\r\n        </_Wrap>\r\n    );\r\n    // }, [table, channelLimitNum]);\r\n}\r\n\r\nexport default VoicingChooser;\r\n\r\nconst TIP_WIDTH = 60;\r\nconst TIP_HEIGHT = 22;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 600px;\r\n`;\r\n\r\nconst _InfoDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #338f8f;\r\n`;\r\n\r\nconst _InfoItem = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #89dada; */\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 5px;\r\n    height: calc(100% - 8px);\r\n    width: 80px;\r\n    background-color: #69bcdd;\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #026c86;\r\n    border: 1px solid #303030;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Value = styled.div`\r\n    display: inline-block;\r\n    margin-top: 4px;\r\n    margin-left: 6px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #cccccc; */\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n`;\r\n\r\nconst _EditorDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${(TIP_HEIGHT + 1) * 6 + 4}px;\r\n    background-color: #c09e05;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n\r\n    & *{\r\n        vertical-align: top;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst _StructDiv = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${TIP_WIDTH * 8}px);\r\n    /* width: 100px; */\r\n    background-color: #8fb5bc;\r\n`;\r\n\r\nconst _StructItem = styled.div<{\r\n    isOnChord: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 2px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin-top: 1px;\r\n    /* width: 100px; */\r\n    /* background-color: #8fb5bc; */\r\n    color: white;\r\n    background: linear-gradient(to bottom, #10828a, #76d5db, #10828a);\r\n    ${props => !props.isOnChord ? '' : css`\r\n        /* color: #e00000; */\r\n        background: linear-gradient(to bottom, #104f8a, #7699db, #104f8a);\r\n    `}\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _TableDiv = styled.div`\r\n    display: inline-block;\r\n    background-color: #a7acd8;\r\n`;\r\n\r\nconst _TableRow = styled.div`\r\n    display: inline-block;\r\n    width: ${TIP_WIDTH}px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    background-color: #a7d8c4;\r\n    padding-bottom: 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Cell = styled.div<{\r\n    isEnable: boolean;\r\n    isSelected: boolean;\r\n    isOver: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 1px);\r\n    height: ${TIP_HEIGHT}px;\r\n    margin: 1px 0 0 1px;\r\n    background-color: #409ca3;\r\n    border: 1px solid #215e53;\r\n    border-radius: 4px;\r\n    color: #01004e;\r\n    ${props => !props.isSelected ? '' : css`\r\n        background-color: #e5e747;\r\n    `}\r\n    ${props => !props.isOver ? '' : css`\r\n        background-color: #c40000;\r\n        color: #ffffff;\r\n    `}\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    /* border: 1px solid #ffffff; */\r\n    box-sizing: border-box;\r\n\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #117dbb;\r\n        ${props => !props.isSelected ? '' : css`\r\n            background-color: #b9bb3f;\r\n        `}\r\n        ${props => !props.isOver ? '' : css`\r\n            background-color: #bb3f3f;\r\n        `}\r\n    }\r\n`;\r\n\r\n","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport { ChordBacking } from \"../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PatternFrame from \"./pattern/patternFrame\";\r\nimport VoicingChooser from \"./voicing/voicingChooser\";\r\n\r\n/**\r\n * バッキングエディタ画面\r\n * @returns コンポーネント\r\n */\r\nconst BackingEditorFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.backingState as BackingState.Editor;\r\n\r\n    const [source, setSource] = useState('');\r\n\r\n    useEffect(() => {\r\n        console.log('backing start');\r\n    }, []);\r\n\r\n    const syncSource = () => {\r\n        const chordBacking = {\r\n            voicingList: BackingUtil.getVoicingListFromTable(state.voicingTable),\r\n            pattern: state.pattern == null ? null : BackingUtil.buildPatternProps(state.pattern)\r\n        }\r\n        setSource(JSON.stringify(chordBacking));\r\n    };\r\n\r\n    return (\r\n        <_Frame>\r\n            <_LabelFrame>\r\n                <_Label\r\n                    isActive={state.tabIndex === 0}\r\n                    onClick={() => {\r\n                        dispatcher.backing.setState({ ...state, tabIndex: 0 });\r\n                    }}\r\n                ><div>Editor</div></_Label>\r\n                <_Label\r\n                    isActive={state.tabIndex === 1}\r\n                    onClick={() => {\r\n                        syncSource();\r\n                        dispatcher.backing.setState({ ...state, tabIndex: 1 });\r\n                    }}\r\n                ><div>Source</div></_Label>\r\n            </_LabelFrame>\r\n            <_Wrap>\r\n                {state.tabIndex === 0 ? (<>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                    {/* ボイシングエディタ部分 */}\r\n                    <VoicingChooser />\r\n                    {/* パターンエディタ部分 */}\r\n                    <PatternFrame />\r\n                    {/* フッター部分 */}\r\n                    <_FooterDiv>\r\n                        {/* プレビュー再生 */}\r\n                        <_Button isEnable={!state.hasError} onClick={() => {\r\n\r\n                            if (!state.isPreview) {\r\n                                dispatcher.backing.testBacking();\r\n                            } else {\r\n                                BackingUtil.stopPreview(store, state, dispatcher, store.reserveTasks);\r\n                            }\r\n                        }}>{!state.isPreview ? 'Test' : 'Stop'}</_Button>\r\n                        {/* 編集を取り消しして閉じる */}\r\n                        <_Button isEnable={!state.isPreview} onClick={() => {\r\n                            state.closeAction(state, false);\r\n                        }}>Cancel</_Button>\r\n                        {/* 編集を反映して閉じる */}\r\n                        <_Button isEnable={!state.isPreview} onClick={() => {\r\n                            state.closeAction(state, true);\r\n                        }}>Update</_Button>\r\n                    </_FooterDiv>\r\n                </>) : (<>\r\n                    <_SourceFrame>\r\n                        <_TextArea value={source} onChange={(e) => {\r\n                            setSource(e.target.value);\r\n                        }} />\r\n                    </_SourceFrame>\r\n                    {/* フッター部分 */}\r\n                    <_FooterDiv>\r\n                        <_Button isEnable={true} onClick={() => {\r\n                            syncSource();\r\n                        }}>Reset</_Button>\r\n                        <_Button isEnable={true} onClick={() => {\r\n                            try {\r\n                                const chordBacking = JSON.parse(source) as ChordBacking;\r\n                                const voicingTable = BackingUtil.getInitVoicingTable(chordBacking.voicingList, state.chordInfo.structList.length);\r\n                                const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, chordBacking.pattern);\r\n                                dispatcher.backing.setState({ ...state, voicingTable, pattern, tabIndex: 0 });\r\n                            } catch {\r\n                                alert('error');\r\n                                dispatcher.backing.setState({ ...state, tabIndex: 0 });\r\n                            }\r\n                        }}>Aplly</_Button>\r\n                    </_FooterDiv>\r\n                </>)}\r\n            </_Wrap>\r\n        </_Frame>\r\n    )\r\n}\r\n\r\nexport default BackingEditorFrame;\r\n\r\nconst _Frame = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 630px;\r\n    background-color: #a1a1a1;\r\n`;\r\n\r\nconst _LabelFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 30px;\r\n    padding: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n    /* background-color: #f17379; */\r\n`;\r\nconst _Label = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: block;\r\n    width: 25px;\r\n    height: 100px;\r\n    background-color: #99afb3;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b8dae0;\r\n    `}\r\n    border-left: 1px solid #5a5a5a;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    margin: 2px 0 0 2px;\r\n    border-radius: 8px 0 0 8px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    \r\n    & div {\r\n        width: 100px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #b2bcbe;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #b8dae0;\r\n        `}\r\n    }\r\n`;\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n    /* background-color: #bd4646; */\r\n`;\r\n\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    height: 30px;\r\n    width: 100%;\r\n    /* background-color: #bd4646; */\r\n    text-align: right;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;\r\n\r\nconst _SourceFrame = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n    height: 400px;\r\n    background-color: #b4aeae;\r\n`;\r\n\r\nconst _TextArea = styled.textarea`\r\n    display: inline-block;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: #0a0038;\r\n    background-color: #b7bcd3;\r\n    resize: none;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    box-sizing: border-box;\r\n    margin: 4px 0 0 4px;\r\n    outline: none;\r\n`;","import { useContext, useEffect, useMemo, useState, useCallback } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport { ChordBacking, DetailChord } from \"../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport LibraryUtil from \"../../utils/LibraryUtil\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nnamespace PresetSelectorFrame {\r\n\r\n    export type CachePorps = {\r\n        field: Field;\r\n        presetList: LibraryUtil.PresetItemProps[];\r\n        applyAction: () => void;\r\n        invalidate: () => void;\r\n    };\r\n\r\n    type TargetProps = {\r\n        index: number;\r\n        condition: LibraryUtil.Condition;\r\n    }\r\n\r\n    type Field = {\r\n        listIndex: number;\r\n    }\r\n    /**\r\n     * プリセットセレクタ画面\r\n     * @returns コンポーネント\r\n     */\r\n    export const Component = () => {\r\n\r\n        const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n        const backing = store.backingState as BackingState.Editor;\r\n\r\n        const [field, setField] = useState<Field>({\r\n            listIndex: 0,\r\n        });\r\n\r\n        const chordList = store.scoreData.chordList;\r\n        const state = store.scoreState;\r\n        const [minIndex, maxIndex] = state.focusIndex < state.distIndex ? [state.focusIndex, state.distIndex] : [state.distIndex, state.focusIndex];\r\n\r\n        const systemState = store.systemState;\r\n        const themaList = systemState.themaList;\r\n        const thema = themaList[systemState.activeThemaIndex];\r\n\r\n        useEffect(() => {\r\n            console.log('preset start');\r\n\r\n            return () => {\r\n                console.log('preset end');\r\n\r\n                // キャッシュを削除\r\n                dispatcher.system.setState({\r\n                    ...store.systemState,\r\n                    cache: null\r\n                });\r\n            }\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            // キーボード操作のためのキャッシュを作成\r\n            const inputCache: CachePorps = {\r\n                field,\r\n                presetList,\r\n                applyAction,\r\n                invalidate,\r\n            };\r\n            dispatcher.system.setState({\r\n                ...store.systemState,\r\n                cache: inputCache\r\n            });\r\n        }, []);\r\n\r\n        const invalidate = () => {\r\n            setField({ ...field });\r\n        };\r\n\r\n        /**\r\n         * プレビュー再生を行う\r\n         */\r\n        const testBacking = (index: number) => {\r\n            console.log(backing.isPreview);\r\n            if (!backing.isPreview) {\r\n                const applyItem = presetList[field.listIndex].applyList[index];\r\n                const chordBacking = applyItem.backing as ChordBacking;\r\n                const symbol = TheoryUtil.getSymbolFromKey(applyItem.condition.symbolKey) as TheoryUtil.SymbolParams;\r\n                backing.chordInfo = {\r\n                    ...backing.chordInfo,\r\n                    beatLen: applyItem.condition.beatLen,\r\n                    minute: {\r\n                        head: applyItem.condition.head,\r\n                        tail: applyItem.condition.tail,\r\n                    },\r\n                    // structList: symbol.structs,\r\n                    // init: {\r\n\r\n                    // }\r\n                }\r\n                const voicingTable = BackingUtil.getInitVoicingTable(chordBacking.voicingList, symbol.structs.length);\r\n                const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, chordBacking.pattern);\r\n                dispatcher.backing.setState({ ...backing, voicingTable, pattern });\r\n                dispatcher.backing.testBacking();\r\n            } else {\r\n                BackingUtil.stopPreview(store, backing, dispatcher, store.reserveTasks);\r\n            }\r\n        };\r\n\r\n        const [targetList, presetList]: [TargetProps[], LibraryUtil.PresetItemProps[]] = useMemo(() => {\r\n\r\n            const targetList: TargetProps[] = [];\r\n            const conditionList: LibraryUtil.Condition[] = [];\r\n            chordList.forEach((element, i) => {\r\n\r\n                if (i >= minIndex && i <= maxIndex && element.type === 'chord') {\r\n                    const chord = element.detail as DetailChord;\r\n                    if (chord.root == null) return 1;\r\n\r\n                    const cache = state.elementCacheList[i];\r\n                    const rootIndex = (chord.root.index + cache.keyIndex) % 12;\r\n\r\n                    const condition: LibraryUtil.Condition = {\r\n                        beatLen: chord.beatLen,\r\n                        head: chord.minute.head,\r\n                        tail: chord.minute.tail,\r\n                        rootIndex,\r\n                        symbolKey: chord.symbolKey,\r\n                    };\r\n                    // 同じ条件がリストに存在しない場合のみ追加する\r\n                    if (conditionList.find(con => {\r\n                        return con.beatLen === condition.beatLen && con.head === condition.head && con.tail === condition.tail &&\r\n                            con.rootIndex === condition.rootIndex && con.symbolKey === condition.symbolKey;\r\n                    }) == undefined) {\r\n                        conditionList.push(condition);\r\n                    }\r\n                    targetList.push({\r\n                        index: i,\r\n                        condition\r\n                    });\r\n                }\r\n            });\r\n\r\n            return [targetList, LibraryUtil.getPresetList(thema, conditionList)];\r\n        }, []);\r\n\r\n\r\n        const [presetJsxList, applyJsxList, rate]: [JSX.Element[], JSX.Element[], number] = useMemo(() => {\r\n            if (presetList.length === 0) return [[], [], 0];\r\n            const focusPreset = presetList[field.listIndex];\r\n            return [\r\n                presetList.map((preset, i) => {\r\n\r\n                    return (\r\n                        <_PresetItem key={i}\r\n                            isFocus={field.listIndex === i}\r\n                            onClick={() => {\r\n                                field.listIndex = i;\r\n                                invalidate();\r\n                            }}\r\n                        ><_Preset>{preset.dispName}</_Preset> <_Method>[{preset.method}]</_Method></_PresetItem>\r\n                    );\r\n                }),\r\n                focusPreset.applyList.map((target, i) => {\r\n                    const con = target.condition;\r\n                    const sust = `[${con.beatLen}* ${con.tail},${con.tail}]`;\r\n                    const chordName = TheoryUtil.KEY12_SHARP_LIST[con.rootIndex] + TheoryUtil.getSymbolFromKey(con.symbolKey)?.name;\r\n                    const isMatch = target.backing != null;\r\n                    return (\r\n                        <_ApplyItem\r\n                            key={i}\r\n                            isMatch={isMatch}\r\n                            onClick={() => {\r\n                                if (isMatch) {\r\n                                    testBacking(i);\r\n                                }\r\n                            }}\r\n                        ><_Result isMatch={isMatch}>{isMatch ? 'OK' : 'NG'}</_Result> {sust} {chordName}</_ApplyItem>\r\n                    );\r\n                }),\r\n                focusPreset.applyList.filter(apply => {\r\n                    return apply.backing != null;\r\n                }).length / focusPreset.applyList.length\r\n            ];\r\n        }, [field.listIndex]);\r\n\r\n        const applyAction = useCallback(() => {\r\n\r\n            const applyList = presetList[field.listIndex].applyList;\r\n\r\n            targetList.forEach((target) => {\r\n                const chordElement = chordList[target.index].detail as DetailChord;\r\n                const apply = applyList.find(apply => {\r\n                    return LibraryUtil.matchCondition(apply.condition, target.condition);\r\n                });\r\n                if (apply != undefined && apply.backing != null) {\r\n                    chordElement.backing = apply.backing;\r\n                }\r\n            });\r\n\r\n            dispatcher.score.closeLibraryWnd();\r\n        }, [field.listIndex]);\r\n\r\n        return (\r\n            <_Wrap>\r\n                <_BodyDiv>\r\n                    {presetList.length === 0 ? (\r\n                        <_Message>Preset does not exist...</_Message>\r\n                    ) : (<>\r\n                        <_ListDiv>\r\n                            <_Header>Preset</_Header>\r\n                            {presetJsxList}\r\n                        </_ListDiv>\r\n                        <_ListDiv>\r\n                            <_Header>Apply</_Header>\r\n                            <_Sum>Matching Rate: <_Rate>{(rate * 100).toFixed(1)}%</_Rate></_Sum>\r\n                            {applyJsxList}\r\n                        </_ListDiv>\r\n                    </>)}\r\n                </_BodyDiv>\r\n                <_FooterDiv>\r\n                    {/* 選択を反映せずに閉じる */}\r\n                    <_Button isEnable={true} onClick={() => {\r\n                        dispatcher.score.closeLibraryWnd();\r\n                    }}>Cancel</_Button>\r\n                    {/* 選択を反映して閉じる */}\r\n                    <_Button\r\n                        isEnable={presetList.length > 0}\r\n                        onClick={applyAction}\r\n                    >Apply</_Button>\r\n                </_FooterDiv>\r\n            </_Wrap>\r\n        )\r\n    }\r\n}\r\nexport default PresetSelectorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 630px;\r\n    height: 400px;\r\n    background-color: #d4d5ca;\r\n    border: 1px solid #121212;\r\n    box-sizing: border-box;\r\n`;\r\nconst FOOTER_WIDTH = 30;\r\nconst _BodyDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${FOOTER_WIDTH}px);\r\n    /* background-color: #4d5e53; */\r\n`;\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${FOOTER_WIDTH}px;\r\n    background-color: #c7c7c7;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #4d5e53; */\r\n    /* border: 1px solid #121212; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    background-color: #3c4a99c3;\r\n    box-sizing: border-box;\r\n    border: 1px solid #f0f0f0;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    background-color: #d1dad4c8;\r\n    box-sizing: border-box;\r\n    border: 1px solid #676767;\r\n    color: #000786;\r\n    text-align: left;\r\n    padding-left: 4px;\r\n`;\r\n\r\nconst _PresetItem = styled(_Item) <{\r\n    isFocus: boolean;\r\n}>`\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #e6dd5bc5;\r\n    `}\r\n`;\r\n\r\nconst _Method = styled.span`\r\n    color: #00054b86;\r\n`;\r\nconst _Preset = styled.span`\r\n    color: #b90000;\r\n`;\r\n\r\nconst _ApplyItem = styled(_Item) <{\r\n    isMatch: boolean;\r\n}>`\r\n    background-color: #79b98f;\r\n    ${props => !props.isMatch ? '' : css`\r\n        background-color: #7eda5a;\r\n        &:hover {\r\n            background-color: #abeb92da;\r\n        }\r\n    `}\r\n\r\n    \r\n`;\r\nconst _Result = styled.span<{\r\n    isMatch: boolean;\r\n}>`\r\n    ${props => !props.isMatch ? '' : css`\r\n        color: #e61426;\r\n    `}\r\n`;\r\n\r\nconst _Sum = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    width: 100%;\r\n    /* height: 32px; */\r\n    background-color: #eaecca;\r\n    box-sizing: border-box;\r\n    border: 1px solid #676767;\r\n    color: #6e6f91;\r\n    text-align: left;\r\n    padding-left: 4px;\r\n`;\r\nconst _Rate = styled.span<{\r\n}>`\r\n    color: #be003f;\r\n`;\r\n\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    /* background-color: #d1dad4c8; */\r\n    color: #a10000;\r\n    text-align: left;\r\n    padding-left: 4px;\r\n`;","import { useContext, useEffect, useMemo, useState, useCallback } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport BackingState from \"../../redux/store/score/backing/backingState\";\r\nimport { BackingPatternProps, DetailChord, VoicingProps } from \"../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../utils/backingUtil\";\r\nimport LibraryUtil from \"../../utils/LibraryUtil\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport ThemaUtil from \"../custom/backing/themaUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nnamespace ThemaSelectorFrame {\r\n\r\n    export type CachePorps = {\r\n        patternList: LibraryUtil.PattItemProps[];\r\n        voicingList: LibraryUtil.VoicItemProps[];\r\n        field: Field;\r\n        invalidate: () => void;\r\n        // updateBacking: () => void;\r\n        testBacking: () => void;\r\n        isPermitTest: () => boolean;\r\n        isPreview: boolean;\r\n    };\r\n\r\n    type Field = {\r\n        focusSide: number;\r\n        pattIndex: number;\r\n        voicIndex: number;\r\n    }\r\n\r\n    /**\r\n     * ライブラリセレクタ画面\r\n     * @returns コンポーネント\r\n     */\r\n    export const Component = () => {\r\n\r\n        const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n        const [field, setField] = useState<Field>({\r\n            focusSide: 0,\r\n            pattIndex: 0,\r\n            voicIndex: 0\r\n        });\r\n\r\n        const invalidate = () => {\r\n            setField({ ...field });\r\n        };\r\n\r\n        const chordList = store.scoreData.chordList;\r\n        const systemState = store.systemState;\r\n        const focusIndex = store.scoreState.focusIndex;\r\n        const chord = chordList[focusIndex].detail as DetailChord;\r\n        const state = store.scoreState;\r\n        const cache = state.elementCacheList[state.focusIndex];\r\n        const chordCache = state.chordCacheList[cache.chordBlockNo];\r\n        const structList = chordCache.structList;\r\n\r\n        const rootIndex = chord.root?.index as number;\r\n\r\n        const backing = store.backingState as BackingState.Editor;\r\n        const themaList = systemState.themaList;\r\n        const thema = themaList[systemState.activeThemaIndex];\r\n\r\n        useEffect(() => {\r\n            console.log('thema start');\r\n            console.log(thema);\r\n\r\n            return () => {\r\n                console.log('thema end');\r\n\r\n                // キャッシュを削除\r\n                dispatcher.system.setState({\r\n                    ...store.systemState,\r\n                    cache: null\r\n                });\r\n            }\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            // キーボード操作のためのキャッシュを作成\r\n            const inputCache: CachePorps = {\r\n                patternList,\r\n                voicingList,\r\n                field,\r\n                invalidate,\r\n                // updateBacking,\r\n                testBacking,\r\n                isPermitTest,\r\n                isPreview: false\r\n            };\r\n            dispatcher.system.setState({\r\n                ...store.systemState,\r\n                cache: inputCache\r\n            });\r\n        }, []);\r\n\r\n\r\n        useEffect(() => {\r\n            updateBacking();\r\n            const cache = store.systemState.cache as CachePorps;\r\n            if (cache != null) {\r\n                // cache.updateBacking = updateBacking;\r\n                cache.testBacking = testBacking;\r\n                cache.isPermitTest = isPermitTest;\r\n                cache.isPreview = backing.isPreview;\r\n            }\r\n        }, [field, backing.isPreview]);\r\n\r\n        /**\r\n         * バッキングの状態を更新する\r\n         */\r\n        const updateBacking = () => {\r\n            if (isPermitTest()) {\r\n                const patternProps = patternList[field.pattIndex].source;\r\n                const voicingProps = voicingList.filter(voic=>{\r\n                    return LibraryUtil.acceptVoic(voic, patternList, field.pattIndex);\r\n                })[field.voicIndex].source;\r\n                const voicingTable = BackingUtil.getInitVoicingTable(voicingProps, structList.length);\r\n                const pattern = BackingUtil.getEditorPatternFromChordBacking(voicingTable, patternProps);\r\n                dispatcher.backing.setState({ ...backing, voicingTable, pattern });\r\n            } else {\r\n                dispatcher.backing.setState({ ...backing, voicingTable: [], pattern: null });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * プレビュー再生を行う\r\n         */\r\n        const testBacking = useCallback(() => {\r\n            console.log('test');\r\n            if (!backing.isPreview) {\r\n                dispatcher.backing.testBacking();\r\n            } else {\r\n                BackingUtil.stopPreview(store, backing, dispatcher, store.reserveTasks);\r\n            }\r\n        }, [store]);\r\n\r\n        /**\r\n         * プレビュー再生が可能な状態か判断する\r\n         * @returns プレビュー再生が可能か\r\n         */\r\n        const isPermitTest = () => {\r\n            return field.voicIndex > 0;\r\n        }\r\n\r\n        const [patternList, voicingList] = useMemo(() => {\r\n\r\n            const patternList: LibraryUtil.PattItemProps[] = [];\r\n            const voicingList: LibraryUtil.VoicItemProps[] = [];\r\n\r\n            // 空のボイシングを先頭に追加\r\n            voicingList.push({ pattIdx: -1, dispName: 'none', source: [] });\r\n\r\n            //検索条件\r\n            const condition: LibraryUtil.Condition = {\r\n                symbolKey: chord.symbolKey,\r\n                rootIndex,\r\n                beatLen: chord.beatLen,\r\n                head: chord.minute.head,\r\n                tail: chord.minute.tail\r\n            };\r\n\r\n            // シンプルバッキング\r\n            const sustMet = thema.meths[0];\r\n            LibraryUtil.searchSustMeth(sustMet, condition, null, (voic: ThemaUtil.LevelVoic) => {\r\n                const dispName = voic.source.map(v => `[${v.octave}-${v.struct}]`).join(',');\r\n                voicingList.push({\r\n                    pattIdx: patternList.length,\r\n                    dispName,\r\n                    source: voic.source\r\n                });\r\n            });\r\n            patternList.push({\r\n                dispName: 'none',\r\n                source: null,\r\n                key: -1,\r\n                refer: -1\r\n            });\r\n\r\n            // パターンバッキング\r\n            const pattMet = thema.meths[1];\r\n            LibraryUtil.searchPattMeth(pattMet, condition, null, (patt: ThemaUtil.LevelPatt) => {\r\n                patternList.push({\r\n                    dispName: patt.pattName,\r\n                    source: patt.source,\r\n                    key: patt.key,\r\n                    refer: patt.refer\r\n                });\r\n            }, (voic: ThemaUtil.LevelVoic) => {\r\n                // const dispName = voic.source.map(v => `[${v.octave}-${v.struct}]`).join(',');\r\n                const soundList = voic.source.map(v => {\r\n                    const struct = structList[v.struct];\r\n                    return TheoryUtil.KEY12_SHARP_LIST[struct.soundIndex] + (v.octave + struct.adjustOctave);\r\n                });\r\n                voicingList.push({\r\n                    pattIdx: patternList.length,\r\n                    dispName: soundList.join('-'),\r\n                    source: voic.source\r\n                });\r\n            }, () => { });\r\n            return [patternList, voicingList];\r\n        }, []);\r\n\r\n        const [pattJsxList, voicJsxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n            return [\r\n                // パターンのJSXリスト\r\n                patternList.map((patt, i) => {\r\n                    return (\r\n                        <_Item key={i}\r\n                            isFocus={field.pattIndex === i}\r\n                            isNone={i === 0}\r\n                            onClick={() => {\r\n                                field.focusSide = 0;\r\n                                field.pattIndex = i;\r\n                                // パターンが変わったらボイシングの選択をリセット\r\n                                if (field.pattIndex !== i) {\r\n                                    field.voicIndex = 0;\r\n                                }\r\n                                invalidate();\r\n                                updateBacking();\r\n                            }}\r\n                        >{patt.dispName}</_Item>\r\n                    )\r\n                }),\r\n                // ボイシングのJSXリスト\r\n                voicingList.filter((voic) => {\r\n                    return LibraryUtil.acceptVoic(voic, patternList, field.pattIndex);\r\n                }).map((voic, i): JSX.Element => {\r\n                    const soundList = voic.source.map((v, i) => {\r\n                        const struct = structList[v.struct];\r\n                        const fullName = TheoryUtil.KEY12_SHARP_LIST[struct.soundIndex] + (v.octave + struct.adjustOctave);\r\n                        return (<span key={i}>\r\n                            <_Struct\r\n                                interval={LibraryUtil.getDistinctionFromRelate(struct)}\r\n                            >{fullName}</_Struct>{i < voic.source.length - 1 ? '-' : ''}\r\n                        </span>);\r\n                    });\r\n                    const dispLabel: JSX.Element = i === 0 ? <>none</> : <>{soundList}</>;\r\n                    return (\r\n                        <_Item key={i}\r\n                            isFocus={field.voicIndex === i}\r\n                            isNone={i === 0}\r\n                            onClick={() => {\r\n                                field.focusSide = 1;\r\n                                field.voicIndex = i;\r\n                                invalidate();\r\n                                updateBacking();\r\n                            }}\r\n                        >{dispLabel}</_Item>\r\n                    )\r\n                })\r\n            ];\r\n        }, [field.pattIndex, field.voicIndex]);\r\n\r\n        return (\r\n            <_Wrap>\r\n                <_PrevireBrind isUse={backing.isPreview} />\r\n                <_BodyDiv>\r\n                    <_ListDiv isFocus={field.focusSide === 0}>\r\n                        <_Header>Pattern</_Header>\r\n                        {pattJsxList}\r\n                    </_ListDiv>\r\n                    <_ListDiv isFocus={field.focusSide === 1}>\r\n                        <_Header>Voicing</_Header>\r\n                        {voicJsxList}\r\n                    </_ListDiv>\r\n                </_BodyDiv>\r\n                <_FooterDiv>\r\n                    {/* プレビュー再生 */}\r\n                    <_Button isEnable={isPermitTest()} onClick={testBacking}>\r\n                        {!backing?.isPreview ? 'Test' : 'Stop'}\r\n                    </_Button>\r\n                    {/* 選択を反映せずに閉じる */}\r\n                    <_Button isEnable={!backing.isPreview} onClick={() => {\r\n                        dispatcher.score.closeLibraryWnd();\r\n                    }}>Cancel</_Button>\r\n                    {/* 選択を反映して閉じる */}\r\n                    <_Button isEnable={!backing.isPreview} onClick={() => {\r\n                        const pattern = patternList[field.pattIndex];\r\n                        const voicing = voicingList.filter(voic=>{\r\n                            return LibraryUtil.acceptVoic(voic, patternList, field.pattIndex);\r\n                        })[field.voicIndex];\r\n                        dispatcher.thema.mappingSelectorToScore(voicing.source, pattern.source);\r\n                        dispatcher.score.closeLibraryWnd();\r\n                    }}>Apply</_Button>\r\n                </_FooterDiv>\r\n            </_Wrap>\r\n        )\r\n    }\r\n}\r\nexport default ThemaSelectorFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 630px;\r\n    height: 400px;\r\n    background-color: #d4d5ca;\r\n    border: 1px solid #121212;\r\n    box-sizing: border-box;\r\n`;\r\nconst FOOTER_WIDTH = 30;\r\nconst _BodyDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${FOOTER_WIDTH}px);\r\n    /* background-color: #4d5e53; */\r\n`;\r\nconst _FooterDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${FOOTER_WIDTH}px;\r\n    background-color: #c7c7c7;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _ListDiv = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #4d5e53; */\r\n    /* border: 1px solid #121212; */\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffffff45;\r\n        /* border: 1px solid #eb0000; */\r\n    `}\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    background-color: #3c4a99c3;\r\n    box-sizing: border-box;\r\n    border: 1px solid #f0f0f0;\r\n    color: #ffffff;\r\n    text-align: center;\r\n`;\r\nconst _Item = styled.div<{\r\n    isFocus: boolean;\r\n    isNone: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    background-color: #d1dad4c8;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #e6dd5bc5;\r\n    `}\r\n    box-sizing: border-box;\r\n    border: 1px solid #676767;\r\n    color: #000786;\r\n    ${props => !props.isNone ? '' : css`\r\n        color: #850000;\r\n    `}\r\n    text-align: left;\r\n    padding-left: 4px;\r\n`;\r\nconst _Struct = styled.span<{\r\n    interval: number;\r\n}>`\r\n    color: ${props => {\r\n        switch (props.interval) {\r\n            case 1: return '#960000';\r\n            case 3: return '#000877';\r\n            case 5: return '#007a06';\r\n            case 7: return '#742e00';\r\n            case 9: return '#005e5e';\r\n        }\r\n    }};\r\n`;\r\n\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 26px;\r\n    margin: 2px 2px 0 0;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-weight: 600;\r\n    background-color: #0051ff21;\r\n    border: solid 1px #555;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    line-height: 20px;\r\n    text-align: center;\r\n\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n\r\n    &:hover {\r\n        background-color: #ff008039;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: calc(100% - 30px);\r\n    background-color: #7a270028;\r\n`;","import { useContext } from \"react\";\r\nimport { Stream } from \"stream\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { DetailChord } from \"../../../../redux/store/score/scoreData\";\r\nimport LibraryUtil from \"../../../../utils/LibraryUtil\";\r\nimport BackingEditorFrame from \"../../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PresetSelectorFrame from \"../../../thema/presetSelectorFrame\";\r\nimport ThemaSelectorFrame from \"../../../thema/themaSelectorFrame\";\r\n\r\n\r\nconst HarmHideFrame = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const isOpen = state.hideMenu !== 'none';\r\n\r\n    const enableState = LibraryUtil.getEnableState(store);\r\n\r\n    return (<>\r\n        <_Blind isOpen={isOpen} onClick={() => {\r\n            dispatcher.backing.closeBackingEditor();\r\n        }} />\r\n        <_Wrap>\r\n            <_Contents isOpen={isOpen}>\r\n                {(() => {\r\n                    switch (state.hideMenu) {\r\n                        case 'none': return <></>;\r\n                        case 'backing': return <BackingEditorFrame />\r\n                        case 'library': return <ThemaSelectorFrame.Component />\r\n                        case 'preset': return <PresetSelectorFrame.Component />\r\n                    }\r\n                })()}\r\n                {/* {store.backingState == null ? <></> : <BackingEditorFrame />} */}\r\n            </_Contents>\r\n            <_LabelFrame>\r\n                <_Label\r\n                    isEnable={enableState.isChordElement}\r\n                    isVisible={['backing', 'none'].includes(state.hideMenu)}\r\n                    onClick={() => {\r\n                        if (state.hideMenu === 'none') {\r\n                            dispatcher.backing.openBackingEditor();\r\n                        } else {\r\n                            dispatcher.backing.closeBackingEditor();\r\n                        }\r\n                    }}>\r\n                    <div>Backing</div>\r\n                </_Label>\r\n                <_Label\r\n                    // 複数選択していない場合\r\n                    isEnable={\r\n                        enableState.isUseLib &&\r\n                        enableState.isChordElement &&\r\n                        !enableState.isRangeSelect\r\n                    }\r\n                    isVisible={['library', 'none'].includes(state.hideMenu)}\r\n                    onClick={() => {\r\n                        if (state.hideMenu === 'none') {\r\n                            dispatcher.score.openLibraryWnd(false);\r\n                        } else {\r\n                            dispatcher.score.closeLibraryWnd();\r\n                        }\r\n                    }}>\r\n                    <div>Library</div>\r\n                </_Label>\r\n                <_Label\r\n                    // 複数選択している場合\r\n                    isEnable={enableState.isRangeSelect && enableState.isUseLib}\r\n                    isVisible={['preset', 'none'].includes(state.hideMenu)}\r\n                    onClick={() => {\r\n                        if (state.hideMenu === 'none') {\r\n                            dispatcher.score.openLibraryWnd(true);\r\n                        } else {\r\n                            dispatcher.score.closeLibraryWnd();\r\n                        }\r\n                    }}>\r\n                    <div>Preset</div>\r\n                </_Label>\r\n            </_LabelFrame>\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default HarmHideFrame;\r\n\r\nconst _Blind = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: ${props => props.isOpen ? 'inline-block' : 'none'};\r\n    position: absolute;\r\n    z-index: 7;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #01004216;\r\n    backdrop-filter: blur(6px);\r\n`;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 8;\r\n    left: 0;\r\n    top: 0;\r\n    /* width: 525px; */\r\n\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isOpen: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.isOpen ? '630px' : 0};\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    opacity: 0.9;\r\n    transition: width 0.1s;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _LabelFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n`;\r\nconst _Label = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n}>`\r\n    display: block;\r\n    width: 25px;\r\n    height: 110px;\r\n    margin-top: 4px;\r\n    background-color: #e4e4e4;\r\n    border-top: 1px solid #5a5a5a;\r\n    border-right: 1px solid #5a5a5a;\r\n    border-bottom: 1px solid #5a5a5a;\r\n    border-radius: 0 10px 10px 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #5a5a5a;\r\n    text-align: center;\r\n    line-height: 16px;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.5;\r\n        pointer-events: none;\r\n    `}\r\n    ${props => props.isVisible ? '' : css`\r\n        opacity: 0;\r\n    `}\r\n    \r\n    & div {\r\n        width: 110px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-100%);\r\n        /* background-color: #fff; */\r\n    }\r\n\r\n    &:hover {\r\n        background-color: #d1e5eb;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmClipboard = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    return (\r\n        <_Wrap>\r\n            <_Label>clipboard</_Label>\r\n            <_TypeDiv>\r\n                <_ModeItem isActive={state.cloneBacking != null}>Backing</_ModeItem>\r\n                <_ModeItem isActive={state.copiedElementList != null}>Elements</_ModeItem>\r\n            </_TypeDiv>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmClipboard;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _TypeDiv = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 10px;\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #a8dbb3;\r\n    `}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #8f8f8f;\r\n    border-radius: 2px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord } from \"../../../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst MEMORI_WIDTH = 12;\r\n\r\nconst HarmMeasure = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const dataList = store.scoreData.chordList;\r\n    const focusIndex = state.focusIndex;\r\n    const cacheList = state.elementCacheList;\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        list.push(<_Margin key={list.length} />);\r\n        state.measureCacheList.forEach((cache) => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            list.push(\r\n                <_Memori\r\n                    key={list.length}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {cache.barCount !== -1 ? <_Bar>{cache.barCount}</_Bar> : ''}\r\n                    {/* {<_Bar>{i}</_Bar>} */}\r\n                </_Memori>\r\n            );\r\n        });\r\n        list.push(<_Margin key={list.length} />);\r\n        return list;\r\n    }, [state.beatCacheList]);\r\n\r\n    const [beatJsxList, minuteJsxList] = useMemo(() => {\r\n        const beatJsxList: JSX.Element[] = [];\r\n        const minuteJsxList: JSX.Element[] = [];\r\n\r\n        const isChordFocus = dataList[focusIndex].type === 'chord';\r\n        const curChordIndex = cacheList[focusIndex].chordIndex;\r\n        // list.push(<_Start key={list.length}/>);\r\n        dataList.forEach((data, i) => {\r\n\r\n            const cache = state.elementCacheList[i];\r\n            if (data.type === 'chord' && Math.abs(cache.chordIndex - curChordIndex) <= 5) {\r\n\r\n                const detail = data.detail as DetailChord;\r\n                const sustain = detail.beatLen + detail.minute.head + detail.minute.tail;\r\n\r\n                let label = '';\r\n                let type: ItemType = 'ather';\r\n                if (!isChordFocus) {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                } else {\r\n                    if (cache.chordIndex === curChordIndex) {\r\n                        label = 'cur';\r\n                        type = 'cur';\r\n                    } else if (cache.chordIndex === curChordIndex - 1) {\r\n                        label = 'prev';\r\n                        type = 'prev';\r\n                    } else if (cache.chordIndex === curChordIndex + 1) {\r\n                        label = 'next';\r\n                        type = 'next';\r\n                    }\r\n                }\r\n\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatMemori = detail.beatLen * beatProps.beatMemoriCount;\r\n                const posMemori = 16 + cache.curTotalMemori;\r\n                beatJsxList.push(\r\n                    <_SustainItem key={beatJsxList.length}\r\n                        type={type}\r\n                        pos={posMemori} sustain={beatMemori + minute}\r\n                    >{label}</_SustainItem>\r\n                );\r\n                minuteJsxList.push(\r\n                    <_BeatItem key={beatJsxList.length}\r\n                        isActive={type === 'cur'}\r\n                        pos={posMemori + detail.minute.head} sustain={beatMemori}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n        // list.push(<_Start key={list.length}/>);\r\n        return [beatJsxList, minuteJsxList];\r\n    }, [dataList.length, focusIndex, state.beatCacheList]);\r\n\r\n    const scrollPos = cacheList[focusIndex].curTotalMemori * MEMORI_WIDTH;\r\n    return (\r\n        <_Wrap>\r\n            <_ScrollFrame pos={scrollPos}>\r\n                <_Blocks>\r\n                    <_Beat>\r\n                        {beatJsxList}\r\n                    </_Beat>\r\n                    <_Minute>\r\n                        {minuteJsxList}\r\n                    </_Minute>\r\n                </_Blocks>\r\n                <_Measure>\r\n                    {memoriJsxList}\r\n                </_Measure>\r\n            </_ScrollFrame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmMeasure;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: left;\r\n    white-space: nowrap;  \r\n`;\r\n\r\nconst _ScrollFrame = styled.div<{\r\n    pos: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => -props.pos}px;\r\n    position: absolute;\r\n    height: 100%;\r\n    /* width: 100px;\r\n    background-color: #000; */\r\n    transition: left 0.5s;\r\n`;\r\n\r\nconst _Blocks = styled.div`\r\n    display: block;\r\n    /* position: relative; */\r\n    height: 40px;\r\n    /* width: 2200px; */\r\n    background-color: rgb(131, 131, 131);\r\n`;\r\n\r\nconst _Beat = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 30px;\r\n`;\r\n\r\nconst _Minute = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n`;\r\n\r\ntype ItemType = 'cur' | 'prev' | 'next' | 'ather';\r\nconst _SustainItem = styled.div<{\r\n    pos: number;\r\n    sustain: number;\r\n    type: ItemType;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(136, 163, 133);\r\n    ${props => {\r\n        switch (props.type) {\r\n            case 'cur': return css`\r\n                background-color: rgb(218, 107, 134);\r\n                /* color: #ffe551; */\r\n            `;\r\n            case 'prev': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 177, 221);\r\n            `;\r\n            case 'next': return css`\r\n                opacity: 0.4;\r\n                background-color: rgb(163, 221, 171);\r\n            `;\r\n            case 'ather': return css`\r\n                background-color: rgb(192, 192, 192);\r\n            `;\r\n        }\r\n    }}\r\n    border-left: solid 1px #000;\r\n    border-top: solid 1px #000;\r\n    border-bottom: solid 1px #000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _BeatItem = styled.div<{\r\n    isActive: boolean;\r\n    pos: number;\r\n    sustain: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.pos * MEMORI_WIDTH}px;\r\n    width: ${props => props.sustain * MEMORI_WIDTH}px;\r\n    height: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n    background-color: rgb(224, 224, 224);\r\n    border-left: solid 1px #000;\r\n    ${props => !props.isActive ? '' : css`\r\n        /* background-color: rgb(233, 180, 228); */\r\n        /* color: #ffe551; */\r\n    `}\r\n`;\r\n\r\nconst _Measure = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    height: 38px;\r\n    background-color: rgb(48, 48, 48);\r\n    border-top: solid 2px rgb(128, 128, 128);\r\n    background: linear-gradient(to bottom, rgb(255, 255, 255), rgb(98, 97, 114));\r\n`;\r\n\r\n\r\nconst _Margin = styled.div`\r\n    display: inline-block;\r\n    width: ${MEMORI_WIDTH * 16}px;\r\n    height: 100%;\r\n    background-color: #d9ebe7;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${MEMORI_WIDTH}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useState, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\nconst HarmBackingLibrary = () => {\r\n\r\n    const { store,dispatcher } = useContext(GlobalContext);\r\n\r\n    const systemState = store.systemState;\r\n    const list = store.systemState.themaList;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Label>backing-library</_Label>\r\n            <_Combobox\r\n                value={systemState.activeThemaIndex}\r\n                onChange={(e) => {\r\n                    systemState.activeThemaIndex = Number(e.target.value);\r\n                    dispatcher.system.setState(systemState);\r\n                }}\r\n            >{[<option key={-1} value={-1}>{''}</option>].concat(list.map((thema, i) => {\r\n                const name = thema.themaName;\r\n                return <option key={i} value={i}>{name}</option>\r\n            }))}</_Combobox>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default HarmBackingLibrary;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    margin-left: 20px;\r\n    /* background-color: red; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #979797;\r\n    margin-left: 4px;\r\n    font-style: italic;\r\n    line-height: 38px;\r\n    /* vertical-align: top; */\r\n    /* background-color: yellow; */\r\n`;\r\n\r\nconst _Combobox = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    width: 320px;\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 8px;\r\n    font-size: 18px;\r\n    /* line-height: 32px; */\r\n    color: #1100d0;\r\n    border: solid 1px #000;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;\r\n\r\n","import styled from \"styled-components\";\r\nimport { HARMONIZE_FOOT_WIDTH, HARMONIZE_HEAD_WIDTH, HARMONIZE_STRUCT_WIDTH, HARMONIZE_RIGHT_WIDTH, HARMONIZE_SECTIONS_WIDTH } from \"../../../../utils/systemConst\";\r\nimport HarmNote from \"./harmNote\";\r\nimport HarmSections from \"./harmSections\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { KeyboardEvent, useContext, useEffect, useRef, useState } from \"react\";\r\nimport { NoteKeySwitch } from \"./input/noteInput\";\r\nimport HarmSideForm from \"./side/harmSideForm\";\r\nimport StructViewer from \"./info/structViewer\";\r\nimport HarmHideFrame from \"./harmHideFrame\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport HarmClipboard from \"./initial/harmClipboard\";\r\nimport HarmMeasure from \"./measure/harmMeasure\";\r\nimport HarmBackingLibrary from \"./initial/harmBackingLibrary\";\r\n\r\n/**\r\n * ハーモナイズタブ\r\n * @param props 引数\r\n * @returns コンポーネント\r\n */\r\nconst HarmonizeTab = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const wrapRef = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n\r\n    const state = store.scoreState;\r\n\r\n    const isMelody = store.scoreState.isMelody;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, harmonize: () => {\r\n                dispatcher.system.setInvalidate({\r\n                    ...store.invalidate, harmoniizeInvalidate: {}\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isMelody) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isMelody]);\r\n\r\n\r\n    const cache = state.elementCacheList[state.focusIndex];\r\n    const element = store.scoreData.chordList[state.focusIndex];\r\n    \r\n    const timelineJsx = state.elementCacheList.length === 0 ? <></> : <HarmMeasure />;\r\n\r\n    let structViewerJsx = <></>;\r\n    if (state.elementCacheList.length > 0) {\r\n        const scoreCache = state.chordCacheList[cache.chordBlockNo];\r\n        const structList = element.type === 'chord' ? scoreCache.structList : [];\r\n        structViewerJsx = <StructViewer cache={cache} structList={structList} />;\r\n    }\r\n\r\n    /** サイドフォームの活性状態 */\r\n    const sideFormEnable = !state.isPreview && state.hideMenu === 'none';\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => NoteKeySwitch(e, store, dispatcher, false)}\r\n        >\r\n            <_SectionsDiv isEnable={sideFormEnable}><HarmSections /></_SectionsDiv>\r\n            <_Left>\r\n                <_Head isEnable={!state.isPreview}>\r\n                    <HarmClipboard />\r\n                    <HarmBackingLibrary />\r\n                </_Head>\r\n                <_Middle>\r\n                    <HarmHideFrame />\r\n                    <_Main>\r\n                        <HarmNote />\r\n                    </_Main>\r\n                    <_PrevireBrind isUse={state.isPreview} />\r\n                </_Middle>\r\n                <_Foot>\r\n                    <_TIMELINE_WRAP>{timelineJsx}</_TIMELINE_WRAP>\r\n                    <_INFO_WRAP>{structViewerJsx}</_INFO_WRAP>\r\n                </_Foot>\r\n            </_Left>\r\n            <_Right isEnable={sideFormEnable}>\r\n                <HarmSideForm />\r\n            </_Right>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default HarmonizeTab;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _SectionsDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_SECTIONS_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n    border-right: 1px solid #3e3f57;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_RIGHT_WIDTH + HARMONIZE_SECTIONS_WIDTH}px);\r\n    height: 100%;\r\n    background-color: #c7c7c7;\r\n    vertical-align: top;\r\n`;\r\nconst _Right = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_RIGHT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #d6d6d6;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Head = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_HEAD_WIDTH}px;\r\n    background-color: #d4d4d4;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\n\r\nconst _Middle = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HARMONIZE_HEAD_WIDTH + HARMONIZE_FOOT_WIDTH}px);\r\n    background-color: #e0e0e0;\r\n    overflow: auto;\r\n    \r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    position: absolute;\r\n    margin-left: 25px;\r\n    width: calc(100% - 25px);\r\n    min-height: 100%;\r\n    vertical-align: top;\r\n    /* overflow: auto; */\r\n`;\r\n\r\nconst _Foot = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HARMONIZE_FOOT_WIDTH}px;\r\n    background-color: #cacaca;\r\n    & * {\r\n        vertical-align: top;\r\n    }\r\n`;\r\nconst _TIMELINE_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - ${HARMONIZE_STRUCT_WIDTH}px);\r\n    height: 100%;\r\n    /* background-color: #ddc2c2; */\r\n`;\r\nconst _INFO_WRAP = styled.div`\r\n    display: inline-block;\r\n    width: ${HARMONIZE_STRUCT_WIDTH}px;\r\n    height: 100%;\r\n    background-color: #757575;\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #7a270028;\r\n`;","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyTimelineMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            mouse.lock = x;\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        // if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            if (mouse.pos !== x) {\r\n                // console.log(`★ move=== x: ${x}, pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n                mouse.pos = x;\r\n                update();\r\n            }\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const rect = refs.measure.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n\r\n            const state = store.melodyState;\r\n            const mouse = state.timelineMouse;\r\n\r\n            // update();\r\n\r\n            const lock = mouse.lock + refs.measure.scrollLeft;\r\n            const pos = mouse.pos + refs.measure.scrollLeft;\r\n            const notesList = store.scoreData.notesList;\r\n            let start = -1;\r\n            let end = -1;\r\n            for (let i = 0; i < notesList.length; i++) {\r\n                const notes = notesList[i];\r\n                const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                const [head, tail] = lock < pos ? [lock, pos] : [pos, lock];\r\n                if (head <= left && tail >= right) {\r\n                    if (start === -1) start = i;\r\n                } else {\r\n                    if (start !== -1) {\r\n                        end = i - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            if (start !== -1 && end === -1) {\r\n                end = notesList.length - 1;\r\n            }\r\n            state.focusIndex = start;\r\n            state.destIndex = end;\r\n            mouse.lock = -1;\r\n            // console.log(`★ up=== focus: ${state.focusIndex}, dist: ${state.distIndex}`);\r\n            dispatcher.melody.setState(state);\r\n            // const [head, tail] = mouse.lock < x ? [mouse.lock, x] : [x, mouse.lock];\r\n            // const width = tail - head;\r\n            // if (width > 5) {\r\n            //     mouse.width = width;\r\n            //     mouse.lock = -1;\r\n            //     mouse.pos = head;\r\n            //     update();\r\n            //     console.log(`★ up=== pox: ${mouse.pos}, lock: ${mouse.lock}, width: ${mouse.width}`);\r\n            // }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MelodyTimelineMouseOperation;","import { useContext, useEffect, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ScoreCache from \"../../../../redux/store/score/scoreCache\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport MelodyUtil, { getNormalizeLenFromNotes } from \"../../../../utils/melodyUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimelineMouseOperation from \"./util/melodyTimelineMouseOperation\";\r\n\r\nconst MelodyTimeline = (props: {\r\n    barLength: number;\r\n    beatWidth: number;\r\n    curChord: ChordElement | null;\r\n    timelineLength: number;\r\n    mouseMeasurePos: number;\r\n    update: () => void;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const measureRef = useRef<null | HTMLDivElement>(null);\r\n    const chordRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const state = store.scoreState;\r\n    const update = props.update;\r\n\r\n    const chordList = store.scoreData.chordList;\r\n    const barLength = props.barLength;\r\n    const beatWidth = props.beatWidth;\r\n    const curChord = props.curChord;\r\n    const timelineLength = props.timelineLength;\r\n    const mouseMeasurePos = props.mouseMeasurePos;\r\n    const rate = 1 / store.melodyState.quantize;\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    useEffect(() => {\r\n        store.refs.melody.measure = measureRef.current;\r\n        store.refs.melody.chord = chordRef.current;\r\n    }, []);\r\n\r\n    const measureJsxList = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        state.measureCacheList.forEach(cache => {\r\n\r\n            let bean: { width: number, height: number, color: string } = { width: 1, height: 10, color: '#555' }\r\n            switch (true) {\r\n                case cache.rate === 4: bean = { width: 2, height: 22, color: '#747474' }; break;\r\n                case cache.rate === 8: bean = { width: 1, height: 18, color: '#646464' }; break;\r\n                case cache.rate === 16: bean = { width: 1, height: 10, color: '#7a7a7a' }; break;\r\n            }\r\n            // 表示する小節数\r\n            const barCount = cache.barCount;\r\n\r\n            jsxList.push(\r\n                <_Memori\r\n                    key={jsxList.length}\r\n                    beatWidth={beatWidth}\r\n                    width={bean.width}\r\n                    height={bean.height}\r\n                    color={bean.color}\r\n                >\r\n                    {barCount !== -1 ? <_Bar>{barCount}</_Bar> : ''}\r\n                </_Memori>\r\n            );\r\n        });\r\n        return jsxList;\r\n    }, [state.beatCacheList, barLength]);\r\n\r\n    const chordJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        if (state.elementCacheList.length === 0) {\r\n            return jsxList;\r\n        }\r\n        let left = 0;\r\n        chordList.forEach((element, i) => {\r\n            if (element.type === 'chord') {\r\n                // console.log(state.elementCacheList.length);\r\n                const detail = element.detail as DetailChord;\r\n                const cache = state.elementCacheList[i];\r\n                const minute = detail.minute.head + detail.minute.tail;\r\n                const beatProps = TheoryUtil.getBeatProps(cache.beatSignature);\r\n                const minuteLen = minute * 0.25;\r\n                const adjustRate = beatProps.beatMemoriCount / 4;\r\n                const width = beatWidth * (detail.beatLen * adjustRate + minuteLen);\r\n\r\n                if (chordRef.current != null) {\r\n                    const scroll = chordRef.current.scrollLeft;\r\n                    if (left + width - scroll >= 0 ||\r\n                        left - scroll <= chordRef.current.clientWidth) {\r\n                        const symbolNmae = TheoryUtil.getSymbolFromKey(detail.symbolKey)?.name;\r\n                        const degreeName = detail.root == null ? '-' :\r\n                            TheoryUtil.getDegreeRoot(detail.root) + symbolNmae;\r\n                        const chordName = detail.root == null ? '-' :\r\n                            TheoryUtil.getRootName(detail.root, init.keyIndex) + symbolNmae;\r\n                        jsxList.push(\r\n                            <_ChordItem key={jsxList.length}\r\n                                left={left}\r\n                                width={width}\r\n                                isActive={element == curChord}\r\n                                onClick={() => {\r\n                                    state.isMelody = false;\r\n                                    state.focusIndex = state.distIndex = i;\r\n                                    dispatcher.score.setScoreState(state);\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                                }}\r\n                            >\r\n                                <_DegreeName>{degreeName}</_DegreeName><_ChordName> ({chordName})</_ChordName>\r\n                            </_ChordItem>\r\n                        );\r\n                    }\r\n                }\r\n                left += width;\r\n            }\r\n        });\r\n        return jsxList;\r\n    }, [chordList, curChord]);\r\n\r\n    return (<>\r\n        <_Chord ref={chordRef}>\r\n            <_ChordWrap width={timelineLength}>\r\n                {chordJsxList}\r\n            </_ChordWrap>\r\n        </_Chord>\r\n        <_MeasureWrap ref={measureRef}>\r\n            <_MeasureInner\r\n                onMouseDown={e => MelodyTimelineMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseMove={e => MelodyTimelineMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseUp={e => MelodyTimelineMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                onMouseLeave={() => {\r\n                    const mouse = store.melodyState.timelineMouse;\r\n                    mouse.pos = -1;\r\n                    mouse.lock = -1;\r\n                    update();\r\n                }}\r\n            >\r\n                {measureJsxList}\r\n                <_MousePos\r\n                    left={mouseMeasurePos * beatWidth * rate}\r\n                    width={beatWidth * rate}\r\n                />\r\n            </_MeasureInner>\r\n        </_MeasureWrap>\r\n    </>);\r\n}\r\n\r\nconst getExtendMeasure = (measureList: ScoreCache.Measure[]): ScoreCache.Measure[] => {\r\n    const list: ScoreCache.Measure[] = [];\r\n\r\n    return list;\r\n}\r\n\r\nexport default MelodyTimeline;\r\n\r\nconst _MeasureWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _MeasureInner = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* width: 100%; */\r\n    left: 0;\r\n    top: 0;\r\n    width: 10000px;\r\n    height: 100%;\r\n    &:hover {\r\n        background-color: #ff00b347;\r\n    }\r\n`;\r\n\r\n\r\nconst _MousePos = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: ${props => props.left}px;\r\n    top: 0px;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    background-color: #ffff006c;\r\n`;\r\n\r\nconst _Chord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c0c0c0;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst _ChordItem = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.left}px;\r\n    width: ${props => props.width - 1}px;\r\n    height: calc(100% - 2px);\r\n    box-sizing: border-box;\r\n    border: 1px solid #646464;\r\n    border-left: 4px solid #940000;\r\n    background-color: #ffffff22;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffce2c9b;`}\r\n    margin: 1px 0 0 1px;\r\n    \r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #fffb0037;\r\n    }\r\n`;\r\n\r\nconst _DegreeName = styled.span`\r\n    color: #d80000;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #0000007d;\r\n`;\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    pointer-events: none;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: bottom;\r\n    margin-top: 25px;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\n\r\nconst _Memori = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    color: string;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.beatWidth / 4}px;\r\n    height: ${props => props.height}px;\r\n    border-left: solid ${props => props.width}px ${props => props.color};\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Bar = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: -5px;\r\n    top: 18px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #dd0000;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { ChordElement, DetailChord, DetailInit } from \"../../../../redux/store/score/scoreData\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../utils/systemConst\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst MelodyPitchList = (props: {\r\n    mousePitchIndex: number;\r\n    curChord: ChordElement | null;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    // 左端の音程リストのJSXリスト\r\n    const pitchItemJsxList = useMemo(() => {\r\n        const structIndexList: number[] = [];\r\n        if (props.curChord != null) {\r\n            const detail = props.curChord.detail as DetailChord;\r\n            const symbol = TheoryUtil.getSymbolFromKey(detail.symbolKey);\r\n            const root = detail.root;\r\n            if (root != null && symbol != null) {\r\n                symbol.structs.forEach((struct) => {\r\n                    structIndexList.push((root.index + init.keyIndex + TheoryUtil.IntervalRelationProps[struct]) % 12);\r\n                });\r\n            }\r\n        }\r\n\r\n        const list: JSX.Element[] = [];\r\n        for (let i = 0; i < 60; i++) {\r\n            const keyIndex = ((59 - i) + 9) % 12;\r\n            const octave = Math.floor(((59 - i) + 9) / 12) + 1;\r\n            const soundName = TheoryUtil.KEY12_SHARP_LIST[keyIndex % 12];\r\n            const octaveName = getOctaveName(octave);\r\n            list.push(\r\n                <_PitchItem key={i}\r\n                    isScale={[0, 2, 4, 5, 7, 9, 11].includes(keyIndex)}\r\n                    isStruct={structIndexList.includes(keyIndex)}\r\n                    isActive={i === props.mousePitchIndex}\r\n                    onClick={() => {\r\n                        const instrument = store.instruments.melodyFont;\r\n                        if (instrument != null) {\r\n                            instrument.stop();\r\n                            instrument.play(soundName + octave, 0, { duration: 1 });\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* {octaveName} */}\r\n                    {soundName}\r\n                </_PitchItem>\r\n            );\r\n        }\r\n        return list;\r\n    }, [props.mousePitchIndex, props.curChord]);\r\n\r\n    return (<>\r\n        <_OctaveWrap>\r\n            <_OctaveItem isActive={false}><div>hihi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>hi</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid2</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>mid1</div></_OctaveItem>\r\n            <_OctaveItem isActive={false}><div>low</div></_OctaveItem>\r\n        </_OctaveWrap>\r\n        <_PitchWrap>\r\n            {pitchItemJsxList}\r\n        </_PitchWrap>\r\n    </>);\r\n};\r\n\r\nexport default MelodyPitchList;\r\n\r\nconst getOctaveName = (num: number) => {\r\n    switch (num) {\r\n        case 0: return 'low';\r\n        case 1: return 'mid1';\r\n        case 2: return 'mid2';\r\n        case 3: return 'hi';\r\n        case 4: return 'hihi';\r\n        default: return '';\r\n    }\r\n}\r\n\r\nconst _OctaveWrap = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _PitchWrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 30px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _OctaveItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    background-color: #8f8f8f;\r\n    ${props => !props.isActive ? '' : css`background-color: #ffc40089;`}\r\n    box-sizing: border-box;\r\n\r\n    font-size: 18px;\r\n    color: #dfdfdf;\r\n    font-weight: 600;\r\n    & div {\r\n        width: 360px;\r\n        transform-origin: top left;\r\n        transform: rotate(-90deg) translateX(-50%);\r\n        /* background-color: #fff; */\r\n    }\r\n`;\r\n\r\nconst _PitchItem = styled.div<{\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isStruct: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    border: 1px solid black;\r\n    ${props => !props.isScale ? '' : css`\r\n        width: 100%;\r\n    `}\r\n    height: ${TUNE_PITCH_HEIGHT}px;\r\n    background-color: #adadad;\r\n    ${props => !props.isStruct ? '' : css`background-color: #e25d5d;`}\r\n    ${props => !props.isActive ? '' : css<{\r\n        isStruct: boolean;\r\n    }>`\r\n        background-color: #cece60;\r\n        ${props => !props.isStruct ? '' : css`background-color: #e28c45;`}\r\n    `}\r\n    box-sizing: border-box;\r\n\r\n    padding-left: 5px;\r\n    line-height: 28px;\r\n    font-size: 18px;\r\n    color: #3b3b3b;\r\n    font-weight: 600;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { SoundfontInfo } from \"../../../../../redux/store/score/melodyState\";\r\n\r\n\r\nconst InstrumentSwitch = (props: {\r\n    labelName: string;\r\n    icon: JSX.Element;\r\n    soundfontInfo: SoundfontInfo;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.soundfontInfo.name === state.soundfontInfo.name}\r\n            onClick={() => {\r\n                // state.quantize = props.value;\r\n                // dispatcher.tune.setState(state);\r\n\r\n                state.soundfontInfo = props.soundfontInfo;\r\n                state.isPreview = true;\r\n                dispatcher.melody.setState(state);\r\n\r\n                const info = props.soundfontInfo;\r\n                Soundfont.instrument(new AudioContext(), info.name,\r\n                    { gain: info.gain, release: 0.5 }).then((soundFontPlayer) => {\r\n                        const instruments = store.instruments;\r\n                        instruments.melodyFont = soundFontPlayer;\r\n                        dispatcher.score.setInstruments(instruments);\r\n                    }).then(() => {\r\n                        state.isPreview = false;\r\n                        dispatcher.melody.setState(state);\r\n                    });\r\n            }}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.labelName}</_Label>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default InstrumentSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 85px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: 1px solid #4b4b4b;\r\n    background-color: #cacacada;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #f7f7f7da;\r\n    `}\r\n    border-radius: 6px;\r\n    margin-left: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #e4e4e4da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #f7f7f7da;\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #ff0000da; */\r\n    font-size: 20px;\r\n    color: #4b4b4b;\r\n    text-align: center;\r\n    /* padding-top: 5px; */\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 10px;\r\n    /* background-color: #0400ffdc; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 0;\r\n    color: #3b3b3b;\r\n    text-align: center;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { _CSS_DISABLE } from \"../../../../../base/design/styles\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\n\r\n\r\nconst QuantizeSwitch = (props: {\r\n    labelName: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: () => void;\r\n}) => {\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n    // const state = store.melodyState;\r\n\r\n    return (\r\n        <_Wrap\r\n            isActive={props.isActive}\r\n            isDisable={props.isDisable}\r\n            onClick={props.callback}\r\n        >\r\n            {props.labelName}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default QuantizeSwitch;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 28px;\r\n    background: linear-gradient(to bottom, #e0e0e0, #aaaaaa, #e0e0e0);\r\n    ${props => !props.isActive ? '' : css`\r\n        background: linear-gradient(to bottom, #b7d9df, #59c6da, #b7d9df);\r\n    `}\r\n    ${props => !props.isDisable ? '' : _CSS_DISABLE}\r\n    color: #5d6e63;\r\n    border-radius: 2px;\r\n    border: solid 1px #747373;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n\r\n    margin-left: 4px;\r\n`;","import { useContext } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport InstrumentSwitch from \"./item/instrumentSwitch\";\r\nimport QuantizeSwitch from \"./item/quantizeSwitch\";\r\n\r\n\r\nimport { GiViolin, GiGuitar, GiSaxophone, GiViola, GiTrumpet, GiClarinet, GiOcarina } from 'react-icons/gi'\r\nimport { BsPerson } from 'react-icons/bs'\r\nimport ControlButton from \"./item/controlButton\";\r\n\r\nconst MelodyHeader = () => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const state = store.melodyState;\r\n\r\n    return (<>\r\n        <_OperationDiv>\r\n            <_QuantizeSelector>\r\n                <QuantizeSwitch labelName={'32'} isDisable={false} isActive={state.quantize === 8} callback={() => {\r\n                    state.quantize = 8;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'16'} isDisable={false} isActive={state.quantize === 4} callback={() => {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'8'} isDisable={false} isActive={[2, 6].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'4'} isDisable={false} isActive={[1, 3].includes(state.quantize)} callback={() => {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }} />\r\n                <QuantizeSwitch labelName={'/3'} isDisable={![1, 2, 3, 6].includes(state.quantize)} isActive={[3, 6].includes(state.quantize)} callback={() => {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                        dispatcher.melody.setState(state);\r\n                    } else {\r\n                        state.quantize *= 3;\r\n                        dispatcher.melody.setState(state);\r\n                    }\r\n                }} />\r\n            </_QuantizeSelector>\r\n            <_Control>\r\n                {/* <ControlButton labelName={'Up'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex--;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} />\r\n                <ControlButton labelName={'Down'} isDisable={false} callback={() => {\r\n                    const list = store.scoreData.notesList;\r\n                    list.forEach(notes => {\r\n                        notes.pitchIndex++;\r\n                    });\r\n                    dispatcher.melody.setNotesList(list.slice());\r\n                }} /> */}\r\n                {/* <ControlButton labelName={'Reset'} isDisable={false} callback={() => {\r\n                    dispatcher.tune.setNotesList([]);\r\n                }} /> */}\r\n            </_Control>\r\n        </_OperationDiv>\r\n        <_InstrumentSelector>\r\n            <InstrumentSwitch icon={<GiViolin />} labelName=\"violin\" soundfontInfo={{ name: 'violin', gain: 9 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"guitar\" soundfontInfo={{ name: 'overdriven_guitar', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiSaxophone />} labelName=\"saxphone\" soundfontInfo={{ name: 'tenor_sax', gain: 3 }} />\r\n            <InstrumentSwitch icon={<GiViola />} labelName=\"viola\" soundfontInfo={{ name: 'viola', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiTrumpet />} labelName=\"trumpet\" soundfontInfo={{ name: 'trumpet', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"clarinet\" soundfontInfo={{ name: 'clarinet', gain: 4 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"oboe\" soundfontInfo={{ name: 'oboe', gain: 5 }} />\r\n            <InstrumentSwitch icon={<GiClarinet />} labelName=\"flute\" soundfontInfo={{ name: 'flute', gain: 5 }} />\r\n            <InstrumentSwitch icon={<BsPerson />} labelName=\"choir\" soundfontInfo={{ name: 'choir_aahs', gain: 6 }} />\r\n            <InstrumentSwitch icon={<GiGuitar />} labelName=\"shamisen\" soundfontInfo={{ name: 'shamisen', gain: 9 }} />\r\n        </_InstrumentSelector>\r\n    </>);\r\n}\r\n\r\nexport default MelodyHeader;\r\n\r\nconst _OperationDiv = styled.div<{\r\n}>`\r\n    display: block;\r\n    padding: 4px 4px 4px 0;\r\n    background-color: #bbbbbb;\r\n`;\r\n\r\nconst _QuantizeSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* margin-left: 20px; */\r\n`;\r\nconst _Control = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst _InstrumentSelector = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* padding: 4px 4px 4px 0; */\r\n    background-color: #e4e4e486;\r\n`;\r\n\r\n","import { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { DetailChord, MelodyNotes } from \"../../../../../redux/store/score/scoreData\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport { getNormalizeLenFromNotes, getNotesLenFromQuantize, playSoundfont } from \"../../../../../utils/melodyUtil\";\r\nimport { TUNE_PITCH_HEIGHT } from \"../../../../../utils/systemConst\";\r\n\r\nclass MelodyMouseOperation {\r\n\r\n    static mouseDownEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const getNextLeft = () => {\r\n                const next = notesList.find(note => x < getNormalizeLenFromNotes(note.pos) * state.beatWidth);\r\n                let nextLeft = timelineLength;\r\n                if (next != undefined) {\r\n                    nextLeft = getNormalizeLenFromNotes(next.pos) * state.beatWidth;\r\n                }\r\n                return nextLeft;\r\n            }\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            // マウスにノーツにフォーカスしていない時\r\n            if (notesState.index === -1) {\r\n\r\n                mouse.isPut = true;\r\n                mouse.lock = {\r\n                    x: Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate,\r\n                    y: Math.floor(y / TUNE_PITCH_HEIGHT) * TUNE_PITCH_HEIGHT\r\n                };\r\n\r\n                mouse.nextLeft = getNextLeft();\r\n                mouse.width = 0;\r\n\r\n\r\n            } else {\r\n                if (notesState.side === 'normal') {\r\n\r\n                        const refs = store.refs.melody;\r\n                        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n                            state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                            const rect = refs.table.getBoundingClientRect();\r\n                            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n                            const pitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                            notesList[notesState.index].pitchIndex = pitchIndex;\r\n                            store.scoreData.notesList = notesList.slice();\r\n\r\n                            playSoundfont(pitchIndex, store);\r\n                        }\r\n                } else {\r\n                    const notes = notesList[notesState.index];\r\n                    mouse.lock = {\r\n                        // x: (Math.floor(x / state.beatWidth / rate) * state.beatWidth * rate) - getNormalizeLenFromNotes(notes.len) * state.beatWidth,\r\n                        x: getNormalizeLenFromNotes(notes.pos) * state.beatWidth,\r\n                        y: 0\r\n                    };\r\n                    mouse.nextLeft = getNextLeft();\r\n\r\n                    if (notesState.side === 'left') {\r\n                        notesState.isMove = true;\r\n                        mouse.prevRight = 0;\r\n                        if (notesState.index > 0) {\r\n                            const prev = notesList[notesState.index - 1];\r\n                            mouse.prevRight = (getNormalizeLenFromNotes(prev.pos) + getNormalizeLenFromNotes(prev.len)) * state.beatWidth;\r\n                        }\r\n                    }\r\n                    else if (notesState.side === 'right') {\r\n                        notesState.isResize = true;\r\n                    }\r\n\r\n                    mouse.notesState = { ...notesState };\r\n                }\r\n            }\r\n\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseMoveEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const refs = store.refs.melody;\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const state = store.melodyState;\r\n            const mouse = store.melodyState.tableMouse;\r\n            // const update = () => dispatcher.tune.setState(state);\r\n            const notesState = mouse.notesState;\r\n            const notesList = store.scoreData.notesList;\r\n            const chordList = store.scoreData.chordList;\r\n            const rate = 1 / state.quantize;\r\n\r\n            const rect = refs.table.getBoundingClientRect();\r\n            const x = e.clientX + refs.table.scrollLeft - rect.left;\r\n            const y = e.clientY + refs.table.scrollTop - rect.top;\r\n\r\n            if (!mouse.isPut && !notesState.isResize && !notesState.isMove) {\r\n                mouse.mousePitchIndex = Math.floor(y / TUNE_PITCH_HEIGHT);\r\n                mouse.mouseMeasurePos = Math.floor(x / state.beatWidth / rate);\r\n\r\n                let left = 0;\r\n                const searchedChord = chordList.find((element) => {\r\n                    if (element.type === 'chord') {\r\n                        const detail = element.detail as DetailChord;\r\n                        const width = detail.beatLen * state.beatWidth;\r\n                        if (x >= left && x < left + width) {\r\n                            return element;\r\n                        }\r\n                        left += width;\r\n                    }\r\n                });\r\n                mouse.curChord = searchedChord == undefined ? null : searchedChord;\r\n\r\n                notesState.index = -1;\r\n                const prevFocus = state.focusIndex;\r\n                state.focusIndex = -1;\r\n                notesState.side = 'normal';\r\n                for (let i = 0; i < notesList.length; i++) {\r\n                    const notes = notesList[i];\r\n                    const left = getNormalizeLenFromNotes(notes.pos) * state.beatWidth;\r\n                    const right = left + getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    if (x >= left && x <= right) {\r\n                        notesState.index = i;\r\n                        state.focusIndex = i;\r\n\r\n                        if (x < left + 10) notesState.side = 'left';\r\n                        else if (x > right - 10) notesState.side = 'right';\r\n                        break;\r\n                    }\r\n                };\r\n                // Distへコピー\r\n                state.destIndex = state.focusIndex;\r\n                if (prevFocus !== -1 && prevFocus !== state.focusIndex) {\r\n                    state.lastFocus = prevFocus;\r\n                    // dispatcher.tune.setState(state);\r\n                }\r\n                // dispatcher.tune.setState(state);\r\n                mouse.notesState = { ...notesState };\r\n            } else {\r\n                if (mouse.isPut) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    mouse.width = (curPos > mouse.nextLeft ? mouse.nextLeft : curPos) - mouse.lock.x;\r\n                } else if (notesState.isResize) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 1) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos - mouse.lock.x;\r\n                    // 右隣に接触時\r\n                    if (curPos > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - mouse.lock.x;\r\n                    }\r\n                    // 最小チェック\r\n                    if (curPos <= mouse.lock.x) {\r\n                        posX = state.beatWidth / state.quantize;\r\n                    }\r\n                    const newLen = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.len) !== getNormalizeLenFromNotes(newLen)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.len = newLen;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                } else if (notesState.isMove) {\r\n                    const curPos = (Math.floor(x / state.beatWidth / rate) + 0) * state.beatWidth * rate;\r\n                    const notes = notesList[notesState.index];\r\n                    const lenWidth = getNormalizeLenFromNotes(notes.len) * state.beatWidth;\r\n                    // console.log(`${mouse.nextLeft}, ${curPos}`);\r\n                    let posX = curPos;\r\n                    // 右隣に接触時\r\n                    if (curPos + lenWidth > mouse.nextLeft) {\r\n                        posX = mouse.nextLeft - lenWidth;\r\n                    }\r\n                    // 左隣に接触時\r\n                    if (curPos < mouse.prevRight) {\r\n                        posX = mouse.prevRight;\r\n                    }\r\n                    const newPos = getNotesLenFromQuantize(state.quantize, Math.floor(posX / state.beatWidth * state.quantize));\r\n                    if(getNormalizeLenFromNotes(notes.pos) !== getNormalizeLenFromNotes(newPos)) {\r\n                        state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n                        notes.pos = newPos;\r\n                        // dispatcher.tune.setNotesList(notesList.slice());\r\n                        store.scoreData.notesList = notesList.slice();\r\n                    }\r\n                }\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    static mouseUpEvent = (e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        store: Store, dispatcher: Dispatcher, timelineLength: number, update: Function) => {\r\n\r\n        if (e.button !== 0) return;\r\n\r\n        const state = store.melodyState;\r\n        const mouse = store.melodyState.tableMouse;\r\n        // const update = () => dispatcher.tune.setState(state);\r\n        const notesState = mouse.notesState;\r\n        const notesList = store.scoreData.notesList;\r\n        const quantize = state.quantize;\r\n\r\n        if (mouse.isPut) {\r\n            mouse.isPut = false;\r\n            if (mouse.width > 0) {\r\n                //履歴を作成\r\n                state.dataHistory.add(JSON.stringify(store.scoreData.notesList));\r\n\r\n                const pitchIndex = Math.floor(mouse.lock.y / TUNE_PITCH_HEIGHT);\r\n                // alert(mouse.width / state.beatWidth * quantize);\r\n                // const a = getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize));\r\n                // const b = getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize));\r\n                // alert(`lockX: ${JSON.stringify(a)},/n width: ${JSON.stringify(b)}`);\r\n                notesList.push({\r\n                    pos: getNotesLenFromQuantize(quantize, Math.floor(mouse.lock.x / state.beatWidth * quantize)),\r\n                    pitchIndex,\r\n                    len: getNotesLenFromQuantize(quantize, Math.floor(mouse.width / state.beatWidth * quantize)),\r\n\r\n                });\r\n                // ノーツ配置後は座標の昇順でソートする\r\n                notesList.sort((a, b) => {\r\n                    const posA = getNormalizeLenFromNotes(a.pos);\r\n                    const posB = getNormalizeLenFromNotes(b.pos);\r\n                    return posA === posB ? 0 : (\r\n                        posA < posB ? -1 : 1\r\n                    );\r\n                });\r\n                dispatcher.melody.setNotesList(notesList);\r\n\r\n                playSoundfont(pitchIndex, store);\r\n            }\r\n        } else {\r\n            notesState.isMove = false;\r\n            notesState.isResize = false;\r\n            mouse.notesState = { ...notesState };\r\n            dispatcher.melody.setNotesList(notesList.slice());\r\n        }\r\n        update();\r\n    }\r\n}\r\n\r\nexport default MelodyMouseOperation;","import { KeyboardEvent } from \"react\";\r\nimport { Dispatcher } from \"../../../../../redux/dispatcher/dispatcher\";\r\nimport { MelodyPitchMode } from \"../../../../../redux/store/score/melodyState\";\r\nimport { Store } from \"../../../../../redux/store/store\";\r\nimport MelodyUtil, { } from \"../../../../../utils/melodyUtil\";\r\n\r\nclass MelodyInput {\r\n\r\n    static keyDownEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        // alert(e.key);\r\n        // alert(config.nextElement);\r\n\r\n        const state = store.melodyState;\r\n\r\n        // 選択しているノーツが1つである場合\r\n        const isSingle = state.focusIndex === state.destIndex;\r\n        const mouse = state.tableMouse;\r\n\r\n        // プレビュー再生時\r\n        if (state.isPreview) {\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n                }\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n\r\n        // ボタンを押下するとマウス情報を消す\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n\r\n        if (keySwitch.scaleMode || keySwitch.octave || keySwitch.resize || keySwitch.move || keySwitch.shift || keySwitch.control) {\r\n            if (keySwitch.control) {\r\n                // alert(e.key);\r\n                switch (e.key) {\r\n                    case 'c': dispatcher.melody.copyNotes(); break;\r\n                    case 'v': dispatcher.melody.pasteNotes(); break;\r\n                    case 'a': {\r\n                        dispatcher.melody.allSelect();\r\n                    }\r\n                        break;\r\n                    case 's': dispatcher.score.saveFile(); break;\r\n                    case 'z': dispatcher.melody.undo(); break;\r\n                    case 'y': dispatcher.melody.redo(); break;\r\n                }\r\n            } else if (keySwitch.scaleMode || keySwitch.octave) {\r\n                const mode: MelodyPitchMode = keySwitch.scaleMode ? 'scale' : 'octave';\r\n                switch (e.key) {\r\n                    case 'ArrowUp': {\r\n                        dispatcher.melody.incrementCurPitch(true, mode);\r\n                    }\r\n                        break;\r\n                    case 'ArrowDown': {\r\n                        dispatcher.melody.incrementCurPitch(false, mode);\r\n                    }\r\n                        break;\r\n                }\r\n            } else if (keySwitch.resize) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.resizeNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.resizeNotes(true); break;\r\n                }\r\n            } else if (keySwitch.move) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveNotes(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveNotes(true); break;\r\n                }\r\n            } else if (keySwitch.shift) {\r\n                switch (e.key) {\r\n                    case 'ArrowLeft': dispatcher.melody.moveDestFocus(false); break;\r\n                    case 'ArrowRight': dispatcher.melody.moveDestFocus(true); break;\r\n                }\r\n            }\r\n        } else {\r\n            switch (e.key) {\r\n                case 'ArrowUp': dispatcher.melody.incrementCurPitch(true, 'normal'); break;\r\n                case 'ArrowDown': dispatcher.melody.incrementCurPitch(false, 'normal'); break;\r\n                case 'ArrowLeft': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(false);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(false);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    if (isSingle) {\r\n                        // フォーカス移動\r\n                        dispatcher.melody.moveFocus(true);\r\n                    } else {\r\n                        // 複数選択を解除\r\n                        dispatcher.melody.releaseRange(true);\r\n                    }\r\n                }\r\n                    break;\r\n                case 'a': dispatcher.melody.addNotes(); break;\r\n                case 'q': {\r\n                    alert(JSON.stringify(store.scoreData.notesList[state.focusIndex].len));\r\n                }\r\n                    break;\r\n                case 'w': dispatcher.melody.adjustScrollX(); break;\r\n                case 'e': dispatcher.melody.adjustScrollY(); break;\r\n                case 'z': {\r\n                    MelodyUtil.previewCurHarmony(store, dispatcher);\r\n                }\r\n                    break;\r\n                case 'p': {\r\n                    state.isSolo = !state.isSolo;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Home': {\r\n                    dispatcher.melody.firstNotes();\r\n                }\r\n                    break;\r\n                case '0': {\r\n                    state.quantize = 8;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '1': {\r\n                    state.quantize = 4;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '2': {\r\n                    state.quantize = 2;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '3': {\r\n                    state.quantize = 1;\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case '/': {\r\n                    if ([3, 6].includes(state.quantize)) {\r\n                        state.quantize /= 3;\r\n                    } else if([2, 1].includes(state.quantize)) {\r\n                        state.quantize *= 3;\r\n                    }\r\n                    dispatcher.melody.setState(state);\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.melody.removeNotes();\r\n                }\r\n                    break;\r\n                case ' ': {\r\n                    dispatcher.melody.previewStart();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static keySwitchEvent = (e: KeyboardEvent, store: Store, dispatcher: Dispatcher, isPress: boolean) => {\r\n\r\n        const config = store.userEnv.keyConfig.note;\r\n        const keySwitch = store.melodyState.keySwitch;\r\n        const state = store.melodyState;\r\n        // alert(e.key);\r\n        // alnfig.nextElement);\r\n\r\n        if (!state.isPreview) {\r\n\r\n            if (e.key === 'Control') {\r\n                keySwitch.control = isPress;\r\n                dispatcher.melody.setKeySwitch(keySwitch);\r\n            }\r\n            if (!keySwitch.control) {\r\n\r\n                const isSingle = state.focusIndex === state.destIndex;\r\n                switch (e.key) {\r\n                    case 'x': {\r\n                        keySwitch.octave = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'c': {\r\n                        if (isSingle) {\r\n                            keySwitch.scaleMode = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'f': {\r\n                        if (isSingle) {\r\n                            keySwitch.resize = isPress;\r\n                            dispatcher.melody.setKeySwitch(keySwitch);\r\n                        }\r\n                    }\r\n                        break;\r\n                    case 'd': {\r\n                        keySwitch.move = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                    case 'Shift': {\r\n                        keySwitch.shift = isPress;\r\n                        dispatcher.melody.setKeySwitch(keySwitch);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isPress) {\r\n            MelodyInput.keyDownEvent(e, store, dispatcher);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MelodyInput;","import { posix } from \"path\";\r\nimport { KeyboardEvent, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { TUNE_HEADER_WIDTH, TUNE_PITCH_HEIGHT, TUNE_PITCH_WIDTH, TUNE_TIMELINE_WIDTH } from \"../../../../utils/systemConst\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport MelodyTimeline from \"./melodyTimeline\";\r\nimport MelodyPitchList from \"./melodyPitchList\";\r\nimport MelodyHeader from \"./melodyHeader\";\r\nimport { getKeyIndexFromPitcher, getMinimumLenUnit, getNormalizeLenFromNotes, PITCH_MAX, playSoundfont } from \"../../../../utils/melodyUtil\";\r\nimport MelodyMouseOperation from \"./util/melodyMouseOperation\";\r\nimport { Side } from \"../../../../redux/store/score/melodyState\";\r\nimport MelodyInput from \"../harmonize/input/melodyInput\";\r\nimport { _CSS_DISABLE } from \"../../../../base/design/styles\";\r\nimport CacheUtil from \"../../../../utils/cacheUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\n\r\n\r\nconst MelodyFrame = (props: {\r\n    isActive: boolean;\r\n}) => {\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const scoreState = store.scoreState;\r\n    const state = store.melodyState;\r\n\r\n    const wrapRef = useRef<null | HTMLDivElement>(null);\r\n    const tableRef = useRef<null | HTMLDivElement>(null);\r\n    const pitchRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    const [invalidate, setInvalidate] = useState<{}>({});\r\n    const [invalidate2, setInvalidate2] = useState<{}>({});\r\n    const update = () => setInvalidate({});\r\n\r\n    const mouse = state.tableMouse;\r\n    const isPut = mouse.isPut;\r\n    const notesState = mouse.notesState;\r\n    const curChord = mouse.curChord;\r\n    const mouseMeasurePos = mouse.mouseMeasurePos;\r\n    const mousePitchIndex = mouse.mousePitchIndex;\r\n    const width = mouse.width;\r\n    const lock = mouse.lock;\r\n    const refs = store.refs.melody;\r\n\r\n    const barCount = 150;\r\n\r\n    const timelineLength = barCount * state.beatWidth * 4;\r\n    const notesList = store.scoreData.notesList;\r\n    const rate = 1 / store.melodyState.quantize;\r\n\r\n    // const rate = 4 / state.quantize;\r\n\r\n    const isTune = store.scoreState.isMelody;\r\n\r\n    const tableWidth = tableRef.current == null ? 0 : tableRef.current.scrollLeft + tableRef.current.clientWidth;\r\n\r\n    useEffect(() => {\r\n        dispatcher.system.setRefs({\r\n            ...store.refs, melody: {\r\n                ...store.refs.melody,\r\n                table: tableRef.current,\r\n                pitch: pitchRef.current\r\n            }\r\n        });\r\n\r\n        dispatcher.system.setInvalidate({\r\n            ...store.invalidate, melody: update\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isTune && wrapRef.current != null) {\r\n            wrapRef.current.focus();\r\n        }\r\n    }, [isTune]);\r\n\r\n    /**\r\n     * 画面上部のメモリJSXリスト\r\n     * 拍子のキャッシュから作成する\r\n     */\r\n    const measureJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        scoreState.measureCacheList.forEach((cache, i) => {\r\n\r\n            list.push(\r\n                <_Scale key={i} isHead={cache.rate === 4} beatWidth={state.beatWidth} />\r\n            );\r\n        });\r\n        return list;\r\n    }, [scoreState.beatCacheList, barCount]);\r\n\r\n    // const init = store.scoreData.chordList[0].detail as DetailInit;\r\n\r\n    /**\r\n     * スケール区間のJSXリスト\r\n     * 背景色のラインを表現\r\n     * 転調でキーが変わる度に追加される\r\n     */\r\n    const scaleDivJsxList = useMemo(() => {\r\n        const divList: JSX.Element[] = [];\r\n        // console.log('**' + scoreState.scaleCacheList.length);\r\n        scoreState.scaleCacheList.forEach((scaleInfo, i) => {\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const scaleJsxList: JSX.Element[] = [];\r\n            for (let j = 0; j < PITCH_MAX; j++) {\r\n                const keyIndex = getKeyIndexFromPitcher(j);\r\n                scaleJsxList.push(\r\n                    <_ScaleLine key={j}\r\n                        isScale={scaleIndexies.includes(keyIndex)}\r\n                        isBase={keyIndex === scaleIndexies[0]}\r\n                    />\r\n                );\r\n            }\r\n\r\n            divList.push(\r\n                <_ScaleList key={i} width={state.beatWidth / 4 * scaleInfo.memoriCnt} isEven={i % 2 === 0}>\r\n                    {scaleJsxList}\r\n                </_ScaleList>\r\n            );\r\n        });\r\n        return divList;\r\n    }, [scoreState.scaleCacheList]);\r\n\r\n    /**\r\n     * 配置するノーツのJSXリスト\r\n     */\r\n    const notesJsxList = useMemo(() => {\r\n        const list: JSX.Element[] = [];\r\n        // notesList.forEach((notes, i) => {\r\n        // let count = 0;\r\n        if (scoreState.scaleCacheList.length === 0) return list;//\r\n        for (let i = 0; i < notesList.length; i++) {\r\n            const notes = notesList[i];\r\n            const normalLeft = getNormalizeLenFromNotes(notes.pos);\r\n            const normalWidth = getNormalizeLenFromNotes(notes.len);\r\n            if (tableRef.current != null) {\r\n                const scroll = tableRef.current.scrollLeft;\r\n                const notesLeft = normalLeft * state.beatWidth;\r\n                const notesRight = notesLeft + normalWidth * state.beatWidth;\r\n                if (\r\n                    // !state.isPreview &&\r\n                    (notesRight - scroll < 0 || notesLeft - scroll > tableRef.current.clientWidth)\r\n                ) {\r\n                    continue;\r\n                }\r\n            }\r\n            const scaleInfo = CacheUtil.getKeyScaleFromNotesPos(normalLeft, scoreState.scaleCacheList);\r\n            // count++;\r\n            const [focusStart, focusEnd] = state.focusIndex < state.destIndex ? [state.focusIndex, state.destIndex] : [state.destIndex, state.focusIndex];\r\n            const isActive = focusStart <= i && focusEnd >= i;\r\n            const scaleIndexList = scaleInfo.scale === 'major' ? TheoryUtil.MAJOR_SCALE_INTERVALS : TheoryUtil.MINOR_SCALE_INTERVALS;\r\n            const scaleIndexies = scaleIndexList.map(value => (scaleInfo.keyIndex + value) % 12);\r\n            const keyIndex = getKeyIndexFromPitcher(notes.pitchIndex);\r\n            const isScale = scaleIndexies.includes(keyIndex);\r\n\r\n            // クオンタイズ\r\n            const unitPos = getMinimumLenUnit(notes.pos);\r\n            const unitLen = getMinimumLenUnit(notes.len);\r\n            list.push(\r\n                <_NotesWrap key={i}\r\n                    left={normalLeft * state.beatWidth}\r\n                    width={normalWidth * state.beatWidth}\r\n                    side={notesState.side}\r\n                    isActive={isActive}\r\n                    isScale={state.keySwitch.scaleMode}\r\n                    isResize={state.keySwitch.resize}\r\n                    isMove={state.keySwitch.move}\r\n                    isOctave={state.keySwitch.octave}\r\n                    isPreview={state.isPreview}\r\n                    onContextMenu={() => {\r\n                        dispatcher.melody.removeNotes();\r\n                    }}\r\n                >\r\n                    <_Notes\r\n                        y={notes.pitchIndex * TUNE_PITCH_HEIGHT}\r\n                        lenType={unitPos > unitLen ? unitPos : unitLen}\r\n                        isScale={isScale}\r\n                        isActive={isActive}\r\n                        isPreview={state.isPreview}\r\n                    >\r\n                        {/* {notes.posX} */}\r\n                    </_Notes>\r\n                </_NotesWrap>\r\n            );\r\n        }\r\n        // console.log('cnt: ' + count);\r\n        // });\r\n        return list;\r\n    }, [notesList, notesList.length, state.focusIndex, state.destIndex, notesState, state.isPreview,\r\n        state.keySwitch.scaleMode, state.keySwitch.octave, state.keySwitch.resize, state.keySwitch.move, refs.table?.scrollLeft]);\r\n\r\n    /**\r\n     * タイムラインを横にスクロールした際の処理\r\n     */\r\n    const sideScrollAction = () => {\r\n\r\n        if (refs.table != null && refs.measure != null && refs.chord != null && refs.pitch != null) {\r\n            const scrollLeft = refs.table.scrollLeft;\r\n            const scrollTop = refs.table.scrollTop;\r\n            refs.measure.scrollTo({ left: scrollLeft });\r\n            refs.chord.scrollTo({ left: scrollLeft });\r\n            refs.pitch.scrollTo({ top: scrollTop });\r\n        }\r\n        update();\r\n    };\r\n\r\n    /**\r\n     * マウスポインタがエリア外に出た際の処理\r\n     */\r\n    const mouseLeaveAction = () => {\r\n        console.log('leave!');\r\n        if (mouse.notesState.index !== -1) {\r\n            mouse.notesState.index = -1;\r\n            mouse.notesState.isResize = false;\r\n            mouse.notesState.side = 'normal';\r\n        }\r\n        mouse.mouseMeasurePos = -1;\r\n        mouse.mousePitchIndex = -1;\r\n        update();\r\n    };\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={999}\r\n            ref={wrapRef}\r\n            isActive={props.isActive}\r\n            onKeyDown={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, true)}\r\n            onKeyUp={(e: KeyboardEvent) => MelodyInput.keySwitchEvent(e, store, dispatcher, false)}\r\n        >\r\n            <_Header isEnable={!state.isPreview}>\r\n                <MelodyHeader />\r\n            </_Header>\r\n            <_Body>\r\n                {(() => {\r\n                    const mouse = state.timelineMouse;\r\n                    if (mouse.lock === -1) {\r\n                        return mouse.pos === -1 ? <></> :\r\n                            <_MouseLinePos left={mouse.pos} />\r\n                    } else {\r\n                        const [head, tail] = mouse.lock < mouse.pos ? [mouse.lock, mouse.pos] : [mouse.pos, mouse.lock];\r\n                        const width = tail - head;\r\n                        return <_MouseRange left={head} width={width} />\r\n                    }\r\n                })()}\r\n                {\r\n\r\n                }\r\n                <_Timeline>\r\n                    <MelodyTimeline\r\n                        barLength={barCount}\r\n                        beatWidth={state.beatWidth}\r\n                        curChord={curChord}\r\n                        timelineLength={timelineLength}\r\n                        mouseMeasurePos={mouseMeasurePos}\r\n                        update={() => setInvalidate2({})}\r\n                    />\r\n                </_Timeline>\r\n                <_Pitch ref={pitchRef}>\r\n                    <MelodyPitchList mousePitchIndex={mousePitchIndex} curChord={curChord} />\r\n                </_Pitch>\r\n                <_TableWrap ref={tableRef} onScroll={sideScrollAction} >\r\n                    <_TableMeasure\r\n                        width={timelineLength}\r\n                    >\r\n                        {measureJsxList}\r\n                    </_TableMeasure>\r\n                    <_TablePitch\r\n                        width={timelineLength}\r\n                    >\r\n                        {scaleDivJsxList}\r\n                    </_TablePitch>\r\n                    <_TableNotes\r\n                        width={timelineLength}\r\n                        onMouseDown={e => MelodyMouseOperation.mouseDownEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseMove={e => MelodyMouseOperation.mouseMoveEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseUp={e => MelodyMouseOperation.mouseUpEvent(e, store, dispatcher, timelineLength, update)}\r\n                        onMouseLeave={mouseLeaveAction}\r\n                    >\r\n                        {!isPut ? <></> : <_Test x={lock.x} y={lock.y} width={width}\r\n                            lenType={width % state.beatWidth === 0 ? 4 : (width % (state.beatWidth / 2) === 0 ? 8 : 16)}\r\n                        />}\r\n                        {notesJsxList}\r\n                    </_TableNotes>\r\n                    <_PrevireBrind\r\n                        isUse={state.isPreview}\r\n                        width={timelineLength}\r\n                    />\r\n                </_TableWrap>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MelodyFrame;\r\n\r\nconst _Wrap = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: ${props => !props.isActive ? 'none' : 'inline-block'};\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst editAnimation = keyframes`\r\n  0%,100% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Test = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    lenType: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x}px;\r\n    top: ${props => props.y}px;\r\n    width: ${props => props.width}px;\r\n    height: ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return TUNE_PITCH_HEIGHT;\r\n            case 8: return TUNE_PITCH_HEIGHT - 6;\r\n            case 16: return TUNE_PITCH_HEIGHT - 12;\r\n            default: return TUNE_PITCH_HEIGHT - 14;\r\n        }\r\n    }}px;\r\n    background: linear-gradient(to bottom, #dff85230, #fffb00, #dff85230);\r\n    border: 1px solid #fbffd9;\r\n    \r\n    animation: ${editAnimation} .8s linear infinite;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_HEADER_WIDTH}px;\r\n    background-color: #b3b3b3;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${TUNE_HEADER_WIDTH}px);\r\n    background-color: #464646;\r\n`;\r\n\r\nconst _MouseLine = css`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    width: 3px;\r\n`;\r\nconst _MouseLinePos = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #15ff00;\r\n`;\r\nconst _MouseLineLock = styled.div<{\r\n    left: number;\r\n}>`\r\n    ${_MouseLine}\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    background-color: #fbff00;\r\n`;\r\n\r\nconst _MouseRange = styled.div<{\r\n    left: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    z-index: 99;\r\n    top: ${TUNE_TIMELINE_WIDTH - 38}px;\r\n    height: calc(100% - 42px);\r\n    left: ${props => TUNE_PITCH_WIDTH + props.left}px;\r\n    width: ${props => props.width}px;\r\n    background-color: #ffffff8b;\r\n`;\r\n\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    margin-left: ${TUNE_PITCH_WIDTH}px;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px - 10px);\r\n    height: ${TUNE_TIMELINE_WIDTH}px;\r\n    background-color: #534b81;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Pitch = styled.div`\r\n    display: inline-block;\r\n    width: ${TUNE_PITCH_WIDTH}px;\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px - 10px);\r\n    background-color: #464545;\r\n    vertical-align: top;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - ${TUNE_PITCH_WIDTH}px);\r\n    height: calc(100% - ${TUNE_TIMELINE_WIDTH}px);\r\n    background-color: #bdbdbd;\r\n    vertical-align: top;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        border-radius: 5px;\r\n        background: #1959A8;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 4px #aaa inset;\r\n    }\r\n`;\r\n\r\nconst _TableMeasure = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 3;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _TablePitch = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    /* pointer-events: none; */\r\n    /* background-color: #70ff7058; */\r\n`;\r\n\r\nconst _ScaleList = styled.div<{\r\n    width: number;\r\n    isEven: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    /* z-index: 6; */\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    /* pointer-events: none; */\r\n    background-color: #70ff7021;\r\n    ${props => !props.isEven ? '' : css`\r\n        background-color: #708aff20;\r\n    `}\r\n`;\r\n\r\n// 音階を区別するバックの横線\r\nconst _ScaleLine = styled.div<{\r\n    isScale: boolean;\r\n    isBase: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${TUNE_PITCH_HEIGHT - 1}px;\r\n    margin: 1px 0 0 0;\r\n    background-color: #00000024;\r\n    /* border-bottom: 1px solid #00000018; */\r\n    ${props => !props.isScale ? '' : css`\r\n        background-color: #d1d1d11f;\r\n    `}\r\n    ${props => !props.isBase ? '' : css`\r\n        background-color: #e0e0e0;\r\n    `}\r\n`;\r\n\r\nconst _TableNotes = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 5;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    cursor: crosshair;\r\n`;\r\n\r\n\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n    beatWidth: number;\r\n}>`\r\n    display: inline-block;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${props => props.beatWidth / 4}px;\r\n    vertical-align: top;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #757575;\r\n`;\r\n\r\n\r\nconst _NotesWrap = styled.div<{\r\n    left: number;\r\n    width: number;\r\n    isActive: boolean;\r\n    isResize: boolean;\r\n    isMove: boolean;\r\n    isOctave: boolean;\r\n    isScale: boolean;\r\n    isPreview: boolean;\r\n    side: Side;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 9;\r\n    left: ${props => props.left}px;\r\n    top: 0;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    cursor: default;\r\n    background-color: #2727275a;\r\n    box-sizing: border-box;\r\n\r\n    // アクティブ時\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #00a6cf52;\r\n    `}\r\n    // スケールモードON\r\n    ${props => !(props.isActive && props.isScale) ? '' : css`\r\n        background-color: #00cf4552;\r\n    `}\r\n    // オクターブモードON\r\n    ${props => !(props.isActive && props.isOctave) ? '' : css`\r\n        background-color: #ffa9a952;\r\n    `}\r\n    /* border-left: 1px solid #ff0000b2; */\r\n    ${props => props.isActive ? props.side === 'left' ? css`\r\n        border-left: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #1900ff52;\r\n    ` : props.side === 'right' ? css`\r\n        border-right: 3px solid #0026ffb1;\r\n        cursor : col-resize;\r\n        background-color: #ff00006e;\r\n    ` : '' : ''}\r\n\r\n    // キーボードによるリサイズモードON\r\n    ${props => !(props.isActive && props.isResize) ? '' : css`\r\n        border-right: 3px solid #0026ffb1;\r\n        background-color: #ff00006e;\r\n    `}\r\n    // キーボードによる移動モードON\r\n    ${props => !(props.isActive && props.isMove) ? '' : css`\r\n        border-left: 3px solid #0026ffb1;\r\n        background-color: #1900ff52;\r\n    `}\r\n    // プレビューモード\r\n    ${props => !(props.isActive && props.isPreview) ? '' : css`\r\n        background-color: #fffb0040;\r\n    `}\r\n`;\r\nconst _Notes = styled.div<{\r\n    y: number;\r\n    lenType: number;\r\n    isScale: boolean;\r\n    isActive: boolean;\r\n    isPreview: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    top: ${props => props.y}px;\r\n    width: 100%;\r\n    height: ${props => TUNE_PITCH_HEIGHT - (props.lenType === 1 ? 0 : props.lenType === 2 ? 6 : props.lenType === 4 ? 12 : 14)}px;\r\n    /* background-color: red; */\r\n    /* background: linear-gradient(to bottom, ${props => {\r\n        switch (props.lenType) {\r\n            case 4: return '#f8525232, #ff0000, #f8525232';\r\n            case 8: return '#5d52f831, #0400ff, #5d52f831';\r\n            case 16: return '#52f85a31, #00ff15, #52f85a31';\r\n        }\r\n    }}); */\r\n    border-radius: 15px 0 0 15px;\r\n    background: linear-gradient(to bottom, #f8525232, #ff0000, #f8525232);\r\n    ${props => props.isScale ? '' : css`    \r\n       background: linear-gradient(to bottom, #f8b65231, #ffae00, #f8b65231);\r\n    `}\r\n    opacity: 0.5;\r\n    ${props => props.isPreview && !props.isActive ? '' : css`    \r\n       opacity: 1;\r\n    `}\r\n    /* border: 1px solid #000; */\r\n    box-sizing: border-box;\r\n    font-size: 12px;\r\n    color: #000000;\r\n    box-shadow: 0 0 22px 0 #0000007d;\r\n    ${props => !(props.isPreview && props.isActive) ? '' : css`\r\n        box-shadow: 0 0 32px 0 #ffffff92;\r\n    `}\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst _PrevireBrind = styled.div<{\r\n    width: number;\r\n    isUse: boolean;\r\n}>`\r\n    position: absolute;\r\n    display: ${props => props.isUse ? 'block' : 'none'};\r\n    z-index: 80;\r\n    width: ${props => props.width}px;\r\n    height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n    background-color: #7a270028;\r\n`;\r\n\r\n// const _Scroll = styled.div<{\r\n//     left: number;\r\n// }>`\r\n//     position: absolute;\r\n//     left: ${props => props.left}px;\r\n//     top: 0px;\r\n//     z-index: 20;\r\n//     width: 4px;\r\n//     height: ${TUNE_PITCH_HEIGHT * 60}px;\r\n//     background-color: #00f;\r\n// `;","import { useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport HarmonizeTab from \"./harmonize/harmonizeFrame\";\r\nimport Soundfont from 'soundfont-player';\r\nimport MelodyFrame from \"./melody/melodyFrame\";\r\nimport Styles, { _CSS_DISABLE, _CSS_LABEL_MIDIUM } from \"../../../base/design/styles\";\r\nimport MelodyUtil, { } from \"../../../utils/melodyUtil\";\r\nimport HarmonizeUtil from \"../../../utils/harmonizeUtil\";\r\n\r\nconst EditTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const state = store.scoreState;\r\n    const melody = store.melodyState;\r\n\r\n    const isDirect = store.systemState.directScore != undefined;\r\n\r\n    useEffect(() => {\r\n        const info = melody.soundfontInfo;\r\n        if (store.instruments.melodyFont == null && store.instruments.harmonyFont == null) {\r\n            const instruments = store.instruments;\r\n            Soundfont.instrument(new AudioContext(), info.name,\r\n                { gain: info.gain, release: 0.5 }).then((melodyFont) => {\r\n                    // dispatcher.melody.setMelodyFont(soundFontPlayer);\r\n\r\n                    instruments.melodyFont = melodyFont;\r\n                    // acoustic_guitar_steel\r\n                    //bright_acoustic_piano\r\n                    //electric_grand_piano\r\n                    Soundfont.instrument(new AudioContext(), 'electric_grand_piano',\r\n                        { gain: 2, release: 0.5 }).then((harmonyFont) => {\r\n                            // dispatcher.score.setHarmonyFont(soundFontPlayer);\r\n\r\n                            instruments.harmonyFont = harmonyFont;\r\n                            dispatcher.score.setInstruments(instruments);\r\n                        });\r\n                });\r\n        }\r\n\r\n    }, []);\r\n\r\n    const switchMode = () => {\r\n        state.isMelody = !state.isMelody;\r\n        dispatcher.score.setScoreState(state);\r\n    };\r\n\r\n    if (store.scoreData.chordList.length === 0) {\r\n        return <></>;\r\n    }\r\n\r\n    const isPreview = !state.isMelody ? state.isPreview : store.melodyState.isPreview;\r\n    const isSolo = !state.isMelody ? state.isSolo : melody.isSolo;\r\n    const preview = !state.isMelody ? () => {\r\n\r\n        if (!state.isPreview) {\r\n            HarmonizeUtil.previewStart(store, dispatcher);\r\n        } else {\r\n            HarmonizeUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    } : () => {\r\n\r\n        if (!melody.isPreview) {\r\n            dispatcher.melody.previewStart();\r\n        } else {\r\n            MelodyUtil.stopPreview(store, dispatcher, store.reserveTasks);\r\n        }\r\n    }\r\n    /** アンサンブルの切替 */\r\n    const toggleEnsamble = !state.isMelody ? () => {\r\n        state.isSolo = !state.isSolo;\r\n        dispatcher.score.setScoreState(state);\r\n    } : () => {\r\n        melody.isSolo = !melody.isSolo;\r\n        dispatcher.melody.setState(melody);\r\n    }\r\n\r\n    const playJsx = <_SwitchInner isActive={isPreview}>Play</_SwitchInner>;\r\n    const stopJsx = <_SwitchInner isActive={!isPreview}>Pause</_SwitchInner>;\r\n    const ensambleJsx = <_SwitchInner isActive={!isSolo}>Emsamble</_SwitchInner>;\r\n    const soloJsx = <_SwitchInner isActive={isSolo}>Solo</_SwitchInner>;\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header isEnable={state.hideMenu === 'none'}>\r\n                <_Mode isEnable={!isPreview}>\r\n                    <_ModeItem isActive={!state.isMelody} onClick={() => {\r\n                        if (state.isMelody) switchMode();\r\n                    }}>Harmony</_ModeItem>\r\n                    <_ModeItem isActive={state.isMelody} onClick={() => {\r\n                        if (!state.isMelody) switchMode();\r\n                    }}>Melody</_ModeItem>\r\n                </_Mode>\r\n                <_Buttons>\r\n                    <_Switch isEnable={true} onClick={preview}>{playJsx} / {stopJsx}</_Switch>\r\n                    <_Switch isEnable={!state.isPreview} onClick={toggleEnsamble}>{ensambleJsx} / {soloJsx}</_Switch>\r\n                    <_Button isEnable={!isDirect} onClick={dispatcher.score.saveFile}>Save</_Button>\r\n                </_Buttons>\r\n            </_Header>\r\n            <_Body\r\n                tabIndex={999}\r\n                onKeyDown={(e) => {\r\n                    const isPermit = !isPreview && state.hideMenu === 'none';\r\n                    if (isPermit) {\r\n                        switch (e.key) {\r\n                            case 'r': switchMode(); break;\r\n                        }\r\n                    }\r\n                }}>\r\n                <_Main>\r\n                    <HarmonizeTab isActive={!state.isMelody} />\r\n                    <MelodyFrame isActive={state.isMelody} />\r\n                </_Main>\r\n            </_Body>\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default EditTab;\r\n\r\nconst _Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n`;\r\n\r\nconst _Header = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    background-color: #ececec;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _Mode = styled.div<{\r\n    isEnable: boolean\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    text-align: center;\r\n    margin-right: 20px;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n`;\r\nconst _ModeItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 120px;\r\n    height: calc(100% - 8px);\r\n    /* background-color: #e0ff6f55; */\r\n    ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    margin: 4px 0 0 4px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #505050;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    &:hover {\r\n        background-color: #e0ff6f55;\r\n        ${props => !props.isActive ? '' : css`background-color: #e2c36dc0;`}\r\n    }\r\n`;\r\nconst _Buttons = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    /* background-color: #e0ff6f55; */\r\n\r\n    & * {\r\n        margin: 3px 0 0 5px;\r\n    }\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 150px;\r\n    height: calc(100% - 8px);\r\n    background-color: #cae4e3;\r\n    margin: 4px 0 0 24px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    &:hover {\r\n        background-color: #dceceb\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    width: 220px;\r\n    height: calc(100% - 8px);\r\n    background-color: #e1e4ca;\r\n    margin: 4px 0 0 4px;\r\n    text-align: center;\r\n\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000000cf;\r\n    border-radius: 5px;\r\n    border: 1px solid #969696;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : _CSS_DISABLE}\r\n    &:hover {\r\n        background-color: #eff3cf\r\n    }\r\n`;\r\n\r\nconst _SwitchInner = styled.span<{\r\n    isActive: boolean;\r\n}>`\r\n    color: #00109e6e;\r\n    ${props => !props.isActive ? '' : css`color: #db0000;`}\r\n`;\r\n\r\nconst _Body = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 35px);\r\n    background-color: #c50000;\r\n    outline: none;\r\n`;\r\n\r\nconst _Main = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #dddddd;\r\n    vertical-align: top;\r\n`;\r\n\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport EditTab from \"./edit/editTab\";\r\nimport PreviewTab from \"./preview/previewTab\";\r\n\r\nconst ScoreChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = store.scoreState.focusIndex !== -1;\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', disable: false, cont: <ManageTab /> },\r\n                    { name: 'Edit', disable: !isAccept, cont: <EditTab /> },\r\n                    // { name: 'Thema', disable: !isAccept, cont: <div></div> },\r\n                    // { name: 'Preview', disable: !isAccept, cont: store.scoreData.chordList.length === 0 ? <></> : <PreviewTab data={store.scoreData} /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst SettingChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Sound', disable: true, cont: <div></div> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SettingChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TheoryUtil from \"../../utils/theoryUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst PerformChannel = () => {\r\n\r\n    // const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const sampler = store.instruments.sampler;\r\n    const createLane = (label: string, items: {\r\n        degree: TheoryUtil.DegreeProps;\r\n        symbolKey: TheoryUtil.SymbolKey;\r\n    }[]): JSX.Element => {\r\n        const jsxList: JSX.Element[] = [];\r\n\r\n        // ヘッダ情報の要素を設定\r\n        jsxList.push(<_Header key={jsxList.length}><div>{label}</div></_Header>);\r\n        items.forEach((item) => {\r\n            const degree = item.degree;\r\n            const degreeRootName = (degree.isFlat ? TheoryUtil.DEGREE12_FLAT_LIST : TheoryUtil.DEGREE12_SHARP_LIST)[degree.index];\r\n            const chordRootName = (degree.isFlat ? TheoryUtil.KEY12_FLAT_LIST : TheoryUtil.KEY12_SHARP_LIST)[degree.index];\r\n            const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey) as TheoryUtil.SymbolParams;\r\n            const symbolName = symbol.name;\r\n            jsxList.push(<_Item key={jsxList.length}\r\n                onMouseDown={(e) => {\r\n                    if (e.button !== 0) return;\r\n                    // sampler.releaseAll();\r\n\r\n                    const symbol = TheoryUtil.getSymbolFromKey(item.symbolKey) as TheoryUtil.SymbolParams;\r\n\r\n                    const voicingList = symbol.structs.map((struct) => {\r\n                        const interval = TheoryUtil.IntervalRelationProps[struct];\r\n                        return 12 * 3 + item.degree.index + interval;\r\n                    });\r\n\r\n                    voicingList.forEach((index) => {\r\n                        const soundName = TheoryUtil.KEY12_SHARP_LIST[index % 12];\r\n                        const octave = Math.floor(index / 12);\r\n                        const soundFullName = soundName + octave;\r\n                        // sampler.triggerAttack(soundFullName, '+0', 0.5);\r\n                    });\r\n                }}\r\n            >\r\n                <div>{degreeRootName}{symbolName}</div>\r\n                <div>{chordRootName}{symbolName}</div>\r\n            </_Item>);\r\n        });\r\n        return (<_Lane>{jsxList}</_Lane>);\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            onMouseDown={(e) => {\r\n                if (e.button !== 2) return;\r\n                // sampler.releaseAll();\r\n            }}>\r\n            {createLane('Diatonic Triad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor-minus5' },\r\n            ])}\r\n            {createLane('Diatonic Tetrad', [\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 5, isFlat: false }, symbolKey: 'major-maj7th' },\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'minor-7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'minor7-minus5' },\r\n            ])}\r\n            {createLane('Parallel Triad', [\r\n                { degree: { index: 0, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 2, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 3, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 5, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 7, isFlat: true }, symbolKey: 'minor' },\r\n                { degree: { index: 8, isFlat: true }, symbolKey: 'major' },\r\n                { degree: { index: 10, isFlat: true }, symbolKey: 'major' },\r\n            ])}\r\n            {createLane('Secondary Dominant', [\r\n                { degree: { index: 7, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 9, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 11, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 0, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 2, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 4, isFlat: false }, symbolKey: 'major-min7th' },\r\n                { degree: { index: 10, isFlat: false }, symbolKey: 'major-min7th' },\r\n            ])}\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PerformChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #c3d8dd6f;\r\n    border: solid 1px #888;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Lane = styled.div`\r\n    display: inline-block;\r\n    width: 160px;\r\n    background-color: #bbbbbb;\r\n    padding-bottom: 5px;\r\n`;\r\n\r\nconst _Box = styled.div`\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 80px;\r\n    margin: 5px 0 0 5px;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Header = styled(_Box)`\r\n    background-color: #51608f;\r\n    /* border: 1px solid #dfdfdf; */\r\n    font-weight: 600;\r\n    & div:nth-child(1) {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 100%;\r\n        font-size: 26px;\r\n        color: #ebebeb;\r\n    }\r\n`;\r\n\r\nconst _Item = styled(_Box)`\r\n    background-color: #e0ebe5;\r\n    border: 1px solid #777;\r\n    & *{\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n    & div:nth-child(1) {\r\n        font-size: 26px;\r\n        color: #d40000;\r\n    }\r\n    & div:nth-child(2) {\r\n        font-size: 24px;\r\n        color: #000000;\r\n    }\r\n    &:hover {\r\n        background-color: #fcf29f;\r\n    }\r\n`;","import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { isAuthenticated, user, isLoading } = useAuth0();\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [userId, setUserId] = useState('-');\r\n    const [userCount, setUserCount] = useState(0);\r\n\r\n    const [scoreList, setScoreList] = useState<scoreProps[]>([]);\r\n\r\n    const loginProps = store.userEnv.login;\r\n\r\n    let email = '-';\r\n    if (isAuthenticated && user != undefined) {\r\n        email = user.email ?? '-';\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.systemState.directScore == null) {\r\n            countUsers().then(cnt => {\r\n                setUserCount(24 + cnt);\r\n                findAllScore().then((resList) => {\r\n                    setScoreList(resList as scoreProps[]);\r\n                });\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!loginProps) {\r\n            setUserId('');\r\n        } else {\r\n            setUserId(loginProps.id);\r\n        }\r\n    }, [loginProps, isAuthenticated]);\r\n\r\n    const createUser = () => {\r\n        if (user != undefined) {\r\n            DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(email, id) VALUES('${user.email}', '${userId}')`).then(() => {\r\n                window.location.reload();\r\n            });\r\n        }\r\n    }\r\n\r\n    const updateUser = () => {\r\n        DataUtil.sendQueryRequestToAPI('update', `UPDATE user_tbl SET id = '${userId}' WHERE seq = ${loginProps?.seq}`).then(() => {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    const registerLabel = loginProps == undefined ? 'create' : 'update';\r\n    const registerAction = loginProps == undefined ? createUser : updateUser;\r\n\r\n    const scoreListJsx = scoreList.map((score, i) => {\r\n        return (\r\n            <_CloudItem key={i} onClick={() => {\r\n                window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n            }}>\r\n                <_Owner>{`${score.owner}`}</_Owner>\r\n                <_CName>{`${score.dispnam}`}</_CName><_CDate>{score.lastmod}</_CDate>\r\n            </_CloudItem>\r\n        );\r\n    });\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <_Recored>\r\n                <_TitleLabel>User Data</_TitleLabel>\r\n            </_Recored>\r\n            <_ListInfoDiv isEnable={isAuthenticated && !isLoading}>\r\n                <_Recored>\r\n                    <_ItemnLabel>e-mail</_ItemnLabel>\r\n                    <_ItemnValue>{email}</_ItemnValue>\r\n                </_Recored>\r\n                <_Recored>\r\n                    <_ItemnLabel>user id</_ItemnLabel>\r\n                    <_ItemnForm type=\"text\" value={userId} onChange={(e) => {\r\n                        setUserId(e.target.value);\r\n                    }} />\r\n                </_Recored>\r\n                <_ButtonsDiv>\r\n                    <_Button isEnable={true} onClick={registerAction}>{registerLabel}</_Button>\r\n                </_ButtonsDiv>\r\n            </_ListInfoDiv>\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{scoreList.length} licresia scores have been published.</_MessageRecord>\r\n            <_ListFrame>{scoreListJsx}</_ListFrame>\r\n\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllScore = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = score.user_seq) as owner, dispnam, lastmod\r\n        FROM scoretbl score\r\n        WHERE share <> 'url'\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 400px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\n\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 30px;\r\n    user-select: text;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ItemnForm = styled.input`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #1a1a1a;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #e9e9e9;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 42px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\nconst _CloudItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    /* height: 60px; */\r\n    border-bottom: 1px solid #888888;\r\n    /* background-color: white; */\r\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    }\r\n`;\r\n\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;","import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst ScoreInfoTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [userId, setUserId] = useState('-');\r\n\r\n    const directScore = store.systemState.directScore;\r\n\r\n    const [owner, name] = directScore == null ? ['-', '-'] : [directScore.owner, directScore.name];\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_Recored>\r\n                <_TitleLabel>Score Data</_TitleLabel>\r\n            </_Recored>\r\n            <_ListInfoDiv isEnable={true}>\r\n                <_Recored>\r\n                    <_ItemnLabel>owner</_ItemnLabel>\r\n                    <_ItemnValue>{owner}</_ItemnValue>\r\n                </_Recored>\r\n                <_Recored>\r\n                    <_ItemnLabel>name</_ItemnLabel>\r\n                    <_ItemnValue>{name}</_ItemnValue>\r\n                </_Recored>\r\n                <_Button isEnable={true} onClick={() => {\r\n                    saveFile(JSON.stringify(store.scoreData));\r\n                }}>Download</_Button>\r\n            </_ListInfoDiv>\r\n        </_Left>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default ScoreInfoTab;\r\n\r\nconst saveFile = (plainData: string) => {\r\n    const options = {\r\n        types: [\r\n            {\r\n                accept: {\r\n                    'text/plain': ['.lcrs'],\r\n                },\r\n            },\r\n        ],\r\n    };\r\n    window.showSaveFilePicker(options).then((handle) => {\r\n        (async () => {\r\n            //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n            const writable = await handle.createWritable();\r\n            //テキストデータの書き込み\r\n            const text = DataUtil.gZip(plainData);\r\n            await writable.write(text);\r\n            //ファイルを閉じる\r\n            await writable.close();\r\n        })();\r\n    }).catch(() => {\r\n        console.log('キャンセルされました');\r\n    });\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 400px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\n\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 30px;\r\n    user-select: text;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ItemnForm = styled.input`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #1a1a1a;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #e9e9e9;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #888888;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport EditTab from \"../score/edit/editTab\";\r\nimport ScoreInfoTab from \"./scoreInfoTab\";\r\n\r\nconst PreviewChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Info', disable: false, cont: <ScoreInfoTab /> },\r\n                    { name: 'View', disable: false, cont: <EditTab /> },\r\n                ]}\r\n                activeNo={store.systemState.scoreTabIndex}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default PreviewChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","import { useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        isActive={(isDisable && isCurrent) || (!isDisable && isRelationNode())}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={()=>{\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #cecece;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #a58c8c;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: block;\r\n    /* position: relative; */\r\n    background-color: #ffffff47;\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #ff454546;\r\n    `}\r\n    ${props => props.isActive ? '' : css`\r\n        background-color: transparent;\r\n        opacity: 0.5;\r\n    `}\r\n    /* width: calc(100% - 10px); */\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM, _CSS_LABEL_SMALL } from \"../../../../base/design/styles\";\r\nimport { Dispatcher } from \"../../../../redux/dispatcher/dispatcher\";\r\nimport ThemaUtil from \"../themaUtil\";\r\nimport TreeUtil from \"../treeUtil\";\r\n\r\nnamespace ThemaEditTabUtil {\r\n\r\n    export type ComponentArgs = {\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        setThamaData: React.Dispatch<React.SetStateAction<ThemaUtil.LevelBase>>;\r\n        setBackingWnd: (flg: boolean) => void;\r\n        dispatcher: Dispatcher;\r\n        treeDisable: boolean;\r\n        setTreeDisable: (treeDisable: boolean) => void;\r\n    }\r\n\r\n    export const InputTextForm = (props: {\r\n        titleLabel: string;\r\n        value: string;\r\n        isEnable?: boolean;\r\n        setValue: (value: string) => void;\r\n    }) => {\r\n        return (\r\n            <_Record isEnable={props.isEnable ?? true}>\r\n                <_ItemnLabel>{props.titleLabel}</_ItemnLabel>\r\n                <_ItemnInput type=\"text\" value={props.value} onChange={(e) => {\r\n                    props.setValue(e.target.value);\r\n                }} />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string };\r\n    export const createBlankCatList = (list: ComboboxItemProps[]) => {\r\n        return [{ value: '', labelText: '' }].concat(list);\r\n    }\r\n    export const InputComboboxForm = (props: {\r\n        titleLabel: string;\r\n        value: string;\r\n        isEnable?: boolean;\r\n        setValue: (value: string) => void;\r\n        list: ComboboxItemProps[];\r\n    }) => {\r\n        return (\r\n            <_Record isEnable={props.isEnable ?? true}>\r\n                <_ItemnLabel>{props.titleLabel}</_ItemnLabel>\r\n                <_ItemnCombobox value={props.value} onChange={(e) => {\r\n                    props.setValue(e.target.value);\r\n                }} >{props.list.map((item, i) => {\r\n                    return <option key={i} value={item.value}>{item.labelText}</option>\r\n                })}</_ItemnCombobox>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const LabelTextItem = (props: {\r\n        titleLabel: string;\r\n        value: string;\r\n    }) => {\r\n        return (\r\n            <_Record isEnable={true}>\r\n                <_ItemnLabel>{props.titleLabel}</_ItemnLabel>\r\n                <_ItemnInput readOnly type=\"text\" value={props.value} />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const TextAreaView = (props: {\r\n        value: string;\r\n        height?: number;\r\n    }) => {\r\n        const height = props.height ?? 150;\r\n        return (\r\n            <_TextArea\r\n                readOnly\r\n                value={props.value}\r\n                height={height}\r\n            />\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        return (<>\r\n            <_BorderText>{props.title}</_BorderText>\r\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        name: string;\r\n        isEnable?: boolean;\r\n        callback: () => void;\r\n    }\r\n    export const ButtonDiv = (props: {\r\n        buttons: ButtonProps[]\r\n    }) => {\r\n        return (\r\n            <_Record isEnable={true}>\r\n                {props.buttons.map((button, i) => {\r\n                    return (\r\n                        <_Button\r\n                            key={i}\r\n                            isEnable={button.isEnable ?? true}\r\n                            onClick={button.callback}\r\n                        >{button.name}</_Button>\r\n                    );\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export type ListButtonProps = {\r\n        label: string;\r\n        width: number;\r\n        isEnable?: boolean;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ListManager = (props: {\r\n        height: number;\r\n        records: {\r\n            label: string;\r\n            buttons: ListButtonProps[];\r\n        }[]\r\n    }) => {\r\n        return (\r\n            <_ListRecordFrame height={props.height}>\r\n                {props.records.map((record, i) => {\r\n                    const dim = record.buttons.map(button => button.width).reduce((a, b) => a + b + 2);\r\n                    const buttonJsxList = record.buttons.map((button, i) => {\r\n                        return <_ListRecordButton\r\n                            key={i}\r\n                            width={button.width}\r\n                            isEnable={button.isEnable ?? true}\r\n                            onClick={button.callback}\r\n                        >{button.label}</_ListRecordButton>\r\n                    });\r\n                    return (\r\n                        <_ListRecordItem key={i}>\r\n                            <_ListRecordLabel dim={dim + 2}>{record.label}</_ListRecordLabel>{buttonJsxList}\r\n                        </_ListRecordItem>\r\n                    );\r\n                })}\r\n            </_ListRecordFrame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ThemaEditTabUtil;\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #b3b4c4; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin-left: 4px;\r\n    margin-top: 2px;\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 150px);\r\n    margin-top: 2px;\r\n    margin-left: 4px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #1f1f1f;\r\n    border: solid 1px #000;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        border: none;\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n`;\r\n\r\nconst _ItemnCombobox = styled.select<{\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 150px);\r\n    margin-top: 2px;\r\n    margin-left: 4px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #1f1f1f;\r\n    border: solid 1px #000;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #dbdbdb;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin-left: 4px;\r\n    margin-top: 2px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${_CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    background-color: #d4d6bc;\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _TextArea = styled.textarea<{\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: #0a0038;\r\n    background-color: #b7bcd3;\r\n    resize: none;\r\n    width: calc(100% - 8px);\r\n    height: ${props => props.height}px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 4px;\r\n    outline: none;\r\n`;\r\n\r\nconst _ListRecordFrame = styled.div<{\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${props => props.height}px;\r\n    margin: 4px 0 0 4px;\r\n    border: solid 2px #850000;\r\n    background-color: #bcbcbc;\r\n    box-sizing: border-box;\r\n    padding: 0 0 2px 0;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _ListRecordItem = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    ${Styles.CSS_LABEL_SMALL};\r\n    margin: 2px 0 0 0;\r\n    background-color: #fff7dc;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 4px;\r\n`;\r\n\r\nconst _ListRecordLabel = styled.div<{\r\n    dim: number;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - ${props => props.dim}px);\r\n    height: 100%;\r\n    color: #9c1e1e;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ListRecordButton = styled.div<{\r\n    width: number;\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.width}px;\r\n    height: 100%;\r\n    color: #110549;\r\n    text-align: center;\r\n    background-color: #93bec3;\r\n    border-radius: 4px;\r\n    border: solid 1px #274154;\r\n    box-sizing: border-box;\r\n    margin: 0 1px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #b7d6d9;\r\n    }\r\n`;","import { useState, useContext, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\r\nimport ThemaUtil from \"../themaUtil\";\r\nimport TreeUtil from \"../treeUtil\";\r\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\r\n\r\nconst AttrFormTab = (props: {\r\n    isPattern: boolean;\r\n}) => {\r\n    const { node, invalidate, setFocusNode, setTreeDisable } = useContext(ThemaTreeContext);\r\n\r\n    const parentNode = node.parent as TreeUtil.ElementNode;\r\n\r\n    const [attr, setAttr] = useState<'' | TheoryUtil.SymbolAttribute>('');\r\n    const [symbols, setSymbols] = useState<TheoryUtil.SymbolKey[]>([]);\r\n\r\n    const [errorList, setErrorList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (node.data == null) {\r\n            setAttr('');\r\n            setSymbols([]);\r\n        } else {\r\n            const data = node.data as ThemaUtil.LevelAttr;\r\n            setAttr(data.attr);\r\n            setSymbols(data.symbols.slice());\r\n        }\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (attr === '' || symbols.length === 0) {\r\n            list.push('target is none.');\r\n        }\r\n        setErrorList(list);\r\n    }, [attr, symbols]);\r\n\r\n    const targetSymbolList = attr === '' ? [] : TheoryUtil.getSymbolsFromAttr(attr);\r\n    return (<>\r\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"attribute\" value={attr} setValue={(value: string) => {\r\n            setAttr(value as TheoryUtil.SymbolAttribute);\r\n            setSymbols([]);\r\n        }} list={ThemaEditTabUtil.createBlankCatList(TheoryUtil.SymbolAttributeList.map(item => ({ value: item, labelText: item })))} />\r\n        <_ListDiv>\r\n            {targetSymbolList.map((symbol, i) => (\r\n                <_SymbolItem key={i}\r\n                    isActive={symbols.includes(symbol.key)}\r\n                    onClick={() => {\r\n                        if (!symbols.includes(symbol.key)) symbols.push(symbol.key);\r\n                        else symbols.splice(symbols.indexOf(symbol.key), 1);\r\n                        setSymbols(symbols.slice());\r\n                    }}\r\n                ><_SymbolKey>{symbol.key}</_SymbolKey> [{symbol.name}]</_SymbolItem>\r\n            ))}\r\n        </_ListDiv>\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"selft element\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Update',\r\n                        isEnable: errorList.length === 0,\r\n                        callback: () => {\r\n                            if (node.data == null) {\r\n                                const attrData: ThemaUtil.LevelAttr = {\r\n                                    attr: attr as TheoryUtil.SymbolAttribute,\r\n                                    symbols: symbols.slice(),\r\n                                    roots: []\r\n                                };\r\n                                node.data = attrData;\r\n                                if (!props.isPattern) {\r\n                                    const parentData = parentNode.data as ThemaUtil.LevelMethod;\r\n                                    (parentData.defs as ThemaUtil.LevelAttr[]).push(attrData);\r\n                                } else {\r\n                                    const parentData = parentNode.data as ThemaUtil.LevelPatt;\r\n                                    parentData.attrs.push(attrData);\r\n                                }\r\n                                setTreeDisable(false);\r\n                            } else {\r\n                                const data = node.data as ThemaUtil.LevelAttr;\r\n                                data.attr = attr as TheoryUtil.SymbolAttribute;\r\n                                data.symbols = symbols;\r\n                                invalidate();\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true, callback: () => {\r\n                            setFocusNode(parentNode);\r\n                            const selfIndex = TreeUtil.getChildIndex(node);\r\n                            parentNode.children.splice(selfIndex, 1);\r\n                            if (!props.isPattern) {\r\n                                const parentData = parentNode.data as ThemaUtil.LevelMethod;\r\n                                (parentData.defs as ThemaUtil.LevelAttr[]).splice(selfIndex, 1);\r\n                            } else {\r\n                                const parentData = parentNode.data as ThemaUtil.LevelPatt;\r\n                                parentData.attrs.splice(selfIndex, 1);\r\n                            }\r\n                            setTreeDisable(false);\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"children element\"\r\n            isEnable={node.data != null}\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.LabelTextItem titleLabel=\"Child\" value={'Root Element'} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Add',\r\n                        isEnable: true, callback: () => {\r\n                            // const rootData: ThemaUtil.LevelRoot = {\r\n                            //     minIdx: 0,\r\n                            //     maxIdx: 11,\r\n                            //     voics: []\r\n                            // };\r\n                            // data.roots.push(rootData);\r\n                            const newNode = TreeUtil.createNode(null, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            setTreeDisable(true);\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true, callback: () => {\r\n                            const data = node.data as ThemaUtil.LevelAttr;\r\n                            node.children = [];\r\n                            data.roots = [];\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default AttrFormTab;\r\n\r\n\r\nconst _ListDiv = styled.div`\r\n    display: inline-block;\r\n    background-color: #e3ecee;\r\n    width: calc(100% - 8px);\r\n    min-height: 50px;\r\n    margin: 4px 0 0 4px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #26242c;\r\n    padding: 0 4px 4px 0;\r\n`;\r\n\r\nconst _SymbolItem = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    background-color: #a2bcc2;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #dee058;\r\n    `}\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #4f59b3;\r\n    padding: 0 10px;\r\n    margin: 4px 0 0 4px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #697ab3;\r\n    border-radius: 5px;\r\n    &:hover {\r\n        background-color: #c2d5da;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color:#c2c461;\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _SymbolKey = styled.span`\r\n    color: #d65d5d;\r\n`;","import { useState, useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\r\nimport ThemaUtil from \"../themaUtil\";\r\nimport TreeUtil from \"../treeUtil\";\r\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\r\n\r\nconst BaseFormTab = (props: {\r\n    themaList: ThemaUtil.LevelBase[];\r\n    addThema: (thema: ThemaUtil.LevelBase) => void;\r\n}) => {\r\n    const { node, invalidate, setThamaData } = useContext(ThemaTreeContext);\r\n    const data = node.data as ThemaUtil.LevelBase;\r\n    const [themaName, setThemaName] = useState(data.themaName);\r\n\r\n    const [errorList, setErrorList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (themaName === '') {\r\n            list.push('name is empty.');\r\n        }\r\n        setErrorList(list);\r\n    }, [themaName]);\r\n\r\n    return (<>\r\n        <ThemaEditTabUtil.ButtonDiv buttons={[\r\n            {\r\n                name: 'Export',\r\n                isEnable: true, callback: () => {\r\n                    const options = {\r\n                        types: [\r\n                            {\r\n                                accept: {\r\n                                    'text/plain': ['.lcrt'],\r\n                                },\r\n                            },\r\n                        ],\r\n                    };\r\n\r\n                    window.showSaveFilePicker(options).then((handle) => {\r\n                        (async () => {\r\n                            //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                            const writable = await handle.createWritable();\r\n                            //テキストデータの書き込み\r\n                            const text = DataUtil.gZip(JSON.stringify(data));\r\n                            await writable.write(text);\r\n                            //ファイルを閉じる\r\n                            await writable.close();\r\n                        })();\r\n                    }).catch(() => {\r\n                        console.log('キャンセルされました');\r\n                    });\r\n\r\n                }\r\n            },\r\n            {\r\n                name: 'Import',\r\n                isEnable: true, callback: () => {\r\n                    (async () => {\r\n                        const [fileHandle] = await window.showOpenFilePicker();\r\n                        const file = await fileHandle.getFile();\r\n                        const fileContents = await file.text();\r\n                        const text = DataUtil.unZip(fileContents);\r\n                        const themaData = JSON.parse(text);\r\n                        setThamaData(themaData);\r\n                        node.data = themaData;\r\n                        console.log(JSON.stringify(node.data));\r\n                        invalidate();\r\n                    })();\r\n                }\r\n            }\r\n        ]} />\r\n        {/* <ThemaEditTabUtil.ButtonDiv buttons={[\r\n            {\r\n                name: 'Clear',\r\n                isEnable: true, callback: () => {\r\n                    data.meths[0].defs = [];\r\n                    data.meths[1].defs = [];\r\n                    invalidate();\r\n                }\r\n            }\r\n        ]} /> */}\r\n        <ThemaEditTabUtil.InputTextForm titleLabel=\"name\" value={themaName} setValue={(value: string) => {\r\n            setThemaName(value);\r\n        }} />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"selft operatioon\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Update',\r\n                        isEnable: errorList.length === 0,\r\n                        callback: () => {\r\n                            data.themaName = themaName;\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"install\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Install',\r\n                        isEnable: !props.themaList.map(thema => thema.themaName).includes(data.themaName),\r\n                        callback: () => {\r\n                            props.addThema(data);\r\n                        }\r\n                    }\r\n                ]} />\r\n                <ThemaEditTabUtil.ListManager\r\n                    height={140}\r\n                    records={props.themaList.map((thema, i) => {\r\n                        return {\r\n                            label: thema.themaName, buttons: [\r\n                                {\r\n                                    label: '↓', width: 30,\r\n                                    isEnable: i < props.themaList.length - 1,\r\n                                    callback: () => {\r\n                                        const cache = props.themaList[i];\r\n                                        props.themaList[i] = props.themaList[i + 1];\r\n                                        props.themaList[i + 1] = cache;\r\n                                        invalidate();\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: '↑', width: 30,\r\n                                    isEnable: i > 0,\r\n                                    callback: () => {\r\n                                        const cache = props.themaList[i];\r\n                                        props.themaList[i] = props.themaList[i - 1];\r\n                                        props.themaList[i - 1] = cache;\r\n                                        invalidate();\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: 'Load', width: 50, isEnable: false, callback: () => {\r\n\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: 'Delete', width: 60, callback: () => {\r\n                                        props.themaList.splice(i, 1);\r\n                                        invalidate();\r\n                                    },\r\n                                },\r\n                            ]\r\n                        };\r\n                    })}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default BaseFormTab;\r\n\r\n","import { useState, useContext, useEffect, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\r\nimport ThemaUtil from \"../themaUtil\";\r\nimport TreeUtil from \"../treeUtil\";\r\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\r\n\r\nconst MethFormTab = (props: {\r\n}) => {\r\n    const { node, setFocusNode, invalidate, setTreeDisable } = useContext(ThemaTreeContext);\r\n    const data = node.data as ThemaUtil.LevelMethod;\r\n\r\n    const [presetName, setPresetName] = useState<string>('');\r\n    const [prenams, setPrenams] = useState<ThemaUtil.Prenam[]>([]);\r\n\r\n    const [nextPresetSeq, setNextPresetSeq] = useState(-1);\r\n\r\n    const incrementNextPresetSeq = () => { setNextPresetSeq(nextPresetSeq + 1) };\r\n\r\n    const isSustMeth = node == node.parent?.children[0];\r\n\r\n    useEffect(() => {\r\n        setPrenams(data.prenams.slice());\r\n\r\n        setNextPresetSeq(data.prenams.length === 0 ? 0 : (\r\n            // 最大値 + 1を帰す\r\n            data.prenams.map(pre => pre.seq).reduce((prev, cur) => {\r\n                return prev < cur ? cur : prev;\r\n            }, -1) + 1\r\n        ));\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ThemaEditTabUtil.LabelTextItem titleLabel=\"Method\" value={isSustMeth ? 'Sustain' : 'Pattern'} />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"preset define\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.InputTextForm titleLabel=\"Preset\" value={presetName} setValue={(value: string) => {\r\n                    setPresetName(value);\r\n                }} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Add',\r\n                        isEnable: presetName !== '' && !prenams.map(p => p.name).includes(presetName),\r\n                        callback: () => {\r\n                            prenams.push({\r\n                                name: presetName,\r\n                                seq: nextPresetSeq\r\n                            });\r\n                            setPrenams(prenams.slice());\r\n                            setPresetName('');\r\n                            incrementNextPresetSeq();\r\n                        }\r\n                    },\r\n                ]} />\r\n                <ThemaEditTabUtil.ListManager\r\n                    height={140}\r\n                    records={prenams.map((prenam, i) => {\r\n                        return {\r\n                            label: `${prenam.seq}: ${prenam.name}`, buttons: [\r\n                                {\r\n                                    label: '↓', width: 30,\r\n                                    isEnable: i < prenams.length - 1,\r\n                                    callback: () => {\r\n                                        const cache = prenams[i];\r\n                                        prenams[i] = prenams[i + 1];\r\n                                        prenams[i + 1] = cache;\r\n                                        setPrenams(prenams.slice());\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: '↑', width: 30,\r\n                                    isEnable: i > 0,\r\n                                    callback: () => {\r\n                                        const cache = prenams[i];\r\n                                        prenams[i] = prenams[i - 1];\r\n                                        prenams[i - 1] = cache;\r\n                                        setPrenams(prenams.slice());\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: 'Delete', width: 60, callback: () => {\r\n                                        prenams.splice(i, 1);\r\n                                        setPrenams(prenams.slice());\r\n                                    },\r\n                                },\r\n                            ]\r\n                        };\r\n                    })} />\r\n            </>} />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"selft operatioon\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Update',\r\n                        isEnable: true, callback: () => {\r\n                            data.prenams = prenams.slice();\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"children operatioon\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.LabelTextItem titleLabel=\"Child\" value={(isSustMeth ? 'Sustain' : 'Pattern') + ' Element'} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Add',\r\n                        isEnable: true, callback: () => {\r\n                            // let newData: any = null;\r\n                            // if (isSustMeth) {\r\n                            //     const attrData: ThemaUtil.LevelAttr = {\r\n                            //         attr: 'triad',\r\n                            //         symbols: [],\r\n                            //         roots: []\r\n                            //     };\r\n                            //     (data.defs as ThemaUtil.LevelAttr[]).push(attrData);\r\n                            //     newData = attrData;\r\n                            // } else {\r\n                            //     const sustData: ThemaUtil.LevelSust = {\r\n                            //         beat: 4,\r\n                            //         head: 0,\r\n                            //         tail: 0,\r\n                            //         patts: []\r\n                            //     };\r\n                            //     (data.defs as ThemaUtil.LevelSust[]).push(sustData);\r\n                            //     newData = sustData;\r\n                            // }\r\n                            const newNode = TreeUtil.createNode(null, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            setTreeDisable(true);\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true, callback: () => {\r\n                            node.children = [];\r\n                            data.defs = [];\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default MethFormTab;\r\n\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { BackingPatternProps, ChordBacking } from \"../../../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\r\nimport ThemaUtil from \"../themaUtil\";\r\nimport TreeUtil from \"../treeUtil\";\r\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\r\n\r\nconst PattFormTab = () => {\r\n\r\n    const { node, invalidate, setFocusNode, dispatcher, setBackingWnd, setTreeDisable } = useContext(ThemaTreeContext);\r\n\r\n    const parentNode = node.parent as TreeUtil.ElementNode;\r\n    const parentData = parentNode.data as ThemaUtil.LevelSust;\r\n    const sustData = node.parent?.data as ThemaUtil.LevelSust;\r\n    const metData = node.parent?.parent?.data as ThemaUtil.LevelMethod;\r\n\r\n    const [pattName, setPattName] = useState('');\r\n    // const [key, setKey] = useState('');\r\n    const [refer, setRefer] = useState('');\r\n    const [rootIndex, setRootIndex] = useState(0);\r\n    const [symbolKey, setSymbolKsy] = useState<TheoryUtil.SymbolKey>('major');\r\n    const [source, setSource] = useState<string>('');\r\n\r\n    const [errorList, setErrorList] = useState<string[]>([]);\r\n\r\n    // ツリー選択時の初期化\r\n    useEffect(() => {\r\n        if (node.data == null) {\r\n            setPattName('');\r\n            // setKey('');\r\n            setRefer('');\r\n            setRootIndex(0);\r\n            setSymbolKsy('major');\r\n            setSource('');\r\n        } else {\r\n            const data = node.data as ThemaUtil.LevelPatt;\r\n            setPattName(data.pattName);\r\n            // setKey(data.key);\r\n            setRefer(data.refer === -1 ? '' : data.refer.toString());\r\n            setRootIndex(0);\r\n            setSymbolKsy('major');\r\n            setSource(JSON.stringify(data.source));\r\n        }\r\n    }, [node]);\r\n\r\n    const key = useMemo(() => {\r\n\r\n        if (node.data == null) {\r\n            return parentData.patts.map(patt => patt.key).reduce((prev, cur) => {\r\n                return prev < cur ? cur : prev;\r\n            }, -1) + 1;\r\n        } else {\r\n            const data = node.data as ThemaUtil.LevelPatt;\r\n            return data.key;\r\n        }\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (pattName === '') {\r\n            list.push('name is empty.');\r\n        }\r\n        if (source === '') {\r\n            list.push('source is empty.');\r\n        }\r\n        setErrorList(list);\r\n    }, [pattName, key, refer, source]);\r\n\r\n    /** ディペンドされているパターンの有無 */\r\n    const hasDepend = useMemo(()=> {\r\n        let result = false;\r\n        if(node.data != null) {\r\n            const data = node.data as ThemaUtil.LevelPatt;\r\n            return parentData.patts.find(patt=> {\r\n                return patt.refer === data.key;\r\n            }) != undefined;\r\n        }\r\n        return result;\r\n    }, [node]);\r\n\r\n    /** ディペンドを許可するパターンのキーリスト */\r\n    const permitDependKeys: number[] = useMemo(() => {\r\n        if (source === '') return [];\r\n        const channelSize = (JSON.parse(source) as BackingPatternProps).channelSize;\r\n        return sustData.patts.filter(patt => {\r\n            const useDepend = patt.refer !== -1;\r\n            const matchChannel = patt.source.channelSize === channelSize;\r\n            return patt.key !== key && matchChannel && !useDepend;\r\n        }).map(patt => {\r\n            return patt.key;\r\n        });\r\n    }, [node, source]);\r\n\r\n    /** チャンネルサイズを取得 */\r\n    const getChannelSize = () => {\r\n        if (source === '') return '-';\r\n        else {\r\n            const pattern = JSON.parse(source) as BackingPatternProps;\r\n            return pattern.channelSize;\r\n        }\r\n    }\r\n\r\n    const getInitialPattern = () => ({\r\n        channelSize: 1,\r\n        layers: [\r\n            {\r\n                divs: [{ rate: 4, div3: 0, isDot: false }],\r\n                notesList: [],\r\n                vels: [5]\r\n            },\r\n            {\r\n                divs: [{ rate: 4, div3: 0, isDot: false }],\r\n                notesList: [],\r\n                vels: [5]\r\n            }\r\n        ]\r\n    });\r\n\r\n    /** 子要素の有無 */\r\n    const hasChild = () => {\r\n        if (node.data != null) {\r\n            const data = node.data as ThemaUtil.LevelPatt;\r\n            return data.attrs.length >= 1;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (<>\r\n        <ThemaEditTabUtil.LabelTextItem\r\n            titleLabel=\"key\" value={key.toString()}\r\n        />\r\n        <ThemaEditTabUtil.InputTextForm titleLabel=\"name\" value={pattName} setValue={(value: string) => {\r\n            setPattName(value);\r\n        }} />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"source\"\r\n            isEnable={true}\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.InputComboboxForm titleLabel=\"root\" value={rootIndex.toString()} setValue={(value: string) => {\r\n                    setRootIndex(Number.parseInt(value));\r\n                }} list={TheoryUtil.KEY12_SHARP_LIST.map((key12, idx) => (\r\n                    { value: idx.toString(), labelText: key12 }\r\n                ))} />\r\n                <ThemaEditTabUtil.InputComboboxForm titleLabel=\"symbol\" value={symbolKey} setValue={(value: string) => {\r\n                    setSymbolKsy(value as TheoryUtil.SymbolKey);\r\n                }} list={TheoryUtil.SYMBOL_LIST.map((symbol) => (\r\n                    { value: symbol.key, labelText: `${symbol.key}: [${symbol.name}]` }\r\n                ))} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Edit',\r\n                        isEnable: true, callback: () => {\r\n                            const pattern = source === '' ? getInitialPattern() : JSON.parse(source);\r\n                            const chordBacking: ChordBacking = {\r\n                                pattern,\r\n                                voicingList: []\r\n                            }\r\n                            dispatcher.thema.openBackingEditor(\r\n                                sustData.beat, sustData.head, sustData.tail, symbolKey, rootIndex, chordBacking,\r\n                                (editor: BackingState.Editor) => {\r\n                                    if (editor.pattern != null) {\r\n                                        const chordPattern = BackingUtil.buildPatternProps(editor.pattern);\r\n                                        setSource(JSON.stringify(chordPattern));\r\n                                    }\r\n                                },\r\n                                () => {\r\n                                    setBackingWnd(false);\r\n                                }\r\n                            );\r\n                            setBackingWnd(true);\r\n                        }\r\n                    },\r\n                ]} />\r\n                <ThemaEditTabUtil.TextAreaView value={source} />\r\n                <ThemaEditTabUtil.LabelTextItem\r\n                    titleLabel=\"channel\"\r\n                    value={(() => {\r\n                        return getChannelSize()\r\n                    })().toString()}\r\n                />\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.InputComboboxForm\r\n            titleLabel=\"depend\" value={refer}\r\n            // ディペンドされていないかつ、子要素が存在しない場合のみ活性化\r\n            isEnable={!hasDepend && !hasChild()}\r\n            setValue={(value: string) => {\r\n                setRefer(value);\r\n            }} list={[''].concat(permitDependKeys.map(p => p.toString())).map(key => (\r\n                { value: key, labelText: key }\r\n            ))} />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"selft operatioon\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Update',\r\n                        isEnable: errorList.length === 0,\r\n                        callback: () => {\r\n                            if (node.data == null) {\r\n                                const pattData: ThemaUtil.LevelPatt = {\r\n                                    pattName,\r\n                                    source: JSON.parse(source),\r\n                                    key,\r\n                                    refer: refer === '' ? -1 : Number(refer),\r\n                                    attrs: []\r\n                                };\r\n                                node.data = pattData;\r\n                                parentData.patts.push(pattData);\r\n                                setTreeDisable(false);\r\n                            } else {\r\n                                const data = node.data as ThemaUtil.LevelPatt;\r\n                                data.pattName = pattName;\r\n                                data.source = JSON.parse(source);\r\n                                data.key = key;\r\n                                data.refer = refer === '' ? -1 : Number(refer);\r\n                                invalidate();\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true, callback: () => {\r\n                            setFocusNode(parentNode);\r\n                            const selfIndex = TreeUtil.getChildIndex(node);\r\n                            if(node.data != null) {\r\n                                const data = node.data as ThemaUtil.LevelPatt;\r\n                                // 他のパターンからディペンドされていた場合、解除する\r\n                                parentData.patts.forEach(patt=> {\r\n                                    if(patt.refer === data.key) patt.refer = -1;\r\n                                });\r\n                            }\r\n                            parentNode.children.splice(selfIndex, 1);\r\n                            parentData.patts.splice(selfIndex, 1);\r\n                            setTreeDisable(false);\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"children operatioon\"\r\n            isEnable={node.data != null && refer === ''}\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.LabelTextItem titleLabel=\"Child\" value={'Attribute Element'} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Add',\r\n                        isEnable: true,\r\n                        callback: () => {\r\n                            // const attrData: ThemaUtil.LevelAttr = {\r\n                            //     attr: 'triad',\r\n                            //     symbols: [],\r\n                            //     roots: []\r\n                            // };\r\n                            // data.attrs.push(attrData);\r\n                            const newNode = TreeUtil.createNode(null, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            setTreeDisable(true);\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true,\r\n                        callback: () => {\r\n                            const data = node.data as ThemaUtil.LevelPatt;\r\n                            node.children = [];\r\n                            data.attrs = [];\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default PattFormTab;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\r\nimport ThemaUtil from \"../themaUtil\";\r\nimport TreeUtil from \"../treeUtil\";\r\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\r\n\r\nconst RootFormTab = () => {\r\n    const { node, setFocusNode, invalidate, setTreeDisable } = useContext(ThemaTreeContext);\r\n\r\n    const parentNode = node.parent as TreeUtil.ElementNode;\r\n    const parentData = parentNode.data as ThemaUtil.LevelAttr;\r\n    // const data = node.data as ThemaUtil.LevelRoot;\r\n\r\n    const [minIdx, setMinIdx] = useState<string>('');\r\n    const [maxIdx, setMaxIdx] = useState<string>('');\r\n\r\n    const [errorList, setErrorList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (node.data == null) {\r\n            setMinIdx('');\r\n            setMaxIdx('');\r\n        } else{\r\n            const data = node.data as ThemaUtil.LevelRoot;\r\n            setMinIdx(data.minIdx.toString());\r\n            setMaxIdx(data.maxIdx.toString());\r\n        }\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (minIdx === '' || maxIdx === '') {\r\n            list.push('min or max form is null.');\r\n            // return;\r\n        } else if (Number(minIdx) > Number(maxIdx)) {\r\n            list.push('min is upper than max.');\r\n        }\r\n        setErrorList(list);\r\n    }, [minIdx, maxIdx]);\r\n\r\n    return (<>\r\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"minIdx\" value={minIdx.toString()} setValue={(value: string) => {\r\n            setMinIdx(value);\r\n        }} list={ThemaEditTabUtil.createBlankCatList(TheoryUtil.KEY12_SHARP_LIST.map((key12, idx) => (\r\n            { value: idx.toString(), labelText: key12 }\r\n        )))} />\r\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"maxIdx\" value={maxIdx.toString()} setValue={(value: string) => {\r\n            setMaxIdx(value);\r\n        }} list={ThemaEditTabUtil.createBlankCatList(TheoryUtil.KEY12_SHARP_LIST.map((key12, idx) => (\r\n            { value: idx.toString(), labelText: key12 }\r\n        )))} />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"selft operatioon\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Update',\r\n                        isEnable: errorList.length === 0,\r\n                        callback: () => {\r\n                            if (node.data == null) {\r\n                                const rootData: ThemaUtil.LevelRoot = {\r\n                                    minIdx: Number(minIdx),\r\n                                    maxIdx: Number(maxIdx),\r\n                                    voics: []\r\n                                };\r\n                                node.data = rootData;\r\n                                parentData.roots.push(rootData);\r\n                                setTreeDisable(false);\r\n                            } else {\r\n                                const data = node.data as ThemaUtil.LevelRoot;\r\n                                data.minIdx = Number(minIdx);\r\n                                data.maxIdx = Number(maxIdx);\r\n                                invalidate();\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true, callback: () => {\r\n                            setFocusNode(parentNode);\r\n                            const selfIndex = TreeUtil.getChildIndex(node);\r\n                            parentNode.children.splice(selfIndex, 1);\r\n                            parentData.roots.splice(selfIndex, 1);\r\n                            setTreeDisable(false);\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"children operatioon\"\r\n            isEnable={node.data != null}\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.LabelTextItem titleLabel=\"Child\" value={'Voicing Element'} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Add',\r\n                        isEnable: true,\r\n                        callback: () => {\r\n                            // const voicData: ThemaUtil.LevelVoic = {\r\n                            //     source: [],\r\n                            //     presets: []\r\n                            // };\r\n                            // data.voics.push(voicData);\r\n                            const newNode = TreeUtil.createNode(null, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            setTreeDisable(true);\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true,\r\n                        callback: () => {\r\n                            const data = node.data as ThemaUtil.LevelRoot;\r\n                            node.children = [];\r\n                            data.voics = [];\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default RootFormTab;\r\n","import { useState, useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChordBacking } from \"../../../../redux/store/score/scoreData\";\r\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\r\nimport ThemaUtil from \"../themaUtil\";\r\nimport TreeUtil from \"../treeUtil\";\r\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\r\n\r\nconst SustFormTab = (props: {\r\n}) => {\r\n    const { node, invalidate, setFocusNode, setTreeDisable } = useContext(ThemaTreeContext);\r\n    const data = node.data as ThemaUtil.LevelSust;\r\n\r\n    const parentNode = node.parent as TreeUtil.ElementNode;\r\n    const parentData = parentNode.data as ThemaUtil.LevelMethod;\r\n\r\n    const [beat, setBeat] = useState('');\r\n    const [head, setHead] = useState('');\r\n    const [tail, setTail] = useState('');\r\n\r\n    const [errorList, setErrorList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (node.data == null) {\r\n            setBeat('');\r\n            setHead('0');\r\n            setTail('0');\r\n        } else {\r\n            const data = node.data as ThemaUtil.LevelSust;\r\n            setBeat(data.beat.toString());\r\n            setHead(data.head.toString());\r\n            setTail(data.tail.toString());\r\n        }\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (beat === '') {\r\n            list.push('beat is empty.');\r\n        }\r\n        if (head === '') {\r\n            list.push('head is empty.');\r\n        }\r\n        if (tail === '') {\r\n            list.push('tail is empty.');\r\n        }\r\n        setErrorList(list);\r\n    }, [beat, head, tail]);\r\n\r\n    return (<>\r\n\r\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"beat\" value={beat.toString()}\r\n            list={['', 1, 2, 3, 4].map(v => ({ value: v.toString(), labelText: v.toString() }))}\r\n            setValue={(value: string) => {\r\n                setBeat(value);\r\n            }} />\r\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"head\" value={head.toString()}\r\n            list={['', -2, -1, 0, 1, 2].map(v => ({ value: v.toString(), labelText: v.toString() }))}\r\n            setValue={(value: string) => {\r\n                setHead(value);\r\n            }} />\r\n        <ThemaEditTabUtil.InputComboboxForm titleLabel=\"tail\" value={tail.toString()}\r\n            list={['', -2, -1, 0, 1, 2].map(v => ({ value: v.toString(), labelText: v.toString() }))}\r\n            setValue={(value: string) => {\r\n                setTail(value);\r\n            }} />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"selft element\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Update',\r\n                        isEnable: errorList.length === 0,\r\n                        callback: () => {\r\n                            if (node.data == null) {\r\n                                const sustData: ThemaUtil.LevelSust = {\r\n                                    beat: Number(beat),\r\n                                    head: Number(head),\r\n                                    tail: Number(tail),\r\n                                    patts: []\r\n                                };\r\n                                node.data = sustData;\r\n                                (parentData.defs as ThemaUtil.LevelSust[]).push(sustData);\r\n                                setTreeDisable(false);\r\n                            } else {\r\n                                const data = node.data as ThemaUtil.LevelSust;\r\n                                data.beat = Number(beat);\r\n                                data.head = Number(head);\r\n                                data.tail = Number(tail);\r\n                                invalidate();\r\n                            }\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true, callback: () => {\r\n                            setFocusNode(parentNode);\r\n                            const selfIndex = TreeUtil.getChildIndex(node);\r\n                            parentNode.children.splice(selfIndex, 1);\r\n                            parentData.defs.splice(selfIndex, 1);\r\n                            setTreeDisable(false);\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"children element\"\r\n            isEnable={node.data != null}\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.LabelTextItem titleLabel=\"Child\" value={'Pattern Element'} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Add',\r\n                        isEnable: true, callback: () => {\r\n                            const newNode = TreeUtil.createNode(null, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            setTreeDisable(true);\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true, callback: () => {\r\n                            node.children = [];\r\n                            data.patts = [];\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default SustFormTab;\r\n\r\n","import { useContext, useState, useEffect, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BackingState from \"../../../../redux/store/score/backing/backingState\";\r\nimport { ChordBacking, VoicingProps } from \"../../../../redux/store/score/scoreData\";\r\nimport BackingUtil from \"../../../../utils/backingUtil\";\r\nimport TheoryUtil from \"../../../../utils/theoryUtil\";\r\nimport { ThemaTreeContext } from \"../backingLibraryTab\";\r\nimport ThemaUtil from \"../themaUtil\";\r\nimport TreeUtil from \"../treeUtil\";\r\nimport ThemaEditTabUtil from \"./themaEditTabUtil\";\r\n\r\nconst VoicFormTab = (props: {\r\n    isPattern: boolean;\r\n}) => {\r\n    const { node, invalidate, dispatcher, setBackingWnd, setFocusNode, setTreeDisable } = useContext(ThemaTreeContext);\r\n    // const data = node.data as ThemaUtil.LevelVoic;\r\n    const methData = !props.isPattern ?\r\n        // method sustain\r\n        node.parent?.parent?.parent?.data as ThemaUtil.LevelMethod :\r\n        // method pattern\r\n        node.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod;\r\n    const sustData = !props.isPattern ? null : node.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelSust;\r\n    const pattData = !props.isPattern ? null : node.parent?.parent?.parent?.data as ThemaUtil.LevelPatt;\r\n    const attrData = node.parent?.parent?.data as ThemaUtil.LevelAttr;\r\n    const rootData = node.parent?.data as ThemaUtil.LevelRoot;\r\n\r\n    // if(props.isPattern) console.log(data.source); \r\n    const [rootIndex, setRootIndex] = useState(0);\r\n    const [symbolKey, setSymbolKey] = useState<TheoryUtil.SymbolKey>('major');\r\n    const [source, setSource] = useState('');\r\n    const [depPattKey, setDepPattKey] = useState('');\r\n    const [preset, setPreset] = useState('');\r\n    const [preUsies, setPreUsies] = useState<ThemaUtil.PresetUse[]>([]);\r\n\r\n    const [errorList, setErrorList] = useState<string[]>([]);\r\n\r\n\r\n    /** 親要素の条件でフィルターしたシンボルリスト */\r\n    const symbolList = useMemo(() => {\r\n        return TheoryUtil.SYMBOL_LIST.filter(\r\n            (symbol) => attrData.symbols.includes(symbol.key)\r\n        );\r\n    }, []);\r\n    useEffect(() => {\r\n        if (node.data == null) {\r\n            setRootIndex(rootData.minIdx);\r\n            setSymbolKey(symbolList[0].key);\r\n            setSource('');\r\n            setDepPattKey('');\r\n            setPreset('');\r\n            setPreUsies([]);\r\n        } else {\r\n            const data = node.data as ThemaUtil.LevelVoic;\r\n            setRootIndex(rootData.minIdx);\r\n            setSymbolKey(symbolList[0].key);\r\n            setSource(JSON.stringify(data.source));\r\n            setDepPattKey('');\r\n            setPreset('');\r\n            setPreUsies(data.preUsies.slice());\r\n        }\r\n    }, [node]);\r\n\r\n    const depPatts = useMemo(() => {\r\n        if (sustData == null || pattData == null) {\r\n            return null;\r\n        } else {\r\n            const curPattKey = pattData.key;\r\n            return sustData.patts.filter(patt => {\r\n                return patt.key !== curPattKey && patt.refer === curPattKey;\r\n            });\r\n        }\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (source === '') {\r\n            list.push('source is null.');\r\n        }\r\n        setErrorList(list);\r\n    }, [source]);\r\n\r\n    const editorUpdate = (editor: BackingState.Editor) => {\r\n        const voicSrc = BackingUtil.getVoicingListFromTable(editor.voicingTable);\r\n        setSource(JSON.stringify(voicSrc));\r\n        setBackingWnd(false);\r\n    };\r\n    const editorClose = () => {\r\n        setBackingWnd(false);\r\n    };\r\n\r\n    const getPresetNameFromKey = (seq: number) => {\r\n        const target = methData.prenams.find(prenam => prenam.seq === seq) as ThemaUtil.Prenam;\r\n        return target.name;\r\n    }\r\n\r\n    return (<>\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"source\"\r\n            isEnable={true}\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.InputComboboxForm titleLabel=\"root\" value={rootIndex.toString()} setValue={(value: string) => {\r\n                    setRootIndex(Number.parseInt(value));\r\n                }} list={TheoryUtil.KEY12_SHARP_LIST.filter((key12, i) => {\r\n                    return i >= rootData.minIdx && i <= rootData.maxIdx;\r\n                }).map((key12, idx) => (\r\n                    // フィルターしたリストから連番を取得するため、ルートの最小値を加算\r\n                    { value: (idx + rootData.minIdx).toString(), labelText: key12 }\r\n                ))} />\r\n                <ThemaEditTabUtil.InputComboboxForm titleLabel=\"symbol\" value={symbolKey} setValue={(value: string) => {\r\n                    setSymbolKey(value as TheoryUtil.SymbolKey);\r\n                }} list={symbolList.map((symbol) => (\r\n                    { value: symbol.key, labelText: `${symbol.key}: [${symbol.name}]` }\r\n                ))} />\r\n                <ThemaEditTabUtil.LabelTextItem\r\n                    titleLabel=\"channel\"\r\n                    value={pattData == null ? '-' : pattData.source.channelSize.toString()}\r\n                />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Edit',\r\n                        isEnable: true,\r\n                        callback: () => {\r\n                            const voicingList = JSON.parse(source !== '' ? source : '[]') as VoicingProps[];\r\n                            if (pattData == null || sustData == null) {\r\n                                // サスティンバッキング\r\n                                const chordBacking: ChordBacking = {\r\n                                    pattern: null,\r\n                                    voicingList\r\n                                }\r\n                                dispatcher.thema.openBackingEditor(\r\n                                    4, 0, 0, symbolKey, rootIndex, chordBacking,\r\n                                    editorUpdate,\r\n                                    editorClose\r\n                                );\r\n                            } else {\r\n                                // パターンバッキング\r\n                                const chordBacking: ChordBacking = {\r\n                                    pattern: pattData.source,\r\n                                    voicingList\r\n                                }\r\n                                dispatcher.thema.openBackingEditor(\r\n                                    sustData.beat, sustData.head, sustData.tail, symbolKey, rootIndex, chordBacking,\r\n                                    editorUpdate,\r\n                                    editorClose\r\n                                );\r\n                            }\r\n                            setBackingWnd(true);\r\n                        }\r\n                    },\r\n                ]} />\r\n                <ThemaEditTabUtil.TextAreaView value={source} />\r\n                {/* <ThemaEditTabUtil.LabelTextItem\r\n                    titleLabel=\"List\"\r\n                    value={(() => {\r\n                        return source.map(v => {\r\n                            return `${v.octave}-${v.struct}`;\r\n                        }).join(', ');\r\n                    })()}\r\n                /> */}\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"preset use\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.InputComboboxForm\r\n                    titleLabel=\"Depend\"\r\n                    // パターンメソッドの時のみ活性化\r\n                    isEnable={pattData != null}\r\n                    value={depPattKey}\r\n                    setValue={(value: string) => {\r\n                        setDepPattKey(value);\r\n                    }}\r\n                    list={[{ value: '', labelText: '' }].concat((depPatts ?? []).map(patt => ({\r\n                        labelText: `${patt.key}: ${patt.pattName}`,\r\n                        value: patt.key.toString()\r\n                    })))}\r\n                />\r\n                <ThemaEditTabUtil.InputComboboxForm\r\n                    titleLabel=\"Preset\" value={preset}\r\n                    setValue={(value: string) => {\r\n                        setPreset(value);\r\n                    }}\r\n                    list={[{ value: '', labelText: '' }].concat(methData.prenams.filter(prenam => {\r\n                        // return !preUsies.map(preUse => `${preUse.depPatt},${preUse.presKey}`).includes(`${depPattKey === '' ? -1 : depPattKey},${prenam.seq}`);\r\n                        return !preUsies.map(preUse => preUse.presKey).includes(prenam.seq);\r\n                    }).map(preset => ({\r\n                        labelText: `${preset.seq}: ${preset.name}`,\r\n                        value: preset.seq.toString()\r\n                    })))}\r\n                />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Add',\r\n                        isEnable: preset !== '',\r\n                        callback: () => {\r\n                            preUsies.push({\r\n                                depPatt: depPattKey === '' ? -1 : Number(depPattKey),\r\n                                presKey: Number(preset)\r\n                            });\r\n                            setPreUsies(preUsies.slice());\r\n                            setDepPattKey('');\r\n                            setPreset('');\r\n                        }\r\n                    },\r\n                ]} />\r\n                <ThemaEditTabUtil.ListManager\r\n                    height={100}\r\n                    records={preUsies.map((preUse, i) => {\r\n                        return {\r\n                            label: `${preUse.depPatt === -1 ? '' : preUse.depPatt + '@'}[${getPresetNameFromKey(preUse.presKey)}]`,\r\n                            buttons: [\r\n                                {\r\n                                    label: '↓', width: 30,\r\n                                    isEnable: i < preUsies.length - 1,\r\n                                    callback: () => {\r\n                                        const cache = preUsies[i];\r\n                                        preUsies[i] = preUsies[i + 1];\r\n                                        preUsies[i + 1] = cache;\r\n                                        setPreUsies(preUsies.slice());\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: '↑', width: 30,\r\n                                    isEnable: i > 0,\r\n                                    callback: () => {\r\n                                        const cache = preUsies[i];\r\n                                        preUsies[i] = preUsies[i - 1];\r\n                                        preUsies[i - 1] = cache;\r\n                                        setPreUsies(preUsies.slice());\r\n                                    },\r\n                                },\r\n                                {\r\n                                    label: 'Delete', width: 60, callback: () => {\r\n                                        preUsies.splice(i, 1);\r\n                                        setPreUsies(preUsies.slice());\r\n                                    },\r\n                                },\r\n                            ]\r\n                        };\r\n                    })}\r\n                />\r\n            </>}\r\n        />\r\n        <ThemaEditTabUtil.BorderPanel\r\n            title=\"selft element\"\r\n            innerJsx={<>\r\n                <ThemaEditTabUtil.TextAreaView value={errorList.join('\\n')} height={50} />\r\n                <ThemaEditTabUtil.ButtonDiv buttons={[\r\n                    {\r\n                        name: 'Update',\r\n                        isEnable: errorList.length === 0,\r\n                        callback: () => {\r\n                            if (node.data == null) {\r\n                                const voicData: ThemaUtil.LevelVoic = {\r\n                                    source: JSON.parse(source),\r\n                                    preUsies: preUsies.slice()\r\n                                };\r\n                                node.data = voicData;\r\n                                rootData.voics.push(voicData);\r\n                                setTreeDisable(false);\r\n                            } else {\r\n                                const data = node.data as ThemaUtil.LevelVoic;\r\n                                data.source = JSON.parse(source);\r\n                                data.preUsies = preUsies.slice();\r\n                                invalidate();\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        name: 'Del',\r\n                        isEnable: true, callback: () => {\r\n                            const parentNode = node.parent as TreeUtil.ElementNode;\r\n                            const parentData = parentNode.data as ThemaUtil.LevelRoot;\r\n                            setFocusNode(parentNode);\r\n                            const selfIndex = TreeUtil.getChildIndex(node);\r\n                            parentNode.children.splice(selfIndex, 1);\r\n                            parentData.voics.splice(selfIndex, 1);\r\n                            setTreeDisable(false);\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                ]} />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default VoicFormTab;","import { useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport ThemaUtil from \"./themaUtil\";\r\nimport TreeUtil from \"./treeUtil\";\r\n\r\nconst HierarchyNavi = (props: {\r\n    cur: TreeUtil.ElementNode | null;\r\n}) => {\r\n\r\n    const jsx = useMemo(() => {\r\n        if (props.cur == null) return <></>;\r\n        const list: JSX.Element[] = [];\r\n\r\n        /**\r\n         * 基本情報のJSXを追加する\r\n         * @param data データ\r\n         */\r\n        const addBaseInfo = (data: ThemaUtil.LevelBase) => {\r\n            list.push(<_Base>[{data.themaName}]</_Base>);\r\n        }\r\n        /**\r\n         * メソッド情報のJSXを追加する\r\n         * @param data データ\r\n         */\r\n        const addMethInfo = (data: ThemaUtil.LevelMethod) => {\r\n            list.push(<>{` > `}</>);\r\n            list.push(<_Meth>[{data.method}]</_Meth>);\r\n        }\r\n        /**\r\n         * 拍情報のJSXを追加する\r\n         * @param data データ\r\n         */\r\n        const addSustInfo = (data: ThemaUtil.LevelSust) => {\r\n            list.push(<>{` > `}</>);\r\n            list.push(<_Sust>[{data.beat}* ({data.head},{data.tail})]</_Sust>);\r\n        }\r\n        /**\r\n         * パターン情報のJSXを追加する\r\n         * @param data データ\r\n         */\r\n        const addPattInfo = (data: ThemaUtil.LevelPatt) => {\r\n            list.push(<>{` > `}</>);\r\n            list.push(<_Patt>{data.key}: [{data.pattName} channel: {data.source.channelSize}]</_Patt>);\r\n        }\r\n        /**\r\n         * 属性情報のJSXを追加する\r\n         * @param data データ\r\n         */\r\n        const addAttrInfo = (data: ThemaUtil.LevelAttr) => {\r\n            const symbolNameList = data.symbols.map(symbol => (\r\n                `[${TheoryUtil.getSymbolFromKey(symbol)?.name}]`\r\n            ));\r\n            list.push(<>{` > `}</>);\r\n            list.push(<_Attr>@{data.attr}: {symbolNameList.join(', ')}</_Attr>);\r\n        }\r\n        /**\r\n         * ルート情報のJSXを追加する\r\n         * @param data データ\r\n         */\r\n        const addRootInfo = (data: ThemaUtil.LevelRoot) => {\r\n            const nameList = TheoryUtil.KEY12_SHARP_LIST;\r\n            list.push(<>{` > `}</>);\r\n            list.push(<_Root>[{nameList[data.minIdx]}～{nameList[data.maxIdx]}]</_Root>);\r\n        }\r\n        /**\r\n         * ボイシング情報のJSXを追加する\r\n         * @param data データ\r\n         */\r\n        const addVoicInfo = (data: ThemaUtil.LevelVoic) => {\r\n            list.push(<>{` > `}</>);\r\n            list.push(<_Voic>[{data.source.map(v => {\r\n                return `${v.octave}-${v.struct}`;\r\n            }).join(', ')}]</_Voic>);\r\n        }\r\n\r\n        switch (props.cur.depth) {\r\n            case 0: {\r\n                addBaseInfo(props.cur.data as ThemaUtil.LevelBase);\r\n            } break;\r\n            case 1: {\r\n                addBaseInfo(props.cur.parent?.data as ThemaUtil.LevelBase);\r\n                addMethInfo(props.cur.data as ThemaUtil.LevelMethod);\r\n            } break;\r\n            case 2: {\r\n                addBaseInfo(props.cur.parent?.parent?.data as ThemaUtil.LevelBase);\r\n\r\n                const methData = props.cur.parent?.data as ThemaUtil.LevelMethod;\r\n                addMethInfo(methData);\r\n                switch (methData.method) {\r\n                    case 'sustain': {\r\n                        addAttrInfo(props.cur.data as ThemaUtil.LevelAttr);\r\n                    } break;\r\n                    case 'pattern': {\r\n                        addSustInfo(props.cur.data as ThemaUtil.LevelSust);\r\n                    } break;\r\n                }\r\n            } break;\r\n            case 3: {\r\n                addBaseInfo(props.cur.parent?.parent?.parent?.data as ThemaUtil.LevelBase);\r\n\r\n                const methData = props.cur.parent?.parent?.data as ThemaUtil.LevelMethod;\r\n                addMethInfo(methData);\r\n                switch (methData.method) {\r\n                    case 'sustain': {\r\n                        addAttrInfo(props.cur.parent?.data as ThemaUtil.LevelAttr);\r\n                        addRootInfo(props.cur.data as ThemaUtil.LevelRoot);\r\n                    } break;\r\n                    case 'pattern': {\r\n                        addSustInfo(props.cur.parent?.data as ThemaUtil.LevelSust);\r\n                        addPattInfo(props.cur.data as ThemaUtil.LevelPatt);\r\n                    } break;\r\n                }\r\n            } break;\r\n            case 4: {\r\n                addBaseInfo(props.cur.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelBase);\r\n\r\n                const methData = props.cur.parent?.parent?.parent?.data as ThemaUtil.LevelMethod;\r\n                addMethInfo(methData);\r\n                switch (methData.method) {\r\n                    case 'sustain': {\r\n                        addAttrInfo(props.cur.parent?.parent?.data as ThemaUtil.LevelAttr);\r\n                        addRootInfo(props.cur.parent?.data as ThemaUtil.LevelRoot);\r\n                        addVoicInfo(props.cur.data as ThemaUtil.LevelVoic);\r\n                    } break;\r\n                    case 'pattern': {\r\n                        addSustInfo(props.cur.parent?.parent?.data as ThemaUtil.LevelSust);\r\n                        addPattInfo(props.cur.parent?.data as ThemaUtil.LevelPatt);\r\n                        addAttrInfo(props.cur.data as ThemaUtil.LevelAttr);\r\n                    } break;\r\n                }\r\n            } break;\r\n            case 5: {\r\n                addBaseInfo(props.cur.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelBase);\r\n\r\n                const methData = props.cur.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod;\r\n                addMethInfo(methData);\r\n                switch (methData.method) {\r\n                    case 'sustain': {\r\n\r\n                    } break;\r\n                    case 'pattern': {\r\n                        addSustInfo(props.cur.parent?.parent?.parent?.data as ThemaUtil.LevelSust);\r\n                        addPattInfo(props.cur.parent?.parent?.data as ThemaUtil.LevelPatt);\r\n                        addAttrInfo(props.cur.parent?.data as ThemaUtil.LevelAttr);\r\n                        addRootInfo(props.cur.data as ThemaUtil.LevelRoot);\r\n                    } break;\r\n                }\r\n            } break;\r\n            case 6: {\r\n                addBaseInfo(props.cur.parent?.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelBase);\r\n\r\n                const methData = props.cur.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod;\r\n                addMethInfo(methData);\r\n                switch (methData.method) {\r\n                    case 'sustain': {\r\n\r\n                    } break;\r\n                    case 'pattern': {\r\n                        addSustInfo(props.cur.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelSust);\r\n                        addPattInfo(props.cur.parent?.parent?.parent?.data as ThemaUtil.LevelPatt);\r\n                        addAttrInfo(props.cur.parent?.parent?.data as ThemaUtil.LevelAttr);\r\n                        addRootInfo(props.cur.parent?.data as ThemaUtil.LevelRoot);\r\n                        addVoicInfo(props.cur.data as ThemaUtil.LevelVoic);\r\n                    } break;\r\n                }\r\n            } break;\r\n        }\r\n        return list;\r\n    }, [props.cur]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_TextField>{jsx}</_TextField>\r\n        </_Wrap>\r\n    );\r\n};\r\n\r\nexport default HierarchyNavi;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #eeeeee3b;\r\n    border: 1px solid #402cad;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _TextField = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    margin: 0 0 0 4px;\r\n    color: #0000005a;\r\n    font-weight: 400;\r\n`;\r\n\r\nconst _Base = styled.span`\r\n    color: #0c6900;\r\n`;\r\n\r\nconst _Meth = styled.span`\r\n    color: #23237e;\r\n`;\r\n\r\nconst _Sust = styled.span`\r\n    color: #7e5723;\r\n`;\r\nconst _Patt = styled.span`\r\n    color: #7e7223;\r\n`;\r\nconst _Attr = styled.span`\r\n    color: #7e2323;\r\n`;\r\nconst _Root = styled.span`\r\n    color: #79237e;\r\n`;\r\nconst _Voic = styled.span`\r\n    color: #237c7e;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport BackingState from \"../../../redux/store/score/backing/backingState\";\r\nimport { BackingPatternProps, VoicingProps } from \"../../../redux/store/score/scoreData\";\r\nimport TheoryUtil from \"../../../utils/theoryUtil\";\r\nimport TreeUtil from \"./treeUtil\";\r\n\r\nnamespace ThemaUtil {\r\n\r\n    export type Method = 'sustain' | 'pattern';\r\n\r\n    export type LevelAttr = {\r\n        attr: TheoryUtil.SymbolAttribute;\r\n        symbols: TheoryUtil.SymbolKey[];\r\n        roots: LevelRoot[];\r\n    }\r\n    export type LevelRoot = {\r\n        minIdx: number;\r\n        maxIdx: number;\r\n        voics: LevelVoic[];\r\n    }\r\n    export type PresetUse = {\r\n        presKey: number;\r\n        depPatt: number;\r\n    }\r\n    export type LevelVoic = {\r\n        source: VoicingProps[];\r\n        preUsies: PresetUse[];\r\n    }\r\n\r\n    export type LevelPatt = {\r\n        key: number;\r\n        pattName: string;\r\n        source: BackingPatternProps;\r\n        refer: number;\r\n        attrs: LevelAttr[];\r\n    }\r\n    export type LevelSust = {\r\n        beat: number;\r\n        head: number;\r\n        tail: number;\r\n        patts: LevelPatt[];\r\n    }\r\n\r\n    export type Prenam = {\r\n        seq: number;\r\n        name: string;\r\n    }\r\n    export type LevelMethod = {\r\n        method: Method;\r\n        prenams: Prenam[];\r\n        defs: LevelAttr[] | LevelSust[];\r\n    }\r\n\r\n    export type LevelBase = {\r\n        themaName: string;\r\n        meths: LevelMethod[];\r\n    }\r\n\r\n    export const getLabelJsx = (node: TreeUtil.ElementNode, isActive: boolean) => {\r\n        let innderJsx = <></>;\r\n\r\n        const setBaseJsx = () => {\r\n            const data = node.data as ThemaUtil.LevelBase;\r\n            innderJsx = (<>\r\n                <_TypeLabel type='base'>Base</_TypeLabel>\r\n                <_Label>{data.themaName}</_Label>\r\n            </>);\r\n        }\r\n        const setMethJsx = () => {\r\n            const data = node.data as ThemaUtil.LevelMethod;\r\n            innderJsx = (<>\r\n                <_TypeLabel type='method'>Method</_TypeLabel>\r\n                <_Label>{data.method}</_Label>\r\n            </>);\r\n        }\r\n        const setAttrJsx = () => {\r\n            const getMainLabel = () => {\r\n                if (node.data == null) {\r\n                    return <_Label><_Create>Create...</_Create></_Label>\r\n                } else {\r\n                    const data = node.data as ThemaUtil.LevelAttr;\r\n                    const list = data.symbols.map(symbol => (\r\n                        `[${TheoryUtil.getSymbolFromKey(symbol)?.name}]`\r\n                    ));\r\n                    return <_Label>@{data.attr}: <_C_Symbol>{list.join(', ')}</_C_Symbol></_Label>;\r\n                }\r\n            };\r\n            innderJsx = (<>\r\n                <_TypeLabel type='attr'>Attribute</_TypeLabel>\r\n                {getMainLabel()}\r\n            </>);\r\n        }\r\n        const setSustJsx = () => {\r\n            const getMainLabel = () => {\r\n                if (node.data == null) {\r\n                    return <_Label><_Create>Create...</_Create></_Label>\r\n                } else {\r\n                    const data = node.data as ThemaUtil.LevelSust;\r\n                    return <_Label>[{data.beat}* ({data.head},{data.tail})]</_Label>\r\n                }\r\n            };\r\n            innderJsx = (<>\r\n                <_TypeLabel type='sustain'>Sustain</_TypeLabel>\r\n                {getMainLabel()}\r\n            </>);\r\n        }\r\n        const setRootJsx = () => {\r\n            const getMainLabel = () => {\r\n                if (node.data == null) {\r\n                    return <_Label><_Create>Create...</_Create></_Label>\r\n                } else {\r\n                    const data = node.data as ThemaUtil.LevelRoot;\r\n                    const nameList = TheoryUtil.KEY12_SHARP_LIST;\r\n                    return <_Label>[{nameList[data.minIdx]}～{nameList[data.maxIdx]}]</_Label>;\r\n                }\r\n            };\r\n            innderJsx = (<>\r\n                <_TypeLabel type='root'>Root</_TypeLabel>\r\n                {getMainLabel()}\r\n            </>);\r\n        }\r\n        const setPattJsx = () => {\r\n            const getMainLabel = () => {\r\n                if (node.data == null) {\r\n                    return <_Label><_Create>Create...</_Create></_Label>\r\n                } else {\r\n                    const data = node.data as ThemaUtil.LevelPatt;\r\n                    const refers = (node.parent?.data as LevelSust).patts.map(patt => patt.refer);\r\n                    // 参照されていた場合masterを表示\r\n                    const master = !refers.includes(data.key) ? '' : ' master';\r\n                    const depend = data.refer === -1 ? '' : ` depend: ${data.refer}`;\r\n                    return (<_Label>\r\n                        <_P_Key>{data.key}</_P_Key>: [{data.pattName} <_P_Channel> channel: {data.source.channelSize}</_P_Channel>]\r\n                        <_P_Master>{master}</_P_Master>\r\n                        <_P_Depend>{depend}</_P_Depend>\r\n                    </_Label>);\r\n                }\r\n            };\r\n            innderJsx = (<>\r\n                <_TypeLabel type='pattern'>Pattern</_TypeLabel>\r\n                {getMainLabel()}\r\n            </>);\r\n        }\r\n        const setVoicJsx = () => {\r\n            const getMainLabel = () => {\r\n                if (node.data == null) {\r\n                    return <_Label><_Create>Create...</_Create></_Label>\r\n                } else {\r\n                    const data = node.data as ThemaUtil.LevelVoic;\r\n                    return <_Label>[{data.source.map(v => {\r\n                        return `${v.octave}-${v.struct}`;\r\n                    }).join(', ')}]</_Label>\r\n                }\r\n            };\r\n            innderJsx = (<>\r\n                <_TypeLabel type='voicing'>Voicing</_TypeLabel>\r\n                {getMainLabel()}\r\n            </>);\r\n        }\r\n        switch (node.depth) {\r\n            case 0: setBaseJsx(); break;\r\n            case 1: setMethJsx(); break;\r\n            case 2: {\r\n                const method = (node.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'sustain': setAttrJsx(); break;\r\n                    case 'pattern': setSustJsx(); break;\r\n                }\r\n            } break;\r\n            case 3: {\r\n                const method = (node.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'sustain': setRootJsx(); break;\r\n                    case 'pattern': setPattJsx(); break;\r\n                }\r\n            } break;\r\n            case 4: {\r\n                const method = (node.parent?.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'sustain': setVoicJsx(); break;\r\n                    case 'pattern': setAttrJsx(); break;\r\n                }\r\n            } break;\r\n            case 5: {\r\n                const method = (node.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'pattern': setRootJsx(); break;\r\n                }\r\n            } break;\r\n            case 6: {\r\n                const method = (node.parent?.parent?.parent?.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                switch (method) {\r\n                    case 'pattern': setVoicJsx(); break;\r\n                }\r\n            } break;\r\n        }\r\n        return <_NodeFrame isActive={isActive}>{innderJsx}</_NodeFrame>\r\n    }\r\n\r\n    export const getInitialThema = (): LevelBase => {\r\n        return {\r\n            themaName: 'test',\r\n            meths: [\r\n                {\r\n                    method: 'sustain',\r\n                    prenams: [],\r\n                    defs: [\r\n                    ]\r\n                },\r\n                {\r\n                    method: 'pattern',\r\n                    prenams: [],\r\n                    defs: [\r\n                    ]\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\r\n\r\nexport default ThemaUtil;\r\n\r\n\r\nconst _CSS_FONT = css`\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    height: calc(100% - 8px);\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst _TypeLabel = styled.div<{\r\n    type: 'base' | 'method' | 'pattern' | 'sustain' | 'attr' | 'root' | 'voicing'\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    ${_CSS_FONT}\r\n    color: #660000;\r\n    background-color: ${props => {\r\n        switch (props.type) {\r\n            case 'base': return '#6fa480';\r\n            case 'method': return '#7779a2';\r\n            case 'sustain': return '#c7a67e';\r\n            case 'pattern': return '#9b77a2';\r\n            case 'attr': return '#b67575';\r\n            case 'root': return '#a2a177';\r\n            case 'voicing': return '#779ea2';\r\n        }\r\n    }};\r\n    padding: 0 15px;\r\n    border-radius: 5px;\r\n`;\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    ${_CSS_FONT}\r\n    color: #6d1717;\r\n    background-color: #ffffff49;\r\n    padding: 0 10px;\r\n    margin-left: 5px;\r\n`;\r\nconst _C_Symbol = styled.span`\r\n    color: #959595;\r\n`;\r\nconst _P_Master = styled.span`\r\n    color: #d40101;\r\n`;\r\nconst _P_Depend = styled.span`\r\n    color: #0300cc;\r\n`;\r\nconst _Create = styled.span`\r\n    color: #fff9c2;\r\n`;\r\nconst _P_Channel = styled.span`\r\n    color: #d3701381;\r\n`;\r\nconst _P_Key = styled.span`\r\n    color: #868686;\r\n`;\r\n\r\nconst _NodeFrame = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    padding: 0 5px;\r\n    height: 100%;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #fffb0077;\r\n    `}\r\n`;","import { useContext, useState, useEffect, useMemo, createContext, KeyboardEvent } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport BackingEditorFrame from \"../../backing/backingEditorFrame\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport BackingEditorInput from \"../../score/edit/harmonize/input/backingEditorInput\";\r\nimport AttrFormTab from \"./form/attrFormTab\";\r\nimport BaseFormTab from \"./form/baseFormTab\";\r\nimport MethFormTab from \"./form/methFormTab\";\r\nimport PattFormTab from \"./form/pattFormTab\";\r\nimport RootFormTab from \"./form/rootFormTab\";\r\nimport SustFormTab from \"./form/sustFormTab\";\r\nimport ThemaEditTabUtil from \"./form/themaEditTabUtil\";\r\nimport VoicFormTab from \"./form/voicFormTab\";\r\nimport HierarchyNavi from \"./hierarchyNavi\";\r\nimport ThemaUtil from \"./themaUtil\";\r\nimport TreeUtil from \"./treeUtil\";\r\n\r\n\r\nexport const ThemaTreeContext = createContext({} as ThemaEditTabUtil.ComponentArgs);\r\n\r\nconst BackingLibraryTab = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [themaData, setThamaData] = useState(ThemaUtil.getInitialThema());\r\n    // const [isDispEditor, setDispEditor] = useState(true);\r\n\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    const [isBackingWnd, setBackingWnd] = useState(false);\r\n    const [treeDisable, setTreeDisable] = useState(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    // テーマファイルをデータノードに変換する\r\n    const rootDataNode = useMemo(() => {\r\n        const rootNode: TreeUtil.DataNode = {\r\n            data: themaData,\r\n            children: themaData.meths.map(type => {\r\n                const getDefsChildren = () => {\r\n                    switch (type.method) {\r\n                        case 'sustain': {\r\n                            return (type.defs as ThemaUtil.LevelAttr[]).map(attr => ({\r\n                                data: attr,\r\n                                children: attr.roots.map(root => ({\r\n                                    data: root,\r\n                                    children: root.voics.map(voic => ({\r\n                                        data: voic,\r\n                                        children: []\r\n                                    }))\r\n                                }))\r\n                            }));\r\n                        }\r\n                        case 'pattern': {\r\n                            return (type.defs as ThemaUtil.LevelSust[]).map(sust => ({\r\n                                data: sust,\r\n                                children: sust.patts.map(patt => ({\r\n                                    data: patt,\r\n                                    children: patt.attrs.map(attr => ({\r\n                                        data: attr,\r\n                                        children: attr.roots.map(roots => ({\r\n                                            data: roots,\r\n                                            children: roots.voics.map(voic => ({\r\n                                                data: voic,\r\n                                                children: []\r\n                                            }))\r\n                                        }))\r\n                                    }))\r\n                                }))\r\n                            }));\r\n                        }\r\n                    }\r\n                }\r\n                return {\r\n                    data: type,\r\n                    children: getDefsChildren()\r\n                }\r\n            })\r\n        }\r\n        return rootNode;\r\n    }, [themaData]);\r\n\r\n    const activeNo = useMemo<number>(() => {\r\n        if (focusNode != null) {\r\n            switch (focusNode.depth) {\r\n                case 0: {\r\n                    return 0;\r\n                }\r\n                case 1: {\r\n                    return 1;\r\n                }\r\n                case 2: {\r\n                    const method = (focusNode.parent?.data as ThemaUtil.LevelMethod).method;\r\n                    return method === 'sustain' ? 4 : 2;\r\n                }\r\n                case 3: {\r\n                    const method = (focusNode.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                    return method === 'sustain' ? 5 : 3;\r\n                }\r\n                case 4: {\r\n                    const method = (focusNode.parent?.parent?.parent?.data as ThemaUtil.LevelMethod).method;\r\n                    return method === 'sustain' ? 6 : 4;\r\n                }\r\n                case 5: {\r\n                    return 5;\r\n                }\r\n                case 6: {\r\n                    return 6;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }, [focusNode]);\r\n\r\n    const tabInner = (tabIndex: number, contJsx: JSX.Element) => {\r\n        return (\r\n            activeNo === tabIndex ? <_TabContWrap>{contJsx}</_TabContWrap> : <></>\r\n        )\r\n    }\r\n    // const tabProps: {\r\n\r\n    // }[] = [];\r\n    // const getTabContList = () => {\r\n    //     tabProps.map((props) => {\r\n\r\n    //         return {\r\n    //             name: 'base',\r\n    //             disable: true,\r\n    //             cont: tabInner(0, <BaseFormTab />\r\n    //             )\r\n    //         };\r\n    //     });\r\n    // };\r\n    // const tabContList = getTabContList();\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e: KeyboardEvent) => {\r\n                BackingEditorInput.main(e, store, dispatcher);\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <HierarchyNavi cur={focusNode}/>\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return ThemaUtil.getLabelJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={treeDisable}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <ThemaTreeContext.Provider value={{\r\n                    node: focusNode as TreeUtil.ElementNode,\r\n                    setFocusNode: setFocusNode,\r\n                    invalidate: () => { setInvalidate({}) },\r\n                    setBackingWnd,\r\n                    dispatcher,\r\n                    treeDisable,\r\n                    setThamaData,\r\n                    setTreeDisable\r\n                }}>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            {\r\n                                name: 'base', disable: true, cont: tabInner(0, <BaseFormTab\r\n                                    themaList={store.systemState.themaList}\r\n                                    addThema={(thema: ThemaUtil.LevelBase) => {\r\n                                        const themaList = store.systemState.themaList;\r\n                                        themaList.push(JSON.parse(JSON.stringify(thema)));\r\n                                        dispatcher.system.setState({ ...store.systemState, themaList });\r\n                                    }}\r\n                                />)\r\n                            },\r\n                            { name: 'Method', disable: true, cont: tabInner(1, <MethFormTab />) },\r\n                            { name: 'Sustain', disable: true, cont: tabInner(2, <SustFormTab />) },\r\n                            { name: 'Pattern', disable: true, cont: tabInner(3, <PattFormTab />) },\r\n                            { name: 'Attribute', disable: true, cont: tabInner(4, <AttrFormTab isPattern={focusNode?.depth === 4} />) },\r\n                            { name: 'Root', disable: true, cont: tabInner(5, <RootFormTab />) },\r\n                            { name: 'voicing', disable: true, cont: tabInner(6, <VoicFormTab isPattern={focusNode?.depth === 6} />) },\r\n                        ]}\r\n                        tabRecordNum={2}\r\n                        activeNo={activeNo}\r\n                        selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n                    />\r\n                </ThemaTreeContext.Provider>\r\n            </_PropsDiv>\r\n            <_Blind isVisible={isBackingWnd}>\r\n                <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n            </_Blind>\r\n        </_Wrap >\r\n    );\r\n}\r\nexport default BackingLibraryTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c3d8dd;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #532fc0; */\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n    padding: 6px 6px 6px 0;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;","import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport BackingLibraryTab from \"./backing/backingLibraryTab\";\r\n\r\n\r\nconst CustomChannel = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            {/* <DraggableDialog /> */}\r\n            {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Backing-Library', disable: true, cont: <BackingLibraryTab /> },\r\n                    { name: 'Design', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={0}\r\n                // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CustomChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ExecutableButton } from \"../../base/components/button/executableButton\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { CgOptions, CgPiano } from 'react-icons/cg';\r\nimport { GiMusicalScore } from 'react-icons/gi';\r\nimport { ImPlay } from 'react-icons/im';\r\nimport { VscSettingsGear } from 'react-icons/vsc';\r\nimport ScoreChannel from \"../score/scoreChannel\";\r\nimport SettingChannel from \"../setting/settingChannel\";\r\nimport PerformChannel from \"../perform/performChannel\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\nimport PreviewChannel from \"../preview/previewChannel\";\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { ScoreData } from \"../../redux/store/score/scoreData\";\r\nimport CacheUtil from \"../../utils/cacheUtil\";\r\nimport CustomChannel from \"../custom/customChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    const isDirect = store.systemState.directScore != null;\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <_Wrap>\r\n                    {/* <DraggableDialog /> */}\r\n                    {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n                    <ChannelPane\r\n                        tabElements={[\r\n                            { name: 'Home', icon: <AiFillHome />, isEnable: !isDirect, cont: <HomeChannel /> },\r\n                            { name: 'Perform', icon: <CgPiano />, isEnable: false, cont: <PerformChannel /> },\r\n                            { name: 'Score', icon: <GiMusicalScore />, isEnable: !isDirect, cont: <ScoreChannel /> },\r\n                            { name: 'Custom', icon: <VscSettingsGear />, isEnable: !isDirect, cont: <CustomChannel /> },\r\n                            { name: 'Setting', icon: <CgOptions />, isEnable: false, cont: <SettingChannel /> },\r\n                            { name: 'Preview', icon: <ImPlay />, isEnable: isDirect, cont: !isDirect ? <></> : <PreviewChannel /> }\r\n                        ]}\r\n                        activeNo={store.systemState.mainChannelIndex}\r\n                        selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n                    />\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/test\" exact >\r\n                <_Wrap>\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/preview\" exact >\r\n                <DirectView hashKey={str} />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nconst DirectView = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n    const conteseq = DataUtil.getDecryptionedScoreSeq(props.hashKey);\r\n\r\n    const setScoreData = (owner: string, dispnam: string, data: ScoreData) => {\r\n        store.scoreState.focusIndex = 2;\r\n        store.scoreState.distIndex = store.scoreState.focusIndex;\r\n        dispatcher.score.setScoreState({ ...store.scoreState });\r\n        // dispatcher.score.setScoreTabIndex(1);\r\n        dispatcher.score.setScoreData(data);\r\n        // キャッシュの更新\r\n        store.scoreData = data;\r\n        CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n        store.systemState.mainChannelIndex = 5;\r\n        store.systemState.scoreTabIndex = 0;\r\n        store.systemState.directScore = {\r\n            owner, name: dispnam\r\n        };\r\n        dispatcher.system.setState(store.systemState);\r\n    };\r\n\r\n    useEffect(() => {\r\n        DataUtil.findScore(conteseq).then(resList => {\r\n            if (resList.length > 0) {\r\n                const source = resList[0]['data'];\r\n                const owner = resList[0]['owner'];\r\n                const dispnam = resList[0]['dispnam'];\r\n                const text = DataUtil.unZip(source);\r\n                setScoreData(owner, dispnam, JSON.parse(text));\r\n            }\r\n        });\r\n    }, []);\r\n    if (store.systemState.directScore == null) {\r\n        return <></>;\r\n    } else {\r\n        return <Redirect to=\"/\" />;\r\n        // return <MainFrame />;\r\n    }\r\n}\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport LoginFrame from \"../login/loginFrame\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport PatternOptions from \"../backing/pattern/patternOptions\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { loginWithRedirect, isAuthenticated, logout, user } = useAuth0();\r\n    const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    useEffect(() => {\r\n        console.log(window.location.origin);\r\n        if (user != undefined && user.email != undefined) {\r\n            DataUtil.findUserInfo(user.email).then(userList => {\r\n                console.log(userList);\r\n                if (userList.length > 0) {\r\n                    const userProps = userList[0];\r\n                    store.userEnv.login = {\r\n                        seq: userProps.seq,\r\n                        id: userProps.id\r\n                    }\r\n                    dispatcher.system.setUserEnv(store.userEnv);\r\n                    setUserId('@' + userProps.id);\r\n                } else {\r\n                    setUserId('unregistered');\r\n                }\r\n            });\r\n        }\r\n        console.log(user);\r\n    }, [user]);\r\n\r\n    const authButtonJsx = !isAuthenticated ? (\r\n        <_LoginButton onClick={() => {\r\n            // store.systemState.dialog = <LoginFrame />;\r\n            // dispatcher.system.setState(store.systemState);\r\n            console.log(window.location.origin);\r\n            loginWithRedirect();\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName isEntry={store.userEnv.login != undefined}>{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            logout();\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>L</_ACCENT><_NORMAL>iCreSia</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #ececec, #e2e2e2, #eeeeee);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    text-shadow: 1px 2px 3px #8080806a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #ffffff;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #da4242;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #003a86;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #96000057;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useCallback, useEffect, useReducer } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { ExecutableButton } from '../../base/components/button/executableButton';\r\nimport { DraggableDialog } from '../../base/components/dialog/draggableDialog';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport { reducer } from '../../redux/reducer';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, dispatch] = useReducer(reducer, initialStore);\r\n    const dispatcher = new Dispatcher(store, dispatch);\r\n    const callback = useCallback(dispatcher.system.switchSplashToMain, []);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, dispatcher }}>\r\n            <>\r\n                {!store.systemState.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={callback} /\r\n                    >}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #d8d8d8;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\n\nconst REACT_APP_AUTH0_DOMAIN = 'dev-a0p0m4lr.us.auth0.com';\nconst REACT_APP_AUTH0_CLIENT_ID = 'ABaWpYVBZwTr3tkyxhq1kWh2YwT4epew';\n\nReactDOM.render(\n  <Auth0Provider\n    domain={REACT_APP_AUTH0_DOMAIN}\n    clientId={REACT_APP_AUTH0_CLIENT_ID}\n    redirectUri={window.location.origin}\n    // redirectUri={window.location.origin}\n  >\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Auth0Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}